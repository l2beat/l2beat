name: Smoke Test

on:
  pull_request:
  push:
    branches:
      - master
      - main
  merge_group:

jobs:
  # We cannot reference secrets in the if condition, so we have to check
  # if the secret is set in a separate job using cross-job outputs
  check-heroku-api-key:
    name: Check prerequisites
    runs-on: ubuntu-latest
    outputs:
      heroku_key_set: ${{ steps.check_key.outputs.heroku_key_set }}
    env:
      HEROKU_ORGANIZATION: ${{ vars.HEROKU_ORG }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
    steps:
      - name: Check Heroku API key & organization
        id: check_key
        run: |
          if [ -z $HEROKU_API_KEYYYYY ] && [ -z $HEROKU_ORGANIZATION ]; then
            echo "heroku_key_set=false" >> "$GITHUB_OUTPUT"
            echo "❌ - Failed to meet the requirements, skipping the smoke test"
          else
            echo "heroku_key_set=true" >> "$GITHUB_OUTPUT"
            echo "✅ - Requirements met, proceeding with the smoke test"
          fi

  config-smoke-test:
    name: Config smoke test
    runs-on: ubuntu-latest
    needs: check-heroku-api-key
    if: needs.check-heroku-api-key.outputs.heroku_key_set == 'true'
    env:
      HEROKU_ORGANIZATION: ${{ vars.HEROKU_ORG }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile
        working-directory: packages/backend

      - name: Build packages
        run: yarn build:dependencies
        working-directory: packages/backend

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Pull staging configuration
        run: heroku config -a l2beat-staging --shell > .env
        working-directory: packages/backend

      # PORT variable is not present inside the dump and is assigned by Heroku at deployment time
      - name: Fill PORT variable
        run: echo "PORT=3000" >> .env
        working-directory: packages/backend

      - name: Run staging smoke test
        run: yarn test:config
        working-directory: packages/backend

      - name: Pull production configuration
        run: heroku config -a l2beat-production --shell > .env
        working-directory: packages/backend

      # PORT variable is not present inside the dump and is assigned by Heroku at deployment time
      - name: Fill PORT variable
        run: echo "PORT=3000" >> .env
        working-directory: packages/backend

      - name: Run production smoke test
        run: yarn test:config
        working-directory: packages/backend
