name: Deploy frontend prod

concurrency:
  group: frontend-deployment-prod
permissions: {}

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

jobs:
  cache-warmup:
    name: Run cache warmup
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      TURBO_REMOTE_CACHE_UPLOAD_TIMEOUT: 10
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build frontend dependencies
        run: pnpm build:dependencies:frontend

      - name: Run hot cache
        run: cd packages/frontend && pnpm hot-cache
        env:
          DATABASE_URL: ${{ secrets.PRODUCTION_DATABASE_URL }}

  deploy-frontend:
    name: Deploy frontend
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Install heroku CLI
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      - name: Login to heroku container registry
        uses: docker/login-action@v3
        with:
          username: "_"
          password: ${{ secrets.HEROKU_TOKEN }}
          registry: registry.heroku.com
      - name: Build and publish containers
        run: |
          docker build --push \
            --build-arg TURBO_TEAM=${TURBO_TEAM} \
            --build-arg TURBO_TOKEN=${TURBO_TOKEN} \
            -t ${TAG} -f ${DOCKERFILE} .
        env:
          DOCKERFILE: Dockerfile.frontend
          TAG: registry.heroku.com/${{ secrets.HEROKU_FRONTEND_PROD }}/web
          TURBO_TEAM: ${{ vars.TURBO_TEAM }}
          TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      - name: Release published container
        run: |
          heroku container:release -a ${{ secrets.HEROKU_FRONTEND_PROD }} -v web
        env:
          HEROKU_ORGANIZATION: ${{ vars.HEROKU_ORG }}
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
