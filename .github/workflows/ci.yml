name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - main
  merge_group:

jobs:
  build-backend:
    name: Build backend container image
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Build container
        uses: docker/build-push-action@v5
        with:
          push: false
          file: Dockerfile.backend

  build-frontend:
    name: Build frontend
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build frontend
        run: yarn build:frontend

  build-protocolbeat:
    name: Build protocolbeat
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build protocolbeat
        run: yarn build:protocolbeat

  typecheck:
    name: Typecheck
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Typecheck
        run: yarn typecheck

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}
      COINGECKO_API_KEY: ${{ secrets.COINGECKO_API_KEY }}
      TEST_DB_URL: postgresql://postgres:postgres@localhost:5432/postgres
      CONFIG_ALCHEMY_API_KEY: ${{ secrets.CONFIG_ALCHEMY_API_KEY }}
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Test
        run: yarn test --reporter min

  biome:
    name: Lint & Format
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Biome CLI
        uses: biomejs/setup-biome@v2

      - name: Run Biome
        run: ls packages/ | xargs -n 1 -I {} -- sh -c 'biome ci --config-path=packages/{} packages/{}'

  config-smoke-test:
    name: Config smoke test
    runs-on: ubuntu-latest
    env:
      HEROKU_ORGANIZATION: ${{ vars.HEROKU_ORG }}
      HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Build packages
        run: yarn build:dependencies

      - name: Instal Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Navigate to the backend directory
        run: cd packages/backend

      - name: Pull staging configuration
        run: heroku config -a l2beat-staging --shell > .env

      # PORT variable is not present inside the dump and is assigned by Heroku at deployment time
      - name: Fill PORT variable
        run: echo "PORT=3000" >> .env

      - name: Run staging smoke test
        run: yarn test:config

      - name: Pull production configuration
        run: heroku config -a l2beat-production --shell > .env

      # PORT variable is not present inside the dump and is assigned by Heroku at deployment time
      - name: Fill PORT variable
        run: echo "PORT=3000" >> .env

      - name: Run production smoke test
        run: yarn test:config
