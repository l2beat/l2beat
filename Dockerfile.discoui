ARG COREPACK_VERSION="^0.31.0"
ARG TURBO_TEAM
ARG TURBO_TOKEN

# Use explicit hash for better caching
FROM node:22 AS pruner
ARG COREPACK_VERSION
ARG TURBO_TEAM
ARG TURBO_TOKEN
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"

# Set corepack and pnpm environment first
RUN npm i -g corepack@${COREPACK_VERSION} && corepack enable pnpm
WORKDIR /src/
COPY . .
# Create turbo auth in separate layer
RUN pnpm add -g turbo
RUN turbo prune --docker @l2beat/l2b

# ---------------------------
FROM node:22 AS builder
ARG COREPACK_VERSION
ARG TURBO_TEAM
ARG TURBO_TOKEN

# Configure environment
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV VITE_READONLY=true
WORKDIR /src

# Install turbo in builder stage
RUN npm i -g corepack@${COREPACK_VERSION} && corepack enable pnpm

# Copy package files first for better caching
COPY --from=pruner /src/out/json/ .
COPY --from=pruner /src/pnpm-lock.yaml .

# Install dependencies with frozen lockfile
RUN pnpm install --frozen-lockfile

# Copy remaining files
COPY --from=pruner /src/out/full/ .
COPY --from=pruner /src/.discovery.json .

# Build application
RUN pnpm build

WORKDIR packages/l2b/
RUN node cli.js fetch-flat-sources -q -y
WORKDIR ../..

# ---------------------------
FROM node:22-slim AS release

# Security: Run as non-root user
RUN useradd -m appuser
WORKDIR /app
COPY --from=builder --chown=appuser:appuser /src .

USER appuser

CMD ["node", "packages/l2b/dist/cli.js", "ui", "--readonly"]
