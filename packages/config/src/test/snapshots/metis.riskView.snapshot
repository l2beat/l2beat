// metis riskView didn't change 1

{
  dataAvailability: {
    definingMetric: -Infinity
    description: "Transaction data is kept in MEMO decentralized storage."
    sentiment: "bad"
    value: "External (MEMO)"
  }
  destinationToken: {
    description: "METIS transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain."
    sentiment: "good"
    value: "Native & Canonical"
  }
  exitWindow: {
    definingMetric: 0
    description: "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
    secondLine: undefined
    sentiment: "bad"
    value: "None"
  }
  proposerFailure: {
    definingMetric: -Infinity
    description: "Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen."
    sentiment: "bad"
    value: "Cannot withdraw"
  }
  sequencerFailure: {
    description: "Users can submit transactions to an L1 queue, but can't force them. The sequencer cannot selectively skip transactions but can stop processing the queue entirely. In other words, if the sequencer censors or is down, it is so for everyone."
    sentiment: "warning"
    sources: [
      {
        contract: "CanonicalTransactionChain"
        references: [
          "https://etherscan.io/address/0x56a76bcC92361f6DF8D75476feD8843EdC70e1C9#code#F1#L212"
        ]
      }
    ]
    value: "Enqueue via L1"
  }
  stateValidation: {
    definingMetric: -Infinity
    description: "Currently the system permits invalid state roots. More details in project overview."
    secondLine: "7d challenge period"
    sentiment: "bad"
    value: "None"
  }
  validatedBy: {
    description: "Smart contracts on Ethereum validate all bridge transfers."
    sentiment: "good"
    value: "Ethereum"
  }
}
