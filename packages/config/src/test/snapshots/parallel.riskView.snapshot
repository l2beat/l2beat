// parallel riskView didn't change 1

{
  dataAvailability: {
    definingMetric: Infinity
    description: "All of the data needed for proof construction is published on Ethereum L1."
    sentiment: "good"
    value: "Onchain"
  }
  destinationToken: {
    description: "ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain."
    sentiment: "good"
    value: "Native & Canonical"
  }
  exitWindow: {
    definingMetric: -172800
    description: "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
    secondLine: undefined
    sentiment: "bad"
    value: "None"
  }
  proposerFailure: {
    definingMetric: 1068216
    description: "Anyone can become a Proposer after 12d 8h of inactivity from the currently whitelisted Proposers."
    secondLine: "12d 8h delay"
    sentiment: "good"
    value: "Self propose"
  }
  sequencerFailure: {
    definingMetric: 172800
    description: "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There is a 2d delay on this operation."
    secondLine: "2d delay"
    sentiment: "good"
    value: "Self sequence"
  }
  stateValidation: {
    definingMetric: 1
    description: "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d challenge period."
    secondLine: "6d challenge period"
    sentiment: "bad"
    value: "Fraud proofs (INT)"
  }
  validatedBy: {
    description: "Smart contracts on Ethereum validate all bridge transfers."
    sentiment: "good"
    value: "Ethereum"
  }
}
