// deri riskView didn't change 1

{
  dataAvailability: {
    definingMetric: Infinity
    description: "All of the data needed for proof construction is published on the base chain, which ultimately gets published on Ethereum."
    sentiment: "good"
    value: "Onchain"
  }
  exitWindow: {
    definingMetric: -86400
    description: "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
    secondLine: undefined
    sentiment: "bad"
    value: "None"
  }
  proposerFailure: {
    definingMetric: 636216
    description: "Anyone can become a Proposer after 7d 8h of inactivity from the currently whitelisted Proposers."
    secondLine: "7d 8h delay"
    sentiment: "good"
    value: "Self propose"
  }
  sequencerFailure: {
    definingMetric: 86400
    description: "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There is a 1d delay on this operation."
    secondLine: "1d delay"
    sentiment: "good"
    value: "Self sequence"
  }
  stateValidation: {
    definingMetric: 1
    description: "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 1d challenge period."
    secondLine: "1d challenge period"
    sentiment: "bad"
    value: "Fraud proofs (INT)"
  }
}

// deri stackedRiskView didn't change 1

{
  dataAvailability: {
    definingMetric: Infinity
    description: "All of the data needed for proof construction is published on Ethereum L1."
    sentiment: "good"
    value: "Onchain"
  }
  exitWindow: {
    definingMetric: -86400
    description: "There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable."
    secondLine: undefined
    sentiment: "bad"
    value: "None"
  }
  proposerFailure: {
    definingMetric: 1735848
    description: "Anyone can become a Proposer after 20d 2h of inactivity from the currently whitelisted Proposers."
    sentiment: "good"
    value: "Self propose"
  }
  sequencerFailure: {
    definingMetric: 172800
    description: "In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There is a 2d delay on this operation."
    sentiment: "good"
    value: "Self sequence"
  }
  stateValidation: {
    definingMetric: 1
    description: "No actor outside of the single Proposer can submit fraud proofs. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 1d challenge period."
    secondLine: "1d challenge period"
    sentiment: "bad"
    value: "Fraud proofs (INT)"
  }
}
