{
  "$schema": "../../../../discovery/schemas/config.v2.schema.json",
  "name": "zksync2",
  "import": ["../globalConfig.jsonc"],
  "initialAddresses": [
    "eth:0x32400084C286CF3E17e7B677ea9583e60a000324",
    "eth:0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063",
    "eth:0x41527B2d03844dB6b0945f25702cB958b6d55989",
    "gateway:0xCE7CBd23193d029410b40e0fD8a79a5121f9250C", // zksync diamond
    "gateway:0x0000000000000000000000000000000000010002" // bridgehub
  ],
  "sharedModules": ["shared-zk-stack", "gateway"],
  "names": {
    "eth:0x32400084C286CF3E17e7B677ea9583e60a000324": "ZKsync",
    "eth:0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063": "L1ERC20Bridge",
    "eth:0x41527B2d03844dB6b0945f25702cB958b6d55989": "L1ERC20Bridge_wstETH",
    "gateway:0xF41EcA3047B37dc7d88849de4a4dc07937Ad6bc4": "ProtocolUpgradeHandler_l2Alias",
    "gateway:0x3E04Bd6a9056b39999f3883955E183F655346174": "EraChainAdminProxy_l2Alias",
    "gateway:0xe279aF77D3C1685022641ffE1b9b538c5eA0Ae24": "ZKsyncValidatorTimelock" // needed bc we have multiple VTL
  },
  "overrides": {
    "eth:0xFe94B8AEB7950a26C276EA615a6d3C7289Fd2ac3": {
      // chainAdminOwnable
      "fields": {
        "owner": {
          // TODO: the template has an act permission which gets lost because the owner is part of a shared module, so we override here
        }
      }
    },
    "gateway:0xe279aF77D3C1685022641ffE1b9b538c5eA0Ae24": {
      // validatorTimelock
      "fields": {
        "validatorVTL": {
          // assuming the executor has all the roles, change if not the case
          "handler": {
            "type": "crossChainAccessControl",
            "pickChainAddress": "gateway:0xCE7CBd23193d029410b40e0fD8a79a5121f9250C"
          },
          "permissions": [{ "type": "validateZkStack" }]
        }
      }
    },
    "gateway:0xCE7CBd23193d029410b40e0fD8a79a5121f9250C": {
      // template override
      "ignoreMethods": [
        "getBaseToken", // this one reverts on the gateway
        "storedBlockHash",
        "storedBatchHash",
        "l2LogsRootHash",
        "getName",
        "prepareChainCommitment"
      ]
    },
    "eth:0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063": {
      // L1ERC20Bridge
      "category": "bridge-canonical",
      "description": "Legacy bridge for depositing ERC20 tokens to ZKsync Era. Forwards deposits and withdrawals to the BridgeHub.",
      "ignoreRelatives": ["l2Bridge", "l2TokenBeacon"]
    },
    "eth:0x41527B2d03844dB6b0945f25702cB958b6d55989": {
      // L1ERC20Bridge_wstETH
      "category": "bridge-external",
      "description": "Bridge for depositing wrapped stETH (Lido) to ZKsync Era. These deposits and withdrawals do not go through the shared Bridge.",
      "ignoreRelatives": [
        "l1Token",
        "l2Token",
        "l2Bridge",
        "l2TokenAddress",
        "proxy__getAdmin"
      ]
    },
    "gateway:0x0000000000000000000000000000000000000000": {
      "ignoreDiscovery": true
    },
    "eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c": {
      // LidoAgent
      "ignoreDiscovery": true
    }
  }
}
