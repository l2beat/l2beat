{
  "$schema": "../../../../../discovery/schemas/config.v2.schema.json",
  "chain": "ethereum",
  "name": "omni",
  "import": ["../../ethereumConfig.jsonc"],
  "initialAddresses": [
    "0x88ad09518695c6c3712AC10a214bE5109a655671", // ForeignOmnibridge
    "0x7606e9d8655e48159E7beC8541C2E71A7Aa3E418", // LayerZero Adapter for Hashi
    "0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016" // SdaiForeignBridge
  ],
  "overrides": {
    "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43": {
      // sub MS
      "category": "spam"
    },
    "0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016": {
      // XDaiForeignBridge
      "category": "core",
      "description": "Token bridge implementation and escrow for DAI-related tokens. Escrowed Dai can be invested in the Spark protocol for sDai.",
      "displayName": "DaiForeignBridge",
      "proxyType": "Eternal Storage proxy",
      "ignoreRelatives": [
        "compToken",
        "cDaiToken",
        "sDaiToken",
        "erc20token",
        "daiToken"
      ],
      "ignoreMethods": [
        "totalExecutedPerDay",
        "totalSpentPerDay",
        "withinExecutionLimit",
        "withinLimit",
        "getCurrentDay"
      ],
      "ignoreInWatchMode": ["maxAvailablePerTx", "nonce"],
      "fields": {
        "validatorContract": {
          "permissions": [
            {
              "type": "validateBridge3"
            }
          ]
        },
        "owner": {
          "permissions": [
            {
              "type": "interact",
              "description": "change all critical configurations like fees, yield farming for escrowed funds, limits, validating contract references."
            }
          ]
        }
      }
    },
    "0xe1579dEbdD2DF16Ebdb9db8694391fa74EeA201E": {
      // BridgeValidators dai
      "description": "Custom Multisignature contract for Validators.",
      "displayName": "BridgeValidators_DAI",
      "proxyType": "Eternal Storage proxy"
    },
    "0x9acCFAD714A1e670CD1f6dc666FE892d1d5547BD": {
      // HashiManager dai
      "displayName": "HashiManager_DAI",
      "proxyType": "Eternal Storage proxy"
    },
    "0x7606e9d8655e48159E7beC8541C2E71A7Aa3E418": {
      // LayerZero Adapter for Hashi
      "ignoreRelatives": ["LAYER_ZERO_ENDPOINT", "endpoint"]
    },
    "0x93f6eE78451AaCc1Db1db49a12aBfCc4662B9Cc9": {
      // HashiManager omni
      "displayName": "HashiManager_Omni",
      "proxyType": "Eternal Storage proxy"
    },
    "0x88ad09518695c6c3712AC10a214bE5109a655671": {
      // ForeignOmnibridge
      "category": "core",
      "description": "Token bridge implementation and escrow for ERC-20 tokens.",
      "proxyType": "Eternal Storage proxy",
      "ignoreMethods": ["getCurrentDay"],
      "fields": {
        "owner": {
          "permissions": [
            {
              "type": "interact",
              "description": "change all critical configurations like yield farming for escrowed funds and limits."
            }
          ]
        }
      }
    },
    "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e": {
      // ForeignAMB
      "category": "core",
      "description": "Arbitrary Message Bridge validated by the BridgeValidators. Can be used for token bridges or any other cross-chain messaging.",
      "proxyType": "Eternal Storage proxy",
      "fields": {
        "validatorContract": {
          "permissions": [
            {
              "type": "validateBridge3"
            }
          ]
        },
        "owner": {
          "permissions": [
            {
              "type": "interact",
              "description": "change external validation logic refered to by this contract (e.g. Hashi)."
            }
          ]
        }
      }
    },
    "0xed84a648b3c51432ad0fD1C2cD2C45677E9d4064": {
      // BridgeValidators omni
      "displayName": "BridgeValidators_Omni",
      "proxyType": "Eternal Storage proxy"
    }
  }
}
