{
  "name": "omni",
  "chain": "ethereum",
  "blockNumber": 22123489,
  "configHash": "0xe442f2fcf7dd673eb5cd335dbf92359cc49bbc9175e475c5736ff92c6fcf5467",
  "entries": [
    {
      "address": "0x0577FEC70907676039f7DAF961F8A44bda3Ea9Af",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x105CD22eD3D089Bf5589C59b452f9dE0796Ca52d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x112c737AeEbD2E52DEb9ff5c9c19497F1A1777b0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "EndpointV2",
      "address": "0x1a44076050125825900e736c501f859c50fE728c",
      "type": "Contract",
      "sourceHashes": [
        "0x399160e7d36a21fca31097d7875daed8f421f788b77f2a71974d51938c3ea520"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1706307671,
      "sinceBlock": 19093715,
      "values": {
        "$immutable": true,
        "blockedLibrary": "0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
        "eid": 30101,
        "EMPTY_PAYLOAD_HASH": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getRegisteredLibraries": [
          "0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
          "0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
          "0xc02Ab410f0734EFa3F14628780e6e695156024C2",
          "0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D"
        ],
        "getSendContext": [0, "0x0000000000000000000000000000000000000000"],
        "isSendingMessage": false,
        "lzToken": "0x0000000000000000000000000000000000000000",
        "nativeToken": "0x0000000000000000000000000000000000000000",
        "NIL_PAYLOAD_HASH": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "owner": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92"
      },
      "derivedName": "EndpointV2"
    },
    {
      "name": "BlockedMessageLib",
      "address": "0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
      "type": "Contract",
      "sourceHashes": [
        "0xf00c4e5b1b0f8da8f50ec8b06aa9f6c7275c5f03398e8b607c0ed093e7c4fe40"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1706307671,
      "sinceBlock": 19093715,
      "values": {
        "$immutable": true,
        "messageLibType": 2,
        "version": {
          "major": "18446744073709551615",
          "minor": 255,
          "endpointVersion": 2
        }
      },
      "derivedName": "BlockedMessageLib"
    },
    {
      "address": "0x258667E543C913264388B33328337257aF208a8f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Yaru",
      "address": "0x30f64a297cc66a873FB603d1e89D5891962C25ba",
      "type": "Contract",
      "sourceHashes": [
        "0x08b3a970ed97adf129059abd1030e73ebd6904533643bd35cfce0459bf3a0641"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1726020995,
      "sinceBlock": 20724328,
      "values": {
        "$immutable": true,
        "HASHI": "0xA86bc62Ac53Dc86687AB6C15fdebC71ad51fB615",
        "SOURCE_CHAIN_ID": 100,
        "YAHO": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8"
      },
      "derivedName": "Yaru"
    },
    {
      "address": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x93f6eE78451AaCc1Db1db49a12aBfCc4662B9Cc9"
        }
      ]
    },
    {
      "address": "0x329c54289Ff5D6B7b7daE13592C6B1EDA1543eD4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x3e0A20099626F3d4d4Ea7B0cE0330e88d1Fe65D6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OmniBridgeGovernance",
      "address": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xd5a33441170541b7df25812e0e3dff6562b2f09ab835a6b431cb9e7198a47605",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e"
        },
        {
          "permission": "upgrade",
          "from": "0x88ad09518695c6c3712AC10a214bE5109a655671"
        },
        {
          "permission": "upgrade",
          "from": "0xed84a648b3c51432ad0fD1C2cD2C45677E9d4064"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1600956399,
      "sinceBlock": 10925774,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43",
          "0xb8173f558f75EE263013fd6294177bf75279a21e",
          "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
          "0xf59E447E97bC03c2B0C5719e2E551F0B15b724e5",
          "0xA07888742c18d7e658132AE0148fF205fFF46481",
          "0x329c54289Ff5D6B7b7daE13592C6B1EDA1543eD4",
          "0xcF9ebF877688Ed88a7479A6e63457Fd78D4275cE",
          "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893",
          "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8",
          "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
          "0xd945325557f1FB4374fBf10Ae86D385632Df870A",
          "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
          "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
          "0xb2a33ae0E07fD2ca8DBdE9545F6ce0b3234dc4e8",
          "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
          "0x544cE64C3Fc6Da72CEB2456CC4cF19E7c7972eFA"
        ],
        "$threshold": 8,
        "domainSeparator": "0x877c70937e5670b3f50eb943a4e9d65fbd9bc8ce060659a7dc0543885a0ca59e",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "8 of 16 (50%)",
        "nonce": 85,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "address": "0x459A3bd49F1ff109bc90b76125533699AaAAf9A6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x4743BA328C28dbC2b8B4e083b92cB4baA047494b",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1686042107,
      "sinceBlock": 17420395,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xD1aA7F557af9cC5Ba4Daf87D923d712fdAf1D709",
          "0x4743BA328C28dbC2b8B4e083b92cB4baA047494b",
          "0x52F05Eff62fC36c83d840D9684daCAD3be43D8bf"
        ],
        "$threshold": 2,
        "domainSeparator": "0xaee10730379a3d6df2303789b1843342698bd85d618cdf13a5f75b84e16d88eb",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 20,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "ForeignAMB",
      "address": "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e",
      "type": "Contract",
      "sourceHashes": [
        "0xc2d647dd43d1a5c348b27b8b2bd671627d194c85cb69a865e67ae8dbdf38b705",
        "0xd9dd29f51753144909a424e20a1281bc15263ea2de2f5f028666b183b00d5fc3"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
          "via": []
        }
      ],
      "sinceTimestamp": 1579258532,
      "sinceBlock": 9298324,
      "values": {
        "$admin": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "$implementation": "0x098f51bdfb5D6d319DD4FDf06b64773d25bD1316",
        "$pastUpgrades": [
          [
            "2020-01-17T10:56:41.000Z",
            "0x16056cbaad7fb4412c05b045351e3c9f62215cd6ffc867a59ac1db8f7a5092cf",
            ["0xe804Fe5Fb14B02aba636f37Fb6E1c7a08b2f4B16"]
          ],
          [
            "2020-07-06T21:51:30.000Z",
            "0x4401dfe716f0d2cfa06849f179b07cc7783caaea862dc10839a331aa7ad10ab3",
            ["0x2946f6D458F8Cf8723A1d9e95043831D3937461e"]
          ],
          [
            "2020-08-02T22:22:52.000Z",
            "0xd0b4d072c9581c7cbbb900287a915e644d0d9c2f3fc8d19cf6ab1424037388b4",
            ["0x54c6dFBB807BE694841A0F1B84CbC49D8FC98ed7"]
          ],
          [
            "2020-12-06T21:52:03.000Z",
            "0x0508a2fb3129be470493478041780a59632d56a5fb131ec1c11b23702a904d7e",
            ["0x872796bf7Fe754754d2BEE2c66D7de9B04a5C943"]
          ],
          [
            "2021-10-04T11:04:06.000Z",
            "0x41b432a66ed945c9d33c0e77de7e9523bb216e421b27b8f3e4e8dbef34b4f5cd",
            ["0x82B67a43b69914E611710C62e629dAbB2f7AC6AB"]
          ],
          [
            "2024-09-23T08:55:47.000Z",
            "0x3ef23ae6e10cbe0bf6b08df489a829047fa8d1376f2aa2f079cdce9a9342d086",
            ["0x098f51bdfb5D6d319DD4FDf06b64773d25bD1316"]
          ]
        ],
        "$upgradeCount": 6,
        "allowReentrantRequests": false,
        "decimalShift": 0,
        "deployedAtBlock": 9298331,
        "destinationChainId": 100,
        "gasPrice": 10000000000,
        "getBridgeInterfacesVersion": { "major": 6, "minor": 2, "patch": 0 },
        "getBridgeMode": "0x2544fbb9",
        "HASHI_IS_ENABLED": true,
        "HASHI_IS_MANDATORY": false,
        "hashiManager": "0x93f6eE78451AaCc1Db1db49a12aBfCc4662B9Cc9",
        "implementation": "0x098f51bdfb5D6d319DD4FDf06b64773d25bD1316",
        "isInitialized": true,
        "maxGasPerTx": 4000000,
        "messageId": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "messageSender": "0x0000000000000000000000000000000000000000",
        "messageSourceChainId": 0,
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "requiredBlockConfirmations": 175,
        "requiredSignatures": 4,
        "sourceChainId": 1,
        "transactionHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "upgradeabilityOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "validatorContract": "0xed84a648b3c51432ad0fD1C2cD2C45677E9d4064",
        "version": 6
      },
      "derivedName": "ForeignAMB"
    },
    {
      "address": "0x52F05Eff62fC36c83d840D9684daCAD3be43D8bf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x544cE64C3Fc6Da72CEB2456CC4cF19E7c7972eFA",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Treasury",
      "address": "0x5ebB3f2feaA15271101a927869B3A56837e73056",
      "type": "Contract",
      "sourceHashes": [
        "0x79f573a9d94def8dc0b4319d44595f806685b0ca5875891eff1ed40a9ff6b6e0"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1706307779,
      "sinceBlock": 19093724,
      "values": {
        "$immutable": true,
        "lzTokenEnabled": false,
        "lzTokenFee": 0,
        "nativeBP": 0,
        "owner": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92"
      },
      "derivedName": "Treasury"
    },
    {
      "address": "0x5eD64f02588C8B75582f2f8eFd7A5521e3F897CC",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "HashiOwnerMS",
      "address": "0x670a3e447F4DE92C012777Ac5591D81E12aD0957",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1729072343,
      "sinceBlock": 20977347,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0xeca6EAa2C77d8f0aA9247e681C64455deAae51aC",
          "0x0577FEC70907676039f7DAF961F8A44bda3Ea9Af",
          "0xB1dD1828794075f7521365163A93DE9e68e3c49f",
          "0x9bd93c5ad5e0a6be890c82FD77eE42ce8B642eF8"
        ],
        "$threshold": 2,
        "domainSeparator": "0x55fd33e1f6d651168aaf544b6f7a3e8b59f3673b8dfdef28e13b9053b118aa40",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 4 (50%)",
        "nonce": 5,
        "VERSION": "1.4.1"
      },
      "derivedName": "Safe"
    },
    {
      "address": "0x674c97db4cE6caC04A124d745979f3E4cBa0E9f0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x67E5855Aa4D5786c086b7FC6B4203a5Ea50E93F8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "TokenFactory",
      "address": "0x71d5ba4e37de72415F685490B684538Aae8f0424",
      "type": "Contract",
      "sourceHashes": [
        "0xc3fc18a2178145d16d7d8d6b50d97b6d7a405421b3fae66cdeb31fb52f4e7eed"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1634280699,
      "sinceBlock": 13421129,
      "values": {
        "$immutable": true,
        "getModuleInterfacesVersion": { "major": 1, "minor": 0, "patch": 0 },
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "tokenImage": "0x7c24d0061b484B267F286aa2DCe891220Db254b3"
      },
      "derivedName": "TokenFactory"
    },
    {
      "address": "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ReadLib1002",
      "address": "0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D",
      "type": "Contract",
      "sourceHashes": [
        "0xf7800be6fd99520201da1404c35bac8a1ed826bbc2134f0a77547e0d7a74c9c1"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1730488859,
      "sinceBlock": 21094853,
      "values": {
        "$immutable": true,
        "getTreasuryAndNativeFeeCap": [
          "0x0000000000000000000000000000000000000000",
          450000000000000
        ],
        "messageLibType": 2,
        "owner": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92",
        "version": { "major": 10, "minor": 0, "endpointVersion": 2 }
      },
      "derivedName": "ReadLib1002"
    },
    {
      "name": "LayerZeroAdapter",
      "address": "0x7606e9d8655e48159E7beC8541C2E71A7Aa3E418",
      "type": "Contract",
      "sourceHashes": [
        "0xfe0e5c810459ca8daab7faf04bce3cf62afcbce5c1feb22e05e5b989136d1b32"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1727855615,
      "sinceBlock": 20876445,
      "values": {
        "$immutable": true,
        "endpoint": "0x1a44076050125825900e736c501f859c50fE728c",
        "LAYER_ZERO_ENDPOINT": "0x1a44076050125825900e736c501f859c50fE728c",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 1 },
        "owner": "0x67E5855Aa4D5786c086b7FC6B4203a5Ea50E93F8",
        "PROVIDER": "layer-zero"
      },
      "derivedName": "LayerZeroAdapter"
    },
    {
      "address": "0x771dcAcB96024d1e55Fd21Fe8a8187AA7EC9e77e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "PermittableToken",
      "address": "0x7c24d0061b484B267F286aa2DCe891220Db254b3",
      "type": "Contract",
      "sourceHashes": [
        "0x064c46a3015079f17e93b171ff684cda28a0ecdbd55ecec09c4ddf50e0a5c312"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1634280299,
      "sinceBlock": 13421099,
      "values": {
        "$immutable": true,
        "bridgeContract": "0x0000000000000000000000000000000000000000",
        "decimals": 0,
        "DOMAIN_SEPARATOR": "0xcaa93cb1b6b7dc5661966ae0c34c78b2bb3aea8cc828a3690fdf9dec64932930",
        "getTokenInterfacesVersion": { "major": 2, "minor": 5, "patch": 0 },
        "mintingFinished": false,
        "name": "",
        "owner": "0xBF3d6f830CE263CAE987193982192Cd990442B53",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "PERMIT_TYPEHASH_LEGACY": "0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb",
        "symbol": "",
        "totalSupply": 0,
        "version": "1"
      },
      "derivedName": "PermittableToken"
    },
    {
      "address": "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "AAVEInterestERC20",
      "address": "0x87D48c565D0D85770406D248efd7dc3cbd41e729",
      "type": "Contract",
      "sourceHashes": [
        "0xe9dafd12a790c5d8c0d3d444fdcfe8d4a6eed9555ba260f7ac7aa5590fba07ca"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1634281216,
      "sinceBlock": 13421159,
      "values": {
        "$immutable": true,
        "aaveReceiver": "0x5eD64f02588C8B75582f2f8eFd7A5521e3F897CC",
        "getModuleInterfacesVersion": { "major": 1, "minor": 0, "patch": 0 },
        "incentivesController": "0xd784927Ff2f95ba542BfC824c8a8a98F3495f6b5",
        "lendingPool": "0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9",
        "mediator": "0x88ad09518695c6c3712AC10a214bE5109a655671",
        "minAavePaid": "1000000000000000000",
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "stkAAVEToken": "0x4da27a545c0c5B758a6BA100e3a049001de870f5"
      },
      "derivedName": "AAVEInterestERC20"
    },
    {
      "name": "ForeignOmnibridge",
      "address": "0x88ad09518695c6c3712AC10a214bE5109a655671",
      "type": "Contract",
      "sourceHashes": [
        "0xc2d647dd43d1a5c348b27b8b2bd671627d194c85cb69a865e67ae8dbdf38b705",
        "0xb84afd7276ac99834f5104f7c4f890572ffc31fadd9629aabd82017025e7ada2"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
          "via": []
        }
      ],
      "sinceTimestamp": 1596501090,
      "sinceBlock": 10590093,
      "values": {
        "$admin": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "$implementation": "0x8eB3b7D8498a6716904577b2579e1c313d48E347",
        "$pastUpgrades": [
          [
            "2020-08-04T00:31:58.000Z",
            "0xb389acafc31832156fe9bca8d22b47ef91396dd7661d4c318b6de25bc11b4694",
            ["0x280f04a988513610584057Bf3fDE1f56f4d22CA9"]
          ],
          [
            "2020-08-22T21:44:00.000Z",
            "0x11417a1a4415db5eca2fadc6b2b5d0df882c7d731a1e7252ce10d98e0cfe6d9d",
            ["0x4B86181abcAeFc008B561E27C0aee64Bb5eB8dBe"]
          ],
          [
            "2020-08-27T21:37:25.000Z",
            "0xc54efc1f3d91454efd7957372f2fa4421f545b9a9e56eb4240000496b7a52177",
            ["0x5275e7264AB0Bb75D970E7442De0Aadd0C0b85ae"]
          ],
          [
            "2020-12-06T21:53:07.000Z",
            "0xf8b984ed23d53276bcf228d3f114d5e2d982887d5d5941f900e066003eeeb361",
            ["0xB0a18F960221c6D56871c29e5dD7b838E79c2E94"]
          ],
          [
            "2021-03-15T12:56:56.000Z",
            "0x50ec5688352357ed3c2ad7f4913dbc005a04e44528ccc7101a4457d58610947d",
            ["0x7bFF37bda2318125C6B895d4f2B50Bcd9E0cC40e"]
          ],
          [
            "2021-10-15T18:59:03.000Z",
            "0x0fa2767b8bd06816aef104d1a04362f06aba8c814e1444c08838db0973ace594",
            ["0x8eB3b7D8498a6716904577b2579e1c313d48E347"]
          ]
        ],
        "$upgradeCount": 6,
        "bridgeContract": "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e",
        "getBridgeInterfacesVersion": { "major": 3, "minor": 3, "patch": 1 },
        "getBridgeMode": "0xb1516c26",
        "implementation": "0x8eB3b7D8498a6716904577b2579e1c313d48E347",
        "isInitialized": true,
        "mediatorContractOnOtherSide": "0xf6A78083ca3e2a662D6dd1703c939c8aCE2e268d",
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "requestGasLimit": 2000000,
        "tokenFactory": "0x71d5ba4e37de72415F685490B684538Aae8f0424",
        "upgradeabilityOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "version": 6
      },
      "derivedName": "ForeignOmnibridge"
    },
    {
      "name": "HashiManager",
      "address": "0x93f6eE78451AaCc1Db1db49a12aBfCc4662B9Cc9",
      "type": "Contract",
      "sourceHashes": [
        "0xc2d647dd43d1a5c348b27b8b2bd671627d194c85cb69a865e67ae8dbdf38b705",
        "0x824f58e3acf3f9403dc26549af4869336347109f24d07d82aa11897bed907b17"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
          "via": []
        }
      ],
      "sinceTimestamp": 1726023347,
      "sinceBlock": 20724523,
      "values": {
        "$admin": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
        "$implementation": "0x159B36Ed5BA327fd269Fb93c75918257DCfe686d",
        "$pastUpgrades": [
          [
            "2024-09-11T02:56:11.000Z",
            "0x69c009512506e9271ad25755cb5b08957bfdae68032d37fb696ce69c89c70bc0",
            ["0x159B36Ed5BA327fd269Fb93c75918257DCfe686d"]
          ]
        ],
        "$upgradeCount": 1,
        "adapters": ["gnosis:0xCEb436489e9C6d9E4Db76145A6CCE2a06411ea0A"],
        "AdaptersFromStorage": "0x0000000000000000000000000000000000000000",
        "deployedAtBlock": 0,
        "expectedAdaptersHash": "0x6b603f4a7f51661e39122b2cc2745ffbc56eca92e59f655d365cd5170d930c0a",
        "expectedThreshold": 1,
        "implementation": "0x159B36Ed5BA327fd269Fb93c75918257DCfe686d",
        "isInitialized": true,
        "owner": "0x670a3e447F4DE92C012777Ac5591D81E12aD0957",
        "reporters": ["gnosis:0x0000000000000000000000000000000000000000"],
        "targetAddress": "gnosis:0x75Df5AF045d91108662D8080fD1FEFAd6aA0bb59",
        "targetChainId": 100,
        "threshold": 1,
        "upgradeabilityOwner": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
        "version": 1,
        "yaho": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8",
        "yaru": "0x30f64a297cc66a873FB603d1e89D5891962C25ba"
      },
      "fieldMeta": {
        "targetAddress": {
          "severity": "HIGH",
          "description": "Address of the target contract on GnosisChain"
        },
        "adapters": {
          "severity": "HIGH",
          "description": "Array of the adapters on GnosisChain"
        },
        "reporters": {
          "severity": "HIGH",
          "description": "Array of the reports on GnosisChain"
        },
        "threshold": {
          "severity": "HIGH",
          "description": "Threshold of the adapters on GnosisChain"
        }
      },
      "derivedName": "HashiManager",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "gnosis" } }
      ]
    },
    {
      "address": "0x9bd93c5ad5e0a6be890c82FD77eE42ce8B642eF8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xA07888742c18d7e658132AE0148fF205fFF46481",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Hashi",
      "address": "0xA86bc62Ac53Dc86687AB6C15fdebC71ad51fB615",
      "type": "Contract",
      "sourceHashes": [
        "0x43d4a4b8ebf5f34d224efe2343c5abc3fc5042025c06fb8dd82efc9257fbaa92"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1720770791,
      "sinceBlock": 20289052,
      "values": { "$immutable": true },
      "derivedName": "Hashi"
    },
    {
      "address": "0xB1dD1828794075f7521365163A93DE9e68e3c49f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xb2a33ae0E07fD2ca8DBdE9545F6ce0b3234dc4e8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xb8173f558f75EE263013fd6294177bf75279a21e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xB981a2664f5f547291Df5F8dCD4505f7015912CF",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Yaho",
      "address": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8",
      "type": "Contract",
      "sourceHashes": [
        "0x0a159de58bdd599af48d18d484a70a71f1038064d066e7e489b877721b866bcb"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1720772543,
      "sinceBlock": 20289197,
      "values": { "$immutable": true, "currentNonce": 15039 },
      "derivedName": "Yaho"
    },
    {
      "name": "SendUln302",
      "address": "0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
      "type": "Contract",
      "sourceHashes": [
        "0x159d8f84a5100285a7401e1ccb3d40a64fe944d9beb951c81749de40279a5876"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1706307839,
      "sinceBlock": 19093729,
      "values": {
        "$immutable": true,
        "messageLibType": 0,
        "owner": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92",
        "treasury": "0x5ebB3f2feaA15271101a927869B3A56837e73056",
        "version": { "major": 3, "minor": 0, "endpointVersion": 2 }
      },
      "derivedName": "SendUln302"
    },
    {
      "address": "0xbDc141c8D2343f33F40Cb9edD601CcF460CD0dDe",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xBF3d6f830CE263CAE987193982192Cd990442B53",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ReceiveUln302",
      "address": "0xc02Ab410f0734EFa3F14628780e6e695156024C2",
      "type": "Contract",
      "sourceHashes": [
        "0x3904c78c7b0abf91f9544ebb9f08f2d2bc83028df65c912a7f7a6ca1ca109dde"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1706307863,
      "sinceBlock": 19093731,
      "values": {
        "$immutable": true,
        "messageLibType": 1,
        "owner": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92",
        "version": { "major": 3, "minor": 0, "endpointVersion": 2 }
      },
      "derivedName": "ReceiveUln302"
    },
    {
      "address": "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1648243585,
      "sinceBlock": 14457816,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xB981a2664f5f547291Df5F8dCD4505f7015912CF",
          "0x112c737AeEbD2E52DEb9ff5c9c19497F1A1777b0",
          "0x771dcAcB96024d1e55Fd21Fe8a8187AA7EC9e77e",
          "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327",
          "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e"
        ],
        "$threshold": 3,
        "domainSeparator": "0x567922b7bf591eff89c84c8a0039bbda9499c5f39de9b1c4dde48a8c912f31b9",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 255,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "address": "0xcF9ebF877688Ed88a7479A6e63457Fd78D4275cE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xD1aA7F557af9cC5Ba4Daf87D923d712fdAf1D709",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xd945325557f1FB4374fBf10Ae86D385632Df870A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xeca6EAa2C77d8f0aA9247e681C64455deAae51aC",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BridgeValidators",
      "address": "0xed84a648b3c51432ad0fD1C2cD2C45677E9d4064",
      "type": "Contract",
      "sourceHashes": [
        "0xc2d647dd43d1a5c348b27b8b2bd671627d194c85cb69a865e67ae8dbdf38b705",
        "0x0ff53e04cc715e56805825c7eb45af72110792ad606dbfd4a97db98dfb75e6f7"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
          "via": []
        }
      ],
      "sinceTimestamp": 1579258396,
      "sinceBlock": 9298314,
      "values": {
        "$admin": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "$implementation": "0xD83893F31AA1B6B9D97C9c70D3492fe38D24d218",
        "$pastUpgrades": [
          [
            "2020-01-17T10:54:27.000Z",
            "0x78da167ac224bb9190c7cddd1d294be2bce23d1120a4e20de50641f2c60f7870",
            ["0xD83893F31AA1B6B9D97C9c70D3492fe38D24d218"]
          ]
        ],
        "$upgradeCount": 1,
        "deployedAtBlock": 9298321,
        "F_ADDR": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
        "getBridgeValidatorsInterfacesVersion": {
          "major": 2,
          "minor": 3,
          "patch": 0
        },
        "implementation": "0xD83893F31AA1B6B9D97C9c70D3492fe38D24d218",
        "isInitialized": true,
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "requiredSignatures": 4,
        "upgradeabilityOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "validatorCount": 7,
        "validatorList": [
          "0x3e0A20099626F3d4d4Ea7B0cE0330e88d1Fe65D6",
          "0xfA98B60E02A61B6590f073cAD56e68326652d094",
          "0xbDc141c8D2343f33F40Cb9edD601CcF460CD0dDe",
          "0x674c97db4cE6caC04A124d745979f3E4cBa0E9f0",
          "0x258667E543C913264388B33328337257aF208a8f",
          "0x459A3bd49F1ff109bc90b76125533699AaAAf9A6",
          "0x105CD22eD3D089Bf5589C59b452f9dE0796Ca52d"
        ],
        "version": 1
      },
      "fieldMeta": {
        "validatorList": {
          "severity": "MEDIUM",
          "description": "Array of the signers in the validator multisig",
          "type": "PERMISSION"
        }
      },
      "derivedName": "BridgeValidators"
    },
    {
      "address": "0xf59E447E97bC03c2B0C5719e2E551F0B15b724e5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xf6A78083ca3e2a662D6dd1703c939c8aCE2e268d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xfA98B60E02A61B6590f073cAD56e68326652d094",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
      "type": "EOA",
      "proxyType": "EOA"
    }
  ],
  "abis": {
    "0x098f51bdfb5D6d319DD4FDf06b64773d25bD1316": [
      "function transactionHash() view returns (bytes32)",
      "function sourceChainId() view returns (uint256)",
      "function HASHI_IS_MANDATORY() view returns (bool)",
      "function relayedMessages(bytes32 _txHash) view returns (bool)",
      "function safeExecuteSignaturesWithAutoGasLimit(bytes _data, bytes _signatures)",
      "function initialize(uint256 _sourceChainId, uint256 _destinationChainId, address _validatorContract, uint256 _maxGasPerTx, uint256 _gasPrice, uint256 _requiredBlockConfirmations, address _owner) returns (bool)",
      "function isInitialized() view returns (bool)",
      "function requiredBlockConfirmations() view returns (uint256)",
      "function executeSignatures(bytes _data, bytes _signatures)",
      "function failedMessageReceiver(bytes32 _messageId) view returns (address)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function setChainIds(uint256 _sourceChainId, uint256 _destinationChainId)",
      "function failedMessageSender(bytes32 _messageId) view returns (address)",
      "function allowReentrantRequests() view returns (bool)",
      "function messageId() view returns (bytes32 id)",
      "function claimTokens(address _token, address _to)",
      "function resendDataWithHashi(bytes data)",
      "function setMaxGasPerTx(uint256 _maxGasPerTx)",
      "function hashiManager() view returns (address)",
      "function HASHI_IS_ENABLED() view returns (bool)",
      "function requiredSignatures() view returns (uint256)",
      "function owner() view returns (address)",
      "function isApprovedByHashi(bytes32 hashMsg) view returns (bool)",
      "function validatorContract() view returns (address)",
      "function deployedAtBlock() view returns (uint256)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function messageSourceChainId() view returns (uint256 id)",
      "function setRequiredBlockConfirmations(uint256 _blockConfirmations)",
      "function destinationChainId() view returns (uint256)",
      "function setHashiManager(address _hashiManager)",
      "function setGasPrice(uint256 _gasPrice)",
      "function setAllowReentrantRequests(bool _enable)",
      "function messageCallStatus(bytes32 _messageId) view returns (bool)",
      "function onMessage(uint256, uint256 chainId, address sender, uint256 threshold, address[] adapters, bytes data) returns (bytes)",
      "function messageSender() view returns (address sender)",
      "function decimalShift() view returns (int256)",
      "function requireToPassMessage(address _contract, bytes _data, uint256 _gas) returns (bytes32)",
      "function failedMessageDataHash(bytes32 _messageId) view returns (bytes32)",
      "function maxGasPerTx() view returns (uint256)",
      "function safeExecuteSignaturesWithGasLimit(bytes _data, bytes _signatures, uint32 _gas)",
      "function safeExecuteSignatures(bytes _data, bytes _signatures)",
      "function transferOwnership(address newOwner)",
      "function gasPrice() view returns (uint256)",
      "event UserRequestForAffirmation(bytes32 indexed messageId, bytes encodedData)",
      "event RelayedMessage(address indexed sender, address indexed executor, bytes32 indexed messageId, bool status)",
      "event GasPriceChanged(uint256 gasPrice)",
      "event RequiredBlockConfirmationChanged(uint256 requiredBlockConfirmations)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0x159B36Ed5BA327fd269Fb93c75918257DCfe686d": [
      "function setExpectedThreshold(uint256 expectedThreshold_)",
      "function setYaho(address yaho_)",
      "function targetChainId() view returns (uint256)",
      "function setReportersAdaptersAndThreshold(address[] reporters, address[] adapters, uint256 threshold)",
      "function expectedThreshold() view returns (uint256)",
      "function isInitialized() view returns (bool)",
      "function threshold() view returns (uint256)",
      "function targetAddress() view returns (address)",
      "function adapters() view returns (address[])",
      "function yaru() view returns (address)",
      "function owner() view returns (address)",
      "function deployedAtBlock() view returns (uint256)",
      "function initialize(address _owner) returns (bool)",
      "function setTargetChainId(uint256 targetChainId_)",
      "function setYaru(address yaru_)",
      "function setExpectedAdaptersHash(address[] adapters_)",
      "function yaho() view returns (address)",
      "function reporters() view returns (address[])",
      "function expectedAdaptersHash() view returns (bytes32)",
      "function transferOwnership(address newOwner)",
      "function setTargetAddress(address targetAddress_)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0x1a44076050125825900e736c501f859c50fE728c": [
      "constructor(uint32 _eid, address _owner)",
      "error LZ_AlreadyRegistered()",
      "error LZ_ComposeExists()",
      "error LZ_ComposeNotFound(bytes32 expected, bytes32 actual)",
      "error LZ_DefaultReceiveLibUnavailable()",
      "error LZ_DefaultSendLibUnavailable()",
      "error LZ_InsufficientFee(uint256 requiredNative, uint256 suppliedNative, uint256 requiredLzToken, uint256 suppliedLzToken)",
      "error LZ_InvalidExpiry()",
      "error LZ_InvalidNonce(uint64 nonce)",
      "error LZ_InvalidPayloadHash()",
      "error LZ_InvalidReceiveLibrary()",
      "error LZ_LzTokenUnavailable()",
      "error LZ_OnlyNonDefaultLib()",
      "error LZ_OnlyReceiveLib()",
      "error LZ_OnlyRegisteredLib()",
      "error LZ_OnlyRegisteredOrDefaultLib()",
      "error LZ_OnlySendLib()",
      "error LZ_PathNotInitializable()",
      "error LZ_PathNotVerifiable()",
      "error LZ_PayloadHashNotFound(bytes32 expected, bytes32 actual)",
      "error LZ_SameValue()",
      "error LZ_SendReentrancy()",
      "error LZ_Unauthorized()",
      "error LZ_UnsupportedEid()",
      "error LZ_UnsupportedInterface()",
      "error LZ_ZeroLzTokenFee()",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event ComposeDelivered(address from, address to, bytes32 guid, uint16 index)",
      "event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message)",
      "event DefaultReceiveLibrarySet(uint32 eid, address newLib)",
      "event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry)",
      "event DefaultSendLibrarySet(uint32 eid, address newLib)",
      "event DelegateSet(address sender, address delegate)",
      "event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce)",
      "event LibraryRegistered(address newLib)",
      "event LzComposeAlert(address indexed from, address indexed to, address indexed executor, bytes32 guid, uint16 index, uint256 gas, uint256 value, bytes message, bytes extraData, bytes reason)",
      "event LzReceiveAlert(address indexed receiver, address indexed executor, tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, bytes32 guid, uint256 gas, uint256 value, bytes message, bytes extraData, bytes reason)",
      "event LzTokenSet(address token)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash)",
      "event PacketDelivered(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, address receiver)",
      "event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash)",
      "event PacketSent(bytes encodedPayload, bytes options, address sendLibrary)",
      "event PacketVerified(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, address receiver, bytes32 payloadHash)",
      "event ReceiveLibrarySet(address receiver, uint32 eid, address newLib)",
      "event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout)",
      "event SendLibrarySet(address sender, uint32 eid, address newLib)",
      "function EMPTY_PAYLOAD_HASH() view returns (bytes32)",
      "function NIL_PAYLOAD_HASH() view returns (bytes32)",
      "function blockedLibrary() view returns (address)",
      "function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash)",
      "function clear(address _oapp, tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message)",
      "function composeQueue(address from, address to, bytes32 guid, uint16 index) view returns (bytes32 messageHash)",
      "function defaultReceiveLibrary(uint32 srcEid) view returns (address lib)",
      "function defaultReceiveLibraryTimeout(uint32 srcEid) view returns (address lib, uint256 expiry)",
      "function defaultSendLibrary(uint32 dstEid) view returns (address lib)",
      "function delegates(address oapp) view returns (address delegate)",
      "function eid() view returns (uint32)",
      "function getConfig(address _oapp, address _lib, uint32 _eid, uint32 _configType) view returns (bytes config)",
      "function getReceiveLibrary(address _receiver, uint32 _srcEid) view returns (address lib, bool isDefault)",
      "function getRegisteredLibraries() view returns (address[])",
      "function getSendContext() view returns (uint32, address)",
      "function getSendLibrary(address _sender, uint32 _dstEid) view returns (address lib)",
      "function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) view returns (uint64)",
      "function inboundPayloadHash(address receiver, uint32 srcEid, bytes32 sender, uint64 inboundNonce) view returns (bytes32 payloadHash)",
      "function initializable(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver) view returns (bool)",
      "function isDefaultSendLibrary(address _sender, uint32 _dstEid) view returns (bool)",
      "function isRegisteredLibrary(address lib) view returns (bool)",
      "function isSendingMessage() view returns (bool)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function isValidReceiveLibrary(address _receiver, uint32 _srcEid, address _actualReceiveLib) view returns (bool)",
      "function lazyInboundNonce(address receiver, uint32 srcEid, bytes32 sender) view returns (uint64 nonce)",
      "function lzCompose(address _from, address _to, bytes32 _guid, uint16 _index, bytes _message, bytes _extraData) payable",
      "function lzComposeAlert(address _from, address _to, bytes32 _guid, uint16 _index, uint256 _gas, uint256 _value, bytes _message, bytes _extraData, bytes _reason)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _guid, bytes _message, bytes _extraData) payable",
      "function lzReceiveAlert(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _guid, uint256 _gas, uint256 _value, bytes _message, bytes _extraData, bytes _reason)",
      "function lzToken() view returns (address)",
      "function nativeToken() view returns (address)",
      "function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) view returns (bytes32)",
      "function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash)",
      "function outboundNonce(address sender, uint32 dstEid, bytes32 receiver) view returns (uint64 nonce)",
      "function owner() view returns (address)",
      "function quote(tuple(uint32 dstEid, bytes32 receiver, bytes message, bytes options, bool payInLzToken) _params, address _sender) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function receiveLibraryTimeout(address receiver, uint32 srcEid) view returns (address lib, uint256 expiry)",
      "function recoverToken(address _token, address _to, uint256 _amount)",
      "function registerLibrary(address _lib)",
      "function renounceOwnership()",
      "function send(tuple(uint32 dstEid, bytes32 receiver, bytes message, bytes options, bool payInLzToken) _params, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee))",
      "function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes _message)",
      "function setConfig(address _oapp, address _lib, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod)",
      "function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry)",
      "function setDefaultSendLibrary(uint32 _eid, address _newLib)",
      "function setDelegate(address _delegate)",
      "function setLzToken(address _lzToken)",
      "function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod)",
      "function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry)",
      "function setSendLibrary(address _oapp, uint32 _eid, address _newLib)",
      "function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver) view returns (bool)",
      "function verify(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _payloadHash)"
    ],
    "0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862": [
      "error LZ_NotImplemented()",
      "function isSupportedEid(uint32) pure returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)"
    ],
    "0x30f64a297cc66a873FB603d1e89D5891962C25ba": [
      "constructor(address hashi, address yaho_, uint256 sourceChainId)",
      "error CallFailed()",
      "error InvalidToChainId(uint256 chainId, uint256 expectedChainId)",
      "error MessageIdAlreadyExecuted(uint256 messageId)",
      "error ThresholdNotMet()",
      "event MessageExecuted(uint256 indexed messageId, tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message)",
      "function HASHI() view returns (address)",
      "function SOURCE_CHAIN_ID() view returns (uint256)",
      "function YAHO() view returns (address)",
      "function calculateMessageHash(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message) pure returns (bytes32)",
      "function calculateMessageId(uint256 sourceChainId, address dispatcherAddress, bytes32 messageHash) pure returns (uint256)",
      "function executeMessages(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters)[] messages) returns (bytes[])",
      "function executed(uint256) view returns (bool)"
    ],
    "0x41675C099F32341bf84BFc5382aF534df5C7461a": [
      "constructor()",
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6": [
      "constructor(address _masterCopy)"
    ],
    "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43": [
      "constructor(address _singleton)"
    ],
    "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0x5ebB3f2feaA15271101a927869B3A56837e73056": [
      "error LZ_Treasury_LzTokenNotEnabled()",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getFee(address, uint32, uint256 _totalFee, bool _payInLzToken) view returns (uint256)",
      "function lzTokenEnabled() view returns (bool)",
      "function lzTokenFee() view returns (uint256)",
      "function nativeBP() view returns (uint256)",
      "function owner() view returns (address)",
      "function payFee(address, uint32, uint256 _totalFee, bool _payInLzToken) payable returns (uint256)",
      "function renounceOwnership()",
      "function setLzTokenEnabled(bool _lzTokenEnabled)",
      "function setLzTokenFee(uint256 _lzTokenFee)",
      "function setNativeFeeBP(uint256 _nativeBP)",
      "function transferOwnership(address newOwner)",
      "function withdrawLzToken(address _messageLib, address _lzToken, address _to, uint256 _amount)",
      "function withdrawNativeFee(address _messageLib, address _to, uint256 _amount)",
      "function withdrawToken(address _token, address _to, uint256 _amount)"
    ],
    "0x670a3e447F4DE92C012777Ac5591D81E12aD0957": [
      "constructor(address _singleton)"
    ],
    "0x71d5ba4e37de72415F685490B684538Aae8f0424": [
      "constructor(address _owner, address _tokenImage)",
      "function deploy(string _name, string _symbol, uint8 _decimals, uint256 _chainId) returns (address)",
      "function getModuleInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function owner() view returns (address)",
      "function setTokenImage(address _tokenImage)",
      "function tokenImage() view returns (address)",
      "function transferOwnership(address _newOwner)"
    ],
    "0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D": [
      "constructor(address _endpoint, uint256 _treasuryGasLimit, uint256 _treasuryGasForFeeCap)",
      "error DVN_InvalidDVNIdx()",
      "error DVN_InvalidDVNOptions(uint256 cursor)",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_RL_AtLeastOneDVN()",
      "error LZ_RL_CannotWithdrawAltToken()",
      "error LZ_RL_InvalidAmount(uint256 requested, uint256 available)",
      "error LZ_RL_InvalidCmdHash()",
      "error LZ_RL_InvalidConfigType(uint32 configType)",
      "error LZ_RL_InvalidEid()",
      "error LZ_RL_InvalidExecutor()",
      "error LZ_RL_InvalidOptionalDVNCount()",
      "error LZ_RL_InvalidOptionalDVNThreshold()",
      "error LZ_RL_InvalidPacketHeader()",
      "error LZ_RL_InvalidPacketVersion()",
      "error LZ_RL_InvalidReceiver()",
      "error LZ_RL_InvalidRequiredDVNCount()",
      "error LZ_RL_NotTreasury()",
      "error LZ_RL_Unsorted()",
      "error LZ_RL_UnsupportedEid(uint32 eid)",
      "error LZ_RL_Verifying()",
      "error LZ_ULN_InvalidLegacyType1Option()",
      "error LZ_ULN_InvalidLegacyType2Option()",
      "error LZ_ULN_InvalidWorkerId(uint8 workerId)",
      "error LZ_ULN_InvalidWorkerOptions(uint256 cursor)",
      "error LZ_ULN_UnsupportedOptionType(uint16 optionType)",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event DVNFeePaid(address[] requiredDVNs, address[] optionalDVNs, uint256[] fees)",
      "event DefaultReadLibConfigsSet(tuple(uint32 eid, tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event ExecutorFeePaid(address executor, uint256 fee)",
      "event LzTokenFeeWithdrawn(address lzToken, address receiver, uint256 amount)",
      "event NativeFeeWithdrawn(address worker, address receiver, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PayloadVerified(address dvn, bytes header, bytes32 cmdHash, bytes32 payloadHash)",
      "event ReadLibConfigSet(address oapp, uint32 eid, tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "event TreasuryNativeFeeCapSet(uint256 newTreasuryNativeFeeCap)",
      "event TreasurySet(address treasury)",
      "function cmdHashLookup(address oapp, uint32 eid, uint64 nonce) view returns (bytes32 cmdHash)",
      "function commitVerification(bytes _packetHeader, bytes32 _cmdHash, bytes32 _payloadHash)",
      "function fees(address worker) view returns (uint256 fee)",
      "function getAppReadLibConfig(address _oapp, uint32 _remoteEid) view returns (tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getReadLibConfig(address _oapp, uint32 _remoteEid) view returns (tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function getTreasuryAndNativeFeeCap() view returns (address, uint256)",
      "function hashLookup(bytes32 headerHash, bytes32 cmdHash, address dvn) view returns (bytes32 payloadHash)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function quote(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function renounceOwnership()",
      "function send(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) returns (tuple(uint256 nativeFee, uint256 lzTokenFee), bytes)",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultReadLibConfigs(tuple(uint32 eid, tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function setTreasury(address _treasury)",
      "function setTreasuryNativeFeeCap(uint256 _newTreasuryNativeFeeCap)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) _config, bytes32 _headerHash, bytes32 _cmdHash, bytes32 _payloadHash) view returns (bool)",
      "function verify(bytes _packetHeader, bytes32 _cmdHash, bytes32 _payloadHash)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)",
      "function withdrawFee(address _to, uint256 _amount)",
      "function withdrawLzTokenFee(address _lzToken, address _to, uint256 _amount)"
    ],
    "0x7606e9d8655e48159E7beC8541C2E71A7Aa3E418": [
      "constructor(address lzEndpoint, address delegate)",
      "error ConflictingBlockHeader(uint256 blockNumber, bytes32 blockHash, bytes32 storedBlockHash)",
      "error InvalidBlockHeaderRLP()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error NoPeer(uint32 eid)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "error UnauthorizedLayerZeroReceive()",
      "event HashStored(uint256 indexed id, bytes32 indexed hash)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "event ReporterSet(uint256 indexed chainId, uint32 indexed endpointId, address indexed reporter)",
      "function LAYER_ZERO_ENDPOINT() view returns (address)",
      "function PROVIDER() view returns (string)",
      "function allowInitializePath(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin) view returns (bool)",
      "function chainIds(uint32) view returns (uint256)",
      "function enabledReporters(uint32) view returns (address)",
      "function endpoint() view returns (address)",
      "function getHash(uint256 domain, uint256 id) view returns (bytes32)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32, bytes _message, address, bytes) payable",
      "function nextNonce(uint32, bytes32) pure returns (uint64 nonce)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function owner() view returns (address)",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function proveAncestralBlockHashes(uint256 chainId, bytes[] blockHeaders)",
      "function renounceOwnership()",
      "function setDelegate(address _delegate)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function setReporterByChain(uint256 chainId, uint32 endpointId, address reporter)",
      "function transferOwnership(address newOwner)"
    ],
    "0x7c24d0061b484B267F286aa2DCe891220Db254b3": [
      "function mintingFinished() view returns (bool)",
      "function name() view returns (string)",
      "function approve(address _to, uint256 _value) returns (bool result)",
      "function setBridgeContract(address _bridgeContract)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address _sender, address _recipient, uint256 _amount) returns (bool)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function decimals() view returns (uint8)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function increaseAllowance(address _to, uint256 _addedValue) returns (bool result)",
      "function transferAndCall(address _to, uint256 _value, bytes _data) returns (bool)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function burn(uint256 _value)",
      "function version() view returns (string)",
      "function decreaseApproval(address _spender, uint256 _subtractedValue) returns (bool)",
      "function claimTokens(address _token, address _to)",
      "function balanceOf(address _owner) view returns (uint256)",
      "function renounceOwnership()",
      "function isBridge(address _address) view returns (bool)",
      "function finishMinting() returns (bool)",
      "function nonces(address) view returns (uint256)",
      "function getTokenInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function owner() view returns (address)",
      "function permit(address _holder, address _spender, uint256 _nonce, uint256 _expiry, bool _allowed, uint8 _v, bytes32 _r, bytes32 _s)",
      "function symbol() view returns (string)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function transfer(address _to, uint256 _value) returns (bool)",
      "function push(address _to, uint256 _amount)",
      "function move(address _from, address _to, uint256 _amount)",
      "function PERMIT_TYPEHASH_LEGACY() view returns (bytes32)",
      "function bridgeContract() view returns (address)",
      "function permit(address _holder, address _spender, uint256 _value, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s)",
      "function increaseApproval(address _spender, uint256 _addedValue) returns (bool)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function pull(address _from, uint256 _amount)",
      "function transferOwnership(address _newOwner)",
      "function expirations(address, address) view returns (uint256)",
      "constructor(string _name, string _symbol, uint8 _decimals, uint256 _chainId)",
      "event Mint(address indexed to, uint256 amount)",
      "event MintFinished()",
      "event OwnershipRenounced(address indexed previousOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Burn(address indexed burner, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value, bytes data)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value)"
    ],
    "0x87D48c565D0D85770406D248efd7dc3cbd41e729": [
      "constructor(address _omnibridge, address _owner, uint256 _minAavePaid, address _aaveReceiver)",
      "event ForceDisable(address indexed token, uint256 tokensAmount, uint256 xTokensAmount, uint256 investedAmount)",
      "event InterestDustUpdated(address indexed token, uint96 dust)",
      "event InterestEnabled(address indexed token, address xToken)",
      "event InterestReceiverUpdated(address indexed token, address receiver)",
      "event MinInterestPaidUpdated(address indexed token, uint256 amount)",
      "event PaidInterest(address indexed token, address to, uint256 value)",
      "function aaveAmount(address[] _assets) view returns (uint256)",
      "function aaveReceiver() view returns (address)",
      "function claimAaveAndPay(address[] _assets)",
      "function enableInterestToken(address _token, uint96 _dust, address _interestReceiver, uint256 _minInterestPaid)",
      "function forceDisable(address _token)",
      "function getModuleInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function incentivesController() pure returns (address)",
      "function interestAmount(address _token) view returns (uint256)",
      "function interestParams(address) view returns (address aToken, uint96 dust, uint256 investedAmount, address interestReceiver, uint256 minInterestPaid)",
      "function invest(address _token, uint256 _amount)",
      "function investedAmount(address _token) view returns (uint256)",
      "function isInterestSupported(address _token) view returns (bool)",
      "function lendingPool() pure returns (address)",
      "function mediator() view returns (address)",
      "function minAavePaid() view returns (uint256)",
      "function owner() view returns (address)",
      "function payInterest(address _token)",
      "function setAaveReceiver(address _receiver)",
      "function setDust(address _token, uint96 _dust)",
      "function setInterestReceiver(address _token, address _receiver)",
      "function setMinAavePaid(uint256 _minAavePaid)",
      "function setMinInterestPaid(address _token, uint256 _minInterestPaid)",
      "function stkAAVEToken() pure returns (address)",
      "function transferOwnership(address _newOwner)",
      "function withdraw(address _token, uint256 _amount)"
    ],
    "0x88ad09518695c6c3712AC10a214bE5109a655671": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0x8eB3b7D8498a6716904577b2579e1c313d48E347": [
      "constructor(string _suffix)",
      "event DailyLimitChanged(address indexed token, uint256 newLimit)",
      "event ExecutionDailyLimitChanged(address indexed token, uint256 newLimit)",
      "event FailedMessageFixed(bytes32 indexed messageId, address token, address recipient, uint256 value)",
      "event NewTokenRegistered(address indexed nativeToken, address indexed bridgedToken)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event TokensBridged(address indexed token, address indexed recipient, uint256 value, bytes32 indexed messageId)",
      "event TokensBridgingInitiated(address indexed token, address indexed sender, uint256 value, bytes32 indexed messageId)",
      "function bridgeContract() view returns (address)",
      "function bridgedTokenAddress(address _nativeToken) view returns (address)",
      "function claimTokens(address _token, address _to)",
      "function claimTokensFromTokenContract(address _bridgedToken, address _token, address _to)",
      "function dailyLimit(address _token) view returns (uint256)",
      "function deployAndHandleBridgedTokens(address _token, string _name, string _symbol, uint8 _decimals, address _recipient, uint256 _value)",
      "function deployAndHandleBridgedTokensAndCall(address _token, string _name, string _symbol, uint8 _decimals, address _recipient, uint256 _value, bytes _data)",
      "function disableInterest(address _token)",
      "function executionDailyLimit(address _token) view returns (uint256)",
      "function executionMaxPerTx(address _token) view returns (uint256)",
      "function fixFailedMessage(bytes32 _messageId)",
      "function fixMediatorBalance(address _token, address _receiver)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function getCurrentDay() view returns (uint256)",
      "function handleBridgedTokens(address _token, address _recipient, uint256 _value)",
      "function handleBridgedTokensAndCall(address _token, address _recipient, uint256 _value, bytes _data)",
      "function handleNativeTokens(address _token, address _recipient, uint256 _value)",
      "function handleNativeTokensAndCall(address _token, address _recipient, uint256 _value, bytes _data)",
      "function initialize(address _bridgeContract, address _mediatorContract, uint256[3] _dailyLimitMaxPerTxMinPerTxArray, uint256[2] _executionDailyLimitExecutionMaxPerTxArray, uint256 _requestGasLimit, address _owner, address _tokenFactory) returns (bool)",
      "function initializeInterest(address _token, address _impl, uint256 _minCashThreshold)",
      "function interestImplementation(address _token) view returns (address)",
      "function invest(address _token)",
      "function isBridgedTokenDeployAcknowledged(address _token) view returns (bool)",
      "function isInitialized() view returns (bool)",
      "function isRegisteredAsNativeToken(address _token) view returns (bool)",
      "function isTokenRegistered(address _token) view returns (bool)",
      "function maxAvailablePerTx(address _token) view returns (uint256)",
      "function maxPerTx(address _token) view returns (uint256)",
      "function mediatorBalance(address _token) view returns (uint256)",
      "function mediatorContractOnOtherSide() view returns (address)",
      "function messageFixed(bytes32 _messageId) view returns (bool)",
      "function migrateTo_3_3_0(address _tokenFactory, address _interestImplementation)",
      "function minCashThreshold(address _token) view returns (uint256)",
      "function minPerTx(address _token) view returns (uint256)",
      "function nativeTokenAddress(address _bridgedToken) view returns (address)",
      "function onTokenTransfer(address _from, uint256 _value, bytes _data) returns (bool)",
      "function owner() view returns (address)",
      "function relayTokens(address token, uint256 _value)",
      "function relayTokens(address token, address _receiver, uint256 _value)",
      "function relayTokensAndCall(address token, address _receiver, uint256 _value, bytes _data)",
      "function requestFailedMessageFix(bytes32 _messageId)",
      "function requestGasLimit() view returns (uint256)",
      "function setBridgeContract(address _bridgeContract)",
      "function setCustomTokenAddressPair(address _nativeToken, address _bridgedToken)",
      "function setDailyLimit(address _token, uint256 _dailyLimit)",
      "function setExecutionDailyLimit(address _token, uint256 _dailyLimit)",
      "function setExecutionMaxPerTx(address _token, uint256 _maxPerTx)",
      "function setMaxPerTx(address _token, uint256 _maxPerTx)",
      "function setMediatorContractOnOtherSide(address _mediatorContract)",
      "function setMinCashThreshold(address _token, uint256 _minCashThreshold)",
      "function setMinPerTx(address _token, uint256 _minPerTx)",
      "function setRequestGasLimit(uint256 _gasLimit)",
      "function setTokenFactory(address _tokenFactory)",
      "function tokenFactory() view returns (address)",
      "function totalExecutedPerDay(address _token, uint256 _day) view returns (uint256)",
      "function totalSpentPerDay(address _token, uint256 _day) view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function withinExecutionLimit(address _token, uint256 _amount) view returns (bool)",
      "function withinLimit(address _token, uint256 _amount) view returns (bool)"
    ],
    "0x93f6eE78451AaCc1Db1db49a12aBfCc4662B9Cc9": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0xA86bc62Ac53Dc86687AB6C15fdebC71ad51fB615": [
      "error AdaptersDisagree(address adapterOne, address adapterTwo)",
      "error HashNotAvailableInAdapter(address adapter)",
      "error InvalidThreshold(uint256 threshold, uint256 maxThreshold)",
      "error NoAdaptersGiven()",
      "function checkHashWithThresholdFromAdapters(uint256 domain, uint256 id, uint256 threshold, address[] adapters) view returns (bool)",
      "function getHash(uint256 domain, uint256 id, address[] adapters) view returns (bytes32 hash)",
      "function getHashFromAdapter(uint256 domain, uint256 id, address adapter) view returns (bytes32)",
      "function getHashesFromAdapters(uint256 domain, uint256 id, address[] adapters) view returns (bytes32[])"
    ],
    "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8": [
      "error InvalidMessage(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message)",
      "error InvalidThreshold(uint256 threshold, uint256 maxThreshold)",
      "error MessageHashNotFound(uint256 messageId)",
      "error NoAdaptersGiven()",
      "error NoMessageIdsGiven()",
      "error NoMessagesGiven()",
      "error NoReportersGiven()",
      "error UnequalArrayLengths(uint256 arrayOne, uint256 arrayTwo)",
      "event MessageDispatched(uint256 indexed messageId, tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message)",
      "function calculateMessageHash(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message) pure returns (bytes32)",
      "function calculateMessageId(uint256 sourceChainId, address dispatcherAddress, bytes32 messageHash) pure returns (uint256)",
      "function currentNonce() view returns (uint256)",
      "function dispatchMessage(uint256 targetChainId, uint256 threshold, address receiver, bytes data, address[] reporters, address[] adapters) returns (uint256)",
      "function dispatchMessageToAdapters(uint256 targetChainId, uint256 threshold, address receiver, bytes data, address[] reporters, address[] adapters) payable returns (uint256, bytes32[])",
      "function dispatchMessagesToAdapters(uint256 targetChainId, uint256[] thresholds, address[] receivers, bytes[] data, address[] reporters, address[] adapters) payable returns (uint256[], bytes32[])",
      "function getPendingMessageHash(uint256 messageId) view returns (bytes32)",
      "function relayMessagesToAdapters(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters)[] messages) payable returns (bytes32[])"
    ],
    "0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1": [
      "constructor(address _endpoint, uint256 _treasuryGasLimit, uint256 _treasuryGasForFeeCap)",
      "error DVN_InvalidDVNIdx()",
      "error DVN_InvalidDVNOptions(uint256 cursor)",
      "error LZ_MessageLib_CannotWithdrawAltToken()",
      "error LZ_MessageLib_InvalidAmount(uint256 requested, uint256 available)",
      "error LZ_MessageLib_InvalidExecutor()",
      "error LZ_MessageLib_InvalidMessageSize(uint256 actual, uint256 max)",
      "error LZ_MessageLib_NotTreasury()",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_MessageLib_TransferFailed()",
      "error LZ_MessageLib_ZeroMessageSize()",
      "error LZ_ULN_AtLeastOneDVN()",
      "error LZ_ULN_InvalidConfigType(uint32 configType)",
      "error LZ_ULN_InvalidConfirmations()",
      "error LZ_ULN_InvalidLegacyType1Option()",
      "error LZ_ULN_InvalidLegacyType2Option()",
      "error LZ_ULN_InvalidOptionalDVNCount()",
      "error LZ_ULN_InvalidOptionalDVNThreshold()",
      "error LZ_ULN_InvalidRequiredDVNCount()",
      "error LZ_ULN_InvalidWorkerId(uint8 workerId)",
      "error LZ_ULN_InvalidWorkerOptions(uint256 cursor)",
      "error LZ_ULN_Unsorted()",
      "error LZ_ULN_UnsupportedEid(uint32 eid)",
      "error LZ_ULN_UnsupportedOptionType(uint16 optionType)",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event DVNFeePaid(address[] requiredDVNs, address[] optionalDVNs, uint256[] fees)",
      "event DefaultExecutorConfigsSet(tuple(uint32 eid, tuple(uint32 maxMessageSize, address executor) config)[] params)",
      "event DefaultUlnConfigsSet(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event ExecutorConfigSet(address oapp, uint32 eid, tuple(uint32 maxMessageSize, address executor) config)",
      "event ExecutorFeePaid(address executor, uint256 fee)",
      "event LzTokenFeeWithdrawn(address lzToken, address receiver, uint256 amount)",
      "event NativeFeeWithdrawn(address worker, address receiver, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event TreasuryNativeFeeCapSet(uint256 newTreasuryNativeFeeCap)",
      "event TreasurySet(address treasury)",
      "event UlnConfigSet(address oapp, uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "function executorConfigs(address oapp, uint32 eid) view returns (uint32 maxMessageSize, address executor)",
      "function fees(address worker) view returns (uint256)",
      "function getAppUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getExecutorConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint32 maxMessageSize, address executor) rtnConfig)",
      "function getUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function quote(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function renounceOwnership()",
      "function send(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) returns (tuple(uint256 nativeFee, uint256 lzTokenFee), bytes)",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultExecutorConfigs(tuple(uint32 eid, tuple(uint32 maxMessageSize, address executor) config)[] _params)",
      "function setDefaultUlnConfigs(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function setTreasury(address _treasury)",
      "function setTreasuryNativeFeeCap(uint256 _newTreasuryNativeFeeCap)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function treasury() view returns (address)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)",
      "function withdrawFee(address _to, uint256 _amount)",
      "function withdrawLzTokenFee(address _lzToken, address _to, uint256 _amount)"
    ],
    "0xc02Ab410f0734EFa3F14628780e6e695156024C2": [
      "constructor(address _endpoint)",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_ULN_AtLeastOneDVN()",
      "error LZ_ULN_InvalidConfigType(uint32 configType)",
      "error LZ_ULN_InvalidConfirmations()",
      "error LZ_ULN_InvalidEid()",
      "error LZ_ULN_InvalidOptionalDVNCount()",
      "error LZ_ULN_InvalidOptionalDVNThreshold()",
      "error LZ_ULN_InvalidPacketHeader()",
      "error LZ_ULN_InvalidPacketVersion()",
      "error LZ_ULN_InvalidRequiredDVNCount()",
      "error LZ_ULN_Unsorted()",
      "error LZ_ULN_UnsupportedEid(uint32 eid)",
      "error LZ_ULN_Verifying()",
      "event DefaultUlnConfigsSet(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PayloadVerified(address dvn, bytes header, uint256 confirmations, bytes32 proofHash)",
      "event UlnConfigSet(address oapp, uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "function assertHeader(bytes _packetHeader, uint32 _localEid) pure",
      "function commitVerification(bytes _packetHeader, bytes32 _payloadHash)",
      "function getAppUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function hashLookup(bytes32 headerHash, bytes32 payloadHash, address dvn) view returns (bool submitted, uint64 confirmations)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultUlnConfigs(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) _config, bytes32 _headerHash, bytes32 _payloadHash) view returns (bool)",
      "function verify(bytes _packetHeader, bytes32 _payloadHash, uint64 _confirmations)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)"
    ],
    "0xCDa8e3ADD00c95E5035617F970096118Ca2F4C92": [
      "constructor(address _singleton)"
    ],
    "0xD83893F31AA1B6B9D97C9c70D3492fe38D24d218": [
      "function validatorCount() view returns (uint256)",
      "function getBridgeValidatorsInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function isInitialized() view returns (bool)",
      "function removeValidator(address _validator)",
      "function addValidator(address _validator)",
      "function initialize(uint256 _requiredSignatures, address[] _initialValidators, address _owner) returns (bool)",
      "function validatorList() view returns (address[])",
      "function setRequiredSignatures(uint256 _requiredSignatures)",
      "function requiredSignatures() view returns (uint256)",
      "function getNextValidator(address _address) view returns (address)",
      "function owner() view returns (address)",
      "function isValidatorDuty(address _validator) view returns (bool)",
      "function deployedAtBlock() view returns (uint256)",
      "function F_ADDR() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function isValidator(address _validator) view returns (bool)",
      "event ValidatorAdded(address indexed validator)",
      "event ValidatorRemoved(address indexed validator)",
      "event RequiredSignaturesChanged(uint256 requiredSignatures)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xed84a648b3c51432ad0fD1C2cD2C45677E9d4064": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x62ebcf7ab79ebc3a7db30e84c423951d981b749397664ae678e312687409f5f0"
  }
}
