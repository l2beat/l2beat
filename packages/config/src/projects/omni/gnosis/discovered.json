{
  "name": "omni",
  "chain": "gnosis",
  "blockNumber": 39471784,
  "configHash": "0xc5aa3f517112d7dad74e0a13a29b78e7ef09365ed087b719e0ce431170fd8827",
  "entries": [
    {
      "address": "0x0577FEC70907676039f7DAF961F8A44bda3Ea9Af",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x06DAeB1A97972B9A12e171ed1FC86b392Fa3f89A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Treasury",
      "address": "0x0a1dF45fCB28616bd2f45512f8Aa6ca958829eF1",
      "type": "Contract",
      "sourceHashes": [
        "0x79f573a9d94def8dc0b4319d44595f806685b0ca5875891eff1ed40a9ff6b6e0"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "lzTokenEnabled": false,
        "lzTokenFee": 0,
        "nativeBP": 0,
        "owner": "0xA7a818aB3307B6C95Ef506634e08c35251c81D1C"
      },
      "derivedName": "Treasury"
    },
    {
      "address": "0x0DA0C3e52C977Ed3cBc641fF02DD271c3ED55aFe",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x105CD22eD3D089Bf5589C59b452f9dE0796Ca52d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x112c737AeEbD2E52DEb9ff5c9c19497F1A1777b0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "HeaderStorage",
      "address": "0x117D7D593e6a7d9699a763C552BFA3177a46B957",
      "type": "Contract",
      "sourceHashes": [
        "0x67541c9ae49fdc48cd0c9f9ebb54178962dcce7249837dce45890fffe512c771"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "headers": [
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ]
      },
      "errors": { "headers": "Processing error occurred." },
      "derivedName": "HeaderStorage"
    },
    {
      "name": "Yaru",
      "address": "0x153801d0B85D2FCAc6EA07446b6A709ce6720AC5",
      "type": "Contract",
      "sourceHashes": [
        "0x08b3a970ed97adf129059abd1030e73ebd6904533643bd35cfce0459bf3a0641"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "executed": [false, false, false, false, false],
        "HASHI": "0xA86bc62Ac53Dc86687AB6C15fdebC71ad51fB615",
        "SOURCE_CHAIN_ID": 1,
        "YAHO": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8"
      },
      "errors": { "executed": "Processing error occurred." },
      "derivedName": "Yaru"
    },
    {
      "name": "PermittableToken",
      "address": "0x199084efbd7fe14d217BBF22FDC6E2eD7266dDD4",
      "type": "Contract",
      "sourceHashes": [
        "0x064c46a3015079f17e93b171ff684cda28a0ecdbd55ecec09c4ddf50e0a5c312"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "bridgeContract": "0x0000000000000000000000000000000000000000",
        "decimals": 0,
        "DOMAIN_SEPARATOR": "0x75d2243c5f16e74af316608b1c54f2c34da1e0ff0e551af68c80e7c57328d85e",
        "getTokenInterfacesVersion": { "major": 2, "minor": 5, "patch": 0 },
        "mintingFinished": false,
        "name": "''",
        "owner": "0xBF3d6f830CE263CAE987193982192Cd990442B53",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "PERMIT_TYPEHASH_LEGACY": "0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb",
        "symbol": "''",
        "totalSupply": 0,
        "version": "1"
      },
      "derivedName": "PermittableToken"
    },
    {
      "name": "EndpointV2",
      "address": "0x1a44076050125825900e736c501f859c50fE728c",
      "type": "Contract",
      "sourceHashes": [
        "0x399160e7d36a21fca31097d7875daed8f421f788b77f2a71974d51938c3ea520"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "blockedLibrary": "0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
        "eid": 30145,
        "EMPTY_PAYLOAD_HASH": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getRegisteredLibraries": [
          "0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
          "0x3C156b1f625D2B4E004D43E91aC2c3a719C29c7B",
          "0x9714Ccf1dedeF14BaB5013625DB92746C1358cb4"
        ],
        "getSendContext": [0, "0x0000000000000000000000000000000000000000"],
        "isSendingMessage": false,
        "lzToken": "0x0000000000000000000000000000000000000000",
        "nativeToken": "0x0000000000000000000000000000000000000000",
        "NIL_PAYLOAD_HASH": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "owner": "0xA7a818aB3307B6C95Ef506634e08c35251c81D1C"
      },
      "derivedName": "EndpointV2"
    },
    {
      "address": "0x1B0C638616Ed79dB430Edbf549ad9512FF4a8ed1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "",
      "address": "0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "values": { "$immutable": true },
      "derivedName": ""
    },
    {
      "address": "0x258667E543C913264388B33328337257aF208a8f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x74CACae9801bA4Fe0027Ed6F58d53797CCa7296E"
        }
      ]
    },
    {
      "address": "0x329c54289Ff5D6B7b7daE13592C6B1EDA1543eD4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SendUln302",
      "address": "0x3C156b1f625D2B4E004D43E91aC2c3a719C29c7B",
      "type": "Contract",
      "sourceHashes": [
        "0x159d8f84a5100285a7401e1ccb3d40a64fe944d9beb951c81749de40279a5876"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "messageLibType": 0,
        "owner": "0xA7a818aB3307B6C95Ef506634e08c35251c81D1C",
        "treasury": "0x0a1dF45fCB28616bd2f45512f8Aa6ca958829eF1",
        "version": { "major": 3, "minor": 0, "endpointVersion": 2 }
      },
      "derivedName": "SendUln302"
    },
    {
      "address": "0x3e0A20099626F3d4d4Ea7B0cE0330e88d1Fe65D6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x459A3bd49F1ff109bc90b76125533699AaAAf9A6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x4701f5F0b1aE73d018F91C38808c3058925cA526",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x4743BA328C28dbC2b8B4e083b92cB4baA047494b",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ERC677BridgeToken",
      "address": "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e",
      "type": "Contract",
      "sourceHashes": [
        "0xb0fb1a6d5baf1ffb49df8c95cb3c7b855ce7132d827bf3f9ecddcfcf2a580d03"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "bridgeContract": "0xD9a3039cfC70aF84AC9E566A2526fD3b683B995B",
        "decimals": 18,
        "getTokenInterfacesVersion": { "major": 2, "minor": 2, "patch": 0 },
        "mintingFinished": false,
        "name": "sUSD",
        "owner": "0xD9a3039cfC70aF84AC9E566A2526fD3b683B995B",
        "symbol": "sUSD",
        "totalSupply": "2500000000000000000"
      },
      "derivedName": "ERC677BridgeToken"
    },
    {
      "address": "0x4f34c5F8e9F07a409a59dbbb8e80Ab6D5f43bd72",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x507A7777E6DbF4680951E63fB3753a20F2c37706",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xa3a3456BC0c8ce4e0a0415B619803ee96509Ce30",
          "0x06DAeB1A97972B9A12e171ed1FC86b392Fa3f89A",
          "0x4701f5F0b1aE73d018F91C38808c3058925cA526"
        ],
        "$threshold": 1,
        "domainSeparator": "0xdf613c63710289bc68ec3e3ba55a8c8621d33ab1b157f44966e94d6f6972c124",
        "getChainId": 100,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 3 (33%)",
        "nonce": 586,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "address": "0x52F05Eff62fC36c83d840D9684daCAD3be43D8bf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x544cE64C3Fc6Da72CEB2456CC4cF19E7c7972eFA",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OmnibridgeFeeManager",
      "address": "0x5dbC897aEf6B18394D845A922BF107FA98E3AC55",
      "type": "Contract",
      "sourceHashes": [
        "0xdcb8211bc83ab560c19e3bc532a958bc0582fa7a02d0c53df72f3cf293f598d5"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "FOREIGN_TO_HOME_FEE": "0x03be2b2875cb41e0e77355e802a16769bb8dfcf825061cde185c73bf94f12625",
        "getModuleInterfacesVersion": { "major": 1, "minor": 0, "patch": 0 },
        "HOME_TO_FOREIGN_FEE": "0x741ede137d0537e88e0ea0ff25b1f22d837903dbbee8980b4a06e8523247ee26",
        "mediator": "0xf6A78083ca3e2a662D6dd1703c939c8aCE2e268d",
        "owner": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "rewardAddressCount": 1,
        "rewardAddressList": ["0x77bcb57ba7037e39063f1567ce734452bbD7a5F0"]
      },
      "derivedName": "OmnibridgeFeeManager"
    },
    {
      "address": "0x5eD64f02588C8B75582f2f8eFd7A5521e3F897CC",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x65E5017A384B2774374812DC766fC4E026BB23e5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x674c97db4cE6caC04A124d745979f3E4cBa0E9f0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x67E5855Aa4D5786c086b7FC6B4203a5Ea50E93F8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SelectorTokenGasLimitManager",
      "address": "0x68A3674028a785A8BCE19bA81B9ab7c9942BA3ED",
      "type": "Contract",
      "sourceHashes": [
        "0x40a5e7e16f2ed78de499e7ab33bb60f2d3e668b003b8253c8ed3659066c6bee2"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "bridge": "0x75Df5AF045d91108662D8080fD1FEFAd6aA0bb59",
        "getModuleInterfacesVersion": { "major": 1, "minor": 0, "patch": 0 },
        "owner": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "requestGasLimit": 600000
      },
      "derivedName": "SelectorTokenGasLimitManager"
    },
    {
      "address": "0x71F12d03E1711cb96E11E1A5c12Da7466699Db8D",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "HashiManager",
      "address": "0x74CACae9801bA4Fe0027Ed6F58d53797CCa7296E",
      "type": "Contract",
      "sourceHashes": [
        "0xc2d647dd43d1a5c348b27b8b2bd671627d194c85cb69a865e67ae8dbdf38b705",
        "0x824f58e3acf3f9403dc26549af4869336347109f24d07d82aa11897bed907b17"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
          "via": []
        }
      ],
      "values": {
        "$admin": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
        "$implementation": "0x694bEeB84f912d0951e88cFCf76900B7C728B5B5",
        "$pastUpgrades": [
          [
            "2024-09-11T02:47:45.000Z",
            "0x86bf12c48667d3eaa924dad76a841a1452cf62d9632a205dd782d080e1a6d4f1",
            ["0x694bEeB84f912d0951e88cFCf76900B7C728B5B5"]
          ]
        ],
        "$upgradeCount": 1,
        "adapters": ["ethereum:0x7606e9d8655e48159E7beC8541C2E71A7Aa3E418"],
        "AdaptersFromStorage": "0x0000000000000000000000000000000000000000",
        "deployedAtBlock": 0,
        "expectedAdaptersHash": "0xb2e80ac35c6fdf4c83cb64a9d16487c0806c1e3a5434f1ebad4e13ed04e36f44",
        "expectedThreshold": 1,
        "implementation": "0x694bEeB84f912d0951e88cFCf76900B7C728B5B5",
        "isInitialized": true,
        "owner": "0xb1F43dc8B57562e7FA48157D73102a8e4a94975A",
        "reporters": ["ethereum:0xA3Bc83D557E3f2dDfF4D44966A96397760159D8B"],
        "targetAddress": "ethereum:0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e",
        "targetChainId": 1,
        "threshold": 1,
        "upgradeabilityOwner": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
        "version": 1,
        "yaho": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8",
        "yaru": "0x153801d0B85D2FCAc6EA07446b6A709ce6720AC5"
      },
      "fieldMeta": {
        "targetAddress": {
          "severity": "HIGH",
          "description": "Address of the target contract on Ethereum"
        },
        "adapters": {
          "severity": "HIGH",
          "description": "Array of the adapters on Ethereum"
        },
        "reporters": {
          "severity": "HIGH",
          "description": "Array of the reporters on Ethereum"
        },
        "threshold": {
          "severity": "HIGH",
          "description": "Threshold of the adapters on Ethereum"
        }
      },
      "derivedName": "HashiManager",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "ethereum" } }
      ]
    },
    {
      "name": "HomeAMB",
      "address": "0x75Df5AF045d91108662D8080fD1FEFAd6aA0bb59",
      "type": "Contract",
      "sourceHashes": [
        "0xc2d647dd43d1a5c348b27b8b2bd671627d194c85cb69a865e67ae8dbdf38b705",
        "0x42c489ed63dc75d73bab6e89bc470b7c805b0c16cbbc0e9287cc824cc88b0b79"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
          "via": []
        }
      ],
      "values": {
        "$admin": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "$implementation": "0xA033535983d1aBcc2648af730EDCb198909903D7",
        "$pastUpgrades": [
          [
            "2020-01-17T10:53:00.000Z",
            "0xd12ac776c7303973af73061833e271da8e066e9f80be33412f7c7298d2e1c837",
            ["0xD4075FB57fCf038bFc702c915Ef9592534bED5c1"]
          ],
          [
            "2020-07-06T22:01:00.000Z",
            "0xee2e9f17748b3f27853f7e5c6774f13cf52678d38d4d5439a4696f56e968f89c",
            ["0xF6a1Ad94d29679388e533B63bfE1Fd6f1680D23B"]
          ],
          [
            "2020-08-02T22:06:55.000Z",
            "0x2b39c1b50ca81c4556c28308ecdebba032eefc06c6f743f00dd91343664ee9d3",
            ["0xa436C43f7dC31674dc415DB056bc69f0Cb947887"]
          ],
          [
            "2020-12-06T22:09:15.000Z",
            "0xd73045c660d6c2c18d1b6a0f39bc0129b8637de01d8f025513a2458b2bdc6e8d",
            ["0x4bD34173E4b4169a807DcCf3b19AdEC5DaA6c39E"]
          ],
          [
            "2021-10-04T11:09:25.000Z",
            "0xb271c045465adc1ed59c6cbbe9e95a18fdbb20967e7bd4a373d14005bdfaa982",
            ["0x525127C1F5670cc102B26905DcCF8245C05c164f"]
          ],
          [
            "2024-09-23T09:02:20.000Z",
            "0x581c9bca33fea976e95f7bedfff0d10345fd4c7e856dccece26733f22e6bf9e9",
            ["0xA033535983d1aBcc2648af730EDCb198909903D7"]
          ]
        ],
        "$upgradeCount": 6,
        "allowReentrantRequests": false,
        "decimalShift": 0,
        "deployedAtBlock": 7904969,
        "destinationChainId": 1,
        "gasPrice": 0,
        "getBridgeInterfacesVersion": { "major": 6, "minor": 2, "patch": 0 },
        "getBridgeMode": "0x2544fbb9",
        "HASHI_IS_ENABLED": true,
        "HASHI_IS_MANDATORY": false,
        "hashiManager": "0x74CACae9801bA4Fe0027Ed6F58d53797CCa7296E",
        "implementation": "0xA033535983d1aBcc2648af730EDCb198909903D7",
        "isInitialized": true,
        "maxGasPerTx": 2000000,
        "messageId": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "messageSender": "0x0000000000000000000000000000000000000000",
        "messageSourceChainId": 0,
        "owner": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "requiredBlockConfirmations": 100,
        "requiredSignatures": 4,
        "sourceChainId": 100,
        "transactionHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "upgradeabilityOwner": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "validatorContract": "0xA280feD8D7CaD9a76C8b50cA5c33c2534fFa5008",
        "version": 6
      },
      "derivedName": "HomeAMB"
    },
    {
      "address": "0x7606e9d8655e48159E7beC8541C2E71A7Aa3E418",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x771dcAcB96024d1e55Fd21Fe8a8187AA7EC9e77e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafeL2",
      "address": "0x77bcb57ba7037e39063f1567ce734452bbD7a5F0",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0x59fe14e95a8aa7f52213f18bae5c9329cf583a7ba31194698b15eddb97d5e825"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "values": {
        "$immutable": false,
        "$implementation": "0x3E5c63644E683549055b9Be8653de26E0B4CD36E",
        "$members": [
          "0x1B0C638616Ed79dB430Edbf549ad9512FF4a8ed1",
          "0x507A7777E6DbF4680951E63fB3753a20F2c37706",
          "0x5eD64f02588C8B75582f2f8eFd7A5521e3F897CC",
          "0xa3a3456BC0c8ce4e0a0415B619803ee96509Ce30",
          "0x0DA0C3e52C977Ed3cBc641fF02DD271c3ED55aFe",
          "0x65E5017A384B2774374812DC766fC4E026BB23e5",
          "0x8fd960F1B9D68BAD2B97bD232FB75CC1f186B064",
          "0xA1cf7F847eCD82459ce05a218EaA38a9D92E7b6b",
          "0xD68f1A882f3F9ffddaBd4D30c4F8Dfca1f9e51Ba",
          "0xE4Df0cdC9eF7e388eA906226010bBD1B9A6fFeD9",
          "0xFcf00B0fEdBc8f2F35a3B8d4B858d5805f2Bb05D",
          "0xe9eB7DA58f6B5CE5b0a6cFD778A2fa726203AAD5"
        ],
        "$threshold": 3,
        "domainSeparator": "0xe9d8755bcaa93e2e65b2f4c443dbab1d20f6c0f357b1ca5b3437ae3bbdb4b788",
        "getChainId": 100,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 12 (25%)",
        "nonce": 5,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafeL2"
    },
    {
      "name": "GnosisSafeL2",
      "address": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x9b0ecd140aaf0aae0a7462b8544de7cf8757a2fc51620bb127d5d164ce3cfb9e",
        "0x59fe14e95a8aa7f52213f18bae5c9329cf583a7ba31194698b15eddb97d5e825"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x75Df5AF045d91108662D8080fD1FEFAd6aA0bb59"
        },
        {
          "permission": "upgrade",
          "from": "0xA280feD8D7CaD9a76C8b50cA5c33c2534fFa5008"
        },
        {
          "permission": "upgrade",
          "from": "0xf6A78083ca3e2a662D6dd1703c939c8aCE2e268d"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "values": {
        "$immutable": false,
        "$implementation": "0x3E5c63644E683549055b9Be8653de26E0B4CD36E",
        "$members": [
          "0xEF138856d0581641A57245Ee5CFfc9ceaA059623",
          "0xb8173f558f75EE263013fd6294177bf75279a21e",
          "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
          "0xf59E447E97bC03c2B0C5719e2E551F0B15b724e5",
          "0xA07888742c18d7e658132AE0148fF205fFF46481",
          "0x329c54289Ff5D6B7b7daE13592C6B1EDA1543eD4",
          "0xcF9ebF877688Ed88a7479A6e63457Fd78D4275cE",
          "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893",
          "0x544cE64C3Fc6Da72CEB2456CC4cF19E7c7972eFA",
          "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
          "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8",
          "0xd945325557f1FB4374fBf10Ae86D385632Df870A",
          "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
          "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
          "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
          "0xb2a33ae0E07fD2ca8DBdE9545F6ce0b3234dc4e8"
        ],
        "$threshold": 8,
        "domainSeparator": "0xfe3c15ed7497cbca15382f630829643e688d9270dc0fa9c8cbb8f4c2bc61f6db",
        "getChainId": 100,
        "GnosisSafe_modules": [],
        "multisigThreshold": "8 of 16 (50%)",
        "nonce": 91,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafeL2"
    },
    {
      "address": "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x88ad09518695c6c3712AC10a214bE5109a655671",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x8fd960F1B9D68BAD2B97bD232FB75CC1f186B064",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ReceiveUln302",
      "address": "0x9714Ccf1dedeF14BaB5013625DB92746C1358cb4",
      "type": "Contract",
      "sourceHashes": [
        "0x3904c78c7b0abf91f9544ebb9f08f2d2bc83028df65c912a7f7a6ca1ca109dde"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "messageLibType": 1,
        "owner": "0xA7a818aB3307B6C95Ef506634e08c35251c81D1C",
        "version": { "major": 3, "minor": 0, "endpointVersion": 2 }
      },
      "derivedName": "ReceiveUln302"
    },
    {
      "address": "0x9bd93c5ad5e0a6be890c82FD77eE42ce8B642eF8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xA07888742c18d7e658132AE0148fF205fFF46481",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xA1cf7F847eCD82459ce05a218EaA38a9D92E7b6b",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BridgeValidators",
      "address": "0xA280feD8D7CaD9a76C8b50cA5c33c2534fFa5008",
      "type": "Contract",
      "sourceHashes": [
        "0xc2d647dd43d1a5c348b27b8b2bd671627d194c85cb69a865e67ae8dbdf38b705",
        "0x0ff53e04cc715e56805825c7eb45af72110792ad606dbfd4a97db98dfb75e6f7"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
          "via": []
        }
      ],
      "values": {
        "$admin": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "$implementation": "0xb056BFEdc397D427697a75E3ff115a0954de4791",
        "$pastUpgrades": [
          [
            "2020-01-17T10:51:35.000Z",
            "0xeeb40dee282dfd8f0f09caa8b4d3a3b2ff56197dbd956fc1caf09d39c9d8429b",
            ["0xb056BFEdc397D427697a75E3ff115a0954de4791"]
          ],
          [
            "2021-02-03T00:47:15.000Z",
            "0x0760b05b5c88d57d4b009786dbe3fd922fa308433bc836e34597913d417cece3",
            ["0x574b4D060420d75866567d0E52cE98C4eb146639"]
          ],
          [
            "2021-02-03T00:53:05.000Z",
            "0x8eb855c544137c714c34b6f58dcaf9daae067287345dcea039dc748019661ec8",
            ["0xb056BFEdc397D427697a75E3ff115a0954de4791"]
          ]
        ],
        "$upgradeCount": 3,
        "deployedAtBlock": 7904952,
        "F_ADDR": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
        "getBridgeValidatorsInterfacesVersion": {
          "major": 2,
          "minor": 3,
          "patch": 0
        },
        "implementation": "0xb056BFEdc397D427697a75E3ff115a0954de4791",
        "isInitialized": true,
        "owner": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "requiredSignatures": 4,
        "upgradeabilityOwner": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "validatorCount": 7,
        "validatorList": [
          "0x3e0A20099626F3d4d4Ea7B0cE0330e88d1Fe65D6",
          "0xfA98B60E02A61B6590f073cAD56e68326652d094",
          "0xbDc141c8D2343f33F40Cb9edD601CcF460CD0dDe",
          "0x674c97db4cE6caC04A124d745979f3E4cBa0E9f0",
          "0x258667E543C913264388B33328337257aF208a8f",
          "0x105CD22eD3D089Bf5589C59b452f9dE0796Ca52d",
          "0x459A3bd49F1ff109bc90b76125533699AaAAf9A6"
        ],
        "version": 6
      },
      "derivedName": "BridgeValidators"
    },
    {
      "address": "0xa3a3456BC0c8ce4e0a0415B619803ee96509Ce30",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LayerZeroReporter",
      "address": "0xA3Bc83D557E3f2dDfF4D44966A96397760159D8B",
      "type": "Contract",
      "sourceHashes": [
        "0x0e7d2e1e33610c83b21dc833813267f01fc57f23563ee910c54e98baf36e4c8a"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "endpoint": "0x1a44076050125825900e736c501f859c50fE728c",
        "endpointIds": [0, 30101, 0, 0, 0],
        "fee": 420000,
        "HEADER_STORAGE": "0x117D7D593e6a7d9699a763C552BFA3177a46B957",
        "LAYER_ZERO_ENDPOINT": "0x1a44076050125825900e736c501f859c50fE728c",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 1 },
        "owner": "0x67E5855Aa4D5786c086b7FC6B4203a5Ea50E93F8",
        "PROVIDER": "layer-zero",
        "YAHO": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8"
      },
      "errors": { "endpointIds": "Processing error occurred." },
      "derivedName": "LayerZeroReporter"
    },
    {
      "name": "GnosisSafeL2",
      "address": "0xA7a818aB3307B6C95Ef506634e08c35251c81D1C",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0x59fe14e95a8aa7f52213f18bae5c9329cf583a7ba31194698b15eddb97d5e825"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "values": {
        "$immutable": false,
        "$implementation": "0x3E5c63644E683549055b9Be8653de26E0B4CD36E",
        "$members": [
          "0xB981a2664f5f547291Df5F8dCD4505f7015912CF",
          "0x771dcAcB96024d1e55Fd21Fe8a8187AA7EC9e77e",
          "0x112c737AeEbD2E52DEb9ff5c9c19497F1A1777b0",
          "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
          "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327"
        ],
        "$threshold": 3,
        "domainSeparator": "0x04926f511e69f8e4ff69c4866c8274a4d3c8951cbea37b6a538a7c62cd97a018",
        "getChainId": 100,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 112,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafeL2"
    },
    {
      "name": "SP1Helios",
      "address": "0xa809c536c85b63a2676CbAc3C4064748AD3a2562",
      "type": "Contract",
      "sourceHashes": [
        "0xf80096ea7a47fdf03cff05c2b054950ec13c7697be27ad236c3634a8b91d89c2"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "executionStateRoots": [
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "GENESIS_TIME": 1606824023,
        "GENESIS_VALIDATORS_ROOT": "0x4b363db94e286120d76eb905340fdd4e54bfe9f06bf33ff6cf5ad27f511bfe95",
        "getCurrentEpoch": 357523,
        "getSyncCommitteePeriod": [0, 0, 0, 0, 0],
        "guardian": "0x4f34c5F8e9F07a409a59dbbb8e80Ab6D5f43bd72",
        "head": 11440736,
        "headers": [
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "heliosProgramVkey": "0x00ed996c6f79e241fd4879d34ebfef7514ad8b817d0b40ab82a9856460d298c0",
        "SECONDS_PER_SLOT": 12,
        "SLOTS_PER_EPOCH": 32,
        "SLOTS_PER_PERIOD": 8192,
        "SOURCE_CHAIN_ID": 1,
        "syncCommittees": [
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "verifier": "0xe2a2E96fDe2a05bE4A508F4FBABdb3A57BacF03b"
      },
      "errors": {
        "executionStateRoots": "Processing error occurred.",
        "getSyncCommitteePeriod": "Processing error occurred.",
        "headers": "Processing error occurred.",
        "syncCommittees": "Processing error occurred."
      },
      "derivedName": "SP1Helios"
    },
    {
      "name": "Hashi",
      "address": "0xA86bc62Ac53Dc86687AB6C15fdebC71ad51fB615",
      "type": "Contract",
      "sourceHashes": [
        "0x43d4a4b8ebf5f34d224efe2343c5abc3fc5042025c06fb8dd82efc9257fbaa92"
      ],
      "proxyType": "immutable",
      "values": { "$immutable": true },
      "derivedName": "Hashi"
    },
    {
      "address": "0xB1dD1828794075f7521365163A93DE9e68e3c49f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SafeL2",
      "address": "0xb1F43dc8B57562e7FA48157D73102a8e4a94975A",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x618c83d2fbbe19fd6f2d6ee6ee79a60e6206e48bf361eaf4812e1c1fc14b4527"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "values": {
        "$immutable": false,
        "$implementation": "0x29fcB43b46531BcA003ddC8FCB67FFE91900C762",
        "$members": [
          "0xeca6EAa2C77d8f0aA9247e681C64455deAae51aC",
          "0x0577FEC70907676039f7DAF961F8A44bda3Ea9Af",
          "0xB1dD1828794075f7521365163A93DE9e68e3c49f",
          "0x9bd93c5ad5e0a6be890c82FD77eE42ce8B642eF8"
        ],
        "$threshold": 2,
        "domainSeparator": "0x185cae3bcc0e0de1cb9889c466a7909383cc8b348de76d79ce1662c0fe2e110c",
        "getChainId": 100,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 4 (50%)",
        "nonce": 5,
        "VERSION": "1.4.1"
      },
      "derivedName": "SafeL2"
    },
    {
      "address": "0xb2a33ae0E07fD2ca8DBdE9545F6ce0b3234dc4e8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xb8173f558f75EE263013fd6294177bf75279a21e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xB981a2664f5f547291Df5F8dCD4505f7015912CF",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Yaho",
      "address": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8",
      "type": "Contract",
      "sourceHashes": [
        "0x0a159de58bdd599af48d18d484a70a71f1038064d066e7e489b877721b866bcb"
      ],
      "proxyType": "immutable",
      "values": { "$immutable": true, "currentNonce": 11400 },
      "derivedName": "Yaho"
    },
    {
      "address": "0xbDc141c8D2343f33F40Cb9edD601CcF460CD0dDe",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xBF3d6f830CE263CAE987193982192Cd990442B53",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SP1HeliosAdapter",
      "address": "0xCEb436489e9C6d9E4Db76145A6CCE2a06411ea0A",
      "type": "Contract",
      "sourceHashes": [
        "0x60d07c93914cdb5d0143dd5d1680ecfcf5f6702a103d2e33513b564dbd55eb52"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "PROVIDER": "sp1-helios",
        "SOURCE_CHAIN_ID": 1,
        "SOURCE_YAHO": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8",
        "SP1_HELIOS_ADDRESS": "0xa809c536c85b63a2676CbAc3C4064748AD3a2562"
      },
      "derivedName": "SP1HeliosAdapter"
    },
    {
      "address": "0xcF9ebF877688Ed88a7479A6e63457Fd78D4275cE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xD1aA7F557af9cC5Ba4Daf87D923d712fdAf1D709",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xd2A1BfdF092c875EBFc1ffc77f08c00556332280",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0xD9a3039cfC70aF84AC9E566A2526fD3b683B995B"
        }
      ]
    },
    {
      "name": "MultiTokenForwardingRulesManager",
      "address": "0xd4D8c07097F9b87EcC4C1a838C4b71DBebcd2286",
      "type": "Contract",
      "sourceHashes": [
        "0x7f6c0a3df8db7d08785d2a343cc1b3c8584ec7c60e54c2cf81d7bc9898d441d5"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "getModuleInterfacesVersion": { "major": 1, "minor": 0, "patch": 0 },
        "owner": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd"
      },
      "derivedName": "MultiTokenForwardingRulesManager"
    },
    {
      "address": "0xD68f1A882f3F9ffddaBd4D30c4F8Dfca1f9e51Ba",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xd945325557f1FB4374fBf10Ae86D385632Df870A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "HomeAMBErc677ToErc677",
      "address": "0xD9a3039cfC70aF84AC9E566A2526fD3b683B995B",
      "type": "Contract",
      "sourceHashes": [
        "0xc2d647dd43d1a5c348b27b8b2bd671627d194c85cb69a865e67ae8dbdf38b705",
        "0x33b11d358522e7a7cce6d511e00b19b1f03e87d4b47d8895fbbd6f683e24b08c"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0xd2A1BfdF092c875EBFc1ffc77f08c00556332280",
          "via": []
        }
      ],
      "values": {
        "$admin": "0xd2A1BfdF092c875EBFc1ffc77f08c00556332280",
        "$implementation": "0xFEaB457D95D9990b7eb6c943c839258245541754",
        "$pastUpgrades": [
          [
            "2020-01-17T15:36:30.000Z",
            "0x7d7ef39b7c73a785b91c40bc9edcfbbc7c7f8ec64ee15b62c2dc7321b8f41277",
            ["0xFEaB457D95D9990b7eb6c943c839258245541754"]
          ]
        ],
        "$upgradeCount": 1,
        "bridgeContract": "0x75Df5AF045d91108662D8080fD1FEFAd6aA0bb59",
        "dailyLimit": "3000000000000000000000",
        "decimalShift": 0,
        "erc677token": "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e",
        "executionDailyLimit": "3000000000000000000000",
        "executionMaxPerTx": "1000000000000000000000",
        "getBridgeInterfacesVersion": { "major": 1, "minor": 1, "patch": 0 },
        "getBridgeMode": "0x76595b56",
        "getCurrentDay": 20187,
        "implementation": "0xFEaB457D95D9990b7eb6c943c839258245541754",
        "isInitialized": true,
        "maxPerTx": "1000000000000000000000",
        "mediatorContractOnOtherSide": "0x71F12d03E1711cb96E11E1A5c12Da7466699Db8D",
        "minPerTx": "500000000000000000",
        "outOfLimitAmount": 0,
        "owner": "0xd2A1BfdF092c875EBFc1ffc77f08c00556332280",
        "requestGasLimit": 500000,
        "totalExecutedPerDay": [0, 0, 0, 0, 0],
        "totalSpentPerDay": [0, 0, 0, 0, 0],
        "upgradeabilityOwner": "0xd2A1BfdF092c875EBFc1ffc77f08c00556332280",
        "version": 1,
        "withinExecutionLimit": [true, true, true, true, true],
        "withinLimit": [false, false, false, false, false]
      },
      "errors": {
        "totalExecutedPerDay": "Processing error occurred.",
        "totalSpentPerDay": "Processing error occurred.",
        "withinExecutionLimit": "Processing error occurred.",
        "withinLimit": "Processing error occurred."
      },
      "derivedName": "HomeAMBErc677ToErc677"
    },
    {
      "address": "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SP1Verifier",
      "address": "0xe2a2E96fDe2a05bE4A508F4FBABdb3A57BacF03b",
      "type": "Contract",
      "sourceHashes": [
        "0x5ebb775f2803d074da1b09f713044da7c8b74dd951913810947e8560b3a45845"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "VERIFIER_HASH": "0x11b6a09d63d255ad425ee3a7f6211d5ec63fbde9805b40551c3136275b6f4eb4",
        "VERSION": "v4.0.0-rc.3"
      },
      "derivedName": "SP1Verifier"
    },
    {
      "address": "0xE4Df0cdC9eF7e388eA906226010bBD1B9A6fFeD9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xe9eB7DA58f6B5CE5b0a6cFD778A2fa726203AAD5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "TokenFactory",
      "address": "0xEAAE83ac10f975a6456f4C4E48c45Ea2d8e1b5d2",
      "type": "Contract",
      "sourceHashes": [
        "0xc3fc18a2178145d16d7d8d6b50d97b6d7a405421b3fae66cdeb31fb52f4e7eed"
      ],
      "proxyType": "immutable",
      "values": {
        "$immutable": true,
        "getModuleInterfacesVersion": { "major": 1, "minor": 0, "patch": 0 },
        "owner": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "tokenImage": "0x199084efbd7fe14d217BBF22FDC6E2eD7266dDD4"
      },
      "derivedName": "TokenFactory"
    },
    {
      "address": "0xeca6EAa2C77d8f0aA9247e681C64455deAae51aC",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafeL2",
      "address": "0xEF138856d0581641A57245Ee5CFfc9ceaA059623",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0x59fe14e95a8aa7f52213f18bae5c9329cf583a7ba31194698b15eddb97d5e825"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "values": {
        "$immutable": false,
        "$implementation": "0x3E5c63644E683549055b9Be8653de26E0B4CD36E",
        "$members": [
          "0xD1aA7F557af9cC5Ba4Daf87D923d712fdAf1D709",
          "0x4743BA328C28dbC2b8B4e083b92cB4baA047494b",
          "0x52F05Eff62fC36c83d840D9684daCAD3be43D8bf"
        ],
        "$threshold": 2,
        "domainSeparator": "0xca9cfc29989db8ca8dd522e89b1cab66873972af454eb0abb504bba1540b47f9",
        "getChainId": 100,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 24,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafeL2"
    },
    {
      "address": "0xf59E447E97bC03c2B0C5719e2E551F0B15b724e5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "HomeOmnibridge",
      "address": "0xf6A78083ca3e2a662D6dd1703c939c8aCE2e268d",
      "type": "Contract",
      "sourceHashes": [
        "0xc2d647dd43d1a5c348b27b8b2bd671627d194c85cb69a865e67ae8dbdf38b705",
        "0x054fd17b3f8e15a00d9fd1d8e96c3b2769ae32765e5babae32ca4fd2deae564b"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
          "via": []
        }
      ],
      "values": {
        "$admin": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "$implementation": "0x2dbdCC6CAd1a5a11FD6337244407bC06162aAf92",
        "$pastUpgrades": [
          [
            "2020-08-04T00:30:55.000Z",
            "0x287a396848e8c4d96873999dbca59aaeb8c9550110ef487670879d08e1bb0c5a",
            ["0xcEb06eCea3F588Cb60e39BD4DB7869013C6f65a5"]
          ],
          [
            "2020-08-22T22:09:10.000Z",
            "0xbf5aad84a9e42e20bbb7dcbe07bc905112307c3f5ab47b4fa6f5957032226356",
            ["0x3068E52FfD384689F815D7bAF81fc34f649919d4"]
          ],
          [
            "2020-12-06T22:11:05.000Z",
            "0xe01549ba626337cc9a2b327acde465f2969d4bf5a54f201ba067e299c9926d49",
            ["0x7aa0062b833714A1c345966A21D93D13264Ef92D"]
          ],
          [
            "2020-12-11T13:24:00.000Z",
            "0xd169a2b716ace4a3b261823ebad4b52ebb621189294dd62df6df9c9418d56253",
            ["0x0FCdADb9E445D88D200e9Fd79a2F3f49eEfcc15E"]
          ],
          [
            "2021-02-03T01:06:30.000Z",
            "0x45cf70ff0700446b66f7fb071d080e3cc91b56e2b265740fa3945ce6b56374c6",
            ["0x574b4D060420d75866567d0E52cE98C4eb146639"]
          ],
          [
            "2021-02-04T22:31:30.000Z",
            "0x84939fcb6af541b6db5b77018047dbf120bb5bdecf43ac2a26a76f67084db6e7",
            ["0x5CbE9bb92fd026691C694A8F3acAc76B9Fa1CC18"]
          ],
          [
            "2021-03-15T14:03:10.000Z",
            "0x78941e51d725344759812aaaa6c6e027ae44cac59eeca718ce0bfdf98c2ac90d",
            ["0xe17738Aa9FDD50ad50644cFD563964A530c64715"]
          ],
          [
            "2021-10-15T19:02:01.000Z",
            "0x490609cf911ff3de84d50c9b75a1bd8f3f375d4c3ead65cda3e0dc0b28a2828c",
            ["0x2dbdCC6CAd1a5a11FD6337244407bC06162aAf92"]
          ]
        ],
        "$upgradeCount": 8,
        "bridgeContract": "0x75Df5AF045d91108662D8080fD1FEFAd6aA0bb59",
        "feeManager": "0x5dbC897aEf6B18394D845A922BF107FA98E3AC55",
        "forwardingRulesManager": "0xd4D8c07097F9b87EcC4C1a838C4b71DBebcd2286",
        "gasLimitManager": "0x68A3674028a785A8BCE19bA81B9ab7c9942BA3ED",
        "getBridgeInterfacesVersion": { "major": 3, "minor": 3, "patch": 1 },
        "getBridgeMode": "0xb1516c26",
        "getCurrentDay": 20187,
        "implementation": "0x2dbdCC6CAd1a5a11FD6337244407bC06162aAf92",
        "isInitialized": true,
        "mediatorContractOnOtherSide": "0x88ad09518695c6c3712AC10a214bE5109a655671",
        "owner": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "tokenFactory": "0xEAAE83ac10f975a6456f4C4E48c45Ea2d8e1b5d2",
        "upgradeabilityOwner": "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd",
        "version": 8
      },
      "derivedName": "HomeOmnibridge"
    },
    {
      "address": "0xfA98B60E02A61B6590f073cAD56e68326652d094",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xFcf00B0fEdBc8f2F35a3B8d4B858d5805f2Bb05D",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
      "type": "EOA",
      "proxyType": "EOA"
    }
  ],
  "abis": {
    "0x0a1dF45fCB28616bd2f45512f8Aa6ca958829eF1": [
      "error LZ_Treasury_LzTokenNotEnabled()",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getFee(address, uint32, uint256 _totalFee, bool _payInLzToken) view returns (uint256)",
      "function lzTokenEnabled() view returns (bool)",
      "function lzTokenFee() view returns (uint256)",
      "function nativeBP() view returns (uint256)",
      "function owner() view returns (address)",
      "function payFee(address, uint32, uint256 _totalFee, bool _payInLzToken) payable returns (uint256)",
      "function renounceOwnership()",
      "function setLzTokenEnabled(bool _lzTokenEnabled)",
      "function setLzTokenFee(uint256 _lzTokenFee)",
      "function setNativeFeeBP(uint256 _nativeBP)",
      "function transferOwnership(address newOwner)",
      "function withdrawLzToken(address _messageLib, address _lzToken, address _to, uint256 _amount)",
      "function withdrawNativeFee(address _messageLib, address _to, uint256 _amount)",
      "function withdrawToken(address _token, address _to, uint256 _amount)"
    ],
    "0x117D7D593e6a7d9699a763C552BFA3177a46B957": [
      "error HeaderOutOfRange(uint256 blockNumber)",
      "event HeaderStored(uint256 indexed blockNumber, bytes32 indexed blockHeader)",
      "function headers(uint256) view returns (bytes32)",
      "function storeBlockHeader(uint256 blockNumber) returns (bytes32)",
      "function storeBlockHeaders(uint256[] blockNumbers) returns (bytes32[])"
    ],
    "0x153801d0B85D2FCAc6EA07446b6A709ce6720AC5": [
      "constructor(address hashi, address yaho_, uint256 sourceChainId)",
      "error CallFailed()",
      "error InvalidToChainId(uint256 chainId, uint256 expectedChainId)",
      "error MessageIdAlreadyExecuted(uint256 messageId)",
      "error ThresholdNotMet()",
      "event MessageExecuted(uint256 indexed messageId, tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message)",
      "function HASHI() view returns (address)",
      "function SOURCE_CHAIN_ID() view returns (uint256)",
      "function YAHO() view returns (address)",
      "function calculateMessageHash(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message) pure returns (bytes32)",
      "function calculateMessageId(uint256 sourceChainId, address dispatcherAddress, bytes32 messageHash) pure returns (uint256)",
      "function executeMessages(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters)[] messages) returns (bytes[])",
      "function executed(uint256) view returns (bool)"
    ],
    "0x199084efbd7fe14d217BBF22FDC6E2eD7266dDD4": [
      "function mintingFinished() view returns (bool)",
      "function name() view returns (string)",
      "function approve(address _to, uint256 _value) returns (bool result)",
      "function setBridgeContract(address _bridgeContract)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address _sender, address _recipient, uint256 _amount) returns (bool)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function decimals() view returns (uint8)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function increaseAllowance(address _to, uint256 _addedValue) returns (bool result)",
      "function transferAndCall(address _to, uint256 _value, bytes _data) returns (bool)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function burn(uint256 _value)",
      "function version() view returns (string)",
      "function decreaseApproval(address _spender, uint256 _subtractedValue) returns (bool)",
      "function claimTokens(address _token, address _to)",
      "function balanceOf(address _owner) view returns (uint256)",
      "function renounceOwnership()",
      "function isBridge(address _address) view returns (bool)",
      "function finishMinting() returns (bool)",
      "function nonces(address) view returns (uint256)",
      "function getTokenInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function owner() view returns (address)",
      "function permit(address _holder, address _spender, uint256 _nonce, uint256 _expiry, bool _allowed, uint8 _v, bytes32 _r, bytes32 _s)",
      "function symbol() view returns (string)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function transfer(address _to, uint256 _value) returns (bool)",
      "function push(address _to, uint256 _amount)",
      "function move(address _from, address _to, uint256 _amount)",
      "function PERMIT_TYPEHASH_LEGACY() view returns (bytes32)",
      "function bridgeContract() view returns (address)",
      "function permit(address _holder, address _spender, uint256 _value, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s)",
      "function increaseApproval(address _spender, uint256 _addedValue) returns (bool)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function pull(address _from, uint256 _amount)",
      "function transferOwnership(address _newOwner)",
      "function expirations(address, address) view returns (uint256)",
      "constructor(string _name, string _symbol, uint8 _decimals, uint256 _chainId)",
      "event Mint(address indexed to, uint256 amount)",
      "event MintFinished()",
      "event OwnershipRenounced(address indexed previousOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Burn(address indexed burner, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value, bytes data)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value)"
    ],
    "0x1a44076050125825900e736c501f859c50fE728c": [
      "constructor(uint32 _eid, address _owner)",
      "error LZ_AlreadyRegistered()",
      "error LZ_ComposeExists()",
      "error LZ_ComposeNotFound(bytes32 expected, bytes32 actual)",
      "error LZ_DefaultReceiveLibUnavailable()",
      "error LZ_DefaultSendLibUnavailable()",
      "error LZ_InsufficientFee(uint256 requiredNative, uint256 suppliedNative, uint256 requiredLzToken, uint256 suppliedLzToken)",
      "error LZ_InvalidExpiry()",
      "error LZ_InvalidNonce(uint64 nonce)",
      "error LZ_InvalidPayloadHash()",
      "error LZ_InvalidReceiveLibrary()",
      "error LZ_LzTokenUnavailable()",
      "error LZ_OnlyNonDefaultLib()",
      "error LZ_OnlyReceiveLib()",
      "error LZ_OnlyRegisteredLib()",
      "error LZ_OnlyRegisteredOrDefaultLib()",
      "error LZ_OnlySendLib()",
      "error LZ_PathNotInitializable()",
      "error LZ_PathNotVerifiable()",
      "error LZ_PayloadHashNotFound(bytes32 expected, bytes32 actual)",
      "error LZ_SameValue()",
      "error LZ_SendReentrancy()",
      "error LZ_Unauthorized()",
      "error LZ_UnsupportedEid()",
      "error LZ_UnsupportedInterface()",
      "error LZ_ZeroLzTokenFee()",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event ComposeDelivered(address from, address to, bytes32 guid, uint16 index)",
      "event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message)",
      "event DefaultReceiveLibrarySet(uint32 eid, address newLib)",
      "event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry)",
      "event DefaultSendLibrarySet(uint32 eid, address newLib)",
      "event DelegateSet(address sender, address delegate)",
      "event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce)",
      "event LibraryRegistered(address newLib)",
      "event LzComposeAlert(address indexed from, address indexed to, address indexed executor, bytes32 guid, uint16 index, uint256 gas, uint256 value, bytes message, bytes extraData, bytes reason)",
      "event LzReceiveAlert(address indexed receiver, address indexed executor, tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, bytes32 guid, uint256 gas, uint256 value, bytes message, bytes extraData, bytes reason)",
      "event LzTokenSet(address token)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash)",
      "event PacketDelivered(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, address receiver)",
      "event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash)",
      "event PacketSent(bytes encodedPayload, bytes options, address sendLibrary)",
      "event PacketVerified(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, address receiver, bytes32 payloadHash)",
      "event ReceiveLibrarySet(address receiver, uint32 eid, address newLib)",
      "event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout)",
      "event SendLibrarySet(address sender, uint32 eid, address newLib)",
      "function EMPTY_PAYLOAD_HASH() view returns (bytes32)",
      "function NIL_PAYLOAD_HASH() view returns (bytes32)",
      "function blockedLibrary() view returns (address)",
      "function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash)",
      "function clear(address _oapp, tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message)",
      "function composeQueue(address from, address to, bytes32 guid, uint16 index) view returns (bytes32 messageHash)",
      "function defaultReceiveLibrary(uint32 srcEid) view returns (address lib)",
      "function defaultReceiveLibraryTimeout(uint32 srcEid) view returns (address lib, uint256 expiry)",
      "function defaultSendLibrary(uint32 dstEid) view returns (address lib)",
      "function delegates(address oapp) view returns (address delegate)",
      "function eid() view returns (uint32)",
      "function getConfig(address _oapp, address _lib, uint32 _eid, uint32 _configType) view returns (bytes config)",
      "function getReceiveLibrary(address _receiver, uint32 _srcEid) view returns (address lib, bool isDefault)",
      "function getRegisteredLibraries() view returns (address[])",
      "function getSendContext() view returns (uint32, address)",
      "function getSendLibrary(address _sender, uint32 _dstEid) view returns (address lib)",
      "function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) view returns (uint64)",
      "function inboundPayloadHash(address receiver, uint32 srcEid, bytes32 sender, uint64 inboundNonce) view returns (bytes32 payloadHash)",
      "function initializable(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver) view returns (bool)",
      "function isDefaultSendLibrary(address _sender, uint32 _dstEid) view returns (bool)",
      "function isRegisteredLibrary(address lib) view returns (bool)",
      "function isSendingMessage() view returns (bool)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function isValidReceiveLibrary(address _receiver, uint32 _srcEid, address _actualReceiveLib) view returns (bool)",
      "function lazyInboundNonce(address receiver, uint32 srcEid, bytes32 sender) view returns (uint64 nonce)",
      "function lzCompose(address _from, address _to, bytes32 _guid, uint16 _index, bytes _message, bytes _extraData) payable",
      "function lzComposeAlert(address _from, address _to, bytes32 _guid, uint16 _index, uint256 _gas, uint256 _value, bytes _message, bytes _extraData, bytes _reason)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _guid, bytes _message, bytes _extraData) payable",
      "function lzReceiveAlert(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _guid, uint256 _gas, uint256 _value, bytes _message, bytes _extraData, bytes _reason)",
      "function lzToken() view returns (address)",
      "function nativeToken() view returns (address)",
      "function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) view returns (bytes32)",
      "function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash)",
      "function outboundNonce(address sender, uint32 dstEid, bytes32 receiver) view returns (uint64 nonce)",
      "function owner() view returns (address)",
      "function quote(tuple(uint32 dstEid, bytes32 receiver, bytes message, bytes options, bool payInLzToken) _params, address _sender) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function receiveLibraryTimeout(address receiver, uint32 srcEid) view returns (address lib, uint256 expiry)",
      "function recoverToken(address _token, address _to, uint256 _amount)",
      "function registerLibrary(address _lib)",
      "function renounceOwnership()",
      "function send(tuple(uint32 dstEid, bytes32 receiver, bytes message, bytes options, bool payInLzToken) _params, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee))",
      "function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes _message)",
      "function setConfig(address _oapp, address _lib, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod)",
      "function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry)",
      "function setDefaultSendLibrary(uint32 _eid, address _newLib)",
      "function setDelegate(address _delegate)",
      "function setLzToken(address _lzToken)",
      "function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod)",
      "function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry)",
      "function setSendLibrary(address _oapp, uint32 _eid, address _newLib)",
      "function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver) view returns (bool)",
      "function verify(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _payloadHash)"
    ],
    "0x29fcB43b46531BcA003ddC8FCB67FFE91900C762": [
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeModuleTransaction(address module, address to, uint256 value, bytes data, uint8 operation)",
      "event SafeMultiSigTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures, bytes additionalInfo)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x2dbdCC6CAd1a5a11FD6337244407bC06162aAf92": [
      "constructor(string _suffix)",
      "event DailyLimitChanged(address indexed token, uint256 newLimit)",
      "event ExecutionDailyLimitChanged(address indexed token, uint256 newLimit)",
      "event FailedMessageFixed(bytes32 indexed messageId, address token, address recipient, uint256 value)",
      "event FeeDistributed(uint256 fee, address indexed token, bytes32 indexed messageId)",
      "event FeeDistributionFailed(address indexed token, uint256 fee)",
      "event NewTokenRegistered(address indexed nativeToken, address indexed bridgedToken)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event TokensBridged(address indexed token, address indexed recipient, uint256 value, bytes32 indexed messageId)",
      "event TokensBridgingInitiated(address indexed token, address indexed sender, uint256 value, bytes32 indexed messageId)",
      "function bridgeContract() view returns (address)",
      "function bridgedTokenAddress(address _nativeToken) view returns (address)",
      "function claimTokens(address _token, address _to)",
      "function claimTokensFromTokenContract(address _bridgedToken, address _token, address _to)",
      "function dailyLimit(address _token) view returns (uint256)",
      "function deployAndHandleBridgedTokens(address _token, string _name, string _symbol, uint8 _decimals, address _recipient, uint256 _value)",
      "function deployAndHandleBridgedTokensAndCall(address _token, string _name, string _symbol, uint8 _decimals, address _recipient, uint256 _value, bytes _data)",
      "function executionDailyLimit(address _token) view returns (uint256)",
      "function executionMaxPerTx(address _token) view returns (uint256)",
      "function feeManager() view returns (address)",
      "function fixFailedMessage(bytes32 _messageId)",
      "function fixMediatorBalance(address _token, address _receiver)",
      "function foreignTokenAddress(address _homeToken) view returns (address)",
      "function forwardingRulesManager() view returns (address)",
      "function gasLimitManager() view returns (address)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function getCurrentDay() view returns (uint256)",
      "function handleBridgedTokens(address _token, address _recipient, uint256 _value)",
      "function handleBridgedTokensAndCall(address _token, address _recipient, uint256 _value, bytes _data)",
      "function handleNativeTokens(address _token, address _recipient, uint256 _value)",
      "function handleNativeTokensAndCall(address _token, address _recipient, uint256 _value, bytes _data)",
      "function homeTokenAddress(address _foreignToken) view returns (address)",
      "function initialize(address _bridgeContract, address _mediatorContract, uint256[3] _dailyLimitMaxPerTxMinPerTxArray, uint256[2] _executionDailyLimitExecutionMaxPerTxArray, address _gasLimitManager, address _owner, address _tokenFactory, address _feeManager, address _forwardingRulesManager) returns (bool)",
      "function isBridgedTokenDeployAcknowledged(address _token) view returns (bool)",
      "function isInitialized() view returns (bool)",
      "function isRegisteredAsNativeToken(address _token) view returns (bool)",
      "function isTokenRegistered(address _token) view returns (bool)",
      "function maxAvailablePerTx(address _token) view returns (uint256)",
      "function maxPerTx(address _token) view returns (uint256)",
      "function mediatorBalance(address _token) view returns (uint256)",
      "function mediatorContractOnOtherSide() view returns (address)",
      "function messageFixed(bytes32 _messageId) view returns (bool)",
      "function migrateTo_3_3_0(address _tokenFactory, address _forwardingRulesManager, address _gasLimitManager, address _feeManager)",
      "function minPerTx(address _token) view returns (uint256)",
      "function nativeTokenAddress(address _bridgedToken) view returns (address)",
      "function onTokenTransfer(address _from, uint256 _value, bytes _data) returns (bool)",
      "function owner() view returns (address)",
      "function relayTokens(address token, uint256 _value)",
      "function relayTokens(address token, address _receiver, uint256 _value)",
      "function relayTokensAndCall(address token, address _receiver, uint256 _value, bytes _data)",
      "function requestFailedMessageFix(bytes32 _messageId)",
      "function setBridgeContract(address _bridgeContract)",
      "function setCustomTokenAddressPair(address _nativeToken, address _bridgedToken)",
      "function setDailyLimit(address _token, uint256 _dailyLimit)",
      "function setExecutionDailyLimit(address _token, uint256 _dailyLimit)",
      "function setExecutionMaxPerTx(address _token, uint256 _maxPerTx)",
      "function setFeeManager(address _feeManager)",
      "function setForwardingRulesManager(address _manager)",
      "function setGasLimitManager(address _manager)",
      "function setMaxPerTx(address _token, uint256 _maxPerTx)",
      "function setMediatorContractOnOtherSide(address _mediatorContract)",
      "function setMinPerTx(address _token, uint256 _minPerTx)",
      "function setTokenFactory(address _tokenFactory)",
      "function tokenFactory() view returns (address)",
      "function totalExecutedPerDay(address _token, uint256 _day) view returns (uint256)",
      "function totalSpentPerDay(address _token, uint256 _day) view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function withinExecutionLimit(address _token, uint256 _amount) view returns (bool)",
      "function withinLimit(address _token, uint256 _amount) view returns (bool)"
    ],
    "0x3C156b1f625D2B4E004D43E91aC2c3a719C29c7B": [
      "constructor(address _endpoint, uint256 _treasuryGasLimit, uint256 _treasuryGasForFeeCap)",
      "error DVN_InvalidDVNIdx()",
      "error DVN_InvalidDVNOptions(uint256 cursor)",
      "error LZ_MessageLib_CannotWithdrawAltToken()",
      "error LZ_MessageLib_InvalidAmount(uint256 requested, uint256 available)",
      "error LZ_MessageLib_InvalidExecutor()",
      "error LZ_MessageLib_InvalidMessageSize(uint256 actual, uint256 max)",
      "error LZ_MessageLib_NotTreasury()",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_MessageLib_TransferFailed()",
      "error LZ_MessageLib_ZeroMessageSize()",
      "error LZ_ULN_AtLeastOneDVN()",
      "error LZ_ULN_InvalidConfigType(uint32 configType)",
      "error LZ_ULN_InvalidConfirmations()",
      "error LZ_ULN_InvalidLegacyType1Option()",
      "error LZ_ULN_InvalidLegacyType2Option()",
      "error LZ_ULN_InvalidOptionalDVNCount()",
      "error LZ_ULN_InvalidOptionalDVNThreshold()",
      "error LZ_ULN_InvalidRequiredDVNCount()",
      "error LZ_ULN_InvalidWorkerId(uint8 workerId)",
      "error LZ_ULN_InvalidWorkerOptions(uint256 cursor)",
      "error LZ_ULN_Unsorted()",
      "error LZ_ULN_UnsupportedEid(uint32 eid)",
      "error LZ_ULN_UnsupportedOptionType(uint16 optionType)",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event DVNFeePaid(address[] requiredDVNs, address[] optionalDVNs, uint256[] fees)",
      "event DefaultExecutorConfigsSet(tuple(uint32 eid, tuple(uint32 maxMessageSize, address executor) config)[] params)",
      "event DefaultUlnConfigsSet(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event ExecutorConfigSet(address oapp, uint32 eid, tuple(uint32 maxMessageSize, address executor) config)",
      "event ExecutorFeePaid(address executor, uint256 fee)",
      "event LzTokenFeeWithdrawn(address lzToken, address receiver, uint256 amount)",
      "event NativeFeeWithdrawn(address worker, address receiver, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event TreasuryNativeFeeCapSet(uint256 newTreasuryNativeFeeCap)",
      "event TreasurySet(address treasury)",
      "event UlnConfigSet(address oapp, uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "function executorConfigs(address oapp, uint32 eid) view returns (uint32 maxMessageSize, address executor)",
      "function fees(address worker) view returns (uint256)",
      "function getAppUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getExecutorConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint32 maxMessageSize, address executor) rtnConfig)",
      "function getUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function quote(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function renounceOwnership()",
      "function send(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) returns (tuple(uint256 nativeFee, uint256 lzTokenFee), bytes)",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultExecutorConfigs(tuple(uint32 eid, tuple(uint32 maxMessageSize, address executor) config)[] _params)",
      "function setDefaultUlnConfigs(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function setTreasury(address _treasury)",
      "function setTreasuryNativeFeeCap(uint256 _newTreasuryNativeFeeCap)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function treasury() view returns (address)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)",
      "function withdrawFee(address _to, uint256 _amount)",
      "function withdrawLzTokenFee(address _lzToken, address _to, uint256 _amount)"
    ],
    "0x3E5c63644E683549055b9Be8653de26E0B4CD36E": [
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeModuleTransaction(address module, address to, uint256 value, bytes data, uint8 operation)",
      "event SafeMultiSigTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures, bytes additionalInfo)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e": [
      "function mintingFinished() view returns (bool)",
      "function name() view returns (string)",
      "function approve(address _spender, uint256 _value) returns (bool)",
      "function setBridgeContract(address _bridgeContract)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address _from, address _to, uint256 _value) returns (bool)",
      "function decimals() view returns (uint8)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function transferAndCall(address _to, uint256 _value, bytes _data) returns (bool)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function burn(uint256 _value)",
      "function decreaseApproval(address _spender, uint256 _subtractedValue) returns (bool)",
      "function claimTokens(address _token, address _to)",
      "function balanceOf(address _owner) view returns (uint256)",
      "function renounceOwnership()",
      "function finishMinting() returns (bool)",
      "function getTokenInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function owner() view returns (address)",
      "function symbol() view returns (string)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function transfer(address _to, uint256 _value) returns (bool)",
      "function bridgeContract() view returns (address)",
      "function increaseApproval(address _spender, uint256 _addedValue) returns (bool)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function transferOwnership(address _newOwner)",
      "constructor(string _name, string _symbol, uint8 _decimals)",
      "event ContractFallbackCallFailed(address from, address to, uint256 value)",
      "event Mint(address indexed to, uint256 amount)",
      "event MintFinished()",
      "event OwnershipRenounced(address indexed previousOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Burn(address indexed burner, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value, bytes data)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value)"
    ],
    "0x507A7777E6DbF4680951E63fB3753a20F2c37706": [
      "constructor(address _singleton)"
    ],
    "0x5dbC897aEf6B18394D845A922BF107FA98E3AC55": [
      "constructor(address _mediator, address _owner, address[] _rewardAddresses, uint256[2] _fees)",
      "event FeeUpdated(bytes32 feeType, address indexed token, uint256 fee)",
      "function FOREIGN_TO_HOME_FEE() view returns (bytes32)",
      "function HOME_TO_FOREIGN_FEE() view returns (bytes32)",
      "function addRewardAddress(address _addr)",
      "function calculateFee(bytes32 _feeType, address _token, uint256 _value) view returns (uint256)",
      "function distributeFee(address _token)",
      "function getFee(bytes32 _feeType, address _token) view returns (uint256)",
      "function getModuleInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function isRewardAddress(address _addr) view returns (bool)",
      "function mediator() view returns (address)",
      "function owner() view returns (address)",
      "function removeRewardAddress(address _addr)",
      "function rewardAddressCount() view returns (uint256)",
      "function rewardAddressList() view returns (address[])",
      "function setFee(bytes32 _feeType, address _token, uint256 _fee)",
      "function transferOwnership(address _newOwner)"
    ],
    "0x68A3674028a785A8BCE19bA81B9ab7c9942BA3ED": [
      "constructor(address _bridge, address _owner, uint256 _gasLimit)",
      "function bridge() view returns (address)",
      "function getModuleInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function owner() view returns (address)",
      "function requestGasLimit(bytes4 _selector, address _token) view returns (uint256)",
      "function requestGasLimit() view returns (uint256)",
      "function requestGasLimit(bytes4 _selector) view returns (uint256)",
      "function requestGasLimit(bytes _data) view returns (uint256)",
      "function setBridgedTokenRequestGasLimits(address _token, uint256[] _gasLimits)",
      "function setCommonRequestGasLimits(uint256[] _gasLimits)",
      "function setNativeTokenRequestGasLimits(address _token, uint256[] _gasLimits)",
      "function setRequestGasLimit(bytes4 _selector, uint256 _gasLimit)",
      "function setRequestGasLimit(bytes4 _selector, address _token, uint256 _gasLimit)",
      "function setRequestGasLimit(uint256 _gasLimit)",
      "function transferOwnership(address _newOwner)"
    ],
    "0x694bEeB84f912d0951e88cFCf76900B7C728B5B5": [
      "function setExpectedThreshold(uint256 expectedThreshold_)",
      "function setYaho(address yaho_)",
      "function targetChainId() view returns (uint256)",
      "function setReportersAdaptersAndThreshold(address[] reporters, address[] adapters, uint256 threshold)",
      "function expectedThreshold() view returns (uint256)",
      "function isInitialized() view returns (bool)",
      "function threshold() view returns (uint256)",
      "function targetAddress() view returns (address)",
      "function adapters() view returns (address[])",
      "function yaru() view returns (address)",
      "function owner() view returns (address)",
      "function deployedAtBlock() view returns (uint256)",
      "function initialize(address _owner) returns (bool)",
      "function setTargetChainId(uint256 targetChainId_)",
      "function setYaru(address yaru_)",
      "function setExpectedAdaptersHash(address[] adapters_)",
      "function yaho() view returns (address)",
      "function reporters() view returns (address[])",
      "function expectedAdaptersHash() view returns (bytes32)",
      "function transferOwnership(address newOwner)",
      "function setTargetAddress(address targetAddress_)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0x74CACae9801bA4Fe0027Ed6F58d53797CCa7296E": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0x75Df5AF045d91108662D8080fD1FEFAd6aA0bb59": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0x77bcb57ba7037e39063f1567ce734452bbD7a5F0": [
      "constructor(address _singleton)"
    ],
    "0x7a48Dac683DA91e4faa5aB13D91AB5fd170875bd": [
      "constructor(address _masterCopy)"
    ],
    "0x9714Ccf1dedeF14BaB5013625DB92746C1358cb4": [
      "constructor(address _endpoint)",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_ULN_AtLeastOneDVN()",
      "error LZ_ULN_InvalidConfigType(uint32 configType)",
      "error LZ_ULN_InvalidConfirmations()",
      "error LZ_ULN_InvalidEid()",
      "error LZ_ULN_InvalidOptionalDVNCount()",
      "error LZ_ULN_InvalidOptionalDVNThreshold()",
      "error LZ_ULN_InvalidPacketHeader()",
      "error LZ_ULN_InvalidPacketVersion()",
      "error LZ_ULN_InvalidRequiredDVNCount()",
      "error LZ_ULN_Unsorted()",
      "error LZ_ULN_UnsupportedEid(uint32 eid)",
      "error LZ_ULN_Verifying()",
      "event DefaultUlnConfigsSet(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PayloadVerified(address dvn, bytes header, uint256 confirmations, bytes32 proofHash)",
      "event UlnConfigSet(address oapp, uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "function assertHeader(bytes _packetHeader, uint32 _localEid) pure",
      "function commitVerification(bytes _packetHeader, bytes32 _payloadHash)",
      "function getAppUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function hashLookup(bytes32 headerHash, bytes32 payloadHash, address dvn) view returns (bool submitted, uint64 confirmations)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultUlnConfigs(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) _config, bytes32 _headerHash, bytes32 _payloadHash) view returns (bool)",
      "function verify(bytes _packetHeader, bytes32 _payloadHash, uint64 _confirmations)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)"
    ],
    "0xA033535983d1aBcc2648af730EDCb198909903D7": [
      "function transactionHash() view returns (bytes32)",
      "function numMessagesSigned(bytes32 _message) view returns (uint256)",
      "function confirmInformation(bytes32 _messageId, bool _status, bytes _result)",
      "function sourceChainId() view returns (uint256)",
      "function signature(bytes32 _hash, uint256 _index) view returns (bytes)",
      "function HASHI_IS_MANDATORY() view returns (bool)",
      "function initialize(uint256 _sourceChainId, uint256 _destinationChainId, address _validatorContract, uint256 _maxGasPerTx, uint256 _gasPrice, uint256 _requiredBlockConfirmations, address _owner) returns (bool)",
      "function isInitialized() view returns (bool)",
      "function requiredBlockConfirmations() view returns (uint256)",
      "function failedMessageReceiver(bytes32 _messageId) view returns (address)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function setChainIds(uint256 _sourceChainId, uint256 _destinationChainId)",
      "function message(bytes32 _hash) view returns (bytes)",
      "function failedMessageSender(bytes32 _messageId) view returns (address)",
      "function allowReentrantRequests() view returns (bool)",
      "function requireToGetInformation(bytes32 _requestSelector, bytes _data) returns (bytes32)",
      "function submitSignature(bytes signature, bytes message)",
      "function messageId() view returns (bytes32 id)",
      "function claimTokens(address _token, address _to)",
      "function numAffirmationsSigned(bytes32 _hash) view returns (uint256)",
      "function affirmationsSigned(bytes32 _hash) view returns (bool)",
      "function resendDataWithHashi(bytes data)",
      "function setMaxGasPerTx(uint256 _maxGasPerTx)",
      "function hashiManager() view returns (address)",
      "function HASHI_IS_ENABLED() view returns (bool)",
      "function requiredSignatures() view returns (uint256)",
      "function owner() view returns (address)",
      "function isApprovedByHashi(bytes32 hashMsg) view returns (bool)",
      "function messagesSigned(bytes32 _message) view returns (bool)",
      "function requireToConfirmMessage(address _contract, bytes _data, uint256 _gas) returns (bytes32)",
      "function validatorContract() view returns (address)",
      "function deployedAtBlock() view returns (uint256)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function messageSourceChainId() view returns (uint256 id)",
      "function setRequiredBlockConfirmations(uint256 _blockConfirmations)",
      "function destinationChainId() view returns (uint256)",
      "function setHashiManager(address _hashiManager)",
      "function setGasPrice(uint256 _gasPrice)",
      "function setAllowReentrantRequests(bool _enable)",
      "function enableAsyncRequestSelector(bytes32 _requestSelector, bool _enable)",
      "function messageCallStatus(bytes32 _messageId) view returns (bool)",
      "function onMessage(uint256, uint256 chainId, address sender, uint256 threshold, address[] adapters, bytes data) returns (bytes)",
      "function messageSender() view returns (address sender)",
      "function decimalShift() view returns (int256)",
      "function requireToPassMessage(address _contract, bytes _data, uint256 _gas) returns (bytes32)",
      "function failedMessageDataHash(bytes32 _messageId) view returns (bytes32)",
      "function maxGasPerTx() view returns (uint256)",
      "function executeAffirmation(bytes message)",
      "function transferOwnership(address newOwner)",
      "function isAsyncRequestSelectorEnabled(bytes32 _requestSelector) view returns (bool)",
      "function gasPrice() view returns (uint256)",
      "function isAlreadyProcessed(uint256 _number) pure returns (bool)",
      "event UserRequestForSignature(bytes32 indexed messageId, bytes encodedData)",
      "event AffirmationCompleted(address indexed sender, address indexed executor, bytes32 indexed messageId, bool status)",
      "event UserRequestForInformation(bytes32 indexed messageId, bytes32 indexed requestSelector, address indexed sender, bytes data)",
      "event SignedForInformation(address indexed signer, bytes32 indexed messageId)",
      "event InformationRetrieved(bytes32 indexed messageId, bool status, bool callbackStatus)",
      "event EnabledAsyncRequestSelector(bytes32 indexed requestSelector, bool enable)",
      "event SignedForUserRequest(address indexed signer, bytes32 messageHash)",
      "event SignedForAffirmation(address indexed signer, bytes32 messageHash)",
      "event CollectedSignatures(address authorityResponsibleForRelay, bytes32 messageHash, uint256 NumberOfCollectedSignatures)",
      "event GasPriceChanged(uint256 gasPrice)",
      "event RequiredBlockConfirmationChanged(uint256 requiredBlockConfirmations)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0xA280feD8D7CaD9a76C8b50cA5c33c2534fFa5008": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0xA3Bc83D557E3f2dDfF4D44966A96397760159D8B": [
      "constructor(address headerStorage, address yaho, address lzEndpoint, address delegate, address refundAddress_, uint128 defaultFee_)",
      "error EndpointIdNotAvailable()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error InvalidOptionType(uint16 optionType)",
      "error NoPeer(uint32 eid)",
      "error NotYaho(address sender, address expectedYaho)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "event BlockDispatched(uint256 indexed targetChainId, address adapter, uint256 indexed blockNumber, bytes32 blockHeader)",
      "event EndpointIdSet(uint256 indexed chainId, uint32 indexed endpointId)",
      "event FeeSet(uint256 fee)",
      "event MessageDispatched(uint256 indexed targetChainId, address adapter, uint256 indexed messageId, bytes32 messageHash)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "function HEADER_STORAGE() view returns (address)",
      "function LAYER_ZERO_ENDPOINT() view returns (address)",
      "function PROVIDER() view returns (string)",
      "function YAHO() view returns (address)",
      "function dispatchBlocks(uint256 targetChainId, address adapter, uint256[] blockNumbers) payable returns (bytes32)",
      "function dispatchMessages(uint256 targetChainId, address adapter, uint256[] messageIds, bytes32[] messageHashes) payable returns (bytes32)",
      "function endpoint() view returns (address)",
      "function endpointIds(uint256) view returns (uint32)",
      "function fee() view returns (uint128)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function owner() view returns (address)",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function renounceOwnership()",
      "function setDefaultRefundAddress(address refundAddress_)",
      "function setDelegate(address _delegate)",
      "function setEndpointIdByChainId(uint256 chainId, uint32 endpointId)",
      "function setFee(uint128 fee_)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function transferOwnership(address newOwner)"
    ],
    "0xA7a818aB3307B6C95Ef506634e08c35251c81D1C": [
      "constructor(address _singleton)"
    ],
    "0xa809c536c85b63a2676CbAc3C4064748AD3a2562": [
      "constructor(tuple(bytes32 executionStateRoot, uint256 genesisTime, bytes32 genesisValidatorsRoot, address guardian, uint256 head, bytes32 header, bytes32 heliosProgramVkey, uint256 secondsPerSlot, uint256 slotsPerEpoch, uint256 slotsPerPeriod, uint256 sourceChainId, bytes32 syncCommitteeHash, address verifier) params)",
      "error HeaderRootAlreadySet(uint256 slot)",
      "error SlotBehindHead(uint256 slot)",
      "error StateRootAlreadySet(uint256 slot)",
      "error SyncCommitteeAlreadySet(uint256 period)",
      "error SyncCommitteeStartMismatch(bytes32 given, bytes32 expected)",
      "event HeadUpdate(uint256 indexed slot, bytes32 indexed root)",
      "event SyncCommitteeUpdate(uint256 indexed period, bytes32 indexed root)",
      "function GENESIS_TIME() view returns (uint256)",
      "function GENESIS_VALIDATORS_ROOT() view returns (bytes32)",
      "function SECONDS_PER_SLOT() view returns (uint256)",
      "function SLOTS_PER_EPOCH() view returns (uint256)",
      "function SLOTS_PER_PERIOD() view returns (uint256)",
      "function SOURCE_CHAIN_ID() view returns (uint256)",
      "function executionStateRoots(uint256) view returns (bytes32)",
      "function getCurrentEpoch() view returns (uint256)",
      "function getSyncCommitteePeriod(uint256 slot) view returns (uint256)",
      "function guardian() view returns (address)",
      "function head() view returns (uint256)",
      "function headers(uint256) view returns (bytes32)",
      "function heliosProgramVkey() view returns (bytes32)",
      "function syncCommittees(uint256) view returns (bytes32)",
      "function update(bytes proof, bytes publicValues)",
      "function updateHeliosProgramVkey(bytes32 newVkey)",
      "function verifier() view returns (address)"
    ],
    "0xA86bc62Ac53Dc86687AB6C15fdebC71ad51fB615": [
      "error AdaptersDisagree(address adapterOne, address adapterTwo)",
      "error HashNotAvailableInAdapter(address adapter)",
      "error InvalidThreshold(uint256 threshold, uint256 maxThreshold)",
      "error NoAdaptersGiven()",
      "function checkHashWithThresholdFromAdapters(uint256 domain, uint256 id, uint256 threshold, address[] adapters) view returns (bool)",
      "function getHash(uint256 domain, uint256 id, address[] adapters) view returns (bytes32 hash)",
      "function getHashFromAdapter(uint256 domain, uint256 id, address adapter) view returns (bytes32)",
      "function getHashesFromAdapters(uint256 domain, uint256 id, address[] adapters) view returns (bytes32[])"
    ],
    "0xb056BFEdc397D427697a75E3ff115a0954de4791": [
      "function validatorCount() view returns (uint256)",
      "function getBridgeValidatorsInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function isInitialized() view returns (bool)",
      "function removeValidator(address _validator)",
      "function addValidator(address _validator)",
      "function initialize(uint256 _requiredSignatures, address[] _initialValidators, address _owner) returns (bool)",
      "function validatorList() view returns (address[])",
      "function setRequiredSignatures(uint256 _requiredSignatures)",
      "function requiredSignatures() view returns (uint256)",
      "function getNextValidator(address _address) view returns (address)",
      "function owner() view returns (address)",
      "function isValidatorDuty(address _validator) view returns (bool)",
      "function deployedAtBlock() view returns (uint256)",
      "function F_ADDR() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function isValidator(address _validator) view returns (bool)",
      "event ValidatorAdded(address indexed validator)",
      "event ValidatorRemoved(address indexed validator)",
      "event RequiredSignaturesChanged(uint256 requiredSignatures)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0xb1F43dc8B57562e7FA48157D73102a8e4a94975A": [
      "constructor(address _singleton)"
    ],
    "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8": [
      "error InvalidMessage(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message)",
      "error InvalidThreshold(uint256 threshold, uint256 maxThreshold)",
      "error MessageHashNotFound(uint256 messageId)",
      "error NoAdaptersGiven()",
      "error NoMessageIdsGiven()",
      "error NoMessagesGiven()",
      "error NoReportersGiven()",
      "error UnequalArrayLengths(uint256 arrayOne, uint256 arrayTwo)",
      "event MessageDispatched(uint256 indexed messageId, tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message)",
      "function calculateMessageHash(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message) pure returns (bytes32)",
      "function calculateMessageId(uint256 sourceChainId, address dispatcherAddress, bytes32 messageHash) pure returns (uint256)",
      "function currentNonce() view returns (uint256)",
      "function dispatchMessage(uint256 targetChainId, uint256 threshold, address receiver, bytes data, address[] reporters, address[] adapters) returns (uint256)",
      "function dispatchMessageToAdapters(uint256 targetChainId, uint256 threshold, address receiver, bytes data, address[] reporters, address[] adapters) payable returns (uint256, bytes32[])",
      "function dispatchMessagesToAdapters(uint256 targetChainId, uint256[] thresholds, address[] receivers, bytes[] data, address[] reporters, address[] adapters) payable returns (uint256[], bytes32[])",
      "function getPendingMessageHash(uint256 messageId) view returns (bytes32)",
      "function relayMessagesToAdapters(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters)[] messages) payable returns (bytes32[])"
    ],
    "0xCEb436489e9C6d9E4Db76145A6CCE2a06411ea0A": [
      "constructor(address sp1HeliosAddress, uint256 sourceChainId, address sourceYaho)",
      "error ConflictingBlockHeader(uint256 blockNumber, bytes32 blockHash, bytes32 storedBlockHash)",
      "error ErrorParseReceipt()",
      "error HeaderNotAvailable()",
      "error InvalidBlockHashProof()",
      "error InvalidBlockHeaderRLP()",
      "error InvalidBlockNumberProof()",
      "error InvalidEventSignature()",
      "error InvalidEventSource()",
      "error InvalidReceiptsRoot()",
      "error UnsupportedTxType()",
      "event HashStored(uint256 indexed id, bytes32 indexed hash)",
      "function PROVIDER() view returns (string)",
      "function SOURCE_CHAIN_ID() view returns (uint256)",
      "function SOURCE_YAHO() view returns (address)",
      "function SP1_HELIOS_ADDRESS() view returns (address)",
      "function getHash(uint256 domain, uint256 id) view returns (bytes32)",
      "function proveAncestralBlockHashes(uint256 chainId, bytes[] blockHeaders)",
      "function storeBlockHeader(uint256 slot, uint256 blockNumber, bytes32[] blockNumberProof, bytes32 blockHash, bytes32[] blockHashProof)",
      "function verifyAndStoreDispatchedMessage(uint64 headerSlot, uint64 txSlot, bytes32[] receiptsRootProof, bytes32 receiptsRoot, bytes[] receiptProof, bytes txIndexRLPEncoded, uint256 logIndex)"
    ],
    "0xd4D8c07097F9b87EcC4C1a838C4b71DBebcd2286": [
      "constructor(address _owner)",
      "event ForwardingRuleUpdated(address token, address sender, address receiver, int256 lane)",
      "function destinationLane(address _token, address _sender, address _receiver) view returns (int256)",
      "function forwardingRule(address, address, address) view returns (int256)",
      "function getModuleInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function owner() view returns (address)",
      "function setReceiverExceptionForTokenForwardingRule(address _token, address _receiver, bool _enable)",
      "function setReceiverForwardingRule(address _receiver, bool _enable)",
      "function setSenderExceptionForTokenForwardingRule(address _token, address _sender, bool _enable)",
      "function setSenderForwardingRule(address _sender, bool _enable)",
      "function setTokenForwardingRule(address _token, bool _enable)",
      "function transferOwnership(address _newOwner)"
    ],
    "0xD9a3039cfC70aF84AC9E566A2526fD3b683B995B": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xe2a2E96fDe2a05bE4A508F4FBABdb3A57BacF03b": [
      "error InvalidProof()",
      "error ProofInvalid()",
      "error PublicInputNotInField()",
      "error WrongVerifierSelector(bytes4 received, bytes4 expected)",
      "function VERIFIER_HASH() pure returns (bytes32)",
      "function VERSION() pure returns (string)",
      "function Verify(uint256[8] proof, uint256[2] input) view",
      "function compressProof(uint256[8] proof) view returns (uint256[4] compressed)",
      "function hashPublicValues(bytes publicValues) pure returns (bytes32)",
      "function verifyCompressedProof(uint256[4] compressedProof, uint256[2] input) view",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "0xEAAE83ac10f975a6456f4C4E48c45Ea2d8e1b5d2": [
      "constructor(address _owner, address _tokenImage)",
      "function deploy(string _name, string _symbol, uint8 _decimals, uint256 _chainId) returns (address)",
      "function getModuleInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function owner() view returns (address)",
      "function setTokenImage(address _tokenImage)",
      "function tokenImage() view returns (address)",
      "function transferOwnership(address _newOwner)"
    ],
    "0xEF138856d0581641A57245Ee5CFfc9ceaA059623": [
      "constructor(address _singleton)"
    ],
    "0xf6A78083ca3e2a662D6dd1703c939c8aCE2e268d": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0xFEaB457D95D9990b7eb6c943c839258245541754": [
      "function relayTokens(address _receiver, uint256 _value)",
      "function fixFailedMessage(bytes32 _dataHash)",
      "function setBridgeContract(address _bridgeContract)",
      "function erc677token() view returns (address)",
      "function fixedAssets(bytes32 _txHash) view returns (bool)",
      "function totalSpentPerDay(uint256 _day) view returns (uint256)",
      "function isInitialized() view returns (bool)",
      "function setExecutionDailyLimit(uint256 _dailyLimit)",
      "function getCurrentDay() view returns (uint256)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function executionDailyLimit() view returns (uint256)",
      "function totalExecutedPerDay(uint256 _day) view returns (uint256)",
      "function handleBridgedTokens(address _recipient, uint256 _value, bytes32)",
      "function dailyLimit() view returns (uint256)",
      "function claimTokens(address _token, address _to)",
      "function setMediatorContractOnOtherSide(address _mediatorContract)",
      "function initialize(address _bridgeContract, address _mediatorContract, address _erc677token, uint256[] _dailyLimitMaxPerTxMinPerTxArray, uint256[] _executionDailyLimitExecutionMaxPerTxArray, uint256 _requestGasLimit, uint256 _decimalShift, address _owner) returns (bool)",
      "function mediatorContractOnOtherSide() view returns (address)",
      "function withinExecutionLimit(uint256 _amount) view returns (bool)",
      "function executionMaxPerTx() view returns (uint256)",
      "function owner() view returns (address)",
      "function messageHashFixed(bytes32 _hash) view returns (bool)",
      "function requestFailedMessageFix(bytes32 _txHash)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function outOfLimitAmount() view returns (uint256)",
      "function setMinPerTx(uint256 _minPerTx)",
      "function onTokenTransfer(address _from, uint256 _value, bytes _data) returns (bool)",
      "function fixAssetsAboveLimits(bytes32 txHash, bool unlockOnForeign, uint256 valueToUnlock)",
      "function relayTokens(address _from, address _receiver, uint256 _value)",
      "function setDailyLimit(uint256 _dailyLimit)",
      "function requestGasLimit() view returns (uint256)",
      "function setMaxPerTx(uint256 _maxPerTx)",
      "function bridgeContract() view returns (address)",
      "function decimalShift() view returns (uint256)",
      "function minPerTx() view returns (uint256)",
      "function withinLimit(uint256 _amount) view returns (bool)",
      "function setExecutionMaxPerTx(uint256 _maxPerTx)",
      "function transferOwnership(address newOwner)",
      "function setRequestGasLimit(uint256 _requestGasLimit)",
      "function maxPerTx() view returns (uint256)",
      "event FailedMessageFixed(bytes32 indexed dataHash, address recipient, uint256 value)",
      "event DailyLimitChanged(uint256 newLimit)",
      "event ExecutionDailyLimitChanged(uint256 newLimit)",
      "event AmountLimitExceeded(address recipient, uint256 value, bytes32 transactionHash)",
      "event AssetAboveLimitsFixed(bytes32 indexed transactionHash, uint256 value, uint256 remaining)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x9d7f7b8b6adea28c4538f12e31b0c59eac5339b4e5c80def637cccc0cfe82106"
  }
}
