{
  "name": "hibachi",
  "chain": "arbitrum",
  "timestamp": 1753687629,
  "configHash": "0x4e1db2bd50baa98b17b8b4b24a341d32486bacc73d51a2caa4287450de89c6f6",
  "entries": [
    {
      "address": "arb1:0x0000000000000000000000000000000000000000",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "arb1:0xa5f208e072434bC67592E4C49C1B991BA79BCA46",
          "role": "admin"
        }
      ]
    },
    {
      "name": "RiscZeroVerifierRouter",
      "address": "arb1:0x0b144E07A0826182B6b59788c34b32Bfa86Fb711",
      "type": "Contract",
      "template": "risc0/RiscZeroVerifierRouter",
      "sourceHashes": [
        "0x09d9c9ba25591eb4e658e547eb5f5cc798449477bf745e6fa9f516a339f88364"
      ],
      "proxyType": "immutable",
      "description": "A router proxy that routes to verifiers based on selectors. The mapping can be changed by a permissioned owner (arb1:0xDC986a09728F76110FF666eE7b20d99086501d15).",
      "sinceTimestamp": 1719439379,
      "sinceBlock": 226048409,
      "values": {
        "$immutable": true,
        "owner": "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15",
        "pendingOwner": "arb1:0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "arb1:0x0b144E07A0826182B6b59788c34b32Bfa86Fb711": "RiscZeroVerifierRouter"
      }
    },
    {
      "name": "Hibachi",
      "address": "arb1:0x0E9C1a3AA696299E38b00a8144Bf6dc16C1F5400",
      "type": "Contract",
      "template": "hibachi/Hibachi",
      "sourceHashes": [
        "0x8c407edc4ac1fa1cea2c45903e2cf0158906a2ff39fc2eb92aca3ca9f0d43ed8",
        "0xcf9fc16700d140e29a359a4c254a4a619c0093716fce601e5146e0a735e71f73"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Main contract handling deposits, withdrawals and state updates.",
      "ignoreInWatchMode": [
        "accountsRoot",
        "contractsRoot",
        "ordersRoot",
        "stateVersion",
        "systemTimestamp"
      ],
      "sinceTimestamp": 1727696741,
      "sinceBlock": 258910373,
      "values": {
        "$admin": "arb1:0xa3F61770BBd12e705734Ad940f382227d0fD82fE",
        "$implementation": "arb1:0x66EBbea46E474e4e1C10fE2209184182a89736a4",
        "$pastUpgrades": [
          [
            "2024-09-30T11:45:41.000Z",
            "0x9359a139dbf526a63ed41e4c349158dc15dcbddb93ef605f49974f4457c97f05",
            ["arb1:0x7ebf03D61a452fEA00aeAFd65Fd0Fe637cB2a3a7"]
          ],
          [
            "2025-06-12T14:23:26.000Z",
            "0xab6a3274885982920d9fabd9eb2e90594a60288b9d95e1ba82550b3d2d2147ab",
            ["arb1:0x66EBbea46E474e4e1C10fE2209184182a89736a4"]
          ]
        ],
        "$upgradeCount": 2,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["arb1:0x420eee5B429664F08f001786541acbE0F59feF5c"]
          },
          "PROVER_ROLE": {
            "adminRole": "ADMIN_ROLE",
            "members": ["arb1:0x40e94Ed956F3077F4EA64935C1D52ae30951157C"]
          },
          "X_CHAIN_ADMIN_ROLE": {
            "adminRole": "ADMIN_ROLE",
            "members": ["arb1:0x420eee5B429664F08f001786541acbE0F59feF5c"]
          },
          "KILLSWITCH_ROLE": {
            "adminRole": "ADMIN_ROLE",
            "members": ["arb1:0x420eee5B429664F08f001786541acbE0F59feF5c"]
          },
          "ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["arb1:0x420eee5B429664F08f001786541acbE0F59feF5c"]
          }
        },
        "accountsRoot": "0x5ee5446fefb0ab296b432deef9b81935d8b81829aef4067b420b0be1ddf93148",
        "activeHibachiChainIds": [1],
        "ADMIN_ROLE": "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
        "contractsRoot": "0xdc9d34aa370809356c2498116b88be1d0382c21613352fe11e8b34957917c77c",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "depositReclaimTimeout": 86400,
        "exchangeVerificationAddress": "arb1:0x4aF802A931CADb2aF3a9Ec4C810A0485a2eF3610",
        "hibachiChainId": 1,
        "hibachiEscape": "arb1:0x818351386C3a63A8244C78aDAD42B9b4f9a516d4",
        "isActive": true,
        "isFrozen": false,
        "killswitch": true,
        "KILLSWITCH_ROLE": "0x595f6f9896d6023735c160e5407bcd94ccbc31ce3f912954c3a453f10079417a",
        "mainHibachiChainId": 1,
        "nativeAssetInfo": [
          {
            "assetId": 0,
            "assetAddress": "arb1:0x0000000000000000000000000000000000000000",
            "quantum": 0
          },
          {
            "assetId": 1,
            "assetAddress": "arb1:0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",
            "quantum": 1
          },
          {
            "assetId": 0,
            "assetAddress": "arb1:0x0000000000000000000000000000000000000000",
            "quantum": 0
          },
          {
            "assetId": 0,
            "assetAddress": "arb1:0x0000000000000000000000000000000000000000",
            "quantum": 0
          },
          {
            "assetId": 0,
            "assetAddress": "arb1:0x0000000000000000000000000000000000000000",
            "quantum": 0
          }
        ],
        "oracleQuorum": 1,
        "oracles": ["arb1:0x735d77411693F244d35192d95D8804B6b371a553"],
        "ordersRoot": "0x56798c8fe7d1a1614779a3b5544ec6ec68729b1a5eba3bee0bd4a23c85e8f30b",
        "PROVER_ROLE": "0x60044782a422109ac08a415e44260ad5d3bad63d96ebe1fac0363399642ee3f2",
        "risc0Verifier": "arb1:0x0b144E07A0826182B6b59788c34b32Bfa86Fb711",
        "stateUpdateProgramImageId": "0xe36df63187239cb11fc29356c18dd9996c19ef4668379f72956f648fbb7c72f2",
        "stateUpdateProgramVKey": "0x00761079b58d6d09fea47ee455238cae478986d76fc2c778e293f3c846a148b3",
        "stateVersion": 32869,
        "succinctVerifier": "arb1:0x397A5f7f3dBd538f23DE225B51f532c34448dA9B",
        "systemTimestamp": 1753687454890,
        "wormhole": "arb1:0xa5f208e072434bC67592E4C49C1B991BA79BCA46",
        "wormholeConsistency": 0,
        "X_CHAIN_ADMIN_ROLE": "0x7f4e9d34561a2b0f5c5e4baeaa912930e44a73596dda16054a63f3c24a574197"
      },
      "implementationNames": {
        "arb1:0x0E9C1a3AA696299E38b00a8144Bf6dc16C1F5400": "TransparentUpgradeableProxy",
        "arb1:0x66EBbea46E474e4e1C10fE2209184182a89736a4": "Hibachi"
      }
    },
    {
      "name": "SP1VerifierGateway",
      "address": "arb1:0x397A5f7f3dBd538f23DE225B51f532c34448dA9B",
      "type": "Contract",
      "template": "succinct/SP1VerifierGateway",
      "sourceHashes": [
        "0xc651adcd746b8794c5b6c418aeb146f1b13b207cc9d2712ba66a42bd4b29af37"
      ],
      "proxyType": "immutable",
      "description": "This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.",
      "sinceTimestamp": 1730486980,
      "sinceBlock": 270003407,
      "values": {
        "$immutable": true,
        "activeVerifiers": [
          {
            "selector": "0xa4594c59",
            "verifier": "arb1:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5"
          }
        ],
        "allVerifiers": [
          {
            "selector": "0x09069090",
            "verifier": "arb1:0xE780809121774D06aD9B0EEeC620fF4B3913Ced1"
          },
          {
            "selector": "0x11b6a09d",
            "verifier": "arb1:0xa27A057CAb1a4798c6242F6eE5b2416B7Cd45E5D"
          },
          {
            "selector": "0xa4594c59",
            "verifier": "arb1:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5"
          }
        ],
        "owner": "arb1:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"
      },
      "fieldMeta": {
        "activeVerifiers": {
          "description": "Verifiers that are routed to by their selector and not frozen."
        },
        "allVerifiers": {
          "description": "All verifiers that were ever routed to by this gateway."
        }
      },
      "implementationNames": {
        "arb1:0x397A5f7f3dBd538f23DE225B51f532c34448dA9B": "SP1VerifierGateway"
      }
    },
    {
      "address": "arb1:0x40e94Ed956F3077F4EA64935C1D52ae30951157C",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "arb1:0x420eee5B429664F08f001786541acbE0F59feF5c",
      "type": "EOA",
      "proxyType": "EOA",
      "controlsMajorityOfUpgradePermissions": true,
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "arb1:0x0E9C1a3AA696299E38b00a8144Bf6dc16C1F5400",
          "role": "admin",
          "via": [
            { "address": "arb1:0xa3F61770BBd12e705734Ad940f382227d0fD82fE" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "arb1:0x818351386C3a63A8244C78aDAD42B9b4f9a516d4",
          "role": "admin",
          "via": [
            { "address": "arb1:0x951e848eAD9c2B4aFaEa5e0649b36A00f97f01b1" }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "arb1:0x951e848eAD9c2B4aFaEa5e0649b36A00f97f01b1",
          "role": ".owner"
        },
        {
          "permission": "act",
          "from": "arb1:0xa3F61770BBd12e705734Ad940f382227d0fD82fE",
          "role": ".owner"
        }
      ]
    },
    {
      "name": "HibachiRedemptionERC20",
      "address": "arb1:0x4407f4F272f78D1157C59E8557729be36137158F",
      "type": "Contract",
      "sourceHashes": [
        "0xdea0eac90ab769ebe42626b15e328208c17a7c9d89cd10cb1f85cda091919a9f"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1727696743,
      "sinceBlock": 258910382,
      "values": {
        "$immutable": true,
        "admin": "arb1:0x0000000000000000000000000000000000000000",
        "decimals": 0,
        "name": "",
        "symbol": "",
        "totalSupply": 0
      },
      "implementationNames": {
        "arb1:0x4407f4F272f78D1157C59E8557729be36137158F": "HibachiRedemptionERC20"
      }
    },
    {
      "address": "arb1:0x4aF802A931CADb2aF3a9Ec4C810A0485a2eF3610",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SP1Verifier",
      "address": "arb1:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5",
      "type": "Contract",
      "sourceHashes": [
        "0x3a6132d983fd1e502fe3b75fbf74f0debc0d183b404d144b5220d8d5b3645582"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1748550121,
      "sinceBlock": 341867739,
      "values": {
        "$immutable": true,
        "VERIFIER_HASH": "0xa4594c59bbc142f3b81c3ecb7f50a7c34bc9af7c4c444b5d48b795427e285913",
        "VERSION": "v5.0.0"
      },
      "implementationNames": {
        "arb1:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5": "SP1Verifier"
      }
    },
    {
      "address": "arb1:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "arb1:0x735d77411693F244d35192d95D8804B6b371a553",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "HibachiEscape",
      "address": "arb1:0x818351386C3a63A8244C78aDAD42B9b4f9a516d4",
      "type": "Contract",
      "template": "hibachi/HibachiEscape",
      "sourceHashes": [
        "0x8c407edc4ac1fa1cea2c45903e2cf0158906a2ff39fc2eb92aca3ca9f0d43ed8",
        "0x2e07763be9dc9a25b094cd3b654d54c13747280ed33b0b885f9bac8c33b4c429"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1727696742,
      "sinceBlock": 258910379,
      "values": {
        "$admin": "arb1:0x951e848eAD9c2B4aFaEa5e0649b36A00f97f01b1",
        "$implementation": "arb1:0x86C58d5853E05110e9297A324ceFD455A9585b9E",
        "$pastUpgrades": [
          [
            "2024-09-30T11:45:42.000Z",
            "0x00682fe39900e125f76eb9da07dcd03ccd288833941576e35a4ef4932e8bc95e",
            ["arb1:0x86C58d5853E05110e9297A324ceFD455A9585b9E"]
          ]
        ],
        "$upgradeCount": 1,
        "ADMIN_ROLE": "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
        "assetValueProgramImageId": "0x697af3cce3579cda8510e7102e3e62c4ca0b14802e551bf2b46e402eef2ce98d",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "hibachi": "arb1:0x0E9C1a3AA696299E38b00a8144Bf6dc16C1F5400",
        "netEquityProgramImageId": "0xb19ddcafbad9a4cff97c943ab045a6e4c271366743ea6d8d3496e26e87dca0c6",
        "redemptionTokenAddress": [
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000"
        ],
        "redemptionTokenImpl": "arb1:0x4407f4F272f78D1157C59E8557729be36137158F",
        "verifier": "arb1:0x0b144E07A0826182B6b59788c34b32Bfa86Fb711",
        "wormhole": "arb1:0xa5f208e072434bC67592E4C49C1B991BA79BCA46",
        "wormholeConsistency": 0,
        "X_CHAIN_ADMIN_ROLE": "0x7f4e9d34561a2b0f5c5e4baeaa912930e44a73596dda16054a63f3c24a574197",
        "xChainNonce": 0
      },
      "implementationNames": {
        "arb1:0x818351386C3a63A8244C78aDAD42B9b4f9a516d4": "TransparentUpgradeableProxy",
        "arb1:0x86C58d5853E05110e9297A324ceFD455A9585b9E": "HibachiEscape"
      }
    },
    {
      "address": "arb1:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ProxyAdmin",
      "address": "arb1:0x951e848eAD9c2B4aFaEa5e0649b36A00f97f01b1",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x8fd8f837bb320bd2a7463c103bea2ff207b0969b5795f320a6c868858aa92074"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "arb1:0x818351386C3a63A8244C78aDAD42B9b4f9a516d4",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1727696742,
      "sinceBlock": 258910379,
      "values": {
        "$immutable": true,
        "owner": "arb1:0x420eee5B429664F08f001786541acbE0F59feF5c",
        "UPGRADE_INTERFACE_VERSION": "5.0.0"
      },
      "implementationNames": {
        "arb1:0x951e848eAD9c2B4aFaEa5e0649b36A00f97f01b1": "ProxyAdmin"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "arb1:0xa3F61770BBd12e705734Ad940f382227d0fD82fE",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x8fd8f837bb320bd2a7463c103bea2ff207b0969b5795f320a6c868858aa92074"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "arb1:0x0E9C1a3AA696299E38b00a8144Bf6dc16C1F5400",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1727696741,
      "sinceBlock": 258910373,
      "values": {
        "$immutable": true,
        "owner": "arb1:0x420eee5B429664F08f001786541acbE0F59feF5c",
        "UPGRADE_INTERFACE_VERSION": "5.0.0"
      },
      "implementationNames": {
        "arb1:0xa3F61770BBd12e705734Ad940f382227d0fD82fE": "ProxyAdmin"
      }
    },
    {
      "name": "Implementation",
      "address": "arb1:0xa5f208e072434bC67592E4C49C1B991BA79BCA46",
      "type": "Contract",
      "template": "wormhole",
      "sourceHashes": [
        "0xc486dadb78da4c5139415b390deca7f0e9e5a949285d6abc2668520e7bcfb1f8",
        "0xed43992073f048d50955578734b2138957f1a16aae92f681f512d7135d3658fe"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1658336732,
      "sinceBlock": 18128584,
      "values": {
        "$admin": "arb1:0x0000000000000000000000000000000000000000",
        "$implementation": "arb1:0x621199f6beB2ba6fbD962E8A52A320EA4F6D4aA3",
        "$pastUpgrades": [
          [
            "2022-07-20T17:05:32.000Z",
            "0xb6c7eb936ce99cd92c8c46f3e2ea531ff36e62810d892e720f4ad24f7dd5f253",
            ["arb1:0x126783A6Cb203a3E35344528B26ca3a0489a1485"]
          ],
          [
            "2022-07-20T17:05:32.000Z",
            "0xb6c7eb936ce99cd92c8c46f3e2ea531ff36e62810d892e720f4ad24f7dd5f253",
            ["arb1:0x91175AEE6dAc41B9C1f749ded077568aD93B84Ca"]
          ],
          [
            "2024-01-27T02:22:46.000Z",
            "0x4c2eb53a9841aa2c471d2c7c08260384a4acd32420e4383fd5465f2812e58fe4",
            ["arb1:0x621199f6beB2ba6fbD962E8A52A320EA4F6D4aA3"]
          ]
        ],
        "$upgradeCount": 3,
        "chainId": 23,
        "evmChainId": 42161,
        "getCurrentGuardianSetIndex": 4,
        "getGuardianSetExpiry": 0,
        "governanceChainId": 1,
        "governanceContract": "0x0000000000000000000000000000000000000000000000000000000000000004",
        "isFork": false,
        "messageFee": 0,
        "quorum": [1, 1, 2, 3, 3, 4, 5, 5, 6, 7]
      },
      "implementationNames": {
        "arb1:0xa5f208e072434bC67592E4C49C1B991BA79BCA46": "Wormhole",
        "arb1:0x621199f6beB2ba6fbD962E8A52A320EA4F6D4aA3": "Implementation"
      }
    },
    {
      "address": "arb1:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "arb1:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "arb1:0x397A5f7f3dBd538f23DE225B51f532c34448dA9B",
          "description": "affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes.",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1724204782,
      "sinceBlock": 245028307,
      "values": {
        "$immutable": false,
        "$implementation": "arb1:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "arb1:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126",
          "arb1:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
          "arb1:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"
        ],
        "$threshold": 2,
        "domainSeparator": "0x185e357963cf69402f9a4921a2354b8685eb211841dd51a3bffb313a342335ab",
        "getChainId": 42161,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 11,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "arb1:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878": "GnosisSafeProxy",
        "arb1:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "TimelockController",
      "address": "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15",
      "type": "Contract",
      "template": "global/TimelockController",
      "sourceHashes": [
        "0x5b8836fe706f4142d9d19316f7ae849ba43b55173015f72bc3f9216f7a86cf0d"
      ],
      "proxyType": "immutable",
      "description": "A timelock with access control. The current minimum delay is 3d.",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "arb1:0x0b144E07A0826182B6b59788c34b32Bfa86Fb711",
          "description": "add/remove verifiers and the selectors they are mapped to.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15",
          "description": "manage all access control roles.",
          "role": ".defaultAdminAC"
        }
      ],
      "sinceTimestamp": 1719439371,
      "sinceBlock": 226048377,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["arb1:0xDC986a09728F76110FF666eE7b20d99086501d15"]
          },
          "PROPOSER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["arb1:0xF616A4f81857CFEe54A4A049Ec187172574bd412"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["arb1:0xF616A4f81857CFEe54A4A049Ec187172574bd412"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["arb1:0xF616A4f81857CFEe54A4A049Ec187172574bd412"]
          }
        },
        "Canceller": ["arb1:0xF616A4f81857CFEe54A4A049Ec187172574bd412"],
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdminAC": ["arb1:0xDC986a09728F76110FF666eE7b20d99086501d15"],
        "Executor": ["arb1:0xF616A4f81857CFEe54A4A049Ec187172574bd412"],
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 259200,
        "getMinDelayFormatted": "3d",
        "Proposer": ["arb1:0xF616A4f81857CFEe54A4A049Ec187172574bd412"],
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1"
      },
      "implementationNames": {
        "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15": "TimelockController"
      }
    },
    {
      "address": "arb1:0xF616A4f81857CFEe54A4A049Ec187172574bd412",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "arb1:0x0b144E07A0826182B6b59788c34b32Bfa86Fb711",
          "description": "add/remove verifiers and the selectors they are mapped to.",
          "role": ".owner",
          "via": [
            {
              "address": "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15",
              "delay": 259200
            }
          ]
        },
        {
          "permission": "interact",
          "from": "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15",
          "description": "cancel queued transactions.",
          "role": ".Canceller"
        },
        {
          "permission": "interact",
          "from": "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15",
          "description": "execute transactions that are ready.",
          "role": ".Executor"
        },
        {
          "permission": "interact",
          "from": "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15",
          "description": "manage all access control roles.",
          "role": ".defaultAdminAC",
          "via": [
            {
              "address": "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15",
              "delay": 259200
            }
          ]
        },
        {
          "permission": "interact",
          "from": "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15",
          "description": "propose transactions.",
          "role": ".Proposer"
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15",
          "delay": 259200,
          "role": ".Executor"
        }
      ]
    }
  ],
  "abis": {
    "arb1:0x0b144E07A0826182B6b59788c34b32Bfa86Fb711": [
      "constructor(address admin)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error SelectorInUse(bytes4 selector)",
      "error SelectorRemoved(bytes4 selector)",
      "error SelectorUnknown(bytes4 selector)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function acceptOwnership()",
      "function addVerifier(bytes4 selector, address verifier)",
      "function getVerifier(bytes4 selector) view returns (address)",
      "function getVerifier(bytes seal) view returns (address)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function removeVerifier(bytes4 selector)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function verifiers(bytes4) view returns (address)",
      "function verify(bytes seal, bytes32 imageId, bytes32 journalDigest) view",
      "function verifyIntegrity(tuple(bytes seal, bytes32 claimDigest) receipt) view"
    ],
    "arb1:0x0E9C1a3AA696299E38b00a8144Bf6dc16C1F5400": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "arb1:0x397A5f7f3dBd538f23DE225B51f532c34448dA9B": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error RouteAlreadyExists(address verifier)",
      "error RouteIsFrozen(bytes4 selector)",
      "error RouteNotFound(bytes4 selector)",
      "error SelectorCannotBeZero()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RouteAdded(bytes4 selector, address verifier)",
      "event RouteFrozen(bytes4 selector, address verifier)",
      "function addRoute(address verifier)",
      "function freezeRoute(bytes4 selector)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function routes(bytes4) view returns (address verifier, bool frozen)",
      "function transferOwnership(address newOwner)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "arb1:0x4407f4F272f78D1157C59E8557729be36137158F": [
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error Unauthorized()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint64 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function admin() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(address owner, uint256 amount)",
      "function decimals() pure returns (uint8)",
      "function initialize(string name, string symbol)",
      "function mint(address recipient, uint256 amount)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)"
    ],
    "arb1:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5": [
      "error InvalidProof()",
      "error ProofInvalid()",
      "error PublicInputNotInField()",
      "error WrongVerifierSelector(bytes4 received, bytes4 expected)",
      "function VERIFIER_HASH() pure returns (bytes32)",
      "function VERSION() pure returns (string)",
      "function Verify(uint256[8] proof, uint256[2] input) view",
      "function compressProof(uint256[8] proof) view returns (uint256[4] compressed)",
      "function hashPublicValues(bytes publicValues) pure returns (bytes32)",
      "function verifyCompressedProof(uint256[4] compressedProof, uint256[2] input) view",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "arb1:0x621199f6beB2ba6fbD962E8A52A320EA4F6D4aA3": [
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ContractUpgraded(address indexed oldContract, address indexed newContract)",
      "event GuardianSetAdded(uint32 indexed index)",
      "event LogMessagePublished(address indexed sender, uint64 sequence, uint32 nonce, bytes payload, uint8 consistencyLevel)",
      "event Upgraded(address indexed implementation)",
      "function chainId() view returns (uint16)",
      "function evmChainId() view returns (uint256)",
      "function getCurrentGuardianSetIndex() view returns (uint32)",
      "function getGuardianSet(uint32 index) view returns (tuple(address[] keys, uint32 expirationTime))",
      "function getGuardianSetExpiry() view returns (uint32)",
      "function governanceActionIsConsumed(bytes32 hash) view returns (bool)",
      "function governanceChainId() view returns (uint16)",
      "function governanceContract() view returns (bytes32)",
      "function initialize()",
      "function isFork() view returns (bool)",
      "function isInitialized(address impl) view returns (bool)",
      "function messageFee() view returns (uint256)",
      "function nextSequence(address emitter) view returns (uint64)",
      "function parseAndVerifyVM(bytes encodedVM) view returns (tuple(uint8 version, uint32 timestamp, uint32 nonce, uint16 emitterChainId, bytes32 emitterAddress, uint64 sequence, uint8 consistencyLevel, bytes payload, uint32 guardianSetIndex, tuple(bytes32 r, bytes32 s, uint8 v, uint8 guardianIndex)[] signatures, bytes32 hash) vm, bool valid, string reason)",
      "function parseContractUpgrade(bytes encodedUpgrade) pure returns (tuple(bytes32 module, uint8 action, uint16 chain, address newContract) cu)",
      "function parseGuardianSetUpgrade(bytes encodedUpgrade) pure returns (tuple(bytes32 module, uint8 action, uint16 chain, tuple(address[] keys, uint32 expirationTime) newGuardianSet, uint32 newGuardianSetIndex) gsu)",
      "function parseRecoverChainId(bytes encodedRecoverChainId) pure returns (tuple(bytes32 module, uint8 action, uint256 evmChainId, uint16 newChainId) rci)",
      "function parseSetMessageFee(bytes encodedSetMessageFee) pure returns (tuple(bytes32 module, uint8 action, uint16 chain, uint256 messageFee) smf)",
      "function parseTransferFees(bytes encodedTransferFees) pure returns (tuple(bytes32 module, uint8 action, uint16 chain, uint256 amount, bytes32 recipient) tf)",
      "function parseVM(bytes encodedVM) pure returns (tuple(uint8 version, uint32 timestamp, uint32 nonce, uint16 emitterChainId, bytes32 emitterAddress, uint64 sequence, uint8 consistencyLevel, bytes payload, uint32 guardianSetIndex, tuple(bytes32 r, bytes32 s, uint8 v, uint8 guardianIndex)[] signatures, bytes32 hash) vm)",
      "function publishMessage(uint32 nonce, bytes payload, uint8 consistencyLevel) payable returns (uint64 sequence)",
      "function quorum(uint256 numGuardians) pure returns (uint256 numSignaturesRequiredForQuorum)",
      "function submitContractUpgrade(bytes _vm)",
      "function submitNewGuardianSet(bytes _vm)",
      "function submitRecoverChainId(bytes _vm)",
      "function submitSetMessageFee(bytes _vm)",
      "function submitTransferFees(bytes _vm)",
      "function verifySignatures(bytes32 hash, tuple(bytes32 r, bytes32 s, uint8 v, uint8 guardianIndex)[] signatures, tuple(address[] keys, uint32 expirationTime) guardianSet) pure returns (bool valid, string reason)",
      "function verifyVM(tuple(uint8 version, uint32 timestamp, uint32 nonce, uint16 emitterChainId, bytes32 emitterAddress, uint64 sequence, uint8 consistencyLevel, bytes payload, uint32 guardianSetIndex, tuple(bytes32 r, bytes32 s, uint8 v, uint8 guardianIndex)[] signatures, bytes32 hash) vm) view returns (bool valid, string reason)"
    ],
    "arb1:0x66EBbea46E474e4e1C10fE2209184182a89736a4": [
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error AddressEmptyCode(address target)",
      "error AddressInsufficientBalance(address account)",
      "error AmountNotRound()",
      "error AmountTooHigh()",
      "error AmountTooLow()",
      "error AssetAlreadyRegistered(uint256 assetId)",
      "error FailedInnerCall()",
      "error FeeAmountTooHigh()",
      "error Frozen()",
      "error InvalidAsset(uint256 assetId)",
      "error InvalidInitialization()",
      "error InvalidVerifier()",
      "error InvalidWallet()",
      "error Killswitch()",
      "error NotActive()",
      "error NotFrozen()",
      "error NotInitializing()",
      "error NothingToReclaim()",
      "error NothingToWithdraw()",
      "error ReclaimInProgress()",
      "error ReclaimTimeout()",
      "error SafeERC20FailedOperation(address token)",
      "error StateUpdateIncorrectChain()",
      "error StateUpdateInvalid()",
      "error StateUpdateInvalidHibachiAddress()",
      "error StateUpdateInvalidHibachiChainId()",
      "error StateUpdateInvalidOperationType(uint8 operationType)",
      "error StateUpdateInvalidPreviousRoot()",
      "error StateUpdateInvalidSystemTime()",
      "error StateUpdateOracleNotRegistered()",
      "error StateUpdateOracleQuorumTooLow()",
      "error Unauthorized()",
      "error XChainAlreadyActive()",
      "error XChainInvalidPayload()",
      "error XChainInvalidVersion()",
      "error XChainNotActive()",
      "error XChainNotAuthorized()",
      "error XChainRemoteChainNotMapped()",
      "error XChainRemoteNotMainChain()",
      "error XChainSameChainId()",
      "error XChainWormholeNotConfigured()",
      "error ZeroInput()",
      "event Initialized(uint64 version)",
      "event LogDeposit(address indexed accountAddress, uint256 assetId, uint256 quantizedAmount, uint256 quantizedAmountFees, address senderAddress)",
      "event LogDepositReclaim(address indexed accountAddress, uint256 assetId, uint256 quantizedAmount)",
      "event LogDepositReclaimRequest(address indexed accountAddress, uint256 assetId, uint256 quantizedAmount)",
      "event LogWithdraw(address indexed targetAddress, uint256 assetId, uint256 amount)",
      "event RegisterNativeAsset(uint256 assetId, address assetAddress, uint256 quantum)",
      "event RegisterRecoveryWallet(address accountAddress, address recoveryWalletAddress)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event UpdateExchangeState(uint256 stateVersion, bytes32 postAccountRoot, bytes32 postOrderRoot, bytes32 postContractRoot, uint256 postSystemTime)",
      "event UpdateGuestImageId(bytes32 newGuestImageId)",
      "event UpdateGuestVKey(bytes32 newGuestVKey)",
      "event UpdateKillswitch(bool killswitch)",
      "event UpdateOracleQuorum(uint256 oracleQuorum)",
      "event UpdateOracleRegistration(address oracleAddress, bool enabled)",
      "event UpdateStateVersion(uint256 stateVersion)",
      "event UpdateVerificationAddress(address exchangeVerificationAddress)",
      "event UpdateVerifier(uint8 verifier, address newVerifier)",
      "event WormholeChainActivation(uint16 hibachiChainId, uint256 stateVersion, uint64 sequence)",
      "event WormholeFreeze(uint256 stateVersion, uint64 sequence)",
      "event WormholeMainChainUpdate(uint16 hibachiChainId, uint256 stateVersion, uint64 sequence)",
      "event WormholeStateUpdate(uint16 hibachiChainId, uint256 stateVersion, uint64 sequence)",
      "function ADMIN_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function KILLSWITCH_ROLE() view returns (bytes32)",
      "function PROVER_ROLE() view returns (bytes32)",
      "function X_CHAIN_ADMIN_ROLE() view returns (bytes32)",
      "function accountsRoot() view returns (bytes32)",
      "function activateChain(uint16 _hibachiChainId) payable",
      "function activeHibachiChainIds(uint256) view returns (uint16)",
      "function authorizedRemotes(uint16) view returns (bytes32)",
      "function contractsRoot() view returns (bytes32)",
      "function deposit(address accountAddress, uint256 assetId, uint256 amount, uint256 amountFees) payable",
      "function depositReclaimTimeout() view returns (uint256)",
      "function exchangeVerificationAddress() view returns (address)",
      "function freeze() payable",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hibachiChainId() view returns (uint16)",
      "function hibachiEscape() view returns (address)",
      "function initialize(address _risc0Verifier, address _succinctVerifier, address _hibachiEscape, address _wormhole, uint256 _depositReclaimTimeout, uint16 _mainHibachiChainId, uint16 _hibachiChainId)",
      "function isActive() view returns (bool)",
      "function isChainActive(uint16 _hibachiChainId) view returns (bool)",
      "function isFrozen() view returns (bool)",
      "function killswitch() view returns (bool)",
      "function mainHibachiChainId() view returns (uint16)",
      "function nativeAssetInfo(uint256) view returns (uint256 assetId, address assetAddress, uint256 quantum)",
      "function oracleQuorum() view returns (uint256)",
      "function oracleRegistration(address) view returns (bool)",
      "function ordersRoot() view returns (bytes32)",
      "function pendingDeposits(address, uint256) view returns (uint64 pendingDeposits, uint64 pendingDepositFees, uint64 pendingDepositReclaims, uint64 reclaimTriggeredTimestamp)",
      "function pendingWithdrawals(address, uint256) view returns (uint256)",
      "function receiveWormholeMessage(bytes encodedVM)",
      "function reclaimDeposit(address accountAddress, uint256 assetId)",
      "function recoveryWallets(address) view returns (address)",
      "function redeemTokens(uint256 assetId, uint256 amount)",
      "function registerNativeAsset(uint256 assetId, address assetAddress, uint8 quantumDecimals)",
      "function registerRecoveryWallet(address recoveryWallet)",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function revokeRole(bytes32 role, address account)",
      "function risc0Verifier() view returns (address)",
      "function startDepositReclaim(address accountAddress, uint256 assetId)",
      "function stateUpdateProgramImageId() view returns (bytes32)",
      "function stateUpdateProgramVKey() view returns (bytes32)",
      "function stateVersion() view returns (uint256)",
      "function succinctVerifier() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function systemTimestamp() view returns (uint256)",
      "function updateContractRoot(bytes32 newContractsRoot)",
      "function updateExchangeVerificationAddress(address _exchangeVerificationAddress)",
      "function updateGuestImageId(bytes32 newGuestImageId)",
      "function updateGuestVKey(bytes32 newGuestVKey)",
      "function updateKillswitch(bool _killswitch)",
      "function updateMainChain(uint16 _hibachiChainId) payable",
      "function updateOracleQuorum(uint256 _oracleQuorum)",
      "function updateOracleRegistration(address oracleAddress, bool enabled)",
      "function updateStateWithProof(uint8 verifier, uint256[] stateUpdate, bytes seal, uint256 wormholeFees) payable",
      "function updateVerifier(uint8 verifier, address newVerifier)",
      "function updateWormholeChainId(uint16 _hibachiChainId, uint16 _wormholeChainId)",
      "function updateWormholeConsistency(uint8 _wormholeConsistency)",
      "function updateXChainRemote(uint16 _hibachiChainId, bytes32 _remote)",
      "function withdraw(uint256 assetId, address targetAddress)",
      "function withdrawToRedemptionTokens(uint256 assetId)",
      "function wormhole() view returns (address)",
      "function wormholeChainIdToHibachiChainId(uint16) view returns (uint16)",
      "function wormholeConsistency() view returns (uint8)"
    ],
    "arb1:0x818351386C3a63A8244C78aDAD42B9b4f9a516d4": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "arb1:0x86C58d5853E05110e9297A324ceFD455A9585b9E": [
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error AmountTooHigh()",
      "error ERC1167FailedCreateClone()",
      "error InvalidInitialization()",
      "error NotFrozen()",
      "error NotInitializing()",
      "error StateUpdateAlreadyComputed()",
      "error StateUpdateInvalid()",
      "error StateUpdateInvalidPreviousRoot()",
      "error StateUpdateInvalidSystemTime()",
      "error TokenAlreadyDeployed()",
      "error TokenNotDeployed()",
      "error Unauthorized()",
      "error XChainAlreadyDelivered()",
      "error XChainInvalidDstChain()",
      "error XChainInvalidPayload()",
      "error XChainNotActive()",
      "error XChainNotAuthorized()",
      "error XChainNotMainChain()",
      "error XChainRemoteChainNotMapped()",
      "error XChainWormholeNotConfigured()",
      "error ZeroInput()",
      "event Initialized(uint64 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event UpdateVerifier(address newVerifier)",
      "event WormholeSendRedemptionTokens(uint64 sequence, uint16 dstHibachiChainId, uint256 assetId, uint256 amount, bytes32 recipient)",
      "function ADMIN_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function X_CHAIN_ADMIN_ROLE() view returns (bytes32)",
      "function assetValueProgramImageId() view returns (bytes32)",
      "function authorizedRemotes(uint16) view returns (bytes32)",
      "function burnRedemptionTokens(uint256 assetId, address owner, uint256 amount)",
      "function deployRedemptionToken(uint256 assetId)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hibachi() view returns (address)",
      "function initialize(address _verifier, address _hibachi, address _redemptionTokenImpl, address _wormhole)",
      "function mintRedemptionTokens(uint256 assetId, address recipient, uint256 amount)",
      "function netEquity(address) view returns (uint256)",
      "function netEquityComputed(address) view returns (bool)",
      "function netEquityProgramImageId() view returns (bytes32)",
      "function proveNetEquity(uint256[] output, bytes seal)",
      "function receiveRedemptionTokens(bytes encodedVM)",
      "function redeemNetEquityForTokens(uint256[] output, bytes seal, address accountAddress)",
      "function redeemTokensForNetEquity(uint256[] output, bytes seal, address accountAddress)",
      "function redemptionTokenAddress(uint256) view returns (address)",
      "function redemptionTokenImpl() view returns (address)",
      "function remoteXChainNonces(uint16, uint256) view returns (bool)",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function revokeRole(bytes32 role, address account)",
      "function sendRedemptionTokens(uint256 assetId, uint256 amount, uint16 dstHibachiChainId, bytes32 recipient) payable",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateAssetValueGuestImageId(bytes32 newImageId)",
      "function updateNetEquityGuestImageId(bytes32 newImageId)",
      "function updateVerifier(address newVerifier)",
      "function updateWormholeConsistency(uint8 _wormholeConsistency)",
      "function updateXChainRemote(uint16 _hibachiChainId, bytes32 _remote)",
      "function verifier() view returns (address)",
      "function wormhole() view returns (address)",
      "function wormholeConsistency() view returns (uint8)",
      "function xChainNonce() view returns (uint256)"
    ],
    "arb1:0x951e848eAD9c2B4aFaEa5e0649b36A00f97f01b1": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "arb1:0xa3F61770BBd12e705734Ad940f382227d0fD82fE": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "arb1:0xa5f208e072434bC67592E4C49C1B991BA79BCA46": [
      "constructor(address setup, bytes initData)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "arb1:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878": [
      "constructor(address _singleton)"
    ],
    "arb1:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "arb1:0xDC986a09728F76110FF666eE7b20d99086501d15": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error FailedInnerCall()",
      "error TimelockInsufficientDelay(uint256 delay, uint256 minDelay)",
      "error TimelockInvalidOperationLength(uint256 targets, uint256 payloads, uint256 values)",
      "error TimelockUnauthorizedCaller(address caller)",
      "error TimelockUnexecutedPredecessor(bytes32 predecessorId)",
      "error TimelockUnexpectedOperationState(bytes32 operationId, bytes32 expectedStates)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getOperationState(bytes32 id) view returns (uint8)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "global/TimelockController": "0x67edad38b59e4cfe883d5d3aea9856bddd5bbd9694ea78e137c09c8f3cd953d7",
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "hibachi/Hibachi": "0x3a32f94bd067707675239403b6066a4ef372d07752f0fe4e42283a9c7baddbc3",
    "hibachi/HibachiEscape": "0x8c07546a9915614b8f2fbb99d21c17bebe3af8b84e7aaca3abf5b0a40347642e",
    "risc0/RiscZeroVerifierRouter": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "succinct/SP1VerifierGateway": "0x9dd3e588fb5bceb40abbb60a0e68e868c7e81a6959705eb6f5f2c53651d5e85c",
    "wormhole": "0x5a6ef2aca99ae337de77c543a9fe799d22ea71925a551ec8314b9ed552a8a71c"
  },
  "usedBlockNumbers": { "arbitrum": 362381319 },
  "permissionsConfigHash": "0xe9a525d80996f3bce4d5cd1a7430d896ede903fbb5ba3f0948447f9c64c0108b"
}
