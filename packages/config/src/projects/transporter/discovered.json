{
  "name": "transporter",
  "timestamp": 1758287245,
  "configHash": "0x77086b69164db28043aa01b04f7a9211cc180dbbcbdb859b619ccebb53aa9111",
  "entries": [
    {
      "address": "eth:0x0000000000000000000000000000000000000001",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x00348860Cb152Aa20617a1265343D1989C976575",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x003491Bdfe15179aC2cEfEf9F5D0e235F096C3b0",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1737115091,
      "sinceBlock": 21644063,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x442457bA124721f7e0AB7bf8a80FBc35ACDdc9f5",
        "getTokenDecimals": 18,
        "owner": "eth:0xE6ef8EfE8701996f909256B2e5CFe35842F42B50",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x003491Bdfe15179aC2cEfEf9F5D0e235F096C3b0": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x00D0E4e85ccCaF37F1a10d7738ACFC59803B21fD",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x00E64619Bb29f7E1d4E1CC9f21ecEA05189fd8ab",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x0100000000000000000000000000000000000000",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SiloedLockReleaseTokenPool",
      "address": "eth:0x011Ef1fe26D20077A59F38e9Ad155b166AD87D40",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x9028114a8dae289d45ca7a9ec2b46c04b63f9ed32d956c08dc09d650f2a7af19"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739912039,
      "sinceBlock": 21875772,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0xc07556a0Bd177F8de4D077f449C2653A072F3798",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "15971525489660198786",
          "3734403246176062136",
          "6916147374840168594",
          "7937294810946806131",
          "4627098889531055414"
        ],
        "getToken": "eth:0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "getTokenDecimals": 18,
        "getUnsiloedLiquidity": "2743836676867846696418",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "SiloedLockReleaseTokenPool 1.6.0"
      },
      "implementationNames": {
        "eth:0x011Ef1fe26D20077A59F38e9Ad155b166AD87D40": "SiloedLockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x0129211377B414Cad2c624C40c342FAffB3B3F0F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x01346721418045A6c07b71052e452eF8615e9084",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727415695,
      "sinceBlock": 20839933,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 26,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "mode",
          "onRamp": "eth:0x7d2aF78868993a5a86676BA639eC0412709707D9",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21041158,
          "configDigest": "0x0001e9a1d95d61f3e80536b39e209d13812644a7017ff4339919bd3df9f4f10f"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x01346721418045A6c07b71052e452eF8615e9084": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x013D4A675Fd02359c3c35Abc514dafd97B127e34",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x014ABcfDbCe9F67d0Df34574664a6C0A241Ec03A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x0238d2C272f17CF11AEDB08CDE515d56ED25E2E4",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1718911127,
      "sinceBlock": 20134975,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x3999490C55Fb8332F5f3AD00212435526fA3E576",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0xc4506022Fb8090774E8A628d5084EED61D9B99Ee",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x0238d2C272f17CF11AEDB08CDE515d56ED25E2E4": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x0243c9066B75Cb9Abd97b08a7AAeEDbaeC9D717e",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1747764215,
      "sinceBlock": 22525788,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "6916147374840168594"],
        "getToken": "eth:0x3B1B728780919C1Ed06b2969f4ec6daC16C259f3",
        "getTokenDecimals": 18,
        "owner": "eth:0xb5f31aA9F6c8EB2cB513E11F8dB6E11f99Ab6f8f",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x0243c9066B75Cb9Abd97b08a7AAeEDbaeC9D717e": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x02b60267bceeaFDC45005e0Fa0dd783eFeBc9F1b",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "HybridLockReleaseUSDCTokenPool",
      "address": "eth:0x03D19033AdA17750D5BC2d8E325337D0748F9FEF",
      "type": "Contract",
      "template": "transporter/HybridLockReleaseUSDCTokenPool",
      "sourceHashes": [
        "0x8ad42f30b603ea0a91acc0140aa1c0909847b0e7fe07fa87d55c1461db0f0d3b"
      ],
      "proxyType": "immutable",
      "description": "A token pool for USDC which uses CCTP for supported chains and Lock/Release for all others",
      "sinceTimestamp": 1755544835,
      "sinceBlock": 23169994,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getCurrentProposedCCTPChainMigration": 0,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "124615329519749607",
          "6433500567565415381",
          "7937294810946806131",
          "3849287863852499584",
          "4949039107694359620",
          "15971525489660198786",
          "3734403246176062136",
          "1923510103922296319",
          "4051577828743386545",
          "6916147374840168594",
          "5142893604156789321"
        ],
        "getTokenDecimals": 6,
        "i_localDomainIdentifier": 0,
        "i_previousPool": "eth:0xc2e3A3C18ccb634622B57fF119a1C8C7f12e8C0c",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "SUPPORTED_USDC_VERSION": 0,
        "typeAndVersion": "USDCTokenPool 1.6.2"
      },
      "implementationNames": {
        "eth:0x03D19033AdA17750D5BC2d8E325337D0748F9FEF": "HybridLockReleaseUSDCTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x03Ed768E002165FE0E4DE9C6D6162DE973E19B5A",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745296295,
      "sinceBlock": 22322169,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545"],
        "getToken": "eth:0x560dBC9c1C261334515905B54C62B85ba11D979C",
        "getTokenDecimals": 18,
        "owner": "eth:0x10163f09E2198b5e80DfDC33312348400bfF9203",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x03Ed768E002165FE0E4DE9C6D6162DE973E19B5A": "BurnMintTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x0428dF02c581E605AABF83005b427b1561b587De",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1741836263,
      "sinceBlock": 22035242,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 42,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "8788096068760390840",
          "onRamp": "eth:0xf1D0D8f9309dD48Ce46110A474C11908e3B49EA3",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 22091128,
          "configDigest": "0x00015469ac3462abe0ba8f2344c45e5ee2095fffde514b12252263a3cf92a59d"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x0428dF02c581E605AABF83005b427b1561b587De": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x047204D42d93a6471F7c9Ec94292B4B00E8e0786",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1711406459,
      "sinceBlock": 19514511,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000001",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000001",
        "getRouter": "eth:0xBDCc99f05D73FB3C2ad4b0F496318BaAE20218b7",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x32bd822d615A3658A68b6fDD30c2fcb2C996D678",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x047204D42d93a6471F7c9Ec94292B4B00E8e0786": "LockReleaseTokenPool"
      }
    },
    {
      "name": "XERC20LockboxTokenPool",
      "address": "eth:0x04db9b1D7f52cB288b95B4934a1fA688F6d0cBc3",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x25f54b635dfa382b7751677a7a8743d4c6abe92cf1e784f8a4d651efe2ec9cfd"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1752600575,
      "sinceBlock": 22926080,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getLockbox": "eth:0x0797c6f55f5c9005996A55959A341018cF69A963",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["2049429975587534727", "6433500567565415381"],
        "getToken": "eth:0x68749665FF8D2d112Fa859AA293F07A622782F38",
        "getTokenDecimals": 6,
        "getXERC20": "eth:0x30974f73A4ac9E606Ed80da928e454977ac486D2",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "XERC20LockboxTokenPool 1.6.0"
      },
      "implementationNames": {
        "eth:0x04db9b1D7f52cB288b95B4934a1fA688F6d0cBc3": "XERC20LockboxTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x0549475Ff447CBC0CfF51CB0719E0AA2dAF4eDC8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1750690739,
      "sinceBlock": 22767877,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "6433500567565415381",
          "15971525489660198786"
        ],
        "getToken": "eth:0x5F64Ab1544D28732F0A24F4713c2C8ec0dA089f0",
        "getTokenDecimals": 18,
        "owner": "eth:0xC3916B3EE83E201D6775470ECcF1E93463f48127",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x0549475Ff447CBC0CfF51CB0719E0AA2dAF4eDC8": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x055114b1019300AAB9EE87f786b8Bd50258D0bdE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "UpgradeableLockReleaseTokenPool",
      "address": "eth:0x06179f7C1be40863405f374E7f5F8806c728660A",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x525b22d02f8b39d3432dfaf0061e3d91caa10d282e86ec7abeb4ca11790f6762",
        "0x7612d95cd6518326945cfb5387b8a37c83d797ad268bd7d9d5695c45b59a579e"
      ],
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736358971,
      "sinceBlock": 21581390,
      "values": {
        "$admin": "eth:0xB54f773211331f3889b74624D341e49328E83473",
        "$implementation": "eth:0x2Ce400703dAcc37b7edFA99D228b8E70a4d3831B",
        "$pastUpgrades": [
          [
            "2025-01-08T17:56:11.000Z",
            "0xda36f4587a166ca621646c1cf3e75f82e1f5219686978a346bf204b52b9cd202",
            ["eth:0x2Ce400703dAcc37b7edFA99D228b8E70a4d3831B"]
          ]
        ],
        "$upgradeCount": 1,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getBridgeLimit": "40000000000000000000000000",
        "getBridgeLimitAdmin": "eth:0xC5BcC58BE6172769ca1a78B8A45752E3C5059c39",
        "getCurrentBridgedAmount": "37815790052866294014887040",
        "getRateLimitAdmin": "eth:0xC5BcC58BE6172769ca1a78B8A45752E3C5059c39",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "15971525489660198786",
          "6433500567565415381",
          "465200170687744372"
        ],
        "getToken": "eth:0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f",
        "getTokenDecimals": 18,
        "owner": "eth:0x5300A1a15135EA4dc7aD5a167152C01EFc9b192A",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x06179f7C1be40863405f374E7f5F8806c728660A": "TransparentUpgradeableProxy",
        "eth:0x2Ce400703dAcc37b7edFA99D228b8E70a4d3831B": "UpgradeableLockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x0669d4d05Fc5bCF261DBADc3b41854a6ee7E2E85",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x06e5891D9b2Ee77740355A309BAF49caaB672f98",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x06f9817a91595E1B595F789Fb91529e8651da9B8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1715364563,
      "sinceBlock": 19841333,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x581CED7408860a33E47CE6cA93e2cbB4bB48c9C7",
        "getSupportedChains": ["11344663589394136015", "4949039107694359620"],
        "getToken": "eth:0x60b9C41d99FE3Eb64Ecc1344baD31D87f1bceD6D",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x06f9817a91595E1B595F789Fb91529e8651da9B8": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x072C7E09981B1c2073e95D3c0e0CF8B90BA4B099",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745592419,
      "sinceBlock": 22346726,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "15971525489660198786"],
        "getToken": "eth:0x140208e46d03B68505b76b25f2F4d079dD9158Ac",
        "getTokenDecimals": 18,
        "owner": "eth:0x52fCc7DA67263b8675912204B19682456D077576",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x072C7E09981B1c2073e95D3c0e0CF8B90BA4B099": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x0883eC4F32CaDe330c56e51a9131F7443a0a576A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0x0897316DFE7141DB1E182551c3e8077cf5dd9695",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1689539603,
      "sinceBlock": 17708254,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["eth:0x541f3cc5772a64f2ba0a47e83236CcE2F089b188"],
        "$threshold": 1,
        "domainSeparator": "0xb675ba56ce231517629fa99360575086e844ce66d988f01b114862feaeb64742",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 99,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0x0897316DFE7141DB1E182551c3e8077cf5dd9695": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x08B4058F16D243C977ea1fe91B20Af31057b5aBb",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729734167,
      "sinceBlock": 21032243,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xf5224EfD7Ea9edFa6b6e06964084b92426DCdE99",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "3734403246176062136",
          "4949039107694359620",
          "15971525489660198786"
        ],
        "getToken": "eth:0x20157DBAbb84e3BBFE68C349d0d44E48AE7B5AD2",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x08B4058F16D243C977ea1fe91B20Af31057b5aBb": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x0a02473E57902fD7764E6E952E2962763045B404",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1738836011,
      "sinceBlock": 21786724,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x8c1BEd5b9a0928467c9B1341Da1D7BD5e10b6549",
        "getTokenDecimals": 18,
        "owner": "eth:0xE3208Aa9d1186c1D1C8A5b76E794b2B68E6cb3a5",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x0a02473E57902fD7764E6E952E2962763045B404": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x0A34677DafCd28916aAc0b22123142EFaBf700Fa",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964635,
      "sinceBlock": 21880124,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0xF3A60e2AB399E5E7C595E154D0eBb18AbdCB9Ba3",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x0A34677DafCd28916aAc0b22123142EFaBf700Fa": "BurnMintTokenPool"
      }
    },
    {
      "name": "MessageTransmitter",
      "address": "eth:0x0a992d191DEeC32aFe36203Ad87D7d289a738F81",
      "type": "Contract",
      "template": "tokens/circle/MessageTransmitter",
      "sourceHashes": [
        "0x0a6be4fecca4861686e0a31878557d698e444ce7024f01190aabc908e17087e3"
      ],
      "proxyType": "immutable",
      "description": "Part of CCTP",
      "ignoreInWatchMode": ["nextAvailableNonce"],
      "sinceTimestamp": 1677628247,
      "sinceBlock": 16730025,
      "values": {
        "$immutable": true,
        "attesterManager": "eth:0x358a85e032aA9507a1303683b2B6A1d1cac3c252",
        "getEnabledAttester": [
          "eth:0xb0Ea8E1bE37F346C7EA7ec708834D0db18A17361",
          "eth:0xE2fEfe09E74b921CbbFF229E7cD40009231501CA"
        ],
        "getNumEnabledAttesters": 2,
        "localDomain": 0,
        "maxMessageBodySize": 8192,
        "nextAvailableNonce": 334799,
        "owner": "eth:0x4aA5bF962852DcC59695F600d346D3F751B0D920",
        "paused": false,
        "pauser": "eth:0xc809b0216B149cc301Cb203EDD84FCdB8F15C4ed",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000",
        "rescuer": "eth:0x6Fa60A88b42AFb0aEe6488826A58864B192442ad",
        "signatureThreshold": 2,
        "version": 0
      },
      "implementationNames": {
        "eth:0x0a992d191DEeC32aFe36203Ad87D7d289a738F81": "MessageTransmitter"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x0Baa542625F1Eb12872F7b2AFd86e10F34f8a3Ae",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1741454915,
      "sinceBlock": 22003648,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "11344663589394136015",
          "11690709103138290329"
        ],
        "getToken": "eth:0x0f90dc4471C2A329d17726aA0D2E76320c2C0EFE",
        "getTokenDecimals": 18,
        "owner": "eth:0x64c72c20587bceFbB74D286D63432cCE19A4FbDA",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x0Baa542625F1Eb12872F7b2AFd86e10F34f8a3Ae": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x0Bc42675799D0C1efE3CDe64857714ae84f075B4",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1724954207,
      "sinceBlock": 20635872,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x61D405818C8127f0fD30102BF01E6227097eF92f",
        "getSupportedChains": ["3734403246176062136", "4949039107694359620"],
        "getToken": "eth:0x30D20208d987713f46DFD34EF128Bb16C404D10f",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x0Bc42675799D0C1efE3CDe64857714ae84f075B4": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x0Bf40b034872D0b364f3DCec04C7434a4Da1C8d9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x0C291Ae31730901515e5C46406A6ba2d88c1f4aA",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1712691755,
      "sinceBlock": 19620237,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x5c16671f7360E32982691c6A14353D8186C57A59",
        "getSupportedChains": [
          "3734403246176062136",
          "4949039107694359620",
          "15971525489660198786"
        ],
        "getToken": "eth:0xB60acD2057067DC9ed8c083f5aa227a244044fD6",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x0C291Ae31730901515e5C46406A6ba2d88c1f4aA": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x0c31b5DcF3CD6e588938D0699912d0028c911362",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1743497303,
      "sinceBlock": 22172960,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "11690709103138290329",
          "124615329519749607"
        ],
        "getToken": "eth:0xd55C9fB62E176a8Eb6968f32958FeFDD0962727E",
        "getTokenDecimals": 18,
        "owner": "eth:0x468fF40d484df5B3a0567FC8556F284E7E3Ce6Cd",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x0c31b5DcF3CD6e588938D0699912d0028c911362": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x0d26BaE784c8986502E072F4e73B6168e2052045",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727416331,
      "sinceBlock": 20839986,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 225,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1562403441176082196",
          "onRamp": "eth:0xD1B33FAd3fF7a793EE39473f865630e3b6371086",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 20989855,
          "configDigest": "0x00017f6dc1253f3b9a2fb67b11996938956196b05169566d1c06cd5200bc524f"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x0d26BaE784c8986502E072F4e73B6168e2052045": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x0D2730AD6D62A49907Fb9273cD4a59D1092cb472",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x0DAFed8dAF42040dB2c6227ca2AEB14D9C8B2602",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1716484655,
      "sinceBlock": 19934018,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x542BF6910dB102D10f84565E041c2761BE95be84",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x482dF7483a52496F4C65AB499966dfcdf4DDFDbc",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x0DAFed8dAF42040dB2c6227ca2AEB14D9C8B2602": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x0ef01909C4aA5403654452729149F0Db8C7be1E1",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1752004703,
      "sinceBlock": 22876707,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6433500567565415381", "15971525489660198786"],
        "getToken": "eth:0xa19f5264F7D7Be11c451C093D8f92592820Bea86",
        "getTokenDecimals": 18,
        "owner": "eth:0x03173E114410dD522ED3B8263f56693796feD8f2",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x0ef01909C4aA5403654452729149F0Db8C7be1E1": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x0F246651F1c2275B4E14d8ae166D1fd3Af05c405",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x0F254ECcC89219CEC945BCeA48A4681eb5a380d7",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1744930139,
      "sinceBlock": 22291807,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 21,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "15293031020466096408",
          "onRamp": "eth:0x1F262f3BB509657D8816f9BfF5Ae58334E8504f5",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615565,
          "configDigest": "0x000199bb1d84277765d89b51fac64c12387b7a82e652c4d1ddd3cd313aebe4d0"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x0F254ECcC89219CEC945BCeA48A4681eb5a380d7": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "CommitStore",
      "address": "eth:0x0f5552d17505dC8f70D6cd65BEADFE20f42bBE75",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1733880851,
      "sinceBlock": 21376015,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 725,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1673871237479749969",
          "onRamp": "eth:0xF487000Fe6FE14Fd5E7E86514219994eCEaB6bA7",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 4,
          "blockNumber": 21424874,
          "configDigest": "0x000112024be49cec5a97d602a4d4c6ee10c6e006ad8d61c9e02557b11b7acd74"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x0f5552d17505dC8f70D6cd65BEADFE20f42bBE75": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "CommitStore",
      "address": "eth:0x0f89C7c0586536B618e0469402e1c8234bc52959",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727362391,
      "sinceBlock": 20835511,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 139,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "metis",
          "onRamp": "eth:0xdF5394c57A0570ECe45DE0c0fA2e722A672B9198",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21041124,
          "configDigest": "0x0001f76bfd3a0a7ac6caa7da3d2cbb6fad6ac30180d5ff7539c011e57ccb2c80"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x0f89C7c0586536B618e0469402e1c8234bc52959": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnFromMintTokenPool",
      "address": "eth:0x1016225Ba7f32e3a6f2842A380D5846D8756648c",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x2dfa2799ef923ad77675bd0e2d6b42de0c29967bca1f226419f990061eac8b76"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745346035,
      "sinceBlock": 22326302,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "6433500567565415381",
          "4051577828743386545",
          "1294465214383781161"
        ],
        "getToken": "eth:0x15700B564Ca08D9439C58cA5053166E8317aa138",
        "getTokenDecimals": 18,
        "minter": "eth:0x69088d25a635D22dcbe7c4A5C7707B9cc64bD114",
        "owner": "eth:0x0f04909E8AC81B8727FF7f0b2EF4e9F817033978",
        "typeAndVersion": "BurnFromMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x1016225Ba7f32e3a6f2842A380D5846D8756648c": "BurnFromMintTokenPool"
      }
    },
    {
      "address": "eth:0x104FA1fdF9cAC6B859C4AE2655d87C98254C0356",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x10c9a3c76bDbDB8600d726De621b941fd26F6058",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742326787,
      "sinceBlock": 22075905,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x59a0f98345f54bAB245A043488ECE7FCecD7B596",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["2049429975587534727"],
        "getToken": "eth:0x163f8C2467924be0ae7B5347228CABF260318753",
        "getTokenDecimals": 18,
        "owner": "eth:0x59a0f98345f54bAB245A043488ECE7FCecD7B596",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x10c9a3c76bDbDB8600d726De621b941fd26F6058": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x10D5611D4E1fBB0Eb614C25f14ED6AfD6C945c75",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1736868875,
      "sinceBlock": 21623655,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 99,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "9027416829622342829",
          "onRamp": "eth:0x47bA87120CA9047268A68d5B3b40f70a8a59a2B7",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21633623,
          "configDigest": "0x000179b7f4b7d994b26bb92b1d9078207cf31385beccb9d8f3018e0ad35c58e8"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x10D5611D4E1fBB0Eb614C25f14ED6AfD6C945c75": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x1175E4CFd6a73A4c1F1f2c1400a08D88554FA62e",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x6a270bc5c82591f8a8adb6765201cc65b04ed37a9509b2703970f74d1ee9534f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1709671307,
      "sinceBlock": 19371421,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getOffRamps": [
          "eth:0x3a129e6C18b23d18BA9E6Aa14Dc2e79d1f91c6c5",
          "eth:0xcfd0637093193ac909f74F9de95c2d4B92Df23c4"
        ],
        "getOnRamps": [
          "eth:0xCbE7e5DA76dC99Ac317adF6d99137005FDA4E2C4",
          "eth:0xcfd0637093193ac909f74F9de95c2d4B92Df23c4"
        ],
        "getToken": "eth:0x66cC3FD40612F9c591F977ce026Ef1C79520C472",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.2.0"
      },
      "implementationNames": {
        "eth:0x1175E4CFd6a73A4c1F1f2c1400a08D88554FA62e": "BurnMintTokenPool"
      }
    },
    {
      "name": "ManyChainMultiSig",
      "address": "eth:0x117ec8aD107976e1dBCc21717ff78407Bc36aADc",
      "type": "Contract",
      "template": "transporter/ManyChainMultiSig",
      "sourceHashes": [
        "0x15b33604a10bda5235da68c98629cc8246b96e86c931a23c296ae08f1eb691cb"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["getRootMetadata", "getRoot", "getOpCount"],
      "sinceTimestamp": 1689096839,
      "sinceBlock": 17671884,
      "values": {
        "$immutable": true,
        "getConfig": {
          "signers": [
            {
              "addr": "eth:0x013D4A675Fd02359c3c35Abc514dafd97B127e34",
              "index": 0,
              "group": 11
            },
            {
              "addr": "eth:0x0D2730AD6D62A49907Fb9273cD4a59D1092cb472",
              "index": 1,
              "group": 11
            },
            {
              "addr": "eth:0x124BA7e2188074335A0e9b12B449AD5781A73D60",
              "index": 2,
              "group": 7
            },
            {
              "addr": "eth:0x14a8f3B302Bbfa7F2f2AC2F4515548370bc7bAdC",
              "index": 3,
              "group": 11
            },
            {
              "addr": "eth:0x180159135c9b93C59d16eA1A690e465D22c5EB67",
              "index": 4,
              "group": 5
            },
            {
              "addr": "eth:0x1E2cDb5Fe0461C3688E090B879fd1156ed32a887",
              "index": 5,
              "group": 14
            },
            {
              "addr": "eth:0x266a433524AF2a471D381D8Ad4ad70DDAA5dC112",
              "index": 6,
              "group": 10
            },
            {
              "addr": "eth:0x29c5f7aCfDea3F48486b282aF0FA797b0F04D845",
              "index": 7,
              "group": 13
            },
            {
              "addr": "eth:0x2b73763722378AB2013CB0877946f69fC3727Fd8",
              "index": 8,
              "group": 4
            },
            {
              "addr": "eth:0x2B88575011C5E11389ddB50D28d31C7d06B352A0",
              "index": 9,
              "group": 1
            },
            {
              "addr": "eth:0x2bbB172cD88dCAD64CBE762dcC53E6f96a17d1D6",
              "index": 10,
              "group": 1
            },
            {
              "addr": "eth:0x34e42200901133bdceb1195f2c5241cb03D06274",
              "index": 11,
              "group": 13
            },
            {
              "addr": "eth:0x3C6cE61b611e3b41289c2FAFA5BC4e150dD88dE3",
              "index": 12,
              "group": 3
            },
            {
              "addr": "eth:0x3Ce065c714810e0b2a85Ed71f1582038823c75d8",
              "index": 13,
              "group": 13
            },
            {
              "addr": "eth:0x4189a291cC7E497015B45D4bb046dC0A82580688",
              "index": 14,
              "group": 9
            },
            {
              "addr": "eth:0x41eAdbc688797a02bfaBE48472995833489ce69D",
              "index": 15,
              "group": 13
            },
            {
              "addr": "eth:0x43640F208956c7D49e04F40FF95dF818643B76aA",
              "index": 16,
              "group": 1
            },
            {
              "addr": "eth:0x4833c0fcE02C92fF8D92903BAB14827ff1cBD4bf",
              "index": 17,
              "group": 13
            },
            {
              "addr": "eth:0x48A094F7A354d8faD7263EA2a82391d105DF6628",
              "index": 18,
              "group": 3
            },
            {
              "addr": "eth:0x4e509C60b3e916644dE441298595FeD12C4AC926",
              "index": 19,
              "group": 1
            },
            {
              "addr": "eth:0x54081602645704EE2B76FEe30E8B4d4F2D82d4E0",
              "index": 20,
              "group": 14
            },
            {
              "addr": "eth:0x56B167deCD5fC4E3Bbc07B3B4e1F30e74534F9dd",
              "index": 21,
              "group": 11
            },
            {
              "addr": "eth:0x570F41d83b1031d382F641B9a532A8D7CBd7a695",
              "index": 22,
              "group": 10
            },
            {
              "addr": "eth:0x5AA4D76f0CD8ea04fB3C4C4b771A0B9E03dC776C",
              "index": 23,
              "group": 15
            },
            {
              "addr": "eth:0x5bD3a90E94bB8aA6fE6cCF494e292F5F707B92d6",
              "index": 24,
              "group": 2
            },
            {
              "addr": "eth:0x5BF2821B248e85439B5d7c5a2bcB055Eb54Ad29F",
              "index": 25,
              "group": 1
            },
            {
              "addr": "eth:0x5C33Bf560f29e04dF8A666493aAD8E47eEa9B1c8",
              "index": 26,
              "group": 2
            },
            {
              "addr": "eth:0x60Fead3745461393F9298228E19d6D720Db89F2e",
              "index": 27,
              "group": 15
            },
            {
              "addr": "eth:0x615B9b28B754Afd1fD03EbaB2BAE8b14A6Dc94Ee",
              "index": 28,
              "group": 15
            },
            {
              "addr": "eth:0x6924E54339C7f28730dBB4B842a7FE86ED01Ecf7",
              "index": 29,
              "group": 1
            },
            {
              "addr": "eth:0x6943b0B1C63d3226B44853eEe8C2Bb6360fF3226",
              "index": 30,
              "group": 14
            },
            {
              "addr": "eth:0x6B0f508B8cbeF970fAF9E8a28b9b4C6F1FD3afae",
              "index": 31,
              "group": 7
            },
            {
              "addr": "eth:0x6bfBf6BC4bc5CD20768dAA6F58f0743bAFf2e5f4",
              "index": 32,
              "group": 11
            },
            {
              "addr": "eth:0x70C2Ddc97c4fAea760027d45E5de4D1E2ad2b9A5",
              "index": 33,
              "group": 6
            },
            {
              "addr": "eth:0x70f498A0AD8a17fC853fcb8eDbE31Fbce71173E6",
              "index": 34,
              "group": 14
            },
            {
              "addr": "eth:0x7eFF312905DEdB38Bf8f07BEFaDfF96376154374",
              "index": 35,
              "group": 5
            },
            {
              "addr": "eth:0x8E0e08E8cbc324310550E195383b7aC200726639",
              "index": 36,
              "group": 14
            },
            {
              "addr": "eth:0x9079410666ED02725ee9d148398Cee26397c2A36",
              "index": 37,
              "group": 8
            },
            {
              "addr": "eth:0x925d7Ea0ADe586DBFd56a942bb297286cE428C79",
              "index": 38,
              "group": 9
            },
            {
              "addr": "eth:0x9453E18f03A36E2A2c70598De520bD24434D2d1D",
              "index": 39,
              "group": 6
            },
            {
              "addr": "eth:0x9B391a5179BdC59af9B3a49423Fe8F10b74aF3c6",
              "index": 40,
              "group": 15
            },
            {
              "addr": "eth:0xA3177f64efE98422E782bC17BE7971F01187B7cF",
              "index": 41,
              "group": 1
            },
            {
              "addr": "eth:0xa35B7219521134cAF52DccAD44d604335b64a4fB",
              "index": 42,
              "group": 4
            },
            {
              "addr": "eth:0xa42c8570771240D1e2F3211064a7C7472Cc05b7D",
              "index": 43,
              "group": 11
            },
            {
              "addr": "eth:0xa53a14c85965734C875C91A6a145CFB5ff4624dD",
              "index": 44,
              "group": 13
            },
            {
              "addr": "eth:0xb122347811e8E9C89cdbfd761fBc9929F52090B9",
              "index": 45,
              "group": 8
            },
            {
              "addr": "eth:0xB89FC4d62344a77dD09159390f9283ae9e5150F2",
              "index": 46,
              "group": 14
            },
            {
              "addr": "eth:0xb8C1688807788A7F3FFc3Fb6F0c19E06889c051F",
              "index": 47,
              "group": 14
            },
            {
              "addr": "eth:0xBA778eaBa9E592B644344bC5fe9D0a89d5c24009",
              "index": 48,
              "group": 14
            },
            {
              "addr": "eth:0xBbe4467c7151B810eC8FdB281F6fB7F0cD8A7b65",
              "index": 49,
              "group": 14
            },
            {
              "addr": "eth:0xC6fA4C71F42dD1881E29DDe853FA5CcD18A59624",
              "index": 50,
              "group": 4
            },
            {
              "addr": "eth:0xCD125c3a44668cD7abab854fDE28233336511667",
              "index": 51,
              "group": 13
            },
            {
              "addr": "eth:0xd3094f770579AFd66711847cE9E9C42D10BA2264",
              "index": 52,
              "group": 4
            },
            {
              "addr": "eth:0xd3E2da792E806556517124f03F12e557045951E7",
              "index": 53,
              "group": 6
            },
            {
              "addr": "eth:0xD8B2263665600f2742425D451e91FEaf642bac30",
              "index": 54,
              "group": 15
            },
            {
              "addr": "eth:0xE062e7D123AC8dF480C56147f911144F55C10f88",
              "index": 55,
              "group": 13
            },
            {
              "addr": "eth:0xE3fe08c2Ac10a690284EdeBf20A3820479277162",
              "index": 56,
              "group": 13
            },
            {
              "addr": "eth:0xF27805Fd4416cE6cB433c5a63A39B2bCc47a4BF6",
              "index": 57,
              "group": 13
            },
            {
              "addr": "eth:0xfBB1B9F0adFc8696e716CC8AD05a2fEbC1605028",
              "index": 58,
              "group": 11
            },
            {
              "addr": "eth:0xFccD1128fc823dD78e76240dc206a7A26494F271",
              "index": 59,
              "group": 15
            },
            {
              "addr": "eth:0xfE82835E7fa4D39F24B2F96d77267dD5714f884C",
              "index": 60,
              "group": 14
            }
          ],
          "groupQuorums": [
            3, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ],
          "groupParents": [
            0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 12, 12, 12, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0
          ]
        },
        "getOpCount": 56,
        "getRoot": {
          "root": "0x52caa8278ae09a931dbe00ec7fbf7334db4914cb4f251a4360aff6d5d69abd7f",
          "validUntil": 1752511697
        },
        "getRootMetadata": {
          "chainId": 1,
          "multiSig": "eth:0x117ec8aD107976e1dBCc21717ff78407Bc36aADc",
          "preOpCount": 54,
          "postOpCount": 58,
          "overridePreviousRoot": true
        },
        "MAX_NUM_SIGNERS": 200,
        "NUM_GROUPS": 32,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "eth:0x117ec8aD107976e1dBCc21717ff78407Bc36aADc": "ManyChainMultiSig"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x118a9389960F86390A4F14ce4C95D6ff076C6bFC",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1710865403,
      "sinceBlock": 19469957,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 42,
        "getLatestPriceEpochAndRound": 463107,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "gnosis",
          "onRamp": "eth:0x0F246651F1c2275B4E14d8ae166D1fd3Af05c405",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 8,
          "blockNumber": 20574583,
          "configDigest": "0x0001e715ca2f468f73992b74aae8b611559b925318324a0228c35fc5ec68fd4a"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x118a9389960F86390A4F14ce4C95D6ff076C6bFC": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x123ed44f3B863a684437Ebf18F8a744c250Ee5cA",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x6b4c769c7b59108373c42add32bce68be08c2c8095dcb0919d25cd9b4542102c"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1697125163,
      "sinceBlock": 18335287,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getOffRamps": [
          "eth:0x61135E701a2214C170c5F596D0067798FEfbaaE4",
          "eth:0xfF51C00546AA3d9051a4B96Ae81346E14709CD24",
          "eth:0xdf85c8381954694E74abD07488f452b4c2Cddfb3",
          "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d",
          "eth:0x5Be290d68db372cc487B1356649D906efC4f58Ca"
        ],
        "getOnRamps": [
          "eth:0x333f976915195ba9044fD0cd603cEcE936f6264e",
          "eth:0xe2Eb229e88F56691e96bb98256707Bc62160FE73",
          "eth:0x925228D7B82d883Dde340A55Fe8e6dA56244A22C",
          "eth:0xe2c2AB221AA0b957805f229d2AA57fBE2f4dADf7",
          "eth:0x5Be290d68db372cc487B1356649D906efC4f58Ca"
        ],
        "getToken": "eth:0xe85411C030fB32A9D8b14Bbbc6CB19417391F711",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449"
      },
      "implementationNames": {
        "eth:0x123ed44f3B863a684437Ebf18F8a744c250Ee5cA": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x124BA7e2188074335A0e9b12B449AD5781A73D60",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x131bd1A2827ccEb2945B2e3B91Ee1Bf736cCbf80",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x139839036FF1Df22f47427740f40fE300184Fb8a",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x13E20D135769216E8e3e02677089e5C7F372e3b8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1741337855,
      "sinceBlock": 21993953,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x49e0751fa6557a89379cadA92250712Aa529DaD2",
        "getTokenDecimals": 18,
        "owner": "eth:0xC29Ed4af23e759747C6E75c93Af21E37f604AF4F",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x13E20D135769216E8e3e02677089e5C7F372e3b8": "LockReleaseTokenPool"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0x140C0227Cbe493A56868DDF4ea582E92ef3e9744",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1687284827,
      "sinceBlock": 17522617,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["eth:0x5f39524Ed45091abDF3Caff7399c426D7c5F7F04"],
        "$threshold": 1,
        "domainSeparator": "0x1a63f0a7842b687ebe0112a3094586113497ecb5356496d07a378cfa9728c3c4",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 52,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0x140C0227Cbe493A56868DDF4ea582E92ef3e9744": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "eth:0x14a8f3B302Bbfa7F2f2AC2F4515548370bc7bAdC",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x1580C7d4754f5671626e42f0372D56104B092CFA",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1715364503,
      "sinceBlock": 19841328,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x8aC68225b0E80cF7f16EA67639b455d679a158d7",
        "getSupportedChains": [
          "4051577828743386545",
          "4949039107694359620",
          "11344663589394136015"
        ],
        "getToken": "eth:0x54Df3076ac0CdC9bC97fA290AB9c5a88E3D23630",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x1580C7d4754f5671626e42f0372D56104B092CFA": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x162A8E51E69D72a4bA462220aE9A2E94e44d753F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x1689C22eD5435e49071CFc208D1Ac6F2A2274490",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1749315815,
      "sinceBlock": 22654076,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x9251fd3D79522bB2243a58FFf1dB43E25A495aaB",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "11344663589394136015",
          "9043146809313071210",
          "3734403246176062136",
          "1556008542357238666",
          "5406759801798337480",
          "7937294810946806131",
          "1673871237479749969",
          "1294465214383781161",
          "15971525489660198786",
          "3849287863852499584",
          "2442541497099098535",
          "4741433654826277614",
          "124615329519749607"
        ],
        "getToken": "eth:0x004E9C3EF86bc1ca1f0bB5C7662861Ee93350568",
        "getTokenDecimals": 8,
        "owner": "eth:0x9251fd3D79522bB2243a58FFf1dB43E25A495aaB",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x1689C22eD5435e49071CFc208D1Ac6F2A2274490": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x17Be5d735D49c84919d3cFDfF9eABbdB12D6Ac20",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x5102a591873a3fc0d5e6ad74bf5810128330f615d7af4299c706e5abbeeebc39"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1752534599,
      "sinceBlock": 22920608,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4051577828743386545",
          "15971525489660198786"
        ],
        "getToken": "eth:0x9F1E8F87c6321b84baD7DDa7DfB86D5115A47605",
        "getTokenDecimals": 18,
        "owner": "eth:0x1829a3f35f4ef621f410e2c487499a8e933da885",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x17Be5d735D49c84919d3cFDfF9eABbdB12D6Ac20": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x180159135c9b93C59d16eA1A690e465D22c5EB67",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x1807769Abe5133c9B41cA6746044b6a1d83F5633",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1736798543,
      "sinceBlock": 21617824,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 36,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "7613811247471741961",
          "onRamp": "eth:0x66e8c5D59E77eEBd8289D5BB76222F04f571BC67",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21633610,
          "configDigest": "0x00017d750f479201ab5b0ae77d5b7b5662d5ae1e89763c21166768695502ae98"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x1807769Abe5133c9B41cA6746044b6a1d83F5633": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x1837f10926644bd263B70a3D7700ffB914fABbF0",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1740571199,
      "sinceBlock": 21930364,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x996d67AA9b37df96428ad3608cb21352BF1FDB90",
        "getTokenDecimals": 18,
        "owner": "eth:0xfA366026a8dEF1a6dcf752BA52B3d197C26E36e0",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x1837f10926644bd263B70a3D7700ffB914fABbF0": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x18d3ebcEF1074f30aba5Da3951FF1a87B30B6Ec1",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1757681027,
      "sinceBlock": 23347062,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6433500567565415381"],
        "getToken": "eth:0x2E8b7190eE84E7AC757Ddff42Ba14d4EAe24B865",
        "getTokenDecimals": 18,
        "owner": "eth:0xd4d23209aaE8630bf386b7393763a5b7865e57cb",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x18d3ebcEF1074f30aba5Da3951FF1a87B30B6Ec1": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x190bcE84CF2d500B878966F4Cf98a50d78f2675E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x19EE30DE803b921Ecbba64eD1787Cda6d536c26a",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1746496091,
      "sinceBlock": 22421497,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0xE6Bfd33F52d82Ccb5b37E16D3dD81f9FFDAbB195",
        "getTokenDecimals": 18,
        "owner": "eth:0xc058Ad153f28591DEb44ABd409eD4408ef851b4C",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x19EE30DE803b921Ecbba64eD1787Cda6d536c26a": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x1A3D582d1aB9CF630b44B91C54CBD16Ca7e35a8d",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1726555115,
      "sinceBlock": 20768589,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 99,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "4348158687435793198",
          "onRamp": "eth:0xD2a9F49Aa973fDd42Edbb24E01Baa8163ac3141c",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 20943935,
          "configDigest": "0x0001b346ea97bd486052531b3e1e64c5b8e8680aaf0615bbf3d90c26ba06e5bf"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x1A3D582d1aB9CF630b44B91C54CBD16Ca7e35a8d": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x1A4B0621E90Bdc61d341D89158863458CA745dA2",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1741796039,
      "sinceBlock": 22031911,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "15971525489660198786",
          "11344663589394136015",
          "124615329519749607"
        ],
        "getToken": "eth:0x14feE680690900BA0ccCfC76AD70Fd1b95D10e16",
        "getTokenDecimals": 9,
        "owner": "eth:0xEC8Bb965099d3563d337E903765201A79f631Cba",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x1A4B0621E90Bdc61d341D89158863458CA745dA2": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x1b08B9E5DfD4370cF3797793e4e18ba7131eAAB8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1752387023,
      "sinceBlock": 22908380,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6433500567565415381"],
        "getToken": "eth:0xc669D8C5096b21abD2aa2E61B951333e7CDEE47D",
        "getTokenDecimals": 18,
        "owner": "eth:0x948465e941e687Cf6f0bEE0Fd5f3B0cc8DCDc223",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x1b08B9E5DfD4370cF3797793e4e18ba7131eAAB8": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x1B5C330AE8036D735a9d4F00Ff623Ac72A2c4ea7",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736170031,
      "sinceBlock": 21565713,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x4eDDb15A0abfa2c349e8065aF9214E942d9A6D36",
        "getTokenDecimals": 18,
        "owner": "eth:0xAC70849D13F76BFBc25FFcc03AcE05e09040169E",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x1B5C330AE8036D735a9d4F00Ff623Ac72A2c4ea7": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x1B7492C3bD23A4aDB448710e4275FF14A5288932",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1747164383,
      "sinceBlock": 22476363,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x55AB744a77f8b1daCa1B7D22d5112165Bcc77d4c",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "12505351618335765396",
          "13204309965629103672",
          "1346049177634351622",
          "1562403441176082196",
          "15971525489660198786",
          "1673871237479749969",
          "4411394078118774322",
          "5142893604156789321",
          "6422105447186081193",
          "6916147374840168594",
          "7264351850409363825",
          "8805746078405598895",
          "124615329519749607",
          "4741433654826277614"
        ],
        "getToken": "eth:0x514910771AF9Ca656af840dff83E8264EcF986CA",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x1B7492C3bD23A4aDB448710e4275FF14A5288932": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x1bddbA5DC2cd6ED3343A8E94D02023cC720533B9",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1756239299,
      "sinceBlock": 23227609,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 16,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "8481857512324358265",
          "onRamp": "eth:0xb39B7D0cdd79B94B08b334965C1720be51A31986",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 23241003,
          "configDigest": "0x0001d4b00818a80b44487336bbeb617023c35614d3e59e5c582c0d652e0478d4"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x1bddbA5DC2cd6ED3343A8E94D02023cC720533B9": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x1c6460cfe32916196f6977b5442b0F98A826D880",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x1DAcBae00c779913e6E9fc1A3323FbA4847ba53C",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x1dF68F4235efF6d4270590629953C559fC53571C",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1751681195,
      "sinceBlock": 22849925,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0x88ABDfc8BCA5ecF33044b599a10aEEd1d4e96519",
        "getTokenDecimals": 18,
        "owner": "eth:0xb0699D347a64870ec9A7fEd63055436040983af2",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x1dF68F4235efF6d4270590629953C559fC53571C": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x1E2cDb5Fe0461C3688E090B879fd1156ed32a887",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x1F11041c8FDb0798be743E72cd0506C7AE9E7a69",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1734970007,
      "sinceBlock": 21466269,
      "values": {
        "$immutable": true,
        "getAllowList": ["eth:0xD56c9674887089bD38c643EDFB6eadb6B5e1B592"],
        "getAllowListEnabled": true,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0x456B9A18FEa00B54cEFd41a372E7e973F72877c5",
        "getTokenDecimals": 18,
        "owner": "eth:0xD56c9674887089bD38c643EDFB6eadb6B5e1B592",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x1F11041c8FDb0798be743E72cd0506C7AE9E7a69": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x1F262f3BB509657D8816f9BfF5Ae58334E8504f5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x20B79D39Bd44dEee4F89B1e9d0e3b945fde06491",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1747346651,
      "sinceBlock": 22491363,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0xCe1cE7c7F436DCc4E28Bc8bf86115514d3DC34E8",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "124615329519749607",
          "6433500567565415381",
          "15971525489660198786",
          "4949039107694359620"
        ],
        "getToken": "eth:0x80ac24aA929eaF5013f6436cdA2a7ba190f5Cc0b",
        "getTokenDecimals": 6,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x20B79D39Bd44dEee4F89B1e9d0e3b945fde06491": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x21c04748372cFFB7565328afA8a8B23c8d65Ef9E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x229a1956929489870A31b01854a80EF9B0fd27c9",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1750786055,
      "sinceBlock": 22775774,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "15971525489660198786",
          "4949039107694359620",
          "124615329519749607"
        ],
        "getToken": "eth:0xDBB5Cf12408a3Ac17d668037Ce289f9eA75439D7",
        "getTokenDecimals": 6,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x229a1956929489870A31b01854a80EF9B0fd27c9": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x22eD7b77E07066d742412934CeeefA33B242609D",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x23436E9230B5dD66690BE54Cad5996b245Fd1891",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x23AFD2Bd797B87394D797dd0134022c42432F7fe",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964659,
      "sinceBlock": 21880126,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0x9f74dbeF10E69994A8bd437630a99f9c57eca99e",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x23AFD2Bd797B87394D797dd0134022c42432F7fe": "BurnMintTokenPool"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0x245cc372C84B3645Bf0Ffe6538620B04a217988B",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xd5a33441170541b7df25812e0e3dff6562b2f09ab835a6b431cb9e7198a47605",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1615733962,
      "sinceBlock": 12037372,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0x746c8C5EDb4F568F3D88e3Db2ADefe0dfE9a1c02",
          "eth:0x7f7500fe67f6992549376Ed9c89360a236468508",
          "eth:0x6216e2067457Db699bef940b4e1Ec6316B68dA20",
          "eth:0xcb4524B63F2c532fF52FCbbBcd3C137D32c1D966",
          "eth:0xa81636AaCE97783AAC45764B873793bE081dA592",
          "eth:0x131bd1A2827ccEb2945B2e3B91Ee1Bf736cCbf80",
          "eth:0x3524c03D39A13D51485419A17586286A6b617dd3",
          "eth:0x8d34EA6fb1Ed6B60F94ac6CD01dD1181ef12290E"
        ],
        "$threshold": 4,
        "domainSeparator": "0x962a762e4486fcd558237b6934e27ec2383bc843e1bba8996935225f84c910ec",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "4 of 8 (50%)",
        "nonce": 1761,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0x245cc372C84B3645Bf0Ffe6538620B04a217988B": "Proxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "eth:0x2490c4BE8EFBA7A641e2fbc51ADaF05CEa69E085",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x266a433524AF2a471D381D8Ad4ad70DDAA5dC112",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x2764910B500689BbC9DB16c7AD61c6DD32FDE73B",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1715364491,
      "sinceBlock": 19841327,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x916D7d960B119bb6c4AbE381f7677eCEed866d44",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x8Fe815417913a93Ea99049FC0718ee1647A2a07c",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x2764910B500689BbC9DB16c7AD61c6DD32FDE73B": "BurnMintTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x27A4E7ff4a6E28056Ac3e39445639876Ee9926FB",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1739486615,
      "sinceBlock": 21840612,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 37,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "241851231317828981",
          "onRamp": "eth:0x3D25ff4cBaf29373B9Ec1784Bb5C8DC5e15347D8",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21847839,
          "configDigest": "0x000101fbc7995f5b8a241f8a64b964d1e6e21ff70923de5928423bc73a8e87b9"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x27A4E7ff4a6E28056Ac3e39445639876Ee9926FB": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x27C96A8a2f70a8408aD6c620717a3bDaA54bb10b",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x281A83ee4819068C40937A066d801aAD7C6e0400",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964707,
      "sinceBlock": 21880130,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0x7934AfACB40B60d83D8Ad8266ed5746253F2f458",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x281A83ee4819068C40937A066d801aAD7C6e0400": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x2862135735469aD4Af91aF4Fbd2559606d25B27C",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964731,
      "sinceBlock": 21880132,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0x3a0Db80b0c741A44ABc3958d8e26d105d313E866",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x2862135735469aD4Af91aF4Fbd2559606d25B27C": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x288Ad43143e135C4e350B23162c538E83fF1FCF5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x28cCF73F7982c1786b84e243FFbD47F4fB8ae43d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x29c5f7aCfDea3F48486b282aF0FA797b0F04D845",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x2a7A69daDe8fed5c88b5894392ADc6c42da6d5c7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x2aa101BF99CaeF7fc1355D4c493a1fe187A007cE",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1701286199,
      "sinceBlock": 18679363,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 3591,
        "getLatestPriceEpochAndRound": 32617987,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "avalanche",
          "onRamp": "eth:0xD0701FcC7818c31935331B02Eb21e91eC71a1704",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 9,
          "blockNumber": 20561894,
          "configDigest": "0x0001b728806c50675d907f631fb922ee3658492327dfb556b5638ce5ac48a329"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x2aa101BF99CaeF7fc1355D4c493a1fe187A007cE": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x2b73763722378AB2013CB0877946f69fC3727Fd8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x2B88575011C5E11389ddB50D28d31C7d06B352A0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x2B941044978e65B6834891e2e53103AD72560F38",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1751803667,
      "sinceBlock": 22860059,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["17912061998839310979"],
        "getToken": "eth:0x4737D9b4592B40d51e110b94c9C043c6654067Ae",
        "getTokenDecimals": 18,
        "owner": "eth:0x8bBe46a0Bb587d6363cF34E655108dCB4d671E9E",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x2B941044978e65B6834891e2e53103AD72560F38": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x2bbB172cD88dCAD64CBE762dcC53E6f96a17d1D6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x2c5C39F515277E64D96C28f3fc49Ad1d6a25B5B4",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1728056903,
      "sinceBlock": 20893157,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x79BC41f1D73f06738bed591abf26038EC5721d49",
        "getSupportedChains": [],
        "getToken": "eth:0x54EE8A49155F701F0d5Ff088CD36fbBF1a5B9f44",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x2c5C39F515277E64D96C28f3fc49Ad1d6a25B5B4": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x2c99dC698745B655d4D0741eF5Ef8623578c45c0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x2CD36141d4AEFb8e57209770b965043Ed3129D9F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x2dd317E7e36544C5222818F228d607c209517470",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x6b4c769c7b59108373c42add32bce68be08c2c8095dcb0919d25cd9b4542102c"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1697125139,
      "sinceBlock": 18335285,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getOffRamps": [
          "eth:0x61135E701a2214C170c5F596D0067798FEfbaaE4",
          "eth:0xfF51C00546AA3d9051a4B96Ae81346E14709CD24",
          "eth:0xdf85c8381954694E74abD07488f452b4c2Cddfb3",
          "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d",
          "eth:0xE58eDBb7Fdd5f2DD5cfAD2667e5D570E1a0a6A84"
        ],
        "getOnRamps": [
          "eth:0x333f976915195ba9044fD0cd603cEcE936f6264e",
          "eth:0xe2Eb229e88F56691e96bb98256707Bc62160FE73",
          "eth:0x925228D7B82d883Dde340A55Fe8e6dA56244A22C",
          "eth:0xe2c2AB221AA0b957805f229d2AA57fBE2f4dADf7",
          "eth:0xE58eDBb7Fdd5f2DD5cfAD2667e5D570E1a0a6A84"
        ],
        "getToken": "eth:0x1c22531AA9747d76fFF8F0A43b37954ca67d28e0",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449"
      },
      "implementationNames": {
        "eth:0x2dd317E7e36544C5222818F228d607c209517470": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x2E3c68D6d2eDD9881429f0565B88024B5Db10F73",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729738271,
      "sinceBlock": 21032584,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xE2F0dad85D504aa046b9F704a426fD6C5493e366",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620", "1673871237479749969"],
        "getToken": "eth:0x49446A0874197839D15395B908328a74ccc96Bc0",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x2E3c68D6d2eDD9881429f0565B88024B5Db10F73": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x2Ee6D394a244bc38b8CFfff6b7BC72D68C5f1Bc5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ManyChainMultiSig",
      "address": "eth:0x2F2A3e36CE5Fb0924C414BEB1D98B531Cdf17e0B",
      "type": "Contract",
      "template": "transporter/ManyChainMultiSig",
      "sourceHashes": [
        "0x15b33604a10bda5235da68c98629cc8246b96e86c931a23c296ae08f1eb691cb"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["getRootMetadata", "getRoot", "getOpCount"],
      "sinceTimestamp": 1695826667,
      "sinceBlock": 18227834,
      "values": {
        "$immutable": true,
        "getConfig": {
          "signers": [
            {
              "addr": "eth:0x162A8E51E69D72a4bA462220aE9A2E94e44d753F",
              "index": 0,
              "group": 1
            },
            {
              "addr": "eth:0x1c6460cfe32916196f6977b5442b0F98A826D880",
              "index": 1,
              "group": 1
            },
            {
              "addr": "eth:0x31e16F375531F8d77E027ff935e1114eD62D797b",
              "index": 2,
              "group": 1
            },
            {
              "addr": "eth:0x41eAdbc688797a02bfaBE48472995833489ce69D",
              "index": 3,
              "group": 1
            },
            {
              "addr": "eth:0x5A5A8C7E8448484Cf3458d7f426876E79c529f41",
              "index": 4,
              "group": 1
            },
            {
              "addr": "eth:0x7052cB84079905400ea52B635cAb6a275fDA8823",
              "index": 5,
              "group": 1
            },
            {
              "addr": "eth:0x745B9329ccF53556e3C5f1fD1E4e9D0E91Ad2514",
              "index": 6,
              "group": 1
            },
            {
              "addr": "eth:0xAe735fd5e74887064DFf99C637f291caE5485A75",
              "index": 7,
              "group": 1
            },
            {
              "addr": "eth:0xE062e7D123AC8dF480C56147f911144F55C10f88",
              "index": 8,
              "group": 1
            }
          ],
          "groupQuorums": [
            1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ],
          "groupParents": [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ]
        },
        "getOpCount": 410,
        "getRoot": {
          "root": "0xbafaee046e4a87af28aedc8b20e74c748c6382b58d09ada4c8f1e0ce4ada3ad7",
          "validUntil": 1744904812
        },
        "getRootMetadata": {
          "chainId": 1,
          "multiSig": "eth:0x2F2A3e36CE5Fb0924C414BEB1D98B531Cdf17e0B",
          "preOpCount": 409,
          "postOpCount": 458,
          "overridePreviousRoot": true
        },
        "MAX_NUM_SIGNERS": 200,
        "NUM_GROUPS": 32,
        "owner": "eth:0x2F2A3e36CE5Fb0924C414BEB1D98B531Cdf17e0B",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "eth:0x2F2A3e36CE5Fb0924C414BEB1D98B531Cdf17e0B": "ManyChainMultiSig"
      }
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x307D0353313F544fc8Da0D85F1005b1de516Bce8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729729403,
      "sinceBlock": 21031850,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xa17698199466E71bAFC31F226db341B7840701E7",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545", "465200170687744372"],
        "getToken": "eth:0x0AA1e96D2a46Ec6beB2923dE1E61Addf5F5f1dce",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x307D0353313F544fc8Da0D85F1005b1de516Bce8": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x31e16F375531F8d77E027ff935e1114eD62D797b",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore1",
      "address": "eth:0x31f6ab382DDeb9A316Ab61C3945a5292a50a89AB",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1701802727,
      "sinceBlock": 18722080,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 1780,
        "getLatestPriceEpochAndRound": 469761,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "wemix",
          "onRamp": "eth:0x190bcE84CF2d500B878966F4Cf98a50d78f2675E",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 9,
          "blockNumber": 20574569,
          "configDigest": "0x0001d7dfed79176417f36611718848cc8bab61daa0cf833f837205a32cd982cb"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x31f6ab382DDeb9A316Ab61C3945a5292a50a89AB": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x326377a6B92eC69AcbbFe2De1eB1d7c9008E4C89",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x3300f27EDEeEB59CC4C4203785406cBEAfEC8dF3",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1746813887,
      "sinceBlock": 22447555,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4949039107694359620",
          "6433500567565415381",
          "15971525489660198786",
          "4627098889531055414",
          "1673871237479749969",
          "1562403441176082196",
          "12505351618335765396",
          "9027416829622342829",
          "4051577828743386545",
          "3849287863852499584",
          "3461204551265785888",
          "124615329519749607",
          "1294465214383781161",
          "16468599424800719238",
          "2442541497099098535"
        ],
        "getToken": "eth:0x7A56E1C57C7475CCf742a1832B028F0456652F97",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x3300f27EDEeEB59CC4C4203785406cBEAfEC8dF3": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x337Dec2C7D98CdC0f59976F3A48aCd706cC6c495",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1747869935,
      "sinceBlock": 22534526,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x3157874A7508FCF972379D24590C6806522B784F",
        "getTokenDecimals": 18,
        "owner": "eth:0x740EF70474B801D94a4fEcFa7711509b754d9c33",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x337Dec2C7D98CdC0f59976F3A48aCd706cC6c495": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x34731AfB2A45fFD616401f27dBF2Da8B8F369807",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1758004475,
      "sinceBlock": 23373864,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "15971525489660198786",
          "3734403246176062136"
        ],
        "getToken": "eth:0x3cD649D1B1D59bB841Fd60fC62382174AD9DcFF8",
        "getTokenDecimals": 18,
        "owner": "eth:0x2d4A4cC6CcB118e2A222a860C842Db9023aE1848",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x34731AfB2A45fFD616401f27dBF2Da8B8F369807": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x348fb4740bffe8190861c3AA10f7046f90581C0a",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739875655,
      "sinceBlock": 21872756,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545", "15971525489660198786"],
        "getToken": "eth:0x2DE3a245C9bc8A128CbF11FCf3040529FD5CD019",
        "getTokenDecimals": 18,
        "owner": "eth:0xFbb0Ad6f98d4a74553AF12B27e3E8CA44e6ACf75",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x348fb4740bffe8190861c3AA10f7046f90581C0a": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x34e42200901133bdceb1195f2c5241cb03D06274",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x3524c03D39A13D51485419A17586286A6b617dd3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x358a85e032aA9507a1303683b2B6A1d1cac3c252",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x35b950eB023003f372bFba6388846F3F5F0EA3C7",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1749707015,
      "sinceBlock": 22686471,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0xB5E6d08343Cb903153cF317375f1D77738f032DC",
        "getTokenDecimals": 18,
        "owner": "eth:0xB050dbF7170c915645305d7800fecB9Eb168D98F",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x35b950eB023003f372bFba6388846F3F5F0EA3C7": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x35C724666ba31632A56Bad4390eb69f206ab60C7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x360F709c25ddfbC3eE2a5d555ad04c4059477a7b",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1740980615,
      "sinceBlock": 21964345,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x787A65ca50C2B320c32d57c6B2a9A3070891c013",
        "getTokenDecimals": 18,
        "owner": "eth:0x3E30A6bc708402C4A340962eF6fb4d33E176193D",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x360F709c25ddfbC3eE2a5d555ad04c4059477a7b": "BurnMintTokenPool"
      }
    },
    {
      "name": "HybridWithExternalMinterTokenPool",
      "address": "eth:0x36a72eD0096B414521C45E3ddC9ed657d1D9c141",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x9bbec6b344dd243eb349c44aa334d60cc96c8ce7479238e775d9796b137dba83"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1756296383,
      "sinceBlock": 23232348,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getLockedTokens": "20023147091526791345645583",
        "getMinter": "eth:0xEE9B1A09AEDAceD9dCDA74964EA447feb93861C2",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "17912061998839310979"],
        "getToken": "eth:0x8d0D000Ee44948FC98c9B98A4FA4921476f08B0d",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "HybridWithExternalMinterTokenPool 1.6.0"
      },
      "implementationNames": {
        "eth:0x36a72eD0096B414521C45E3ddC9ed657d1D9c141": "HybridWithExternalMinterTokenPool"
      }
    },
    {
      "address": "eth:0x375dDf245FB9951A1D1D4EF516Abd7D2B521238F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x38A806580D93c5B3e295F5181723C11f15c43271",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1749682871,
      "sinceBlock": 22684465,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 105,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "2459028469735686113",
          "onRamp": "eth:0xc9CBE4D5ca717CB2EE6048E39D096D7c8839b5e7",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22689804,
          "configDigest": "0x0001f874c4ac1c45daea3b4198f3b1292467c9f7189c0209934a922fe213a84a"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x38A806580D93c5B3e295F5181723C11f15c43271": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x393bADfb69087Fc96274Fd64f924A54a4aBfbB2E",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1740538739,
      "sinceBlock": 21927671,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0xA7Fcc111ba05D097F876a65ffA7CF4fC641b5411",
        "getTokenDecimals": 18,
        "owner": "eth:0x86ae57F00062e65fb22DF7241B4Dd8e96f297224",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x393bADfb69087Fc96274Fd64f924A54a4aBfbB2E": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x3999490C55Fb8332F5f3AD00212435526fA3E576",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729733927,
      "sinceBlock": 21032223,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x0238d2C272f17CF11AEDB08CDE515d56ED25E2E4",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0xc4506022Fb8090774E8A628d5084EED61D9B99Ee",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x3999490C55Fb8332F5f3AD00212435526fA3E576": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "OffRamp1",
      "address": "eth:0x3a129e6C18b23d18BA9E6Aa14Dc2e79d1f91c6c5",
      "type": "Contract",
      "template": "transporter/OffRampV1",
      "sourceHashes": [
        "0x3338bd5c98f2d0c2daccf1d67f82534a0b6d6ffd4c6f9badb508924d8df24f09"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1701803111,
      "sinceBlock": 18722112,
      "values": {
        "$immutable": true,
        "commitStore": "eth:0x31f6ab382DDeb9A316Ab61C3945a5292a50a89AB",
        "getDynamicConfig": {
          "permissionLessExecutionThresholdSeconds": 28800,
          "router": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
          "maxNumberOfTokensPerMsg": 1,
          "maxDataBytes": 30000,
          "maxPoolReleaseOrMintGas": 200000
        },
        "getStaticConfig": {
          "commitStore": "eth:0x31f6ab382DDeb9A316Ab61C3945a5292a50a89AB",
          "chainSelector": "ethereum",
          "sourceChainSelector": "wemix",
          "onRamp": "eth:0x190bcE84CF2d500B878966F4Cf98a50d78f2675E",
          "prevOffRamp": "eth:0x0000000000000000000000000000000000000000",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "getTokenLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "latestConfigDetails": {
          "configCount": 6,
          "blockNumber": 19611168,
          "configDigest": "0x0001115f0d55fadf391c077d5d9bdc70ab474e483905389a638dce6740a52618"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "EVM2EVMOffRamp 1.2.0"
      },
      "implementationNames": {
        "eth:0x3a129e6C18b23d18BA9E6Aa14Dc2e79d1f91c6c5": "EVM2EVMOffRamp"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x3A2Ea8BaE01410425d01c2C5f488e4777DAA54Df",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1747065083,
      "sinceBlock": 22468203,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0xae78736Cd615f374D3085123A210448E74Fc6393",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x3A2Ea8BaE01410425d01c2C5f488e4777DAA54Df": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x3B80Fe300c9A611abA0496e2543B66Ff7bD4B9e9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x3b870Ea07b6511475Fa2422eA9DaA74C55Db85Be",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x3C6cE61b611e3b41289c2FAFA5BC4e150dD88dE3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x3CB2A81bb8a188C5353CdFa9994ed8666556FC53",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1718230103,
      "sinceBlock": 20078632,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 61,
        "getLatestPriceEpochAndRound": 467714,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "blast",
          "onRamp": "eth:0xBD9bf9AA79adF083BB7100848Eb15F4e8282E27e",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 4,
          "blockNumber": 20574540,
          "configDigest": "0x0001e9a7260f01e6ae5ae4039c10729defc3439209ff2afdbed77c0aa371690d"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x3CB2A81bb8a188C5353CdFa9994ed8666556FC53": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x3Ce065c714810e0b2a85Ed71f1582038823c75d8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x3D25ff4cBaf29373B9Ec1784Bb5C8DC5e15347D8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x3d430E1380286560899B94E3E9459c4ec300EF9a",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1743410507,
      "sinceBlock": 22165771,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "1294465214383781161",
          "15971525489660198786",
          "4741433654826277614"
        ],
        "getToken": "eth:0x9B61879e91a0b1322F3d61c23Aaf936231882096",
        "getTokenDecimals": 18,
        "owner": "eth:0xe10012E5b2a77E29c17E0f5B4941A5729017A4bf",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x3d430E1380286560899B94E3E9459c4ec300EF9a": "BurnMintTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x3d8a95adA63D406ee8232562AbD83CEdb0B90466",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1718911199,
      "sinceBlock": 20134981,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 80,
        "getLatestPriceEpochAndRound": 468737,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "metis",
          "onRamp": "eth:0xE43f9eD3146d76E627C2504E5140005027992De6",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 5,
          "blockNumber": 20574531,
          "configDigest": "0x000158ac6ced3257fc9cee81f906d7cffeb8fab05c7f3882b179326ad6dd9755"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x3d8a95adA63D406ee8232562AbD83CEdb0B90466": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x3DAa89A5AB49DBa691FEA66EB89aC8Cf8BeE2e35",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1752570311,
      "sinceBlock": 22923571,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620", "2442541497099098535"],
        "getToken": "eth:0x699Ccf919C1dfdFa4C374292f42CAdC9899BF753",
        "getTokenDecimals": 18,
        "owner": "eth:0x4cBc1f68a2BAE84619409322166D58f1Ab58A036",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x3DAa89A5AB49DBa691FEA66EB89aC8Cf8BeE2e35": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x3eC718a22B268d7d9Ce27D2dcAB791174D515920",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1734107279,
      "sinceBlock": 21394783,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4949039107694359620",
          "3734403246176062136",
          "15971525489660198786",
          "4051577828743386545",
          "13204309965629103672",
          "4627098889531055414",
          "1346049177634351622",
          "465200170687744372",
          "1556008542357238666",
          "4411394078118774322",
          "8805746078405598895",
          "7264351850409363825",
          "6422105447186081193",
          "17198166215261833993",
          "5142893604156789321",
          "3719320017875267166",
          "1562403441176082196",
          "6433500567565415381",
          1
        ],
        "getToken": "eth:0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE",
        "getTokenDecimals": 18,
        "owner": "eth:0xbF6512B1bBEeC3a673Feff43C0A182C2b28DFD9f",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x3eC718a22B268d7d9Ce27D2dcAB791174D515920": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x3f1c3541B7035dEd84E4502E41D5C919da4C4527",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1745213087,
      "sinceBlock": 22315266,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 34,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "13447077090413146373",
          "onRamp": "eth:0x512c58F427BEFE54BF8dcB0579119DDE43e1929B",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615567,
          "configDigest": "0x0001a488dd2659ed029c38f0b12afe563d24f68e0be875450b52e9891c2801c5"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x3f1c3541B7035dEd84E4502E41D5C919da4C4527": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x3f7AeF129Ce37EA06150C176677bEc75EF29A33f",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1740596039,
      "sinceBlock": 21932426,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x7420B4b9a0110cdC71fB720908340C03F9Bc03EC",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x3f7AeF129Ce37EA06150C176677bEc75EF29A33f": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x3fa84a4985DE21F219fE3a4241235786d942A0A2",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1751750855,
      "sinceBlock": 22855689,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "6433500567565415381"],
        "getToken": "eth:0xC4bB3f2bD23FaDc2FE98cd82d9D8768BfFEcF633",
        "getTokenDecimals": 18,
        "owner": "eth:0xb0699D347a64870ec9A7fEd63055436040983af2",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x3fa84a4985DE21F219fE3a4241235786d942A0A2": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x407dBD0170A79Bb62a016d4555C656205BbA8a68",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1751015123,
      "sinceBlock": 22794769,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "6433500567565415381"],
        "getToken": "eth:0x77146784315Ba81904d654466968e3a7c196d1f3",
        "getTokenDecimals": 18,
        "owner": "eth:0x22261B4D6F629D8cF946C3524df86bF7222901F6",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x407dBD0170A79Bb62a016d4555C656205BbA8a68": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnWithFromMintRebasingTokenPool",
      "address": "eth:0x4109f7E577596432458F8D4DC2E78637428D5614",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x3caa2a07b6c330a420b4eba48d5a846dbe47025c923211584cf067b237212552"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1730398235,
      "sinceBlock": 21087327,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "4051577828743386545",
          "15971525489660198786",
          "3734403246176062136",
          "1562403441176082196",
          "6433500567565415381"
        ],
        "getToken": "eth:0x59D9356E565Ab3A36dD77763Fc0d87fEaf85508C",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnWithFromMintRebasingTokenPool 1.5.0"
      },
      "implementationNames": {
        "eth:0x4109f7E577596432458F8D4DC2E78637428D5614": "BurnWithFromMintRebasingTokenPool"
      }
    },
    {
      "name": "ARMProxy",
      "address": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
      "type": "Contract",
      "sourceHashes": [
        "0x5561ac1c24a1f2bd38ec522cf6fde1f06f5d2eff0d9006035ff445d9e1505a47"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1688661563,
      "sinceBlock": 17636043,
      "values": {
        "$immutable": true,
        "getARM": "eth:0xe8464c353210Cc398A45dB2454FBc5BCd25fFf20",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "ARMProxy 1.0.0"
      },
      "implementationNames": {
        "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81": "ARMProxy"
      }
    },
    {
      "address": "eth:0x4189a291cC7E497015B45D4bb046dC0A82580688",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x41eAdbc688797a02bfaBE48472995833489ce69D",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x42513d6cCbEc49786Afc349622AA803BfbB746D5",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1748610683,
      "sinceBlock": 22595762,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x7616113782AaDAB041d7B10d474F8A0c04EFf258",
        "getTokenDecimals": 18,
        "owner": "eth:0x2cF2f73a7966894F5cdA2A67a282F071831b596d",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x42513d6cCbEc49786Afc349622AA803BfbB746D5": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x43640F208956c7D49e04F40FF95dF818643B76aA",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x43f47a434DADd5A122C42E49378365CcA949fA54",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1757266271,
      "sinceBlock": 23312723,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6433500567565415381"],
        "getToken": "eth:0xDA06eE2dACF9245Aa80072a4407deBDea0D7e341",
        "getTokenDecimals": 18,
        "owner": "eth:0xd4d23209aaE8630bf386b7393763a5b7865e57cb",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x43f47a434DADd5A122C42E49378365CcA949fA54": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x44622f4604353E4815A4212d5a3dD137A1C7FF14",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1715364551,
      "sinceBlock": 19841332,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0xE727F7975bEF908C49D0591724669F05F7dAd811",
        "getSupportedChains": ["11344663589394136015", "4949039107694359620"],
        "getToken": "eth:0xa7a0B3Fe94121E366D774d60D075F6386F750884",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x44622f4604353E4815A4212d5a3dD137A1C7FF14": "BurnMintTokenPool"
      }
    },
    {
      "name": "RBACTimelock",
      "address": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
      "type": "Contract",
      "sourceHashes": [
        "0xd5b2b6b0153f0ac33437f0059e864bae869943a68c01d8626d43eb2abebb728d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1689097535,
      "sinceBlock": 17671941,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "ADMIN_ROLE": {
            "adminRole": "ADMIN_ROLE",
            "members": ["eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449"]
          },
          "PROPOSER_ROLE": {
            "adminRole": "ADMIN_ROLE",
            "members": [
              "eth:0xE53289F32c8E690b7173aA33affE9B6B0CB0012F",
              "eth:0xD6597750bf74DCAEC57e0F9aD2ec998D837005bf",
              "eth:0xD9757aA52907798d1aF2FDa7A6C0cC733E5aCf7e"
            ]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "ADMIN_ROLE",
            "members": ["eth:0x82b8A19497fA25575f250a3DcFfCD2562B575A2e"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "ADMIN_ROLE",
            "members": [
              "eth:0xE53289F32c8E690b7173aA33affE9B6B0CB0012F",
              "eth:0xAD97C0270a243270136E40278155C12ce7C7F87B",
              "eth:0xD6597750bf74DCAEC57e0F9aD2ec998D837005bf",
              "eth:0xa8D5E1daA6D8B94f11D77B7E09DE846292ef69FF",
              "eth:0x117ec8aD107976e1dBCc21717ff78407Bc36aADc",
              "eth:0xD9757aA52907798d1aF2FDa7A6C0cC733E5aCf7e"
            ]
          },
          "BYPASSER_ROLE": {
            "adminRole": "ADMIN_ROLE",
            "members": ["eth:0x117ec8aD107976e1dBCc21717ff78407Bc36aADc"]
          }
        },
        "ADMIN_ROLE": "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
        "BYPASSER_ROLE": "0xa1b2b8005de234c4b8ce8cd0be058239056e0d54f6097825b5117101469d5a8d",
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getBlockedFunctionSelectorAt": [],
        "getBlockedFunctionSelectorCount": 0,
        "getMinDelay": 10800,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1"
      },
      "implementationNames": {
        "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449": "RBACTimelock"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x4488d79B3996364dBa219d98e82a6B0A3D937E62",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1748626991,
      "sinceBlock": 22597116,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6433500567565415381"],
        "getToken": "eth:0xA445bA2c94d9dE6bFd13F2fe4165E738C4330710",
        "getTokenDecimals": 8,
        "owner": "eth:0xbf056C9BBC3CB14ED42B157Cb1b2Dc02999454F7",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x4488d79B3996364dBa219d98e82a6B0A3D937E62": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x44Db2B9ee78228b6d88ff89b8ebf99685ede2786",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SourceTokenPool",
      "address": "eth:0x44e77d8C6Bb9999B036a6F084005E48928d18C74",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xf23d0b54f97d1fab5614da945340dce86452b2ee46b6df7d6b1ca22560732219"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1743005279,
      "sinceBlock": 22132177,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0xa6422E3E219ee6d4C1B18895275FE43556fd50eD",
        "getTokenDecimals": 18,
        "owner": "eth:0x8a181d6964EF1CA02e6975e0FdB7A7F7b7220009",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x44e77d8C6Bb9999B036a6F084005E48928d18C74": "SourceTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x459154447d3BD41392Ea3f49738a887dD3f1e5d0",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1739487431,
      "sinceBlock": 21840679,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 34,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1462016016387883143",
          "onRamp": "eth:0x00D0E4e85ccCaF37F1a10d7738ACFC59803B21fD",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21847860,
          "configDigest": "0x0001d7307f462e313231fef7339f0e490d5e9a68884fc4ee52e61177dc02cce7"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x459154447d3BD41392Ea3f49738a887dD3f1e5d0": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnWithFromMintTokenPool",
      "address": "eth:0x45A103142585bdFc49cdb137f2a45D1AE7F84b6b",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x0a632a2beeac9d8c3a57905d419850c6bb531ccc97efca28cfe666847026992a"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1728073703,
      "sinceBlock": 20894553,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x476EefeF46e0d65e1E371Fe093696259B1240B93",
        "getSupportedChains": [
          "11344663589394136015",
          "4949039107694359620",
          "17198166215261833993",
          "1673871237479749969"
        ],
        "getToken": "eth:0xbDf245957992bfBC62B07e344128a1EEc7b7eE3f",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "BurnWithFromMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x45A103142585bdFc49cdb137f2a45D1AE7F84b6b": "BurnWithFromMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x45af366C76a8C8f18806A8C404FE3E3bbA4F8AA3",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729737323,
      "sinceBlock": 21032506,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xF84Bf7D614F3138D805186C497995d4eD315fA72",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "15971525489660198786",
          "3734403246176062136",
          "4949039107694359620"
        ],
        "getToken": "eth:0x8C0D76C9B18779665475F3E212D9Ca1Ed6A1A0e6",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x45af366C76a8C8f18806A8C404FE3E3bbA4F8AA3": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x460CaAb2ecf966858A6fef751Aad3428D9017Bc8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1749479555,
      "sinceBlock": 22667636,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "1673871237479749969",
          "4949039107694359620",
          "6433500567565415381"
        ],
        "getToken": "eth:0x60bbE7CD64568885D937DC5C563b902615B456a8",
        "getTokenDecimals": 18,
        "owner": "eth:0x17D8a409fE2ceF2d3808bcB61F14aBEFfc28876e",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x460CaAb2ecf966858A6fef751Aad3428D9017Bc8": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x46A39244eB62De1A87dD4443B8D80bb731B97877",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1733817251,
      "sinceBlock": 21370742,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["1556008542357238666"],
        "getToken": "eth:0x5630660B3c63FCf4B81467C3A57f50e2e83F0B76",
        "getTokenDecimals": 18,
        "owner": "eth:0x7477D460d7E8d7eb5C0f462Dc661d428E3587e28",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x46A39244eB62De1A87dD4443B8D80bb731B97877": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x47158771e67e4bDdaFd0FBD36f26Db929420B26C",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1734913223,
      "sinceBlock": 21461572,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0xEE2a03Aa6Dacf51C18679C516ad5283d8E7C2637",
        "getTokenDecimals": 9,
        "owner": "eth:0xCC1569b0FDb133b902B53c9Fc781EF4D57817d89",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x47158771e67e4bDdaFd0FBD36f26Db929420B26C": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x475c8Fb7F7D4d3bba0b0a4da2bE31328fc36E358",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729697099,
      "sinceBlock": 21029169,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x80e2dcE0A16c8DB769995129cF6BbFCac8E4cFb8",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545"],
        "getToken": "eth:0x45fcf0Ebb7d79E3de9Fc308b6c7cb680A981CB7a",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x475c8Fb7F7D4d3bba0b0a4da2bE31328fc36E358": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnWithFromMintTokenPoolAndProxy",
      "address": "eth:0x476EefeF46e0d65e1E371Fe093696259B1240B93",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xff593d825b9ed83bf9557cfbebe2718ddf0b6b1cfb0023c7741933ad4c1c46cd"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729693355,
      "sinceBlock": 21028857,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x45A103142585bdFc49cdb137f2a45D1AE7F84b6b",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4949039107694359620",
          "17198166215261833993",
          "1673871237479749969"
        ],
        "getToken": "eth:0xbDf245957992bfBC62B07e344128a1EEc7b7eE3f",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "BurnWithFromMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x476EefeF46e0d65e1E371Fe093696259B1240B93": "BurnWithFromMintTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x47bA87120CA9047268A68d5B3b40f70a8a59a2B7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x47c94F8540F950B36f0C34Db6977Eb7ADFc8A50B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x4833c0fcE02C92fF8D92903BAB14827ff1cBD4bf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x48A094F7A354d8faD7263EA2a82391d105DF6628",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x4913fD2c77d93730358cC41db9d3048dbfe1F196",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729696955,
      "sinceBlock": 21029157,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x82Df5c453e854CFaD64EA3f16497B5c5b9DB012B",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x547213367cfB08ab418E7b54d7883b2C2AA27Fd7",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x4913fD2c77d93730358cC41db9d3048dbfe1F196": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x4aA5bF962852DcC59695F600d346D3F751B0D920",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x4af4B497c998007eF83ad130318eB2b925a79dc8",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1701285563,
      "sinceBlock": 18679310,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 2552,
        "getLatestPriceEpochAndRound": 467715,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "optimism",
          "onRamp": "eth:0x55183Db1d2aE0b63e4c92A64bEF2CBfc2032B127",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 9,
          "blockNumber": 20574559,
          "configDigest": "0x00019ecf28229bd3f6e536b5a820a6c81e638b7904b4e3129d59624d5cd44e3d"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x4af4B497c998007eF83ad130318eB2b925a79dc8": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "CommitStore",
      "address": "eth:0x4B50Cd4637a8EA94729811201A699f4800ee3282",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1741834955,
      "sinceBlock": 22035134,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 39,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1804312132722180201",
          "onRamp": "eth:0xBD4ee0f8a4F658D0e7da8811Eb6ec0CC02baA974",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615537,
          "configDigest": "0x000127fbf3dde6c1b3a99707e6a1884aba8c4e1b35dbff4ea820e795ca81bb14"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x4B50Cd4637a8EA94729811201A699f4800ee3282": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x4C3aEe10334461F1f33c0A8843424de3F8fb7709",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1715888579,
      "sinceBlock": 19884697,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0xc576D83eA5D672E220f7B099827E73685Fde5B73",
        "getSupportedChains": ["11344663589394136015", "15971525489660198786"],
        "getToken": "eth:0x01aaC2b594F7bdBeC740F0F1AA22910EbB4B74Ab",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x4C3aEe10334461F1f33c0A8843424de3F8fb7709": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnWithFromMintTokenPool",
      "address": "eth:0x4C4BD271b55f2114B9e2423409aaB1CC4D28C6B8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x23277443ff5993c70a623842dec882790bd6856420dd107327d19b3d5b609229"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1756380503,
      "sinceBlock": 23239321,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [],
        "getToken": "eth:0x9BC2F611fa2196E097496B722f1CBCDfE2303855",
        "getTokenDecimals": 18,
        "owner": "eth:0xB85e0d4ad9078676Ca86C6bAa51228aB3E21F5da",
        "typeAndVersion": "BurnWithFromMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x4C4BD271b55f2114B9e2423409aaB1CC4D28C6B8": "BurnWithFromMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x4Ce6f5cacF8Bd393104c12F6151B727eabBf675c",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1719424067,
      "sinceBlock": 20177450,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x4E63008092645521CFc989FB78c1324CDd371ed0",
        "getSupportedChains": ["4949039107694359620", "1673871237479749969"],
        "getToken": "eth:0x18f313Fc6Afc9b5FD6f0908c1b3D476E3feA1DD9",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x4Ce6f5cacF8Bd393104c12F6151B727eabBf675c": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x4dc81f63CB356c1420D4620414f366794072A3a8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x4e509C60b3e916644dE441298595FeD12C4AC926",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x4E63008092645521CFc989FB78c1324CDd371ed0",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729729475,
      "sinceBlock": 21031856,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x4Ce6f5cacF8Bd393104c12F6151B727eabBf675c",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620", "1673871237479749969"],
        "getToken": "eth:0x18f313Fc6Afc9b5FD6f0908c1b3D476E3feA1DD9",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x4E63008092645521CFc989FB78c1324CDd371ed0": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x4EdF9c3D77137EC15830c025E84344f49D5162d5",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745863847,
      "sinceBlock": 22369258,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0x488D74BF3FB3E53eC1f5c8598E6247f233f4bBfA",
        "getTokenDecimals": 18,
        "owner": "eth:0x52fCc7DA67263b8675912204B19682456D077576",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x4EdF9c3D77137EC15830c025E84344f49D5162d5": "BurnMintTokenPool"
      }
    },
    {
      "name": "USDOBurnMintTokenPool",
      "address": "eth:0x500d4882938020E939a5666c1B4200873da7EfD3",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x787779b9003c3cbece777f7ca4e01cd32bcaf3ad04b071e28170f4435111ee4c"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1743494639,
      "sinceBlock": 22172739,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "11344663589394136015"],
        "getToken": "eth:0x8238884Ec9668Ef77B90C6dfF4D1a9F4F4823BFe",
        "getTokenDecimals": 18,
        "owner": "eth:0x5EaFF7af80488033Bc845709806D5Fae5291eB88",
        "typeAndVersion": "USDO BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x500d4882938020E939a5666c1B4200873da7EfD3": "USDOBurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x50f6631B377be52E132DF35a2F05eA54fda882ac",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x8f8568ffa012634ccf826a95dde2d995cc8c0fb07ea6662639e4e41983a00643"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1698777515,
      "sinceBlock": 18471947,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getOffRamps": [
          "eth:0x61135E701a2214C170c5F596D0067798FEfbaaE4",
          "eth:0xBDd822f3bC2EAB6818CfA3053107831D4E93fE72",
          "eth:0x0af338F0E314c7551bcE0EF516d46d855b0Ee395",
          "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d",
          "eth:0xc2ef2f272D2C09b0a8523cEf32C96D3A7f379979"
        ],
        "getOnRamps": [
          "eth:0x0f27c8532457b66D6037141DEB0ed479Dad04B3c",
          "eth:0x333f976915195ba9044fD0cd603cEcE936f6264e",
          "eth:0x35F0ca9Be776E4B38659944c257bDd0ba75F1B8B",
          "eth:0x925228D7B82d883Dde340A55Fe8e6dA56244A22C",
          "eth:0xc2ef2f272D2C09b0a8523cEf32C96D3A7f379979"
        ],
        "getToken": "eth:0x888888435FDe8e7d4c54cAb67f206e4199454c60",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449"
      },
      "implementationNames": {
        "eth:0x50f6631B377be52E132DF35a2F05eA54fda882ac": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x512c2Ddf5f7F48a6c44cFF73CD8d7edEC5e6b0d8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1740631979,
      "sinceBlock": 21935406,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "1294465214383781161",
          "15971525489660198786",
          "2442541497099098535",
          "4741433654826277614"
        ],
        "getToken": "eth:0x2eC37d45FCAE65D9787ECf71dc85a444968f6646",
        "getTokenDecimals": 8,
        "owner": "eth:0x899c284A89E113056a72dC9ade5b60E80DD3c94f",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x512c2Ddf5f7F48a6c44cFF73CD8d7edEC5e6b0d8": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x512c58F427BEFE54BF8dcB0579119DDE43e1929B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x5180865890246278544ea457342b46665C196a97",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729738091,
      "sinceBlock": 21032569,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x8300e89e82A840176eb250EcDA0A7dBDb4a6B12D",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x1Cbc4BF664907669CfAB86a3b1aCC3EC8867a25F",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x5180865890246278544ea457342b46665C196a97": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnWithFromMintTokenPool",
      "address": "eth:0x51df9751404DB200b354ED6a5e27DdA6C557883D",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x23277443ff5993c70a623842dec882790bd6856420dd107327d19b3d5b609229"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1744184543,
      "sinceBlock": 22229924,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "4949039107694359620",
          "11344663589394136015",
          "15971525489660198786"
        ],
        "getToken": "eth:0x8b04bf3358B88e3630aa64C1c76FF3B6C699C6a7",
        "getTokenDecimals": 18,
        "owner": "eth:0xd94E880075AFa8395Fd61Bf47595c878A84e8aDd",
        "typeAndVersion": "BurnWithFromMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x51df9751404DB200b354ED6a5e27DdA6C557883D": "BurnWithFromMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x520763c1eBDa04DAC9a6077a41CCC703FF22a9f8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1741247675,
      "sinceBlock": 21986488,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "11344663589394136015"],
        "getToken": "eth:0x6e5970DBd6fc7eb1f29C6D2eDF2bC4c36124C0C1",
        "getTokenDecimals": 18,
        "owner": "eth:0x1954FFd7661e21cf71376901f8b98183977C4adD",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x520763c1eBDa04DAC9a6077a41CCC703FF22a9f8": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x52275dC17f9eD92230C8C4d57fD36d128701f694",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727346815,
      "sinceBlock": 20834217,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 137,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "blast",
          "onRamp": "eth:0xEa8112530cA10945C2aA976f8F615582Af9B70fa",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 20989835,
          "configDigest": "0x00014fd29077baad6e78a4c190c5bafab3b24b4033b37ad6d6c3a3822c351d42"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x52275dC17f9eD92230C8C4d57fD36d128701f694": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x53482ACf424d4196b0F8EbdD6F8A15eb8516FB88",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x53561cdA97652b79acD602C639626316f8f1d53F",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1738825799,
      "sinceBlock": 21785876,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x9abe56431E8b0A9ace8865aDdE0b1aAC080e6C39",
        "getTokenDecimals": 18,
        "owner": "eth:0x86ae57F00062e65fb22DF7241B4Dd8e96f297224",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x53561cdA97652b79acD602C639626316f8f1d53F": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x53a80faFee54BfE5052165B593Bd5D405BFd4007",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736822483,
      "sinceBlock": 21619802,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x8805792D41Facb22b6F47d468B06AF36Ff3fc1c5",
        "getTokenDecimals": 18,
        "owner": "eth:0xd98ED1716e011EE5549FFCF10159bD25DfEd8Ade",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x53a80faFee54BfE5052165B593Bd5D405BFd4007": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x54081602645704EE2B76FEe30E8B4d4F2D82d4E0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x541f3cc5772a64f2ba0a47e83236CcE2F089b188",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x542BF6910dB102D10f84565E041c2761BE95be84",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729698647,
      "sinceBlock": 21029297,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x0DAFed8dAF42040dB2c6227ca2AEB14D9C8B2602",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x482dF7483a52496F4C65AB499966dfcdf4DDFDbc",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x542BF6910dB102D10f84565E041c2761BE95be84": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x55183Db1d2aE0b63e4c92A64bEF2CBfc2032B127",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x553636e52059B0339592f545D25a4C0A86E3a1Bc",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x9e138ff38f9078d0b77e175aac09ba11f4a69ffa599143d3e50d72b9458f164b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1757100515,
      "sinceBlock": 23298997,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545"],
        "getToken": "eth:0x2091d83592D79B4De5fD2ce3D98679c32A9555e6",
        "getTokenDecimals": 18,
        "owner": "eth:0x43975fe745cB4171E15ceEd5d8D05A3502e0e87B",
        "typeAndVersion": "LockReleaseTokenPool 1.6.1"
      },
      "implementationNames": {
        "eth:0x553636e52059B0339592f545D25a4C0A86E3a1Bc": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x55585FFBd94471925252C13ade6A81604C781C5D",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1741021031,
      "sinceBlock": 21967695,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0x5E75a1aD7b10523f7ed98C1C7CA0b4A79B1bBDee",
        "getTokenDecimals": 18,
        "owner": "eth:0x5B3e3b28EC066d15b63c5423E0A32B6c44401824",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x55585FFBd94471925252C13ade6A81604C781C5D": "BurnMintTokenPool"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0x55AB744a77f8b1daCa1B7D22d5112165Bcc77d4c",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1690999631,
      "sinceBlock": 17828996,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0xDB4f5E35E49A2CBF5431B18Bb11CFfB405BC98a3",
          "eth:0x7Ab003a9c7Cd3016e90a03A4A608975a6FAC40B4",
          "eth:0x5A5A8C7E8448484Cf3458d7f426876E79c529f41",
          "eth:0x31e16F375531F8d77E027ff935e1114eD62D797b",
          "eth:0x7420879541250749544CF8180B664E617f3Fd49F",
          "eth:0x162A8E51E69D72a4bA462220aE9A2E94e44d753F"
        ],
        "$threshold": 2,
        "domainSeparator": "0x946bbc95dd39f843cdbbc3a79f111af0ba55cb01c99523892d76cf1ef6059ddb",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 6 (33%)",
        "nonce": 2,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0x55AB744a77f8b1daCa1B7D22d5112165Bcc77d4c": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x55c47DE8bCfA02B3989f2B6F9542900E3A2EC6c3",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1734533711,
      "sinceBlock": 21430146,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0xdBB7a34Bf10169d6d2D0d02A6cbb436cF4381BFa",
        "getTokenDecimals": 18,
        "owner": "eth:0xfA366026a8dEF1a6dcf752BA52B3d197C26E36e0",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x55c47DE8bCfA02B3989f2B6F9542900E3A2EC6c3": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x55e5a21B4cCC7FA502434ab1109D4EDe0397AB25",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1747409747,
      "sinceBlock": 22496558,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4627098889531055414",
          "17198166215261833993",
          "3734403246176062136"
        ],
        "getToken": "eth:0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7",
        "getTokenDecimals": 18,
        "owner": "eth:0xb9577E83a6d9A6DE35047aa066E3758221FE0DA2",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x55e5a21B4cCC7FA502434ab1109D4EDe0397AB25": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x5686CCb55ee86BEB1e8A1Cf7C769930f3A5E521c",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742500007,
      "sinceBlock": 22090259,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x540ddE0739EeFAf90D0Ca05aCa90513Ce89E7e79",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x5686CCb55ee86BEB1e8A1Cf7C769930f3A5E521c": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x56B167deCD5fC4E3Bbc07B3B4e1F30e74534F9dd",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x56b30A0Dcd8dc87Ec08b80FA09502bAB801fa78e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x570F41d83b1031d382F641B9a532A8D7CBd7a695",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x57b548C9c213EA2bcf60193E3D7fd2d2b53Fb9b3",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727970599,
      "sinceBlock": 20885988,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 1042,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "polygon",
          "onRamp": "eth:0x1DAcBae00c779913e6E9fc1A3323FbA4847ba53C",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21041190,
          "configDigest": "0x000185ee1406ab44d5054ed91c9e236bf00a1873f989f9576b20d948ea867fd9"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x57b548C9c213EA2bcf60193E3D7fd2d2b53Fb9b3": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x57D3bb46aF4A9b210FAE046796013090D428475F",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x6b4c769c7b59108373c42add32bce68be08c2c8095dcb0919d25cd9b4542102c"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1697125187,
      "sinceBlock": 18335289,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getOffRamps": [
          "eth:0x61135E701a2214C170c5F596D0067798FEfbaaE4",
          "eth:0xfF51C00546AA3d9051a4B96Ae81346E14709CD24",
          "eth:0xdf85c8381954694E74abD07488f452b4c2Cddfb3",
          "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d",
          "eth:0xc1D8f275f651E1CAe3A6D971d0836cDAcD25d91a"
        ],
        "getOnRamps": [
          "eth:0x333f976915195ba9044fD0cd603cEcE936f6264e",
          "eth:0xe2Eb229e88F56691e96bb98256707Bc62160FE73",
          "eth:0x925228D7B82d883Dde340A55Fe8e6dA56244A22C",
          "eth:0xe2c2AB221AA0b957805f229d2AA57fBE2f4dADf7",
          "eth:0xc1D8f275f651E1CAe3A6D971d0836cDAcD25d91a"
        ],
        "getToken": "eth:0xCA160D11087E03fd398d40f561cd4768825f4958",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449"
      },
      "implementationNames": {
        "eth:0x57D3bb46aF4A9b210FAE046796013090D428475F": "BurnMintTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x57d6cD9CD44770C807b2763Dbe4CFDA0113dd114",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1726223711,
      "sinceBlock": 20741132,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 41,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "13204309965629103672",
          "onRamp": "eth:0x28cCF73F7982c1786b84e243FFbD47F4fB8ae43d",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 20824428,
          "configDigest": "0x000180e5c1120995eba2b420c39794e05cf9f8802631999e646d4e02f5074b22"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x57d6cD9CD44770C807b2763Dbe4CFDA0113dd114": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x581586a0277975B77f03865f98f7b588265C4bb5",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736366387,
      "sinceBlock": 21582006,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545"],
        "getToken": "eth:0xCc7f96d855b7eC7F83ebd457522a1f2a411968c2",
        "getTokenDecimals": 18,
        "owner": "eth:0x17D8a409fE2ceF2d3808bcB61F14aBEFfc28876e",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x581586a0277975B77f03865f98f7b588265C4bb5": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x581CED7408860a33E47CE6cA93e2cbB4bB48c9C7",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729692971,
      "sinceBlock": 21028826,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x06f9817a91595E1B595F789Fb91529e8651da9B8",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "4949039107694359620"],
        "getToken": "eth:0x60b9C41d99FE3Eb64Ecc1344baD31D87f1bceD6D",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x581CED7408860a33E47CE6cA93e2cbB4bB48c9C7": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x5873C4FfD8A3DdB610e5079cebA63a1C04340A29",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x5882D12bbf902ee88d5FCF8793113ae85fFe97b1",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742497775,
      "sinceBlock": 22090074,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x95b4B8CaD3567B5d7EF7399C2aE1d7070692aB0D",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x5882D12bbf902ee88d5FCF8793113ae85fFe97b1": "LockReleaseTokenPool"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0x59a0f98345f54bAB245A043488ECE7FCecD7B596",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1687286543,
      "sinceBlock": 17522758,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["eth:0xc534a745bFfaF9466Ed7B47fA23B0177b99A3e77"],
        "$threshold": 1,
        "domainSeparator": "0xc48874ca9fea6bd5f4c855ff8e2b9955c2cf9a678901c9b70677221e05f98096",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 70,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0x59a0f98345f54bAB245A043488ECE7FCecD7B596": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "eth:0x5A5A8C7E8448484Cf3458d7f426876E79c529f41",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x5AA4D76f0CD8ea04fB3C4C4b771A0B9E03dC776C",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x5bD3a90E94bB8aA6fE6cCF494e292F5F707B92d6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x5Be290d68db372cc487B1356649D906efC4f58Ca",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729733759,
      "sinceBlock": 21032209,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x123ed44f3B863a684437Ebf18F8a744c250Ee5cA",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0xe85411C030fB32A9D8b14Bbbc6CB19417391F711",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x5Be290d68db372cc487B1356649D906efC4f58Ca": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x5BF2821B248e85439B5d7c5a2bcB055Eb54Ad29F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x5c16671f7360E32982691c6A14353D8186C57A59",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729733807,
      "sinceBlock": 21032213,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x0C291Ae31730901515e5C46406A6ba2d88c1f4aA",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "15971525489660198786",
          "3734403246176062136"
        ],
        "getToken": "eth:0xB60acD2057067DC9ed8c083f5aa227a244044fD6",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x5c16671f7360E32982691c6A14353D8186C57A59": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x5C33Bf560f29e04dF8A666493aAD8E47eEa9B1c8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnToAddressMintTokenPool",
      "address": "eth:0x5d1F00E79Fd5Caa2C4a6e361671Eed445F5b2C46",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x0550059a3da4f1397194a89699e465c3a43ee052c79d53b18e332d45957a94ef"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739995859,
      "sinceBlock": 21882716,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getBurnAddress": "eth:0x0000000000000000000000000000000000000001",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0xCC8Fa225D80b9c7D42F96e9570156c65D6cAAa25",
        "getTokenDecimals": 0,
        "i_burnAddress": "eth:0x0000000000000000000000000000000000000001",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnToAddressTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x5d1F00E79Fd5Caa2C4a6e361671Eed445F5b2C46": "BurnToAddressMintTokenPool"
      }
    },
    {
      "address": "eth:0x5f33eD3646cDaF0eb47C34c3Fd7B4B6613f59091",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x5f39524Ed45091abDF3Caff7399c426D7c5F7F04",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x5F5d43508f34e0cAEaa558F9C964125538fFe9Cf",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964647,
      "sinceBlock": 21880125,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0x0adAA676c5E9dA685Ee31Db105794c3fEFb40426",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x5F5d43508f34e0cAEaa558F9C964125538fFe9Cf": "BurnMintTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x5Fd81cF5734498467634Ed9432aad298022e15Ff",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1745827235,
      "sinceBlock": 22366234,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 112,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "16468599424800719238",
          "onRamp": "eth:0x861c7816Ebd335319eB66cb047707C95e9AA0cdC",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615527,
          "configDigest": "0x00019ce3da9fb2a95def44aab4c2526fadea4ed45cd5286cc385e6880e4620eb"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x5Fd81cF5734498467634Ed9432aad298022e15Ff": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x603D332a56B02e3A543b96CE1F1E56055eFe0076",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1741542395,
      "sinceBlock": 22010890,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x8096cD953Fa2ABa1E60Dad27A3e58d71dF2F62F1",
        "getTokenDecimals": 18,
        "owner": "eth:0x97A17E177ca821a1dD9630E761805c1E0b0e603B",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x603D332a56B02e3A543b96CE1F1E56055eFe0076": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x606c0e932FEbB81fBba799b5F3dd04f5cc6F2BD9",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x217b592480064095001aece6e4a4a382b21d5c53174fe664f383125fd80c16a2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1734425831,
      "sinceBlock": 21421205,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545", "4949039107694359620"],
        "getToken": "eth:0xc4170fd71ECed3C80baDca77f4e12E8AaC1e3436",
        "owner": "eth:0xBAa5348c4ec0A0B6a673B4d95F818C16fD573E2c",
        "typeAndVersion": "LockReleaseTokenPool 1.5.0"
      },
      "implementationNames": {
        "eth:0x606c0e932FEbB81fBba799b5F3dd04f5cc6F2BD9": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x607c0979C55628680167260Ca68e0EF22e8f128C",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1743450083,
      "sinceBlock": 22169046,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 138,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "17912061998839310979",
          "onRamp": "eth:0x22eD7b77E07066d742412934CeeefA33B242609D",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22335123,
          "configDigest": "0x0001b3e9b3464ab6b3368e44064049ed46c00dee287cd9ad56d9760ef70dd944"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x607c0979C55628680167260Ca68e0EF22e8f128C": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x60Fead3745461393F9298228E19d6D720Db89F2e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x615B9b28B754Afd1fD03EbaB2BAE8b14A6Dc94Ee",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x61D405818C8127f0fD30102BF01E6227097eF92f",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729697159,
      "sinceBlock": 21029174,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x0Bc42675799D0C1efE3CDe64857714ae84f075B4",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["3734403246176062136", "4949039107694359620"],
        "getToken": "eth:0x30D20208d987713f46DFD34EF128Bb16C404D10f",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x61D405818C8127f0fD30102BF01E6227097eF92f": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x6216e2067457Db699bef940b4e1Ec6316B68dA20",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x639f35C5E212D61Fe14Bd5CD8b66aAe4df11a50c",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745332559,
      "sinceBlock": 22325181,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "15971525489660198786",
          "4949039107694359620",
          "124615329519749607"
        ],
        "getToken": "eth:0x6f40d4A6237C257fff2dB00FA0510DeEECd303eb",
        "getTokenDecimals": 18,
        "owner": "eth:0x4F6F977aCDD1177DCD81aB83074855EcB9C2D49e",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x639f35C5E212D61Fe14Bd5CD8b66aAe4df11a50c": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x6452d693860ab7e18fC5858C05980F63d93F37a6",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1718219663,
      "sinceBlock": 20077767,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x9c79223e8ce037c39b534891b41b3f306a8FE192",
        "getSupportedChains": [
          "15971525489660198786",
          "3734403246176062136",
          "4949039107694359620"
        ],
        "getToken": "eth:0x6b5204B0Be36771253Cc38e88012E02B752f0f36",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x6452d693860ab7e18fC5858C05980F63d93F37a6": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x645BF2fd779d204313F35B90F3B65F65e2c9ed2B",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1741032491,
      "sinceBlock": 21968645,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [],
        "getToken": "eth:0xF60eEa20724739588cA2BE98ca7B018b02fF43fF",
        "getTokenDecimals": 18,
        "owner": "eth:0x5419c6d83473d1c653E7b51E8568FAfeDce94F01",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x645BF2fd779d204313F35B90F3B65F65e2c9ed2B": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x6480de6257c3b0Bc249f2653551964693AA914c0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "EtherSenderReceiver",
      "address": "eth:0x66598216D8E4d9AFE0F06d525B335b762229842f",
      "type": "Contract",
      "sourceHashes": [
        "0x688c9ef9fcf10c32b9b0a4f7e176ccedfc1dbf30a96b45ae691ccd273621d7e8"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1712581007,
      "sinceBlock": 19611092,
      "values": {
        "$immutable": true,
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "typeAndVersion": "EtherSenderReceiver 1.5.0"
      },
      "implementationNames": {
        "eth:0x66598216D8E4d9AFE0F06d525B335b762229842f": "EtherSenderReceiver"
      }
    },
    {
      "address": "eth:0x66e8c5D59E77eEBd8289D5BB76222F04f571BC67",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x67761742ac8A21Ec4D76CA18cbd701e5A6F3Bef3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x67b972054152E6F4B7434D84439EE225e5a00b90",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1745428619,
      "sinceBlock": 22333139,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 59,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "470401360549526817",
          "onRamp": "eth:0xf04D4Aa2e302cD4995D8cf8e84727c5B441e85ce",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615606,
          "configDigest": "0x0001d204a3852c88bc8d7049da469753929156619bc95e22b7398b9f44ab220d"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x67b972054152E6F4B7434D84439EE225e5a00b90": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x67F4e731f446Ff76716E7E3c955CD5A75C1B1787",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729733603,
      "sinceBlock": 21032198,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xcd196D3905AfA0eCB4e0e62C2D7d6c52f9C73526",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x8BF591Eae535f93a242D5A954d3Cde648b48A5A8",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x67F4e731f446Ff76716E7E3c955CD5A75C1B1787": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x6818278a6e4DA0aD588ef4dd04b59bC4E6703248",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1748924195,
      "sinceBlock": 22621688,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 79,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "4560701533377838164",
          "onRamp": "eth:0x44Db2B9ee78228b6d88ff89b8ebf99685ede2786",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 4,
          "blockNumber": 22631753,
          "configDigest": "0x0001211218a0e1049d13e6b4c32f7733f97334d6955de3324df48566c80dc2f5"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x6818278a6e4DA0aD588ef4dd04b59bC4E6703248": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x6924E54339C7f28730dBB4B842a7FE86ED01Ecf7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x6943b0B1C63d3226B44853eEe8C2Bb6360fF3226",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x6948FEF23284906B5650895F9f6fbD4a0A939F20",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x217b592480064095001aece6e4a4a382b21d5c53174fe664f383125fd80c16a2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1732766627,
      "sinceBlock": 21283735,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "11344663589394136015",
          "15971525489660198786",
          "6433500567565415381"
        ],
        "getToken": "eth:0x76131b6D0ec94057e6dC6352adDa76B8165E08ab",
        "owner": "eth:0xf00903bf648e2f609c5be1F75e8a9c84f39cd814",
        "typeAndVersion": "LockReleaseTokenPool 1.5.0"
      },
      "implementationNames": {
        "eth:0x6948FEF23284906B5650895F9f6fbD4a0A939F20": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x69781e5793C289c9a814Cd2f570308d1c249b94F",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1752355283,
      "sinceBlock": 22905743,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["3577778157919314504", "6433500567565415381"],
        "getToken": "eth:0x1D8BFd4974e148b214550FE8bB53B0b83b56a0F5",
        "getTokenDecimals": 18,
        "owner": "eth:0x948465e941e687Cf6f0bEE0Fd5f3B0cc8DCDc223",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x69781e5793C289c9a814Cd2f570308d1c249b94F": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x69AbB6043BBEA2467f41CCD0144d1b3b4ECd20f4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x6A888F0f25d2e846ec854d6Fb011BeC6DE31480B",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729734095,
      "sinceBlock": 21032237,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x6ce8b799002BbECc7df94c18BF150B3b0E4A28F4",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x72e364F2ABdC788b7E918bc238B21f109Cd634D7",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x6A888F0f25d2e846ec854d6Fb011BeC6DE31480B": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x6B0f508B8cbeF970fAF9E8a28b9b4C6F1FD3afae",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0x6BBf4f7478824482F0cE2861d003bf0Ef61CdBD6",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1687278863,
      "sinceBlock": 17522125,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0xB6d1621B770A088C16bfec22bAd00F77D874d011",
          "eth:0x2a7A69daDe8fed5c88b5894392ADc6c42da6d5c7"
        ],
        "$threshold": 2,
        "domainSeparator": "0x720111f1979d5254ad3ed9703990202cb97e5facfd38275c9fa390c248e5d90b",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 2 (100%)",
        "nonce": 121,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0x6BBf4f7478824482F0cE2861d003bf0Ef61CdBD6": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "eth:0x6bfBf6BC4bc5CD20768dAA6F58f0743bAFf2e5f4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x6c6Dd4fCa5A7B2F11AA3057AB573DD8878C76C5e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x6C8b9672B4482A876168b9415bF8bBEA574bF4B9",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1733879723,
      "sinceBlock": 21375922,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 912,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "7937294810946806131",
          "onRamp": "eth:0x9db257ae83968F10f6A50009587BdA2fCedFDd5A",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21383377,
          "configDigest": "0x0001528146c7b7aab54b12c66ed4215e3d4db71ad93f23b98cb6ddca01506119"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x6C8b9672B4482A876168b9415bF8bBEA574bF4B9": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x6ce8b799002BbECc7df94c18BF150B3b0E4A28F4",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1713201839,
      "sinceBlock": 19662376,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x6A888F0f25d2e846ec854d6Fb011BeC6DE31480B",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x72e364F2ABdC788b7E918bc238B21f109Cd634D7",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x6ce8b799002BbECc7df94c18BF150B3b0E4A28F4": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x6e05AfFFD2D44e1703e1ff5c0A24bee10f0781b6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x6eB57991c31f8DD2481A702090EDc0962AE50fAE",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964695,
      "sinceBlock": 21880129,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0x58110137DED3F55a5C2Ebf5fed953cBD6336647f",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x6eB57991c31f8DD2481A702090EDc0962AE50fAE": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x6EbD1dc80A9D608b7bC0F204E14909E7fFd25421",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x6f4AbCe0B22343e66C856F28e2d07074c5c5BF75",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1744930811,
      "sinceBlock": 22291861,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 28,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "3577778157919314504",
          "onRamp": "eth:0xb4a8D5807faff7da4AeF857837Fe89a903A01511",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615488,
          "configDigest": "0x0001c51d429bc7d72bef2b67d46874efdd6e13f2a08873ba9348d2fff4d6bfd8"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x6f4AbCe0B22343e66C856F28e2d07074c5c5BF75": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x6F580a9bC9E95273a65f73356F9caF92caa1f193",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1737147179,
      "sinceBlock": 21646724,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "3734403246176062136",
          "15971525489660198786",
          "4949039107694359620",
          "13204309965629103672",
          "6433500567565415381"
        ],
        "getToken": "eth:0xb01dd87B29d187F3E3a4Bf6cdAebfb97F3D9aB98",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x6F580a9bC9E95273a65f73356F9caF92caa1f193": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x6Fa60A88b42AFb0aEe6488826A58864B192442ad",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x6FD3386bf2c0921EFeFA059d543e8207Ff68e2f9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x6fe6F73F7Cd11E34b6908cdC080683690229d0A4",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1733797163,
      "sinceBlock": 21369081,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 327,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "12505351618335765396",
          "onRamp": "eth:0xbcC5895bb1bf1737f8c5088c5677302e3fdeb75c",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21419632,
          "configDigest": "0x00010114bb529bc43411483bba3a1243bb32018f9fb1955eba192685be2c28ca"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x6fe6F73F7Cd11E34b6908cdC080683690229d0A4": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x6Ff6BF3BF8af2e419DDC7BF038aFa5EB92b6cD7e",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1711027655,
      "sinceBlock": 19483330,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0xa7689C57aa6D09d28244d3932F34176d853A660f",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0xE46a5E19B19711332e33F33c2DB3eA143e86Bc10",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x6Ff6BF3BF8af2e419DDC7BF038aFa5EB92b6cD7e": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x700b6adcCfAa4c66638b1AD36BDeFE2038794E02",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1736797535,
      "sinceBlock": 21617740,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 77,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "3461204551265785888",
          "onRamp": "eth:0x288Ad43143e135C4e350B23162c538E83fF1FCF5",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615516,
          "configDigest": "0x0001db44dda9edae23312d5cff67fd164eaf1222c89e77372ab2322b5e42c780"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x700b6adcCfAa4c66638b1AD36BDeFE2038794E02": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x7052cB84079905400ea52B635cAb6a275fDA8823",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x706152939C0cB1f1659F0843C52E192ed52F70d5",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1737625907,
      "sinceBlock": 21686412,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0xc328a59E7321747aEBBc49FD28d1b32C1af8d3b2",
        "getTokenDecimals": 18,
        "owner": "eth:0x14c98d71DFC4f6cC95Ea66f70aB07e73c2C864a3",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x706152939C0cB1f1659F0843C52E192ed52F70d5": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x70Ac0F926a64D82f0cC69A3E505f0eE57E27006a",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1754656799,
      "sinceBlock": 23096402,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 35,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "9813823125703490621",
          "onRamp": "eth:0x21c04748372cFFB7565328afA8a8B23c8d65Ef9E",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 4,
          "blockNumber": 23128892,
          "configDigest": "0x0001ce688cb9746d9962d25409feedd2ba18036c1be901d4cdfe60076180f114"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x70Ac0F926a64D82f0cC69A3E505f0eE57E27006a": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x70C2Ddc97c4fAea760027d45E5de4D1E2ad2b9A5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x70f498A0AD8a17fC853fcb8eDbE31Fbce71173E6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x72a0203b731EdECE2DdAa506a048c0378C44366a",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739532623,
      "sinceBlock": 21844416,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "15971525489660198786"],
        "getToken": "eth:0xC4441c2BE5d8fA8126822B9929CA0b81Ea0DE38E",
        "getTokenDecimals": 18,
        "owner": "eth:0x121342fE426cca0C4dFA3554bEfDf6c14Ef42ebb",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x72a0203b731EdECE2DdAa506a048c0378C44366a": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x73aEB5ECA03Ad587B8Fdcc2B61f9fb4D2e3D90c1",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xa9fa40d9d26de86fa9869be555593dd3b95cc40442206b8c0725a24d1809cc7f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1706129963,
      "sinceBlock": 19079032,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getOffRamps": [
          "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d",
          "eth:0xCe6364dBe64D2789D916180131fAda2ABFF702E8",
          "eth:0xAFcC997D86713FeC802Cc665122d64a5130bDd1D"
        ],
        "getOnRamps": [
          "eth:0x925228D7B82d883Dde340A55Fe8e6dA56244A22C",
          "eth:0xa5ef33B57dD8B653F9A9EA7114f46376d18264aC",
          "eth:0xAFcC997D86713FeC802Cc665122d64a5130bDd1D"
        ],
        "getToken": "eth:0xA95C5ebB86E0dE73B4fB8c47A45B792CFeA28C23",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.2.0"
      },
      "implementationNames": {
        "eth:0x73aEB5ECA03Ad587B8Fdcc2B61f9fb4D2e3D90c1": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x7420879541250749544CF8180B664E617f3Fd49F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x745B9329ccF53556e3C5f1fD1E4e9D0E91Ad2514",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x746c8C5EDb4F568F3D88e3Db2ADefe0dfE9a1c02",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x750BFfccf99D1Ad1C38b5FE4Ad83010bbb82E7DF",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x7559a84Ae7B75F4B0E0E540312A3Ec912B2128CA",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1719424031,
      "sinceBlock": 20177447,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x8c9015fDBCC26b8cD0925F3900731dD0AF66b760",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "4949039107694359620"
        ],
        "getToken": "eth:0x3e62fED35c97145e6B445704B8CE74B2544776A9",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x7559a84Ae7B75F4B0E0E540312A3Ec912B2128CA": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x75a852478792E5a99bc4cdd0aDBd97129B0d9799",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729733639,
      "sinceBlock": 21032201,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xdCa0A2341ed5438E06B9982243808A76B9ADD6d0",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0xDcEe70654261AF21C44c093C300eD3Bb97b78192",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x75a852478792E5a99bc4cdd0aDBd97129B0d9799": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x75dFc9b24B109ae76dC5C51814bb7a9559B68a2B",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1738949099,
      "sinceBlock": 21796105,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "15971525489660198786",
          "3734403246176062136",
          "4949039107694359620"
        ],
        "getToken": "eth:0x99D318b6402cE95B6B46F40f752eA96430A2Ead0",
        "getTokenDecimals": 18,
        "owner": "eth:0xd866b2332d4383C1Bf719732177e2D9109c99DBc",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x75dFc9b24B109ae76dC5C51814bb7a9559B68a2B": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x76264869a3eBF51a59FCa5ABa84ee2867c7F190e",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1717183043,
      "sinceBlock": 19991847,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 9,
        "getLatestPriceEpochAndRound": 467714,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "mode",
          "onRamp": "eth:0xbD5F9C193a7fEF5D578C55Ddfe4d08d6BCc15648",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 4,
          "blockNumber": 20574549,
          "configDigest": "0x00012da522c4eb868a6396e5a3f26b12e29d3a68935341a418f613954fb6b34e"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x76264869a3eBF51a59FCa5ABa84ee2867c7F190e": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x776D5B14ef1D5C58B0d48b53114f2Aa0faccB307",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x78196436aF11b948c7036424B1ceA711fAdAd288",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x6a270bc5c82591f8a8adb6765201cc65b04ed37a9509b2703970f74d1ee9534f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1709671463,
      "sinceBlock": 19371434,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getOffRamps": [
          "eth:0x3a129e6C18b23d18BA9E6Aa14Dc2e79d1f91c6c5",
          "eth:0x9F02c16190691CC4ceCD53A9267Bd24e37B6d06C"
        ],
        "getOnRamps": [
          "eth:0xCbE7e5DA76dC99Ac317adF6d99137005FDA4E2C4",
          "eth:0x9F02c16190691CC4ceCD53A9267Bd24e37B6d06C"
        ],
        "getToken": "eth:0x2624Bd0094f474713AC9c634b37A5ebef4e0b1FE",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.2.0"
      },
      "implementationNames": {
        "eth:0x78196436aF11b948c7036424B1ceA711fAdAd288": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x789428528A842053b52cd0D77692125829406712",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x5102a591873a3fc0d5e6ad74bf5810128330f615d7af4299c706e5abbeeebc39"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1756118243,
      "sinceBlock": 23217570,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["124615329519749607"],
        "getToken": "eth:0x8624b87F9b766d82CdaDDE8Cf4192df76682F946",
        "getTokenDecimals": 9,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x789428528A842053b52cd0D77692125829406712": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x78f6EB041A85eF3c1a1dC02C57b6beBfcAcBabbf",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739974331,
      "sinceBlock": 21880929,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "15971525489660198786",
          "11344663589394136015",
          "12505351618335765396"
        ],
        "getToken": "eth:0x623cD3a3EdF080057892aaF8D773Bbb7A5C9b6e9",
        "getTokenDecimals": 18,
        "owner": "eth:0x68789E65b2439d51481f24E8c35F5D68e898Cb56",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x78f6EB041A85eF3c1a1dC02C57b6beBfcAcBabbf": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x799A356069Ca6D91BBE5d0407De625A969874aE4",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742500427,
      "sinceBlock": 22090294,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x25f8087EAD173b73D6e8B84329989A8eEA16CF73",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x799A356069Ca6D91BBE5d0407De625A969874aE4": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x79b998ded1f4503CE3A0A76993c72a65449f4590",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x79BC41f1D73f06738bed591abf26038EC5721d49",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729733843,
      "sinceBlock": 21032216,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x2c5C39F515277E64D96C28f3fc49Ad1d6a25B5B4",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [],
        "getToken": "eth:0x54EE8A49155F701F0d5Ff088CD36fbBF1a5B9f44",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x79BC41f1D73f06738bed591abf26038EC5721d49": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x7Ab003a9c7Cd3016e90a03A4A608975a6FAC40B4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x7d2aF78868993a5a86676BA639eC0412709707D9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x7EeeAd4571b12BC3e331E6Ce2D954E1528aC2921",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1743680831,
      "sinceBlock": 22188178,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x9dC44ae5BE187ECA9e2A67e33f27A4c91cEA1223",
        "getTokenDecimals": 18,
        "owner": "eth:0x9EBA6157b4841A57C4cd3359C2bf95ee0A0363df",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x7EeeAd4571b12BC3e331E6Ce2D954E1528aC2921": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x7eFF312905DEdB38Bf8f07BEFaDfF96376154374",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x7f7500fe67f6992549376Ed9c89360a236468508",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Router",
      "address": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
      "type": "Contract",
      "template": "transporter/RouterV1_2_0",
      "sourceHashes": [
        "0x56b28474b4daa9a8cbbe1a1ed1135d6881be21c0f343671e361b90eebf0b210d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1700593571,
      "sinceBlock": 18622113,
      "values": {
        "$immutable": true,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getWrappedNative": "eth:0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "MAX_RET_BYTES": 132,
        "offRamps": [
          {
            "sourceChainSelector": "optimism",
            "offRamp": "eth:0xB095900fB91db00E6abD247A5A5AD1cee3F20BF7"
          },
          {
            "sourceChainSelector": "polygon",
            "offRamp": "eth:0x0af338F0E314c7551bcE0EF516d46d855b0Ee395"
          },
          {
            "sourceChainSelector": "arbitrum",
            "offRamp": "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d"
          },
          {
            "sourceChainSelector": "avalanche",
            "offRamp": "eth:0x569940e02D4425eac61A7601632eC00d69f75c17"
          },
          {
            "sourceChainSelector": "bnb",
            "offRamp": "eth:0x7Afe7088aff57173565F4b034167643AA8b9171c"
          },
          {
            "sourceChainSelector": "base",
            "offRamp": "eth:0xdf85c8381954694E74abD07488f452b4c2Cddfb3"
          },
          {
            "sourceChainSelector": "wemix",
            "offRamp": "eth:0x3a129e6C18b23d18BA9E6Aa14Dc2e79d1f91c6c5"
          },
          {
            "sourceChainSelector": "gnosis",
            "offRamp": "eth:0xE93ec2A57e38C8541c893348cCafEAB01F7D47d4"
          },
          {
            "sourceChainSelector": "celo",
            "offRamp": "eth:0xd5083684eE92dDeA117636ae5E2F1cb7fE4dfd46"
          },
          {
            "sourceChainSelector": "mode",
            "offRamp": "eth:0xE8af3b68eDfFf65Ce48648009982380701f09B92"
          },
          {
            "sourceChainSelector": "blast",
            "offRamp": "eth:0x1a904DbbaDdE629a1460e2F6E2E485Ce06Ed7599"
          },
          {
            "sourceChainSelector": "metis",
            "offRamp": "eth:0xCe6364dBe64D2789D916180131fAda2ABFF702E8"
          },
          {
            "sourceChainSelector": "1562403441176082196",
            "offRamp": "eth:0xb368c8946D9fa5A497cDe1Dff7213f9CdfD143Bf"
          },
          {
            "sourceChainSelector": "4627098889531055414",
            "offRamp": "eth:0x418dcbCf229897d0CCf1B8B464Db06C23879FBB4"
          },
          {
            "sourceChainSelector": "13204309965629103672",
            "offRamp": "eth:0x26a10137A54F4Ea01D20758Ac5AdBf9326340Fc3"
          },
          {
            "sourceChainSelector": "3016212468291539606",
            "offRamp": "eth:0x3c672f0f9E73cB7984A5Ab486C7839f84C8EDC09"
          },
          {
            "sourceChainSelector": "4348158687435793198",
            "offRamp": "eth:0x0aB48c500AbD8392620c3C4E4fdD5d7063C44554"
          },
          {
            "sourceChainSelector": "6422105447186081193",
            "offRamp": "eth:0x33276152d082120F5190362e6E5F6783bbCb2B26"
          },
          {
            "sourceChainSelector": "17198166215261833993",
            "offRamp": "eth:0x4E4003DAFD00eC3B5F17f05950759054051950d6"
          },
          {
            "sourceChainSelector": "celo",
            "offRamp": "eth:0x794aE32b63b8a82a6e2Ec5017bbC6bfbddA5ce96"
          },
          {
            "sourceChainSelector": "1556008542357238666",
            "offRamp": "eth:0x5B859E596C4285bf489E1bFa222b97dB431da7eC"
          },
          {
            "sourceChainSelector": "1562403441176082196",
            "offRamp": "eth:0x6868FefbEFDc2B2FB75E6ED216dB1BeC02563D69"
          },
          {
            "sourceChainSelector": "blast",
            "offRamp": "eth:0xF4468E56179e6EF59d6f5B133D9355AAD91Ea9ae"
          },
          {
            "sourceChainSelector": "wemix",
            "offRamp": "eth:0xc1EcCE580B2C96f4fd202fB7c2a259ECe19a1bF2"
          },
          {
            "sourceChainSelector": "gnosis",
            "offRamp": "eth:0x70C705ff3eCAA04c8c61d581a59a168a1c49c2ec"
          },
          {
            "sourceChainSelector": "optimism",
            "offRamp": "eth:0x562a2025E60AA19Aa03Ea41D70ea1FD3286d1D3B"
          },
          {
            "sourceChainSelector": "polygon",
            "offRamp": "eth:0x718672076D6d51E4c76142B37bC99E4945d704a3"
          },
          {
            "sourceChainSelector": "arbitrum",
            "offRamp": "eth:0xdf615eF8D4C64d0ED8Fd7824BBEd2f6a10245aC9"
          },
          {
            "sourceChainSelector": "avalanche",
            "offRamp": "eth:0xd98E80C79a15E4dbaF4C40B6cCDF690fe619BFBb"
          },
          {
            "sourceChainSelector": "mode",
            "offRamp": "eth:0xb57D52F7Cb7BBD19a117585bbaf712108E56dd8f"
          },
          {
            "sourceChainSelector": "metis",
            "offRamp": "eth:0x330349112e13232131Da51f9f3b153d825f65e61"
          },
          {
            "sourceChainSelector": "bnb",
            "offRamp": "eth:0x66d84fedED0e51aeB47ceD1BB2fc0221Ae8D7C12"
          },
          {
            "sourceChainSelector": "base",
            "offRamp": "eth:0x6B4B6359Dd5B47Cdb030E5921456D2a0625a9EbD"
          },
          {
            "sourceChainSelector": "6916147374840168594",
            "offRamp": "eth:0x9a3Ed7007809CfD666999e439076B4Ce4120528D"
          },
          {
            "sourceChainSelector": "5406759801798337480",
            "offRamp": "eth:0xF3AC96642F9BA5De3BBc864d609E3F534dD3b7F9"
          },
          {
            "sourceChainSelector": "2049429975587534727",
            "offRamp": "eth:0x5EDa6801dBD2bBdbF0401d34c730fa2C3A97C3F4"
          },
          {
            "sourceChainSelector": "3849287863852499584",
            "offRamp": "eth:0xdE81f1627ef2F6E23A2C0f338623C78c10EA57AC"
          },
          {
            "sourceChainSelector": "3993510008929295315",
            "offRamp": "eth:0x8B3eEed4948684c3ec1bb60967820f40285018B8"
          },
          {
            "sourceChainSelector": "7937294810946806131",
            "offRamp": "eth:0x3B45dd27E0cF84F1af98DEaBDc8f96303475ef58"
          },
          {
            "sourceChainSelector": "9043146809313071210",
            "offRamp": "eth:0xb0F5b6DB1157719795eCCd9C6023C66bB2ec414F"
          },
          {
            "sourceChainSelector": "12505351618335765396",
            "offRamp": "eth:0xdFD8C353044aB175cC96FD4261c2Af3E3AB768a4"
          },
          {
            "sourceChainSelector": "1673871237479749969",
            "offRamp": "eth:0xB45cF8df3AAa50199B7AaabD345119BAd1b8d977"
          },
          {
            "sourceChainSelector": "3461204551265785888",
            "offRamp": "eth:0x0F1B1A46AdeadF3C0D583AC86f40bC9e0b2e4Ba2"
          },
          {
            "sourceChainSelector": "7613811247471741961",
            "offRamp": "eth:0xf2EB4CE854C8C0AAea6080Ef825efA5A84a8656a"
          },
          {
            "sourceChainSelector": "9027416829622342829",
            "offRamp": "eth:0xc876D50A0Ecc147FC0cEd194cD2b66210d482f9c"
          },
          {
            "sourceChainSelector": "5214452172935136222",
            "offRamp": "eth:0x92fBcF9B006189c242146c21f5E8CE4fEa9da04F"
          },
          {
            "sourceChainSelector": "241851231317828981",
            "offRamp": "eth:0x5B6D2998EEF5cBBa7e8345B08Dd41AecEC5EACA5"
          },
          {
            "sourceChainSelector": "1294465214383781161",
            "offRamp": "eth:0xA627F208c5c32e5638c64147d0aC98bb40F758f0"
          },
          {
            "sourceChainSelector": "1462016016387883143",
            "offRamp": "eth:0x559c3233aE9A0EcD45a6c45ee3B8c2c6DBa5F48D"
          },
          {
            "sourceChainSelector": "1923510103922296319",
            "offRamp": "eth:0xaA0DA3e06F43a5227abB0eA7D6DF3d1037B1769B"
          },
          {
            "sourceChainSelector": "1224752112135636129",
            "offRamp": "eth:0xdE66080eABE390198b8918cb3F61e1869dbC8079"
          },
          {
            "sourceChainSelector": "3229138320728879060",
            "offRamp": "eth:0x7A82D2d3d824f9BAc136C31ef8086C673d23666D"
          },
          {
            "sourceChainSelector": "11690709103138290329",
            "offRamp": "eth:0x8FEE869eDD935391B4979F8C79560102A8594B28"
          },
          {
            "sourceChainSelector": "1456215246176062136",
            "offRamp": "eth:0xAe2A2A088A8F85A2DB90A61BD463433985C437F0"
          },
          {
            "sourceChainSelector": "8788096068760390840",
            "offRamp": "eth:0xcdcA3F3aa3A4df41a3DAF885e3E25666Ee96D7e4"
          },
          {
            "sourceChainSelector": "14894068710063348487",
            "offRamp": "eth:0x7115F0fB22e0A85133C06b50aDc3B90b335ea175"
          },
          {
            "sourceChainSelector": "5608378062013572713",
            "offRamp": "eth:0x4Bc6027Cd2da6CB7A105D5cE2D039c4892225419"
          },
          {
            "sourceChainSelector": "2442541497099098535",
            "offRamp": "eth:0x69c3619326d5DF0d5abB752f2AE629413811ccD1"
          },
          {
            "sourceChainSelector": "1804312132722180201",
            "offRamp": "eth:0x9de971a8449Bc9F31Fe7B0F2Ccdab3873f711988"
          },
          {
            "sourceChainSelector": "3577778157919314504",
            "offRamp": "eth:0x9f0E818A8DDDf48C52d5c94D55079E3617d55181"
          },
          {
            "sourceChainSelector": "13447077090413146373",
            "offRamp": "eth:0x8693cdA8E6D3Aee7c9fC258c3E7F648c8E6580c1"
          },
          {
            "sourceChainSelector": "15293031020466096408",
            "offRamp": "eth:0x82dAe15e45D63f2Ae85B1f0D690685A021D3a0fC"
          },
          {
            "sourceChainSelector": "17164792800244661392",
            "offRamp": "eth:0x49Aac6Fc36F32aC22867Ac0bAa23E6F2551f8edD"
          },
          {
            "sourceChainSelector": "17912061998839310979",
            "offRamp": "eth:0x109c666A021214C96a7ab7cde7E987F4e7dCD9fE"
          },
          {
            "sourceChainSelector": "470401360549526817",
            "offRamp": "eth:0x3c5990484D4D7b728Ae875d001E97469284210C1"
          },
          {
            "sourceChainSelector": "3555797439612589184",
            "offRamp": "eth:0x5e24de8F7Ccb3E1e204707573a672823d88C559F"
          },
          {
            "sourceChainSelector": "16468599424800719238",
            "offRamp": "eth:0x720EA8a2662376B89dEe1A7bAcA95b2eb6B6fF81"
          },
          {
            "sourceChainSelector": "11964252391146578476",
            "offRamp": "eth:0x34eEc7EcA3Ce1e693028255ebE2063728224a604"
          },
          {
            "sourceChainSelector": "1546563616611573946",
            "offRamp": "eth:0xd8A0Ab1C5e6BA9b2aC5A998Be3429D4479989224"
          },
          {
            "sourceChainSelector": "465944652040885897",
            "offRamp": "eth:0xe79705E9f6842223C9b07B70119f3468E2962162"
          },
          {
            "sourceChainSelector": "124615329519749607",
            "offRamp": "eth:0x26d3681DfC9E4c8C79cfbf461adec8A21d5d73C5"
          },
          {
            "sourceChainSelector": "4560701533377838164",
            "offRamp": "eth:0x64A5c64945c72bc46DF52c82Cfce9161b888578B"
          },
          {
            "sourceChainSelector": "7222032299962346917",
            "offRamp": "eth:0x9cbbA13011CD9D9310Ff9f1F6515582d6518a90e"
          },
          {
            "sourceChainSelector": "2459028469735686113",
            "offRamp": "eth:0xa8c12a859225531254dDef7079030f7DD6992A14"
          },
          {
            "sourceChainSelector": "9813823125703490621",
            "offRamp": "eth:0x4676537819a87E9D515D654f8bedf45A744cF214"
          },
          {
            "sourceChainSelector": "18164309074156128038",
            "offRamp": "eth:0x26d3681DfC9E4c8C79cfbf461adec8A21d5d73C5"
          },
          {
            "sourceChainSelector": "9335212494177455608",
            "offRamp": "eth:0x26d3681DfC9E4c8C79cfbf461adec8A21d5d73C5"
          },
          {
            "sourceChainSelector": "6473245816409426016",
            "offRamp": "eth:0x26d3681DfC9E4c8C79cfbf461adec8A21d5d73C5"
          },
          {
            "sourceChainSelector": "5936861837188149645",
            "offRamp": "eth:0x26d3681DfC9E4c8C79cfbf461adec8A21d5d73C5"
          },
          {
            "sourceChainSelector": "17673274061779414707",
            "offRamp": "eth:0x26d3681DfC9E4c8C79cfbf461adec8A21d5d73C5"
          },
          {
            "sourceChainSelector": "8481857512324358265",
            "offRamp": "eth:0xfC92C3b8a374F70cb46cf884D4f02bb120f0F0a3"
          },
          {
            "sourceChainSelector": "4741433654826277614",
            "offRamp": "eth:0x26d3681DfC9E4c8C79cfbf461adec8A21d5d73C5"
          },
          {
            "sourceChainSelector": "13624601974233774587",
            "offRamp": "eth:0x26d3681DfC9E4c8C79cfbf461adec8A21d5d73C5"
          },
          {
            "sourceChainSelector": "4426351306075016396",
            "offRamp": "eth:0x26d3681DfC9E4c8C79cfbf461adec8A21d5d73C5"
          }
        ],
        "onRamps": {
          "3734403246176062136": "eth:0x3455D8E039736944e66e19eAc77a42e8077B07bf",
          "4051577828743386545": "eth:0x15a9D79d6b3485F70bF82bC49dDD1fcB37A7149c",
          "4949039107694359620": "eth:0x69eCC4E2D8ea56E2d0a05bF57f4Fd6aEE7f2c284",
          "6433500567565415381": "eth:0xaFd31C0C78785aDF53E4c185670bfd5376249d8A",
          "11344663589394136015": "eth:0x948306C220Ac325fa9392A6E601042A3CD0b480d",
          "15971525489660198786": "eth:0xb8a882f3B88bd52D1Ff56A873bfDB84b70431937",
          "5142893604156789321": "eth:0xdEFeADd30D5BFD403d86245b43e39a73d76423cC",
          "465200170687744372": "eth:0xf50B9A46C394bD98491ce163d420222d8030F6F0",
          "1346049177634351622": "eth:0x741599d9a5a1bfC40A22f530fbCd85E2718e9F90",
          "7264351850409363825": "eth:0xeA6d4a24B262aB3e61a8A62f018A30beCD086f82",
          "4411394078118774322": "eth:0x6751cA96b769129dFE6eB8E349c310deCEDb4e36",
          "8805746078405598895": "eth:0x75d536eED32f4c8Bb39F4B0c992163f5BA49B84e",
          "1562403441176082196": "eth:0x9B14AE850653dD0E30fBC93ab7f77D0d638a365B",
          "4627098889531055414": "eth:0x626189C882A80fF0D036d8D9f6447555e81F78E9",
          "13204309965629103672": "eth:0x362A221C3cfd7F992DFE221687323F0BA9BA8187",
          "3016212468291539606": "eth:0xBA1Aa22D51692AA0D7746F996cBE657781653332",
          "4348158687435793198": "eth:0x33417f13DFBC2FfB9e1B43051c3737370F3691a4",
          "6422105447186081193": "eth:0xD8E8720709a3d9A18a9B281E6148E94149B2E252",
          "17198166215261833993": "eth:0x4Cc3D95d9384D3287724B83099f01BC3025702c0",
          "1556008542357238666": "eth:0x70B2b3430c41bA19E20F57Cae23c3C619CbCA65D",
          "6916147374840168594": "eth:0xdC5b578ff3AFcC4A4a6E149892b9472390b50844",
          "5406759801798337480": "eth:0xddF4b4aF7A9603869C90189EFa8826683D0D234b",
          "2049429975587534727": "eth:0xdB6ebB3ea15595E516dEf4a9875479573a4F19b6",
          "3849287863852499584": "eth:0x1B960560324c03db5565545B353198fdd07A195d",
          "3993510008929295315": "eth:0x3Ac0D8fe5b4e8d0a95C507CCd83F6A8d73A8c6b1",
          "7937294810946806131": "eth:0x4FB5407d6911DaA0B8bde58A754E7D01CB8b05c5",
          "9043146809313071210": "eth:0x7B78f8D16C4ae6E51c29295D58f05dCC67180A2b",
          "12505351618335765396": "eth:0x093844Bd4b26792791cD4038e94Bec70f88CaD63",
          "1673871237479749969": "eth:0x4fdAaDe22bd05537EeaB204cF7319589CE595D6a",
          "3461204551265785888": "eth:0xEEe2AE1d0Fa6D1D38BBBa555A7C7B90C8734a8e2",
          "7613811247471741961": "eth:0x61B4B85364a2609177D2C498ff864E01a63148a5",
          "9027416829622342829": "eth:0x5739E5376702AAc79a53B375ca160EE3C12025E0",
          "5214452172935136222": "eth:0x0000000000000000000000000000000000000000",
          "241851231317828981": "eth:0x20fD5ab74D519df395f41c958D982BecB6b64432",
          "1294465214383781161": "eth:0xBeFfEF56Cd6FA063d2e04E126cF1b93269886c42",
          "1462016016387883143": "eth:0x31ee106a4585a796caacC645172B9F7e9c2f8D37",
          "1923510103922296319": "eth:0x5E7397CA539C94185BBD950706F0Dd8628587E04",
          "1224752112135636129": "eth:0xa6D806e4EB8726542cf536518fC47f39d68cCb48",
          "3229138320728879060": "eth:0x08C798376AfA295C047bDb5c011097865895672d",
          "11690709103138290329": "eth:0x9cb0FF2Ea9110dc8831b39F620811a0da09747D3",
          "1456215246176062136": "eth:0x03CB4C67D01a78F44289541281E57C33E6b834d9",
          "8788096068760390840": "eth:0x8b858ED23502611aB86109717C8842A7A8f117ec",
          "14894068710063348487": "eth:0x48F836a7697c0082B2Ecb4B2639f6da79de21980",
          "5608378062013572713": "eth:0x6715EA73EcAf1CaE1c736731129637B2E94a6B49",
          "2442541497099098535": "eth:0xC4a125BDBeE19Ec8BE02502cff9310FF9395905B",
          "1804312132722180201": "eth:0x7d7C4933f17B414f50C97d1a8862A1ace82557B3",
          "3577778157919314504": "eth:0x266e520E272FCca3cE46A379a06Dc5ba62717b8F",
          "13447077090413146373": "eth:0xDAa386621aB173C4E788ecebC4F8c2E6EB016819",
          "15293031020466096408": "eth:0x74Cb66502D855992137c5dC8A502c396A6E77931",
          "17164792800244661392": "eth:0x1Fa3aF677DC1b627f8A57e26b2a55d5F7945F06b",
          "17912061998839310979": "eth:0x522f82eE3c4F0249D32b09e2F4c9C51B0F150ffF",
          "470401360549526817": "eth:0x486170Bca7fE5126AFeaF171d3a60A211bF2C44C",
          "3555797439612589184": "eth:0xc46e2F17c04f2C880Ea56a0c69c4520AdB4aBF88",
          "16468599424800719238": "eth:0x5F6e7707DE5019E13BaFbD2f4569B2453F16eB3e",
          "11964252391146578476": "eth:0x34748FbeD8fD8468eD66D53A7D102ce793cB4094",
          "1546563616611573946": "eth:0x57da0fAD1CC3B98a8f04545A45Ba156e944db4DE",
          "465944652040885897": "eth:0xffbEC42C001f0E54924078C6D36412128bBC4330",
          "124615329519749607": "eth:0x913814782144864e523C3FdB78E3ca25D2c2aeCa",
          "4560701533377838164": "eth:0x86768e4e4B2E3C1CF812D5C8A7c7becFA4c8D486",
          "7222032299962346917": "eth:0x4109D281EB5C768556dFF78ba400cE2E3564d5B0",
          "2459028469735686113": "eth:0xc5Dbe2055Fa233ece44c99432526F3Fc46cA3FC2",
          "13624601974233774587": "eth:0x913814782144864e523C3FdB78E3ca25D2c2aeCa",
          "9813823125703490621": "eth:0x8469b5AbD81987F9347c0bAbd47b9eB11dA7d0dF",
          "18164309074156128038": "eth:0x913814782144864e523C3FdB78E3ca25D2c2aeCa",
          "4741433654826277614": "eth:0x913814782144864e523C3FdB78E3ca25D2c2aeCa",
          "8481857512324358265": "eth:0xffBD6B0146C9E16A9f9E77DC8898cbfF6E2AA389",
          "17673274061779414707": "eth:0x913814782144864e523C3FdB78E3ca25D2c2aeCa",
          "5936861837188149645": "eth:0x913814782144864e523C3FdB78E3ca25D2c2aeCa",
          "6473245816409426016": "eth:0x913814782144864e523C3FdB78E3ca25D2c2aeCa",
          "9335212494177455608": "eth:0x913814782144864e523C3FdB78E3ca25D2c2aeCa",
          "4426351306075016396": "eth:0x913814782144864e523C3FdB78E3ca25D2c2aeCa"
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "Router 1.2.0"
      },
      "implementationNames": {
        "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D": "Router"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x803CBD1e4d722eCf8247c6c9CDab4fC87DBAf429",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x807dd69Bc9BC4e9411490f7b79Ff30c91E799A04",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1743443879,
      "sinceBlock": 22168532,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 24,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "5608378062013572713",
          "onRamp": "eth:0xdaC19bddEf396c222ecDb9109C9E5993a19cd5d5",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615549,
          "configDigest": "0x000161743833f97e2013e7d2c1a91060d8aaeb60190a0a75c5b2a863903021b8"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x807dd69Bc9BC4e9411490f7b79Ff30c91E799A04": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x80e2dcE0A16c8DB769995129cF6BbFCac8E4cFb8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1720026155,
      "sinceBlock": 20227345,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x475c8Fb7F7D4d3bba0b0a4da2bE31328fc36E358",
        "getSupportedChains": ["4051577828743386545"],
        "getToken": "eth:0x45fcf0Ebb7d79E3de9Fc308b6c7cb680A981CB7a",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x80e2dcE0A16c8DB769995129cF6BbFCac8E4cFb8": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x8113f001eA456759264317007220cBc939cA8435",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1735554587,
      "sinceBlock": 21514700,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "6433500567565415381",
          "15971525489660198786"
        ],
        "getToken": "eth:0xD11c452fc99cF405034ee446803b6F6c1F6d5ED8",
        "getTokenDecimals": 18,
        "owner": "eth:0x22261B4D6F629D8cF946C3524df86bF7222901F6",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x8113f001eA456759264317007220cBc939cA8435": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x8192D648ad9144aF8c2488c8142c72B3cd990728",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964683,
      "sinceBlock": 21880128,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0xDAA1B05C2c3409c5f5CB10b510de2af043E404Fd",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x8192D648ad9144aF8c2488c8142c72B3cd990728": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x823839fE57d4c594bF9500C60c9551352a19D89D",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745589131,
      "sinceBlock": 22346454,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x1c00c3E03C3a10a0C1d9B6d1A42e797d7CB4147a",
        "getTokenDecimals": 18,
        "owner": "eth:0x98136248735933385819236398E2Ab75852485Eb",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x823839fE57d4c594bF9500C60c9551352a19D89D": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x8272dbBA30f14900b22b4bfC8DB4E88B02bA413a",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1713201383,
      "sinceBlock": 19662339,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x9b8FEf06D74c3880FC6886b3c6FbbBf601Db0DCC",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x1494CA1F11D487c2bBe4543E90080AeBa4BA3C2b",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x8272dbBA30f14900b22b4bfC8DB4E88B02bA413a": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x8291a8E8dCF429e2FA7d032bF3E583ee959F3B06",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xa9fa40d9d26de86fa9869be555593dd3b95cc40442206b8c0725a24d1809cc7f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1708552763,
      "sinceBlock": 19278858,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getOffRamps": [
          "eth:0xB095900fB91db00E6abD247A5A5AD1cee3F20BF7",
          "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d",
          "eth:0xeAD31B98179e2637Bb052a970Ac92Cbb2E26461d"
        ],
        "getOnRamps": [
          "eth:0x86B47d8411006874eEf8E4584BdFD7be8e5549d1",
          "eth:0x925228D7B82d883Dde340A55Fe8e6dA56244A22C",
          "eth:0xeAD31B98179e2637Bb052a970Ac92Cbb2E26461d"
        ],
        "getToken": "eth:0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.2.0"
      },
      "implementationNames": {
        "eth:0x8291a8E8dCF429e2FA7d032bF3E583ee959F3B06": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CallProxy",
      "address": "eth:0x82b8A19497fA25575f250a3DcFfCD2562B575A2e",
      "type": "Contract",
      "sourceHashes": [
        "0x0b5d83431c69340cb7e56f4baac882eed639a835829b4752caefdb78e4b32741"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1689097595,
      "sinceBlock": 17671946,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x82b8A19497fA25575f250a3DcFfCD2562B575A2e": "CallProxy"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x82Df5c453e854CFaD64EA3f16497B5c5b9DB012B",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1722536915,
      "sinceBlock": 20435489,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x4913fD2c77d93730358cC41db9d3048dbfe1F196",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x547213367cfB08ab418E7b54d7883b2C2AA27Fd7",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x82Df5c453e854CFaD64EA3f16497B5c5b9DB012B": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x8300e89e82A840176eb250EcDA0A7dBDb4a6B12D",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1715888555,
      "sinceBlock": 19884695,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x5180865890246278544ea457342b46665C196a97",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x1Cbc4BF664907669CfAB86a3b1aCC3EC8867a25F",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x8300e89e82A840176eb250EcDA0A7dBDb4a6B12D": "BurnMintTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x831097033C88c82a7F1897b168Aa88cC44540C8f",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1715889587,
      "sinceBlock": 19884780,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 25,
        "getLatestPriceEpochAndRound": 467714,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "celo",
          "onRamp": "eth:0x27C96A8a2f70a8408aD6c620717a3bDaA54bb10b",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 6,
          "blockNumber": 20574530,
          "configDigest": "0x0001163bb8e5e2a1be39c086ff1c53c480b69f5c1fa89bdef5655886551d5eea"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x831097033C88c82a7F1897b168Aa88cC44540C8f": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x8315Bbe2b2828559CEeCCCBCB4550A466227336E",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729692791,
      "sinceBlock": 21028811,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x8BcD7e48Dd2104ed83eb1CE0c6E7610604AE9062",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "4949039107694359620",
          "6433500567565415381",
          "11344663589394136015",
          "15971525489660198786",
          "1923510103922296319",
          "3734403246176062136"
        ],
        "getToken": "eth:0x94025780a1aB58868D9B2dBBB775f44b32e8E6e5",
        "owner": "eth:0x2C305888a456E7004663bc12A74395E637eABCBc",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x8315Bbe2b2828559CEeCCCBCB4550A466227336E": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x8356D3261bef4d7f6f8427FE651660b35D8a2Cd3",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1754506799,
      "sinceBlock": 23083974,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "124615329519749607",
          "4949039107694359620",
          "15971525489660198786"
        ],
        "getToken": "eth:0x243c9be13fAbA09F945ccc565547293337Da0Ad7",
        "getTokenDecimals": 18,
        "owner": "eth:0x062f05CD6c835677B05a8658A351969476861316",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x8356D3261bef4d7f6f8427FE651660b35D8a2Cd3": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x83F3DA5aa2C7534d694B0acde7624573c830250D",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727922659,
      "sinceBlock": 20882014,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 915,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "optimism",
          "onRamp": "eth:0xE4C51Dc01A4E0aB14c7a7a2ed1655E9CF8A3E698",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21041178,
          "configDigest": "0x00011ec48d6f4bb34b172cd56fbab664004b4528496d75718214e43223aa4709"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x83F3DA5aa2C7534d694B0acde7624573c830250D": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x85a6Dc1E19EA051C0DA93290d030F3eDBD99B159",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x861c7816Ebd335319eB66cb047707C95e9AA0cdC",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x8628AB5A69b69742Ff0AD828Fa6d26f6aaD050B9",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1753024571,
      "sinceBlock": 22961239,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [],
        "getToken": "eth:0x904f36d74bED2Ef2729Eaa1c7A5B70dEA2966a02",
        "getTokenDecimals": 18,
        "owner": "eth:0xE4D701c6E3bFbA3e50D1045A3cef4797b6165119",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x8628AB5A69b69742Ff0AD828Fa6d26f6aaD050B9": "LockReleaseTokenPool"
      }
    },
    {
      "name": "OnRamp1",
      "address": "eth:0x86B47d8411006874eEf8E4584BdFD7be8e5549d1",
      "type": "Contract",
      "template": "transporter/OnRampV1",
      "sourceHashes": [
        "0xe8da6f84753c543cd6eb5135d9c0d9e57ed67e74118a8e019b80ff156bd6ead1"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getNopFeesJuels",
        "linkAvailableForPayment",
        "tokenAddresses",
        "tokenPools"
      ],
      "sinceTimestamp": 1701285455,
      "sinceBlock": 18679301,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "router": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
          "maxNumberOfTokensPerMsg": 1,
          "destGasOverhead": 350000,
          "destGasPerPayloadByte": 16,
          "destDataAvailabilityOverheadGas": 33596,
          "destGasPerDataAvailabilityByte": 16,
          "destDataAvailabilityMultiplierBps": 6840,
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
          "maxDataBytes": 30000,
          "maxPerMsgGasLimit": 3000000
        },
        "getExpectedNextSequenceNumber": 1708,
        "getNopFeesJuels": 8,
        "getTokenLimitAdmin": "eth:0x2F2A3e36CE5Fb0924C414BEB1D98B531Cdf17e0B",
        "linkAvailableForPayment": "5574763350941150069",
        "linkToken": "eth:0x514910771AF9Ca656af840dff83E8264EcF986CA",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "staticConfigAddresses": {
          "prevOnRamp": "eth:0x0000000000000000000000000000000000000000",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "staticConfigChains": {
          "chainSelector": "ethereum",
          "destChainSelector": "optimism"
        },
        "tokenAddresses": [
          "eth:0xb2F30A7C980f052f02563fb518dcc39e6bf38175",
          "eth:0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
          "eth:0xAe770d24ec1580A13392E0B71067571351029203",
          "eth:0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
          "eth:0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
          "eth:0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7",
          "eth:0xB60acD2057067DC9ed8c083f5aa227a244044fD6",
          "eth:0x6b5204B0Be36771253Cc38e88012E02B752f0f36",
          "eth:0x8C0D76C9B18779665475F3E212D9Ca1Ed6A1A0e6",
          "eth:0xc2e660C62F72c2ad35AcE6DB78a616215E2F2222",
          "eth:0x20157DBAbb84e3BBFE68C349d0d44E48AE7B5AD2",
          "eth:0x30D20208d987713f46DFD34EF128Bb16C404D10f",
          "eth:0x59D9356E565Ab3A36dD77763Fc0d87fEaf85508C",
          "eth:0x08d23468A467d2bb86FaE0e32F247A26C7E2e994"
        ],
        "tokenPools": [
          "eth:0x057152DB365B47851B0A0bd431644b8eE21fE1b4",
          "eth:0xA81f4AB595dE5C14759245DE5ce9899D380FeFda",
          "eth:0x8291a8E8dCF429e2FA7d032bF3E583ee959F3B06",
          "eth:0x69c24c970B65e22Ac26864aF10b2295B7d78f93A",
          "eth:0x619ED9fE2E5CfD9FAE364E703b60eA776Bb5924E",
          "eth:0x0C291Ae31730901515e5C46406A6ba2d88c1f4aA",
          "eth:0x6452d693860ab7e18fC5858C05980F63d93F37a6",
          "eth:0xF84Bf7D614F3138D805186C497995d4eD315fA72",
          "eth:0xa96787DCe9Df7BF7bB033E39777bd108E29D349b",
          "eth:0xf5224EfD7Ea9edFa6b6e06964084b92426DCdE99",
          "eth:0xd72F7010f0Fa621aB0869e61e9bb4e3cC887c66c",
          "eth:0x0Bc42675799D0C1efE3CDe64857714ae84f075B4",
          "eth:0x66D40E0D2819a2264B2a61f5DD578573B9dedCEc",
          "eth:0xa35304aA2D659e5E06A768fEc4Af3B443916C215"
        ],
        "typeAndVersion": "EVM2EVMOnRamp 1.2.0"
      },
      "implementationNames": {
        "eth:0x86B47d8411006874eEf8E4584BdFD7be8e5549d1": "EVM2EVMOnRamp"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "CommitStore",
      "address": "eth:0x8705F734b7ac1FC0bb2d16F60c6eFac5Ed646159",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1731971171,
      "sinceBlock": 21217780,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 151,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "2049429975587534727",
          "onRamp": "eth:0x0129211377B414Cad2c624C40c342FAffB3B3F0F",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21246070,
          "configDigest": "0x0001d761bb7b461468cb81eb43eb8edde0c939f2a76b10c5f85c02aa8fb449ed"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x8705F734b7ac1FC0bb2d16F60c6eFac5Ed646159": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "CommitStore",
      "address": "eth:0x87c55D48DF6EF7B08153Ab079e76bFEcbb793D75",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1701457415,
      "sinceBlock": 18693524,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 2954,
        "getLatestPriceEpochAndRound": 469761,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "bnb",
          "onRamp": "eth:0x0Bf40b034872D0b364f3DCec04C7434a4Da1C8d9",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 9,
          "blockNumber": 20574522,
          "configDigest": "0x0001e56a75372f894c177787f2df78efd743286c7420d76047d9ef113e36b21f"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x87c55D48DF6EF7B08153Ab079e76bFEcbb793D75": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x89c9038906887A69bD9C20f81B1B4C309F9A6D04",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729692563,
      "sinceBlock": 21028792,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xc43c01026128Aa758A65D12dB6a72CE4DD778dF2",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "4949039107694359620"],
        "getToken": "eth:0x73968b9a57c6E53d41345FD57a6E6ae27d6CDB2F",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x89c9038906887A69bD9C20f81B1B4C309F9A6D04": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x89F39cdbad48b6531DDBd38ea0D84E9c9CbCdA27",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1737344771,
      "sinceBlock": 21663103,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "3993510008929295315",
          "11344663589394136015",
          "15971525489660198786"
        ],
        "getToken": "eth:0x28BE7E8cD8125CB7A74D2002A5862E1bfd774cd9",
        "getTokenDecimals": 18,
        "owner": "eth:0xe72F448995DB2A003A1D0d28b10291Ef07aF814F",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x89F39cdbad48b6531DDBd38ea0D84E9c9CbCdA27": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x8A1680fBbDb3Da1e0E7cA9078435631bEaf8a2cF",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1733808683,
      "sinceBlock": 21370032,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 90,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "9043146809313071210",
          "onRamp": "eth:0x0883eC4F32CaDe330c56e51a9131F7443a0a576A",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21419531,
          "configDigest": "0x000197927c950958e29373109ab1365aca4627dab2865202cb19a87787e3a469"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x8A1680fBbDb3Da1e0E7cA9078435631bEaf8a2cF": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x8aC68225b0E80cF7f16EA67639b455d679a158d7",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729692863,
      "sinceBlock": 21028817,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x1580C7d4754f5671626e42f0372D56104B092CFA",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4051577828743386545",
          "4949039107694359620"
        ],
        "getToken": "eth:0x54Df3076ac0CdC9bC97fA290AB9c5a88E3D23630",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x8aC68225b0E80cF7f16EA67639b455d679a158d7": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x8BcD7e48Dd2104ed83eb1CE0c6E7610604AE9062",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1712691803,
      "sinceBlock": 19620241,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x8315Bbe2b2828559CEeCCCBCB4550A466227336E",
        "getSupportedChains": [
          "11344663589394136015",
          "15971525489660198786",
          "4051577828743386545",
          "4949039107694359620",
          "6433500567565415381",
          "1923510103922296319",
          "3734403246176062136"
        ],
        "getToken": "eth:0x94025780a1aB58868D9B2dBBB775f44b32e8E6e5",
        "owner": "eth:0x2C305888a456E7004663bc12A74395E637eABCBc",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x8BcD7e48Dd2104ed83eb1CE0c6E7610604AE9062": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x8c6028e38391cfC2A1a28f4359EA5732E9422e56",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1722536699,
      "sinceBlock": 20435471,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x8ee28906BA9E482d881d28E825118b8b8e46A4a5",
        "getSupportedChains": [
          "11344663589394136015",
          "4051577828743386545",
          "4949039107694359620"
        ],
        "getToken": "eth:0x5F2F8818002dc64753daeDF4A6CB2CcB757CD220",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0x8c6028e38391cfC2A1a28f4359EA5732E9422e56": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x8c9015fDBCC26b8cD0925F3900731dD0AF66b760",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729698767,
      "sinceBlock": 21029307,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x7559a84Ae7B75F4B0E0E540312A3Ec912B2128CA",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "4949039107694359620",
          "15971525489660198786"
        ],
        "getToken": "eth:0x3e62fED35c97145e6B445704B8CE74B2544776A9",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x8c9015fDBCC26b8cD0925F3900731dD0AF66b760": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "PriceRegistry",
      "address": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
      "type": "Contract",
      "template": "transporter/PriceRegistry",
      "sourceHashes": [
        "0xb3ac732170b6c82e6eb8e400fac9618c85fcdce082a404030cee9be7bd700bdf"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1700593583,
      "sinceBlock": 18622114,
      "values": {
        "$immutable": true,
        "getFeeTokens": [
          "eth:0x514910771AF9Ca656af840dff83E8264EcF986CA",
          "eth:0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
          "eth:0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f"
        ],
        "getPriceUpdaters": [
          "eth:0x4af4B497c998007eF83ad130318eB2b925a79dc8",
          "eth:0x2aa101BF99CaeF7fc1355D4c493a1fe187A007cE",
          "eth:0xD37a60E8C36E802D2E1a6321832Ee85556Beeb76",
          "eth:0x87c55D48DF6EF7B08153Ab079e76bFEcbb793D75",
          "eth:0x9B2EEd6A1e16cB50Ed4c876D2dD69468B21b7749",
          "eth:0x8DC27D621c41a32140e22E2a4dAf1259639BAe04",
          "eth:0x31f6ab382DDeb9A316Ab61C3945a5292a50a89AB",
          "eth:0x118a9389960F86390A4F14ce4C95D6ff076C6bFC",
          "eth:0x831097033C88c82a7F1897b168Aa88cC44540C8f",
          "eth:0x76264869a3eBF51a59FCa5ABa84ee2867c7F190e",
          "eth:0x3CB2A81bb8a188C5353CdFa9994ed8666556FC53",
          "eth:0x3d8a95adA63D406ee8232562AbD83CEdb0B90466",
          "eth:0xa4d264470a67D9f6682EE12Bdc9c35Df44e3F194",
          "eth:0x57d6cD9CD44770C807b2763Dbe4CFDA0113dd114",
          "eth:0x9f592c28590595F3F78a8881E8Dbb9984ed705cD",
          "eth:0x1A3D582d1aB9CF630b44B91C54CBD16Ca7e35a8d",
          "eth:0xD9d3d90D729F50794741Da7a2d54d8B12dC3Da72",
          "eth:0xFa94e57b12b6C45A3aD3CBb9451ba99a997eb210",
          "eth:0xA48269e5c9A234daBfEBE98b82390Be705536d1c",
          "eth:0x95deB0c4bB9168202d50E874865f9A1842b82D64",
          "eth:0xd8F93Aff87dC2AEEe0D0b0dF347baDA861BFf802",
          "eth:0x52275dC17f9eD92230C8C4d57fD36d128701f694",
          "eth:0xA4755Cd68CA2092447c8c842659a2931f9110320",
          "eth:0x0d26BaE784c8986502E072F4e73B6168e2052045",
          "eth:0x0f89C7c0586536B618e0469402e1c8234bc52959",
          "eth:0x01346721418045A6c07b71052e452eF8615e9084",
          "eth:0x9D93D536Ced80871Bf3DA5Bb47bAedE62c794f8A",
          "eth:0x9B9Ec8E26955c034828bBD78E22ab258d983dCdb",
          "eth:0x83F3DA5aa2C7534d694B0acde7624573c830250D",
          "eth:0x57b548C9c213EA2bcf60193E3D7fd2d2b53Fb9b3",
          "eth:0xA9f9bF2b643348c0884f2eBA4F712E833DA9a2b8",
          "eth:0xDaC3A82Cc5e7C137bF28e6EF4F68f29D66205ffe",
          "eth:0xf7B343A17445F175f2Dd9f5CB29BAf0a8dE75ed3",
          "eth:0xE41677500B425999cB4133950ca3aB79eA7470a6",
          "eth:0xa58818D1acD8D62ab077a1F79606fCb5CE3741b9",
          "eth:0x8705F734b7ac1FC0bb2d16F60c6eFac5Ed646159",
          "eth:0xd2428F8C62fBfEA4b44a703CF11e02D7B0a6Cd99",
          "eth:0xdCF6F209d36d93A26B251D2CFE994bEF02954110",
          "eth:0x6C8b9672B4482A876168b9415bF8bBEA574bF4B9",
          "eth:0x8A1680fBbDb3Da1e0E7cA9078435631bEaf8a2cF",
          "eth:0x6fe6F73F7Cd11E34b6908cdC080683690229d0A4",
          "eth:0x0f5552d17505dC8f70D6cd65BEADFE20f42bBE75",
          "eth:0x10D5611D4E1fBB0Eb614C25f14ED6AfD6C945c75",
          "eth:0x1807769Abe5133c9B41cA6746044b6a1d83F5633",
          "eth:0x700b6adcCfAa4c66638b1AD36BDeFE2038794E02",
          "eth:0xDb156E875Ef17dDe70c90a1529023fFf376e627c",
          "eth:0x913A2AC13907F29EF2346E21368214B9b3dDc04B",
          "eth:0x27A4E7ff4a6E28056Ac3e39445639876Ee9926FB",
          "eth:0x459154447d3BD41392Ea3f49738a887dD3f1e5d0",
          "eth:0xc5164AF94Be6737fE21085eDDa4E43BcBf224F9f",
          "eth:0xc46890D248a389A40725dbd9fa5e13548B56Ad8d",
          "eth:0xf7D68CcC92B836316C40B24ea77F6805DcBb8F02",
          "eth:0x98d0f843AE9BA7c55F6e3941E6660a5947a67Ed9",
          "eth:0x0428dF02c581E605AABF83005b427b1561b587De",
          "eth:0x8FC54E798eAC51353E160C9113682714F5e9E262",
          "eth:0xfacFe88fdf03Ab7D30d6CA45A070Df7C54551fd6",
          "eth:0x807dd69Bc9BC4e9411490f7b79Ff30c91E799A04",
          "eth:0xA7E77BD47e2fDeE61df271E8b9206F3F1E804427",
          "eth:0x4B50Cd4637a8EA94729811201A699f4800ee3282",
          "eth:0x8D846b1E9032827546B62160c32aDe293f77B1AB",
          "eth:0x0F254ECcC89219CEC945BCeA48A4681eb5a380d7",
          "eth:0x3f1c3541B7035dEd84E4502E41D5C919da4C4527",
          "eth:0x6f4AbCe0B22343e66C856F28e2d07074c5c5BF75",
          "eth:0x607c0979C55628680167260Ca68e0EF22e8f128C",
          "eth:0x67b972054152E6F4B7434D84439EE225e5a00b90",
          "eth:0xF191733ea5be14E4a5f381a3c375A4F3F8fd4793",
          "eth:0x5Fd81cF5734498467634Ed9432aad298022e15Ff",
          "eth:0xFE73BccC5b88D22969099EBb4E2eb5e19eFb0165",
          "eth:0xb86C91861A7043fffC26C7740C3678eE09599234",
          "eth:0xbAf669bBe01882082C83F8B2d146057202fc4cB7",
          "eth:0x6818278a6e4DA0aD588ef4dd04b59bC4E6703248",
          "eth:0xd079265E929C845707e816E3855721D055d40235",
          "eth:0x38A806580D93c5B3e295F5181723C11f15c43271",
          "eth:0x70Ac0F926a64D82f0cC69A3E505f0eE57E27006a",
          "eth:0x1bddbA5DC2cd6ED3343A8E94D02023cC720533B9"
        ],
        "getStalenessThreshold": 90000,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "PriceRegistry 1.2.0"
      },
      "implementationNames": {
        "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad": "PriceRegistry"
      }
    },
    {
      "address": "eth:0x8d34EA6fb1Ed6B60F94ac6CD01dD1181ef12290E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x8D846b1E9032827546B62160c32aDe293f77B1AB",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1745215391,
      "sinceBlock": 22315457,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 24,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "17164792800244661392",
          "onRamp": "eth:0x6e05AfFFD2D44e1703e1ff5c0A24bee10f0781b6",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615576,
          "configDigest": "0x0001d1a60a77c8dd52989698b53c2071315c2188b1907ccafc29fbc7043ce75b"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x8D846b1E9032827546B62160c32aDe293f77B1AB": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x8d9F0185c49752d626ef0c318B24Bba83931D639",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739651879,
      "sinceBlock": 21854253,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620", "4627098889531055414"],
        "getToken": "eth:0x1DB1Afd9552eeB28e2e36597082440598B7F1320",
        "getTokenDecimals": 18,
        "owner": "eth:0xA4539A9ecE2A653AfC7C8DD49d27dd079ed19d00",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x8d9F0185c49752d626ef0c318B24Bba83931D639": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x8DC27D621c41a32140e22E2a4dAf1259639BAe04",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1701287747,
      "sinceBlock": 18679489,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 5251,
        "getLatestPriceEpochAndRound": 464897,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "base",
          "onRamp": "eth:0xDEA286dc0E01Cb4755650A6CF8d1076b454eA1cb",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 9,
          "blockNumber": 20574539,
          "configDigest": "0x0001aca19ca6472b325da7ddcbfd76c8d2efd743b89fe3e010e38f791194de04"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x8DC27D621c41a32140e22E2a4dAf1259639BAe04": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x8E0e08E8cbc324310550E195383b7aC200726639",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x8E7ebBb95e369BC854Ee7021C7CF2E282c3bCAEa",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729733975,
      "sinceBlock": 21032227,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xcd69c117bf91Fc57d5fC237dFAbA5f17B5322733",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x341c05c0E9b33C0E38d64de76516b2Ce970bB3BE",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x8E7ebBb95e369BC854Ee7021C7CF2E282c3bCAEa": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x8ee28906BA9E482d881d28E825118b8b8e46A4a5",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729693079,
      "sinceBlock": 21028835,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x8c6028e38391cfC2A1a28f4359EA5732E9422e56",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "11344663589394136015",
          "4051577828743386545"
        ],
        "getToken": "eth:0x5F2F8818002dc64753daeDF4A6CB2CcB757CD220",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x8ee28906BA9E482d881d28E825118b8b8e46A4a5": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x8FC54E798eAC51353E160C9113682714F5e9E262",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1741835771,
      "sinceBlock": 22035201,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 56,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1456215246176062136",
          "onRamp": "eth:0x5873C4FfD8A3DdB610e5079cebA63a1C04340A29",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 22091126,
          "configDigest": "0x0001338dbedb5e15dbe63407039896f0140fdf2211cdefb50442f96e8c4383ee"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x8FC54E798eAC51353E160C9113682714F5e9E262": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x8fd996312CA11849A562C78885021148F25a9841",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745006327,
      "sinceBlock": 22298124,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["3993510008929295315"],
        "getToken": "eth:0xb0AC2b5a73da0e67A8e5489Ba922B3f8d582e058",
        "getTokenDecimals": 18,
        "owner": "eth:0x6fA5719F623315DFd8a47a5a4e8112549102cE68",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x8fd996312CA11849A562C78885021148F25a9841": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x9054f2DF5f2AC59b39a175c27a00165989D17d2B",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739281235,
      "sinceBlock": 21823641,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "3734403246176062136",
          "15971525489660198786",
          "4949039107694359620"
        ],
        "getToken": "eth:0x90cE5720c17587D28E4Af120ae2d313B3BAD1722",
        "getTokenDecimals": 18,
        "owner": "eth:0x4dA7493C2CE2BEce36e75AaDdF39D5c041B6d468",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x9054f2DF5f2AC59b39a175c27a00165989D17d2B": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0x9079410666ED02725ee9d148398Cee26397c2A36",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0x913A2AC13907F29EF2346E21368214B9b3dDc04B",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1739490167,
      "sinceBlock": 21840906,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 73,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1923510103922296319",
          "onRamp": "eth:0x139839036FF1Df22f47427740f40fE300184Fb8a",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21847848,
          "configDigest": "0x0001dc3b990031cde3d452258059b07cc1360f1f23d244c18ff9686715d6a0a0"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x913A2AC13907F29EF2346E21368214B9b3dDc04B": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x916D7d960B119bb6c4AbE381f7677eCEed866d44",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729739627,
      "sinceBlock": 21032697,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x2764910B500689BbC9DB16c7AD61c6DD32FDE73B",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x8Fe815417913a93Ea99049FC0718ee1647A2a07c",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x916D7d960B119bb6c4AbE381f7677eCEed866d44": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0x925d7Ea0ADe586DBFd56a942bb297286cE428C79",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x92AfdbCE8017c1694a9922F777260854af48B532",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1751693939,
      "sinceBlock": 22850982,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0x1B27d5dcCac27Dbf8B193360C10f50adCc05c4B7",
        "getTokenDecimals": 2,
        "owner": "eth:0xb0699D347a64870ec9A7fEd63055436040983af2",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x92AfdbCE8017c1694a9922F777260854af48B532": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x933b2C73bcDBa56cA8B89f94D34882d2f7669AbD",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736785679,
      "sinceBlock": 21616755,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "6422105447186081193",
          "6433500567565415381",
          "15971525489660198786",
          "4411394078118774322",
          "11344663589394136015",
          "1346049177634351622",
          "465200170687744372",
          "4051577828743386545",
          "3734403246176062136",
          "4348158687435793198",
          "5142893604156789321",
          "7264351850409363825",
          "17198166215261833993",
          "3719320017875267166",
          "3016212468291539606",
          "1556008542357238666"
        ],
        "getToken": "eth:0x7A6c2EB3B5dB4e7ea28E096c7481b3Ec5b52aB09",
        "getTokenDecimals": 18,
        "owner": "eth:0x05C720EDB38852673CC3B43D2b59dFDdC16C1Ded",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x933b2C73bcDBa56cA8B89f94D34882d2f7669AbD": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x934635de453A1161D02Ce395F2F59E775597fE13",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4398d0c50712015c3b1951f5621659a9941d9e71e2860147ce6f40ae59231433"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1754429471,
      "sinceBlock": 23077566,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4051577828743386545",
          "15971525489660198786",
          "4949039107694359620",
          "6433500567565415381"
        ],
        "getToken": "eth:0x5e53AeBE377eFC92213514eC07f8EF3Af426DD1d",
        "getTokenDecimals": 18,
        "owner": "eth:0x62c212084ED4d2C1451c2e778f8eA9a15a47616B",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x934635de453A1161D02Ce395F2F59E775597fE13": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x9359cd75549DaE00Cdd8D22297BC9B13FbBe4B79",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1748940743,
      "sinceBlock": 22623055,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "4949039107694359620",
          "3734403246176062136",
          "15971525489660198786",
          "6433500567565415381",
          "465200170687744372",
          "1673871237479749969"
        ],
        "getToken": "eth:0xB58E61C3098d85632Df34EecfB899A1Ed80921cB",
        "getTokenDecimals": 18,
        "owner": "eth:0x2527ec458c863073a303CF0a362Bf78aDD5dFEf8",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x9359cd75549DaE00Cdd8D22297BC9B13FbBe4B79": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x9453E18f03A36E2A2c70598De520bD24434D2d1D",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x94A43cC8C4d755271436cfE42793A66a6C9ae25b",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1757957291,
      "sinceBlock": 23369967,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0xf0DB65D17e30a966C2ae6A21f6BBA71cea6e9754",
        "getTokenDecimals": 18,
        "owner": "eth:0x629692bBcA65a94DEeBd98de93bd74531561140d",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x94A43cC8C4d755271436cfE42793A66a6C9ae25b": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x95842Bb96cECfe77e8AC07BA6e6bA948B745CCCd",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1746459815,
      "sinceBlock": 22418505,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "1673871237479749969",
          "6433500567565415381"
        ],
        "getToken": "eth:0xF0B2dd79324A66d2108C961d680F7616E1486bB0",
        "getTokenDecimals": 18,
        "owner": "eth:0xC04f84A02cC65f14f4e8C982a7a467EE88c5311e",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x95842Bb96cECfe77e8AC07BA6e6bA948B745CCCd": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x95deB0c4bB9168202d50E874865f9A1842b82D64",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727343635,
      "sinceBlock": 20833953,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 197,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "celo",
          "onRamp": "eth:0xc319484eF6cdA3a7f4D470e660b343FB569e9A1e",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 20975351,
          "configDigest": "0x0001cdde33980ae64bccd75f3d7662a41ef2a5487a4a911f6ca3a2d32233cf37"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x95deB0c4bB9168202d50E874865f9A1842b82D64": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x9763C884b1cE0439a017bac04659e3350054Aea9",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1748714555,
      "sinceBlock": 22604363,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["3734403246176062136"],
        "getToken": "eth:0x93CA78ff235649A98319612378405dC5170a95dD",
        "getTokenDecimals": 0,
        "owner": "eth:0xdCaa50578efe0A2AB95767A6DC41d104d543E8D9",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x9763C884b1cE0439a017bac04659e3350054Aea9": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x98d0f843AE9BA7c55F6e3941E6660a5947a67Ed9",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1741725803,
      "sinceBlock": 22026085,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 26,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "11690709103138290329",
          "onRamp": "eth:0xe69a1e9c2A0931D31593B201BD0CD5Bd39692e70",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 22034031,
          "configDigest": "0x000166951d8d019ee444731b916092d32a8f7c217aeb32ecb11f6d5757395363"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x98d0f843AE9BA7c55F6e3941E6660a5947a67Ed9": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x98ef4B1Fe8fe9C73Deb07a77c9f861E8558439d7",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x79b9cf230176def2af971dc33c78f8b070cb0a6e49af9044a0e1f1ec5db4c52b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1741372091,
      "sinceBlock": 21996788,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6422105447186081193", "12505351618335765396"],
        "getToken": "eth:0xF27441230EADEaC85B764610325Cc9a0D7859689",
        "owner": "eth:0xE7c9a9DddAb8a384c38D721DE64E4222Fe76DF75",
        "typeAndVersion": "BurnMintTokenPool 1.5.0"
      },
      "implementationNames": {
        "eth:0x98ef4B1Fe8fe9C73Deb07a77c9f861E8558439d7": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0x99874400820c354eE07bC8b165C605632BdCeae3",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742238707,
      "sinceBlock": 22068614,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x7DC9748DA8E762e569F9269f48F69A1a9F8Ea761",
        "getTokenDecimals": 6,
        "owner": "eth:0x3604582f56565d7060D73829FfB9EBD579218Dca",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x99874400820c354eE07bC8b165C605632BdCeae3": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x99bb52AAF045F63F74d0a3FbE6Cf3e7B23aeD212",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1747154087,
      "sinceBlock": 22475516,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4949039107694359620",
          "6433500567565415381",
          "15971525489660198786",
          "4627098889531055414",
          "1673871237479749969",
          "1562403441176082196",
          "12505351618335765396",
          "9027416829622342829",
          "4051577828743386545",
          "3849287863852499584",
          "3461204551265785888",
          "124615329519749607",
          "1294465214383781161",
          "16468599424800719238",
          "2442541497099098535"
        ],
        "getToken": "eth:0xd9D920AA40f578ab794426F5C90F6C731D159DEf",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x99bb52AAF045F63F74d0a3FbE6Cf3e7B23aeD212": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x9aCd2ffD56E278a560Cc4E12dCA2B7D2B3359Ac2",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x79b9cf230176def2af971dc33c78f8b070cb0a6e49af9044a0e1f1ec5db4c52b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1751531099,
      "sinceBlock": 22837491,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x27E939C9a85AFD8D643eEDA0BdeCb193683BcdA5",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["7937294810946806131", "6433500567565415381"],
        "getToken": "eth:0x2cd3CdB3bd68Eea0d3BE81DA707bC0c8743D7335",
        "owner": "eth:0x2728df4D22253004C017675bd609962cD641D797",
        "typeAndVersion": "BurnMintTokenPool 1.5.0"
      },
      "implementationNames": {
        "eth:0x9aCd2ffD56E278a560Cc4E12dCA2B7D2B3359Ac2": "BurnMintTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x9B2EEd6A1e16cB50Ed4c876D2dD69468B21b7749",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1701287831,
      "sinceBlock": 18679496,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 4645,
        "getLatestPriceEpochAndRound": 462083,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "arbitrum",
          "onRamp": "eth:0xCe11020D56e5FDbfE46D9FC3021641FfbBB5AdEE",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 9,
          "blockNumber": 20574532,
          "configDigest": "0x0001370e23facc097f2c5f3bca6c9f17d68f1961e5f489ac13d0e7600332c1e1"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0x9B2EEd6A1e16cB50Ed4c876D2dD69468B21b7749": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x9B391a5179BdC59af9B3a49423Fe8F10b74aF3c6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x9b8FEf06D74c3880FC6886b3c6FbbBf601Db0DCC",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729698731,
      "sinceBlock": 21029304,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x8272dbBA30f14900b22b4bfC8DB4E88B02bA413a",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x1494CA1F11D487c2bBe4543E90080AeBa4BA3C2b",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x9b8FEf06D74c3880FC6886b3c6FbbBf601Db0DCC": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x9B9Ec8E26955c034828bBD78E22ab258d983dCdb",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727851151,
      "sinceBlock": 20876074,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 5620,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "bnb",
          "onRamp": "eth:0x35C724666ba31632A56Bad4390eb69f206ab60C7",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615498,
          "configDigest": "0x000146018379ae266d453d23a020996fa1793fa760a05997c0c79981bc554770"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x9B9Ec8E26955c034828bBD78E22ab258d983dCdb": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0x9c79223e8ce037c39b534891b41b3f306a8FE192",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729729427,
      "sinceBlock": 21031852,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x6452d693860ab7e18fC5858C05980F63d93F37a6",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "15971525489660198786",
          "3734403246176062136",
          "4949039107694359620"
        ],
        "getToken": "eth:0x6b5204B0Be36771253Cc38e88012E02B752f0f36",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x9c79223e8ce037c39b534891b41b3f306a8FE192": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x9D93D536Ced80871Bf3DA5Bb47bAedE62c794f8A",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727749055,
      "sinceBlock": 20867604,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 125,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "gnosis",
          "onRamp": "eth:0x014ABcfDbCe9F67d0Df34574664a6C0A241Ec03A",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21041192,
          "configDigest": "0x000184011a3c3e05eea15760f814fc726f83562f5b4f6a620c3be914b67ce4b7"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x9D93D536Ced80871Bf3DA5Bb47bAedE62c794f8A": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0x9db257ae83968F10f6A50009587BdA2fCedFDd5A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x9dC523fbc822b8827312c87F2C791094c7e9696f",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1748337743,
      "sinceBlock": 22573199,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["1804312132722180201"],
        "getToken": "eth:0xeF2A0a2F87752134491B4476eE1E339924Bf9fF1",
        "getTokenDecimals": 8,
        "owner": "eth:0x22f5413C075Ccd56D575A54763831C4c27A37Bdb",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x9dC523fbc822b8827312c87F2C791094c7e9696f": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x9Dfaaa0826b8D81Ea7Cf7ED95619574bcb47d6EA",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742242727,
      "sinceBlock": 22068944,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["3849287863852499584", "11344663589394136015"],
        "getToken": "eth:0xC9746F73cC33a36c2cD55b8aEFD732586946Cedd",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x9Dfaaa0826b8D81Ea7Cf7ED95619574bcb47d6EA": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0x9E2FD656eFffF4cbAc9fd45C017D4DD8fBC550E5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0x9F02c16190691CC4ceCD53A9267Bd24e37B6d06C",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1727960207,
      "sinceBlock": 20885131,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x78196436aF11b948c7036424B1ceA711fAdAd288",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["5142893604156789321"],
        "getToken": "eth:0x2624Bd0094f474713AC9c634b37A5ebef4e0b1FE",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0x9F02c16190691CC4ceCD53A9267Bd24e37B6d06C": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0x9f592c28590595F3F78a8881E8Dbb9984ed705cD",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1726173551,
      "sinceBlock": 20736971,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 102,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "4627098889531055414",
          "onRamp": "eth:0x69AbB6043BBEA2467f41CCD0144d1b3b4ECd20f4",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 1,
          "blockNumber": 20824421,
          "configDigest": "0x0001546e1da61190650a8355d476951d9a91ef9b3887ac715b73faa535d6676b"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0x9f592c28590595F3F78a8881E8Dbb9984ed705cD": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0x9FBcB7Ed1D48204b525531cC35b5482f6F44b08a",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1753021895,
      "sinceBlock": 22961017,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0x05B5C6976EDDA6278663e3B5F156861Db2545Bd0",
        "getTokenDecimals": 18,
        "owner": "eth:0x57dAcD30288A4385EF80c2aD4c202f7872CbdA64",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0x9FBcB7Ed1D48204b525531cC35b5482f6F44b08a": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xa17698199466E71bAFC31F226db341B7840701E7",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1715888531,
      "sinceBlock": 19884693,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x307D0353313F544fc8Da0D85F1005b1de516Bce8",
        "getSupportedChains": ["4051577828743386545", "465200170687744372"],
        "getToken": "eth:0x0AA1e96D2a46Ec6beB2923dE1E61Addf5F5f1dce",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xa17698199466E71bAFC31F226db341B7840701E7": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xa18BC8b64a863DB34199F7e59F3A3d051ABa413d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xa27501561B01D99cde347a63891e8762DCa5bBbd",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729738067,
      "sinceBlock": 21032567,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xa370CEcd451ecf15c2A01ec47762E967dF7574DA",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x8a053350ca5F9352a16deD26ab333e2D251DAd7c",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xa27501561B01D99cde347a63891e8762DCa5bBbd": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0xA3177f64efE98422E782bC17BE7971F01187B7cF",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xa35304aA2D659e5E06A768fEc4Af3B443916C215",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1727815127,
      "sinceBlock": 20873084,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0xF57fc17729Bd2bcD1e1342917B160eB4b69EE89A",
        "getSupportedChains": [
          "15971525489660198786",
          "3734403246176062136",
          "4949039107694359620"
        ],
        "getToken": "eth:0x08d23468A467d2bb86FaE0e32F247A26C7E2e994",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xa35304aA2D659e5E06A768fEc4Af3B443916C215": "LockReleaseTokenPool"
      }
    },
    {
      "name": "SiloedWithUnsiloedXERC20GroupTokenPool",
      "address": "eth:0xa3532633401AbFfbd15e6be825a45FB7F141469B",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x33f09e7682272c1f95424ab3f37d1315f3aec5b97fca7ff982b59bc8677ecefc"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1749658835,
      "sinceBlock": 22682475,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getLockbox": "eth:0x6D265C7dD8d76F25155F1a7687C693FDC1220D12",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "7937294810946806131",
          "15971525489660198786",
          "1673871237479749969",
          "3734403246176062136",
          "1346049177634351622",
          "7613811247471741961",
          "3849287863852499584",
          "4560701533377838164"
        ],
        "getToken": "eth:0xdAC17F958D2ee523a2206206994597C13D831ec7",
        "getTokenDecimals": 6,
        "getUnsiloedLiquidity": 3975621220739,
        "getXERC20": "eth:0x1217BfE6c773EEC6cc4A38b5Dc45B92292B6E189",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "SiloedWithUnsiloedXERC20GroupTokenPool 1.6.0"
      },
      "implementationNames": {
        "eth:0xa3532633401AbFfbd15e6be825a45FB7F141469B": "SiloedWithUnsiloedXERC20GroupTokenPool"
      }
    },
    {
      "address": "eth:0xa35B7219521134cAF52DccAD44d604335b64a4fB",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xa370CEcd451ecf15c2A01ec47762E967dF7574DA",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1711406315,
      "sinceBlock": 19514499,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000001",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000001",
        "getRouter": "eth:0xa27501561B01D99cde347a63891e8762DCa5bBbd",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x8a053350ca5F9352a16deD26ab333e2D251DAd7c",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xa370CEcd451ecf15c2A01ec47762E967dF7574DA": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xa42c8570771240D1e2F3211064a7C7472Cc05b7D",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0xA4755Cd68CA2092447c8c842659a2931f9110320",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727350607,
      "sinceBlock": 20834532,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 878,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "wemix",
          "onRamp": "eth:0x6c6Dd4fCa5A7B2F11AA3057AB573DD8878C76C5e",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 20989865,
          "configDigest": "0x0001fe7f65f62f62ae6ebfdcd2cc2c7d5123162a751c1af2db670c6972b69f8a"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xA4755Cd68CA2092447c8c842659a2931f9110320": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "CommitStore",
      "address": "eth:0xA48269e5c9A234daBfEBE98b82390Be705536d1c",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1728307091,
      "sinceBlock": 20913933,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 87,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "17198166215261833993",
          "onRamp": "eth:0xD3Bd3D50E3593AFE8B5A50C1B3F83c21D64c10d2",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22921574,
          "configDigest": "0x00011a06aa7e9e3763822961a9ba8e2e6b9318620372ca58cdbd07ff58ecb4bc"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xA48269e5c9A234daBfEBE98b82390Be705536d1c": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "CommitStore",
      "address": "eth:0xa4d264470a67D9f6682EE12Bdc9c35Df44e3F194",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1721311463,
      "sinceBlock": 20333884,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 23,
        "getLatestPriceEpochAndRound": 468738,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1562403441176082196",
          "onRamp": "eth:0x3B80Fe300c9A611abA0496e2543B66Ff7bD4B9e9",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 5,
          "blockNumber": 20574560,
          "configDigest": "0x00018d8d4844a53c3d72bf9c7721684c1f21b6eb6976d0b1b83155181ed84823"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0xa4d264470a67D9f6682EE12Bdc9c35Df44e3F194": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xa53a14c85965734C875C91A6a145CFB5ff4624dD",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xa5588e518CE5ee0e4628C005E4edAbD5e87de3aD",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1749831023,
      "sinceBlock": 22696743,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x245cc372C84B3645Bf0Ffe6538620B04a217988B",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["124615329519749607"],
        "getToken": "eth:0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5",
        "getTokenDecimals": 9,
        "owner": "eth:0x245cc372C84B3645Bf0Ffe6538620B04a217988B",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xa5588e518CE5ee0e4628C005E4edAbD5e87de3aD": "LockReleaseTokenPool"
      }
    },
    {
      "name": "SiloedLockReleaseTokenPool",
      "address": "eth:0xA586a732394A1AFfCF15b972cd47C936033C9FA7",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x9028114a8dae289d45ca7a9ec2b46c04b63f9ed32d956c08dc09d650f2a7af19"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1744059971,
      "sinceBlock": 22219593,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["7937294810946806131"],
        "getToken": "eth:0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
        "getTokenDecimals": 18,
        "getUnsiloedLiquidity": 0,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "SiloedLockReleaseTokenPool 1.6.0"
      },
      "implementationNames": {
        "eth:0xA586a732394A1AFfCF15b972cd47C936033C9FA7": "SiloedLockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xa58818D1acD8D62ab077a1F79606fCb5CE3741b9",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1731970691,
      "sinceBlock": 21217741,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 571,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "5406759801798337480",
          "onRamp": "eth:0xB1C908A7CF6f5FB1ed18a73aD60ffF9CC8276eC1",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21240427,
          "configDigest": "0x0001f33faf1aaa17a2703a3e36f26d0fd60d73aefb85744ac74e2f853a9be009"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xa58818D1acD8D62ab077a1F79606fCb5CE3741b9": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xa597E8df3B16b05815faDC3A3b5b8BaCEDd6f16f",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745129939,
      "sinceBlock": 22308374,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4051577828743386545",
          "6433500567565415381"
        ],
        "getToken": "eth:0xD63106f742EF0DE4d4F209F59D3c31b63EB58ced",
        "getTokenDecimals": 18,
        "owner": "eth:0x10163f09E2198b5e80DfDC33312348400bfF9203",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xa597E8df3B16b05815faDC3A3b5b8BaCEDd6f16f": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xa7689C57aa6D09d28244d3932F34176d853A660f",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729692719,
      "sinceBlock": 21028805,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x6Ff6BF3BF8af2e419DDC7BF038aFa5EB92b6cD7e",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0xE46a5E19B19711332e33F33c2DB3eA143e86Bc10",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xa7689C57aa6D09d28244d3932F34176d853A660f": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xA7E77BD47e2fDeE61df271E8b9206F3F1E804427",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1743183239,
      "sinceBlock": 22146929,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 100,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "2442541497099098535",
          "onRamp": "eth:0x375dDf245FB9951A1D1D4EF516Abd7D2B521238F",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22684557,
          "configDigest": "0x000194a652922cf778d6bf7751fcd7a01ca76793f15de24775ed5a8f1d38d8e4"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xA7E77BD47e2fDeE61df271E8b9206F3F1E804427": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xa81636AaCE97783AAC45764B873793bE081dA592",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xA82A87a9b6550e89dd8a7C8a1E3e421974eaf858",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1712692055,
      "sinceBlock": 19620262,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0xAc3453eEF710e1E6457383F29D696Db5435Bf95b",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0xc719d010B63E5bbF2C0551872CD5316ED26AcD83",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xA82A87a9b6550e89dd8a7C8a1E3e421974eaf858": "LockReleaseTokenPool"
      }
    },
    {
      "name": "ManyChainMultiSig",
      "address": "eth:0xa8D5E1daA6D8B94f11D77B7E09DE846292ef69FF",
      "type": "Contract",
      "template": "transporter/ManyChainMultiSig",
      "sourceHashes": [
        "0x15b33604a10bda5235da68c98629cc8246b96e86c931a23c296ae08f1eb691cb"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["getRootMetadata", "getRoot", "getOpCount"],
      "sinceTimestamp": 1689394931,
      "sinceBlock": 17696402,
      "values": {
        "$immutable": true,
        "getConfig": {
          "signers": [
            {
              "addr": "eth:0x2CD36141d4AEFb8e57209770b965043Ed3129D9F",
              "index": 0,
              "group": 1
            },
            {
              "addr": "eth:0x41eAdbc688797a02bfaBE48472995833489ce69D",
              "index": 1,
              "group": 1
            },
            {
              "addr": "eth:0x6bfBf6BC4bc5CD20768dAA6F58f0743bAFf2e5f4",
              "index": 2,
              "group": 1
            },
            {
              "addr": "eth:0x70f498A0AD8a17fC853fcb8eDbE31Fbce71173E6",
              "index": 3,
              "group": 1
            },
            {
              "addr": "eth:0x776D5B14ef1D5C58B0d48b53114f2Aa0faccB307",
              "index": 4,
              "group": 1
            },
            {
              "addr": "eth:0x803CBD1e4d722eCf8247c6c9CDab4fC87DBAf429",
              "index": 5,
              "group": 1
            },
            {
              "addr": "eth:0x9E2FD656eFffF4cbAc9fd45C017D4DD8fBC550E5",
              "index": 6,
              "group": 1
            },
            {
              "addr": "eth:0xAe735fd5e74887064DFf99C637f291caE5485A75",
              "index": 7,
              "group": 1
            },
            {
              "addr": "eth:0xE062e7D123AC8dF480C56147f911144F55C10f88",
              "index": 8,
              "group": 1
            }
          ],
          "groupQuorums": [
            1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ],
          "groupParents": [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ]
        },
        "getOpCount": 0,
        "getRoot": {
          "root": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "validUntil": 0
        },
        "getRootMetadata": {
          "chainId": 1,
          "multiSig": "eth:0xa8D5E1daA6D8B94f11D77B7E09DE846292ef69FF",
          "preOpCount": 0,
          "postOpCount": 0,
          "overridePreviousRoot": true
        },
        "MAX_NUM_SIGNERS": 200,
        "NUM_GROUPS": 32,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "eth:0xa8D5E1daA6D8B94f11D77B7E09DE846292ef69FF": "ManyChainMultiSig"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xa904B9343632A6ca4f4a1b0C9eFa011cb319d000",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1722536579,
      "sinceBlock": 20435461,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0xF6c88f0933126c2e2CDb060910165aA4BfC11B99",
        "getSupportedChains": ["7264351850409363825"],
        "getToken": "eth:0x83F20F44975D03b1b09e64809B757c47f942BEeA",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xa904B9343632A6ca4f4a1b0C9eFa011cb319d000": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xa96787DCe9Df7BF7bB033E39777bd108E29D349b",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1720821911,
      "sinceBlock": 20293296,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0xe4832022873C69E14731fd9436eb7FB9538Ae86F",
        "getSupportedChains": [
          "15971525489660198786",
          "3734403246176062136",
          "4949039107694359620"
        ],
        "getToken": "eth:0xc2e660C62F72c2ad35AcE6DB78a616215E2F2222",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xa96787DCe9Df7BF7bB033E39777bd108E29D349b": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xA9f9bF2b643348c0884f2eBA4F712E833DA9a2b8",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727975351,
      "sinceBlock": 20886380,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 2392,
        "getLatestPriceEpochAndRound": 27112962,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "avalanche",
          "onRamp": "eth:0xe8784c29c583C52FA89144b9e5DD91Df2a1C2587",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21041089,
          "configDigest": "0x00014cfad60c6ceb2b1760e8ddf9e4e75cea16df31d41556d7bc697c626f5e8e"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xA9f9bF2b643348c0884f2eBA4F712E833DA9a2b8": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xab235c5B80860899F67f88370ba69C2c80499f23",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964623,
      "sinceBlock": 21880123,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0xBE9517f4E29f9bacEb831a67679f1fFEc0AC2bdE",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xab235c5B80860899F67f88370ba69C2c80499f23": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xaB9502c8886Bd9CEd344A3684784a5e4C0fC46d0",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1737503183,
      "sinceBlock": 21676237,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "4949039107694359620"
        ],
        "getToken": "eth:0xcF1C66E3CF649F8E29835337687Be692896a23c5",
        "getTokenDecimals": 18,
        "owner": "eth:0x358492Cce5b1d00C172cA98E0f8C5FEE8496d95C",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xaB9502c8886Bd9CEd344A3684784a5e4C0fC46d0": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xAc3453eEF710e1E6457383F29D696Db5435Bf95b",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729738223,
      "sinceBlock": 21032580,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xA82A87a9b6550e89dd8a7C8a1E3e421974eaf858",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0xc719d010B63E5bbF2C0551872CD5316ED26AcD83",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xAc3453eEF710e1E6457383F29D696Db5435Bf95b": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "LombardTokenPool",
      "address": "eth:0xac82d09D3BaE049C2119f5940ad517E6f1e9E453",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xa19876326ec4b72b07f79dce7f7ebb4c003e0b28267638308320ef0e9cad43eb"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736441987,
      "sinceBlock": 21588267,
      "values": {
        "$immutable": true,
        "adapter": "eth:0x2298d44CFDa0ceAfE7F5Ef5FD587B67d7b9b1Fbb",
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "15971525489660198786",
          "11344663589394136015",
          "1673871237479749969",
          "3461204551265785888",
          "2459028469735686113"
        ],
        "getToken": "eth:0x8236a87084f8B84306f72007F36F2618A5634494",
        "owner": "eth:0x251a604E8E8f6906d60f8dedC5aAeb8CD38F4892"
      },
      "implementationNames": {
        "eth:0xac82d09D3BaE049C2119f5940ad517E6f1e9E453": "LombardTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xAd06241B9cFf15b710118A52f04A4Fe73b8fcC09",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964743,
      "sinceBlock": 21880133,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0xE8eb840E5D3a860cCec70f59b61855C1cBBEfa3A",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xAd06241B9cFf15b710118A52f04A4Fe73b8fcC09": "BurnMintTokenPool"
      }
    },
    {
      "name": "ManyChainMultiSig",
      "address": "eth:0xAD97C0270a243270136E40278155C12ce7C7F87B",
      "type": "Contract",
      "template": "transporter/ManyChainMultiSig",
      "sourceHashes": [
        "0x15b33604a10bda5235da68c98629cc8246b96e86c931a23c296ae08f1eb691cb"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["getRootMetadata", "getRoot", "getOpCount"],
      "sinceTimestamp": 1689096875,
      "sinceBlock": 17671887,
      "values": {
        "$immutable": true,
        "getConfig": {
          "signers": [
            {
              "addr": "eth:0x124BA7e2188074335A0e9b12B449AD5781A73D60",
              "index": 0,
              "group": 7
            },
            {
              "addr": "eth:0x180159135c9b93C59d16eA1A690e465D22c5EB67",
              "index": 1,
              "group": 5
            },
            {
              "addr": "eth:0x266a433524AF2a471D381D8Ad4ad70DDAA5dC112",
              "index": 2,
              "group": 10
            },
            {
              "addr": "eth:0x2b73763722378AB2013CB0877946f69fC3727Fd8",
              "index": 3,
              "group": 4
            },
            {
              "addr": "eth:0x2B88575011C5E11389ddB50D28d31C7d06B352A0",
              "index": 4,
              "group": 1
            },
            {
              "addr": "eth:0x2bbB172cD88dCAD64CBE762dcC53E6f96a17d1D6",
              "index": 5,
              "group": 1
            },
            {
              "addr": "eth:0x3C6cE61b611e3b41289c2FAFA5BC4e150dD88dE3",
              "index": 6,
              "group": 3
            },
            {
              "addr": "eth:0x4189a291cC7E497015B45D4bb046dC0A82580688",
              "index": 7,
              "group": 9
            },
            {
              "addr": "eth:0x43640F208956c7D49e04F40FF95dF818643B76aA",
              "index": 8,
              "group": 1
            },
            {
              "addr": "eth:0x48A094F7A354d8faD7263EA2a82391d105DF6628",
              "index": 9,
              "group": 3
            },
            {
              "addr": "eth:0x4e509C60b3e916644dE441298595FeD12C4AC926",
              "index": 10,
              "group": 1
            },
            {
              "addr": "eth:0x570F41d83b1031d382F641B9a532A8D7CBd7a695",
              "index": 11,
              "group": 10
            },
            {
              "addr": "eth:0x5bD3a90E94bB8aA6fE6cCF494e292F5F707B92d6",
              "index": 12,
              "group": 2
            },
            {
              "addr": "eth:0x5BF2821B248e85439B5d7c5a2bcB055Eb54Ad29F",
              "index": 13,
              "group": 1
            },
            {
              "addr": "eth:0x5C33Bf560f29e04dF8A666493aAD8E47eEa9B1c8",
              "index": 14,
              "group": 2
            },
            {
              "addr": "eth:0x6924E54339C7f28730dBB4B842a7FE86ED01Ecf7",
              "index": 15,
              "group": 1
            },
            {
              "addr": "eth:0x6B0f508B8cbeF970fAF9E8a28b9b4C6F1FD3afae",
              "index": 16,
              "group": 7
            },
            {
              "addr": "eth:0x70C2Ddc97c4fAea760027d45E5de4D1E2ad2b9A5",
              "index": 17,
              "group": 6
            },
            {
              "addr": "eth:0x7eFF312905DEdB38Bf8f07BEFaDfF96376154374",
              "index": 18,
              "group": 5
            },
            {
              "addr": "eth:0x9079410666ED02725ee9d148398Cee26397c2A36",
              "index": 19,
              "group": 8
            },
            {
              "addr": "eth:0x925d7Ea0ADe586DBFd56a942bb297286cE428C79",
              "index": 20,
              "group": 9
            },
            {
              "addr": "eth:0x9453E18f03A36E2A2c70598De520bD24434D2d1D",
              "index": 21,
              "group": 6
            },
            {
              "addr": "eth:0xA3177f64efE98422E782bC17BE7971F01187B7cF",
              "index": 22,
              "group": 1
            },
            {
              "addr": "eth:0xa35B7219521134cAF52DccAD44d604335b64a4fB",
              "index": 23,
              "group": 4
            },
            {
              "addr": "eth:0xb122347811e8E9C89cdbfd761fBc9929F52090B9",
              "index": 24,
              "group": 8
            },
            {
              "addr": "eth:0xC6fA4C71F42dD1881E29DDe853FA5CcD18A59624",
              "index": 25,
              "group": 4
            },
            {
              "addr": "eth:0xd3094f770579AFd66711847cE9E9C42D10BA2264",
              "index": 26,
              "group": 4
            },
            {
              "addr": "eth:0xd3E2da792E806556517124f03F12e557045951E7",
              "index": 27,
              "group": 6
            }
          ],
          "groupQuorums": [
            1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ],
          "groupParents": [
            0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ]
        },
        "getOpCount": 0,
        "getRoot": {
          "root": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "validUntil": 0
        },
        "getRootMetadata": {
          "chainId": 1,
          "multiSig": "eth:0xAD97C0270a243270136E40278155C12ce7C7F87B",
          "preOpCount": 0,
          "postOpCount": 0,
          "overridePreviousRoot": true
        },
        "MAX_NUM_SIGNERS": 200,
        "NUM_GROUPS": 32,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "eth:0xAD97C0270a243270136E40278155C12ce7C7F87B": "ManyChainMultiSig"
      }
    },
    {
      "address": "eth:0xAE398D78DAE867b1e837a512dcb6cB51235718EE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xAe735fd5e74887064DFf99C637f291caE5485A75",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xaf0b8f79b667055Db3a54a31144e86e841Be3dAD",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x5102a591873a3fc0d5e6ad74bf5810128330f615d7af4299c706e5abbeeebc39"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1748523059,
      "sinceBlock": 22588521,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["124615329519749607"],
        "getToken": "eth:0xE49FB237974E29AE8022347Ed14084669D70875B",
        "getTokenDecimals": 5,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xaf0b8f79b667055Db3a54a31144e86e841Be3dAD": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xAFcC997D86713FeC802Cc665122d64a5130bDd1D",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729697051,
      "sinceBlock": 21029165,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x73aEB5ECA03Ad587B8Fdcc2B61f9fb4D2e3D90c1",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620", "8805746078405598895"],
        "getToken": "eth:0xA95C5ebB86E0dE73B4fB8c47A45B792CFeA28C23",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xAFcC997D86713FeC802Cc665122d64a5130bDd1D": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xB05963A6beD7e9dB887eCeB2775a03414d00FAc9",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964671,
      "sinceBlock": 21880127,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0x936d899eD37F1C9334F9f64813042300E9d07116",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xB05963A6beD7e9dB887eCeB2775a03414d00FAc9": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xb086806c8f80C4423cEA4DDf643bF40c0Ebc8220",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1746193535,
      "sinceBlock": 22396502,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x2c9973F40716d34e13bF86502B9404a25959e311",
        "getTokenDecimals": 18,
        "owner": "eth:0x1d00367064E329aA71065e262f4b439bE06Ffbe5",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xb086806c8f80C4423cEA4DDf643bF40c0Ebc8220": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xb0Ea8E1bE37F346C7EA7ec708834D0db18A17361",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xb122347811e8E9C89cdbfd761fBc9929F52090B9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xb148e4b2111131515E745BD9750547C8DE495cA3",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736901131,
      "sinceBlock": 21626321,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x76A31E093Fe7fCf9240653074f777D861f0a3c2c",
        "getTokenDecimals": 18,
        "owner": "eth:0x057f1c64D0640C00db8410A40CD63041B44570Ec",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xb148e4b2111131515E745BD9750547C8DE495cA3": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xB18eE11849a805651aC5D456034FD6352cfF635d",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742499371,
      "sinceBlock": 22090207,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x94e496474F1725f1c1824cB5BDb92d7691A4F03a",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xB18eE11849a805651aC5D456034FD6352cfF635d": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xB1C908A7CF6f5FB1ed18a73aD60ffF9CC8276eC1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "TokenAdminRegistry",
      "address": "eth:0xb22764f98dD05c789929716D677382Df22C05Cb6",
      "type": "Contract",
      "template": "transporter/TokenAdminRegistry",
      "sourceHashes": [
        "0x85182d3d77430870c56e6951818542e80e1313ec76f723c2c554ac02d7344adf"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1726156727,
      "sinceBlock": 20735575,
      "values": {
        "$immutable": true,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "pools": [
          "eth:0x55042569836d203456d013dEFA8c670AD865d451",
          "eth:0x1B7492C3bD23A4aDB448710e4275FF14A5288932",
          "eth:0x9F02c16190691CC4ceCD53A9267Bd24e37B6d06C",
          "eth:0xcfd0637093193ac909f74F9de95c2d4B92Df23c4",
          "eth:0x0549475Ff447CBC0CfF51CB0719E0AA2dAF4eDC8",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x06179f7C1be40863405f374E7f5F8806c728660A",
          "eth:0x45af366C76a8C8f18806A8C404FE3E3bbA4F8AA3",
          "eth:0x916D7d960B119bb6c4AbE381f7677eCEed866d44",
          "eth:0x08B4058F16D243C977ea1fe91B20Af31057b5aBb",
          "eth:0xc576D83eA5D672E220f7B099827E73685Fde5B73",
          "eth:0x8E7ebBb95e369BC854Ee7021C7CF2E282c3bCAEa",
          "eth:0x5Be290d68db372cc487B1356649D906efC4f58Ca",
          "eth:0xAc3453eEF710e1E6457383F29D696Db5435Bf95b",
          "eth:0xF57fc17729Bd2bcD1e1342917B160eB4b69EE89A",
          "eth:0x581CED7408860a33E47CE6cA93e2cbB4bB48c9C7",
          "eth:0x3300f27EDEeEB59CC4C4203785406cBEAfEC8dF3",
          "eth:0x6A888F0f25d2e846ec854d6Fb011BeC6DE31480B",
          "eth:0x542BF6910dB102D10f84565E041c2761BE95be84",
          "eth:0xF6c88f0933126c2e2CDb060910165aA4BfC11B99",
          "eth:0xbfc86CA9b7fa158287bD392eE098246465E63351",
          "eth:0x8c9015fDBCC26b8cD0925F3900731dD0AF66b760",
          "eth:0x229a1956929489870A31b01854a80EF9B0fd27c9",
          "eth:0xc2ef2f272D2C09b0a8523cEf32C96D3A7f379979",
          "eth:0xe4832022873C69E14731fd9436eb7FB9538Ae86F",
          "eth:0x03D19033AdA17750D5BC2d8E325337D0748F9FEF",
          "eth:0x2E3c68D6d2eDD9881429f0565B88024B5Db10F73",
          "eth:0xC4ABCd324ED49B98795CC8F51C80DAF1A24F5F58",
          "eth:0x89c9038906887A69bD9C20f81B1B4C309F9A6D04",
          "eth:0x79BC41f1D73f06738bed591abf26038EC5721d49",
          "eth:0x75a852478792E5a99bc4cdd0aDBd97129B0d9799",
          "eth:0xF6403CF6E954a43699097322e0867C63d653C2D0",
          "eth:0xeAD31B98179e2637Bb052a970Ac92Cbb2E26461d",
          "eth:0x0ef01909C4aA5403654452729149F0Db8C7be1E1",
          "eth:0xCE8342b8eFd4D804B97Df92bC6bb930099098fDE",
          "eth:0x8315Bbe2b2828559CEeCCCBCB4550A466227336E",
          "eth:0x4913fD2c77d93730358cC41db9d3048dbfe1F196",
          "eth:0x5180865890246278544ea457342b46665C196a97",
          "eth:0x9b8FEf06D74c3880FC6886b3c6FbbBf601Db0DCC",
          "eth:0x99bb52AAF045F63F74d0a3FbE6Cf3e7B23aeD212",
          "eth:0x8ee28906BA9E482d881d28E825118b8b8e46A4a5",
          "eth:0x9c79223e8ce037c39b534891b41b3f306a8FE192",
          "eth:0x476EefeF46e0d65e1E371Fe093696259B1240B93",
          "eth:0xa7689C57aa6D09d28244d3932F34176d853A660f",
          "eth:0x475c8Fb7F7D4d3bba0b0a4da2bE31328fc36E358",
          "eth:0x8aC68225b0E80cF7f16EA67639b455d679a158d7",
          "eth:0x5c16671f7360E32982691c6A14353D8186C57A59",
          "eth:0xc1D8f275f651E1CAe3A6D971d0836cDAcD25d91a",
          "eth:0xAFcC997D86713FeC802Cc665122d64a5130bDd1D",
          "eth:0xE727F7975bEF908C49D0591724669F05F7dAd811",
          "eth:0xe9bFB4fe6E403985c5f2b968f883A9590Aac54aC",
          "eth:0x011Ef1fe26D20077A59F38e9Ad155b166AD87D40",
          "eth:0x61D405818C8127f0fD30102BF01E6227097eF92f",
          "eth:0xE58eDBb7Fdd5f2DD5cfAD2667e5D570E1a0a6A84",
          "eth:0xBDCc99f05D73FB3C2ad4b0F496318BaAE20218b7",
          "eth:0x307D0353313F544fc8Da0D85F1005b1de516Bce8",
          "eth:0xa27501561B01D99cde347a63891e8762DCa5bBbd",
          "eth:0x67F4e731f446Ff76716E7E3c955CD5A75C1B1787",
          "eth:0x4E63008092645521CFc989FB78c1324CDd371ed0",
          "eth:0x3999490C55Fb8332F5f3AD00212435526fA3E576",
          "eth:0x4109f7E577596432458F8D4DC2E78637428D5614",
          "eth:0x1689C22eD5435e49071CFc208D1Ac6F2A2274490",
          "eth:0x6948FEF23284906B5650895F9f6fbD4a0A939F20",
          "eth:0x46A39244eB62De1A87dD4443B8D80bb731B97877",
          "eth:0x606c0e932FEbB81fBba799b5F3dd04f5cc6F2BD9",
          "eth:0x0577EcCC8FBE54B321d3BC8d4F1d09Deb94d5A55",
          "eth:0x3eC718a22B268d7d9Ce27D2dcAB791174D515920",
          "eth:0xEa9c3dB69C9eE60FB0B06d1A1c9077B16F2D7C82",
          "eth:0xc75aCdceF4c679eaCb7a8CF1eF486B9Cf77478f8",
          "eth:0x348540aa7b129b0F3c931FEDE811d009E0e18E60",
          "eth:0x817404e98d28b8065c6e1C76E6bCD9088aEFb31A",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x47158771e67e4bDdaFd0FBD36f26Db929420B26C",
          "eth:0x1F11041c8FDb0798be743E72cd0506C7AE9E7a69",
          "eth:0x8113f001eA456759264317007220cBc939cA8435",
          "eth:0x1B5C330AE8036D735a9d4F00Ff623Ac72A2c4ea7",
          "eth:0x55c47DE8bCfA02B3989f2B6F9542900E3A2EC6c3",
          "eth:0xc2b15a8ff04Fdc05E782A1aD89f43E241c6D2420",
          "eth:0xEeBBa578621261D92FaFa6eE755eF80635703C4B",
          "eth:0x581586a0277975B77f03865f98f7b588265C4bb5",
          "eth:0xF3BD0793FAD8b24B7ba58956dE9DE305D34B9098",
          "eth:0xac82d09D3BaE049C2119f5940ad517E6f1e9E453",
          "eth:0x933b2C73bcDBa56cA8B89f94D34882d2f7669AbD",
          "eth:0xD4C6184DEC4e10395AB84b9e7a7ab46d0D57329e",
          "eth:0x5882D12bbf902ee88d5FCF8793113ae85fFe97b1",
          "eth:0xf33341f2CE329B5DbCa7F9a0986Cff40d050440a",
          "eth:0xD27F88501e62D0BDc70B20d6ed06d8E0fF8c3812",
          "eth:0x5686CCb55ee86BEB1e8A1Cf7C769930f3A5E521c",
          "eth:0xe26D9c68cF6d284367C5e90EC834C6Ec0051f73C",
          "eth:0x53a80faFee54BfE5052165B593Bd5D405BFd4007",
          "eth:0xEcfec1595D273A71aC94370eA1C62480569dCAFf",
          "eth:0xb148e4b2111131515E745BD9750547C8DE495cA3",
          "eth:0x003491Bdfe15179aC2cEfEf9F5D0e235F096C3b0",
          "eth:0x6F580a9bC9E95273a65f73356F9caF92caa1f193",
          "eth:0x89F39cdbad48b6531DDBd38ea0D84E9c9CbCdA27",
          "eth:0xaB9502c8886Bd9CEd344A3684784a5e4C0fC46d0",
          "eth:0x706152939C0cB1f1659F0843C52E192ed52F70d5",
          "eth:0xe1A8223DAc2aeC3090322674F054D35C240Dc37f",
          "eth:0x53561cdA97652b79acD602C639626316f8f1d53F",
          "eth:0x75dFc9b24B109ae76dC5C51814bb7a9559B68a2B",
          "eth:0x0a02473E57902fD7764E6E952E2962763045B404",
          "eth:0xfCEEf7bD8F46E99D9E38942447b91c6DE81cF500",
          "eth:0x9054f2DF5f2AC59b39a175c27a00165989D17d2B",
          "eth:0xEDe803B34B30C8De6a128DE57B855263Cd8C55bc",
          "eth:0x8d9F0185c49752d626ef0c318B24Bba83931D639",
          "eth:0xbE374316EFBB444589F2AE60ef2B83BDB656380F",
          "eth:0xBc1324F4FaB8e63bF33E5117bb887671B378BFF3",
          "eth:0x348fb4740bffe8190861c3AA10f7046f90581C0a",
          "eth:0xab235c5B80860899F67f88370ba69C2c80499f23",
          "eth:0xB85E3e408D8300A002BaA9cc355D40a487e9C248",
          "eth:0x0A34677DafCd28916aAc0b22123142EFaBf700Fa",
          "eth:0x5F5d43508f34e0cAEaa558F9C964125538fFe9Cf",
          "eth:0x23AFD2Bd797B87394D797dd0134022c42432F7fe",
          "eth:0xB05963A6beD7e9dB887eCeB2775a03414d00FAc9",
          "eth:0x8192D648ad9144aF8c2488c8142c72B3cd990728",
          "eth:0x6eB57991c31f8DD2481A702090EDc0962AE50fAE",
          "eth:0x281A83ee4819068C40937A066d801aAD7C6e0400",
          "eth:0xe199E1C5201CCDd3792ed902aD3f610Ce5629B59",
          "eth:0x2862135735469aD4Af91aF4Fbd2559606d25B27C",
          "eth:0xAd06241B9cFf15b710118A52f04A4Fe73b8fcC09",
          "eth:0x78f6EB041A85eF3c1a1dC02C57b6beBfcAcBabbf",
          "eth:0xB18eE11849a805651aC5D456034FD6352cfF635d",
          "eth:0xF6698064776D521b0AFE469F30C40B39B4875b93",
          "eth:0x5d1F00E79Fd5Caa2C4a6e361671Eed445F5b2C46",
          "eth:0x393bADfb69087Fc96274Fd64f924A54a4aBfbB2E",
          "eth:0x1837f10926644bd263B70a3D7700ffB914fABbF0",
          "eth:0x3f7AeF129Ce37EA06150C176677bEc75EF29A33f",
          "eth:0x512c2Ddf5f7F48a6c44cFF73CD8d7edEC5e6b0d8",
          "eth:0x98ef4B1Fe8fe9C73Deb07a77c9f861E8558439d7",
          "eth:0x799A356069Ca6D91BBE5d0407De625A969874aE4",
          "eth:0xC95737Ba39A61B2AE60800eF375677caA54Ff0c5",
          "eth:0x360F709c25ddfbC3eE2a5d555ad04c4059477a7b",
          "eth:0x55585FFBd94471925252C13ade6A81604C781C5D",
          "eth:0x645BF2fd779d204313F35B90F3B65F65e2c9ed2B",
          "eth:0x520763c1eBDa04DAC9a6077a41CCC703FF22a9f8",
          "eth:0x13E20D135769216E8e3e02677089e5C7F372e3b8",
          "eth:0x0Baa542625F1Eb12872F7b2AFd86e10F34f8a3Ae",
          "eth:0x603D332a56B02e3A543b96CE1F1E56055eFe0076",
          "eth:0x72a0203b731EdECE2DdAa506a048c0378C44366a",
          "eth:0x1A4B0621E90Bdc61d341D89158863458CA745dA2",
          "eth:0xF4208675b84E678d0d01528fA97634e2B0873Fa6",
          "eth:0xC3d39B77032114c8884276Dae0F02cdF75162782",
          "eth:0x99874400820c354eE07bC8b165C605632BdCeae3",
          "eth:0xBCd28DC5b141c425e0848900462572878b3FE376",
          "eth:0x9Dfaaa0826b8D81Ea7Cf7ED95619574bcb47d6EA",
          "eth:0x10c9a3c76bDbDB8600d726De621b941fd26F6058",
          "eth:0xCfee3d8CBc7dFdea23608E73b48B1b83Af8603a9",
          "eth:0xF31EA507475B9c4be40241Dc25992Fda7aA20453",
          "eth:0x44e77d8C6Bb9999B036a6F084005E48928d18C74",
          "eth:0x3d430E1380286560899B94E3E9459c4ec300EF9a",
          "eth:0x0c31b5DcF3CD6e588938D0699912d0028c911362",
          "eth:0x500d4882938020E939a5666c1B4200873da7EfD3",
          "eth:0x7EeeAd4571b12BC3e331E6Ce2D954E1528aC2921",
          "eth:0xC78210649aF8A450C0f6E98107a0b614a3198359",
          "eth:0xA586a732394A1AFfCF15b972cd47C936033C9FA7",
          "eth:0x51df9751404DB200b354ED6a5e27DdA6C557883D",
          "eth:0x5Acf8cdF7740DaBfF6D115058f2A386D6F2380eB",
          "eth:0x8fd996312CA11849A562C78885021148F25a9841",
          "eth:0xa597E8df3B16b05815faDC3A3b5b8BaCEDd6f16f",
          "eth:0xC69e7a187fA739028Ee613426795D91B610932c7",
          "eth:0xf3e2Ccbb7d36c597d1ee4b451C4B46B94FC64239",
          "eth:0x03Ed768E002165FE0E4DE9C6D6162DE973E19B5A",
          "eth:0xB551DB5C7C1bF72998C0aeD60838C6f144d23273",
          "eth:0xF56dcA7a981a53ec2EbeF2040800F04206021583",
          "eth:0x1016225Ba7f32e3a6f2842A380D5846D8756648c",
          "eth:0xd2D62AB60A53Bad539CD8e43121c624B246F6302",
          "eth:0x823839fE57d4c594bF9500C60c9551352a19D89D",
          "eth:0x072C7E09981B1c2073e95D3c0e0CF8B90BA4B099",
          "eth:0x4EdF9c3D77137EC15830c025E84344f49D5162d5",
          "eth:0xEfd5fEFEdE55B5C41B8fa0d171a79ba5BeadD2Aa",
          "eth:0xb086806c8f80C4423cEA4DDf643bF40c0Ebc8220",
          "eth:0x639f35C5E212D61Fe14Bd5CD8b66aAe4df11a50c",
          "eth:0x95842Bb96cECfe77e8AC07BA6e6bA948B745CCCd",
          "eth:0x19EE30DE803b921Ecbba64eD1787Cda6d536c26a",
          "eth:0x36a72eD0096B414521C45E3ddC9ed657d1D9c141",
          "eth:0xa3532633401AbFfbd15e6be825a45FB7F141469B",
          "eth:0x3A2Ea8BaE01410425d01c2C5f488e4777DAA54Df",
          "eth:0xe3f4B78cdd20f6B8AE8644064656d3E2bF08c4B8",
          "eth:0x20B79D39Bd44dEee4F89B1e9d0e3b945fde06491",
          "eth:0xf05a207442f14E446b0e32b12D2043bfc68Cb1C9",
          "eth:0x55e5a21B4cCC7FA502434ab1109D4EDe0397AB25",
          "eth:0x0243c9066B75Cb9Abd97b08a7AAeEDbaeC9D717e",
          "eth:0x337Dec2C7D98CdC0f59976F3A48aCd706cC6c495",
          "eth:0xe48D935e6C9e735463ccCf29a7F11e32bC09136E",
          "eth:0x9dC523fbc822b8827312c87F2C791094c7e9696f",
          "eth:0x42513d6cCbEc49786Afc349622AA803BfbB746D5",
          "eth:0xaf0b8f79b667055Db3a54a31144e86e841Be3dAD",
          "eth:0x4488d79B3996364dBa219d98e82a6B0A3D937E62",
          "eth:0x9763C884b1cE0439a017bac04659e3350054Aea9",
          "eth:0xD4304D2D5C9cdF63124fD2A6C814f6b4F85925D9",
          "eth:0x460CaAb2ecf966858A6fef751Aad3428D9017Bc8",
          "eth:0xC201a236258Ec170dE5255A9507bb4f70c7caf31",
          "eth:0x9359cd75549DaE00Cdd8D22297BC9B13FbBe4B79",
          "eth:0x35b950eB023003f372bFba6388846F3F5F0EA3C7",
          "eth:0xa5588e518CE5ee0e4628C005E4edAbD5e87de3aD",
          "eth:0xC8c2Fe3Df1d300F366cE831a34276d7E4dd1F9B5",
          "eth:0xEcf61D6fAA3B9faE7195AF3bc9891450C1733f78",
          "eth:0x407dBD0170A79Bb62a016d4555C656205BbA8a68",
          "eth:0x9aCd2ffD56E278a560Cc4E12dCA2B7D2B3359Ac2",
          "eth:0x1dF68F4235efF6d4270590629953C559fC53571C",
          "eth:0xfF48E1852F90cE91a698eE1A74cC8b8911479bF9",
          "eth:0x92AfdbCE8017c1694a9922F777260854af48B532",
          "eth:0x3fa84a4985DE21F219fE3a4241235786d942A0A2",
          "eth:0xE5bb39230Bf097a0C322440B9e839854AD77E85a",
          "eth:0x69781e5793C289c9a814Cd2f570308d1c249b94F",
          "eth:0x1b08B9E5DfD4370cF3797793e4e18ba7131eAAB8",
          "eth:0x3DAa89A5AB49DBa691FEA66EB89aC8Cf8BeE2e35",
          "eth:0x17Be5d735D49c84919d3cFDfF9eABbdB12D6Ac20",
          "eth:0x04db9b1D7f52cB288b95B4934a1fA688F6d0cBc3",
          "eth:0x2B941044978e65B6834891e2e53103AD72560F38",
          "eth:0xC26B8231a7B52F9B38909775c9fAcCCa6a4A3d96",
          "eth:0x9FBcB7Ed1D48204b525531cC35b5482f6F44b08a",
          "eth:0xC8C866440806826EC0A43cD63129Be44DE2cE6bb",
          "eth:0x8628AB5A69b69742Ff0AD828Fa6d26f6aaD050B9",
          "eth:0x934635de453A1161D02Ce395F2F59E775597fE13",
          "eth:0x8356D3261bef4d7f6f8427FE651660b35D8a2Cd3",
          "eth:0x553636e52059B0339592f545D25a4C0A86E3a1Bc",
          "eth:0x789428528A842053b52cd0D77692125829406712",
          "eth:0xc785D05961B3C537cAC11f1D496876a255F6D650",
          "eth:0x4C4BD271b55f2114B9e2423409aaB1CC4D28C6B8",
          "eth:0xbD09E8846B9DbdA54Ef386Bd9eF3bbd15Add50ee",
          "eth:0x43f47a434DADd5A122C42E49378365CcA949fA54",
          "eth:0xe4a9fa29E3d88660577E4ACD9bf88Ef2DF4F8D7C",
          "eth:0xf76A0c47900ca2dD1874AB4Dc4049810E919684d",
          "eth:0xba5F6Cf1121c572602e638bC8A0d87Db61072e35",
          "eth:0x18d3ebcEF1074f30aba5Da3951FF1a87B30B6Ec1",
          "eth:0x94A43cC8C4d755271436cfE42793A66a6C9ae25b",
          "eth:0xC8ADf2f51a35b0a9d8f74675b64c954Ca2Dcbc14",
          "eth:0x34731AfB2A45fFD616401f27dBF2Da8B8F369807",
          "eth:0xDE76A096C5eadDdf97Af3fE15ee49d32AEDa9822",
          "eth:0xBb8b739C28898F7d143584380e7b689ecCaB2c9F"
        ],
        "poolsMap": {
          "eth:0xB006A31a279fd90be4CdfFFab5fD45Dd605D33CC": "eth:0x55042569836d203456d013dEFA8c670AD865d451",
          "eth:0x514910771AF9Ca656af840dff83E8264EcF986CA": "eth:0x1B7492C3bD23A4aDB448710e4275FF14A5288932",
          "eth:0x2624Bd0094f474713AC9c634b37A5ebef4e0b1FE": "eth:0x9F02c16190691CC4ceCD53A9267Bd24e37B6d06C",
          "eth:0x66cC3FD40612F9c591F977ce026Ef1C79520C472": "eth:0xcfd0637093193ac909f74F9de95c2d4B92Df23c4",
          "eth:0x5F64Ab1544D28732F0A24F4713c2C8ec0dA089f0": "eth:0x0549475Ff447CBC0CfF51CB0719E0AA2dAF4eDC8",
          "eth:0x325DC9EBceC31940C658aCACa45f8293418d811E": "eth:0x0000000000000000000000000000000000000000",
          "eth:0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f": "eth:0x06179f7C1be40863405f374E7f5F8806c728660A",
          "eth:0x8C0D76C9B18779665475F3E212D9Ca1Ed6A1A0e6": "eth:0x45af366C76a8C8f18806A8C404FE3E3bbA4F8AA3",
          "eth:0x8Fe815417913a93Ea99049FC0718ee1647A2a07c": "eth:0x916D7d960B119bb6c4AbE381f7677eCEed866d44",
          "eth:0x20157DBAbb84e3BBFE68C349d0d44E48AE7B5AD2": "eth:0x08B4058F16D243C977ea1fe91B20Af31057b5aBb",
          "eth:0x01aaC2b594F7bdBeC740F0F1AA22910EbB4B74Ab": "eth:0xc576D83eA5D672E220f7B099827E73685Fde5B73",
          "eth:0x341c05c0E9b33C0E38d64de76516b2Ce970bB3BE": "eth:0x8E7ebBb95e369BC854Ee7021C7CF2E282c3bCAEa",
          "eth:0xe85411C030fB32A9D8b14Bbbc6CB19417391F711": "eth:0x5Be290d68db372cc487B1356649D906efC4f58Ca",
          "eth:0xc719d010B63E5bbF2C0551872CD5316ED26AcD83": "eth:0xAc3453eEF710e1E6457383F29D696Db5435Bf95b",
          "eth:0x08d23468A467d2bb86FaE0e32F247A26C7E2e994": "eth:0xF57fc17729Bd2bcD1e1342917B160eB4b69EE89A",
          "eth:0x60b9C41d99FE3Eb64Ecc1344baD31D87f1bceD6D": "eth:0x581CED7408860a33E47CE6cA93e2cbB4bB48c9C7",
          "eth:0x7A56E1C57C7475CCf742a1832B028F0456652F97": "eth:0x3300f27EDEeEB59CC4C4203785406cBEAfEC8dF3",
          "eth:0x72e364F2ABdC788b7E918bc238B21f109Cd634D7": "eth:0x6A888F0f25d2e846ec854d6Fb011BeC6DE31480B",
          "eth:0x482dF7483a52496F4C65AB499966dfcdf4DDFDbc": "eth:0x542BF6910dB102D10f84565E041c2761BE95be84",
          "eth:0x83F20F44975D03b1b09e64809B757c47f942BEeA": "eth:0xF6c88f0933126c2e2CDb060910165aA4BfC11B99",
          "eth:0xA544b3F0c46c15F0B2b00ba3D67b56C250287905": "eth:0xbfc86CA9b7fa158287bD392eE098246465E63351",
          "eth:0x3e62fED35c97145e6B445704B8CE74B2544776A9": "eth:0x8c9015fDBCC26b8cD0925F3900731dD0AF66b760",
          "eth:0xDBB5Cf12408a3Ac17d668037Ce289f9eA75439D7": "eth:0x229a1956929489870A31b01854a80EF9B0fd27c9",
          "eth:0x888888435FDe8e7d4c54cAb67f206e4199454c60": "eth:0xc2ef2f272D2C09b0a8523cEf32C96D3A7f379979",
          "eth:0xc2e660C62F72c2ad35AcE6DB78a616215E2F2222": "eth:0xe4832022873C69E14731fd9436eb7FB9538Ae86F",
          "eth:0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48": "eth:0x03D19033AdA17750D5BC2d8E325337D0748F9FEF",
          "eth:0x49446A0874197839D15395B908328a74ccc96Bc0": "eth:0x2E3c68D6d2eDD9881429f0565B88024B5Db10F73",
          "eth:0xf2DbAaBd8F8E0993F11DE4CEd470Df1ED1a4491b": "eth:0xC4ABCd324ED49B98795CC8F51C80DAF1A24F5F58",
          "eth:0x73968b9a57c6E53d41345FD57a6E6ae27d6CDB2F": "eth:0x89c9038906887A69bD9C20f81B1B4C309F9A6D04",
          "eth:0x54EE8A49155F701F0d5Ff088CD36fbBF1a5B9f44": "eth:0x79BC41f1D73f06738bed591abf26038EC5721d49",
          "eth:0xDcEe70654261AF21C44c093C300eD3Bb97b78192": "eth:0x75a852478792E5a99bc4cdd0aDBd97129B0d9799",
          "eth:0x911D86C72155c33993d594B0Ec7E6206B4C803da": "eth:0xF6403CF6E954a43699097322e0867C63d653C2D0",
          "eth:0xA35b1B31Ce002FBF2058D22F30f95D405200A15b": "eth:0xeAD31B98179e2637Bb052a970Ac92Cbb2E26461d",
          "eth:0xa19f5264F7D7Be11c451C093D8f92592820Bea86": "eth:0x0ef01909C4aA5403654452729149F0Db8C7be1E1",
          "eth:0x98C6616F1CC0D3E938A16200830DD55663dd7DD3": "eth:0xCE8342b8eFd4D804B97Df92bC6bb930099098fDE",
          "eth:0x94025780a1aB58868D9B2dBBB775f44b32e8E6e5": "eth:0x8315Bbe2b2828559CEeCCCBCB4550A466227336E",
          "eth:0x547213367cfB08ab418E7b54d7883b2C2AA27Fd7": "eth:0x4913fD2c77d93730358cC41db9d3048dbfe1F196",
          "eth:0x1Cbc4BF664907669CfAB86a3b1aCC3EC8867a25F": "eth:0x5180865890246278544ea457342b46665C196a97",
          "eth:0x1494CA1F11D487c2bBe4543E90080AeBa4BA3C2b": "eth:0x9b8FEf06D74c3880FC6886b3c6FbbBf601Db0DCC",
          "eth:0xd9D920AA40f578ab794426F5C90F6C731D159DEf": "eth:0x99bb52AAF045F63F74d0a3FbE6Cf3e7B23aeD212",
          "eth:0x5F2F8818002dc64753daeDF4A6CB2CcB757CD220": "eth:0x8ee28906BA9E482d881d28E825118b8b8e46A4a5",
          "eth:0x6b5204B0Be36771253Cc38e88012E02B752f0f36": "eth:0x9c79223e8ce037c39b534891b41b3f306a8FE192",
          "eth:0xbDf245957992bfBC62B07e344128a1EEc7b7eE3f": "eth:0x476EefeF46e0d65e1E371Fe093696259B1240B93",
          "eth:0xE46a5E19B19711332e33F33c2DB3eA143e86Bc10": "eth:0xa7689C57aa6D09d28244d3932F34176d853A660f",
          "eth:0x45fcf0Ebb7d79E3de9Fc308b6c7cb680A981CB7a": "eth:0x475c8Fb7F7D4d3bba0b0a4da2bE31328fc36E358",
          "eth:0x54Df3076ac0CdC9bC97fA290AB9c5a88E3D23630": "eth:0x8aC68225b0E80cF7f16EA67639b455d679a158d7",
          "eth:0xB60acD2057067DC9ed8c083f5aa227a244044fD6": "eth:0x5c16671f7360E32982691c6A14353D8186C57A59",
          "eth:0xCA160D11087E03fd398d40f561cd4768825f4958": "eth:0xc1D8f275f651E1CAe3A6D971d0836cDAcD25d91a",
          "eth:0xA95C5ebB86E0dE73B4fB8c47A45B792CFeA28C23": "eth:0xAFcC997D86713FeC802Cc665122d64a5130bDd1D",
          "eth:0xa7a0B3Fe94121E366D774d60D075F6386F750884": "eth:0xE727F7975bEF908C49D0591724669F05F7dAd811",
          "eth:0xAe770d24ec1580A13392E0B71067571351029203": "eth:0xe9bFB4fe6E403985c5f2b968f883A9590Aac54aC",
          "eth:0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2": "eth:0x011Ef1fe26D20077A59F38e9Ad155b166AD87D40",
          "eth:0x30D20208d987713f46DFD34EF128Bb16C404D10f": "eth:0x61D405818C8127f0fD30102BF01E6227097eF92f",
          "eth:0x1c22531AA9747d76fFF8F0A43b37954ca67d28e0": "eth:0xE58eDBb7Fdd5f2DD5cfAD2667e5D570E1a0a6A84",
          "eth:0x32bd822d615A3658A68b6fDD30c2fcb2C996D678": "eth:0xBDCc99f05D73FB3C2ad4b0F496318BaAE20218b7",
          "eth:0x0AA1e96D2a46Ec6beB2923dE1E61Addf5F5f1dce": "eth:0x307D0353313F544fc8Da0D85F1005b1de516Bce8",
          "eth:0x8a053350ca5F9352a16deD26ab333e2D251DAd7c": "eth:0xa27501561B01D99cde347a63891e8762DCa5bBbd",
          "eth:0x8BF591Eae535f93a242D5A954d3Cde648b48A5A8": "eth:0x67F4e731f446Ff76716E7E3c955CD5A75C1B1787",
          "eth:0x18f313Fc6Afc9b5FD6f0908c1b3D476E3feA1DD9": "eth:0x4E63008092645521CFc989FB78c1324CDd371ed0",
          "eth:0xc4506022Fb8090774E8A628d5084EED61D9B99Ee": "eth:0x3999490C55Fb8332F5f3AD00212435526fA3E576",
          "eth:0x59D9356E565Ab3A36dD77763Fc0d87fEaf85508C": "eth:0x4109f7E577596432458F8D4DC2E78637428D5614",
          "eth:0x004E9C3EF86bc1ca1f0bB5C7662861Ee93350568": "eth:0x1689C22eD5435e49071CFc208D1Ac6F2A2274490",
          "eth:0x76131b6D0ec94057e6dC6352adDa76B8165E08ab": "eth:0x6948FEF23284906B5650895F9f6fbD4a0A939F20",
          "eth:0x5630660B3c63FCf4B81467C3A57f50e2e83F0B76": "eth:0x46A39244eB62De1A87dD4443B8D80bb731B97877",
          "eth:0xc4170fd71ECed3C80baDca77f4e12E8AaC1e3436": "eth:0x606c0e932FEbB81fBba799b5F3dd04f5cc6F2BD9",
          "eth:0x594DaaD7D77592a2b97b725A7AD59D7E188b5bFa": "eth:0x0577EcCC8FBE54B321d3BC8d4F1d09Deb94d5A55",
          "eth:0x95aD61b0a150d79219dCF64E1E6Cc01f0B64C4cE": "eth:0x3eC718a22B268d7d9Ce27D2dcAB791174D515920",
          "eth:0x27C70Cd1946795B66be9d954418546998b546634": "eth:0xEa9c3dB69C9eE60FB0B06d1A1c9077B16F2D7C82",
          "eth:0x9813037ee2218799597d83D4a5B6F3b6778218d9": "eth:0xc75aCdceF4c679eaCb7a8CF1eF486B9Cf77478f8",
          "eth:0xA35923162C49cF95e6BF26623385eb431ad920D3": "eth:0x348540aa7b129b0F3c931FEDE811d009E0e18E60",
          "eth:0x3683f8F60A4a52ba7F26c43626E274913020aDaC": "eth:0x817404e98d28b8065c6e1C76E6bCD9088aEFb31A",
          "eth:0x786A6743efe9500011C92c7D8540608a62382b6f": "eth:0x0000000000000000000000000000000000000000",
          "eth:0xEE2a03Aa6Dacf51C18679C516ad5283d8E7C2637": "eth:0x47158771e67e4bDdaFd0FBD36f26Db929420B26C",
          "eth:0x456B9A18FEa00B54cEFd41a372E7e973F72877c5": "eth:0x1F11041c8FDb0798be743E72cd0506C7AE9E7a69",
          "eth:0xD11c452fc99cF405034ee446803b6F6c1F6d5ED8": "eth:0x8113f001eA456759264317007220cBc939cA8435",
          "eth:0x4eDDb15A0abfa2c349e8065aF9214E942d9A6D36": "eth:0x1B5C330AE8036D735a9d4F00Ff623Ac72A2c4ea7",
          "eth:0xdBB7a34Bf10169d6d2D0d02A6cbb436cF4381BFa": "eth:0x55c47DE8bCfA02B3989f2B6F9542900E3A2EC6c3",
          "eth:0xe4aD0b17BBf97F659B22403C822a3f18bcD17597": "eth:0xc2b15a8ff04Fdc05E782A1aD89f43E241c6D2420",
          "eth:0x795D777694eAc26e2e4A079674Ec2fDAEB799ccB": "eth:0xEeBBa578621261D92FaFa6eE755eF80635703C4B",
          "eth:0xCc7f96d855b7eC7F83ebd457522a1f2a411968c2": "eth:0x581586a0277975B77f03865f98f7b588265C4bb5",
          "eth:0x54991328Ab43c7D5d31C19d1B9fa048E77B5cd16": "eth:0xF3BD0793FAD8b24B7ba58956dE9DE305D34B9098",
          "eth:0x8236a87084f8B84306f72007F36F2618A5634494": "eth:0xac82d09D3BaE049C2119f5940ad517E6f1e9E453",
          "eth:0x7A6c2EB3B5dB4e7ea28E096c7481b3Ec5b52aB09": "eth:0x933b2C73bcDBa56cA8B89f94D34882d2f7669AbD",
          "eth:0x153A381D1207862cA003f68600462fAa66A828a7": "eth:0xD4C6184DEC4e10395AB84b9e7a7ab46d0D57329e",
          "eth:0x95b4B8CaD3567B5d7EF7399C2aE1d7070692aB0D": "eth:0x5882D12bbf902ee88d5FCF8793113ae85fFe97b1",
          "eth:0xBB0E17EF65F82Ab018d8EDd776e8DD940327B28b": "eth:0xf33341f2CE329B5DbCa7F9a0986Cff40d050440a",
          "eth:0x88D100432F98956b16B66Df56962FD3e5cCd297A": "eth:0xD27F88501e62D0BDc70B20d6ed06d8E0fF8c3812",
          "eth:0x540ddE0739EeFAf90D0Ca05aCa90513Ce89E7e79": "eth:0x5686CCb55ee86BEB1e8A1Cf7C769930f3A5E521c",
          "eth:0x3429d03c6F7521AeC737a0BBF2E5ddcef2C3Ae31": "eth:0xe26D9c68cF6d284367C5e90EC834C6Ec0051f73C",
          "eth:0x8805792D41Facb22b6F47d468B06AF36Ff3fc1c5": "eth:0x53a80faFee54BfE5052165B593Bd5D405BFd4007",
          "eth:0xdBDE08d475bd50E2D1A6af34c7b10DD430D8396e": "eth:0xEcfec1595D273A71aC94370eA1C62480569dCAFf",
          "eth:0x76A31E093Fe7fCf9240653074f777D861f0a3c2c": "eth:0xb148e4b2111131515E745BD9750547C8DE495cA3",
          "eth:0x442457bA124721f7e0AB7bf8a80FBc35ACDdc9f5": "eth:0x003491Bdfe15179aC2cEfEf9F5D0e235F096C3b0",
          "eth:0xb01dd87B29d187F3E3a4Bf6cdAebfb97F3D9aB98": "eth:0x6F580a9bC9E95273a65f73356F9caF92caa1f193",
          "eth:0x28BE7E8cD8125CB7A74D2002A5862E1bfd774cd9": "eth:0x89F39cdbad48b6531DDBd38ea0D84E9c9CbCdA27",
          "eth:0xcF1C66E3CF649F8E29835337687Be692896a23c5": "eth:0xaB9502c8886Bd9CEd344A3684784a5e4C0fC46d0",
          "eth:0xc328a59E7321747aEBBc49FD28d1b32C1af8d3b2": "eth:0x706152939C0cB1f1659F0843C52E192ed52F70d5",
          "eth:0x3d5F61a4BB385B6D1eB34F47aA790A996f1Eba65": "eth:0xe1A8223DAc2aeC3090322674F054D35C240Dc37f",
          "eth:0x9abe56431E8b0A9ace8865aDdE0b1aAC080e6C39": "eth:0x53561cdA97652b79acD602C639626316f8f1d53F",
          "eth:0x99D318b6402cE95B6B46F40f752eA96430A2Ead0": "eth:0x75dFc9b24B109ae76dC5C51814bb7a9559B68a2B",
          "eth:0x8c1BEd5b9a0928467c9B1341Da1D7BD5e10b6549": "eth:0x0a02473E57902fD7764E6E952E2962763045B404",
          "eth:0xdBd0085079aCab0Cd8ac77bE921eCEEbd611Ba0C": "eth:0xfCEEf7bD8F46E99D9E38942447b91c6DE81cF500",
          "eth:0x90cE5720c17587D28E4Af120ae2d313B3BAD1722": "eth:0x9054f2DF5f2AC59b39a175c27a00165989D17d2B",
          "eth:0xBB22d59B73D7a6F3A8a83A214BECc67Eb3b511fE": "eth:0xEDe803B34B30C8De6a128DE57B855263Cd8C55bc",
          "eth:0x1DB1Afd9552eeB28e2e36597082440598B7F1320": "eth:0x8d9F0185c49752d626ef0c318B24Bba83931D639",
          "eth:0x6bF9e1D8632AB1749e36ACaE15EFBa9637C163B9": "eth:0xbE374316EFBB444589F2AE60ef2B83BDB656380F",
          "eth:0xD9A442856C234a39a81a089C06451EBAa4306a72": "eth:0xBc1324F4FaB8e63bF33E5117bb887671B378BFF3",
          "eth:0x2DE3a245C9bc8A128CbF11FCf3040529FD5CD019": "eth:0x348fb4740bffe8190861c3AA10f7046f90581C0a",
          "eth:0xBE9517f4E29f9bacEb831a67679f1fFEc0AC2bdE": "eth:0xab235c5B80860899F67f88370ba69C2c80499f23",
          "eth:0x28b0baC5B24537F9907a2c567891ad03Fd31AAC0": "eth:0xB85E3e408D8300A002BaA9cc355D40a487e9C248",
          "eth:0xF3A60e2AB399E5E7C595E154D0eBb18AbdCB9Ba3": "eth:0x0A34677DafCd28916aAc0b22123142EFaBf700Fa",
          "eth:0x0adAA676c5E9dA685Ee31Db105794c3fEFb40426": "eth:0x5F5d43508f34e0cAEaa558F9C964125538fFe9Cf",
          "eth:0x9f74dbeF10E69994A8bd437630a99f9c57eca99e": "eth:0x23AFD2Bd797B87394D797dd0134022c42432F7fe",
          "eth:0x936d899eD37F1C9334F9f64813042300E9d07116": "eth:0xB05963A6beD7e9dB887eCeB2775a03414d00FAc9",
          "eth:0xDAA1B05C2c3409c5f5CB10b510de2af043E404Fd": "eth:0x8192D648ad9144aF8c2488c8142c72B3cd990728",
          "eth:0x58110137DED3F55a5C2Ebf5fed953cBD6336647f": "eth:0x6eB57991c31f8DD2481A702090EDc0962AE50fAE",
          "eth:0x7934AfACB40B60d83D8Ad8266ed5746253F2f458": "eth:0x281A83ee4819068C40937A066d801aAD7C6e0400",
          "eth:0xb758cAAe002031a246e91c3aE89f8239E595ab05": "eth:0xe199E1C5201CCDd3792ed902aD3f610Ce5629B59",
          "eth:0x3a0Db80b0c741A44ABc3958d8e26d105d313E866": "eth:0x2862135735469aD4Af91aF4Fbd2559606d25B27C",
          "eth:0xE8eb840E5D3a860cCec70f59b61855C1cBBEfa3A": "eth:0xAd06241B9cFf15b710118A52f04A4Fe73b8fcC09",
          "eth:0x623cD3a3EdF080057892aaF8D773Bbb7A5C9b6e9": "eth:0x78f6EB041A85eF3c1a1dC02C57b6beBfcAcBabbf",
          "eth:0x94e496474F1725f1c1824cB5BDb92d7691A4F03a": "eth:0xB18eE11849a805651aC5D456034FD6352cfF635d",
          "eth:0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599": "eth:0xF6698064776D521b0AFE469F30C40B39B4875b93",
          "eth:0xCC8Fa225D80b9c7D42F96e9570156c65D6cAAa25": "eth:0x5d1F00E79Fd5Caa2C4a6e361671Eed445F5b2C46",
          "eth:0xA7Fcc111ba05D097F876a65ffA7CF4fC641b5411": "eth:0x393bADfb69087Fc96274Fd64f924A54a4aBfbB2E",
          "eth:0x996d67AA9b37df96428ad3608cb21352BF1FDB90": "eth:0x1837f10926644bd263B70a3D7700ffB914fABbF0",
          "eth:0x7420B4b9a0110cdC71fB720908340C03F9Bc03EC": "eth:0x3f7AeF129Ce37EA06150C176677bEc75EF29A33f",
          "eth:0x2eC37d45FCAE65D9787ECf71dc85a444968f6646": "eth:0x512c2Ddf5f7F48a6c44cFF73CD8d7edEC5e6b0d8",
          "eth:0xF27441230EADEaC85B764610325Cc9a0D7859689": "eth:0x98ef4B1Fe8fe9C73Deb07a77c9f861E8558439d7",
          "eth:0x25f8087EAD173b73D6e8B84329989A8eEA16CF73": "eth:0x799A356069Ca6D91BBE5d0407De625A969874aE4",
          "eth:0x242f95e5E58edb736E6bA0a0dD854ed0c92792f7": "eth:0xC95737Ba39A61B2AE60800eF375677caA54Ff0c5",
          "eth:0x787A65ca50C2B320c32d57c6B2a9A3070891c013": "eth:0x360F709c25ddfbC3eE2a5d555ad04c4059477a7b",
          "eth:0x5E75a1aD7b10523f7ed98C1C7CA0b4A79B1bBDee": "eth:0x55585FFBd94471925252C13ade6A81604C781C5D",
          "eth:0xF60eEa20724739588cA2BE98ca7B018b02fF43fF": "eth:0x645BF2fd779d204313F35B90F3B65F65e2c9ed2B",
          "eth:0x6e5970DBd6fc7eb1f29C6D2eDF2bC4c36124C0C1": "eth:0x520763c1eBDa04DAC9a6077a41CCC703FF22a9f8",
          "eth:0x49e0751fa6557a89379cadA92250712Aa529DaD2": "eth:0x13E20D135769216E8e3e02677089e5C7F372e3b8",
          "eth:0x0f90dc4471C2A329d17726aA0D2E76320c2C0EFE": "eth:0x0Baa542625F1Eb12872F7b2AFd86e10F34f8a3Ae",
          "eth:0x8096cD953Fa2ABa1E60Dad27A3e58d71dF2F62F1": "eth:0x603D332a56B02e3A543b96CE1F1E56055eFe0076",
          "eth:0xC4441c2BE5d8fA8126822B9929CA0b81Ea0DE38E": "eth:0x72a0203b731EdECE2DdAa506a048c0378C44366a",
          "eth:0x14feE680690900BA0ccCfC76AD70Fd1b95D10e16": "eth:0x1A4B0621E90Bdc61d341D89158863458CA745dA2",
          "eth:0x8eD97a637A790Be1feff5e888d43629dc05408F6": "eth:0xF4208675b84E678d0d01528fA97634e2B0873Fa6",
          "eth:0x73A15FeD60Bf67631dC6cd7Bc5B6e8da8190aCF5": "eth:0xC3d39B77032114c8884276Dae0F02cdF75162782",
          "eth:0x7DC9748DA8E762e569F9269f48F69A1a9F8Ea761": "eth:0x99874400820c354eE07bC8b165C605632BdCeae3",
          "eth:0x69345c444D9dC261D253d7C227c90C6fE5fA5c23": "eth:0xBCd28DC5b141c425e0848900462572878b3FE376",
          "eth:0xC9746F73cC33a36c2cD55b8aEFD732586946Cedd": "eth:0x9Dfaaa0826b8D81Ea7Cf7ED95619574bcb47d6EA",
          "eth:0x163f8C2467924be0ae7B5347228CABF260318753": "eth:0x10c9a3c76bDbDB8600d726De621b941fd26F6058",
          "eth:0x9eC02756A559700d8D9e79ECe56809f7bcC5dC27": "eth:0xCfee3d8CBc7dFdea23608E73b48B1b83Af8603a9",
          "eth:0x1F236288F9f85E41A238959a43F2A8AC4B647952": "eth:0xF31EA507475B9c4be40241Dc25992Fda7aA20453",
          "eth:0xa6422E3E219ee6d4C1B18895275FE43556fd50eD": "eth:0x44e77d8C6Bb9999B036a6F084005E48928d18C74",
          "eth:0x9B61879e91a0b1322F3d61c23Aaf936231882096": "eth:0x3d430E1380286560899B94E3E9459c4ec300EF9a",
          "eth:0xd55C9fB62E176a8Eb6968f32958FeFDD0962727E": "eth:0x0c31b5DcF3CD6e588938D0699912d0028c911362",
          "eth:0x8238884Ec9668Ef77B90C6dfF4D1a9F4F4823BFe": "eth:0x500d4882938020E939a5666c1B4200873da7EfD3",
          "eth:0x9dC44ae5BE187ECA9e2A67e33f27A4c91cEA1223": "eth:0x7EeeAd4571b12BC3e331E6Ce2D954E1528aC2921",
          "eth:0x6C76dE483F1752Ac8473e2B4983A873991e70dA7": "eth:0xC78210649aF8A450C0f6E98107a0b614a3198359",
          "eth:0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0": "eth:0xA586a732394A1AFfCF15b972cd47C936033C9FA7",
          "eth:0x8b04bf3358B88e3630aa64C1c76FF3B6C699C6a7": "eth:0x51df9751404DB200b354ED6a5e27DdA6C557883D",
          "eth:0xCC0cBC7aad6E89fFbE5028dEa24Dd80DDeb8455b": "eth:0x5Acf8cdF7740DaBfF6D115058f2A386D6F2380eB",
          "eth:0xb0AC2b5a73da0e67A8e5489Ba922B3f8d582e058": "eth:0x8fd996312CA11849A562C78885021148F25a9841",
          "eth:0xD63106f742EF0DE4d4F209F59D3c31b63EB58ced": "eth:0xa597E8df3B16b05815faDC3A3b5b8BaCEDd6f16f",
          "eth:0x0F81001eF0A83ecCE5ccebf63EB302c70a39a654": "eth:0xC69e7a187fA739028Ee613426795D91B610932c7",
          "eth:0x619d506AF6554f9e38c722E9067369AC44773Cc0": "eth:0xf3e2Ccbb7d36c597d1ee4b451C4B46B94FC64239",
          "eth:0x560dBC9c1C261334515905B54C62B85ba11D979C": "eth:0x03Ed768E002165FE0E4DE9C6D6162DE973E19B5A",
          "eth:0x9aEaCaD30fDf8c7922B4556D68cAB5A4bB814171": "eth:0xB551DB5C7C1bF72998C0aeD60838C6f144d23273",
          "eth:0x958d200A49F4765f771C61d2649965e26277fB64": "eth:0xF56dcA7a981a53ec2EbeF2040800F04206021583",
          "eth:0x15700B564Ca08D9439C58cA5053166E8317aa138": "eth:0x1016225Ba7f32e3a6f2842A380D5846D8756648c",
          "eth:0x6A43795941113c2F58EB487001f4f8eE74b6938A": "eth:0xd2D62AB60A53Bad539CD8e43121c624B246F6302",
          "eth:0x1c00c3E03C3a10a0C1d9B6d1A42e797d7CB4147a": "eth:0x823839fE57d4c594bF9500C60c9551352a19D89D",
          "eth:0x140208e46d03B68505b76b25f2F4d079dD9158Ac": "eth:0x072C7E09981B1c2073e95D3c0e0CF8B90BA4B099",
          "eth:0x488D74BF3FB3E53eC1f5c8598E6247f233f4bBfA": "eth:0x4EdF9c3D77137EC15830c025E84344f49D5162d5",
          "eth:0x313F663E79ef202251a28F0252c254842D5ABC6a": "eth:0xEfd5fEFEdE55B5C41B8fa0d171a79ba5BeadD2Aa",
          "eth:0x2c9973F40716d34e13bF86502B9404a25959e311": "eth:0xb086806c8f80C4423cEA4DDf643bF40c0Ebc8220",
          "eth:0x6f40d4A6237C257fff2dB00FA0510DeEECd303eb": "eth:0x639f35C5E212D61Fe14Bd5CD8b66aAe4df11a50c",
          "eth:0xF0B2dd79324A66d2108C961d680F7616E1486bB0": "eth:0x95842Bb96cECfe77e8AC07BA6e6bA948B745CCCd",
          "eth:0xE6Bfd33F52d82Ccb5b37E16D3dD81f9FFDAbB195": "eth:0x19EE30DE803b921Ecbba64eD1787Cda6d536c26a",
          "eth:0x8d0D000Ee44948FC98c9B98A4FA4921476f08B0d": "eth:0x36a72eD0096B414521C45E3ddC9ed657d1D9c141",
          "eth:0xdAC17F958D2ee523a2206206994597C13D831ec7": "eth:0xa3532633401AbFfbd15e6be825a45FB7F141469B",
          "eth:0xae78736Cd615f374D3085123A210448E74Fc6393": "eth:0x3A2Ea8BaE01410425d01c2C5f488e4777DAA54Df",
          "eth:0x24eCd41CE6646ADa857995A682e1a5c42732cAbc": "eth:0xe3f4B78cdd20f6B8AE8644064656d3E2bF08c4B8",
          "eth:0x80ac24aA929eaF5013f6436cdA2a7ba190f5Cc0b": "eth:0x20B79D39Bd44dEee4F89B1e9d0e3b945fde06491",
          "eth:0x6440f144b7e50D6a8439336510312d2F54beB01D": "eth:0xf05a207442f14E446b0e32b12D2043bfc68Cb1C9",
          "eth:0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7": "eth:0x55e5a21B4cCC7FA502434ab1109D4EDe0397AB25",
          "eth:0x3B1B728780919C1Ed06b2969f4ec6daC16C259f3": "eth:0x0243c9066B75Cb9Abd97b08a7AAeEDbaeC9D717e",
          "eth:0x3157874A7508FCF972379D24590C6806522B784F": "eth:0x337Dec2C7D98CdC0f59976F3A48aCd706cC6c495",
          "eth:0x6982508145454Ce325dDbE47a25d4ec3d2311933": "eth:0xe48D935e6C9e735463ccCf29a7F11e32bC09136E",
          "eth:0xeF2A0a2F87752134491B4476eE1E339924Bf9fF1": "eth:0x9dC523fbc822b8827312c87F2C791094c7e9696f",
          "eth:0x7616113782AaDAB041d7B10d474F8A0c04EFf258": "eth:0x42513d6cCbEc49786Afc349622AA803BfbB746D5",
          "eth:0xE49FB237974E29AE8022347Ed14084669D70875B": "eth:0xaf0b8f79b667055Db3a54a31144e86e841Be3dAD",
          "eth:0xA445bA2c94d9dE6bFd13F2fe4165E738C4330710": "eth:0x4488d79B3996364dBa219d98e82a6B0A3D937E62",
          "eth:0x93CA78ff235649A98319612378405dC5170a95dD": "eth:0x9763C884b1cE0439a017bac04659e3350054Aea9",
          "eth:0xE7C253EAD50976Caf7b0C2cbca569146A7741B50": "eth:0xD4304D2D5C9cdF63124fD2A6C814f6b4F85925D9",
          "eth:0x60bbE7CD64568885D937DC5C563b902615B456a8": "eth:0x460CaAb2ecf966858A6fef751Aad3428D9017Bc8",
          "eth:0xdd4c6FD31Ccf66E250790643947675153c221A91": "eth:0xC201a236258Ec170dE5255A9507bb4f70c7caf31",
          "eth:0xB58E61C3098d85632Df34EecfB899A1Ed80921cB": "eth:0x9359cd75549DaE00Cdd8D22297BC9B13FbBe4B79",
          "eth:0xB5E6d08343Cb903153cF317375f1D77738f032DC": "eth:0x35b950eB023003f372bFba6388846F3F5F0EA3C7",
          "eth:0x64aa3364F17a4D01c6f1751Fd97C2BD3D7e7f1D5": "eth:0xa5588e518CE5ee0e4628C005E4edAbD5e87de3aD",
          "eth:0x420658A1d8B8F5C36DdAf1Bb828f347Ba9011969": "eth:0xC8c2Fe3Df1d300F366cE831a34276d7E4dd1F9B5",
          "eth:0xFa2B947eEc368f42195f24F36d2aF29f7c24CeC2": "eth:0xEcf61D6fAA3B9faE7195AF3bc9891450C1733f78",
          "eth:0x77146784315Ba81904d654466968e3a7c196d1f3": "eth:0x407dBD0170A79Bb62a016d4555C656205BbA8a68",
          "eth:0x2cd3CdB3bd68Eea0d3BE81DA707bC0c8743D7335": "eth:0x9aCd2ffD56E278a560Cc4E12dCA2B7D2B3359Ac2",
          "eth:0x88ABDfc8BCA5ecF33044b599a10aEEd1d4e96519": "eth:0x1dF68F4235efF6d4270590629953C559fC53571C",
          "eth:0x6682C1afdA0a1De8051eA7C76CA8a40cd598E6b6": "eth:0xfF48E1852F90cE91a698eE1A74cC8b8911479bF9",
          "eth:0x1B27d5dcCac27Dbf8B193360C10f50adCc05c4B7": "eth:0x92AfdbCE8017c1694a9922F777260854af48B532",
          "eth:0xC4bB3f2bD23FaDc2FE98cd82d9D8768BfFEcF633": "eth:0x3fa84a4985DE21F219fE3a4241235786d942A0A2",
          "eth:0x6bd3606B8c5718C34504bE5e305D59684A4B2ad2": "eth:0xE5bb39230Bf097a0C322440B9e839854AD77E85a",
          "eth:0x1D8BFd4974e148b214550FE8bB53B0b83b56a0F5": "eth:0x69781e5793C289c9a814Cd2f570308d1c249b94F",
          "eth:0xc669D8C5096b21abD2aa2E61B951333e7CDEE47D": "eth:0x1b08B9E5DfD4370cF3797793e4e18ba7131eAAB8",
          "eth:0x699Ccf919C1dfdFa4C374292f42CAdC9899BF753": "eth:0x3DAa89A5AB49DBa691FEA66EB89aC8Cf8BeE2e35",
          "eth:0x9F1E8F87c6321b84baD7DDa7DfB86D5115A47605": "eth:0x17Be5d735D49c84919d3cFDfF9eABbdB12D6Ac20",
          "eth:0x68749665FF8D2d112Fa859AA293F07A622782F38": "eth:0x04db9b1D7f52cB288b95B4934a1fA688F6d0cBc3",
          "eth:0x4737D9b4592B40d51e110b94c9C043c6654067Ae": "eth:0x2B941044978e65B6834891e2e53103AD72560F38",
          "eth:0x7C1156E515aA1A2E851674120074968C905aAF37": "eth:0xC26B8231a7B52F9B38909775c9fAcCCa6a4A3d96",
          "eth:0x05B5C6976EDDA6278663e3B5F156861Db2545Bd0": "eth:0x9FBcB7Ed1D48204b525531cC35b5482f6F44b08a",
          "eth:0x5c46f9ABb2858Aa27e3BF88F619e7F7bd408f00f": "eth:0xC8C866440806826EC0A43cD63129Be44DE2cE6bb",
          "eth:0x904f36d74bED2Ef2729Eaa1c7A5B70dEA2966a02": "eth:0x8628AB5A69b69742Ff0AD828Fa6d26f6aaD050B9",
          "eth:0x5e53AeBE377eFC92213514eC07f8EF3Af426DD1d": "eth:0x934635de453A1161D02Ce395F2F59E775597fE13",
          "eth:0x243c9be13fAbA09F945ccc565547293337Da0Ad7": "eth:0x8356D3261bef4d7f6f8427FE651660b35D8a2Cd3",
          "eth:0x2091d83592D79B4De5fD2ce3D98679c32A9555e6": "eth:0x553636e52059B0339592f545D25a4C0A86E3a1Bc",
          "eth:0x8624b87F9b766d82CdaDDE8Cf4192df76682F946": "eth:0x789428528A842053b52cd0D77692125829406712",
          "eth:0xdA5e1988097297dCdc1f90D4dFE7909e847CBeF6": "eth:0xc785D05961B3C537cAC11f1D496876a255F6D650",
          "eth:0x9BC2F611fa2196E097496B722f1CBCDfE2303855": "eth:0x4C4BD271b55f2114B9e2423409aaB1CC4D28C6B8",
          "eth:0x9469470C9878bf3d6d0604831d9A3A366156f7EE": "eth:0xbD09E8846B9DbdA54Ef386Bd9eF3bbd15Add50ee",
          "eth:0xDA06eE2dACF9245Aa80072a4407deBDea0D7e341": "eth:0x43f47a434DADd5A122C42E49378365CcA949fA54",
          "eth:0xBD4CaeE14EFDE2888F167130AF84D613D64618Da": "eth:0xe4a9fa29E3d88660577E4ACD9bf88Ef2DF4F8D7C",
          "eth:0x319053B625e598994Dd1179948771a4C2f66b873": "eth:0xf76A0c47900ca2dD1874AB4Dc4049810E919684d",
          "eth:0x9b13b86eeb48Ec9cA1A72FaE969d7daA60870100": "eth:0xba5F6Cf1121c572602e638bC8A0d87Db61072e35",
          "eth:0x2E8b7190eE84E7AC757Ddff42Ba14d4EAe24B865": "eth:0x18d3ebcEF1074f30aba5Da3951FF1a87B30B6Ec1",
          "eth:0xf0DB65D17e30a966C2ae6A21f6BBA71cea6e9754": "eth:0x94A43cC8C4d755271436cfE42793A66a6C9ae25b",
          "eth:0x24A3D725C37A8D1a66Eb87f0E5D07fE67c120035": "eth:0xC8ADf2f51a35b0a9d8f74675b64c954Ca2Dcbc14",
          "eth:0x3cD649D1B1D59bB841Fd60fC62382174AD9DcFF8": "eth:0x34731AfB2A45fFD616401f27dBF2Da8B8F369807",
          "eth:0x356B8d89c1e1239Cbbb9dE4815c39A1474d5BA7D": "eth:0xDE76A096C5eadDdf97Af3fE15ee49d32AEDa9822",
          "eth:0x7a4c2C39e25ca0D6A1Ac4af14dD601c2A7eDA8Ae": "eth:0xBb8b739C28898F7d143584380e7b689ecCaB2c9F"
        },
        "typeAndVersion": "TokenAdminRegistry 1.5.0"
      },
      "implementationNames": {
        "eth:0xb22764f98dD05c789929716D677382Df22C05Cb6": "TokenAdminRegistry"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0xB351EC0FEaF4B99FdFD36b484d9EC90D0422493D",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1670106179,
      "sinceBlock": 16107243,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0xd1243345c4c7Ff0A26aF4d291d9C058C9dF3479C",
          "eth:0xFFb91C736e1BCB2E06188198D70D790b25990783",
          "eth:0xCA4784Af7eBe83A7eafeFD1c8f81d00425F366D9",
          "eth:0x055114b1019300AAB9EE87f786b8Bd50258D0bdE",
          "eth:0xd8e867A91D36c76F41a2Ce78e5b8f0a57Fc47dEd",
          "eth:0x4dc81f63CB356c1420D4620414f366794072A3a8",
          "eth:0x2490c4BE8EFBA7A641e2fbc51ADaF05CEa69E085",
          "eth:0xAE398D78DAE867b1e837a512dcb6cB51235718EE"
        ],
        "$threshold": 6,
        "domainSeparator": "0x7284287056084765c7356cc535b954bcb432d7804be471b15210c05c960ced22",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "6 of 8 (75%)",
        "nonce": 103,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0xB351EC0FEaF4B99FdFD36b484d9EC90D0422493D": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "eth:0xb38f57CFa0255c708858ee94D2719EAaBBa82c35",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xb39B7D0cdd79B94B08b334965C1720be51A31986",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xb4a8D5807faff7da4AeF857837Fe89a903A01511",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ProxyAdmin",
      "address": "eth:0xB54f773211331f3889b74624D341e49328E83473",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x8fd8f837bb320bd2a7463c103bea2ff207b0969b5795f320a6c868858aa92074"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "eth:0x06179f7C1be40863405f374E7f5F8806c728660A",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1736358971,
      "sinceBlock": 21581390,
      "values": {
        "$immutable": true,
        "owner": "eth:0x5300A1a15135EA4dc7aD5a167152C01EFc9b192A",
        "UPGRADE_INTERFACE_VERSION": "5.0.0"
      },
      "implementationNames": {
        "eth:0xB54f773211331f3889b74624D341e49328E83473": "ProxyAdmin"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xB551DB5C7C1bF72998C0aeD60838C6f144d23273",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745298299,
      "sinceBlock": 22322335,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545"],
        "getToken": "eth:0x9aEaCaD30fDf8c7922B4556D68cAB5A4bB814171",
        "getTokenDecimals": 18,
        "owner": "eth:0x10163f09E2198b5e80DfDC33312348400bfF9203",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xB551DB5C7C1bF72998C0aeD60838C6f144d23273": "BurnMintTokenPool"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0xb67ac19693fB89880Ca5873f6a890E865b259c26",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1689524711,
      "sinceBlock": 17707022,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0x79b998ded1f4503CE3A0A76993c72a65449f4590",
          "eth:0x6EbD1dc80A9D608b7bC0F204E14909E7fFd25421"
        ],
        "$threshold": 1,
        "domainSeparator": "0xa9298aed07def04ae5ed595b19679f58c1916e712de20b4b7cc2582574af8e29",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 2 (50%)",
        "nonce": 58,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0xb67ac19693fB89880Ca5873f6a890E865b259c26": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "eth:0xB6d1621B770A088C16bfec22bAd00F77D874d011",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xB85E3e408D8300A002BaA9cc355D40a487e9C248",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739962247,
      "sinceBlock": 21879927,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0x28b0baC5B24537F9907a2c567891ad03Fd31AAC0",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xB85E3e408D8300A002BaA9cc355D40a487e9C248": "BurnMintTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xb86C91861A7043fffC26C7740C3678eE09599234",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1746521987,
      "sinceBlock": 22423630,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 5,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1546563616611573946",
          "onRamp": "eth:0x23436E9230B5dD66690BE54Cad5996b245Fd1891",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 1,
          "blockNumber": 22440770,
          "configDigest": "0x0001a3af5514f565e47413be406eb622bc55f0d7f8e7bebbc0189f8a5037d5de"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xb86C91861A7043fffC26C7740C3678eE09599234": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xB89FC4d62344a77dD09159390f9283ae9e5150F2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xb8C1688807788A7F3FFc3Fb6F0c19E06889c051F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xba5F6Cf1121c572602e638bC8A0d87Db61072e35",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1757621831,
      "sinceBlock": 23342152,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "11344663589394136015",
          "3229138320728879060",
          "2442541497099098535"
        ],
        "getToken": "eth:0x9b13b86eeb48Ec9cA1A72FaE969d7daA60870100",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xba5F6Cf1121c572602e638bC8A0d87Db61072e35": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xBA778eaBa9E592B644344bC5fe9D0a89d5c24009",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0xbAf669bBe01882082C83F8B2d146057202fc4cB7",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1746734039,
      "sinceBlock": 22441005,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 58,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "465944652040885897",
          "onRamp": "eth:0x47c94F8540F950B36f0C34Db6977Eb7ADFc8A50B",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 22475744,
          "configDigest": "0x000153f2ccd487a75a1492f85182891d94b67b4c52acf951cac7baf0b3d6a492"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xbAf669bBe01882082C83F8B2d146057202fc4cB7": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xBb8b739C28898F7d143584380e7b689ecCaB2c9F",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1758155687,
      "sinceBlock": 23386413,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "3734403246176062136",
          "4949039107694359620",
          "15971525489660198786"
        ],
        "getToken": "eth:0x7a4c2C39e25ca0D6A1Ac4af14dD601c2A7eDA8Ae",
        "getTokenDecimals": 18,
        "owner": "eth:0x2d4A4cC6CcB118e2A222a860C842Db9023aE1848",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xBb8b739C28898F7d143584380e7b689ecCaB2c9F": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xbBe185A2012E8783D455ff8B9A3DB6D99771bFDE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xBbe4467c7151B810eC8FdB281F6fB7F0cD8A7b65",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xBc1324F4FaB8e63bF33E5117bb887671B378BFF3",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739365451,
      "sinceBlock": 21830582,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "12505351618335765396",
          "4949039107694359620",
          "1294465214383781161"
        ],
        "getToken": "eth:0xD9A442856C234a39a81a089C06451EBAa4306a72",
        "getTokenDecimals": 18,
        "owner": "eth:0xC0896ab1A8cae8c2C1d27d011eb955Cca955580d",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xBc1324F4FaB8e63bF33E5117bb887671B378BFF3": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xbcC5895bb1bf1737f8c5088c5677302e3fdeb75c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xBCd28DC5b141c425e0848900462572878b3FE376",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742290235,
      "sinceBlock": 22072879,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0x69345c444D9dC261D253d7C227c90C6fE5fA5c23",
        "getTokenDecimals": 18,
        "owner": "eth:0x3218e23f04DF216bA6813c8CF88a8cB82c835903",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xBCd28DC5b141c425e0848900462572878b3FE376": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xbD09E8846B9DbdA54Ef386Bd9eF3bbd15Add50ee",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1757367803,
      "sinceBlock": 23321131,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6433500567565415381"],
        "getToken": "eth:0x9469470C9878bf3d6d0604831d9A3A366156f7EE",
        "getTokenDecimals": 18,
        "owner": "eth:0xd4d23209aaE8630bf386b7393763a5b7865e57cb",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xbD09E8846B9DbdA54Ef386Bd9eF3bbd15Add50ee": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xbD4dAf39E552C29648C9Ec78e2f671373b1347f2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xBD4ee0f8a4F658D0e7da8811Eb6ec0CC02baA974",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xbD5F9C193a7fEF5D578C55Ddfe4d08d6BCc15648",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xBd6934b2DF4B6926FA7161f72A7DC599b9A2E581",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xBD9bf9AA79adF083BB7100848Eb15F4e8282E27e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xBDCc99f05D73FB3C2ad4b0F496318BaAE20218b7",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729734023,
      "sinceBlock": 21032231,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x047204D42d93a6471F7c9Ec94292B4B00E8e0786",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x32bd822d615A3658A68b6fDD30c2fcb2C996D678",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xBDCc99f05D73FB3C2ad4b0F496318BaAE20218b7": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xbE374316EFBB444589F2AE60ef2B83BDB656380F",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739735555,
      "sinceBlock": 21861163,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["465200170687744372"],
        "getToken": "eth:0x6bF9e1D8632AB1749e36ACaE15EFBa9637C163B9",
        "getTokenDecimals": 18,
        "owner": "eth:0xa6E17255dBE2B6ddF613B2563068E31238114ca6",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xbE374316EFBB444589F2AE60ef2B83BDB656380F": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xBF7cb652A2d5ed3BFc3832Ef8Af33Ffb0cDc0982",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1715888603,
      "sinceBlock": 19884699,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0xC4ABCd324ED49B98795CC8F51C80DAF1A24F5F58",
        "getSupportedChains": ["4949039107694359620", "6433500567565415381"],
        "getToken": "eth:0xf2DbAaBd8F8E0993F11DE4CEd470Df1ED1a4491b",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xBF7cb652A2d5ed3BFc3832Ef8Af33Ffb0cDc0982": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xbfc86CA9b7fa158287bD392eE098246465E63351",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729737107,
      "sinceBlock": 21032488,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xC456EaE992e4f2925E3F75Ac4809dF387756CD29",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0xA544b3F0c46c15F0B2b00ba3D67b56C250287905",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xbfc86CA9b7fa158287bD392eE098246465E63351": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0xc07556a0Bd177F8de4D077f449C2653A072F3798",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1707337151,
      "sinceBlock": 19178649,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0x5f33eD3646cDaF0eb47C34c3Fd7B4B6613f59091",
          "eth:0xE0a8ABcf65e6212abFd659d5D857CFbA62a14771",
          "eth:0x0669d4d05Fc5bCF261DBADc3b41854a6ee7E2E85",
          "eth:0xBd6934b2DF4B6926FA7161f72A7DC599b9A2E581",
          "eth:0x53482ACf424d4196b0F8EbdD6F8A15eb8516FB88",
          "eth:0xcD5868dD3dEe0f0A31c38D088dd562F5d4ea2386",
          "eth:0xbD4dAf39E552C29648C9Ec78e2f671373b1347f2"
        ],
        "$threshold": 3,
        "domainSeparator": "0xccec06d2944ed816bb6addb86977393693ae262ae101237d9a6cd8bc5d9f613a",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 7 (43%)",
        "nonce": 58,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0xc07556a0Bd177F8de4D077f449C2653A072F3798": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0xc1D8f275f651E1CAe3A6D971d0836cDAcD25d91a",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729729331,
      "sinceBlock": 21031844,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x57D3bb46aF4A9b210FAE046796013090D428475F",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0xCA160D11087E03fd398d40f561cd4768825f4958",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xc1D8f275f651E1CAe3A6D971d0836cDAcD25d91a": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xC201a236258Ec170dE5255A9507bb4f70c7caf31",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1749480635,
      "sinceBlock": 22667726,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "1673871237479749969",
          "4949039107694359620",
          "6433500567565415381"
        ],
        "getToken": "eth:0xdd4c6FD31Ccf66E250790643947675153c221A91",
        "getTokenDecimals": 18,
        "owner": "eth:0xE8e8041cB5E3158A0829A19E014CA1cf91098554",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xC201a236258Ec170dE5255A9507bb4f70c7caf31": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xC26B8231a7B52F9B38909775c9fAcCCa6a4A3d96",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1751654111,
      "sinceBlock": 22847679,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["17912061998839310979"],
        "getToken": "eth:0x7C1156E515aA1A2E851674120074968C905aAF37",
        "getTokenDecimals": 18,
        "owner": "eth:0x8bBe46a0Bb587d6363cF34E655108dCB4d671E9E",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xC26B8231a7B52F9B38909775c9fAcCCa6a4A3d96": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xc2b15a8ff04Fdc05E782A1aD89f43E241c6D2420",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736365187,
      "sinceBlock": 21581908,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545"],
        "getToken": "eth:0xe4aD0b17BBf97F659B22403C822a3f18bcD17597",
        "getTokenDecimals": 18,
        "owner": "eth:0x17D8a409fE2ceF2d3808bcB61F14aBEFfc28876e",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xc2b15a8ff04Fdc05E782A1aD89f43E241c6D2420": "BurnMintTokenPool"
      }
    },
    {
      "name": "HybridLockReleaseUSDCTokenPool",
      "address": "eth:0xc2e3A3C18ccb634622B57fF119a1C8C7f12e8C0c",
      "type": "Contract",
      "template": "transporter/HybridLockReleaseUSDCTokenPool",
      "sourceHashes": [
        "0x332df04c10e8b401345c56d79399b778c5ea8517925ca5b8a8125d645c229fc4"
      ],
      "proxyType": "immutable",
      "description": "A token pool for USDC which uses CCTP for supported chains and Lock/Release for all others",
      "sinceTimestamp": 1733883263,
      "sinceBlock": 21376216,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getCurrentProposedCCTPChainMigration": 0,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "4949039107694359620",
          "6433500567565415381",
          "15971525489660198786",
          "3734403246176062136",
          "6916147374840168594",
          "7937294810946806131",
          "3849287863852499584",
          "1923510103922296319",
          "5142893604156789321"
        ],
        "getTokenDecimals": 6,
        "i_localDomainIdentifier": 0,
        "i_messageTransmitter": "eth:0x0a992d191DEeC32aFe36203Ad87D7d289a738F81",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "SUPPORTED_USDC_VERSION": 0,
        "typeAndVersion": "USDCTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xc2e3A3C18ccb634622B57fF119a1C8C7f12e8C0c": "HybridLockReleaseUSDCTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xc2ef2f272D2C09b0a8523cEf32C96D3A7f379979",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729734047,
      "sinceBlock": 21032233,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x50f6631B377be52E132DF35a2F05eA54fda882ac",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545", "4949039107694359620"],
        "getToken": "eth:0x888888435FDe8e7d4c54cAb67f206e4199454c60",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xc2ef2f272D2C09b0a8523cEf32C96D3A7f379979": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0xc319484eF6cdA3a7f4D470e660b343FB569e9A1e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xC319515dD34811B9204c983E0ad56E816d678EFF",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xC3d39B77032114c8884276Dae0F02cdF75162782",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1741853219,
      "sinceBlock": 22036647,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "11344663589394136015"],
        "getToken": "eth:0x73A15FeD60Bf67631dC6cd7Bc5B6e8da8190aCF5",
        "getTokenDecimals": 18,
        "owner": "eth:0x121342fE426cca0C4dFA3554bEfDf6c14Ef42ebb",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xC3d39B77032114c8884276Dae0F02cdF75162782": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xc422a9AE3341dDDa7296F55D42C954B2faA03013",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xc43c01026128Aa758A65D12dB6a72CE4DD778dF2",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xa9fa40d9d26de86fa9869be555593dd3b95cc40442206b8c0725a24d1809cc7f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1707769439,
      "sinceBlock": 19214305,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getOffRamps": [
          "eth:0x7Afe7088aff57173565F4b034167643AA8b9171c",
          "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d",
          "eth:0x89c9038906887A69bD9C20f81B1B4C309F9A6D04"
        ],
        "getOnRamps": [
          "eth:0x91D25A56Db77aD5147437d8B83Eb563D46eBFa69",
          "eth:0x925228D7B82d883Dde340A55Fe8e6dA56244A22C",
          "eth:0x89c9038906887A69bD9C20f81B1B4C309F9A6D04"
        ],
        "getToken": "eth:0x73968b9a57c6E53d41345FD57a6E6ae27d6CDB2F",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.2.0"
      },
      "implementationNames": {
        "eth:0xc43c01026128Aa758A65D12dB6a72CE4DD778dF2": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xC456EaE992e4f2925E3F75Ac4809dF387756CD29",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1722536651,
      "sinceBlock": 20435467,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0xbfc86CA9b7fa158287bD392eE098246465E63351",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0xA544b3F0c46c15F0B2b00ba3D67b56C250287905",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xC456EaE992e4f2925E3F75Ac4809dF387756CD29": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xc46890D248a389A40725dbd9fa5e13548B56Ad8d",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1739542175,
      "sinceBlock": 21845203,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 73,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1224752112135636129",
          "onRamp": "eth:0x00348860Cb152Aa20617a1265343D1989C976575",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 4,
          "blockNumber": 21868333,
          "configDigest": "0x000135abe4211a78ca78d73b16149d8e99691fdf524c11f368efadeca8f6d178"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xc46890D248a389A40725dbd9fa5e13548B56Ad8d": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0xC4ABCd324ED49B98795CC8F51C80DAF1A24F5F58",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729697003,
      "sinceBlock": 21029161,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xBF7cb652A2d5ed3BFc3832Ef8Af33Ffb0cDc0982",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620", "6433500567565415381"],
        "getToken": "eth:0xf2DbAaBd8F8E0993F11DE4CEd470Df1ED1a4491b",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xC4ABCd324ED49B98795CC8F51C80DAF1A24F5F58": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xc5164AF94Be6737fE21085eDDa4E43BcBf224F9f",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1739488583,
      "sinceBlock": 21840775,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 2353,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1294465214383781161",
          "onRamp": "eth:0x2c99dC698745B655d4D0741eF5Ef8623578c45c0",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21847810,
          "configDigest": "0x0001b36f928c5fb7c83e0e6a7162f490e0b13d0f538ba22a55000c3f5121c657"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xc5164AF94Be6737fE21085eDDa4E43BcBf224F9f": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0xc534a745bFfaF9466Ed7B47fA23B0177b99A3e77",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1687279487,
      "sinceBlock": 17522177,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0x0897316DFE7141DB1E182551c3e8077cf5dd9695",
          "eth:0xb67ac19693fB89880Ca5873f6a890E865b259c26",
          "eth:0xF0fCdb037718E1B2b52f109Ae776713F9c1f730c",
          "eth:0x140C0227Cbe493A56868DDF4ea582E92ef3e9744",
          "eth:0x6BBf4f7478824482F0cE2861d003bf0Ef61CdBD6"
        ],
        "$threshold": 4,
        "domainSeparator": "0xce9ce7c9364f5e5f2250654b75d97f836c46669ced1751a36a6a977404411f50",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "4 of 5 (80%)",
        "nonce": 86,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0xc534a745bFfaF9466Ed7B47fA23B0177b99A3e77": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0xc576D83eA5D672E220f7B099827E73685Fde5B73",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729693031,
      "sinceBlock": 21028831,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x4C3aEe10334461F1f33c0A8843424de3F8fb7709",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "11344663589394136015"],
        "getToken": "eth:0x01aaC2b594F7bdBeC740F0F1AA22910EbB4B74Ab",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xc576D83eA5D672E220f7B099827E73685Fde5B73": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xC69e7a187fA739028Ee613426795D91B610932c7",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745351795,
      "sinceBlock": 22326779,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["1294465214383781161", "4949039107694359620"],
        "getToken": "eth:0x0F81001eF0A83ecCE5ccebf63EB302c70a39a654",
        "getTokenDecimals": 18,
        "owner": "eth:0xa75c21C5BE284122a87A37a76cc6C4DD3E55a1D4",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xC69e7a187fA739028Ee613426795D91B610932c7": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xC6fA4C71F42dD1881E29DDe853FA5CcD18A59624",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xc75aCdceF4c679eaCb7a8CF1eF486B9Cf77478f8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1734108035,
      "sinceBlock": 21394845,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4949039107694359620",
          "3734403246176062136",
          "15971525489660198786",
          "4051577828743386545",
          "13204309965629103672",
          "4627098889531055414",
          "1346049177634351622",
          "465200170687744372",
          "1556008542357238666",
          "4411394078118774322",
          "8805746078405598895",
          "7264351850409363825",
          "6422105447186081193",
          "17198166215261833993",
          "5142893604156789321",
          "3719320017875267166",
          "1562403441176082196",
          "6433500567565415381"
        ],
        "getToken": "eth:0x9813037ee2218799597d83D4a5B6F3b6778218d9",
        "getTokenDecimals": 18,
        "owner": "eth:0xbF6512B1bBEeC3a673Feff43C0A182C2b28DFD9f",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xc75aCdceF4c679eaCb7a8CF1eF486B9Cf77478f8": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xC78210649aF8A450C0f6E98107a0b614a3198359",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x79b9cf230176def2af971dc33c78f8b070cb0a6e49af9044a0e1f1ec5db4c52b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1743650171,
      "sinceBlock": 22185646,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["7937294810946806131", "11344663589394136015"],
        "getToken": "eth:0x6C76dE483F1752Ac8473e2B4983A873991e70dA7",
        "owner": "eth:0x2728df4D22253004C017675bd609962cD641D797",
        "typeAndVersion": "BurnMintTokenPool 1.5.0"
      },
      "implementationNames": {
        "eth:0xC78210649aF8A450C0f6E98107a0b614a3198359": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xc785D05961B3C537cAC11f1D496876a255F6D650",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1756246247,
      "sinceBlock": 23228186,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["124615329519749607", "11344663589394136015"],
        "getToken": "eth:0xdA5e1988097297dCdc1f90D4dFE7909e847CBeF6",
        "getTokenDecimals": 18,
        "owner": "eth:0x5be9a4959308A0D0c7bC0870E319314d8D957dBB",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xc785D05961B3C537cAC11f1D496876a255F6D650": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xc809b0216B149cc301Cb203EDD84FCdB8F15C4ed",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "EDENBurnMintTokenPool",
      "address": "eth:0xC8ADf2f51a35b0a9d8f74675b64c954Ca2Dcbc14",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xd4231237360ee144dbc119eb099532e4967735875473e236358a39b7c6061f7f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1757929163,
      "sinceBlock": 23367640,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0x24A3D725C37A8D1a66Eb87f0E5D07fE67c120035",
        "getTokenDecimals": 18,
        "owner": "eth:0x414250B3Ac7A46e9BaA1AD6dfC41200e5329eecE",
        "typeAndVersion": "EDEN BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xC8ADf2f51a35b0a9d8f74675b64c954Ca2Dcbc14": "EDENBurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xC8c2Fe3Df1d300F366cE831a34276d7E4dd1F9B5",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1750865363,
      "sinceBlock": 22782351,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["12505351618335765396"],
        "getToken": "eth:0x420658A1d8B8F5C36DdAf1Bb828f347Ba9011969",
        "getTokenDecimals": 18,
        "owner": "eth:0x7A42B1F67289DD2b32F6462b369Ce8cF541A7Ced",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xC8c2Fe3Df1d300F366cE831a34276d7E4dd1F9B5": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CCIPFlauntPool",
      "address": "eth:0xC8C866440806826EC0A43cD63129Be44DE2cE6bb",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x0a35dd432b77fce55b815e772bab627ec6b4ecc71e7a30d1a5576092d034682c"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1753209167,
      "sinceBlock": 22976525,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0xC319515dD34811B9204c983E0ad56E816d678EFF",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786"],
        "getToken": "eth:0x5c46f9ABb2858Aa27e3BF88F619e7F7bd408f00f",
        "getTokenDecimals": 18,
        "owner": "eth:0x161255b0D7B1ff43449322C801A6E16970d8144f",
        "typeAndVersion": "LockReleaseTokenPool 1.6.1-dev"
      },
      "implementationNames": {
        "eth:0xC8C866440806826EC0A43cD63129Be44DE2cE6bb": "CCIPFlauntPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xC95737Ba39A61B2AE60800eF375677caA54Ff0c5",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1740979463,
      "sinceBlock": 21964249,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "15971525489660198786"],
        "getToken": "eth:0x242f95e5E58edb736E6bA0a0dD854ed0c92792f7",
        "getTokenDecimals": 18,
        "owner": "eth:0x3E30A6bc708402C4A340962eF6fb4d33E176193D",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xC95737Ba39A61B2AE60800eF375677caA54Ff0c5": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xc9CBE4D5ca717CB2EE6048E39D096D7c8839b5e7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xCA4784Af7eBe83A7eafeFD1c8f81d00425F366D9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xcb4524B63F2c532fF52FCbbBcd3C137D32c1D966",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xCD125c3a44668cD7abab854fDE28233336511667",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xcd196D3905AfA0eCB4e0e62C2D7d6c52f9C73526",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x6b4c769c7b59108373c42add32bce68be08c2c8095dcb0919d25cd9b4542102c"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1697125199,
      "sinceBlock": 18335290,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getOffRamps": [
          "eth:0x61135E701a2214C170c5F596D0067798FEfbaaE4",
          "eth:0xfF51C00546AA3d9051a4B96Ae81346E14709CD24",
          "eth:0xdf85c8381954694E74abD07488f452b4c2Cddfb3",
          "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d",
          "eth:0x67F4e731f446Ff76716E7E3c955CD5A75C1B1787"
        ],
        "getOnRamps": [
          "eth:0x333f976915195ba9044fD0cd603cEcE936f6264e",
          "eth:0xe2Eb229e88F56691e96bb98256707Bc62160FE73",
          "eth:0x925228D7B82d883Dde340A55Fe8e6dA56244A22C",
          "eth:0xe2c2AB221AA0b957805f229d2AA57fBE2f4dADf7",
          "eth:0x67F4e731f446Ff76716E7E3c955CD5A75C1B1787"
        ],
        "getToken": "eth:0x8BF591Eae535f93a242D5A954d3Cde648b48A5A8",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449"
      },
      "implementationNames": {
        "eth:0xcd196D3905AfA0eCB4e0e62C2D7d6c52f9C73526": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xcD5868dD3dEe0f0A31c38D088dd562F5d4ea2386",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xcd69c117bf91Fc57d5fC237dFAbA5f17B5322733",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1718911091,
      "sinceBlock": 20134972,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x8E7ebBb95e369BC854Ee7021C7CF2E282c3bCAEa",
        "getSupportedChains": ["4949039107694359620", "15971525489660198786"],
        "getToken": "eth:0x341c05c0E9b33C0E38d64de76516b2Ce970bB3BE",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xcd69c117bf91Fc57d5fC237dFAbA5f17B5322733": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xCe11020D56e5FDbfE46D9FC3021641FfbBB5AdEE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0xCE8342b8eFd4D804B97Df92bC6bb930099098fDE",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729696883,
      "sinceBlock": 21029151,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xeaE89E53B8317CaB04165F5323285252D5669B73",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x98C6616F1CC0D3E938A16200830DD55663dd7DD3",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xCE8342b8eFd4D804B97Df92bC6bb930099098fDE": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0xcfd0637093193ac909f74F9de95c2d4B92Df23c4",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1727705819,
      "sinceBlock": 20864010,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x1175E4CFd6a73A4c1F1f2c1400a08D88554FA62e",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["5142893604156789321"],
        "getToken": "eth:0x66cC3FD40612F9c591F977ce026Ef1C79520C472",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xcfd0637093193ac909f74F9de95c2d4B92Df23c4": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xCfee3d8CBc7dFdea23608E73b48B1b83Af8603a9",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742754731,
      "sinceBlock": 22111403,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0x9eC02756A559700d8D9e79ECe56809f7bcC5dC27",
        "getTokenDecimals": 18,
        "owner": "eth:0x65C40bab8F8E572540EbF67CEe8F23fd64565bD3",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xCfee3d8CBc7dFdea23608E73b48B1b83Af8603a9": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xD0701FcC7818c31935331B02Eb21e91eC71a1704",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0xd079265E929C845707e816E3855721D055d40235",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1749232775,
      "sinceBlock": 22647191,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 58,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "7222032299962346917",
          "onRamp": "eth:0x6FD3386bf2c0921EFeFA059d543e8207Ff68e2f9",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 22683443,
          "configDigest": "0x0001741f5ce26a7e5fbd7a45fcddc138d49c03aa580e4e36ba3e2ca5d1409e77"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xd079265E929C845707e816E3855721D055d40235": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xd1243345c4c7Ff0A26aF4d291d9C058C9dF3479C",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xD1B33FAd3fF7a793EE39473f865630e3b6371086",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0xd2428F8C62fBfEA4b44a703CF11e02D7B0a6Cd99",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1732123727,
      "sinceBlock": 21230440,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 484,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "3849287863852499584",
          "onRamp": "eth:0x00E64619Bb29f7E1d4E1CC9f21ecEA05189fd8ab",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21275961,
          "configDigest": "0x0001f5f18a1485efe4f29c794e262fc9309933e88a41a91b5891ef7e0e8d8656"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xd2428F8C62fBfEA4b44a703CF11e02D7B0a6Cd99": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xD27F88501e62D0BDc70B20d6ed06d8E0fF8c3812",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742499767,
      "sinceBlock": 22090240,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x88D100432F98956b16B66Df56962FD3e5cCd297A",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xD27F88501e62D0BDc70B20d6ed06d8E0fF8c3812": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xD2a9F49Aa973fDd42Edbb24E01Baa8163ac3141c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xd2D62AB60A53Bad539CD8e43121c624B246F6302",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745433203,
      "sinceBlock": 22333521,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545", "15971525489660198786"],
        "getToken": "eth:0x6A43795941113c2F58EB487001f4f8eE74b6938A",
        "getTokenDecimals": 18,
        "owner": "eth:0x24207ab354aF482732b79AeE451d9aBCd6124c87",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xd2D62AB60A53Bad539CD8e43121c624B246F6302": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xd3094f770579AFd66711847cE9E9C42D10BA2264",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0xD37a60E8C36E802D2E1a6321832Ee85556Beeb76",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0xd025e395362545e27f2685927e4952ec45f7414e89a22f0db36aa587b3741d69"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1701286319,
      "sinceBlock": 18679373,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 1449,
        "getLatestPriceEpochAndRound": 466435,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "polygon",
          "onRamp": "eth:0xFd77c53AA4eF0E3C01f5Ac012BF7Cc7A3ECf5168",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isARMHealthy": true,
        "isUnpausedAndARMHealthy": true,
        "latestConfigDetails": {
          "configCount": 8,
          "blockNumber": 20574561,
          "configDigest": "0x0001032f669d09a05e36d873e547a3009a05d8b30db4c0bca70564474fa7bf94"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.2.0"
      },
      "implementationNames": {
        "eth:0xD37a60E8C36E802D2E1a6321832Ee85556Beeb76": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xD3Bd3D50E3593AFE8B5A50C1B3F83c21D64c10d2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xd3E2da792E806556517124f03F12e557045951E7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xD4304D2D5C9cdF63124fD2A6C814f6b4F85925D9",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1749055463,
      "sinceBlock": 22632544,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "1294465214383781161",
          "3849287863852499584"
        ],
        "getToken": "eth:0xE7C253EAD50976Caf7b0C2cbca569146A7741B50",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xD4304D2D5C9cdF63124fD2A6C814f6b4F85925D9": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xD4C6184DEC4e10395AB84b9e7a7ab46d0D57329e",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736523635,
      "sinceBlock": 21595032,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x153A381D1207862cA003f68600462fAa66A828a7",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xD4C6184DEC4e10395AB84b9e7a7ab46d0D57329e": "BurnMintTokenPool"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0xD6597750bf74DCAEC57e0F9aD2ec998D837005bf",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd5e39124d6a5dcf27e7b56bfbb24569e89837dea5e334ef533c239e1497f1fee"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1689260771,
      "sinceBlock": 17685354,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0x2ED1A552C03f843a2Db7DE10AD390d24bb66CEE0",
        "$members": [
          "eth:0x326377a6B92eC69AcbbFe2De1eB1d7c9008E4C89",
          "eth:0x7052cB84079905400ea52B635cAb6a275fDA8823",
          "eth:0xE062e7D123AC8dF480C56147f911144F55C10f88",
          "eth:0x41eAdbc688797a02bfaBE48472995833489ce69D",
          "eth:0x1c6460cfe32916196f6977b5442b0F98A826D880",
          "eth:0x745B9329ccF53556e3C5f1fD1E4e9D0E91Ad2514",
          "eth:0xAe735fd5e74887064DFf99C637f291caE5485A75",
          "eth:0x14a8f3B302Bbfa7F2f2AC2F4515548370bc7bAdC",
          "eth:0x6bfBf6BC4bc5CD20768dAA6F58f0743bAFf2e5f4",
          "eth:0x56B167deCD5fC4E3Bbc07B3B4e1F30e74534F9dd",
          "eth:0x06e5891D9b2Ee77740355A309BAF49caaB672f98",
          "eth:0xa42c8570771240D1e2F3211064a7C7472Cc05b7D"
        ],
        "$threshold": 6,
        "domainSeparator": "0x4b48316c8545b9cd2ebf3323a3bb90dbc01a898080a791d95fd4f02d8b0660c5",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "6 of 12 (50%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0xD6597750bf74DCAEC57e0F9aD2ec998D837005bf": "GnosisSafeProxy",
        "eth:0x2ED1A552C03f843a2Db7DE10AD390d24bb66CEE0": "GnosisSafe"
      }
    },
    {
      "address": "eth:0xD666ca88FAe41797AC0a1d79E29F6b252683561e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xd72F7010f0Fa621aB0869e61e9bb4e3cC887c66c",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1722536615,
      "sinceBlock": 20435464,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0xe9bFB4fe6E403985c5f2b968f883A9590Aac54aC",
        "getSupportedChains": [
          "3734403246176062136",
          "4949039107694359620",
          "7264351850409363825",
          "11344663589394136015",
          "15971525489660198786",
          "1673871237479749969"
        ],
        "getToken": "eth:0xAe770d24ec1580A13392E0B71067571351029203",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xd72F7010f0Fa621aB0869e61e9bb4e3cC887c66c": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xD8B2263665600f2742425D451e91FEaf642bac30",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xd8e867A91D36c76F41a2Ce78e5b8f0a57Fc47dEd",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0xd8F93Aff87dC2AEEe0D0b0dF347baDA861BFf802",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1729099415,
      "sinceBlock": 20979592,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 1085,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "1556008542357238666",
          "onRamp": "eth:0xa18BC8b64a863DB34199F7e59F3A3d051ABa413d",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 4,
          "blockNumber": 22615518,
          "configDigest": "0x0001e28177de3c6839cfabd83d3dbf6f046aa2c9921e7ce5a5a42e1cf04cfdcc"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xd8F93Aff87dC2AEEe0D0b0dF347baDA861BFf802": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "ManyChainMultiSig",
      "address": "eth:0xD9757aA52907798d1aF2FDa7A6C0cC733E5aCf7e",
      "type": "Contract",
      "template": "transporter/ManyChainMultiSig",
      "sourceHashes": [
        "0x4f59b9eb3c499a0ce481e88fbdca49583b553c9ae00db33bfcc9e38132a82b86"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["getRootMetadata", "getRoot", "getOpCount"],
      "sinceTimestamp": 1744208183,
      "sinceBlock": 22231886,
      "values": {
        "$immutable": true,
        "getConfig": {
          "signers": [
            {
              "addr": "eth:0x013D4A675Fd02359c3c35Abc514dafd97B127e34",
              "index": 0,
              "group": 4
            },
            {
              "addr": "eth:0x0D2730AD6D62A49907Fb9273cD4a59D1092cb472",
              "index": 1,
              "group": 4
            },
            {
              "addr": "eth:0x14a8f3B302Bbfa7F2f2AC2F4515548370bc7bAdC",
              "index": 2,
              "group": 4
            },
            {
              "addr": "eth:0x1E2cDb5Fe0461C3688E090B879fd1156ed32a887",
              "index": 3,
              "group": 2
            },
            {
              "addr": "eth:0x29c5f7aCfDea3F48486b282aF0FA797b0F04D845",
              "index": 4,
              "group": 1
            },
            {
              "addr": "eth:0x34e42200901133bdceb1195f2c5241cb03D06274",
              "index": 5,
              "group": 1
            },
            {
              "addr": "eth:0x3Ce065c714810e0b2a85Ed71f1582038823c75d8",
              "index": 6,
              "group": 1
            },
            {
              "addr": "eth:0x41eAdbc688797a02bfaBE48472995833489ce69D",
              "index": 7,
              "group": 1
            },
            {
              "addr": "eth:0x4833c0fcE02C92fF8D92903BAB14827ff1cBD4bf",
              "index": 8,
              "group": 1
            },
            {
              "addr": "eth:0x54081602645704EE2B76FEe30E8B4d4F2D82d4E0",
              "index": 9,
              "group": 2
            },
            {
              "addr": "eth:0x56B167deCD5fC4E3Bbc07B3B4e1F30e74534F9dd",
              "index": 10,
              "group": 4
            },
            {
              "addr": "eth:0x5AA4D76f0CD8ea04fB3C4C4b771A0B9E03dC776C",
              "index": 11,
              "group": 3
            },
            {
              "addr": "eth:0x60Fead3745461393F9298228E19d6D720Db89F2e",
              "index": 12,
              "group": 3
            },
            {
              "addr": "eth:0x615B9b28B754Afd1fD03EbaB2BAE8b14A6Dc94Ee",
              "index": 13,
              "group": 3
            },
            {
              "addr": "eth:0x6bfBf6BC4bc5CD20768dAA6F58f0743bAFf2e5f4",
              "index": 14,
              "group": 4
            },
            {
              "addr": "eth:0x8E0e08E8cbc324310550E195383b7aC200726639",
              "index": 15,
              "group": 2
            },
            {
              "addr": "eth:0x9B391a5179BdC59af9B3a49423Fe8F10b74aF3c6",
              "index": 16,
              "group": 3
            },
            {
              "addr": "eth:0xa42c8570771240D1e2F3211064a7C7472Cc05b7D",
              "index": 17,
              "group": 4
            },
            {
              "addr": "eth:0xa53a14c85965734C875C91A6a145CFB5ff4624dD",
              "index": 18,
              "group": 1
            },
            {
              "addr": "eth:0xB89FC4d62344a77dD09159390f9283ae9e5150F2",
              "index": 19,
              "group": 2
            },
            {
              "addr": "eth:0xb8C1688807788A7F3FFc3Fb6F0c19E06889c051F",
              "index": 20,
              "group": 2
            },
            {
              "addr": "eth:0xBA778eaBa9E592B644344bC5fe9D0a89d5c24009",
              "index": 21,
              "group": 2
            },
            {
              "addr": "eth:0xbBe185A2012E8783D455ff8B9A3DB6D99771bFDE",
              "index": 22,
              "group": 2
            },
            {
              "addr": "eth:0xBbe4467c7151B810eC8FdB281F6fB7F0cD8A7b65",
              "index": 23,
              "group": 2
            },
            {
              "addr": "eth:0xCD125c3a44668cD7abab854fDE28233336511667",
              "index": 24,
              "group": 1
            },
            {
              "addr": "eth:0xD666ca88FAe41797AC0a1d79E29F6b252683561e",
              "index": 25,
              "group": 3
            },
            {
              "addr": "eth:0xD8B2263665600f2742425D451e91FEaf642bac30",
              "index": 26,
              "group": 2
            },
            {
              "addr": "eth:0xE062e7D123AC8dF480C56147f911144F55C10f88",
              "index": 27,
              "group": 1
            },
            {
              "addr": "eth:0xE3fe08c2Ac10a690284EdeBf20A3820479277162",
              "index": 28,
              "group": 1
            },
            {
              "addr": "eth:0xF27805Fd4416cE6cB433c5a63A39B2bCc47a4BF6",
              "index": 29,
              "group": 1
            },
            {
              "addr": "eth:0xfBB1B9F0adFc8696e716CC8AD05a2fEbC1605028",
              "index": 30,
              "group": 4
            },
            {
              "addr": "eth:0xFccD1128fc823dD78e76240dc206a7A26494F271",
              "index": 31,
              "group": 3
            },
            {
              "addr": "eth:0xfE82835E7fa4D39F24B2F96d77267dD5714f884C",
              "index": 32,
              "group": 2
            }
          ],
          "groupQuorums": [
            2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ],
          "groupParents": [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ]
        },
        "getOpCount": 234,
        "getRoot": {
          "root": "0x7961d6261aadc6a0599ec4752aba2c182d415a793fb1a0fac6bb532c7acf210a",
          "validUntil": 1758424658
        },
        "getRootMetadata": {
          "chainId": 1,
          "multiSig": "eth:0xD9757aA52907798d1aF2FDa7A6C0cC733E5aCf7e",
          "preOpCount": 227,
          "postOpCount": 234,
          "overridePreviousRoot": false
        },
        "MAX_NUM_SIGNERS": 200,
        "NUM_GROUPS": 32,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "eth:0xD9757aA52907798d1aF2FDa7A6C0cC733E5aCf7e": "ManyChainMultiSig"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xD9d3d90D729F50794741Da7a2d54d8B12dC3Da72",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1726554263,
      "sinceBlock": 20768518,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 26,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "3016212468291539606",
          "onRamp": "eth:0x2Ee6D394a244bc38b8CFfff6b7BC72D68C5f1Bc5",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 20943942,
          "configDigest": "0x0001fbbc9303453f94fa9dae22a5ffed58775a5c610d068cbf7a3fd26372ec2e"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xD9d3d90D729F50794741Da7a2d54d8B12dC3Da72": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xdaC19bddEf396c222ecDb9109C9E5993a19cd5d5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0xDaC3A82Cc5e7C137bF28e6EF4F68f29D66205ffe",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727976923,
      "sinceBlock": 20886510,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 6591,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "base",
          "onRamp": "eth:0x56b30A0Dcd8dc87Ec08b80FA09502bAB801fa78e",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21041138,
          "configDigest": "0x0001e7d414c133ec584df83a6db021fac7ee42b58e7ec80f646f0658744034f4"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xDaC3A82Cc5e7C137bF28e6EF4F68f29D66205ffe": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "CommitStore",
      "address": "eth:0xDb156E875Ef17dDe70c90a1529023fFf376e627c",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1738785059,
      "sinceBlock": 21782497,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 50,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "5214452172935136222",
          "onRamp": "eth:0x104FA1fdF9cAC6B859C4AE2655d87C98254C0356",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21790644,
          "configDigest": "0x0001cc1b0e9fc3071b118accbf6d3058e5b3ac2cc171c3432e747971b30bafdb"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xDb156E875Ef17dDe70c90a1529023fFf376e627c": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xDB4f5E35E49A2CBF5431B18Bb11CFfB405BC98a3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xdCa0A2341ed5438E06B9982243808A76B9ADD6d0",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xa9fa40d9d26de86fa9869be555593dd3b95cc40442206b8c0725a24d1809cc7f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1708552811,
      "sinceBlock": 19278862,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getOffRamps": [
          "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d",
          "eth:0xdf85c8381954694E74abD07488f452b4c2Cddfb3",
          "eth:0x75a852478792E5a99bc4cdd0aDBd97129B0d9799"
        ],
        "getOnRamps": [
          "eth:0x925228D7B82d883Dde340A55Fe8e6dA56244A22C",
          "eth:0xe2c2AB221AA0b957805f229d2AA57fBE2f4dADf7",
          "eth:0x75a852478792E5a99bc4cdd0aDBd97129B0d9799"
        ],
        "getToken": "eth:0xDcEe70654261AF21C44c093C300eD3Bb97b78192",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.2.0"
      },
      "implementationNames": {
        "eth:0xdCa0A2341ed5438E06B9982243808A76B9ADD6d0": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xdCF6F209d36d93A26B251D2CFE994bEF02954110",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1732563971,
      "sinceBlock": 21266943,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 152,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "3993510008929295315",
          "onRamp": "eth:0x750BFfccf99D1Ad1C38b5FE4Ad83010bbb82E7DF",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21285938,
          "configDigest": "0x00018120eb2325adcd859ef46cf338ffaed7ade794f3997ae31d31531a094ca5"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xdCF6F209d36d93A26B251D2CFE994bEF02954110": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xDE76A096C5eadDdf97Af3fE15ee49d32AEDa9822",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1758047807,
      "sinceBlock": 23377463,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["9335212494177455608"],
        "getToken": "eth:0x356B8d89c1e1239Cbbb9dE4815c39A1474d5BA7D",
        "getTokenDecimals": 6,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xDE76A096C5eadDdf97Af3fE15ee49d32AEDa9822": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xDEA286dc0E01Cb4755650A6CF8d1076b454eA1cb",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xdF5394c57A0570ECe45DE0c0fA2e722A672B9198",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xE062e7D123AC8dF480C56147f911144F55C10f88",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xE0a8ABcf65e6212abFd659d5D857CFbA62a14771",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xe199E1C5201CCDd3792ed902aD3f610Ce5629B59",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x045251441b9a8be4d113c958a46b4fb9063f063773bcc2043d7a9e4b78d4b64b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739964719,
      "sinceBlock": 21880131,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4051577828743386545",
          "15971525489660198786",
          "2442541497099098535",
          "3229138320728879060",
          "11344663589394136015"
        ],
        "getToken": "eth:0xb758cAAe002031a246e91c3aE89f8239E595ab05",
        "getTokenDecimals": 18,
        "owner": "eth:0x1dEE90df6cDd8a7dA3510FB5b0305EFE57239641",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xe199E1C5201CCDd3792ed902aD3f610Ce5629B59": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xe1A8223DAc2aeC3090322674F054D35C240Dc37f",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1738688987,
      "sinceBlock": 21774536,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6433500567565415381", "15971525489660198786"],
        "getToken": "eth:0x3d5F61a4BB385B6D1eB34F47aA790A996f1Eba65",
        "getTokenDecimals": 18,
        "owner": "eth:0x768F3C20ADb66fBbF052eB0401dAD12457391Fa8",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xe1A8223DAc2aeC3090322674F054D35C240Dc37f": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xe26D9c68cF6d284367C5e90EC834C6Ec0051f73C",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742500259,
      "sinceBlock": 22090280,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x3429d03c6F7521AeC737a0BBF2E5ddcef2C3Ae31",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xe26D9c68cF6d284367C5e90EC834C6Ec0051f73C": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xE2F0dad85D504aa046b9F704a426fD6C5493e366",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1711406435,
      "sinceBlock": 19514509,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000001",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000001",
        "getRouter": "eth:0x2E3c68D6d2eDD9881429f0565B88024B5Db10F73",
        "getSupportedChains": ["4949039107694359620", "1673871237479749969"],
        "getToken": "eth:0x49446A0874197839D15395B908328a74ccc96Bc0",
        "owner": "eth:0xf433c2A2D6FACeCDd9Edd7B8cE9cEaaB96F41866",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xE2F0dad85D504aa046b9F704a426fD6C5493e366": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xE2fEfe09E74b921CbbFF229E7cD40009231501CA",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xe3f4B78cdd20f6B8AE8644064656d3E2bF08c4B8",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x5102a591873a3fc0d5e6ad74bf5810128330f615d7af4299c706e5abbeeebc39"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1747339439,
      "sinceBlock": 22490771,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "1673871237479749969",
          "15971525489660198786",
          "124615329519749607"
        ],
        "getToken": "eth:0x24eCd41CE6646ADa857995A682e1a5c42732cAbc",
        "getTokenDecimals": 8,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xe3f4B78cdd20f6B8AE8644064656d3E2bF08c4B8": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xE3fe08c2Ac10a690284EdeBf20A3820479277162",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0xE41677500B425999cB4133950ca3aB79eA7470a6",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1730712935,
      "sinceBlock": 21113425,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 8365,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "6916147374840168594",
          "onRamp": "eth:0x02b60267bceeaFDC45005e0Fa0dd783eFeBc9F1b",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21139957,
          "configDigest": "0x0001594fe2fe534bd31f6ee4ecaa9450eba6f0c182f1705f4c3d0919931d7c22"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xE41677500B425999cB4133950ca3aB79eA7470a6": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xE43f9eD3146d76E627C2504E5140005027992De6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xe4832022873C69E14731fd9436eb7FB9538Ae86F",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729733687,
      "sinceBlock": 21032204,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xa96787DCe9Df7BF7bB033E39777bd108E29D349b",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "15971525489660198786",
          "3734403246176062136",
          "4949039107694359620"
        ],
        "getToken": "eth:0xc2e660C62F72c2ad35AcE6DB78a616215E2F2222",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xe4832022873C69E14731fd9436eb7FB9538Ae86F": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xe48D935e6C9e735463ccCf29a7F11e32bC09136E",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1747945427,
      "sinceBlock": 22540779,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["124615329519749607"],
        "getToken": "eth:0x6982508145454Ce325dDbE47a25d4ec3d2311933",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xe48D935e6C9e735463ccCf29a7F11e32bC09136E": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xe4a9fa29E3d88660577E4ACD9bf88Ef2DF4F8D7C",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1757442611,
      "sinceBlock": 23327341,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "15971525489660198786",
          "4627098889531055414",
          "11344663589394136015"
        ],
        "getToken": "eth:0xBD4CaeE14EFDE2888F167130AF84D613D64618Da",
        "getTokenDecimals": 18,
        "owner": "eth:0xa9A782FE5c4683556FB76e9cF1cb02D22978c22d",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xe4a9fa29E3d88660577E4ACD9bf88Ef2DF4F8D7C": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xE4C51Dc01A4E0aB14c7a7a2ed1655E9CF8A3E698",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ManyChainMultiSig",
      "address": "eth:0xE53289F32c8E690b7173aA33affE9B6B0CB0012F",
      "type": "Contract",
      "template": "transporter/ManyChainMultiSig",
      "sourceHashes": [
        "0x15b33604a10bda5235da68c98629cc8246b96e86c931a23c296ae08f1eb691cb"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["getRootMetadata", "getRoot", "getOpCount"],
      "sinceTimestamp": 1689096911,
      "sinceBlock": 17671890,
      "values": {
        "$immutable": true,
        "getConfig": {
          "signers": [
            {
              "addr": "eth:0x013D4A675Fd02359c3c35Abc514dafd97B127e34",
              "index": 0,
              "group": 4
            },
            {
              "addr": "eth:0x0D2730AD6D62A49907Fb9273cD4a59D1092cb472",
              "index": 1,
              "group": 4
            },
            {
              "addr": "eth:0x14a8f3B302Bbfa7F2f2AC2F4515548370bc7bAdC",
              "index": 2,
              "group": 4
            },
            {
              "addr": "eth:0x1E2cDb5Fe0461C3688E090B879fd1156ed32a887",
              "index": 3,
              "group": 2
            },
            {
              "addr": "eth:0x29c5f7aCfDea3F48486b282aF0FA797b0F04D845",
              "index": 4,
              "group": 1
            },
            {
              "addr": "eth:0x34e42200901133bdceb1195f2c5241cb03D06274",
              "index": 5,
              "group": 1
            },
            {
              "addr": "eth:0x3Ce065c714810e0b2a85Ed71f1582038823c75d8",
              "index": 6,
              "group": 1
            },
            {
              "addr": "eth:0x41eAdbc688797a02bfaBE48472995833489ce69D",
              "index": 7,
              "group": 1
            },
            {
              "addr": "eth:0x4833c0fcE02C92fF8D92903BAB14827ff1cBD4bf",
              "index": 8,
              "group": 1
            },
            {
              "addr": "eth:0x54081602645704EE2B76FEe30E8B4d4F2D82d4E0",
              "index": 9,
              "group": 2
            },
            {
              "addr": "eth:0x56B167deCD5fC4E3Bbc07B3B4e1F30e74534F9dd",
              "index": 10,
              "group": 4
            },
            {
              "addr": "eth:0x5AA4D76f0CD8ea04fB3C4C4b771A0B9E03dC776C",
              "index": 11,
              "group": 3
            },
            {
              "addr": "eth:0x60Fead3745461393F9298228E19d6D720Db89F2e",
              "index": 12,
              "group": 3
            },
            {
              "addr": "eth:0x615B9b28B754Afd1fD03EbaB2BAE8b14A6Dc94Ee",
              "index": 13,
              "group": 3
            },
            {
              "addr": "eth:0x6943b0B1C63d3226B44853eEe8C2Bb6360fF3226",
              "index": 14,
              "group": 2
            },
            {
              "addr": "eth:0x6bfBf6BC4bc5CD20768dAA6F58f0743bAFf2e5f4",
              "index": 15,
              "group": 4
            },
            {
              "addr": "eth:0x70f498A0AD8a17fC853fcb8eDbE31Fbce71173E6",
              "index": 16,
              "group": 2
            },
            {
              "addr": "eth:0x8E0e08E8cbc324310550E195383b7aC200726639",
              "index": 17,
              "group": 2
            },
            {
              "addr": "eth:0x9B391a5179BdC59af9B3a49423Fe8F10b74aF3c6",
              "index": 18,
              "group": 3
            },
            {
              "addr": "eth:0xa42c8570771240D1e2F3211064a7C7472Cc05b7D",
              "index": 19,
              "group": 4
            },
            {
              "addr": "eth:0xa53a14c85965734C875C91A6a145CFB5ff4624dD",
              "index": 20,
              "group": 1
            },
            {
              "addr": "eth:0xB89FC4d62344a77dD09159390f9283ae9e5150F2",
              "index": 21,
              "group": 2
            },
            {
              "addr": "eth:0xb8C1688807788A7F3FFc3Fb6F0c19E06889c051F",
              "index": 22,
              "group": 2
            },
            {
              "addr": "eth:0xBA778eaBa9E592B644344bC5fe9D0a89d5c24009",
              "index": 23,
              "group": 2
            },
            {
              "addr": "eth:0xBbe4467c7151B810eC8FdB281F6fB7F0cD8A7b65",
              "index": 24,
              "group": 2
            },
            {
              "addr": "eth:0xCD125c3a44668cD7abab854fDE28233336511667",
              "index": 25,
              "group": 1
            },
            {
              "addr": "eth:0xD8B2263665600f2742425D451e91FEaf642bac30",
              "index": 26,
              "group": 3
            },
            {
              "addr": "eth:0xE062e7D123AC8dF480C56147f911144F55C10f88",
              "index": 27,
              "group": 1
            },
            {
              "addr": "eth:0xE3fe08c2Ac10a690284EdeBf20A3820479277162",
              "index": 28,
              "group": 1
            },
            {
              "addr": "eth:0xF27805Fd4416cE6cB433c5a63A39B2bCc47a4BF6",
              "index": 29,
              "group": 1
            },
            {
              "addr": "eth:0xfBB1B9F0adFc8696e716CC8AD05a2fEbC1605028",
              "index": 30,
              "group": 4
            },
            {
              "addr": "eth:0xFccD1128fc823dD78e76240dc206a7A26494F271",
              "index": 31,
              "group": 3
            },
            {
              "addr": "eth:0xfE82835E7fa4D39F24B2F96d77267dD5714f884C",
              "index": 32,
              "group": 2
            }
          ],
          "groupQuorums": [
            2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ],
          "groupParents": [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0
          ]
        },
        "getOpCount": 2580,
        "getRoot": {
          "root": "0xf2511a17d5674dd0bbaed46d101ed39f53e8e2b366218b98e1ce696af397b0ed",
          "validUntil": 1758213148
        },
        "getRootMetadata": {
          "chainId": 1,
          "multiSig": "eth:0xE53289F32c8E690b7173aA33affE9B6B0CB0012F",
          "preOpCount": 2575,
          "postOpCount": 2580,
          "overridePreviousRoot": false
        },
        "MAX_NUM_SIGNERS": 200,
        "NUM_GROUPS": 32,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "eth:0xE53289F32c8E690b7173aA33affE9B6B0CB0012F": "ManyChainMultiSig"
      }
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0xE58eDBb7Fdd5f2DD5cfAD2667e5D570E1a0a6A84",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729738139,
      "sinceBlock": 21032573,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x2dd317E7e36544C5222818F228d607c209517470",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["15971525489660198786", "4949039107694359620"],
        "getToken": "eth:0x1c22531AA9747d76fFF8F0A43b37954ca67d28e0",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xE58eDBb7Fdd5f2DD5cfAD2667e5D570E1a0a6A84": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xE5bb39230Bf097a0C322440B9e839854AD77E85a",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1752023495,
      "sinceBlock": 22878267,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "6433500567565415381"],
        "getToken": "eth:0x6bd3606B8c5718C34504bE5e305D59684A4B2ad2",
        "getTokenDecimals": 18,
        "owner": "eth:0xb0699D347a64870ec9A7fEd63055436040983af2",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xE5bb39230Bf097a0C322440B9e839854AD77E85a": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xe69a1e9c2A0931D31593B201BD0CD5Bd39692e70",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0xE727F7975bEF908C49D0591724669F05F7dAd811",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729692911,
      "sinceBlock": 21028821,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x44622f4604353E4815A4212d5a3dD137A1C7FF14",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015", "4949039107694359620"],
        "getToken": "eth:0xa7a0B3Fe94121E366D774d60D075F6386F750884",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xE727F7975bEF908C49D0591724669F05F7dAd811": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "name": "RMNRemote",
      "address": "eth:0xe8464c353210Cc398A45dB2454FBc5BCd25fFf20",
      "type": "Contract",
      "sourceHashes": [
        "0x3664618ea06cf10d0f454add5b6c58096ae0a6b3f86d41ffaf228442727fd581"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1744752923,
      "sinceBlock": 22277104,
      "values": {
        "$immutable": true,
        "getCursedSubjects": [],
        "getLocalChainSelector": "5009297550715157269",
        "getReportDigestHeader": "0x9651943783dbf81935a60e98f218a9d9b5b28823fb2228bbd91320d632facf53",
        "getVersionedConfig": {
          "version": 1,
          "config": {
            "rmnHomeContractConfigDigest": "0x000b606aed917bf65c4bbdce1a5b061c49e0135e624bdb29182928d11b2d9919",
            "signers": [
              {
                "onchainPublicKey": "eth:0x0100000000000000000000000000000000000000",
                "nodeIndex": 0
              }
            ],
            "fSign": 0
          }
        },
        "isCursed": false,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "RMNRemote 1.6.0"
      },
      "implementationNames": {
        "eth:0xe8464c353210Cc398A45dB2454FBc5BCd25fFf20": "RMNRemote"
      }
    },
    {
      "address": "eth:0xe8673c392bb781Ad26C214078599f34bdf97Fe50",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xe8784c29c583C52FA89144b9e5DD91Df2a1C2587",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPoolAndProxy",
      "address": "eth:0xe9bFB4fe6E403985c5f2b968f883A9590Aac54aC",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xef6480951f06efac6ba95f0530ca0340d138c7208111550c58acbd6481520d79"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729693139,
      "sinceBlock": 21028840,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xd72F7010f0Fa621aB0869e61e9bb4e3cC887c66c",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "3734403246176062136",
          "4949039107694359620",
          "7264351850409363825",
          "11344663589394136015",
          "15971525489660198786",
          "1673871237479749969"
        ],
        "getToken": "eth:0xAe770d24ec1580A13392E0B71067571351029203",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xe9bFB4fe6E403985c5f2b968f883A9590Aac54aC": "BurnMintTokenPoolAndProxy"
      }
    },
    {
      "address": "eth:0xEa8112530cA10945C2aA976f8F615582Af9B70fa",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xEa9c3dB69C9eE60FB0B06d1A1c9077B16F2D7C82",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1734107951,
      "sinceBlock": 21394838,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4949039107694359620",
          "3734403246176062136",
          "15971525489660198786",
          "4051577828743386545",
          "13204309965629103672",
          "4627098889531055414",
          "1346049177634351622",
          "465200170687744372",
          "1556008542357238666",
          "4411394078118774322",
          "8805746078405598895",
          "7264351850409363825",
          "6422105447186081193",
          "17198166215261833993",
          "5142893604156789321",
          "3719320017875267166",
          "1562403441176082196",
          "6433500567565415381"
        ],
        "getToken": "eth:0x27C70Cd1946795B66be9d954418546998b546634",
        "getTokenDecimals": 18,
        "owner": "eth:0xbF6512B1bBEeC3a673Feff43C0A182C2b28DFD9f",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xEa9c3dB69C9eE60FB0B06d1A1c9077B16F2D7C82": "LockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xeAD31B98179e2637Bb052a970Ac92Cbb2E26461d",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729698695,
      "sinceBlock": 21029301,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0x8291a8E8dCF429e2FA7d032bF3E583ee959F3B06",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["3734403246176062136", "4949039107694359620"],
        "getToken": "eth:0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xeAD31B98179e2637Bb052a970Ac92Cbb2E26461d": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xeaE89E53B8317CaB04165F5323285252D5669B73",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x6a270bc5c82591f8a8adb6765201cc65b04ed37a9509b2703970f74d1ee9534f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1707769475,
      "sinceBlock": 19214308,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getOffRamps": [
          "eth:0xeFC4a18af59398FF23bfe7325F2401aD44286F4d",
          "eth:0xdf85c8381954694E74abD07488f452b4c2Cddfb3",
          "eth:0xCE8342b8eFd4D804B97Df92bC6bb930099098fDE"
        ],
        "getOnRamps": [
          "eth:0x925228D7B82d883Dde340A55Fe8e6dA56244A22C",
          "eth:0xe2c2AB221AA0b957805f229d2AA57fBE2f4dADf7",
          "eth:0xCE8342b8eFd4D804B97Df92bC6bb930099098fDE"
        ],
        "getToken": "eth:0x98C6616F1CC0D3E938A16200830DD55663dd7DD3",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.2.0"
      },
      "implementationNames": {
        "eth:0xeaE89E53B8317CaB04165F5323285252D5669B73": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xEcf61D6fAA3B9faE7195AF3bc9891450C1733f78",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1749538403,
      "sinceBlock": 22672496,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0xFa2B947eEc368f42195f24F36d2aF29f7c24CeC2",
        "getTokenDecimals": 18,
        "owner": "eth:0x1E482B60bf19Cb1cc859389e0eA3DED153f16Bd7",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xEcf61D6fAA3B9faE7195AF3bc9891450C1733f78": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xEcfec1595D273A71aC94370eA1C62480569dCAFf",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736842523,
      "sinceBlock": 21621463,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0xdBDE08d475bd50E2D1A6af34c7b10DD430D8396e",
        "getTokenDecimals": 18,
        "owner": "eth:0x236A1B1b0c0653b8EfA446edF58bEF4278292DC0",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xEcfec1595D273A71aC94370eA1C62480569dCAFf": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xEDe803B34B30C8De6a128DE57B855263Cd8C55bc",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739651495,
      "sinceBlock": 21854221,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620", "4627098889531055414"],
        "getToken": "eth:0xBB22d59B73D7a6F3A8a83A214BECc67Eb3b511fE",
        "getTokenDecimals": 18,
        "owner": "eth:0xA4539A9ecE2A653AfC7C8DD49d27dd079ed19d00",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xEDe803B34B30C8De6a128DE57B855263Cd8C55bc": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xEeBBa578621261D92FaFa6eE755eF80635703C4B",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1736366063,
      "sinceBlock": 21581980,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545"],
        "getToken": "eth:0x795D777694eAc26e2e4A079674Ec2fDAEB799ccB",
        "getTokenDecimals": 18,
        "owner": "eth:0x17D8a409fE2ceF2d3808bcB61F14aBEFfc28876e",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xEeBBa578621261D92FaFa6eE755eF80635703C4B": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xEfd5fEFEdE55B5C41B8fa0d171a79ba5BeadD2Aa",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x5102a591873a3fc0d5e6ad74bf5810128330f615d7af4299c706e5abbeeebc39"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745850599,
      "sinceBlock": 22368163,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x3237c0D7B58BEc8Dc17F00103B784Bd6678f789E",
        "getSupportedChains": [
          "11344663589394136015",
          "4949039107694359620",
          "15971525489660198786",
          "124615329519749607"
        ],
        "getToken": "eth:0x313F663E79ef202251a28F0252c254842D5ABC6a",
        "getTokenDecimals": 18,
        "owner": "eth:0x062f05CD6c835677B05a8658A351969476861316",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xEfd5fEFEdE55B5C41B8fa0d171a79ba5BeadD2Aa": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xf04D4Aa2e302cD4995D8cf8e84727c5B441e85ce",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xf05a207442f14E446b0e32b12D2043bfc68Cb1C9",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1747408355,
      "sinceBlock": 22496443,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "15971525489660198786",
          "4949039107694359620",
          "6433500567565415381",
          "3734403246176062136",
          "13204309965629103672",
          "2442541497099098535",
          "1294465214383781161",
          "1673871237479749969"
        ],
        "getToken": "eth:0x6440f144b7e50D6a8439336510312d2F54beB01D",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xf05a207442f14E446b0e32b12D2043bfc68Cb1C9": "LockReleaseTokenPool"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "eth:0xF0fCdb037718E1B2b52f109Ae776713F9c1f730c",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1687284071,
      "sinceBlock": 17522557,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["eth:0x3b870Ea07b6511475Fa2422eA9DaA74C55Db85Be"],
        "$threshold": 1,
        "domainSeparator": "0x98e256868d7234686fe51735688f4df9962565d7112cbb7788564a5125133a2c",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 20,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0xF0fCdb037718E1B2b52f109Ae776713F9c1f730c": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xF191733ea5be14E4a5f381a3c375A4F3F8fd4793",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1745418527,
      "sinceBlock": 22332302,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 59,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "3555797439612589184",
          "onRamp": "eth:0xb38f57CFa0255c708858ee94D2719EAaBBa82c35",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 5,
          "blockNumber": 22615617,
          "configDigest": "0x0001b7e841f3be09595d6cbe6e20e315e175d993b42938fa1ea675b01a24c4c7"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xF191733ea5be14E4a5f381a3c375A4F3F8fd4793": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xf1D0D8f9309dD48Ce46110A474C11908e3B49EA3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xF27805Fd4416cE6cB433c5a63A39B2bCc47a4BF6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xF31EA507475B9c4be40241Dc25992Fda7aA20453",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742914331,
      "sinceBlock": 22124632,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["1673871237479749969", "1294465214383781161"],
        "getToken": "eth:0x1F236288F9f85E41A238959a43F2A8AC4B647952",
        "getTokenDecimals": 18,
        "owner": "eth:0x78266EAb20Ff1483a926F183B3E5A6C84f87D54c",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xF31EA507475B9c4be40241Dc25992Fda7aA20453": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xf33341f2CE329B5DbCa7F9a0986Cff40d050440a",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742498723,
      "sinceBlock": 22090153,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0xBB0E17EF65F82Ab018d8EDd776e8DD940327B28b",
        "getTokenDecimals": 18,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xf33341f2CE329B5DbCa7F9a0986Cff40d050440a": "LockReleaseTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xf3e2Ccbb7d36c597d1ee4b451C4B46B94FC64239",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745257619,
      "sinceBlock": 22318964,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "11344663589394136015",
          "4051577828743386545",
          "6433500567565415381"
        ],
        "getToken": "eth:0x619d506AF6554f9e38c722E9067369AC44773Cc0",
        "getTokenDecimals": 18,
        "owner": "eth:0x10163f09E2198b5e80DfDC33312348400bfF9203",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xf3e2Ccbb7d36c597d1ee4b451C4B46B94FC64239": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xF4208675b84E678d0d01528fA97634e2B0873Fa6",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xe451e1871ad50ebee72cae713092826419b4b4727eda7ad7d04c7ceab66ec42d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1742149703,
      "sinceBlock": 22061234,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x8eD97a637A790Be1feff5e888d43629dc05408F6",
        "getTokenDecimals": 18,
        "owner": "eth:0x2006d123E3578e4b40C072c1FC18ae099db1d818",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xF4208675b84E678d0d01528fA97634e2B0873Fa6": "LockReleaseTokenPool"
      }
    },
    {
      "address": "eth:0xF487000Fe6FE14Fd5E7E86514219994eCEaB6bA7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xf5224EfD7Ea9edFa6b6e06964084b92426DCdE99",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4c921a754523a7496c7a7b47d0a0b6bd773d71028cf77f6301757bdcaf3c469e"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1717695479,
      "sinceBlock": 20034323,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x08B4058F16D243C977ea1fe91B20Af31057b5aBb",
        "getSupportedChains": [
          "4949039107694359620",
          "3734403246176062136",
          "15971525489660198786"
        ],
        "getToken": "eth:0x20157DBAbb84e3BBFE68C349d0d44E48AE7B5AD2",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "BurnMintTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xf5224EfD7Ea9edFa6b6e06964084b92426DCdE99": "BurnMintTokenPool"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xF56dcA7a981a53ec2EbeF2040800F04206021583",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1745302799,
      "sinceBlock": 22322709,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4051577828743386545", "11344663589394136015"],
        "getToken": "eth:0x958d200A49F4765f771C61d2649965e26277fB64",
        "getTokenDecimals": 18,
        "owner": "eth:0x10163f09E2198b5e80DfDC33312348400bfF9203",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xF56dcA7a981a53ec2EbeF2040800F04206021583": "BurnMintTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xF57fc17729Bd2bcD1e1342917B160eB4b69EE89A",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729733879,
      "sinceBlock": 21032219,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xa35304aA2D659e5E06A768fEc4Af3B443916C215",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": [
          "4949039107694359620",
          "15971525489660198786",
          "3734403246176062136"
        ],
        "getToken": "eth:0x08d23468A467d2bb86FaE0e32F247A26C7E2e994",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xF57fc17729Bd2bcD1e1342917B160eB4b69EE89A": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xF6403CF6E954a43699097322e0867C63d653C2D0",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x50806d752abf8398d94214551cb0e69207aa09e509de07ebba38612a12dc004f"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1754494955,
      "sinceBlock": 23082995,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0xB351EC0FEaF4B99FdFD36b484d9EC90D0422493D",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["4949039107694359620"],
        "getToken": "eth:0x911D86C72155c33993d594B0Ec7E6206B4C803da",
        "getTokenDecimals": 18,
        "owner": "eth:0xB351EC0FEaF4B99FdFD36b484d9EC90D0422493D",
        "typeAndVersion": "LockReleaseTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xF6403CF6E954a43699097322e0867C63d653C2D0": "LockReleaseTokenPool"
      }
    },
    {
      "name": "SiloedLockReleaseTokenPool",
      "address": "eth:0xF6698064776D521b0AFE469F30C40B39B4875b93",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x9028114a8dae289d45ca7a9ec2b46c04b63f9ed32d956c08dc09d650f2a7af19"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739932499,
      "sinceBlock": 21877467,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6916147374840168594"],
        "getToken": "eth:0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",
        "getTokenDecimals": 8,
        "getUnsiloedLiquidity": 0,
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "SiloedLockReleaseTokenPool 1.6.0"
      },
      "implementationNames": {
        "eth:0xF6698064776D521b0AFE469F30C40B39B4875b93": "SiloedLockReleaseTokenPool"
      }
    },
    {
      "name": "LockReleaseTokenPoolAndProxy",
      "address": "eth:0xF6c88f0933126c2e2CDb060910165aA4BfC11B99",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0xdec3a533c2d2004adafb78bf9d2e3f16e42a1c061ac62c31795c3e0bd006426b"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1729700099,
      "sinceBlock": 21029418,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getPreviousPool": "eth:0xa904B9343632A6ca4f4a1b0C9eFa011cb319d000",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["7264351850409363825"],
        "getToken": "eth:0x83F20F44975D03b1b09e64809B757c47f942BEeA",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPoolAndProxy 1.5.0"
      },
      "implementationNames": {
        "eth:0xF6c88f0933126c2e2CDb060910165aA4BfC11B99": "LockReleaseTokenPoolAndProxy"
      }
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xf76A0c47900ca2dD1874AB4Dc4049810E919684d",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1757610575,
      "sinceBlock": 23341220,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["2442541497099098535"],
        "getToken": "eth:0x319053B625e598994Dd1179948771a4C2f66b873",
        "getTokenDecimals": 18,
        "owner": "eth:0x18A82c968b992D28D4D812920eB7b4305306f8F1",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xf76A0c47900ca2dD1874AB4Dc4049810E919684d": "BurnMintTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xf7B343A17445F175f2Dd9f5CB29BAf0a8dE75ed3",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727977991,
      "sinceBlock": 20886598,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 7402,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "arbitrum",
          "onRamp": "eth:0x67761742ac8A21Ec4D76CA18cbd701e5A6F3Bef3",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21041129,
          "configDigest": "0x0001cc4f112c65988d9a3dcfc6d8c7d0c3833bd1e6ea452c5cc7ee7ef9af5280"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xf7B343A17445F175f2Dd9f5CB29BAf0a8dE75ed3": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "CommitStore",
      "address": "eth:0xf7D68CcC92B836316C40B24ea77F6805DcBb8F02",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1740034643,
      "sinceBlock": 21885925,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 96,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "3229138320728879060",
          "onRamp": "eth:0x6480de6257c3b0Bc249f2653551964693AA914c0",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 21919294,
          "configDigest": "0x0001d738945f87a677459e43c5861935b548e763be0134d6eaadcce64f3684b9"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xf7D68CcC92B836316C40B24ea77F6805DcBb8F02": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "LockReleaseTokenPool",
      "address": "eth:0xF84Bf7D614F3138D805186C497995d4eD315fA72",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x4f46bb4ccf89fb70d097b085ff91815ba6ed930b5ce6b451f0dbf068006eeab2"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1720823027,
      "sinceBlock": 20293389,
      "values": {
        "$immutable": true,
        "canAcceptLiquidity": false,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getArmProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getLockReleaseInterfaceId": "0x98a47177",
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRebalancer": "eth:0x0000000000000000000000000000000000000000",
        "getRouter": "eth:0x45af366C76a8C8f18806A8C404FE3E3bbA4F8AA3",
        "getSupportedChains": [
          "3734403246176062136",
          "4949039107694359620",
          "15971525489660198786"
        ],
        "getToken": "eth:0x8C0D76C9B18779665475F3E212D9Ca1Ed6A1A0e6",
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "typeAndVersion": "LockReleaseTokenPool 1.4.0"
      },
      "implementationNames": {
        "eth:0xF84Bf7D614F3138D805186C497995d4eD315fA72": "LockReleaseTokenPool"
      }
    },
    {
      "name": "CommitStore",
      "address": "eth:0xFa94e57b12b6C45A3aD3CBb9451ba99a997eb210",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1727715311,
      "sinceBlock": 20864800,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 295,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "6422105447186081193",
          "onRamp": "eth:0xc422a9AE3341dDDa7296F55D42C954B2faA03013",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 2,
          "blockNumber": 20943954,
          "configDigest": "0x0001a8dc51b9e54e02ca930cf0b443788bc071598eeef5acba62c033cb0018c6"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xFa94e57b12b6C45A3aD3CBb9451ba99a997eb210": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "name": "CommitStore",
      "address": "eth:0xfacFe88fdf03Ab7D30d6CA45A070Df7C54551fd6",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1741926743,
      "sinceBlock": 22042751,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 69,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "14894068710063348487",
          "onRamp": "eth:0xe8673c392bb781Ad26C214078599f34bdf97Fe50",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22091124,
          "configDigest": "0x000174390929f63948f5ea0f0beebee8387b7206953c7ac185f62fd0547bb42f"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xfacFe88fdf03Ab7D30d6CA45A070Df7C54551fd6": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xfBB1B9F0adFc8696e716CC8AD05a2fEbC1605028",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xFccD1128fc823dD78e76240dc206a7A26494F271",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xfCEEf7bD8F46E99D9E38942447b91c6DE81cF500",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1739209427,
      "sinceBlock": 21817688,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["11344663589394136015"],
        "getToken": "eth:0xdBd0085079aCab0Cd8ac77bE921eCEEbd611Ba0C",
        "getTokenDecimals": 18,
        "owner": "eth:0x59f44895CD4088817EB5f5cf913D23B81A76974d",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xfCEEf7bD8F46E99D9E38942447b91c6DE81cF500": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xFd77c53AA4eF0E3C01f5Ac012BF7Cc7A3ECf5168",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CommitStore",
      "address": "eth:0xFE73BccC5b88D22969099EBb4E2eb5e19eFb0165",
      "type": "Contract",
      "template": "transporter/CommitStoreV1",
      "sourceHashes": [
        "0x1187294715ed2abab47b9649c53548ef616fede9edb55b7fc7e25915524623a5"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getExpectedNextSequenceNumber",
        "getLatestPriceEpochAndRound"
      ],
      "sinceTimestamp": 1746536867,
      "sinceBlock": 22424859,
      "values": {
        "$immutable": true,
        "getDynamicConfig": {
          "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad"
        },
        "getExpectedNextSequenceNumber": 60,
        "getLatestPriceEpochAndRound": 0,
        "getStaticConfig": {
          "chainSelector": "ethereum",
          "sourceChainSelector": "11964252391146578476",
          "onRamp": "eth:0x85a6Dc1E19EA051C0DA93290d030F3eDBD99B159",
          "armProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81"
        },
        "isUnpausedAndNotCursed": true,
        "latestConfigDetails": {
          "configCount": 3,
          "blockNumber": 22615586,
          "configDigest": "0x000138bb15c447c1b1ddd8fbf8c49e5884626bc328e95645853fa0df3e830373"
        },
        "latestConfigDigestAndEpoch": {
          "scanLogs": true,
          "configDigest": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "epoch": 0
        },
        "owner": "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449",
        "paused": false,
        "priceRegistry": "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad",
        "typeAndVersion": "CommitStore 1.5.0"
      },
      "implementationNames": {
        "eth:0xFE73BccC5b88D22969099EBb4E2eb5e19eFb0165": "CommitStore"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "465200170687744372": "gnosis",
            "5009297550715157269": "ethereum",
            "3734403246176062136": "optimism",
            "4949039107694359620": "arbitrum",
            "4051577828743386545": "polygon",
            "6433500567565415381": "avalanche",
            "5142893604156789321": "wemix",
            "3719320017875267166": "kroma",
            "1346049177634351622": "celo",
            "7264351850409363825": "mode",
            "11344663589394136015": "bnb",
            "15971525489660198786": "base",
            "4411394078118774322": "blast",
            "8805746078405598895": "metis"
          }
        }
      ]
    },
    {
      "address": "eth:0xfE82835E7fa4D39F24B2F96d77267dD5714f884C",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BurnMintTokenPool",
      "address": "eth:0xfF48E1852F90cE91a698eE1A74cC8b8911479bF9",
      "type": "Contract",
      "template": "transporter/TokenPool",
      "sourceHashes": [
        "0x13a54b9fa6dcbabb8da7f4aacda0d48bce37bb2a77380e13585e1160245e0cf4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "getOnRamps",
        "getCurrentBridgedAmount",
        "getUnsiloedLiquidity",
        "getLockedTokens"
      ],
      "sinceTimestamp": 1751682743,
      "sinceBlock": 22850053,
      "values": {
        "$immutable": true,
        "getAllowList": [],
        "getAllowListEnabled": false,
        "getRateLimitAdmin": "eth:0x0000000000000000000000000000000000000000",
        "getRmnProxy": "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81",
        "getRouter": "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D",
        "getSupportedChains": ["6433500567565415381", "3577778157919314504"],
        "getToken": "eth:0x6682C1afdA0a1De8051eA7C76CA8a40cd598E6b6",
        "getTokenDecimals": 18,
        "owner": "eth:0x948465e941e687Cf6f0bEE0Fd5f3B0cc8DCDc223",
        "typeAndVersion": "BurnMintTokenPool 1.5.1"
      },
      "implementationNames": {
        "eth:0xfF48E1852F90cE91a698eE1A74cC8b8911479bF9": "BurnMintTokenPool"
      }
    },
    {
      "address": "eth:0xFFb91C736e1BCB2E06188198D70D790b25990783",
      "type": "EOA",
      "proxyType": "EOA"
    }
  ],
  "abis": {
    "eth:0x003491Bdfe15179aC2cEfEf9F5D0e235F096C3b0": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x011Ef1fe26D20077A59F38e9Ad155b166AD87D40": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error ChainNotSiloed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity(uint256 availableLiquidity, uint256 requestedAmount)",
      "error InvalidChainSelector(uint64 remoteChainSelector)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityAmountCannotBeZero()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ChainSiloed(uint64 remoteChainSelector, address rebalancer)",
      "event ChainUnsiloed(uint64 remoteChainSelector, uint256 amountUnsiloed)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(uint64 remoteChainSelector, address indexed provider, uint256 amount)",
      "event LiquidityRemoved(uint64 remoteChainSelector, address indexed remover, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event SiloRebalancerSet(uint64 indexed remoteChainSelector, address oldRebalancer, address newRebalancer)",
      "event TokensConsumed(uint256 tokens)",
      "event UnsiloedRebalancerSet(address oldRebalancer, address newRebalancer)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getAvailableTokens(uint64 remoteChainSelector) view returns (uint256 lockedTokens)",
      "function getChainRebalancer(uint64 remoteChainSelector) view returns (address)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function getUnsiloedLiquidity() view returns (uint256)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSiloed(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function provideSiloedLiquidity(uint64 remoteChainSelector, uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address newRebalancer)",
      "function setRouter(address newRouter)",
      "function setSiloRebalancer(uint64 remoteChainSelector, address newRebalancer)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function updateSiloDesignations(uint64[] removes, tuple(uint64 remoteChainSelector, address rebalancer)[] adds)",
      "function withdrawLiquidity(uint256 amount)",
      "function withdrawSiloedLiquidity(uint64 remoteChainSelector, uint256 amount)"
    ],
    "eth:0x01346721418045A6c07b71052e452eF8615e9084": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x0238d2C272f17CF11AEDB08CDE515d56ED25E2E4": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x0243c9066B75Cb9Abd97b08a7AAeEDbaeC9D717e": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x03D19033AdA17750D5BC2d8E325337D0748F9FEF": [
      "constructor(address tokenMessenger, address cctpMessageTransmitterProxy, address token, address[] allowlist, address rmnProxy, address router, address previousPool)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error ExistingMigrationProposal()",
      "error InvalidChainSelector()",
      "error InvalidConfig()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidDestinationDomain(uint32 expected, uint32 got)",
      "error InvalidDomain(tuple(bytes32 allowedCaller, bytes32 mintRecipient, uint32 domainIdentifier, uint64 destChainSelector, bool enabled) domain)",
      "error InvalidMessageLength(uint256 length)",
      "error InvalidMessageVersion(uint32 version)",
      "error InvalidNonce(uint64 expected, uint64 got)",
      "error InvalidPreviousPool()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidReceiver(bytes receiver)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourceDomain(uint32 expected, uint32 got)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error InvalidTokenMessengerVersion(uint32 version)",
      "error InvalidTransmitterInProxy()",
      "error LanePausedForCCTPMigration(uint64 remoteChainSelector)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NoMigrationProposalPending()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error SenderNotAllowed(address sender)",
      "error TokenLockingNotAllowedAfterMigration(uint64 remoteChainSelector)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error UnknownDomain(uint64 domain)",
      "error UnlockingUSDCFailed()",
      "error ZeroAddressNotAllowed()",
      "error onlyCircle()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event CCTPMigrationCancelled(uint64 existingProposalSelector)",
      "event CCTPMigrationExecuted(uint64 remoteChainSelector, uint256 USDCBurned)",
      "event CCTPMigrationProposed(uint64 remoteChainSelector)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event CircleMigratorAddressSet(address migratorAddress)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event ConfigSet(address tokenMessenger)",
      "event DomainsSet(tuple(bytes32 allowedCaller, bytes32 mintRecipient, uint32 domainIdentifier, uint64 destChainSelector, bool enabled)[])",
      "event InboundRateLimitConsumed(uint64 indexed remoteChainSelector, address token, uint256 amount)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityProviderSet(address indexed oldProvider, address indexed newProvider, uint64 indexed remoteChainSelector)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint64 indexed remoteChainSelector, uint256 amount)",
      "event LockReleaseDisabled(uint64 indexed remoteChainSelector)",
      "event LockReleaseEnabled(uint64 indexed remoteChainSelector)",
      "event LockedOrBurned(uint64 indexed remoteChainSelector, address token, address sender, uint256 amount)",
      "event OutboundRateLimitConsumed(uint64 indexed remoteChainSelector, address token, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event ReleasedOrMinted(uint64 indexed remoteChainSelector, address token, address sender, address recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensExcludedFromBurn(uint64 indexed remoteChainSelector, uint256 amount, uint256 burnableAmountAfterExclusion)",
      "function SUPPORTED_USDC_VERSION() view returns (uint32)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function burnLockedUSDC()",
      "function cancelExistingCCTPMigrationProposal()",
      "function excludeTokensFromBurn(uint64 remoteChainSelector, uint256 amount)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentProposedCCTPChainMigration() view returns (uint64)",
      "function getDomain(uint64 chainSelector) view returns (tuple(bytes32 allowedCaller, bytes32 mintRecipient, uint32 domainIdentifier, bool enabled))",
      "function getExcludedTokensByChain(uint64 remoteChainSelector) view returns (uint256)",
      "function getLiquidityProvider(uint64 remoteChainSelector) view returns (address)",
      "function getLockedTokensForChain(uint64 remoteChainSelector) view returns (uint256)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function i_localDomainIdentifier() view returns (uint32)",
      "function i_messageTransmitterProxy() view returns (address)",
      "function i_previousPool() view returns (address)",
      "function i_tokenMessenger() view returns (address)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function proposeCCTPMigration(uint64 remoteChainSelector)",
      "function provideLiquidity(uint64 remoteChainSelector, uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 sourceDenominatedAmount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setCircleMigratorAddress(address migrator)",
      "function setDomains(tuple(bytes32 allowedCaller, bytes32 mintRecipient, uint32 domainIdentifier, uint64 destChainSelector, bool enabled)[] domains)",
      "function setLiquidityProvider(uint64 remoteChainSelector, address liquidityProvider)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function shouldUseLockRelease(uint64 remoteChainSelector) view returns (bool)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function updateChainSelectorMechanisms(uint64[] removes, uint64[] adds)",
      "function withdrawLiquidity(uint64 remoteChainSelector, uint256 amount)"
    ],
    "eth:0x03Ed768E002165FE0E4DE9C6D6162DE973E19B5A": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x0428dF02c581E605AABF83005b427b1561b587De": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x047204D42d93a6471F7c9Ec94292B4B00E8e0786": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x04db9b1D7f52cB288b95B4934a1fA688F6d0cBc3": [
      "constructor(address lockbox, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLockboxBalance(uint256 lockboxBalance, uint256 localAmount)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event DepositedAndBurned(address indexed sender, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event MintedAndWithdrawn(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockbox() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function getXERC20() view returns (address)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x0549475Ff447CBC0CfF51CB0719E0AA2dAF4eDC8": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x06179f7C1be40863405f374E7f5F8806c728660A": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "eth:0x06f9817a91595E1B595F789Fb91529e8651da9B8": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x072C7E09981B1c2073e95D3c0e0CF8B90BA4B099": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x0897316DFE7141DB1E182551c3e8077cf5dd9695": [
      "constructor(address _singleton)"
    ],
    "eth:0x08B4058F16D243C977ea1fe91B20Af31057b5aBb": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x0a02473E57902fD7764E6E952E2962763045B404": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x0A34677DafCd28916aAc0b22123142EFaBf700Fa": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x0a992d191DEeC32aFe36203Ad87D7d289a738F81": [
      "constructor(uint32 _localDomain, address _attester, uint32 _maxMessageBodySize, uint32 _version)",
      "event AttesterDisabled(address indexed attester)",
      "event AttesterEnabled(address indexed attester)",
      "event AttesterManagerUpdated(address indexed previousAttesterManager, address indexed newAttesterManager)",
      "event MaxMessageBodySizeUpdated(uint256 newMaxMessageBodySize)",
      "event MessageReceived(address indexed caller, uint32 sourceDomain, uint64 indexed nonce, bytes32 sender, bytes messageBody)",
      "event MessageSent(bytes message)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RescuerChanged(address indexed newRescuer)",
      "event SignatureThresholdUpdated(uint256 oldSignatureThreshold, uint256 newSignatureThreshold)",
      "event Unpause()",
      "function acceptOwnership()",
      "function attesterManager() view returns (address)",
      "function disableAttester(address attester)",
      "function enableAttester(address newAttester)",
      "function getEnabledAttester(uint256 index) view returns (address)",
      "function getNumEnabledAttesters() view returns (uint256)",
      "function isEnabledAttester(address attester) view returns (bool)",
      "function localDomain() view returns (uint32)",
      "function maxMessageBodySize() view returns (uint256)",
      "function nextAvailableNonce() view returns (uint64)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function receiveMessage(bytes message, bytes attestation) returns (bool success)",
      "function replaceMessage(bytes originalMessage, bytes originalAttestation, bytes newMessageBody, bytes32 newDestinationCaller)",
      "function rescueERC20(address tokenContract, address to, uint256 amount)",
      "function rescuer() view returns (address)",
      "function sendMessage(uint32 destinationDomain, bytes32 recipient, bytes messageBody) returns (uint64)",
      "function sendMessageWithCaller(uint32 destinationDomain, bytes32 recipient, bytes32 destinationCaller, bytes messageBody) returns (uint64)",
      "function setMaxMessageBodySize(uint256 newMaxMessageBodySize)",
      "function setSignatureThreshold(uint256 newSignatureThreshold)",
      "function signatureThreshold() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function updateAttesterManager(address newAttesterManager)",
      "function updatePauser(address _newPauser)",
      "function updateRescuer(address newRescuer)",
      "function usedNonces(bytes32) view returns (uint256)",
      "function version() view returns (uint32)"
    ],
    "eth:0x0Baa542625F1Eb12872F7b2AFd86e10F34f8a3Ae": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x0Bc42675799D0C1efE3CDe64857714ae84f075B4": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x0C291Ae31730901515e5C46406A6ba2d88c1f4aA": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x0c31b5DcF3CD6e588938D0699912d0028c911362": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x0d26BaE784c8986502E072F4e73B6168e2052045": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x0DAFed8dAF42040dB2c6227ca2AEB14D9C8B2602": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x0ef01909C4aA5403654452729149F0Db8C7be1E1": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x0F254ECcC89219CEC945BCeA48A4681eb5a380d7": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x0f5552d17505dC8f70D6cd65BEADFE20f42bBE75": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x0f89C7c0586536B618e0469402e1c8234bc52959": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x1016225Ba7f32e3a6f2842A380D5846D8756648c": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router, address minter)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function minter() view returns (address)",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x10c9a3c76bDbDB8600d726De621b941fd26F6058": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x10D5611D4E1fBB0Eb614C25f14ED6AfD6C945c75": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x1175E4CFd6a73A4c1F1f2c1400a08D88554FA62e": [
      "constructor(address token, address[] allowlist, address armProxy)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x117ec8aD107976e1dBCc21717ff78407Bc36aADc": [
      "error CallReverted(bytes error)",
      "error GroupTreeNotWellFormed()",
      "error InsufficientSigners()",
      "error InvalidSigner()",
      "error MissingConfig()",
      "error OutOfBoundsGroup()",
      "error OutOfBoundsGroupQuorum()",
      "error OutOfBoundsNumOfSigners()",
      "error PendingOps()",
      "error PostOpCountReached()",
      "error ProofCannotBeVerified()",
      "error RootExpired()",
      "error SignedHashAlreadySeen()",
      "error SignerGroupsLengthMismatch()",
      "error SignerInDisabledGroup()",
      "error SignersAddressesMustBeStrictlyIncreasing()",
      "error ValidUntilHasAlreadyPassed()",
      "error WrongChainId()",
      "error WrongMultiSig()",
      "error WrongNonce()",
      "error WrongPostOpCount()",
      "error WrongPreOpCount()",
      "event ConfigSet(tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents) config, bool isRootCleared)",
      "event NewRoot(bytes32 indexed root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata)",
      "event OpExecuted(uint40 indexed nonce, address to, bytes data, uint256 value)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function MAX_NUM_SIGNERS() view returns (uint8)",
      "function NUM_GROUPS() view returns (uint8)",
      "function acceptOwnership()",
      "function execute(tuple(uint256 chainId, address multiSig, uint40 nonce, address to, uint256 value, bytes data) op, bytes32[] proof)",
      "function getConfig() view returns (tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents))",
      "function getOpCount() view returns (uint40)",
      "function getRoot() view returns (bytes32 root, uint32 validUntil)",
      "function getRootMetadata() view returns (tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot))",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setConfig(address[] signerAddresses, uint8[] signerGroups, uint8[32] groupQuorums, uint8[32] groupParents, bool clearRoot)",
      "function setRoot(bytes32 root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata, bytes32[] metadataProof, tuple(uint8 v, bytes32 r, bytes32 s)[] signatures)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0x118a9389960F86390A4F14ce4C95D6ff076C6bFC": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x123ed44f3B863a684437Ebf18F8a744c250Ee5cA": [
      "constructor(address token, address[] allowlist, address armProxy)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)"
    ],
    "eth:0x13E20D135769216E8e3e02677089e5C7F372e3b8": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x140C0227Cbe493A56868DDF4ea582E92ef3e9744": [
      "constructor(address _singleton)"
    ],
    "eth:0x1580C7d4754f5671626e42f0372D56104B092CFA": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x1689C22eD5435e49071CFc208D1Ac6F2A2274490": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x17Be5d735D49c84919d3cFDfF9eABbdB12D6Ac20": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x1807769Abe5133c9B41cA6746044b6a1d83F5633": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x1837f10926644bd263B70a3D7700ffB914fABbF0": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x18d3ebcEF1074f30aba5Da3951FF1a87B30B6Ec1": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x19EE30DE803b921Ecbba64eD1787Cda6d536c26a": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x1A3D582d1aB9CF630b44B91C54CBD16Ca7e35a8d": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x1A4B0621E90Bdc61d341D89158863458CA745dA2": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x1b08B9E5DfD4370cF3797793e4e18ba7131eAAB8": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x1B5C330AE8036D735a9d4F00Ff623Ac72A2c4ea7": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x1B7492C3bD23A4aDB448710e4275FF14A5288932": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x1bddbA5DC2cd6ED3343A8E94D02023cC720533B9": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x1dF68F4235efF6d4270590629953C559fC53571C": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x1F11041c8FDb0798be743E72cd0506C7AE9E7a69": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x20B79D39Bd44dEee4F89B1e9d0e3b945fde06491": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x229a1956929489870A31b01854a80EF9B0fd27c9": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x23AFD2Bd797B87394D797dd0134022c42432F7fe": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x245cc372C84B3645Bf0Ffe6538620B04a217988B": [
      "constructor(address _masterCopy)"
    ],
    "eth:0x2764910B500689BbC9DB16c7AD61c6DD32FDE73B": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x27A4E7ff4a6E28056Ac3e39445639876Ee9926FB": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x281A83ee4819068C40937A066d801aAD7C6e0400": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x2862135735469aD4Af91aF4Fbd2559606d25B27C": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x2aa101BF99CaeF7fc1355D4c493a1fe187A007cE": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x2B941044978e65B6834891e2e53103AD72560F38": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x2c5C39F515277E64D96C28f3fc49Ad1d6a25B5B4": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x2Ce400703dAcc37b7edFA99D228b8E70a4d3831B": [
      "constructor(address token, uint8 localTokenDecimals, address rmnProxy, bool allowListEnabled, bool acceptLiquidity)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BridgeLimitExceeded(uint256 bridgeLimit)",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error NotEnoughBridgedAmount()",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event BridgeLimitAdminUpdated(address indexed oldAdmin, address indexed newAdmin)",
      "event BridgeLimitUpdated(uint256 oldBridgeLimit, uint256 newBridgeLimit)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Initialized(uint8 version)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getBridgeLimit() view returns (uint256)",
      "function getBridgeLimitAdmin() view returns (address)",
      "function getCurrentBridgedAmount() view returns (uint256)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function initialize(address owner_, address[] allowlist, address router, uint256 bridgeLimit)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setBridgeLimit(uint256 newBridgeLimit)",
      "function setBridgeLimitAdmin(address bridgeLimitAdmin)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setCurrentBridgedAmount(uint256 newCurrentBridged)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x2dd317E7e36544C5222818F228d607c209517470": [
      "constructor(address token, address[] allowlist, address armProxy)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)"
    ],
    "eth:0x2E3c68D6d2eDD9881429f0565B88024B5Db10F73": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x2ED1A552C03f843a2Db7DE10AD390d24bb66CEE0": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "eth:0x2F2A3e36CE5Fb0924C414BEB1D98B531Cdf17e0B": [
      "error CallReverted(bytes error)",
      "error GroupTreeNotWellFormed()",
      "error InsufficientSigners()",
      "error InvalidSigner()",
      "error MissingConfig()",
      "error OutOfBoundsGroup()",
      "error OutOfBoundsGroupQuorum()",
      "error OutOfBoundsNumOfSigners()",
      "error PendingOps()",
      "error PostOpCountReached()",
      "error ProofCannotBeVerified()",
      "error RootExpired()",
      "error SignedHashAlreadySeen()",
      "error SignerGroupsLengthMismatch()",
      "error SignerInDisabledGroup()",
      "error SignersAddressesMustBeStrictlyIncreasing()",
      "error ValidUntilHasAlreadyPassed()",
      "error WrongChainId()",
      "error WrongMultiSig()",
      "error WrongNonce()",
      "error WrongPostOpCount()",
      "error WrongPreOpCount()",
      "event ConfigSet(tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents) config, bool isRootCleared)",
      "event NewRoot(bytes32 indexed root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata)",
      "event OpExecuted(uint40 indexed nonce, address to, bytes data, uint256 value)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function MAX_NUM_SIGNERS() view returns (uint8)",
      "function NUM_GROUPS() view returns (uint8)",
      "function acceptOwnership()",
      "function execute(tuple(uint256 chainId, address multiSig, uint40 nonce, address to, uint256 value, bytes data) op, bytes32[] proof)",
      "function getConfig() view returns (tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents))",
      "function getOpCount() view returns (uint40)",
      "function getRoot() view returns (bytes32 root, uint32 validUntil)",
      "function getRootMetadata() view returns (tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot))",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setConfig(address[] signerAddresses, uint8[] signerGroups, uint8[32] groupQuorums, uint8[32] groupParents, bool clearRoot)",
      "function setRoot(bytes32 root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata, bytes32[] metadataProof, tuple(uint8 v, bytes32 r, bytes32 s)[] signatures)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0x307D0353313F544fc8Da0D85F1005b1de516Bce8": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x31f6ab382DDeb9A316Ab61C3945a5292a50a89AB": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x3300f27EDEeEB59CC4C4203785406cBEAfEC8dF3": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x337Dec2C7D98CdC0f59976F3A48aCd706cC6c495": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x34731AfB2A45fFD616401f27dBF2Da8B8F369807": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x348fb4740bffe8190861c3AA10f7046f90581C0a": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x35b950eB023003f372bFba6388846F3F5F0EA3C7": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x360F709c25ddfbC3eE2a5d555ad04c4059477a7b": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x36a72eD0096B414521C45E3ddC9ed657d1D9c141": [
      "constructor(address minter, address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidGroupUpdate(uint64 remoteChainSelector, uint8 group)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityAmountCannotBeZero()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenMismatch(address expected, address actual)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event GroupUpdated(uint64 indexed remoteChainSelector, uint8 indexed group)",
      "event InboundRateLimitConsumed(uint64 indexed remoteChainSelector, address token, uint256 amount)",
      "event LiquidityAdded(address indexed rebalancer, uint256 amount)",
      "event LiquidityMigrated(uint64 indexed remoteChainSelector, uint8 indexed group, uint256 remoteChainSupply)",
      "event LiquidityRemoved(address indexed rebalancer, uint256 amount)",
      "event LockedOrBurned(uint64 indexed remoteChainSelector, address token, address sender, uint256 amount)",
      "event OutboundRateLimitConsumed(uint64 indexed remoteChainSelector, address token, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event RebalancerSet(address indexed oldRebalancer, address indexed newRebalancer)",
      "event ReleasedOrMinted(uint64 indexed remoteChainSelector, address token, address sender, address recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getGroup(uint64 remoteChainSelector) view returns (uint8)",
      "function getLockedTokens() view returns (uint256)",
      "function getMinter() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 sourceDenominatedAmount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() pure returns (string)",
      "function updateGroups(tuple(uint64 remoteChainSelector, uint8 group, uint256 remoteChainSupply)[] groupUpdates)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x38A806580D93c5B3e295F5181723C11f15c43271": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x393bADfb69087Fc96274Fd64f924A54a4aBfbB2E": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x3999490C55Fb8332F5f3AD00212435526fA3E576": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x3a129e6C18b23d18BA9E6Aa14Dc2e79d1f91c6c5": [
      "constructor(tuple(address commitStore, uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address prevOffRamp, address armProxy) staticConfig, address[] sourceTokens, address[] pools, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AlreadyAttempted(uint64 sequenceNumber)",
      "error AlreadyExecuted(uint64 sequenceNumber)",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CanOnlySelfCall()",
      "error CommitStoreAlreadyInUse()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error EmptyReport()",
      "error ExecutionError(bytes error)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidConfig(string message)",
      "error InvalidManualExecutionGasLimit(uint256 index, uint256 newLimit)",
      "error InvalidMessageId()",
      "error InvalidNewState(uint64 sequenceNumber, uint8 newState)",
      "error InvalidSourceChain(uint64 sourceChainSelector)",
      "error InvalidTokenPoolConfig()",
      "error ManualExecutionGasLimitMismatch()",
      "error ManualExecutionNotYetEnabled()",
      "error MessageTooLarge(uint256 maxSize, uint256 actualSize)",
      "error OnlyCallableByAdminOrOwner()",
      "error OracleCannotBeZeroAddress()",
      "error PoolAlreadyAdded()",
      "error PoolDoesNotExist()",
      "error PriceNotFoundForToken(address token)",
      "error ReceiverError(bytes error)",
      "error RootNotCommitted()",
      "error TokenDataMismatch(uint64 sequenceNumber)",
      "error TokenHandlingError(bytes error)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenPoolMismatch()",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error UnauthorizedTransmitter()",
      "error UnexpectedTokenData()",
      "error UnsupportedNumberOfTokens(uint64 sequenceNumber)",
      "error UnsupportedToken(address token)",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error ZeroAddressNotAllowed()",
      "event AdminSet(address newAdmin)",
      "event ConfigSet(tuple(address commitStore, uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address prevOffRamp, address armProxy) staticConfig, tuple(uint32 permissionLessExecutionThresholdSeconds, address router, address priceRegistry, uint16 maxNumberOfTokensPerMsg, uint32 maxDataBytes, uint32 maxPoolReleaseOrMintGas) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event ExecutionStateChanged(uint64 indexed sequenceNumber, bytes32 indexed messageId, uint8 state, bytes returnData)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event PoolAdded(address token, address pool)",
      "event PoolRemoved(address token, address pool)",
      "event SkippedIncorrectNonce(uint64 indexed nonce, address indexed sender)",
      "event SkippedSenderWithPreviousRampMessageInflight(uint64 indexed nonce, address indexed sender)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "function acceptOwnership()",
      "function applyPoolUpdates(tuple(address token, address pool)[] removes, tuple(address token, address pool)[] adds)",
      "function ccipReceive(tuple(bytes32 messageId, uint64 sourceChainSelector, bytes sender, bytes data, tuple(address token, uint256 amount)[] destTokenAmounts)) pure",
      "function currentRateLimiterState() view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function executeSingleMessage(tuple(uint64 sourceChainSelector, address sender, address receiver, uint64 sequenceNumber, uint256 gasLimit, bool strict, uint64 nonce, address feeToken, uint256 feeTokenAmount, bytes data, tuple(address token, uint256 amount)[] tokenAmounts, bytes[] sourceTokenData, bytes32 messageId) message, bytes[] offchainTokenData)",
      "function getDestinationToken(address sourceToken) view returns (address)",
      "function getDestinationTokens() view returns (address[] destTokens)",
      "function getDynamicConfig() view returns (tuple(uint32 permissionLessExecutionThresholdSeconds, address router, address priceRegistry, uint16 maxNumberOfTokensPerMsg, uint32 maxDataBytes, uint32 maxPoolReleaseOrMintGas))",
      "function getExecutionState(uint64 sequenceNumber) view returns (uint8)",
      "function getPoolByDestToken(address destToken) view returns (address)",
      "function getPoolBySourceToken(address sourceToken) view returns (address)",
      "function getSenderNonce(address sender) view returns (uint64 nonce)",
      "function getStaticConfig() view returns (tuple(address commitStore, uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address prevOffRamp, address armProxy))",
      "function getSupportedTokens() view returns (address[] sourceTokens)",
      "function getTokenLimitAdmin() view returns (address)",
      "function getTransmitters() view returns (address[])",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function manuallyExecute(tuple(tuple(uint64 sourceChainSelector, address sender, address receiver, uint64 sequenceNumber, uint256 gasLimit, bool strict, uint64 nonce, address feeToken, uint256 feeTokenAmount, bytes data, tuple(address token, uint256 amount)[] tokenAmounts, bytes[] sourceTokenData, bytes32 messageId)[] messages, bytes[][] offchainTokenData, bytes32[] proofs, uint256 proofFlagBits) report, uint256[] gasLimitOverrides)",
      "function owner() view returns (address)",
      "function setAdmin(address newAdmin)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function setRateLimiterConfig(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x3A2Ea8BaE01410425d01c2C5f488e4777DAA54Df": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x3CB2A81bb8a188C5353CdFa9994ed8666556FC53": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x3d430E1380286560899B94E3E9459c4ec300EF9a": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x3d8a95adA63D406ee8232562AbD83CEdb0B90466": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x3DAa89A5AB49DBa691FEA66EB89aC8Cf8BeE2e35": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x3eC718a22B268d7d9Ce27D2dcAB791174D515920": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x3f1c3541B7035dEd84E4502E41D5C919da4C4527": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x3f7AeF129Ce37EA06150C176677bEc75EF29A33f": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x3fa84a4985DE21F219fE3a4241235786d942A0A2": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x407dBD0170A79Bb62a016d4555C656205BbA8a68": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x4109f7E577596432458F8D4DC2E78637428D5614": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NegativeMintAmount(uint256 amountBurned)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x411dE17f12D1A34ecC7F45f49844626267c75e81": [
      "constructor(address arm)",
      "error ZeroAddressNotAllowed()",
      "event ARMSet(address arm)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "function acceptOwnership()",
      "function getARM() view returns (address)",
      "function owner() view returns (address)",
      "function setARM(address arm)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x42513d6cCbEc49786Afc349622AA803BfbB746D5": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x43f47a434DADd5A122C42E49378365CcA949fA54": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x44622f4604353E4815A4212d5a3dD137A1C7FF14": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x44835bBBA9D40DEDa9b64858095EcFB2693c9449": [
      "constructor(uint256 minDelay, address admin, address[] proposers, address[] executors, address[] cancellers, address[] bypassers)",
      "event BypasserCallExecuted(uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event FunctionSelectorBlocked(bytes4 indexed selector)",
      "event FunctionSelectorUnblocked(bytes4 indexed selector)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function ADMIN_ROLE() view returns (bytes32)",
      "function BYPASSER_ROLE() view returns (bytes32)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function blockFunctionSelector(bytes4 selector)",
      "function bypasserExecuteBatch(tuple(address target, uint256 value, bytes data)[] calls) payable",
      "function cancel(bytes32 id)",
      "function executeBatch(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) payable",
      "function getBlockedFunctionSelectorAt(uint256 index) view returns (bytes4)",
      "function getBlockedFunctionSelectorCount() view returns (uint256)",
      "function getMinDelay() view returns (uint256 duration)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getTimestamp(bytes32 id) view returns (uint256 timestamp)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperationBatch(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function isOperation(bytes32 id) view returns (bool registered)",
      "function isOperationDone(bytes32 id) view returns (bool done)",
      "function isOperationPending(bytes32 id) view returns (bool pending)",
      "function isOperationReady(bytes32 id) view returns (bool ready)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function scheduleBatch(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unblockFunctionSelector(bytes4 selector)",
      "function updateDelay(uint256 newDelay)"
    ],
    "eth:0x4488d79B3996364dBa219d98e82a6B0A3D937E62": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x44e77d8C6Bb9999B036a6F084005E48928d18C74": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x459154447d3BD41392Ea3f49738a887dD3f1e5d0": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x45A103142585bdFc49cdb137f2a45D1AE7F84b6b": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x45af366C76a8C8f18806A8C404FE3E3bbA4F8AA3": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x460CaAb2ecf966858A6fef751Aad3428D9017Bc8": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x46A39244eB62De1A87dD4443B8D80bb731B97877": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x47158771e67e4bDdaFd0FBD36f26Db929420B26C": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x475c8Fb7F7D4d3bba0b0a4da2bE31328fc36E358": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x476EefeF46e0d65e1E371Fe093696259B1240B93": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x4913fD2c77d93730358cC41db9d3048dbfe1F196": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x4af4B497c998007eF83ad130318eB2b925a79dc8": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x4B50Cd4637a8EA94729811201A699f4800ee3282": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x4C3aEe10334461F1f33c0A8843424de3F8fb7709": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x4C4BD271b55f2114B9e2423409aaB1CC4D28C6B8": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() pure returns (string)"
    ],
    "eth:0x4Ce6f5cacF8Bd393104c12F6151B727eabBf675c": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x4E63008092645521CFc989FB78c1324CDd371ed0": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x4EdF9c3D77137EC15830c025E84344f49D5162d5": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x500d4882938020E939a5666c1B4200873da7EfD3": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error RevertNegativeMint(uint256 amount)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event Minted(address user, uint256 srcAmount, uint256 destAmount, uint256 srcBonusMultiplier, uint256 destBonusMultiplier)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x50f6631B377be52E132DF35a2F05eA54fda882ac": [
      "constructor(address token, address[] allowlist, address armProxy)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error InsufficientLiquidity()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error WithdrawalTooHigh()",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function addLiquidity(uint256 amount)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getProvidedLiquidity(address provider) view returns (uint256)",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function removeLiquidity(uint256 amount)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)"
    ],
    "eth:0x512c2Ddf5f7F48a6c44cFF73CD8d7edEC5e6b0d8": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x5180865890246278544ea457342b46665C196a97": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x51df9751404DB200b354ED6a5e27DdA6C557883D": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() pure returns (string)"
    ],
    "eth:0x520763c1eBDa04DAC9a6077a41CCC703FF22a9f8": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x52275dC17f9eD92230C8C4d57fD36d128701f694": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x53561cdA97652b79acD602C639626316f8f1d53F": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x53a80faFee54BfE5052165B593Bd5D405BFd4007": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x542BF6910dB102D10f84565E041c2761BE95be84": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x553636e52059B0339592f545D25a4C0A86E3a1Bc": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event InboundRateLimitConsumed(uint64 indexed remoteChainSelector, address token, uint256 amount)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event LockedOrBurned(uint64 indexed remoteChainSelector, address token, address sender, uint256 amount)",
      "event OutboundRateLimitConsumed(uint64 indexed remoteChainSelector, address token, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event RebalancerSet(address oldRebalancer, address newRebalancer)",
      "event ReleasedOrMinted(uint64 indexed remoteChainSelector, address token, address sender, address recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 sourceDenominatedAmount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x55585FFBd94471925252C13ade6A81604C781C5D": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x55AB744a77f8b1daCa1B7D22d5112165Bcc77d4c": [
      "constructor(address _singleton)"
    ],
    "eth:0x55c47DE8bCfA02B3989f2B6F9542900E3A2EC6c3": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x55e5a21B4cCC7FA502434ab1109D4EDe0397AB25": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x5686CCb55ee86BEB1e8A1Cf7C769930f3A5E521c": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x57b548C9c213EA2bcf60193E3D7fd2d2b53Fb9b3": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x57D3bb46aF4A9b210FAE046796013090D428475F": [
      "constructor(address token, address[] allowlist, address armProxy)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)"
    ],
    "eth:0x57d6cD9CD44770C807b2763Dbe4CFDA0113dd114": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x581586a0277975B77f03865f98f7b588265C4bb5": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x581CED7408860a33E47CE6cA93e2cbB4bB48c9C7": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x5882D12bbf902ee88d5FCF8793113ae85fFe97b1": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x59a0f98345f54bAB245A043488ECE7FCecD7B596": [
      "constructor(address _singleton)"
    ],
    "eth:0x5Be290d68db372cc487B1356649D906efC4f58Ca": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x5c16671f7360E32982691c6A14353D8186C57A59": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x5d1F00E79Fd5Caa2C4a6e361671Eed445F5b2C46": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router, address burnAddress)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getBurnAddress() view returns (address burnAddress)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function i_burnAddress() view returns (address)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x5F5d43508f34e0cAEaa558F9C964125538fFe9Cf": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x5Fd81cF5734498467634Ed9432aad298022e15Ff": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x603D332a56B02e3A543b96CE1F1E56055eFe0076": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x606c0e932FEbB81fBba799b5F3dd04f5cc6F2BD9": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x607c0979C55628680167260Ca68e0EF22e8f128C": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x61D405818C8127f0fD30102BF01E6227097eF92f": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x639f35C5E212D61Fe14Bd5CD8b66aAe4df11a50c": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x6452d693860ab7e18fC5858C05980F63d93F37a6": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x645BF2fd779d204313F35B90F3B65F65e2c9ed2B": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x66598216D8E4d9AFE0F06d525B335b762229842f": [
      "constructor(address router)",
      "error GasLimitTooLow(uint256 minLimit, uint256 gotLimit)",
      "error InsufficientFee(uint256 gotFee, uint256 fee)",
      "error InsufficientMsgValue(uint256 gotAmount, uint256 msgValue)",
      "error InvalidRouter(address router)",
      "error InvalidToken(address gotToken, address expectedToken)",
      "error InvalidTokenAmounts(uint256 gotAmounts)",
      "error TokenAmountNotEqualToMsgValue(uint256 gotAmount, uint256 msgValue)",
      "function ccipReceive(tuple(bytes32 messageId, uint64 sourceChainSelector, bytes sender, bytes data, tuple(address token, uint256 amount)[] destTokenAmounts) message)",
      "function ccipSend(uint64 destinationChainSelector, tuple(bytes receiver, bytes data, tuple(address token, uint256 amount)[] tokenAmounts, address feeToken, bytes extraArgs) message) payable returns (bytes32)",
      "function getFee(uint64 destinationChainSelector, tuple(bytes receiver, bytes data, tuple(address token, uint256 amount)[] tokenAmounts, address feeToken, bytes extraArgs) message) view returns (uint256 fee)",
      "function getRouter() view returns (address)",
      "function i_weth() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x67b972054152E6F4B7434D84439EE225e5a00b90": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x67F4e731f446Ff76716E7E3c955CD5A75C1B1787": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x6818278a6e4DA0aD588ef4dd04b59bC4E6703248": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x6948FEF23284906B5650895F9f6fbD4a0A939F20": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x69781e5793C289c9a814Cd2f570308d1c249b94F": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x6A888F0f25d2e846ec854d6Fb011BeC6DE31480B": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x6BBf4f7478824482F0cE2861d003bf0Ef61CdBD6": [
      "constructor(address _singleton)"
    ],
    "eth:0x6C8b9672B4482A876168b9415bF8bBEA574bF4B9": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x6ce8b799002BbECc7df94c18BF150B3b0E4A28F4": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x6eB57991c31f8DD2481A702090EDc0962AE50fAE": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x6f4AbCe0B22343e66C856F28e2d07074c5c5BF75": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x6F580a9bC9E95273a65f73356F9caF92caa1f193": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x6fe6F73F7Cd11E34b6908cdC080683690229d0A4": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x6Ff6BF3BF8af2e419DDC7BF038aFa5EB92b6cD7e": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x700b6adcCfAa4c66638b1AD36BDeFE2038794E02": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x706152939C0cB1f1659F0843C52E192ed52F70d5": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x70Ac0F926a64D82f0cC69A3E505f0eE57E27006a": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x72a0203b731EdECE2DdAa506a048c0378C44366a": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x73aEB5ECA03Ad587B8Fdcc2B61f9fb4D2e3D90c1": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error InsufficientLiquidity()",
      "error LiquidityNotAccepted()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error WithdrawalTooHigh()",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function addLiquidity(uint256 amount)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function canAcceptLiquidity() view returns (bool)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getProvidedLiquidity(address provider) view returns (uint256)",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function removeLiquidity(uint256 amount)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x7559a84Ae7B75F4B0E0E540312A3Ec912B2128CA": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x75a852478792E5a99bc4cdd0aDBd97129B0d9799": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x75dFc9b24B109ae76dC5C51814bb7a9559B68a2B": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x76264869a3eBF51a59FCa5ABa84ee2867c7F190e": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x78196436aF11b948c7036424B1ceA711fAdAd288": [
      "constructor(address token, address[] allowlist, address armProxy)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x789428528A842053b52cd0D77692125829406712": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x78f6EB041A85eF3c1a1dC02C57b6beBfcAcBabbf": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x799A356069Ca6D91BBE5d0407De625A969874aE4": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x79BC41f1D73f06738bed591abf26038EC5721d49": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x7EeeAd4571b12BC3e331E6Ce2D954E1528aC2921": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x80226fc0Ee2b096224EeAc085Bb9a8cba1146f7D": [
      "constructor(address wrappedNative, address armProxy)",
      "error BadARMSignal()",
      "error FailedToSendValue()",
      "error InsufficientFeeTokenAmount()",
      "error InvalidMsgValue()",
      "error InvalidRecipientAddress(address to)",
      "error OffRampMismatch(uint64 chainSelector, address offRamp)",
      "error OnlyOffRamp()",
      "error UnsupportedDestinationChain(uint64 destChainSelector)",
      "event MessageExecuted(bytes32 messageId, uint64 sourceChainSelector, address offRamp, bytes32 calldataHash)",
      "event OffRampAdded(uint64 indexed sourceChainSelector, address offRamp)",
      "event OffRampRemoved(uint64 indexed sourceChainSelector, address offRamp)",
      "event OnRampSet(uint64 indexed destChainSelector, address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "function MAX_RET_BYTES() view returns (uint16)",
      "function acceptOwnership()",
      "function applyRampUpdates(tuple(uint64 destChainSelector, address onRamp)[] onRampUpdates, tuple(uint64 sourceChainSelector, address offRamp)[] offRampRemoves, tuple(uint64 sourceChainSelector, address offRamp)[] offRampAdds)",
      "function ccipSend(uint64 destinationChainSelector, tuple(bytes receiver, bytes data, tuple(address token, uint256 amount)[] tokenAmounts, address feeToken, bytes extraArgs) message) payable returns (bytes32)",
      "function getArmProxy() view returns (address)",
      "function getFee(uint64 destinationChainSelector, tuple(bytes receiver, bytes data, tuple(address token, uint256 amount)[] tokenAmounts, address feeToken, bytes extraArgs) message) view returns (uint256 fee)",
      "function getOffRamps() view returns (tuple(uint64 sourceChainSelector, address offRamp)[])",
      "function getOnRamp(uint64 destChainSelector) view returns (address)",
      "function getSupportedTokens(uint64 chainSelector) view returns (address[])",
      "function getWrappedNative() view returns (address)",
      "function isChainSupported(uint64 chainSelector) view returns (bool)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function owner() view returns (address)",
      "function recoverTokens(address tokenAddress, address to, uint256 amount)",
      "function routeMessage(tuple(bytes32 messageId, uint64 sourceChainSelector, bytes sender, bytes data, tuple(address token, uint256 amount)[] destTokenAmounts) message, uint16 gasForCallExactCheck, uint256 gasLimit, address receiver) returns (bool success, bytes retData, uint256 gasUsed)",
      "function setWrappedNative(address wrappedNative)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x807dd69Bc9BC4e9411490f7b79Ff30c91E799A04": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x80e2dcE0A16c8DB769995129cF6BbFCac8E4cFb8": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x8113f001eA456759264317007220cBc939cA8435": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x8192D648ad9144aF8c2488c8142c72B3cd990728": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x823839fE57d4c594bF9500C60c9551352a19D89D": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x8272dbBA30f14900b22b4bfC8DB4E88B02bA413a": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x8291a8E8dCF429e2FA7d032bF3E583ee959F3B06": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error InsufficientLiquidity()",
      "error LiquidityNotAccepted()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error WithdrawalTooHigh()",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function addLiquidity(uint256 amount)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function canAcceptLiquidity() view returns (bool)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getProvidedLiquidity(address provider) view returns (uint256)",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function removeLiquidity(uint256 amount)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x82b8A19497fA25575f250a3DcFfCD2562B575A2e": [
      "constructor(address target)"
    ],
    "eth:0x82Df5c453e854CFaD64EA3f16497B5c5b9DB012B": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x8300e89e82A840176eb250EcDA0A7dBDb4a6B12D": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x831097033C88c82a7F1897b168Aa88cC44540C8f": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x8315Bbe2b2828559CEeCCCBCB4550A466227336E": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x8356D3261bef4d7f6f8427FE651660b35D8a2Cd3": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x83F3DA5aa2C7534d694B0acde7624573c830250D": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x8628AB5A69b69742Ff0AD828Fa6d26f6aaD050B9": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x86B47d8411006874eEf8E4584BdFD7be8e5549d1": [
      "constructor(tuple(address linkToken, uint64 chainSelector, uint64 destChainSelector, uint64 defaultTxGasLimit, uint96 maxNopFeesJuels, address prevOnRamp, address armProxy) staticConfig, tuple(address router, uint16 maxNumberOfTokensPerMsg, uint32 destGasOverhead, uint16 destGasPerPayloadByte, uint32 destDataAvailabilityOverheadGas, uint16 destGasPerDataAvailabilityByte, uint16 destDataAvailabilityMultiplierBps, address priceRegistry, uint32 maxDataBytes, uint32 maxPerMsgGasLimit) dynamicConfig, tuple(address token, address pool)[] tokensAndPools, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig, tuple(address token, uint32 networkFeeUSDCents, uint64 gasMultiplierWeiPerEth, uint64 premiumMultiplierWeiPerEth, bool enabled)[] feeTokenConfigs, tuple(address token, uint32 minFeeUSDCents, uint32 maxFeeUSDCents, uint16 deciBps, uint32 destGasOverhead, uint32 destBytesOverhead)[] tokenTransferFeeConfigArgs, tuple(address nop, uint16 weight)[] nopsAndWeights)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CannotSendZeroTokens()",
      "error InsufficientBalance()",
      "error InvalidAddress(bytes encodedAddress)",
      "error InvalidChainSelector(uint64 chainSelector)",
      "error InvalidConfig()",
      "error InvalidExtraArgsTag()",
      "error InvalidNopAddress(address nop)",
      "error InvalidTokenPoolConfig()",
      "error InvalidWithdrawParams()",
      "error LinkBalanceNotSettled()",
      "error MaxFeeBalanceReached()",
      "error MessageGasLimitTooHigh()",
      "error MessageTooLarge(uint256 maxSize, uint256 actualSize)",
      "error MustBeCalledByRouter()",
      "error NoFeesToPay()",
      "error NoNopsToPay()",
      "error NotAFeeToken(address token)",
      "error OnlyCallableByAdminOrOwner()",
      "error OnlyCallableByOwnerOrAdmin()",
      "error OnlyCallableByOwnerOrAdminOrNop()",
      "error PoolAlreadyAdded()",
      "error PoolDoesNotExist(address token)",
      "error PriceNotFoundForToken(address token)",
      "error RouterMustSetOriginalSender()",
      "error SourceTokenDataTooLarge(address token)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenPoolMismatch()",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error TooManyNops()",
      "error UnsupportedNumberOfTokens()",
      "error UnsupportedToken(address token)",
      "event AdminSet(address newAdmin)",
      "event CCIPSendRequested(tuple(uint64 sourceChainSelector, address sender, address receiver, uint64 sequenceNumber, uint256 gasLimit, bool strict, uint64 nonce, address feeToken, uint256 feeTokenAmount, bytes data, tuple(address token, uint256 amount)[] tokenAmounts, bytes[] sourceTokenData, bytes32 messageId) message)",
      "event ConfigSet(tuple(address linkToken, uint64 chainSelector, uint64 destChainSelector, uint64 defaultTxGasLimit, uint96 maxNopFeesJuels, address prevOnRamp, address armProxy) staticConfig, tuple(address router, uint16 maxNumberOfTokensPerMsg, uint32 destGasOverhead, uint16 destGasPerPayloadByte, uint32 destDataAvailabilityOverheadGas, uint16 destGasPerDataAvailabilityByte, uint16 destDataAvailabilityMultiplierBps, address priceRegistry, uint32 maxDataBytes, uint32 maxPerMsgGasLimit) dynamicConfig)",
      "event FeeConfigSet(tuple(address token, uint32 networkFeeUSDCents, uint64 gasMultiplierWeiPerEth, uint64 premiumMultiplierWeiPerEth, bool enabled)[] feeConfig)",
      "event NopPaid(address indexed nop, uint256 amount)",
      "event NopsSet(uint256 nopWeightsTotal, tuple(address nop, uint16 weight)[] nopsAndWeights)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event PoolAdded(address token, address pool)",
      "event PoolRemoved(address token, address pool)",
      "event TokenTransferFeeConfigSet(tuple(address token, uint32 minFeeUSDCents, uint32 maxFeeUSDCents, uint16 deciBps, uint32 destGasOverhead, uint32 destBytesOverhead)[] transferFeeConfig)",
      "function acceptOwnership()",
      "function applyPoolUpdates(tuple(address token, address pool)[] removes, tuple(address token, address pool)[] adds)",
      "function currentRateLimiterState() view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function forwardFromRouter(uint64 destChainSelector, tuple(bytes receiver, bytes data, tuple(address token, uint256 amount)[] tokenAmounts, address feeToken, bytes extraArgs) message, uint256 feeTokenAmount, address originalSender) returns (bytes32)",
      "function getDynamicConfig() view returns (tuple(address router, uint16 maxNumberOfTokensPerMsg, uint32 destGasOverhead, uint16 destGasPerPayloadByte, uint32 destDataAvailabilityOverheadGas, uint16 destGasPerDataAvailabilityByte, uint16 destDataAvailabilityMultiplierBps, address priceRegistry, uint32 maxDataBytes, uint32 maxPerMsgGasLimit) dynamicConfig)",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getFee(uint64 destChainSelector, tuple(bytes receiver, bytes data, tuple(address token, uint256 amount)[] tokenAmounts, address feeToken, bytes extraArgs) message) view returns (uint256 feeTokenAmount)",
      "function getFeeTokenConfig(address token) view returns (tuple(uint32 networkFeeUSDCents, uint64 gasMultiplierWeiPerEth, uint64 premiumMultiplierWeiPerEth, bool enabled) feeTokenConfig)",
      "function getNopFeesJuels() view returns (uint96)",
      "function getNops() view returns (tuple(address nop, uint16 weight)[] nopsAndWeights, uint256 weightsTotal)",
      "function getPoolBySourceToken(uint64, address sourceToken) view returns (address)",
      "function getSenderNonce(address sender) view returns (uint64)",
      "function getStaticConfig() view returns (tuple(address linkToken, uint64 chainSelector, uint64 destChainSelector, uint64 defaultTxGasLimit, uint96 maxNopFeesJuels, address prevOnRamp, address armProxy))",
      "function getSupportedTokens(uint64) view returns (address[])",
      "function getTokenLimitAdmin() view returns (address)",
      "function getTokenTransferFeeConfig(address token) view returns (tuple(uint32 minFeeUSDCents, uint32 maxFeeUSDCents, uint16 deciBps, uint32 destGasOverhead, uint32 destBytesOverhead) tokenTransferFeeConfig)",
      "function linkAvailableForPayment() view returns (int256)",
      "function owner() view returns (address)",
      "function payNops()",
      "function setAdmin(address newAdmin)",
      "function setDynamicConfig(tuple(address router, uint16 maxNumberOfTokensPerMsg, uint32 destGasOverhead, uint16 destGasPerPayloadByte, uint32 destDataAvailabilityOverheadGas, uint16 destGasPerDataAvailabilityByte, uint16 destDataAvailabilityMultiplierBps, address priceRegistry, uint32 maxDataBytes, uint32 maxPerMsgGasLimit) dynamicConfig)",
      "function setFeeTokenConfig(tuple(address token, uint32 networkFeeUSDCents, uint64 gasMultiplierWeiPerEth, uint64 premiumMultiplierWeiPerEth, bool enabled)[] feeTokenConfigArgs)",
      "function setNops(tuple(address nop, uint16 weight)[] nopsAndWeights)",
      "function setRateLimiterConfig(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setTokenTransferFeeConfig(tuple(address token, uint32 minFeeUSDCents, uint32 maxFeeUSDCents, uint16 deciBps, uint32 destGasOverhead, uint32 destBytesOverhead)[] tokenTransferFeeConfigArgs)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawNonLinkFees(address feeToken, address to)"
    ],
    "eth:0x8705F734b7ac1FC0bb2d16F60c6eFac5Ed646159": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x87c55D48DF6EF7B08153Ab079e76bFEcbb793D75": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x89c9038906887A69bD9C20f81B1B4C309F9A6D04": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x89F39cdbad48b6531DDBd38ea0D84E9c9CbCdA27": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x8A1680fBbDb3Da1e0E7cA9078435631bEaf8a2cF": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x8aC68225b0E80cF7f16EA67639b455d679a158d7": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x8BcD7e48Dd2104ed83eb1CE0c6E7610604AE9062": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x8c6028e38391cfC2A1a28f4359EA5732E9422e56": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x8c9015fDBCC26b8cD0925F3900731dD0AF66b760": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x8c9b2Efb7c64C394119270bfecE7f54763b958Ad": [
      "constructor(address[] priceUpdaters, address[] feeTokens, uint32 stalenessThreshold)",
      "error ChainNotSupported(uint64 chain)",
      "error InvalidStalenessThreshold()",
      "error OnlyCallableByUpdaterOrOwner()",
      "error StaleGasPrice(uint64 destChainSelector, uint256 threshold, uint256 timePassed)",
      "error StaleTokenPrice(address token, uint256 threshold, uint256 timePassed)",
      "error TokenNotSupported(address token)",
      "event FeeTokenAdded(address indexed feeToken)",
      "event FeeTokenRemoved(address indexed feeToken)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event PriceUpdaterRemoved(address indexed priceUpdater)",
      "event PriceUpdaterSet(address indexed priceUpdater)",
      "event UsdPerTokenUpdated(address indexed token, uint256 value, uint256 timestamp)",
      "event UsdPerUnitGasUpdated(uint64 indexed destChain, uint256 value, uint256 timestamp)",
      "function acceptOwnership()",
      "function applyFeeTokensUpdates(address[] feeTokensToAdd, address[] feeTokensToRemove)",
      "function applyPriceUpdatersUpdates(address[] priceUpdatersToAdd, address[] priceUpdatersToRemove)",
      "function convertTokenAmount(address fromToken, uint256 fromTokenAmount, address toToken) view returns (uint256)",
      "function getDestinationChainGasPrice(uint64 destChainSelector) view returns (tuple(uint224 value, uint32 timestamp))",
      "function getFeeTokens() view returns (address[])",
      "function getPriceUpdaters() view returns (address[])",
      "function getStalenessThreshold() view returns (uint128)",
      "function getTokenAndGasPrices(address token, uint64 destChainSelector) view returns (uint224 tokenPrice, uint224 gasPriceValue)",
      "function getTokenPrice(address token) view returns (tuple(uint224 value, uint32 timestamp))",
      "function getTokenPrices(address[] tokens) view returns (tuple(uint224 value, uint32 timestamp)[])",
      "function getValidatedTokenPrice(address token) view returns (uint224)",
      "function owner() view returns (address)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function updatePrices(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates)"
    ],
    "eth:0x8D846b1E9032827546B62160c32aDe293f77B1AB": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x8d9F0185c49752d626ef0c318B24Bba83931D639": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x8DC27D621c41a32140e22E2a4dAf1259639BAe04": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x8E7ebBb95e369BC854Ee7021C7CF2E282c3bCAEa": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x8ee28906BA9E482d881d28E825118b8b8e46A4a5": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x8FC54E798eAC51353E160C9113682714F5e9E262": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x8fd996312CA11849A562C78885021148F25a9841": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x9054f2DF5f2AC59b39a175c27a00165989D17d2B": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x913A2AC13907F29EF2346E21368214B9b3dDc04B": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x916D7d960B119bb6c4AbE381f7677eCEed866d44": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x92AfdbCE8017c1694a9922F777260854af48B532": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x933b2C73bcDBa56cA8B89f94D34882d2f7669AbD": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x934635de453A1161D02Ce395F2F59E775597fE13": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function renounceOwnership()",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address newOwner)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x9359cd75549DaE00Cdd8D22297BC9B13FbBe4B79": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x94A43cC8C4d755271436cfE42793A66a6C9ae25b": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x95842Bb96cECfe77e8AC07BA6e6bA948B745CCCd": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x95deB0c4bB9168202d50E874865f9A1842b82D64": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x9763C884b1cE0439a017bac04659e3350054Aea9": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x98d0f843AE9BA7c55F6e3941E6660a5947a67Ed9": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x98ef4B1Fe8fe9C73Deb07a77c9f861E8558439d7": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x99874400820c354eE07bC8b165C605632BdCeae3": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x99bb52AAF045F63F74d0a3FbE6Cf3e7B23aeD212": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x9aCd2ffD56E278a560Cc4E12dCA2B7D2B3359Ac2": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x9B2EEd6A1e16cB50Ed4c876D2dD69468B21b7749": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x9b8FEf06D74c3880FC6886b3c6FbbBf601Db0DCC": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x9B9Ec8E26955c034828bBD78E22ab258d983dCdb": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x9c79223e8ce037c39b534891b41b3f306a8FE192": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0x9D93D536Ced80871Bf3DA5Bb47bAedE62c794f8A": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x9dC523fbc822b8827312c87F2C791094c7e9696f": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x9Dfaaa0826b8D81Ea7Cf7ED95619574bcb47d6EA": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x9F02c16190691CC4ceCD53A9267Bd24e37B6d06C": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0x9f592c28590595F3F78a8881E8Dbb9984ed705cD": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0x9FBcB7Ed1D48204b525531cC35b5482f6F44b08a": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xa17698199466E71bAFC31F226db341B7840701E7": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xa27501561B01D99cde347a63891e8762DCa5bBbd": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xa35304aA2D659e5E06A768fEc4Af3B443916C215": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xa3532633401AbFfbd15e6be825a45FB7F141469B": [
      "constructor(address lockbox, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error ChainNotSiloed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error DuplicatedChainSelector(uint64 remoteChainSelector)",
      "error InsufficientLiquidity(uint256 availableLiquidity, uint256 requestedAmount)",
      "error InvalidChainSelector(uint64 remoteChainSelector)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityAmountCannotBeZero()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ChainSiloed(uint64 remoteChainSelector, address rebalancer)",
      "event ChainUnsiloed(uint64 remoteChainSelector, uint256 amountUnsiloed)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(uint64 remoteChainSelector, address indexed provider, uint256 amount)",
      "event LiquidityRemoved(uint64 remoteChainSelector, address indexed remover, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event SiloRebalancerSet(uint64 indexed remoteChainSelector, address oldRebalancer, address newRebalancer)",
      "event TokensConsumed(uint256 tokens)",
      "event UnsiloedRebalancerSet(address oldRebalancer, address newRebalancer)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getAvailableTokens(uint64 remoteChainSelector) view returns (uint256 lockedTokens)",
      "function getChainRebalancer(uint64 remoteChainSelector) view returns (address)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockbox() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function getUnsiloedLiquidity() view returns (uint256)",
      "function getXERC20() view returns (address)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSiloed(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function provideSiloedLiquidity(uint64 remoteChainSelector, uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address newRebalancer)",
      "function setRouter(address newRouter)",
      "function setSiloRebalancer(uint64 remoteChainSelector, address newRebalancer)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function updateSiloDesignations(uint64[] removes, tuple(uint64 remoteChainSelector, address rebalancer)[] adds)",
      "function withdrawLiquidity(uint256 amount)",
      "function withdrawSiloedLiquidity(uint64 remoteChainSelector, uint256 amount)"
    ],
    "eth:0xa370CEcd451ecf15c2A01ec47762E967dF7574DA": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xA4755Cd68CA2092447c8c842659a2931f9110320": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xA48269e5c9A234daBfEBE98b82390Be705536d1c": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xa4d264470a67D9f6682EE12Bdc9c35Df44e3F194": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xa5588e518CE5ee0e4628C005E4edAbD5e87de3aD": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xA586a732394A1AFfCF15b972cd47C936033C9FA7": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error ChainNotSiloed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity(uint256 availableLiquidity, uint256 requestedAmount)",
      "error InvalidChainSelector(uint64 remoteChainSelector)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityAmountCannotBeZero()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ChainSiloed(uint64 remoteChainSelector, address rebalancer)",
      "event ChainUnsiloed(uint64 remoteChainSelector, uint256 amountUnsiloed)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(uint64 remoteChainSelector, address indexed provider, uint256 amount)",
      "event LiquidityRemoved(uint64 remoteChainSelector, address indexed remover, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event SiloRebalancerSet(uint64 indexed remoteChainSelector, address oldRebalancer, address newRebalancer)",
      "event TokensConsumed(uint256 tokens)",
      "event UnsiloedRebalancerSet(address oldRebalancer, address newRebalancer)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getAvailableTokens(uint64 remoteChainSelector) view returns (uint256 lockedTokens)",
      "function getChainRebalancer(uint64 remoteChainSelector) view returns (address)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function getUnsiloedLiquidity() view returns (uint256)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSiloed(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function provideSiloedLiquidity(uint64 remoteChainSelector, uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address newRebalancer)",
      "function setRouter(address newRouter)",
      "function setSiloRebalancer(uint64 remoteChainSelector, address newRebalancer)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function updateSiloDesignations(uint64[] removes, tuple(uint64 remoteChainSelector, address rebalancer)[] adds)",
      "function withdrawLiquidity(uint256 amount)",
      "function withdrawSiloedLiquidity(uint64 remoteChainSelector, uint256 amount)"
    ],
    "eth:0xa58818D1acD8D62ab077a1F79606fCb5CE3741b9": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xa597E8df3B16b05815faDC3A3b5b8BaCEDd6f16f": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xa7689C57aa6D09d28244d3932F34176d853A660f": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xA7E77BD47e2fDeE61df271E8b9206F3F1E804427": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xA82A87a9b6550e89dd8a7C8a1E3e421974eaf858": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xa8D5E1daA6D8B94f11D77B7E09DE846292ef69FF": [
      "error CallReverted(bytes error)",
      "error GroupTreeNotWellFormed()",
      "error InsufficientSigners()",
      "error InvalidSigner()",
      "error MissingConfig()",
      "error OutOfBoundsGroup()",
      "error OutOfBoundsGroupQuorum()",
      "error OutOfBoundsNumOfSigners()",
      "error PendingOps()",
      "error PostOpCountReached()",
      "error ProofCannotBeVerified()",
      "error RootExpired()",
      "error SignedHashAlreadySeen()",
      "error SignerGroupsLengthMismatch()",
      "error SignerInDisabledGroup()",
      "error SignersAddressesMustBeStrictlyIncreasing()",
      "error ValidUntilHasAlreadyPassed()",
      "error WrongChainId()",
      "error WrongMultiSig()",
      "error WrongNonce()",
      "error WrongPostOpCount()",
      "error WrongPreOpCount()",
      "event ConfigSet(tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents) config, bool isRootCleared)",
      "event NewRoot(bytes32 indexed root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata)",
      "event OpExecuted(uint40 indexed nonce, address to, bytes data, uint256 value)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function MAX_NUM_SIGNERS() view returns (uint8)",
      "function NUM_GROUPS() view returns (uint8)",
      "function acceptOwnership()",
      "function execute(tuple(uint256 chainId, address multiSig, uint40 nonce, address to, uint256 value, bytes data) op, bytes32[] proof)",
      "function getConfig() view returns (tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents))",
      "function getOpCount() view returns (uint40)",
      "function getRoot() view returns (bytes32 root, uint32 validUntil)",
      "function getRootMetadata() view returns (tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot))",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setConfig(address[] signerAddresses, uint8[] signerGroups, uint8[32] groupQuorums, uint8[32] groupParents, bool clearRoot)",
      "function setRoot(bytes32 root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata, bytes32[] metadataProof, tuple(uint8 v, bytes32 r, bytes32 s)[] signatures)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0xa904B9343632A6ca4f4a1b0C9eFa011cb319d000": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xa96787DCe9Df7BF7bB033E39777bd108E29D349b": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xA9f9bF2b643348c0884f2eBA4F712E833DA9a2b8": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xab235c5B80860899F67f88370ba69C2c80499f23": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xaB9502c8886Bd9CEd344A3684784a5e4C0fC46d0": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xAc3453eEF710e1E6457383F29D696Db5435Bf95b": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xac82d09D3BaE049C2119f5940ad517E6f1e9E453": [
      "constructor(address lbtc_, address ccipRouter_, address[] allowlist_, address rmnProxy_, address adapter_)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function adapter() view returns (address)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)"
    ],
    "eth:0xAd06241B9cFf15b710118A52f04A4Fe73b8fcC09": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xAD97C0270a243270136E40278155C12ce7C7F87B": [
      "error CallReverted(bytes error)",
      "error GroupTreeNotWellFormed()",
      "error InsufficientSigners()",
      "error InvalidSigner()",
      "error MissingConfig()",
      "error OutOfBoundsGroup()",
      "error OutOfBoundsGroupQuorum()",
      "error OutOfBoundsNumOfSigners()",
      "error PendingOps()",
      "error PostOpCountReached()",
      "error ProofCannotBeVerified()",
      "error RootExpired()",
      "error SignedHashAlreadySeen()",
      "error SignerGroupsLengthMismatch()",
      "error SignerInDisabledGroup()",
      "error SignersAddressesMustBeStrictlyIncreasing()",
      "error ValidUntilHasAlreadyPassed()",
      "error WrongChainId()",
      "error WrongMultiSig()",
      "error WrongNonce()",
      "error WrongPostOpCount()",
      "error WrongPreOpCount()",
      "event ConfigSet(tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents) config, bool isRootCleared)",
      "event NewRoot(bytes32 indexed root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata)",
      "event OpExecuted(uint40 indexed nonce, address to, bytes data, uint256 value)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function MAX_NUM_SIGNERS() view returns (uint8)",
      "function NUM_GROUPS() view returns (uint8)",
      "function acceptOwnership()",
      "function execute(tuple(uint256 chainId, address multiSig, uint40 nonce, address to, uint256 value, bytes data) op, bytes32[] proof)",
      "function getConfig() view returns (tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents))",
      "function getOpCount() view returns (uint40)",
      "function getRoot() view returns (bytes32 root, uint32 validUntil)",
      "function getRootMetadata() view returns (tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot))",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setConfig(address[] signerAddresses, uint8[] signerGroups, uint8[32] groupQuorums, uint8[32] groupParents, bool clearRoot)",
      "function setRoot(bytes32 root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata, bytes32[] metadataProof, tuple(uint8 v, bytes32 r, bytes32 s)[] signatures)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0xaf0b8f79b667055Db3a54a31144e86e841Be3dAD": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xAFcC997D86713FeC802Cc665122d64a5130bDd1D": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xB05963A6beD7e9dB887eCeB2775a03414d00FAc9": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xb086806c8f80C4423cEA4DDf643bF40c0Ebc8220": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xb148e4b2111131515E745BD9750547C8DE495cA3": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xB18eE11849a805651aC5D456034FD6352cfF635d": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xb22764f98dD05c789929716D677382Df22C05Cb6": [
      "error AlreadyRegistered(address token)",
      "error InvalidTokenPoolToken(address token)",
      "error OnlyAdministrator(address sender, address token)",
      "error OnlyPendingAdministrator(address sender, address token)",
      "error OnlyRegistryModuleOrOwner(address sender)",
      "error ZeroAddress()",
      "event AdministratorTransferRequested(address indexed token, address indexed currentAdmin, address indexed newAdmin)",
      "event AdministratorTransferred(address indexed token, address indexed newAdmin)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event PoolSet(address indexed token, address indexed previousPool, address indexed newPool)",
      "event RegistryModuleAdded(address module)",
      "event RegistryModuleRemoved(address indexed module)",
      "function acceptAdminRole(address localToken)",
      "function acceptOwnership()",
      "function addRegistryModule(address module)",
      "function getAllConfiguredTokens(uint64 startIndex, uint64 maxCount) view returns (address[] tokens)",
      "function getPool(address token) view returns (address)",
      "function getPools(address[] tokens) view returns (address[])",
      "function getTokenConfig(address token) view returns (tuple(address administrator, address pendingAdministrator, address tokenPool))",
      "function isAdministrator(address localToken, address administrator) view returns (bool)",
      "function isRegistryModule(address module) view returns (bool)",
      "function owner() view returns (address)",
      "function proposeAdministrator(address localToken, address administrator)",
      "function removeRegistryModule(address module)",
      "function setPool(address localToken, address pool)",
      "function transferAdminRole(address localToken, address newAdmin)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xB351EC0FEaF4B99FdFD36b484d9EC90D0422493D": [
      "constructor(address _singleton)"
    ],
    "eth:0xB54f773211331f3889b74624D341e49328E83473": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "eth:0xB551DB5C7C1bF72998C0aeD60838C6f144d23273": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xb67ac19693fB89880Ca5873f6a890E865b259c26": [
      "constructor(address _singleton)"
    ],
    "eth:0xB85E3e408D8300A002BaA9cc355D40a487e9C248": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xb86C91861A7043fffC26C7740C3678eE09599234": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xba5F6Cf1121c572602e638bC8A0d87Db61072e35": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xbAf669bBe01882082C83F8B2d146057202fc4cB7": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xBb8b739C28898F7d143584380e7b689ecCaB2c9F": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xBc1324F4FaB8e63bF33E5117bb887671B378BFF3": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xBCd28DC5b141c425e0848900462572878b3FE376": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xbD09E8846B9DbdA54Ef386Bd9eF3bbd15Add50ee": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xBDCc99f05D73FB3C2ad4b0F496318BaAE20218b7": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xbE374316EFBB444589F2AE60ef2B83BDB656380F": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xBF7cb652A2d5ed3BFc3832Ef8Af33Ffb0cDc0982": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xbfc86CA9b7fa158287bD392eE098246465E63351": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xc07556a0Bd177F8de4D077f449C2653A072F3798": [
      "constructor(address _singleton)"
    ],
    "eth:0xc1D8f275f651E1CAe3A6D971d0836cDAcD25d91a": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xC201a236258Ec170dE5255A9507bb4f70c7caf31": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xC26B8231a7B52F9B38909775c9fAcCCa6a4A3d96": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xc2b15a8ff04Fdc05E782A1aD89f43E241c6D2420": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xc2e3A3C18ccb634622B57fF119a1C8C7f12e8C0c": [
      "constructor(address tokenMessenger, address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error ExistingMigrationProposal()",
      "error InvalidChainSelector()",
      "error InvalidConfig()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidDestinationDomain(uint32 expected, uint32 got)",
      "error InvalidDomain(tuple(bytes32 allowedCaller, uint32 domainIdentifier, uint64 destChainSelector, bool enabled) domain)",
      "error InvalidMessageVersion(uint32 version)",
      "error InvalidNonce(uint64 expected, uint64 got)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidReceiver(bytes receiver)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourceDomain(uint32 expected, uint32 got)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error InvalidTokenMessengerVersion(uint32 version)",
      "error LanePausedForCCTPMigration(uint64 remoteChainSelector)",
      "error MustBeProposedOwner()",
      "error NoMigrationProposalPending()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenLockingNotAllowedAfterMigration(uint64 remoteChainSelector)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error UnknownDomain(uint64 domain)",
      "error UnlockingUSDCFailed()",
      "error ZeroAddressNotAllowed()",
      "error onlyCircle()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event CCTPMigrationCancelled(uint64 existingProposalSelector)",
      "event CCTPMigrationExecuted(uint64 remoteChainSelector, uint256 USDCBurned)",
      "event CCTPMigrationProposed(uint64 remoteChainSelector)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event CircleMigratorAddressSet(address migratorAddress)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event ConfigSet(address tokenMessenger)",
      "event DomainsSet(tuple(bytes32 allowedCaller, uint32 domainIdentifier, uint64 destChainSelector, bool enabled)[])",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityProviderSet(address indexed oldProvider, address indexed newProvider, uint64 indexed remoteChainSelector)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint64 indexed remoteChainSelector, uint256 amount)",
      "event LockReleaseDisabled(uint64 indexed remoteChainSelector)",
      "event LockReleaseEnabled(uint64 indexed remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "event TokensExcludedFromBurn(uint64 indexed remoteChainSelector, uint256 amount, uint256 burnableAmountAfterExclusion)",
      "function SUPPORTED_USDC_VERSION() view returns (uint32)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function burnLockedUSDC()",
      "function cancelExistingCCTPMigrationProposal()",
      "function excludeTokensFromBurn(uint64 remoteChainSelector, uint256 amount)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentProposedCCTPChainMigration() view returns (uint64)",
      "function getDomain(uint64 chainSelector) view returns (tuple(bytes32 allowedCaller, uint32 domainIdentifier, bool enabled))",
      "function getExcludedTokensByChain(uint64 remoteChainSelector) view returns (uint256)",
      "function getLiquidityProvider(uint64 remoteChainSelector) view returns (address)",
      "function getLockedTokensForChain(uint64 remoteChainSelector) view returns (uint256)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function i_localDomainIdentifier() view returns (uint32)",
      "function i_messageTransmitter() view returns (address)",
      "function i_tokenMessenger() view returns (address)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function proposeCCTPMigration(uint64 remoteChainSelector)",
      "function provideLiquidity(uint64 remoteChainSelector, uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setCircleMigratorAddress(address migrator)",
      "function setDomains(tuple(bytes32 allowedCaller, uint32 domainIdentifier, uint64 destChainSelector, bool enabled)[] domains)",
      "function setLiquidityProvider(uint64 remoteChainSelector, address liquidityProvider)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function shouldUseLockRelease(uint64 remoteChainSelector) view returns (bool)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint64 remoteChainSelector)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function updateChainSelectorMechanisms(uint64[] removes, uint64[] adds)",
      "function withdrawLiquidity(uint64 remoteChainSelector, uint256 amount)"
    ],
    "eth:0xc2ef2f272D2C09b0a8523cEf32C96D3A7f379979": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xC3d39B77032114c8884276Dae0F02cdF75162782": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xc43c01026128Aa758A65D12dB6a72CE4DD778dF2": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error InsufficientLiquidity()",
      "error LiquidityNotAccepted()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error WithdrawalTooHigh()",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function addLiquidity(uint256 amount)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function canAcceptLiquidity() view returns (bool)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getProvidedLiquidity(address provider) view returns (uint256)",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function removeLiquidity(uint256 amount)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xC456EaE992e4f2925E3F75Ac4809dF387756CD29": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xc46890D248a389A40725dbd9fa5e13548B56Ad8d": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xC4ABCd324ED49B98795CC8F51C80DAF1A24F5F58": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xc5164AF94Be6737fE21085eDDa4E43BcBf224F9f": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xc534a745bFfaF9466Ed7B47fA23B0177b99A3e77": [
      "constructor(address _singleton)"
    ],
    "eth:0xc576D83eA5D672E220f7B099827E73685Fde5B73": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xC69e7a187fA739028Ee613426795D91B610932c7": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xc75aCdceF4c679eaCb7a8CF1eF486B9Cf77478f8": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xC78210649aF8A450C0f6E98107a0b614a3198359": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xc785D05961B3C537cAC11f1D496876a255F6D650": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xC8ADf2f51a35b0a9d8f74675b64c954Ca2Dcbc14": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error RevertNegativeMint(uint256 amount)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xC8c2Fe3Df1d300F366cE831a34276d7E4dd1F9B5": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xC8C866440806826EC0A43cD63129Be44DE2cE6bb": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event InboundRateLimitConsumed(uint64 indexed remoteChainSelector, address token, uint256 amount)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event LockedOrBurned(uint64 indexed remoteChainSelector, address token, address sender, uint256 amount)",
      "event OutboundRateLimitConsumed(uint64 indexed remoteChainSelector, address token, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event RebalancerSet(address oldRebalancer, address newRebalancer)",
      "event ReleasedOrMinted(uint64 indexed remoteChainSelector, address token, address sender, address recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xC95737Ba39A61B2AE60800eF375677caA54Ff0c5": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xcd196D3905AfA0eCB4e0e62C2D7d6c52f9C73526": [
      "constructor(address token, address[] allowlist, address armProxy)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)"
    ],
    "eth:0xcd69c117bf91Fc57d5fC237dFAbA5f17B5322733": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xCE8342b8eFd4D804B97Df92bC6bb930099098fDE": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xcfd0637093193ac909f74F9de95c2d4B92Df23c4": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xCfee3d8CBc7dFdea23608E73b48B1b83Af8603a9": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xd079265E929C845707e816E3855721D055d40235": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xd2428F8C62fBfEA4b44a703CF11e02D7B0a6Cd99": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xD27F88501e62D0BDc70B20d6ed06d8E0fF8c3812": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xd2D62AB60A53Bad539CD8e43121c624B246F6302": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xD37a60E8C36E802D2E1a6321832Ee85556Beeb76": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig)",
      "error BadARMSignal()",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(string message)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address armProxy))",
      "function getTransmitters() view returns (address[])",
      "function isARMHealthy() view returns (bool)",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndARMHealthy() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xD4304D2D5C9cdF63124fD2A6C814f6b4F85925D9": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xD4C6184DEC4e10395AB84b9e7a7ab46d0D57329e": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xD6597750bf74DCAEC57e0F9aD2ec998D837005bf": [
      "constructor(address _singleton)"
    ],
    "eth:0xd72F7010f0Fa621aB0869e61e9bb4e3cC887c66c": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xd8F93Aff87dC2AEEe0D0b0dF347baDA861BFf802": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xD9757aA52907798d1aF2FDa7A6C0cC733E5aCf7e": [
      "error CallReverted(bytes error)",
      "error GroupTreeNotWellFormed()",
      "error InsufficientSigners()",
      "error InvalidSigner()",
      "error MissingConfig()",
      "error OutOfBoundsGroup()",
      "error OutOfBoundsGroupQuorum()",
      "error OutOfBoundsNumOfSigners()",
      "error PendingOps()",
      "error PostOpCountReached()",
      "error ProofCannotBeVerified()",
      "error RootExpired()",
      "error SignedHashAlreadySeen()",
      "error SignerGroupsLengthMismatch()",
      "error SignerInDisabledGroup()",
      "error SignersAddressesMustBeStrictlyIncreasing()",
      "error ValidUntilHasAlreadyPassed()",
      "error WrongChainId()",
      "error WrongMultiSig()",
      "error WrongNonce()",
      "error WrongPostOpCount()",
      "error WrongPreOpCount()",
      "event ConfigSet(tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents) config, bool isRootCleared)",
      "event NewRoot(bytes32 indexed root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata)",
      "event OpExecuted(uint40 indexed nonce, address to, bytes data, uint256 value)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function MAX_NUM_SIGNERS() view returns (uint8)",
      "function NUM_GROUPS() view returns (uint8)",
      "function acceptOwnership()",
      "function execute(tuple(uint256 chainId, address multiSig, uint40 nonce, address to, uint256 value, bytes data) op, bytes32[] proof) payable",
      "function getConfig() view returns (tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents))",
      "function getOpCount() view returns (uint40)",
      "function getRoot() view returns (bytes32 root, uint32 validUntil)",
      "function getRootMetadata() view returns (tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot))",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setConfig(address[] signerAddresses, uint8[] signerGroups, uint8[32] groupQuorums, uint8[32] groupParents, bool clearRoot)",
      "function setRoot(bytes32 root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata, bytes32[] metadataProof, tuple(uint8 v, bytes32 r, bytes32 s)[] signatures)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0xD9d3d90D729F50794741Da7a2d54d8B12dC3Da72": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "eth:0xDaC3A82Cc5e7C137bF28e6EF4F68f29D66205ffe": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xDb156E875Ef17dDe70c90a1529023fFf376e627c": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xdCa0A2341ed5438E06B9982243808A76B9ADD6d0": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error InsufficientLiquidity()",
      "error LiquidityNotAccepted()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error WithdrawalTooHigh()",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function addLiquidity(uint256 amount)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function canAcceptLiquidity() view returns (bool)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getProvidedLiquidity(address provider) view returns (uint256)",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function removeLiquidity(uint256 amount)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xdCF6F209d36d93A26B251D2CFE994bEF02954110": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xDE76A096C5eadDdf97Af3fE15ee49d32AEDa9822": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xe199E1C5201CCDd3792ed902aD3f610Ce5629B59": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xe1A8223DAc2aeC3090322674F054D35C240Dc37f": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xe26D9c68cF6d284367C5e90EC834C6Ec0051f73C": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xE2F0dad85D504aa046b9F704a426fD6C5493e366": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xe3f4B78cdd20f6B8AE8644064656d3E2bF08c4B8": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xE41677500B425999cB4133950ca3aB79eA7470a6": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xe4832022873C69E14731fd9436eb7FB9538Ae86F": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xe48D935e6C9e735463ccCf29a7F11e32bC09136E": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xe4a9fa29E3d88660577E4ACD9bf88Ef2DF4F8D7C": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xE53289F32c8E690b7173aA33affE9B6B0CB0012F": [
      "error CallReverted(bytes error)",
      "error GroupTreeNotWellFormed()",
      "error InsufficientSigners()",
      "error InvalidSigner()",
      "error MissingConfig()",
      "error OutOfBoundsGroup()",
      "error OutOfBoundsGroupQuorum()",
      "error OutOfBoundsNumOfSigners()",
      "error PendingOps()",
      "error PostOpCountReached()",
      "error ProofCannotBeVerified()",
      "error RootExpired()",
      "error SignedHashAlreadySeen()",
      "error SignerGroupsLengthMismatch()",
      "error SignerInDisabledGroup()",
      "error SignersAddressesMustBeStrictlyIncreasing()",
      "error ValidUntilHasAlreadyPassed()",
      "error WrongChainId()",
      "error WrongMultiSig()",
      "error WrongNonce()",
      "error WrongPostOpCount()",
      "error WrongPreOpCount()",
      "event ConfigSet(tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents) config, bool isRootCleared)",
      "event NewRoot(bytes32 indexed root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata)",
      "event OpExecuted(uint40 indexed nonce, address to, bytes data, uint256 value)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function MAX_NUM_SIGNERS() view returns (uint8)",
      "function NUM_GROUPS() view returns (uint8)",
      "function acceptOwnership()",
      "function execute(tuple(uint256 chainId, address multiSig, uint40 nonce, address to, uint256 value, bytes data) op, bytes32[] proof)",
      "function getConfig() view returns (tuple(tuple(address addr, uint8 index, uint8 group)[] signers, uint8[32] groupQuorums, uint8[32] groupParents))",
      "function getOpCount() view returns (uint40)",
      "function getRoot() view returns (bytes32 root, uint32 validUntil)",
      "function getRootMetadata() view returns (tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot))",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setConfig(address[] signerAddresses, uint8[] signerGroups, uint8[32] groupQuorums, uint8[32] groupParents, bool clearRoot)",
      "function setRoot(bytes32 root, uint32 validUntil, tuple(uint256 chainId, address multiSig, uint40 preOpCount, uint40 postOpCount, bool overridePreviousRoot) metadata, bytes32[] metadataProof, tuple(uint8 v, bytes32 r, bytes32 s)[] signatures)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0xE58eDBb7Fdd5f2DD5cfAD2667e5D570E1a0a6A84": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xE5bb39230Bf097a0C322440B9e839854AD77E85a": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xE727F7975bEF908C49D0591724669F05F7dAd811": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xe8464c353210Cc398A45dB2454FBc5BCd25fFf20": [
      "constructor(uint64 localChainSelector, address legacyRMN)",
      "error AlreadyCursed(bytes16 subject)",
      "error CannotTransferToSelf()",
      "error ConfigNotSet()",
      "error DuplicateOnchainPublicKey()",
      "error InvalidSignature()",
      "error InvalidSignerOrder()",
      "error IsBlessedNotAvailable()",
      "error MustBeProposedOwner()",
      "error NotCursed(bytes16 subject)",
      "error NotEnoughSigners()",
      "error OnlyCallableByOwner()",
      "error OutOfOrderSignatures()",
      "error OwnerCannotBeZero()",
      "error ThresholdNotMet()",
      "error UnexpectedSigner()",
      "error ZeroValueNotAllowed()",
      "event ConfigSet(uint32 indexed version, tuple(bytes32 rmnHomeContractConfigDigest, tuple(address onchainPublicKey, uint64 nodeIndex)[] signers, uint64 fSign) config)",
      "event Cursed(bytes16[] subjects)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Uncursed(bytes16[] subjects)",
      "function acceptOwnership()",
      "function curse(bytes16 subject)",
      "function curse(bytes16[] subjects)",
      "function getCursedSubjects() view returns (bytes16[] subjects)",
      "function getLocalChainSelector() view returns (uint64 localChainSelector)",
      "function getReportDigestHeader() pure returns (bytes32 digestHeader)",
      "function getVersionedConfig() view returns (uint32 version, tuple(bytes32 rmnHomeContractConfigDigest, tuple(address onchainPublicKey, uint64 nodeIndex)[] signers, uint64 fSign) config)",
      "function isBlessed(tuple(address commitStore, bytes32 root) taggedRoot) view returns (bool)",
      "function isCursed(bytes16 subject) view returns (bool)",
      "function isCursed() view returns (bool)",
      "function owner() view returns (address)",
      "function setConfig(tuple(bytes32 rmnHomeContractConfigDigest, tuple(address onchainPublicKey, uint64 nodeIndex)[] signers, uint64 fSign) newConfig)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function uncurse(bytes16 subject)",
      "function uncurse(bytes16[] subjects)",
      "function verify(address offRampAddress, tuple(uint64 sourceChainSelector, bytes onRampAddress, uint64 minSeqNr, uint64 maxSeqNr, bytes32 merkleRoot)[] merkleRoots, tuple(bytes32 r, bytes32 s)[] signatures) view"
    ],
    "eth:0xe9bFB4fe6E403985c5f2b968f883A9590Aac54aC": [
      "constructor(address token, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xEa9c3dB69C9eE60FB0B06d1A1c9077B16F2D7C82": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xeAD31B98179e2637Bb052a970Ac92Cbb2E26461d": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xeaE89E53B8317CaB04165F5323285252D5669B73": [
      "constructor(address token, address[] allowlist, address armProxy)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error NonExistentRamp(address ramp)",
      "error PermissionsError()",
      "error RampAlreadyExists(address ramp)",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OffRampAdded(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampConfigured(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OffRampRemoved(address offRamp)",
      "event OnRampAdded(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampConfigured(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "event OnRampRemoved(address onRamp)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyRampUpdates(tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] onRamps, tuple(address ramp, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)[] offRamps)",
      "function currentOffRampRateLimiterState(address offRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function currentOnRampRateLimiterState(address onRamp) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getOffRamps() view returns (address[])",
      "function getOnRamps() view returns (address[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(address offRamp) view returns (bool)",
      "function isOnRamp(address onRamp) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64, bytes)",
      "function setOffRampRateLimiterConfig(address offRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function setOnRampRateLimiterConfig(address onRamp, tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xEcf61D6fAA3B9faE7195AF3bc9891450C1733f78": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xEcfec1595D273A71aC94370eA1C62480569dCAFf": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xEDe803B34B30C8De6a128DE57B855263Cd8C55bc": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xEeBBa578621261D92FaFa6eE755eF80635703C4B": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xEfd5fEFEdE55B5C41B8fa0d171a79ba5BeadD2Aa": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xf05a207442f14E446b0e32b12D2043bfc68Cb1C9": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xF0fCdb037718E1B2b52f109Ae776713F9c1f730c": [
      "constructor(address _singleton)"
    ],
    "eth:0xF191733ea5be14E4a5f381a3c375A4F3F8fd4793": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xF31EA507475B9c4be40241Dc25992Fda7aA20453": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xf33341f2CE329B5DbCa7F9a0986Cff40d050440a": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xf3e2Ccbb7d36c597d1ee4b451C4B46B94FC64239": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xF4208675b84E678d0d01528fA97634e2B0873Fa6": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xf5224EfD7Ea9edFa6b6e06964084b92426DCdE99": [
      "constructor(address token, address[] allowlist, address armProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xF56dcA7a981a53ec2EbeF2040800F04206021583": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xF57fc17729Bd2bcD1e1342917B160eB4b69EE89A": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xF6403CF6E954a43699097322e0867C63d653C2D0": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event LiquidityTransferred(address indexed from, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xF6698064776D521b0AFE469F30C40B39B4875b93": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error ChainNotSiloed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity(uint256 availableLiquidity, uint256 requestedAmount)",
      "error InvalidChainSelector(uint64 remoteChainSelector)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityAmountCannotBeZero()",
      "error MismatchedArrayLengths()",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ChainSiloed(uint64 remoteChainSelector, address rebalancer)",
      "event ChainUnsiloed(uint64 remoteChainSelector, uint256 amountUnsiloed)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LiquidityAdded(uint64 remoteChainSelector, address indexed provider, uint256 amount)",
      "event LiquidityRemoved(uint64 remoteChainSelector, address indexed remover, uint256 amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event SiloRebalancerSet(uint64 indexed remoteChainSelector, address oldRebalancer, address newRebalancer)",
      "event TokensConsumed(uint256 tokens)",
      "event UnsiloedRebalancerSet(address oldRebalancer, address newRebalancer)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getAvailableTokens(uint64 remoteChainSelector) view returns (uint256 lockedTokens)",
      "function getChainRebalancer(uint64 remoteChainSelector) view returns (address)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function getUnsiloedLiquidity() view returns (uint256)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSiloed(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function provideSiloedLiquidity(uint64 remoteChainSelector, uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setChainRateLimiterConfigs(uint64[] remoteChainSelectors, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] outboundConfigs, tuple(bool isEnabled, uint128 capacity, uint128 rate)[] inboundConfigs)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address newRebalancer)",
      "function setRouter(address newRouter)",
      "function setSiloRebalancer(uint64 remoteChainSelector, address newRebalancer)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function updateSiloDesignations(uint64[] removes, tuple(uint64 remoteChainSelector, address rebalancer)[] adds)",
      "function withdrawLiquidity(uint256 amount)",
      "function withdrawSiloedLiquidity(uint64 remoteChainSelector, uint256 amount)"
    ],
    "eth:0xF6c88f0933126c2e2CDb060910165aA4BfC11B99": [
      "constructor(address token, address[] allowlist, address rmnProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event LegacyPoolChanged(address oldPool, address newPool)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolSet(uint64 indexed remoteChainSelector, bytes previousPoolAddress, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, bytes remotePoolAddress, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getOnRamp(uint64) view returns (address onRampAddress)",
      "function getPreviousPool() view returns (address)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRemotePool(uint64 remoteChainSelector) view returns (bytes)",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isOffRamp(uint64 sourceChainSelector, address offRamp) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setPreviousPool(address prevPool)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferLiquidity(address from, uint256 amount)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xf76A0c47900ca2dD1874AB4Dc4049810E919684d": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xf7B343A17445F175f2Dd9f5CB29BAf0a8dE75ed3": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xf7D68CcC92B836316C40B24ea77F6805DcBb8F02": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xF84Bf7D614F3138D805186C497995d4eD315fA72": [
      "constructor(address token, address[] allowlist, address armProxy, bool acceptLiquidity, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BadARMSignal()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InsufficientLiquidity()",
      "error InvalidRatelimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error LiquidityNotAccepted()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event LiquidityAdded(address indexed provider, uint256 indexed amount)",
      "event LiquidityRemoved(address indexed provider, uint256 indexed amount)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "function acceptOwnership()",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(tuple(uint64 remoteChainSelector, bool allowed, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chains)",
      "function canAcceptLiquidity() view returns (bool)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getArmProxy() view returns (address armProxy)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getLockReleaseInterfaceId() pure returns (bytes4)",
      "function getRateLimitAdmin() view returns (address)",
      "function getRebalancer() view returns (address)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function lockOrBurn(address originalSender, bytes, uint256 amount, uint64 remoteChainSelector, bytes) returns (bytes)",
      "function owner() view returns (address)",
      "function provideLiquidity(uint256 amount)",
      "function releaseOrMint(bytes, address receiver, uint256 amount, uint64 remoteChainSelector, bytes)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRebalancer(address rebalancer)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)",
      "function withdrawLiquidity(uint256 amount)"
    ],
    "eth:0xFa94e57b12b6C45A3aD3CBb9451ba99a997eb210": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xfacFe88fdf03Ab7D30d6CA45A070Df7C54551fd6": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xfCEEf7bD8F46E99D9E38942447b91c6DE81cF500": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ],
    "eth:0xFE73BccC5b88D22969099EBb4E2eb5e19eFb0165": [
      "constructor(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig)",
      "error ConfigDigestMismatch(bytes32 expected, bytes32 actual)",
      "error CursedByRMN()",
      "error ForkedChain(uint256 expected, uint256 actual)",
      "error InvalidCommitStoreConfig()",
      "error InvalidConfig(uint8 errorType)",
      "error InvalidInterval(tuple(uint64 min, uint64 max) interval)",
      "error InvalidProof()",
      "error InvalidRoot()",
      "error LeavesCannotBeEmpty()",
      "error NonUniqueSignatures()",
      "error OracleCannotBeZeroAddress()",
      "error PausedError()",
      "error RootAlreadyCommitted()",
      "error SignaturesOutOfRegistration()",
      "error StaleReport()",
      "error UnauthorizedSigner()",
      "error UnauthorizedTransmitter()",
      "error WrongMessageLength(uint256 expected, uint256 actual)",
      "error WrongNumberOfSignatures()",
      "event ConfigSet(tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy) staticConfig, tuple(address priceRegistry) dynamicConfig)",
      "event ConfigSet(uint32 previousConfigBlockNumber, bytes32 configDigest, uint64 configCount, address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "event LatestPriceEpochAndRoundSet(uint40 oldEpochAndRound, uint40 newEpochAndRound)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event Paused(address account)",
      "event ReportAccepted(tuple(tuple(tuple(address sourceToken, uint224 usdPerToken)[] tokenPriceUpdates, tuple(uint64 destChainSelector, uint224 usdPerUnitGas)[] gasPriceUpdates) priceUpdates, tuple(uint64 min, uint64 max) interval, bytes32 merkleRoot) report)",
      "event RootRemoved(bytes32 root)",
      "event SequenceNumberSet(uint64 oldSeqNum, uint64 newSeqNum)",
      "event Transmitted(bytes32 configDigest, uint32 epoch)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function getDynamicConfig() view returns (tuple(address priceRegistry))",
      "function getExpectedNextSequenceNumber() view returns (uint64)",
      "function getLatestPriceEpochAndRound() view returns (uint64)",
      "function getMerkleRoot(bytes32 root) view returns (uint256)",
      "function getStaticConfig() view returns (tuple(uint64 chainSelector, uint64 sourceChainSelector, address onRamp, address rmnProxy))",
      "function getTransmitters() view returns (address[])",
      "function isBlessed(bytes32 root) view returns (bool)",
      "function isUnpausedAndNotCursed() view returns (bool)",
      "function latestConfigDetails() view returns (uint32 configCount, uint32 blockNumber, bytes32 configDigest)",
      "function latestConfigDigestAndEpoch() view returns (bool scanLogs, bytes32 configDigest, uint32 epoch)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function resetUnblessedRoots(bytes32[] rootToReset)",
      "function setLatestPriceEpochAndRound(uint40 latestPriceEpochAndRound)",
      "function setMinSeqNr(uint64 minSeqNr)",
      "function setOCR2Config(address[] signers, address[] transmitters, uint8 f, bytes onchainConfig, uint64 offchainConfigVersion, bytes offchainConfig)",
      "function transferOwnership(address to)",
      "function transmit(bytes32[3] reportContext, bytes report, bytes32[] rs, bytes32[] ss, bytes32 rawVs)",
      "function typeAndVersion() view returns (string)",
      "function unpause()",
      "function verify(bytes32[] hashedLeaves, bytes32[] proofs, uint256 proofFlagBits) view returns (uint256 timestamp)"
    ],
    "eth:0xfF48E1852F90cE91a698eE1A74cC8b8911479bF9": [
      "constructor(address token, uint8 localTokenDecimals, address[] allowlist, address rmnProxy, address router)",
      "error AggregateValueMaxCapacityExceeded(uint256 capacity, uint256 requested)",
      "error AggregateValueRateLimitReached(uint256 minWaitInSeconds, uint256 available)",
      "error AllowListNotEnabled()",
      "error BucketOverfilled()",
      "error CallerIsNotARampOnRouter(address caller)",
      "error CannotTransferToSelf()",
      "error ChainAlreadyExists(uint64 chainSelector)",
      "error ChainNotAllowed(uint64 remoteChainSelector)",
      "error CursedByRMN()",
      "error DisabledNonZeroRateLimit(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "error InvalidDecimalArgs(uint8 expected, uint8 actual)",
      "error InvalidRateLimitRate(tuple(bool isEnabled, uint128 capacity, uint128 rate) rateLimiterConfig)",
      "error InvalidRemoteChainDecimals(bytes sourcePoolData)",
      "error InvalidRemotePoolForChain(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error InvalidSourcePoolAddress(bytes sourcePoolAddress)",
      "error InvalidToken(address token)",
      "error MustBeProposedOwner()",
      "error NonExistentChain(uint64 remoteChainSelector)",
      "error OnlyCallableByOwner()",
      "error OverflowDetected(uint8 remoteDecimals, uint8 localDecimals, uint256 remoteAmount)",
      "error OwnerCannotBeZero()",
      "error PoolAlreadyAdded(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "error RateLimitMustBeDisabled()",
      "error SenderNotAllowed(address sender)",
      "error TokenMaxCapacityExceeded(uint256 capacity, uint256 requested, address tokenAddress)",
      "error TokenRateLimitReached(uint256 minWaitInSeconds, uint256 available, address tokenAddress)",
      "error Unauthorized(address caller)",
      "error ZeroAddressNotAllowed()",
      "event AllowListAdd(address sender)",
      "event AllowListRemove(address sender)",
      "event Burned(address indexed sender, uint256 amount)",
      "event ChainAdded(uint64 remoteChainSelector, bytes remoteToken, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainConfigured(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)",
      "event ChainRemoved(uint64 remoteChainSelector)",
      "event ConfigChanged(tuple(bool isEnabled, uint128 capacity, uint128 rate) config)",
      "event Locked(address indexed sender, uint256 amount)",
      "event Minted(address indexed sender, address indexed recipient, uint256 amount)",
      "event OwnershipTransferRequested(address indexed from, address indexed to)",
      "event OwnershipTransferred(address indexed from, address indexed to)",
      "event RateLimitAdminSet(address rateLimitAdmin)",
      "event Released(address indexed sender, address indexed recipient, uint256 amount)",
      "event RemotePoolAdded(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RemotePoolRemoved(uint64 indexed remoteChainSelector, bytes remotePoolAddress)",
      "event RouterUpdated(address oldRouter, address newRouter)",
      "event TokensConsumed(uint256 tokens)",
      "function acceptOwnership()",
      "function addRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function applyAllowListUpdates(address[] removes, address[] adds)",
      "function applyChainUpdates(uint64[] remoteChainSelectorsToRemove, tuple(uint64 remoteChainSelector, bytes[] remotePoolAddresses, bytes remoteTokenAddress, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundRateLimiterConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundRateLimiterConfig)[] chainsToAdd)",
      "function getAllowList() view returns (address[])",
      "function getAllowListEnabled() view returns (bool)",
      "function getCurrentInboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getCurrentOutboundRateLimiterState(uint64 remoteChainSelector) view returns (tuple(uint128 tokens, uint32 lastUpdated, bool isEnabled, uint128 capacity, uint128 rate))",
      "function getRateLimitAdmin() view returns (address)",
      "function getRemotePools(uint64 remoteChainSelector) view returns (bytes[])",
      "function getRemoteToken(uint64 remoteChainSelector) view returns (bytes)",
      "function getRmnProxy() view returns (address rmnProxy)",
      "function getRouter() view returns (address router)",
      "function getSupportedChains() view returns (uint64[])",
      "function getToken() view returns (address token)",
      "function getTokenDecimals() view returns (uint8 decimals)",
      "function isRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress) view returns (bool)",
      "function isSupportedChain(uint64 remoteChainSelector) view returns (bool)",
      "function isSupportedToken(address token) view returns (bool)",
      "function lockOrBurn(tuple(bytes receiver, uint64 remoteChainSelector, address originalSender, uint256 amount, address localToken) lockOrBurnIn) returns (tuple(bytes destTokenAddress, bytes destPoolData))",
      "function owner() view returns (address)",
      "function releaseOrMint(tuple(bytes originalSender, uint64 remoteChainSelector, address receiver, uint256 amount, address localToken, bytes sourcePoolAddress, bytes sourcePoolData, bytes offchainTokenData) releaseOrMintIn) returns (tuple(uint256 destinationAmount))",
      "function removeRemotePool(uint64 remoteChainSelector, bytes remotePoolAddress)",
      "function setChainRateLimiterConfig(uint64 remoteChainSelector, tuple(bool isEnabled, uint128 capacity, uint128 rate) outboundConfig, tuple(bool isEnabled, uint128 capacity, uint128 rate) inboundConfig)",
      "function setRateLimitAdmin(address rateLimitAdmin)",
      "function setRouter(address newRouter)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
      "function transferOwnership(address to)",
      "function typeAndVersion() view returns (string)"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "tokens/circle/MessageTransmitter": "0xa08ec2ee361f024f79836400aba320fcc928f9e5c224c65eb670f8ec23548cd6",
    "transporter/CommitStoreV1": "0x1ece386a05791f14e597cf46a5683c96874556a32171cecee941f10b3e55aa5f",
    "transporter/HybridLockReleaseUSDCTokenPool": "0xbe19333440e04fd214ff70cb41d6b40f8b22b828f0f39d434219e5eca6567b23",
    "transporter/ManyChainMultiSig": "0x21581960386f06fc34963035830a3ca548780df8068db571d08450196a3a0d15",
    "transporter/OffRampV1": "0x728a2acf1dc05efa76c7d11920525e16aadf1ac9448875c17eeeaf351416e090",
    "transporter/OnRampV1": "0xcc8428194e26169a3cd1cd63731820f4c409a83c37c7ff6e1dc60a2ca546a291",
    "transporter/PriceRegistry": "0x1446d2e81e0804c808246c6c31122a8823aa7c974e2487647d7502d530d9b46f",
    "transporter/RouterV1_2_0": "0xabd52866e5c895c524c21b209ff836630841998d9c58164c4d5bb9cce698fb19",
    "transporter/TokenAdminRegistry": "0x28d68380ec883c6a6b267b97c91ab0904a762c604e68b51e4ec12ffed9c32d05",
    "transporter/TokenPool": "0x59c72ebd7fccb0c082baa2045709200cefcb0c32301f4f9f545b571a1e1d7d45"
  },
  "usedBlockNumbers": { "ethereum": 23397320 },
  "permissionsConfigHash": "0x95682b41d98acde71f662e1c47931fdfb4e7683684b9789aacd6c99fe7adb17c"
}
