{
  "name": "phala",
  "chain": "ethereum",
  "blockNumber": 22467145,
  "configHash": "0x24c5004aaf6a239e6ed1926aca9fe5cda0346a6c4c6b75b8fe82e6b7be1393e4",
  "entries": [
    {
      "address": "0x000000000000000000000000000000000000dEaD",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LivenessModule",
      "address": "0x0454092516c9A4d636d3CAfA1e82161376C8a748",
      "type": "Contract",
      "template": "gnosisSafeModules/LivenessModule",
      "sourceHashes": [
        "0x998654cb64c7fc216505bdb3322b20e7d7c95704005228ad1f878bc631c4af8d"
      ],
      "proxyType": "immutable",
      "description": "used to remove members inactive for 98d while making sure that the threshold remains above 75%. If the number of members falls below 8, the 0x847B5c174615B1B7fDF770882256e2D3E95b9D92 takes ownership of the multisig",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03",
          "role": ".GnosisSafe_modules"
        }
      ],
      "sinceTimestamp": 1717149791,
      "sinceBlock": 19989094,
      "values": {
        "$immutable": true,
        "fallbackOwner": "0x847B5c174615B1B7fDF770882256e2D3E95b9D92",
        "livenessGuard": "0x24424336F04440b1c28685a38303aC33C9D14a25",
        "livenessInterval": "98d",
        "minOwners": 8,
        "ownershipTransferredToFallback": false,
        "safe": "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03",
        "thresholdPercentage": 75,
        "version": "1.2.0"
      },
      "implementationNames": {
        "0x0454092516c9A4d636d3CAfA1e82161376C8a748": "LivenessModule"
      }
    },
    {
      "address": "0x07dC0893cAfbF810e3E72505041f2865726Fd073",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Optimism Guardian Multisig",
      "address": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "directlyReceivedPermissions": [
        {
          "permission": "guard",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "role": ".guardian"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1716902219,
      "sinceBlock": 19968607,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0xc2819DC788505Aac350142A7A707BF9D03E3Bd03"],
        "$threshold": 1,
        "domainSeparator": "0x441442b08d4fdc9877b881d21b5394f2af9aa0f41ef7184f54e10664ea757773",
        "getChainId": 1,
        "GnosisSafe_modules": ["0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B"],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 4,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "0x0aA384EB2fedD2741277A0f72909A0d7275575D7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "DeputyPauseModule",
      "address": "0x126a736B18E0a64fBA19D421647A530E327E112C",
      "type": "Contract",
      "template": "opstack/DeputyPauseModule",
      "sourceHashes": [
        "0x9ce85f452c217be52c8f91f907759e771e78bbcd9d8cda37e90e3cdd9a70cf15"
      ],
      "proxyType": "immutable",
      "description": "Allows 0x352f1defB49718e7Ea411687E850aA8d6299F7aC, called the deputy pauser, to act on behalf of the 0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A if set as its Safe module.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
          "role": ".GnosisSafe_modules"
        }
      ],
      "sinceTimestamp": 1745572679,
      "sinceBlock": 22345090,
      "values": {
        "$immutable": true,
        "deputy": "0x352f1defB49718e7Ea411687E850aA8d6299F7aC",
        "deputyAuthMessageTypehash": "0x92e47526b2e32be4f66cd2600e9cda9147735107631c0b241a067693f49b7f38",
        "deputyGuardianModule": "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "DeputyPauseModule",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x126a736B18E0a64fBA19D421647A530E327E112C",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "foundationSafe": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
        "pauseMessageTypehash": "0xd64f31a1d64c5b7eede44a92f46995fef9325cb2533a7798a738932f156c4481",
        "superchainConfig": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "version": "1.0.0-beta.2"
      },
      "implementationNames": {
        "0x126a736B18E0a64fBA19D421647A530E327E112C": "DeputyPauseModule"
      }
    },
    {
      "name": "L1CrossDomainMessenger",
      "address": "0x1549Dd6f86f5bBf0b1Bc691407DE64e8104c1544",
      "type": "Contract",
      "template": "opstack/L1CrossDomainMessenger",
      "sourceHashes": [
        "0x20a2eb4d3677fc8a15e944f7b1843acd01b2e92acdc4c7a7f7a35b07b891149b",
        "0x6bee26e08bb3e482693649b598e8c0423de9025ebebdc773e9a2f9aa6f362478"
      ],
      "proxyType": "resolved delegate proxy",
      "description": "Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function.",
      "ignoreInWatchMode": ["messageNonce"],
      "sinceTimestamp": 1734387299,
      "sinceBlock": 21418005,
      "values": {
        "$immutable": false,
        "$implementation": "0xF4e69D58027De611d9F142e6b0Db6b11569F50E7",
        "$pastUpgrades": [
          [
            "2024-12-16T22:15:47.000Z",
            "0x0e51f9c3e3dc969d70426a6662d4e2b6abbb2fa1cbda3373bcbe5120342f04fd",
            ["0xF4e69D58027De611d9F142e6b0Db6b11569F50E7"]
          ]
        ],
        "$upgradeCount": 1,
        "MESSAGE_VERSION": 1,
        "messageNonce": "1766847064778384329583297500742918515827483896875618958121606201292619830",
        "MIN_GAS_CALLDATA_OVERHEAD": 16,
        "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR": 63,
        "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR": 64,
        "OTHER_MESSENGER": "0x4200000000000000000000000000000000000007",
        "otherMessenger": "0x4200000000000000000000000000000000000007",
        "paused": false,
        "portal": "0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A",
        "PORTAL": "0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A",
        "RELAY_CALL_OVERHEAD": 40000,
        "RELAY_CONSTANT_OVERHEAD": 200000,
        "RELAY_GAS_CHECK_BUFFER": 5000,
        "RELAY_RESERVED_GAS": 40000,
        "ResolvedDelegateProxy_addressManager": "0x51D5C516c818dcf63E67B28cB2516166D8578c06",
        "ResolvedDelegateProxy_implementationName": "OVM_L1CrossDomainMessenger",
        "superchainConfig": "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8",
        "systemConfig": "0xeBf5859b7646ca9cf8A981613569bF28394F2571",
        "version": "2.4.0"
      },
      "implementationNames": {
        "0x1549Dd6f86f5bBf0b1Bc691407DE64e8104c1544": "ResolvedDelegateProxy",
        "0xF4e69D58027De611d9F142e6b0Db6b11569F50E7": "L1CrossDomainMessenger"
      },
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "0x1822b35B09f5ce1C78ecbC06AC0A4e17885b925e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x96d2f0fa1bd83ebd61ba6a2351c64c7fda7aa580b11ea67bb6bf4338e5c28512"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "0x51D5C516c818dcf63E67B28cB2516166D8578c06",
          "description": "set and change address mappings.",
          "role": ".owner"
        },
        {
          "permission": "upgrade",
          "from": "0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521",
          "description": "upgrading the bridge implementation can give access to all funds escrowed therein.",
          "role": ".$admin"
        },
        {
          "permission": "upgrade",
          "from": "0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0xa010dE167788ed7d95c770AC478997D3207236AF",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0xb45440830bd8D288bB2B5B01Be303ae60fc855d8",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0xeBf5859b7646ca9cf8A981613569bF28394F2571",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0xF8e8E783fa7A5CCDB77EddC3335cDb00066B515e",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1734387287,
      "sinceBlock": 21418004,
      "values": {
        "$immutable": true,
        "addressManager": "0x51D5C516c818dcf63E67B28cB2516166D8578c06",
        "isUpgrading": false,
        "owner": "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746"
      },
      "implementationNames": {
        "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E": "ProxyAdmin"
      }
    },
    {
      "name": "LivenessGuard",
      "address": "0x24424336F04440b1c28685a38303aC33C9D14a25",
      "type": "Contract",
      "sourceHashes": [
        "0xe771f3d1c51456e08e2c93a904b12010870dc4fa79ee82e4bc90433557931f05"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0454092516c9A4d636d3CAfA1e82161376C8a748",
          "description": "can remove members of 0xc2819DC788505Aac350142A7A707BF9D03E3Bd03 inactive for 98d.",
          "role": ".livenessGuard"
        }
      ],
      "sinceTimestamp": 1717149791,
      "sinceBlock": 19989094,
      "values": {
        "$immutable": true,
        "safe": "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03",
        "version": "1.0.0"
      },
      "implementationNames": {
        "0x24424336F04440b1c28685a38303aC33C9D14a25": "LivenessGuard"
      }
    },
    {
      "address": "0x3041BA32f451F5850c147805F5521AC206421623",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Optimism EOA 1",
      "address": "0x352f1defB49718e7Ea411687E850aA8d6299F7aC",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "guard",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "role": ".guardian",
          "via": [
            { "address": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2" },
            {
              "address": "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B",
              "condition": "if not revoked by the Security Council"
            },
            { "address": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A" },
            {
              "address": "0x126a736B18E0a64fBA19D421647A530E327E112C",
              "condition": "though restricted to the global pause function"
            }
          ]
        },
        {
          "permission": "guard",
          "from": "0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A",
          "role": ".guardian",
          "via": [
            { "address": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A" },
            {
              "address": "0x126a736B18E0a64fBA19D421647A530E327E112C",
              "condition": "though restricted to the global pause function"
            }
          ]
        },
        {
          "permission": "guard",
          "from": "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8",
          "role": ".guardian",
          "via": [
            { "address": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A" },
            {
              "address": "0x126a736B18E0a64fBA19D421647A530E327E112C",
              "condition": "though restricted to the global pause function"
            }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x126a736B18E0a64fBA19D421647A530E327E112C",
          "role": ".deputy",
          "condition": "though restricted to the global pause function"
        }
      ]
    },
    {
      "address": "0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SP1VerifierGateway",
      "address": "0x3B6041173B80E77f038f3F2C0f9744f04837185e",
      "type": "Contract",
      "template": "succinct/SP1VerifierGateway",
      "sourceHashes": [
        "0xc651adcd746b8794c5b6c418aeb146f1b13b207cc9d2712ba66a42bd4b29af37"
      ],
      "proxyType": "immutable",
      "description": "This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.",
      "sinceTimestamp": 1720099223,
      "sinceBlock": 20233410,
      "values": {
        "$immutable": true,
        "oldVerifier": {
          "verifier": "0xc350F063C13a3Ca21331610fe159E697a5c9c2FB",
          "frozen": true
        },
        "oldVerifier2": {
          "verifier": "0x6B6A7Ded061567d8A56279801DEA5cFB79be5bFc",
          "frozen": true
        },
        "oldVerifier3": {
          "prover": "0x6A87EFd4e6B2Db1ed73129A8b9c51aaA583d49e3",
          "frozen": true
        },
        "oldVerifier4": {
          "verifier": "0x1764C29FBd94865198588f10FC75D4f6636d158d",
          "frozen": true
        },
        "oldVerifier5": {
          "prover": "0xd2832Cf1fC8bA210FfABF62Db9A8781153131d16",
          "frozen": true
        },
        "opSuccinctVerifier": {
          "verifier": "0xE00a3cBFC45241b33c0A44C78e26168CBc55EC63",
          "frozen": false
        },
        "owner": "0xCafEf00d348Adbd57c37d1B77e0619C6244C6878",
        "verifier": {
          "prover": "0xE00a3cBFC45241b33c0A44C78e26168CBc55EC63",
          "frozen": false
        }
      },
      "fieldMeta": {
        "oldVerifier": {
          "description": "The verifier contract address for SP1, and whether it is frozen (true if frozen). This verifier route was frozen on 2024-09-04."
        },
        "oldVerifier2": {
          "description": "The verifier contract address for SP1, and whether it is frozen (true if frozen). This prover route was frozen on 2024-09-21."
        },
        "oldVerifier3": {
          "description": "The verifier contract address for SP1, and whether it is frozen (true if frozen). This prover route was frozen on 2024-11-01."
        },
        "oldVerifier4": {
          "description": "The verifier contract address for SP1, and whether it is frozen (true if frozen). This prover route was frozen on 2024-11-08."
        },
        "oldVerifier5": {
          "description": "The prover contract address for SP1, and whether it is frozen (true if frozen). This prover route was frozen on 2025-01-15."
        },
        "verifier": {
          "description": "The prover contract address for SP1, and whether it is frozen (true if frozen)."
        }
      },
      "implementationNames": {
        "0x3B6041173B80E77f038f3F2C0f9744f04837185e": "SP1VerifierGateway"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1678243007,
      "sinceBlock": 16780617,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xb23794fd6BA1CEAd01Cf54D772b8341F2F0197A5",
          "0x4665374939642965EfD8357D4568D2A77f677429"
        ],
        "$threshold": 2,
        "domainSeparator": "0xc7edf91fb84ec337ffa25b6f502a8c52c3dd4ea86d452728767d2836fa3819e3",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 2 (100%)",
        "nonce": 70,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "0x4665374939642965EfD8357D4568D2A77f677429",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Conduit Multisig 1",
      "address": "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x51D5C516c818dcf63E67B28cB2516166D8578c06",
          "description": "set and change address mappings.",
          "role": ".owner",
          "via": [{ "address": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E" }]
        },
        {
          "permission": "interact",
          "from": "0xb45440830bd8D288bB2B5B01Be303ae60fc855d8",
          "description": "can toggle between the optimistic mode and not optimistic (ZK) mode.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "0xeBf5859b7646ca9cf8A981613569bF28394F2571",
          "description": "it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system.",
          "role": ".owner"
        },
        {
          "permission": "upgrade",
          "from": "0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521",
          "description": "upgrading the bridge implementation can give access to all funds escrowed therein.",
          "role": ".$admin",
          "via": [{ "address": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E" }]
        },
        {
          "permission": "upgrade",
          "from": "0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A",
          "role": "admin",
          "via": [{ "address": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E" }]
        },
        {
          "permission": "upgrade",
          "from": "0xa010dE167788ed7d95c770AC478997D3207236AF",
          "role": "admin",
          "via": [{ "address": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E" }]
        },
        {
          "permission": "upgrade",
          "from": "0xb45440830bd8D288bB2B5B01Be303ae60fc855d8",
          "role": "admin",
          "via": [{ "address": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E" }]
        },
        {
          "permission": "upgrade",
          "from": "0xeBf5859b7646ca9cf8A981613569bF28394F2571",
          "role": "admin",
          "via": [{ "address": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E" }]
        },
        {
          "permission": "upgrade",
          "from": "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8",
          "role": "admin",
          "via": [{ "address": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E" }]
        },
        {
          "permission": "upgrade",
          "from": "0xF8e8E783fa7A5CCDB77EddC3335cDb00066B515e",
          "role": "admin",
          "via": [{ "address": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1680797639,
      "sinceBlock": 16990669,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x860e06Fe384D1A3340111e7D142E02642178c053",
          "0x50930d652266EF4127FA3A1906B7Cb9951076628",
          "0xA0737fea60F0601A192E3d2c98865A883ab0bda2",
          "0xF3313C48BD8E17b823d5498D62F37019dFEA647D",
          "0xF0B77EaE7F2dabCC2571c7418406A0dCA3afA4f0",
          "0xa4000bDD2bB92ce6750b31F1eeda47Bd1cB8e6e4",
          "0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f",
          "0xa0C600a6e85bf225958FFAcC70B5FDDF9A059038",
          "0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C",
          "0x4D8007a0E9f293e62E2b0F43C6Cf4C4B9e135BAe"
        ],
        "$threshold": 4,
        "domainSeparator": "0x0f634ad56005ddbd68dc52233931a858f740b8ab706671c42b055efef561257e",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "4 of 10 (40%)",
        "nonce": 101,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "0x4A7322258c9E690e4CB8Cea6e5251443E956e61E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x4D8007a0E9f293e62E2b0F43C6Cf4C4B9e135BAe",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x50930d652266EF4127FA3A1906B7Cb9951076628",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x51aCb8e1205De850D1b512584FeE9C29C3813dDa",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "AddressManager",
      "address": "0x51D5C516c818dcf63E67B28cB2516166D8578c06",
      "type": "Contract",
      "template": "opstack/AddressManager",
      "sourceHashes": [
        "0xdc86a850f11dc2b5c0472a05d0e3c14f239baf2c3b1ab19631591b0827985380"
      ],
      "proxyType": "immutable",
      "description": "Legacy contract used to manage a mapping of string names to addresses. Modern OP stack uses a different standard proxy system instead, but this contract is still necessary for backwards compatibility with several older contracts.",
      "sinceTimestamp": 1734387287,
      "sinceBlock": 21418004,
      "values": {
        "$immutable": true,
        "owner": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E"
      },
      "implementationNames": {
        "0x51D5C516c818dcf63E67B28cB2516166D8578c06": "AddressManager"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "SuperchainProxyAdmin",
      "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x96d2f0fa1bd83ebd61ba6a2351c64c7fda7aa580b11ea67bb6bf4338e5c28512"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
          "description": "set and change address mappings.",
          "role": ".owner"
        },
        {
          "permission": "upgrade",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1685377355,
      "sinceBlock": 17365800,
      "values": {
        "$immutable": true,
        "addressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "isUpgrading": false,
        "owner": "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A"
      },
      "implementationNames": {
        "0x543bA4AADBAb8f9025686Bd03993043599c6fB04": "ProxyAdmin"
      }
    },
    {
      "name": "SuperchainProxyAdminOwner",
      "address": "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
          "description": "set and change address mappings.",
          "role": ".owner",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "role": "admin",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1707420875,
      "sinceBlock": 19185554,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x847B5c174615B1B7fDF770882256e2D3E95b9D92",
          "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03"
        ],
        "$threshold": 2,
        "domainSeparator": "0xdaf670b31fdf41fdaae2643ed0ebe709283539c0e61540c160b5a6403d79073f",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 2 (100%)",
        "nonce": 15,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "0x5A2a0698355D06cd5c4e3872D2Bc6B9f6a89d39B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x6323ef2b80030f3fBc508bFc321Fc71fDB95c865",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x652BC529E171847E2fFddCeA13567643C84ccB5f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1StandardBridge",
      "address": "0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521",
      "type": "Contract",
      "template": "opstack/L1StandardBridge",
      "sourceHashes": [
        "0xbfb58685ff2f2f07eaa01a3c4e3c33c97686bfd3ae7c50c49f9da6ef5098cb31",
        "0x0c1c0a5eff46fa1b105a2cabe6ce2b7a7fbac2f58af57392b196f8fe5768bd2a"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main entry point to deposit ERC20 tokens from host chain to this chain.",
      "sinceTimestamp": 1734387299,
      "sinceBlock": 21418005,
      "values": {
        "$admin": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E",
        "$implementation": "0x3E5404b298c858018D2439d488F0Fe1E94C71FE9",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "l2TokenBridge": "0x4200000000000000000000000000000000000010",
        "messenger": "0x1549Dd6f86f5bBf0b1Bc691407DE64e8104c1544",
        "MESSENGER": "0x1549Dd6f86f5bBf0b1Bc691407DE64e8104c1544",
        "OTHER_BRIDGE": "0x4200000000000000000000000000000000000010",
        "otherBridge": "0x4200000000000000000000000000000000000010",
        "paused": false,
        "superchainConfig": "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8",
        "systemConfig": "0xeBf5859b7646ca9cf8A981613569bF28394F2571",
        "version": "2.2.0"
      },
      "implementationNames": {
        "0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521": "L1ChugSplashProxy",
        "0x3E5404b298c858018D2439d488F0Fe1E94C71FE9": "L1StandardBridge"
      },
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x7cB07FE039a92B3D784f284D919503A381BEC54f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x7ed8d9Af9eaA194D1A75C67c1475579E42289E39",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OpFoundationUpgradeSafe",
      "address": "0x847B5c174615B1B7fDF770882256e2D3E95b9D92",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "guard",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "role": ".guardian",
          "via": [
            { "address": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2" },
            { "address": "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03" },
            {
              "address": "0x0454092516c9A4d636d3CAfA1e82161376C8a748",
              "condition": "if the number of 0xc2819DC788505Aac350142A7A707BF9D03E3Bd03 members falls below 8."
            }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x0454092516c9A4d636d3CAfA1e82161376C8a748",
          "description": "takes ownership of 0xc2819DC788505Aac350142A7A707BF9D03E3Bd03",
          "role": ".fallbackOwner",
          "condition": "if the number of 0xc2819DC788505Aac350142A7A707BF9D03E3Bd03 members falls below 8."
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1707420755,
      "sinceBlock": 19185544,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64",
          "0x3041BA32f451F5850c147805F5521AC206421623",
          "0xE7dEA1306D9F829bA469d1904c50903b46ebd02e",
          "0xBF93D4d727F7Ba1F753E1124C3e532dCb04Ea2c8",
          "0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15",
          "0x7cB07FE039a92B3D784f284D919503A381BEC54f",
          "0x9bbFB9919062C29a5eE15aCD93c9D7c3b14d31aa"
        ],
        "$threshold": 5,
        "domainSeparator": "0xa4a9c312badf3fcaa05eafe5dc9bee8bd9316c78ee8b0bebe3115bb21b732672",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "5 of 7 (71%)",
        "nonce": 26,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x847B5c174615B1B7fDF770882256e2D3E95b9D92": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "0x860e06Fe384D1A3340111e7D142E02642178c053",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x92827223f6b397CE9F208eE352bacA710765cACb",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x9395e83720bf2D8ac6435f9c520b48E289Cb8885",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SuperchainConfig",
      "address": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
      "type": "Contract",
      "template": "opstack/SuperchainConfig",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x03dba37173051b02bc81487e181c791bcf1aef664c249e5d035f11f488bdd686"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Used to manage global configuration values for multiple OP Chains within a single Superchain network. The SuperchainConfig contract manages the `PAUSED_SLOT`, a boolean value indicating whether the Superchain is paused, and `GUARDIAN_SLOT`, the address of the guardian which can pause and unpause the system.",
      "sinceTimestamp": 1705954799,
      "sinceBlock": 19064589,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0x4da82a327773965b8d4D85Fa3dB8249b387458E7",
        "$pastUpgrades": [
          [
            "2024-01-22T20:19:59.000Z",
            "0x8ba0e42b89cde22310b644ed30fd44e4a348619a165a54c908e7dc341e9bbd0c",
            ["0x53c165169401764778F780a69701385eb0FF19B7"]
          ],
          [
            "2024-06-10T18:29:23.000Z",
            "0xe361c0d4ae3aebc94b3f281ee372fbb1cbdb0c33ca8b1b35e7f3b009b2fcbdb0",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-06-10T18:29:23.000Z",
            "0xe361c0d4ae3aebc94b3f281ee372fbb1cbdb0c33ca8b1b35e7f3b009b2fcbdb0",
            ["0x53c165169401764778F780a69701385eb0FF19B7"]
          ],
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x4da82a327773965b8d4D85Fa3dB8249b387458E7"]
          ]
        ],
        "$upgradeCount": 4,
        "guardian": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2",
        "GUARDIAN_SLOT": "0xd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe68",
        "paused": false,
        "PAUSED_SLOT": "0x54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b6",
        "version": "1.2.0"
      },
      "implementationNames": {
        "0x95703e0982140D16f8ebA6d158FccEde42f04a4C": "Proxy",
        "0x4da82a327773965b8d4D85Fa3dB8249b387458E7": "SuperchainConfig"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "name": "OptimismPortal",
      "address": "0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A",
      "type": "Contract",
      "template": "opstack/OptimismPortal",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x8c9491e689f31c280886abc8ea05ec6ac8d5394be56da8048ab9efeca67c4a3c"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main entry point to deposit funds from host chain to this chain. It also allows to prove and finalize withdrawals.",
      "ignoreInWatchMode": ["params"],
      "sinceTimestamp": 1734387299,
      "sinceBlock": 21418005,
      "values": {
        "$admin": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E",
        "$implementation": "0x5651e4f573303ec65Ba7579Fdc09166F7a403776",
        "$pastUpgrades": [
          [
            "2024-12-16T22:15:47.000Z",
            "0xf15016a91149382e41ef8c726b4e2f21bd371fd1ca2ec5ac6963d485e9a4a1e1",
            ["0x5651e4f573303ec65Ba7579Fdc09166F7a403776"]
          ]
        ],
        "$upgradeCount": 1,
        "guardian": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
        "l2Oracle": "0xb45440830bd8D288bB2B5B01Be303ae60fc855d8",
        "l2Sender": "0x000000000000000000000000000000000000dEaD",
        "params": {
          "prevBaseFee": 1000000000,
          "prevBoughtGas": 491310,
          "prevBlockNum": 22170188
        },
        "paused": false,
        "superchainConfig": "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8",
        "systemConfig": "0xeBf5859b7646ca9cf8A981613569bF28394F2571",
        "version": "2.8.0"
      },
      "implementationNames": {
        "0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A": "Proxy",
        "0x5651e4f573303ec65Ba7579Fdc09166F7a403776": "OptimismPortal"
      },
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "OpFoundationOperationsSafe",
      "address": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xd5a33441170541b7df25812e0e3dff6562b2f09ab835a6b431cb9e7198a47605",
        "0x263aadde480629cd3ca5704cc7d4e7df809d437e68f8d9864039801ddf820367"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "guard",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "role": ".guardian",
          "via": [
            { "address": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2" },
            {
              "address": "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B",
              "condition": "if not revoked by the Security Council"
            }
          ]
        },
        {
          "permission": "guard",
          "from": "0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A",
          "role": ".guardian"
        },
        {
          "permission": "guard",
          "from": "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8",
          "role": ".guardian"
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B",
          "role": ".deputyGuardian",
          "condition": "if not revoked by the Security Council"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1610850364,
      "sinceBlock": 11670007,
      "values": {
        "$immutable": false,
        "$implementation": "0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F",
        "$members": [
          "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64",
          "0x3041BA32f451F5850c147805F5521AC206421623",
          "0xE7dEA1306D9F829bA469d1904c50903b46ebd02e",
          "0xBF93D4d727F7Ba1F753E1124C3e532dCb04Ea2c8",
          "0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15",
          "0x7cB07FE039a92B3D784f284D919503A381BEC54f",
          "0x9bbFB9919062C29a5eE15aCD93c9D7c3b14d31aa"
        ],
        "$threshold": 5,
        "domainSeparator": "0x4e6a6554de0308f5ece8ff736beed8a1b876d16f5c27cac8e466d7de0c703890",
        "getModules": ["0x126a736B18E0a64fBA19D421647A530E327E112C"],
        "GnosisSafe_modules": ["0x126a736B18E0a64fBA19D421647A530E327E112C"],
        "multisigThreshold": "5 of 7 (71%)",
        "NAME": "Gnosis Safe",
        "nonce": 106,
        "VERSION": "1.1.1"
      },
      "implementationNames": {
        "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A": "Proxy",
        "0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F": "GnosisSafe"
      }
    },
    {
      "address": "0x9bbFB9919062C29a5eE15aCD93c9D7c3b14d31aa",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x9Eb11A55132c851b9991F148b3Af791ca498fD7A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x9Fb23129982c993743Eb9bB156af8CC8Fa2aC761",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "sequence",
          "from": "0xeBf5859b7646ca9cf8A981613569bF28394F2571",
          "role": ".batcherHash"
        }
      ]
    },
    {
      "name": "L1ERC721Bridge",
      "address": "0xa010dE167788ed7d95c770AC478997D3207236AF",
      "type": "Contract",
      "template": "opstack/L1ERC721Bridge",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x482ec6e91304ac39a3fb4505634427bddfddee23b8e93a4f7f995ca5083ae3c3"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Used to bridge ERC-721 tokens from host chain to this chain.",
      "sinceTimestamp": 1734387323,
      "sinceBlock": 21418007,
      "values": {
        "$admin": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E",
        "$implementation": "0xC46226fA9De738D48343f420b402a0EBd8F7DCeD",
        "$pastUpgrades": [
          [
            "2024-12-16T22:15:47.000Z",
            "0xec31f7915b604c4bcccddfc17ff4f49f04454a89a692a9c97430986fb0f5b329",
            ["0xC46226fA9De738D48343f420b402a0EBd8F7DCeD"]
          ]
        ],
        "$upgradeCount": 1,
        "messenger": "0x1549Dd6f86f5bBf0b1Bc691407DE64e8104c1544",
        "MESSENGER": "0x1549Dd6f86f5bBf0b1Bc691407DE64e8104c1544",
        "OTHER_BRIDGE": "0x4200000000000000000000000000000000000014",
        "otherBridge": "0x4200000000000000000000000000000000000014",
        "paused": false,
        "superchainConfig": "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8",
        "version": "2.1.0"
      },
      "implementationNames": {
        "0xa010dE167788ed7d95c770AC478997D3207236AF": "Proxy",
        "0xC46226fA9De738D48343f420b402a0EBd8F7DCeD": "L1ERC721Bridge"
      },
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "0xA0737fea60F0601A192E3d2c98865A883ab0bda2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xa0C600a6e85bf225958FFAcC70B5FDDF9A059038",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xa4000bDD2bB92ce6750b31F1eeda47Bd1cB8e6e4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xb23794fd6BA1CEAd01Cf54D772b8341F2F0197A5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OPSuccinctL2OutputOracle",
      "address": "0xb45440830bd8D288bB2B5B01Be303ae60fc855d8",
      "type": "Contract",
      "template": "succinct/OPSuccinct/OPSuccinctL2OutputOracle",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x0cbf9fd4f1cadeb8c5634791b6829ce6dd91e6f46e87df410020715870a92006"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contains a list of proposed state roots which Proposers assert to be a result of block execution. The SuccinctL2OutputOracle modifies the L2OutputOracle to support whenNotOptimistic mode, in which a validity proof can be passed as input argument to the proposeL2Output function.",
      "ignoreInWatchMode": [
        "nextBlockNumber",
        "nextOutputIndex",
        "latestBlockNumber",
        "latestOutputIndex"
      ],
      "sinceTimestamp": 1734387323,
      "sinceBlock": 21418007,
      "values": {
        "$admin": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E",
        "$implementation": "0xd010fBdBd77a3314bCED75E1AE8E7aDD42c9d580",
        "$pastUpgrades": [
          [
            "2024-12-16T22:15:47.000Z",
            "0x8eee30c3b3f633d3e3c94e00a250bd324e2da6863f227acac127cb6cbc668f85",
            ["0x35A37B01CeCb9544a72e251328F9B36F98b023B1"]
          ],
          [
            "2024-12-19T01:05:11.000Z",
            "0xa2b6b581c2c1c201336472072cf22d1f9c57179116cc0f010c763e719c28b6de",
            ["0xE41997Df2A412ed5B56ac9f3997A72B6BeE9d888"]
          ],
          [
            "2025-05-07T08:36:11.000Z",
            "0x82e8aeceec726d7cf643b1a548090bfa12bca8fdb7443cdc9a3a4e0d25793c19",
            ["0xd010fBdBd77a3314bCED75E1AE8E7aDD42c9d580"]
          ]
        ],
        "$upgradeCount": 3,
        "additionalProposers": ["0xb6c7448Ad01AfAF34217FFd0eCaCf2c29bdc38fE"],
        "aggregationVkey": "0x00a4fec570ddb93572e5312e1debb095562fea9ae099622c6f7c9d145d87517f",
        "challenger": "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746",
        "CHALLENGER": "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746",
        "FINALIZATION_PERIOD_SECONDS": 28800,
        "finalizationPeriodSeconds": 28800,
        "initializerVersion": 2,
        "L2_BLOCK_TIME": 10,
        "l2BlockTime": 10,
        "latestBlockNumber": 1260660,
        "latestOutputIndex": 335,
        "nextBlockNumber": 1264980,
        "nextOutputIndex": 336,
        "optimisticMode": false,
        "owner": "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746",
        "proposer": "0xF579A1cDfb89D0Aaf240d489EF10aB01A2B7f8F2",
        "PROPOSER": "0xF579A1cDfb89D0Aaf240d489EF10aB01A2B7f8F2",
        "rangeVkeyCommitment": "0x5614b4dc4d7a1c33681c404a27aa1db265ea84b75047859667fed5a303a8dc43",
        "rollupConfigHash": "0x2aee88f2b7f9f1edfab6c535edeb8a7d969c162fe974650fc3c1e4d3c75ecb8b",
        "startingBlockNumber": 0,
        "startingTimestamp": 1734387239,
        "SUBMISSION_INTERVAL": 4320,
        "submissionInterval": 4320,
        "verifier": "0x3B6041173B80E77f038f3F2C0f9744f04837185e",
        "version": "v2.0.0"
      },
      "implementationNames": {
        "0xb45440830bd8D288bB2B5B01Be303ae60fc855d8": "Proxy",
        "0xd010fBdBd77a3314bCED75E1AE8E7aDD42c9d580": "OPSuccinctL2OutputOracle"
      }
    },
    {
      "address": "0xb6c7448Ad01AfAF34217FFd0eCaCf2c29bdc38fE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xBF93D4d727F7Ba1F753E1124C3e532dCb04Ea2c8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xbfA046B0bc5cEa1596be62B8b3f79f9f41f1E0d9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Optimism Security Council",
      "address": "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "guard",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "role": ".guardian",
          "via": [{ "address": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2" }]
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1707420419,
      "sinceBlock": 19185517,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x07dC0893cAfbF810e3E72505041f2865726Fd073",
          "0x652BC529E171847E2fFddCeA13567643C84ccB5f",
          "0x1822b35B09f5ce1C78ecbC06AC0A4e17885b925e",
          "0x4A7322258c9E690e4CB8Cea6e5251443E956e61E",
          "0x51aCb8e1205De850D1b512584FeE9C29C3813dDa",
          "0xEF9A98511939eEe6Ec69af62082E3F2ff606877c",
          "0x6323ef2b80030f3fBc508bFc321Fc71fDB95c865",
          "0xd5b735b676A043a53946C3b6F6BE28c1ECE6aC90",
          "0x7ed8d9Af9eaA194D1A75C67c1475579E42289E39",
          "0x0aA384EB2fedD2741277A0f72909A0d7275575D7",
          "0x9Eb11A55132c851b9991F148b3Af791ca498fD7A",
          "0xbfA046B0bc5cEa1596be62B8b3f79f9f41f1E0d9",
          "0x92827223f6b397CE9F208eE352bacA710765cACb"
        ],
        "$threshold": 10,
        "domainSeparator": "0xdf53d510b56e539b90b369ef08fce3631020fbf921e3136ea5f8747c20bce967",
        "getChainId": 1,
        "GnosisSafe_modules": ["0x0454092516c9A4d636d3CAfA1e82161376C8a748"],
        "multisigThreshold": "10 of 13 (77%)",
        "nonce": 27,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "DeputyGuardianModule",
      "address": "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B",
      "type": "Contract",
      "template": "gnosisSafeModules/DeputyGuardianModule",
      "sourceHashes": [
        "0x9624d67fb3738cf1ce1e1f48e2cf433e9373345386943d12f1d751d6b8475cd6"
      ],
      "proxyType": "immutable",
      "description": "allows the 0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A, called the deputy guardian, to act on behalf of the Gnosis Safe.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2",
          "role": ".GnosisSafe_modules"
        }
      ],
      "sinceTimestamp": 1724111315,
      "sinceBlock": 20566057,
      "values": {
        "$immutable": true,
        "deputyGuardian": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
        "safe": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2",
        "superchainConfig": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "version": "2.0.0"
      },
      "implementationNames": {
        "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B": "DeputyGuardianModule"
      }
    },
    {
      "name": "SP1VerifierGatewayMultisig",
      "address": "0xCafEf00d348Adbd57c37d1B77e0619C6244C6878",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x3B6041173B80E77f038f3F2C0f9744f04837185e",
          "description": "holds the power to affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes.",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1724204135,
      "sinceBlock": 20573748,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126",
          "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
          "0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"
        ],
        "$threshold": 2,
        "domainSeparator": "0x9ce9716cc3ee4040796acdd48cea971343ff05b11468ce9e8d815c2ce3fc8b9e",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 10,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xCafEf00d348Adbd57c37d1B77e0619C6244C6878": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "0xd5b735b676A043a53946C3b6F6BE28c1ECE6aC90",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "AddressManager",
      "address": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
      "type": "Contract",
      "template": "opstack/AddressManager",
      "sourceHashes": [
        "0xe5211497d15a7ea75577cf992ab6093dd0f6083f45c955f0136737810e44c205"
      ],
      "proxyType": "immutable",
      "description": "Legacy contract used to manage a mapping of string names to addresses. Modern OP stack uses a different standard proxy system instead, but this contract is still necessary for backwards compatibility with several older contracts.",
      "sinceTimestamp": 1624400033,
      "sinceBlock": 12686687,
      "values": {
        "$immutable": true,
        "owner": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04"
      },
      "implementationNames": {
        "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F": "Lib_AddressManager"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "SP1Verifier",
      "address": "0xE00a3cBFC45241b33c0A44C78e26168CBc55EC63",
      "type": "Contract",
      "template": "succinct/SP1Verifier",
      "sourceHashes": [
        "0xcc497e8b709d783cb24e3120d14c9fb3b015c3fe5ed7a57e0de6c38f9bfe937b"
      ],
      "proxyType": "immutable",
      "description": "Verifier contract for SP1 proofs.",
      "sinceTimestamp": 1735949699,
      "sinceBlock": 21547470,
      "values": {
        "$immutable": true,
        "VERIFIER_HASH": "0x1b34fe11a637737f0c75c88241669dcf9ca3c03713659265b8241f398a2d286d",
        "VERSION": "v4.0.0-rc.3"
      },
      "implementationNames": {
        "0xE00a3cBFC45241b33c0A44C78e26168CBc55EC63": "SP1Verifier"
      }
    },
    {
      "address": "0xE7dEA1306D9F829bA469d1904c50903b46ebd02e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SystemConfig",
      "address": "0xeBf5859b7646ca9cf8A981613569bF28394F2571",
      "type": "Contract",
      "template": "opstack/SystemConfig",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x958268b83f73163b36af36fa55f5c0905421c07369bff2791652da02fa692a42"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.",
      "ignoreInWatchMode": ["scalar", "overhead"],
      "sinceTimestamp": 1734387299,
      "sinceBlock": 21418005,
      "values": {
        "$admin": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E",
        "$implementation": "0x4334B0Ebd68dC3A4e35deD49014dEFA00C15219c",
        "$pastUpgrades": [
          [
            "2024-12-16T22:15:47.000Z",
            "0xbde55f54ed051fc9c94af80b2f3fcfd0124bae4b3f74816d935999553bcd8dec",
            ["0x4334B0Ebd68dC3A4e35deD49014dEFA00C15219c"]
          ]
        ],
        "$upgradeCount": 1,
        "BATCH_INBOX_SLOT": "0x71ac12829d66ee73d8d95bff50b3589745ce57edae70a3fb111a2342464dc597",
        "batcherHash": "0x9Fb23129982c993743Eb9bB156af8CC8Fa2aC761",
        "batchInbox": "0x5A2a0698355D06cd5c4e3872D2Bc6B9f6a89d39B",
        "DISPUTE_GAME_FACTORY_SLOT": "0x52322a25d9f59ea17656545543306b7aef62bc0cc53a0e65ccfa0c75b97aa906",
        "disputeGameFactory": "0x396ac7A2e8d0ac12DeDeB6BCeDC31C585e0038FE",
        "gasLimit": 30000000,
        "gasPayingToken": {
          "addr_": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",
          "decimals_": 18
        },
        "gasPayingTokenName": "Ether",
        "gasPayingTokenSymbol": "ETH",
        "isCustomGasToken": false,
        "L1_CROSS_DOMAIN_MESSENGER_SLOT": "0x383f291819e6d54073bc9a648251d97421076bdd101933c0c022219ce9580636",
        "L1_ERC_721_BRIDGE_SLOT": "0x46adcbebc6be8ce551740c29c47c8798210f23f7f4086c41752944352568d5a7",
        "L1_STANDARD_BRIDGE_SLOT": "0x9904ba90dde5696cda05c9e0dab5cbaa0fea005ace4d11218a02ac668dad6376",
        "l1CrossDomainMessenger": "0x1549Dd6f86f5bBf0b1Bc691407DE64e8104c1544",
        "l1ERC721Bridge": "0xa010dE167788ed7d95c770AC478997D3207236AF",
        "l1StandardBridge": "0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521",
        "maximumGasLimit": 200000000,
        "minimumGasLimit": 21000000,
        "opStackDA": {
          "isSequencerSendingBlobTx": true,
          "isUsingCelestia": false,
          "isUsingEigenDA": false
        },
        "OPTIMISM_MINTABLE_ERC20_FACTORY_SLOT": "0xa04c5bb938ca6fc46d95553abf0a76345ce3e722a30bf4f74928b8e7d852320c",
        "OPTIMISM_PORTAL_SLOT": "0x4b6c74f9e688cb39801f2112c14a8c57232a3fc5202e1444126d4bce86eb19ac",
        "optimismMintableERC20Factory": "0xF8e8E783fa7A5CCDB77EddC3335cDb00066B515e",
        "optimismPortal": "0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A",
        "overhead": 188,
        "owner": "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746",
        "resourceConfig": {
          "maxResourceLimit": 20000000,
          "elasticityMultiplier": 10,
          "baseFeeMaxChangeDenominator": 8,
          "minimumBaseFee": 1000000000,
          "systemTxMaxGas": 1000000,
          "maximumBaseFee": "340282366920938463463374607431768211455"
        },
        "scalar": 684000,
        "sequencerInbox": "0x5A2a0698355D06cd5c4e3872D2Bc6B9f6a89d39B",
        "START_BLOCK_SLOT": "0xa11ee3ab75b40e88a0105e935d17cd36c8faee0138320d776c411291bdbbb19f",
        "startBlock": 21418009,
        "UNSAFE_BLOCK_SIGNER_SLOT": "0x65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
        "unsafeBlockSigner": "0xF63ccBA1929a3eC32248B26c5a22D7C4c9bd3EEC",
        "version": "2.2.0",
        "VERSION": 0
      },
      "fieldMeta": {
        "gasLimit": {
          "severity": "LOW",
          "description": "Gas limit for blocks on L2."
        },
        "eip1559Denominator": {
          "description": "volatility param: lower denominator -> quicker fee changes on L2"
        }
      },
      "implementationNames": {
        "0xeBf5859b7646ca9cf8A981613569bF28394F2571": "Proxy",
        "0x4334B0Ebd68dC3A4e35deD49014dEFA00C15219c": "SystemConfig"
      },
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "SuperchainConfig",
      "address": "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8",
      "type": "Contract",
      "template": "opstack/SuperchainConfigFake",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x3ac96c9c95e25f689f65a50f24b325e3f891029cb1cea96dc642418bbb535b1d"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "This is NOT the shared SuperchainConfig contract of the OP stack Superchain but rather a local fork. It manages the `PAUSED_SLOT`, a boolean value indicating whether the local chain is paused, and `GUARDIAN_SLOT`, the address of the guardian which can pause and unpause the system.",
      "sinceTimestamp": 1734387287,
      "sinceBlock": 21418004,
      "values": {
        "$admin": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E",
        "$implementation": "0xAb427Bb4125C36688A5a6ec7b1cA0A3A1A15E0c2",
        "$pastUpgrades": [
          [
            "2024-12-16T22:14:47.000Z",
            "0x74e8f221a5a8e3b681f98742aa24baac3345ecebf3b109f45a4bf893efeb3602",
            ["0xAb427Bb4125C36688A5a6ec7b1cA0A3A1A15E0c2"]
          ]
        ],
        "$upgradeCount": 1,
        "guardian": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
        "GUARDIAN_SLOT": "0xd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe68",
        "paused": false,
        "PAUSED_SLOT": "0x54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b6",
        "version": "1.1.0"
      },
      "implementationNames": {
        "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8": "Proxy",
        "0xAb427Bb4125C36688A5a6ec7b1cA0A3A1A15E0c2": "SuperchainConfig"
      },
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "address": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xEF9A98511939eEe6Ec69af62082E3F2ff606877c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xF0B77EaE7F2dabCC2571c7418406A0dCA3afA4f0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xF3313C48BD8E17b823d5498D62F37019dFEA647D",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xF579A1cDfb89D0Aaf240d489EF10aB01A2B7f8F2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xF63ccBA1929a3eC32248B26c5a22D7C4c9bd3EEC",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OptimismMintableERC20Factory",
      "address": "0xF8e8E783fa7A5CCDB77EddC3335cDb00066B515e",
      "type": "Contract",
      "template": "opstack/OptimismMintableERC20Factory",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x4c5ac4e53576924cabbd2a471f368a541bc3f4b1f53fa41a389692fcc62f6176"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "A helper contract that generates OptimismMintableERC20 contracts on the network it's deployed to. OptimismMintableERC20 is a standard extension of the base ERC20 token contract designed to allow the L1StandardBridge contracts to mint and burn tokens. This makes it possible to use an OptimismMintablERC20 as this chain's representation of a token on the host chain, or vice-versa.",
      "sinceTimestamp": 1734387311,
      "sinceBlock": 21418006,
      "values": {
        "$admin": "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E",
        "$implementation": "0x000FAF919Dc5a946B82bFfF252FAbC378bda1F50",
        "$pastUpgrades": [
          [
            "2024-12-16T22:15:47.000Z",
            "0xee7a287bb9169343a89e0550c67d182204e26955e0d7e5c6afea15f1a15505e1",
            ["0x000FAF919Dc5a946B82bFfF252FAbC378bda1F50"]
          ]
        ],
        "$upgradeCount": 1,
        "bridge": "0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521",
        "BRIDGE": "0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521",
        "version": "1.9.0"
      },
      "implementationNames": {
        "0xF8e8E783fa7A5CCDB77EddC3335cDb00066B515e": "Proxy",
        "0x000FAF919Dc5a946B82bFfF252FAbC378bda1F50": "OptimismMintableERC20Factory"
      }
    }
  ],
  "abis": {
    "0x000FAF919Dc5a946B82bFfF252FAbC378bda1F50": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event OptimismMintableERC20Created(address indexed localToken, address indexed remoteToken, address deployer)",
      "event StandardL2TokenCreated(address indexed remoteToken, address indexed localToken)",
      "function BRIDGE() view returns (address)",
      "function bridge() view returns (address)",
      "function createOptimismMintableERC20(address _remoteToken, string _name, string _symbol) returns (address)",
      "function createOptimismMintableERC20WithDecimals(address _remoteToken, string _name, string _symbol, uint8 _decimals) returns (address)",
      "function createStandardL2Token(address _remoteToken, string _name, string _symbol) returns (address)",
      "function initialize(address _bridge)",
      "function version() view returns (string)"
    ],
    "0x0454092516c9A4d636d3CAfA1e82161376C8a748": [
      "constructor(address _safe, address _livenessGuard, uint256 _livenessInterval, uint256 _minOwners, uint256 _thresholdPercentage, address _fallbackOwner)",
      "error OwnerRemovalFailed(string)",
      "event OwnershipTransferredToFallback()",
      "event RemovedOwner(address indexed owner)",
      "function canRemove(address _owner) view returns (bool canRemove_)",
      "function fallbackOwner() view returns (address fallbackOwner_)",
      "function getRequiredThreshold(uint256 _numOwners) view returns (uint256 threshold_)",
      "function livenessGuard() view returns (address livenessGuard_)",
      "function livenessInterval() view returns (uint256 livenessInterval_)",
      "function minOwners() view returns (uint256 minOwners_)",
      "function ownershipTransferredToFallback() view returns (bool)",
      "function removeOwners(address[] _previousOwners, address[] _ownersToRemove)",
      "function safe() view returns (address safe_)",
      "function thresholdPercentage() view returns (uint256 thresholdPercentage_)",
      "function version() view returns (string)"
    ],
    "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2": [
      "constructor(address _singleton)"
    ],
    "0x126a736B18E0a64fBA19D421647A530E327E112C": [
      "constructor(address _foundationSafe, address _deputyGuardianModule, address _superchainConfig, address _deputy, bytes _deputySignature)",
      "error DeputyPauseModule_ExecutionFailed(string)",
      "error DeputyPauseModule_InvalidDeputy()",
      "error DeputyPauseModule_InvalidDeputyGuardianModule()",
      "error DeputyPauseModule_NonceAlreadyUsed()",
      "error DeputyPauseModule_NotFromSafe()",
      "error DeputyPauseModule_SuperchainNotPaused()",
      "error DeputyPauseModule_Unauthorized()",
      "error ECDSAInvalidSignature()",
      "error ECDSAInvalidSignatureLength(uint256 length)",
      "error ECDSAInvalidSignatureS(bytes32 s)",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "event DeputyGuardianModuleSet(address indexed deputyGuardianModule)",
      "event DeputySet(address indexed deputy)",
      "event EIP712DomainChanged()",
      "event PauseTriggered(address indexed deputy, bytes32 nonce)",
      "function deputy() view returns (address)",
      "function deputyAuthMessageTypehash() pure returns (bytes32 deputyAuthMessageTypehash_)",
      "function deputyGuardianModule() view returns (address)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function foundationSafe() view returns (address foundationSafe_)",
      "function pause(bytes32 _nonce, bytes _signature)",
      "function pauseMessageTypehash() pure returns (bytes32 pauseMessageTypehash_)",
      "function setDeputy(address _deputy, bytes _deputySignature)",
      "function setDeputyGuardianModule(address _deputyGuardianModule)",
      "function superchainConfig() view returns (address superchainConfig_)",
      "function usedNonces(bytes32) view returns (bool)",
      "function version() view returns (string)"
    ],
    "0x1549Dd6f86f5bBf0b1Bc691407DE64e8104c1544": [
      "constructor(address _addressManager, string _implementationName)"
    ],
    "0x198A8e0c220f29d8aF956e4c8A9E8b552096Ab2E": [
      "constructor(address _owner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addressManager() view returns (address)",
      "function changeProxyAdmin(address _proxy, address _newAdmin)",
      "function getProxyAdmin(address _proxy) view returns (address)",
      "function getProxyImplementation(address _proxy) view returns (address)",
      "function implementationName(address) view returns (string)",
      "function isUpgrading() view returns (bool)",
      "function owner() view returns (address)",
      "function proxyType(address) view returns (uint8)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function setAddressManager(address _address)",
      "function setImplementationName(address _address, string _name)",
      "function setProxyType(address _address, uint8 _type)",
      "function setUpgrading(bool _upgrading)",
      "function transferOwnership(address newOwner)",
      "function upgrade(address _proxy, address _implementation)",
      "function upgradeAndCall(address _proxy, address _implementation, bytes _data) payable"
    ],
    "0x24424336F04440b1c28685a38303aC33C9D14a25": [
      "constructor(address _safe)",
      "event OwnerRecorded(address owner)",
      "function checkAfterExecution(bytes32, bool)",
      "function checkTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures, address msgSender)",
      "function lastLive(address) view returns (uint256)",
      "function safe() view returns (address safe_)",
      "function showLiveness()",
      "function version() view returns (string)"
    ],
    "0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedMasterCopy(address masterCopy)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function NAME() view returns (string)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeMasterCopy(address _masterCopy)",
      "function changeThreshold(uint256 _threshold)",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getMessageHash(bytes message) view returns (bytes32)",
      "function getModules() view returns (address[])",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isOwner(address owner) view returns (bool)",
      "function isValidSignature(bytes _data, bytes _signature) returns (bytes4)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signMessage(bytes _data)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x3B6041173B80E77f038f3F2C0f9744f04837185e": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error RouteAlreadyExists(address verifier)",
      "error RouteIsFrozen(bytes4 selector)",
      "error RouteNotFound(bytes4 selector)",
      "error SelectorCannotBeZero()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RouteAdded(bytes4 selector, address verifier)",
      "event RouteFrozen(bytes4 selector, address verifier)",
      "function addRoute(address verifier)",
      "function freezeRoute(bytes4 selector)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function routes(bytes4) view returns (address verifier, bool frozen)",
      "function transferOwnership(address newOwner)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "0x3E5404b298c858018D2439d488F0Fe1E94C71FE9": [
      "constructor()",
      "event ERC20BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20DepositInitiated(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20WithdrawalFinalized(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ETHBridgeFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHBridgeInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHDepositInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHWithdrawalFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event Initialized(uint8 version)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC20(address _localToken, address _remoteToken, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC20To(address _localToken, address _remoteToken, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function depositETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function deposits(address, address) view returns (uint256)",
      "function finalizeBridgeERC20(address _localToken, address _remoteToken, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeBridgeETH(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeETHWithdrawal(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function initialize(address _messenger, address _superchainConfig, address _systemConfig)",
      "function l2TokenBridge() view returns (address)",
      "function messenger() view returns (address)",
      "function otherBridge() view returns (address)",
      "function paused() view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function systemConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64": [
      "constructor(address _singleton)"
    ],
    "0x4334B0Ebd68dC3A4e35deD49014dEFA00C15219c": [
      "constructor()",
      "event ConfigUpdate(uint256 indexed version, uint8 indexed updateType, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function BATCH_INBOX_SLOT() view returns (bytes32)",
      "function DISPUTE_GAME_FACTORY_SLOT() view returns (bytes32)",
      "function L1_CROSS_DOMAIN_MESSENGER_SLOT() view returns (bytes32)",
      "function L1_ERC_721_BRIDGE_SLOT() view returns (bytes32)",
      "function L1_STANDARD_BRIDGE_SLOT() view returns (bytes32)",
      "function OPTIMISM_MINTABLE_ERC20_FACTORY_SLOT() view returns (bytes32)",
      "function OPTIMISM_PORTAL_SLOT() view returns (bytes32)",
      "function START_BLOCK_SLOT() view returns (bytes32)",
      "function UNSAFE_BLOCK_SIGNER_SLOT() view returns (bytes32)",
      "function VERSION() view returns (uint256)",
      "function batchInbox() view returns (address addr_)",
      "function batcherHash() view returns (bytes32)",
      "function disputeGameFactory() view returns (address addr_)",
      "function gasLimit() view returns (uint64)",
      "function gasPayingToken() view returns (address addr_, uint8 decimals_)",
      "function gasPayingTokenName() view returns (string name_)",
      "function gasPayingTokenSymbol() view returns (string symbol_)",
      "function initialize(address _owner, uint256 _overhead, uint256 _scalar, bytes32 _batcherHash, uint64 _gasLimit, address _unsafeBlockSigner, tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config, address _batchInbox, tuple(address l1CrossDomainMessenger, address l1ERC721Bridge, address l1StandardBridge, address disputeGameFactory, address optimismPortal, address optimismMintableERC20Factory, address gasPayingToken) _addresses)",
      "function isCustomGasToken() view returns (bool)",
      "function l1CrossDomainMessenger() view returns (address addr_)",
      "function l1ERC721Bridge() view returns (address addr_)",
      "function l1StandardBridge() view returns (address addr_)",
      "function maximumGasLimit() pure returns (uint64)",
      "function minimumGasLimit() view returns (uint64)",
      "function optimismMintableERC20Factory() view returns (address addr_)",
      "function optimismPortal() view returns (address addr_)",
      "function overhead() view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function resourceConfig() view returns (tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee))",
      "function scalar() view returns (uint256)",
      "function setBatcherHash(bytes32 _batcherHash)",
      "function setGasConfig(uint256 _overhead, uint256 _scalar)",
      "function setGasLimit(uint64 _gasLimit)",
      "function setUnsafeBlockSigner(address _unsafeBlockSigner)",
      "function startBlock() view returns (uint256 startBlock_)",
      "function transferOwnership(address newOwner)",
      "function unsafeBlockSigner() view returns (address addr_)",
      "function version() view returns (string)"
    ],
    "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746": [
      "constructor(address _singleton)"
    ],
    "0x4da82a327773965b8d4D85Fa3dB8249b387458E7": [
      "constructor()",
      "event ConfigUpdate(uint8 indexed updateType, bytes data)",
      "event Initialized(uint8 version)",
      "event Paused(string identifier)",
      "event Unpaused()",
      "function GUARDIAN_SLOT() view returns (bytes32)",
      "function PAUSED_SLOT() view returns (bytes32)",
      "function guardian() view returns (address guardian_)",
      "function initialize(address _guardian, bool _paused)",
      "function pause(string _identifier)",
      "function paused() view returns (bool paused_)",
      "function unpause()",
      "function version() view returns (string)"
    ],
    "0x51D5C516c818dcf63E67B28cB2516166D8578c06": [
      "event AddressSet(string indexed name, address newAddress, address oldAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getAddress(string _name) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function transferOwnership(address newOwner)"
    ],
    "0x543bA4AADBAb8f9025686Bd03993043599c6fB04": [
      "constructor(address _owner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addressManager() view returns (address)",
      "function changeProxyAdmin(address _proxy, address _newAdmin)",
      "function getProxyAdmin(address _proxy) view returns (address)",
      "function getProxyImplementation(address _proxy) view returns (address)",
      "function implementationName(address) view returns (string)",
      "function isUpgrading() view returns (bool)",
      "function owner() view returns (address)",
      "function proxyType(address) view returns (uint8)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function setAddressManager(address _address)",
      "function setImplementationName(address _address, string _name)",
      "function setProxyType(address _address, uint8 _type)",
      "function setUpgrading(bool _upgrading)",
      "function transferOwnership(address newOwner)",
      "function upgrade(address _proxy, address _implementation)",
      "function upgradeAndCall(address _proxy, address _implementation, bytes _data) payable"
    ],
    "0x5651e4f573303ec65Ba7579Fdc09166F7a403776": [
      "constructor()",
      "error BadTarget()",
      "error CallPaused()",
      "error ContentLengthMismatch()",
      "error EmptyItem()",
      "error GasEstimation()",
      "error InvalidDataRemainder()",
      "error InvalidHeader()",
      "error LargeCalldata()",
      "error NoValue()",
      "error NonReentrant()",
      "error OnlyCustomGasToken()",
      "error OutOfGas()",
      "error SmallGasLimit()",
      "error TransferFailed()",
      "error Unauthorized()",
      "error UnexpectedList()",
      "error UnexpectedString()",
      "event Initialized(uint8 version)",
      "event TransactionDeposited(address indexed from, address indexed to, uint256 indexed version, bytes opaqueData)",
      "event WithdrawalFinalized(bytes32 indexed withdrawalHash, bool success)",
      "event WithdrawalProven(bytes32 indexed withdrawalHash, address indexed from, address indexed to)",
      "function balance() view returns (uint256)",
      "function depositERC20Transaction(address _to, uint256 _mint, uint256 _value, uint64 _gasLimit, bool _isCreation, bytes _data)",
      "function depositTransaction(address _to, uint256 _value, uint64 _gasLimit, bool _isCreation, bytes _data) payable",
      "function donateETH() payable",
      "function finalizeWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx)",
      "function finalizedWithdrawals(bytes32) view returns (bool)",
      "function guardian() view returns (address)",
      "function initialize(address _l2Oracle, address _systemConfig, address _superchainConfig)",
      "function isOutputFinalized(uint256 _l2OutputIndex) view returns (bool)",
      "function l2Oracle() view returns (address)",
      "function l2Sender() view returns (address)",
      "function minimumGasLimit(uint64 _byteCount) pure returns (uint64)",
      "function params() view returns (uint128 prevBaseFee, uint64 prevBoughtGas, uint64 prevBlockNum)",
      "function paused() view returns (bool paused_)",
      "function proveWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx, uint256 _l2OutputIndex, tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, bytes[] _withdrawalProof)",
      "function provenWithdrawals(bytes32) view returns (bytes32 outputRoot, uint128 timestamp, uint128 l2OutputIndex)",
      "function setGasPayingToken(address _token, uint8 _decimals, bytes32 _name, bytes32 _symbol)",
      "function superchainConfig() view returns (address)",
      "function systemConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A": [
      "constructor(address _singleton)"
    ],
    "0x6A3444d11cA2697fe4A19AC8995ABDd8Dd301521": [
      "constructor(address _owner)",
      "function getImplementation() returns (address)",
      "function getOwner() returns (address)",
      "function setCode(bytes _code)",
      "function setOwner(address _owner)",
      "function setStorage(bytes32 _key, bytes32 _value)"
    ],
    "0x847B5c174615B1B7fDF770882256e2D3E95b9D92": [
      "constructor(address _singleton)"
    ],
    "0x95703e0982140D16f8ebA6d158FccEde42f04a4C": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x96B124841Eff4Ab1b3C1F654D60402a1405fF51A": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A": [
      "constructor(address _masterCopy)"
    ],
    "0xa010dE167788ed7d95c770AC478997D3207236AF": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xAb427Bb4125C36688A5a6ec7b1cA0A3A1A15E0c2": [
      "constructor()",
      "event ConfigUpdate(uint8 indexed updateType, bytes data)",
      "event Initialized(uint8 version)",
      "event Paused(string identifier)",
      "event Unpaused()",
      "function GUARDIAN_SLOT() view returns (bytes32)",
      "function PAUSED_SLOT() view returns (bytes32)",
      "function guardian() view returns (address guardian_)",
      "function initialize(address _guardian, bool _paused)",
      "function pause(string _identifier)",
      "function paused() view returns (bool paused_)",
      "function unpause()",
      "function version() view returns (string)"
    ],
    "0xb45440830bd8D288bB2B5B01Be303ae60fc855d8": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03": [
      "constructor(address _singleton)"
    ],
    "0xC46226fA9De738D48343f420b402a0EBd8F7DCeD": [
      "constructor()",
      "event ERC721BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 tokenId, bytes extraData)",
      "event ERC721BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 tokenId, bytes extraData)",
      "event Initialized(uint8 version)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC721(address _localToken, address _remoteToken, uint256 _tokenId, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC721To(address _localToken, address _remoteToken, address _to, uint256 _tokenId, uint32 _minGasLimit, bytes _extraData)",
      "function deposits(address, address, uint256) view returns (bool)",
      "function finalizeBridgeERC721(address _localToken, address _remoteToken, address _from, address _to, uint256 _tokenId, bytes _extraData)",
      "function initialize(address _messenger, address _superchainConfig)",
      "function messenger() view returns (address)",
      "function otherBridge() view returns (address)",
      "function paused() view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B": [
      "constructor(address _safe, address _superchainConfig, address _deputyGuardian)",
      "error ExecutionFailed(string)",
      "error Unauthorized()",
      "event DisputeGameBlacklisted(address indexed game)",
      "event Paused(string identifier)",
      "event RespectedGameTypeSet(uint32 indexed gameType, uint64 indexed updatedAt)",
      "event Unpaused()",
      "function blacklistDisputeGame(address _portal, address _game)",
      "function deputyGuardian() view returns (address deputyGuardian_)",
      "function pause()",
      "function safe() view returns (address safe_)",
      "function setAnchorState(address _registry, address _game)",
      "function setRespectedGameType(address _portal, uint32 _gameType)",
      "function superchainConfig() view returns (address superchainConfig_)",
      "function unpause()",
      "function version() view returns (string)"
    ],
    "0xCafEf00d348Adbd57c37d1B77e0619C6244C6878": [
      "constructor(address _singleton)"
    ],
    "0xd010fBdBd77a3314bCED75E1AE8E7aDD42c9d580": [
      "constructor()",
      "error L1BlockHashNotAvailable()",
      "error L1BlockHashNotCheckpointed()",
      "event AggregationVkeyUpdated(bytes32 indexed oldAggregationVkey, bytes32 indexed newAggregationVkey)",
      "event Initialized(uint8 version)",
      "event OptimisticModeToggled(bool indexed enabled, uint256 finalizationPeriodSeconds)",
      "event OutputProposed(bytes32 indexed outputRoot, uint256 indexed l2OutputIndex, uint256 indexed l2BlockNumber, uint256 l1Timestamp)",
      "event OutputsDeleted(uint256 indexed prevNextOutputIndex, uint256 indexed newNextOutputIndex)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ProposerUpdated(address indexed proposer, bool added)",
      "event RangeVkeyCommitmentUpdated(bytes32 indexed oldRangeVkeyCommitment, bytes32 indexed newRangeVkeyCommitment)",
      "event RollupConfigHashUpdated(bytes32 indexed oldRollupConfigHash, bytes32 indexed newRollupConfigHash)",
      "event SubmissionIntervalUpdated(uint256 oldSubmissionInterval, uint256 newSubmissionInterval)",
      "event VerifierUpdated(address indexed oldVerifier, address indexed newVerifier)",
      "function CHALLENGER() view returns (address)",
      "function FINALIZATION_PERIOD_SECONDS() view returns (uint256)",
      "function L2_BLOCK_TIME() view returns (uint256)",
      "function PROPOSER() view returns (address)",
      "function SUBMISSION_INTERVAL() view returns (uint256)",
      "function addProposer(address _proposer)",
      "function aggregationVkey() view returns (bytes32)",
      "function approvedProposers(address) view returns (bool)",
      "function challenger() view returns (address)",
      "function checkpointBlockHash(uint256 _blockNumber)",
      "function computeL2Timestamp(uint256 _l2BlockNumber) view returns (uint256)",
      "function deleteL2Outputs(uint256 _l2OutputIndex)",
      "function disableOptimisticMode(uint256 _finalizationPeriodSeconds)",
      "function enableOptimisticMode(uint256 _finalizationPeriodSeconds)",
      "function finalizationPeriodSeconds() view returns (uint256)",
      "function getL2Output(uint256 _l2OutputIndex) view returns (tuple(bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputAfter(uint256 _l2BlockNumber) view returns (tuple(bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputIndexAfter(uint256 _l2BlockNumber) view returns (uint256)",
      "function historicBlockHashes(uint256) view returns (bytes32)",
      "function initialize(tuple(address challenger, address proposer, address owner, uint256 finalizationPeriodSeconds, uint256 l2BlockTime, bytes32 aggregationVkey, bytes32 rangeVkeyCommitment, bytes32 rollupConfigHash, bytes32 startingOutputRoot, uint256 startingBlockNumber, uint256 startingTimestamp, uint256 submissionInterval, address verifier) _initParams)",
      "function initializerVersion() view returns (uint8)",
      "function l2BlockTime() view returns (uint256)",
      "function latestBlockNumber() view returns (uint256)",
      "function latestOutputIndex() view returns (uint256)",
      "function nextBlockNumber() view returns (uint256)",
      "function nextOutputIndex() view returns (uint256)",
      "function optimisticMode() view returns (bool)",
      "function owner() view returns (address)",
      "function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, uint256 _l1BlockNumber, bytes _proof, address _proverAddress) payable",
      "function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1BlockHash, uint256 _l1BlockNumber) payable",
      "function proposer() view returns (address)",
      "function rangeVkeyCommitment() view returns (bytes32)",
      "function removeProposer(address _proposer)",
      "function rollupConfigHash() view returns (bytes32)",
      "function startingBlockNumber() view returns (uint256)",
      "function startingTimestamp() view returns (uint256)",
      "function submissionInterval() view returns (uint256)",
      "function transferOwnership(address _owner)",
      "function updateAggregationVkey(bytes32 _aggregationVkey)",
      "function updateRangeVkeyCommitment(bytes32 _rangeVkeyCommitment)",
      "function updateRollupConfigHash(bytes32 _rollupConfigHash)",
      "function updateSubmissionInterval(uint256 _submissionInterval)",
      "function updateVerifier(address _verifier)",
      "function verifier() view returns (address)",
      "function version() view returns (string)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F": [
      "event AddressSet(string indexed _name, address _newAddress, address _oldAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getAddress(string _name) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xE00a3cBFC45241b33c0A44C78e26168CBc55EC63": [
      "error InvalidProof()",
      "error WrongVerifierSelector(bytes4 received, bytes4 expected)",
      "function VERIFIER_HASH() pure returns (bytes32)",
      "function VERSION() pure returns (string)",
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)",
      "function hashPublicValues(bytes publicValues) pure returns (bytes32)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "0xeBf5859b7646ca9cf8A981613569bF28394F2571": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xeDe0D2f74e71bD43459e92D90c434D8cA5E597B8": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xF4e69D58027De611d9F142e6b0Db6b11569F50E7": [
      "constructor()",
      "event FailedRelayedMessage(bytes32 indexed msgHash)",
      "event Initialized(uint8 version)",
      "event RelayedMessage(bytes32 indexed msgHash)",
      "event SentMessage(address indexed target, address sender, bytes message, uint256 messageNonce, uint256 gasLimit)",
      "event SentMessageExtension1(address indexed sender, uint256 value)",
      "function MESSAGE_VERSION() view returns (uint16)",
      "function MIN_GAS_CALLDATA_OVERHEAD() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR() view returns (uint64)",
      "function OTHER_MESSENGER() view returns (address)",
      "function PORTAL() view returns (address)",
      "function RELAY_CALL_OVERHEAD() view returns (uint64)",
      "function RELAY_CONSTANT_OVERHEAD() view returns (uint64)",
      "function RELAY_GAS_CHECK_BUFFER() view returns (uint64)",
      "function RELAY_RESERVED_GAS() view returns (uint64)",
      "function baseGas(bytes _message, uint32 _minGasLimit) pure returns (uint64)",
      "function failedMessages(bytes32) view returns (bool)",
      "function initialize(address _superchainConfig, address _portal, address _systemConfig)",
      "function messageNonce() view returns (uint256)",
      "function otherMessenger() view returns (address)",
      "function paused() view returns (bool)",
      "function portal() view returns (address)",
      "function relayMessage(uint256 _nonce, address _sender, address _target, uint256 _value, uint256 _minGasLimit, bytes _message) payable",
      "function sendMessage(address _target, bytes _message, uint32 _minGasLimit) payable",
      "function successfulMessages(bytes32) view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function systemConfig() view returns (address)",
      "function version() view returns (string)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0xF8e8E783fa7A5CCDB77EddC3335cDb00066B515e": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "gnosisSafeModules/DeputyGuardianModule": "0x8da514975752668828a2c5aa3ed0719bbaac8af5a7835f307de80580ac13ea27",
    "gnosisSafeModules/LivenessModule": "0xac067257223dd2f2f28705a485f0423251aa6b65656bde88b7c2b121b2221a84",
    "opstack/AddressManager": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "opstack/DeputyPauseModule": "0xe46d6b875d0718adfa6f3783ee2f33a13279377fe7a4db0cc72891b0bce55e9a",
    "opstack/L1CrossDomainMessenger": "0x595eac283f949c40d81ad81550396e35b3345dca8e49cfca901122a2b4046561",
    "opstack/L1ERC721Bridge": "0xafa13690ce8b74136cc340eaa940528c1a96aaf7b4c95715b884decb544f7c67",
    "opstack/L1StandardBridge": "0x8cbd85e2852b26d67c72cb658b98929c845a20ccce30e84f84644c0b39e9252e",
    "opstack/OptimismMintableERC20Factory": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "opstack/OptimismPortal": "0x754ac14860544bffa44f66442813b98ba5631abacd344f7171f2c1331a9983ed",
    "opstack/SuperchainConfig": "0xeb14939081b4e8063f0b74396af70ab91d44b37fbac0e77fa06c8f48eed71b6c",
    "opstack/SuperchainConfigFake": "0xeb14939081b4e8063f0b74396af70ab91d44b37fbac0e77fa06c8f48eed71b6c",
    "opstack/SystemConfig": "0x499f136cde0c11e214b4e9ef6ee1149701d33e15d10cb3284d703257956f96d3",
    "succinct/OPSuccinct/OPSuccinctL2OutputOracle": "0x23a763ed39c139851f257aef8c5edb090d6cbf04040b6f63dace0d3e157a3ab0",
    "succinct/SP1Verifier": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "succinct/SP1VerifierGateway": "0x94f47b7c15ff917085543a7090119c8e8c6013109063339e8922079a5773d6c7"
  },
  "permissionsConfigHash": "0xb4d49275c3cbaa5a85f1f97cb9fee73f41888f572acf4855a0436be46b9af7a5"
}
