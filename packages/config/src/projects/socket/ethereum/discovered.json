{
  "name": "socket",
  "chain": "ethereum",
  "timestamp": 1754311053,
  "configHash": "0xd38e9c53b1775bb619aefecfa164c450b440ce77e1acd2928e28d4bfea9f134b",
  "entries": [
    {
      "name": "WETH Vault (Kinto)",
      "address": "eth:0x00A0c9d82B95a17Cdf2D46703F2DcA13EB0E8A94",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716142367,
      "sinceBlock": 19905691,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x00A0c9d82B95a17Cdf2D46703F2DcA13EB0E8A94": "Vault"
      }
    },
    {
      "name": "PolygonL1Switchboard",
      "address": "eth:0x053407DFA30267f6332f3c94a9e9F704A55e62CD",
      "type": "Contract",
      "sourceHashes": [
        "0x1173a4411a4a452037ed000a299c3136ab3d547cca61ee51628aa7c54ff20651"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["switchboardFees", "verificationOverheadFees"],
      "sinceTimestamp": 1700128991,
      "sinceBlock": 18583724,
      "values": {
        "$immutable": true,
        "capacitor__": "eth:0x994a46a0C07330A30F55C13Bd31Ffe464bA5e26E",
        "chainSlug": 1,
        "checkpointManager": "eth:0x86E4Dc95c7FBdBf52e33D563BbDB00823894C287",
        "fxChildTunnel": "eth:0x0000000000000000000000000000000000000000",
        "fxRoot": "eth:0xfe5e5D361b2ad62c541bAb87C45a0B9B018389a2",
        "isGlobalTipped": false,
        "isInitialized": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b",
        "remoteNativeSwitchboard": "eth:0x72fB18276f3C3c3FD3146F6163994ec02Fa1c9D1",
        "SEND_MESSAGE_EVENT_SIG": "0x8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036",
        "signatureVerifier__": "eth:0xf1ABF110d1B6ff0E2e8C05dd64FBF9eBA4d8af98",
        "socket__": "eth:0x943AC2775928318653e91d350574436A1b9b16f9",
        "switchboardFees": 7309037124841,
        "verificationOverheadFees": 417934504000
      },
      "fieldMeta": {
        "switchboardFees": {
          "severity": "LOW",
          "description": "Fee charged by the switchboard for processing a transaction"
        },
        "verificationOverheadFees": {
          "severity": "LOW",
          "description": "Fee charged for verifying transaction"
        }
      },
      "implementationNames": {
        "eth:0x053407DFA30267f6332f3c94a9e9F704A55e62CD": "PolygonL1Switchboard"
      }
    },
    {
      "name": "sdeUSD Vault (Reya)",
      "address": "eth:0x0A5A19376064fED2A0A9f3120B2426c957BC289D",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1729182095,
      "sinceBlock": 20986446,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x0A5A19376064fED2A0A9f3120B2426c957BC289D": ""
      }
    },
    {
      "name": "deUSD Vault (Reya)",
      "address": "eth:0x0b4447344fAAA340bcD2B0FdBD8f0CEcd161bC9E",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1729182155,
      "sinceBlock": 20986451,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x0b4447344fAAA340bcD2B0FdBD8f0CEcd161bC9E": ""
      }
    },
    {
      "name": "OptimismSwitchboard2",
      "address": "eth:0x0E674e057EC0FF97eeA57B6A350DBAAD22FE41BA",
      "type": "Contract",
      "sourceHashes": [
        "0x5ce8017c8b58163d4cf21dc4e0dec9218e5b4e093c40fb19d970e8c807fbf4d4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["switchboardFees", "verificationOverheadFees"],
      "sinceTimestamp": 1700136851,
      "sinceBlock": 18584376,
      "values": {
        "$immutable": true,
        "capacitor__": "eth:0x5E162Be0d9898F35B02D3bF774b45E4C48af1a70",
        "chainSlug": 1,
        "crossDomainMessenger__": "eth:0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
        "isGlobalTipped": false,
        "isInitialized": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b",
        "receiveGasLimit": 300000,
        "remoteNativeSwitchboard": "eth:0x9Cf7443685827419B0067fb2471C24969EAA716C",
        "signatureVerifier__": "eth:0xf1ABF110d1B6ff0E2e8C05dd64FBF9eBA4d8af98",
        "socket__": "eth:0x943AC2775928318653e91d350574436A1b9b16f9",
        "switchboardFees": 2071363800006,
        "verificationOverheadFees": 118441648000
      },
      "fieldMeta": {
        "switchboardFees": {
          "severity": "LOW",
          "description": "Fee charged by the switchboard for processing a transaction"
        },
        "verificationOverheadFees": {
          "severity": "LOW",
          "description": "Fee charged for verifying transaction"
        }
      },
      "implementationNames": {
        "eth:0x0E674e057EC0FF97eeA57B6A350DBAAD22FE41BA": "OptimismSwitchboard"
      }
    },
    {
      "name": "CapacitorFactory",
      "address": "eth:0x11Fbb9116801DB54bB51fF4dF423e34E8b45fc9a",
      "type": "Contract",
      "sourceHashes": [
        "0x6464768c2bcc3c1a2d6c108a2366460fe668d285547a02040bdac245de51ca89"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1700126135,
      "sinceBlock": 18583488,
      "values": {
        "$immutable": true,
        "maxAllowedPacketLength": 10,
        "minAllowedPacketLength": 1,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b"
      },
      "implementationNames": {
        "eth:0x11Fbb9116801DB54bB51fF4dF423e34E8b45fc9a": "CapacitorFactory"
      }
    },
    {
      "name": "DAI Vault (Kinto)",
      "address": "eth:0x12Cf431BdF7F143338cC09A0629EDcCEDCBCEcB5",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1715972567,
      "sinceBlock": 19891645,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x12Cf431BdF7F143338cC09A0629EDcCEDCBCEcB5": "Vault"
      }
    },
    {
      "name": "OptimismSwitchboard",
      "address": "eth:0x139f39DC7dC05F7aC2DB3DB6af4f2e1a9De7c287",
      "type": "Contract",
      "sourceHashes": [
        "0x5ce8017c8b58163d4cf21dc4e0dec9218e5b4e093c40fb19d970e8c807fbf4d4"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["switchboardFees", "verificationOverheadFees"],
      "sinceTimestamp": 1700136875,
      "sinceBlock": 18584378,
      "values": {
        "$immutable": true,
        "capacitor__": "eth:0xBA2CaBf4754745C822c2BDdE65aF836CF92E4354",
        "chainSlug": 1,
        "crossDomainMessenger__": "eth:0x5456f02c08e9A018E42C39b351328E5AA864174A",
        "isGlobalTipped": false,
        "isInitialized": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b",
        "receiveGasLimit": 300000,
        "remoteNativeSwitchboard": "eth:0x1D6811553Aff8231aDd04A84F300b89E15D99EA4",
        "signatureVerifier__": "eth:0xf1ABF110d1B6ff0E2e8C05dd64FBF9eBA4d8af98",
        "socket__": "eth:0x943AC2775928318653e91d350574436A1b9b16f9",
        "switchboardFees": 909628050175,
        "verificationOverheadFees": 52013000000
      },
      "fieldMeta": {
        "switchboardFees": {
          "severity": "LOW",
          "description": "Fee charged by the switchboard for processing a transaction"
        },
        "verificationOverheadFees": {
          "severity": "LOW",
          "description": "Fee charged for verifying transaction"
        }
      },
      "implementationNames": {
        "eth:0x139f39DC7dC05F7aC2DB3DB6af4f2e1a9De7c287": "OptimismSwitchboard"
      }
    },
    {
      "name": "USDT Vault (Zora)",
      "address": "eth:0x1417f50f864ba75D5c6cb4CD14479c48Ce5166fB",
      "type": "Contract",
      "sourceHashes": [
        "0x602df965bf4dcd6a254d0f73df43d800eba973378ebe545c730e4eaebc9f8e02"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1726140671,
      "sinceBlock": 20734248,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x7B5Ba9Df17Bc58F504B6Cf0D87d2f05B79a36cfF"
      },
      "implementationNames": {
        "eth:0x1417f50f864ba75D5c6cb4CD14479c48Ce5166fB": "Vault"
      }
    },
    {
      "name": "SolvBTC Vault (Polynomial)",
      "address": "eth:0x197cCb40bCDed89c3D7B891824ab44d1913Ee73E",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1744193267,
      "sinceBlock": 22230650,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x197cCb40bCDed89c3D7B891824ab44d1913Ee73E": ""
      }
    },
    {
      "name": "WETH Vault (Polynomial)",
      "address": "eth:0x1bF463463dd6747230Ee1bF9428376EBF1e2C23a",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1732796447,
      "sinceBlock": 21286163,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x1bF463463dd6747230Ee1bF9428376EBF1e2C23a": ""
      }
    },
    {
      "name": "PENDLE Vault (Kinto)",
      "address": "eth:0x1Ca284BaA0023b6bB0950C93ee6d1f2068de2D97",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1735845695,
      "sinceBlock": 21538846,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x660ad4B5A74130a4796B4d54BC6750Ae93C86e6c"
      },
      "implementationNames": {
        "eth:0x1Ca284BaA0023b6bB0950C93ee6d1f2068de2D97": "Vault"
      }
    },
    {
      "name": "USDT Vault (Kinto)",
      "address": "eth:0x1D18263107a138C7fb0De65b4a78d193ff9664c1",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1730654567,
      "sinceBlock": 21108579,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x1D18263107a138C7fb0De65b4a78d193ff9664c1": "Vault"
      }
    },
    {
      "name": "WBTC Vault (Reya)",
      "address": "eth:0x2344621d5aA6e784e8C6f4c54b0B29Dd9c3Ad4B6",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1714061603,
      "sinceBlock": 19733498,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xB0BBff6311B7F245761A7846d3Ce7B1b100C1836"
      },
      "implementationNames": {
        "eth:0x2344621d5aA6e784e8C6f4c54b0B29Dd9c3Ad4B6": "Vault"
      }
    },
    {
      "name": "LyraMultisig",
      "address": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xd5a33441170541b7df25812e0e3dff6562b2f09ab835a6b431cb9e7198a47605",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1614150116,
      "sinceBlock": 11918385,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0xb88D64a7E2ec1b137c969Adf2EC65f933d631F65",
          "eth:0x76E6F5C2A64df0F53077602642B79a45D5Ba6D52",
          "eth:0x4cEa25e9c999E69F45765539783D149024f99F12"
        ],
        "$threshold": 2,
        "domainSeparator": "0xbc091031d658ae65d24494a54905f6c9faa1998e11931f3174adf784faedfe1b",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 433,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF": "Proxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "eBTC Vault (Derive)",
      "address": "eth:0x25d35C8796c9dcD3857abE90D802FC17b1FB55A5",
      "type": "Contract",
      "sourceHashes": [
        "0x31b99c44ab28174db25b94c3cca9ad4f335866894a5437384040c7bd682fca11"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1727390399,
      "sinceBlock": 20837834,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x25d35C8796c9dcD3857abE90D802FC17b1FB55A5": "Vault"
      }
    },
    {
      "name": "PAXG Vault (Kinto)",
      "address": "eth:0x25f0D71Da51A77Ca231484eBbAD1f588A0230ef2",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1721253827,
      "sinceBlock": 20329110,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x25f0D71Da51A77Ca231484eBbAD1f588A0230ef2": "Vault"
      }
    },
    {
      "name": "USDe Vault (Derive)",
      "address": "eth:0x26Cf1Dc84694E04277F2Fe4C13E43597c6010C2A",
      "type": "Contract",
      "sourceHashes": [
        "0x31b99c44ab28174db25b94c3cca9ad4f335866894a5437384040c7bd682fca11"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1724140487,
      "sinceBlock": 20568476,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x26Cf1Dc84694E04277F2Fe4C13E43597c6010C2A": "Vault"
      }
    },
    {
      "name": "ENA Vault (Kinto)",
      "address": "eth:0x351d8894fB8bfa1b0eFF77bFD9Aab18eA2da8fDd",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716142919,
      "sinceBlock": 19905737,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x351d8894fB8bfa1b0eFF77bFD9Aab18eA2da8fDd": "Vault"
      }
    },
    {
      "name": "rsETH Vault (Derive)",
      "address": "eth:0x35d4D9bc79B0a543934b1769304B90d752691caD",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1717724723,
      "sinceBlock": 20036749,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x35d4D9bc79B0a543934b1769304B90d752691caD": "Vault"
      }
    },
    {
      "name": "SolvBTC Vault (Derive)",
      "address": "eth:0x383a4EdB30E896b8d2d044Be87079D45c0EA7065",
      "type": "Contract",
      "sourceHashes": [
        "0x31b99c44ab28174db25b94c3cca9ad4f335866894a5437384040c7bd682fca11"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1733971103,
      "sinceBlock": 21383489,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x383a4EdB30E896b8d2d044Be87079D45c0EA7065": "Vault"
      }
    },
    {
      "name": "WBTC Vault (Derive)",
      "address": "eth:0x3Eec7c855aF33280F1eD38b93059F5aa5862E3ab",
      "type": "Contract",
      "sourceHashes": [
        "0xfd7de25c0b5615fb9cdd221236caa984819b6dd0511764ecfc6d0c724721741c"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1705069499,
      "sinceBlock": 18991397,
      "values": {
        "$immutable": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x3Eec7c855aF33280F1eD38b93059F5aa5862E3ab": "Vault"
      }
    },
    {
      "name": "OLAS Vault (Derive)",
      "address": "eth:0x412Ac6044401cDf1e9833B7056c14C74AA593D37",
      "type": "Contract",
      "sourceHashes": [
        "0x31b99c44ab28174db25b94c3cca9ad4f335866894a5437384040c7bd682fca11"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1747300007,
      "sinceBlock": 22487519,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x412Ac6044401cDf1e9833B7056c14C74AA593D37": "Vault"
      }
    },
    {
      "name": "sUSDe Vault (Kinto)",
      "address": "eth:0x43b718Aa5e678b08615CA984cbe25f690B085b32",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716143855,
      "sinceBlock": 19905815,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x43b718Aa5e678b08615CA984cbe25f690B085b32": "Vault"
      }
    },
    {
      "name": "AAVE Vault (Derive)",
      "address": "eth:0x4421461239aE746127C13a19177656124433dC60",
      "type": "Contract",
      "sourceHashes": [
        "0x31b99c44ab28174db25b94c3cca9ad4f335866894a5437384040c7bd682fca11"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1749030047,
      "sinceBlock": 22630445,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x4421461239aE746127C13a19177656124433dC60": "Vault"
      }
    },
    {
      "address": "eth:0x45d7A9bFC82Ca6AE410E4410f44c57a2b9F8Ec58",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "USDS Vault (Polynomial)",
      "address": "eth:0x49bFcE41d0594acA7390eD0820d83Fda308c39a7",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1749766247,
      "sinceBlock": 22691377,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x49bFcE41d0594acA7390eD0820d83Fda308c39a7": ""
      }
    },
    {
      "name": "rswETH Vault (Derive)",
      "address": "eth:0x4BB4C3CDc7562f08e9910A0C7D8bB7e108861eB4",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1715855051,
      "sinceBlock": 19881920,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x4BB4C3CDc7562f08e9910A0C7D8bB7e108861eB4": "Vault"
      }
    },
    {
      "address": "eth:0x4cEa25e9c999E69F45765539783D149024f99F12",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GHO Vault (Kinto)",
      "address": "eth:0x4F18853BE8C01d375889c02D61A77B476d3E59dd",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1730656379,
      "sinceBlock": 21108727,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x4F18853BE8C01d375889c02D61A77B476d3E59dd": "Vault"
      }
    },
    {
      "name": "LDO Vault (Kinto)",
      "address": "eth:0x54e60fef7c7f2f747900452D4151aF976EaeAb76",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1735845287,
      "sinceBlock": 21538812,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x660ad4B5A74130a4796B4d54BC6750Ae93C86e6c"
      },
      "implementationNames": {
        "eth:0x54e60fef7c7f2f747900452D4151aF976EaeAb76": "Vault"
      }
    },
    {
      "name": "wstETH Vault (Polynomial)",
      "address": "eth:0x572A4080c16beD33Cf2E876ad969E2E35769EDB4",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1744192691,
      "sinceBlock": 22230602,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x572A4080c16beD33Cf2E876ad969E2E35769EDB4": ""
      }
    },
    {
      "name": "USDC Vault (Zora)",
      "address": "eth:0x58CDCf55f2c8660674F17561334F6370cbaDeEF8",
      "type": "Contract",
      "sourceHashes": [
        "0x602df965bf4dcd6a254d0f73df43d800eba973378ebe545c730e4eaebc9f8e02"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1726140539,
      "sinceBlock": 20734237,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x7B5Ba9Df17Bc58F504B6Cf0D87d2f05B79a36cfF"
      },
      "implementationNames": {
        "eth:0x58CDCf55f2c8660674F17561334F6370cbaDeEF8": "Vault"
      }
    },
    {
      "name": "sDAI Vault (Kinto)",
      "address": "eth:0x5B8Ae1C9c5970e2637Cf3Af431acAAebEf7aFb85",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716143807,
      "sinceBlock": 19905811,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x5B8Ae1C9c5970e2637Cf3Af431acAAebEf7aFb85": "Vault"
      }
    },
    {
      "name": "Hasher",
      "address": "eth:0x5C71beE4a6b0D617D8c3d107D331292741789E27",
      "type": "Contract",
      "sourceHashes": [
        "0x621783ceb3c37cf9cd41112e917d760d40dbfa18e43c59f5c925fe9f7037f9be"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1700126123,
      "sinceBlock": 18583487,
      "values": {
        "$immutable": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b"
      },
      "implementationNames": {
        "eth:0x5C71beE4a6b0D617D8c3d107D331292741789E27": "Hasher"
      }
    },
    {
      "name": "cbETH Vault (Kinto)",
      "address": "eth:0x5cC25cc25bE29d18472E76b2a19975aA1a37Bd5C",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1730657123,
      "sinceBlock": 21108789,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x5cC25cc25bE29d18472E76b2a19975aA1a37Bd5C": "Vault"
      }
    },
    {
      "address": "eth:0x5D973Ea995d14799E528B14472346bfDE21eAe2e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "USDT Vault (Derive)",
      "address": "eth:0x5e98A25d8d6FF69A8992d6Aa57948dFB77D4ECBa",
      "type": "Contract",
      "sourceHashes": [
        "0xfd7de25c0b5615fb9cdd221236caa984819b6dd0511764ecfc6d0c724721741c"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1705566299,
      "sinceBlock": 19032542,
      "values": {
        "$immutable": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x5e98A25d8d6FF69A8992d6Aa57948dFB77D4ECBa": "Vault"
      }
    },
    {
      "address": "eth:0x5ECfd6968593159e5b4f06832857943409122849",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "cbBTC Vault (Derive)",
      "address": "eth:0x5F18C54e4E10287414A47925a24Ea3A8Cf4A9F50",
      "type": "Contract",
      "sourceHashes": [
        "0x31b99c44ab28174db25b94c3cca9ad4f335866894a5437384040c7bd682fca11"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1727390087,
      "sinceBlock": 20837808,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x5F18C54e4E10287414A47925a24Ea3A8Cf4A9F50": "Vault"
      }
    },
    {
      "name": "sUSDe Vault (Reya)",
      "address": "eth:0x5F3B301B4967623fDb3AE52Bb8FF4dB01C460Cd3",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1724767355,
      "sinceBlock": 20620391,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x5F3B301B4967623fDb3AE52Bb8FF4dB01C460Cd3": ""
      }
    },
    {
      "name": "sDAI Vault (Derive)",
      "address": "eth:0x613e87BE1cd75dEBC5e6e56a2AF2fED84162C142",
      "type": "Contract",
      "sourceHashes": [
        "0x31b99c44ab28174db25b94c3cca9ad4f335866894a5437384040c7bd682fca11"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1724140379,
      "sinceBlock": 20568467,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x613e87BE1cd75dEBC5e6e56a2AF2fED84162C142": "Vault"
      }
    },
    {
      "name": "sDAI Vault (Polynomial)",
      "address": "eth:0x615172e47c0C5A6dA8ea959632Ac0166f7a59eDc",
      "type": "Contract",
      "sourceHashes": [
        "0x6a891f3b93e83143ab3b768e2a7a5e2fee324b1f98745e241faaf97608eaa3ae"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1721219231,
      "sinceBlock": 20326243,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x9f76043B23125024Ce5f0Fb4AE707482107dd2a8"
      },
      "implementationNames": {
        "eth:0x615172e47c0C5A6dA8ea959632Ac0166f7a59eDc": "Vault"
      }
    },
    {
      "name": "WETH Vault (Reya)",
      "address": "eth:0x64dF894688c5052BeAdC35371cF69151Ebc5D658",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716322511,
      "sinceBlock": 19920603,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xB0BBff6311B7F245761A7846d3Ce7B1b100C1836"
      },
      "implementationNames": {
        "eth:0x64dF894688c5052BeAdC35371cF69151Ebc5D658": "Vault"
      }
    },
    {
      "address": "eth:0x660ad4B5A74130a4796B4d54BC6750Ae93C86e6c",
      "type": "EOA",
      "sourceHashes": [
        "0x41c6ce964a4ef3e910f9ddf78152734dae8d1b1094ffc8334c50249a3b112bbf"
      ],
      "proxyType": "EIP7702 EOA",
      "values": {
        "$implementation": "eth:0x63c0c19a282a1B52b07dD5a65b58948A07DAE32B",
        "delegationManager": "eth:0xdb9B1e94B5b69Df7e401DDbedE43491141047dB3",
        "DOMAIN_VERSION": "1",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "EIP7702StatelessDeleGator",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "eth:0x660ad4B5A74130a4796B4d54BC6750Ae93C86e6c",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "entryPoint": "eth:0x0000000071727De22E5E9d8BAf0edAc6f37da032",
        "getDeposit": 0,
        "getDomainHash": "0xda4b68659d2780fff93228d9db78cb1666fdb544e28cfd9764b8cbe0938d1407",
        "getNonce": 0,
        "NAME": "EIP7702StatelessDeleGator",
        "PACKED_USER_OP_TYPEHASH": "0xbc37962d8bd1d319c95199bdfda6d3f92baa8903a61b32d5f4ec1f4b36a3bc18",
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "USDC Vault (Derive)",
      "address": "eth:0x6D303CEE7959f814042D31E0624fB88Ec6fbcC1d",
      "type": "Contract",
      "sourceHashes": [
        "0x7388ebff48e70528bc58f3586fb97581b1a933f704450fa7ed625674671cfef2"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1700227943,
      "sinceBlock": 18591914,
      "values": {
        "$immutable": true,
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "eth:0x6D303CEE7959f814042D31E0624fB88Ec6fbcC1d": "Vault"
      }
    },
    {
      "name": "USDC Vault (Kinto)",
      "address": "eth:0x755cD5d147036E11c76F1EeffDd94794fC265f0d",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716142595,
      "sinceBlock": 19905710,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x755cD5d147036E11c76F1EeffDd94794fC265f0d": "Vault"
      }
    },
    {
      "name": "LBTC Vault (Derive)",
      "address": "eth:0x76624ff43D610F64177Bb9c194A2503642e9B803",
      "type": "Contract",
      "sourceHashes": [
        "0x31b99c44ab28174db25b94c3cca9ad4f335866894a5437384040c7bd682fca11"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1725056027,
      "sinceBlock": 20644303,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x76624ff43D610F64177Bb9c194A2503642e9B803": "Vault"
      }
    },
    {
      "address": "eth:0x76E6F5C2A64df0F53077602642B79a45D5Ba6D52",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x7B5Ba9Df17Bc58F504B6Cf0D87d2f05B79a36cfF",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SNX Vault (Derive)",
      "address": "eth:0x7D7aC8d55A9bD4152b703011f3E61AB3bB0A5592",
      "type": "Contract",
      "sourceHashes": [
        "0xfd7de25c0b5615fb9cdd221236caa984819b6dd0511764ecfc6d0c724721741c"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1708294763,
      "sinceBlock": 19257597,
      "values": {
        "$immutable": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x7D7aC8d55A9bD4152b703011f3E61AB3bB0A5592": "Vault"
      }
    },
    {
      "name": "DAI Vault (Derive)",
      "address": "eth:0x7E1d17b580dD4F89037DB331430eAEe8B8e50c91",
      "type": "Contract",
      "sourceHashes": [
        "0x31b99c44ab28174db25b94c3cca9ad4f335866894a5437384040c7bd682fca11"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1724140259,
      "sinceBlock": 20568457,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x7E1d17b580dD4F89037DB331430eAEe8B8e50c91": "Vault"
      }
    },
    {
      "name": "weETH Vault (Derive)",
      "address": "eth:0x8180EcCC825b692ef65FF099a0A387743788bf78",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1715846411,
      "sinceBlock": 19881204,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0x8180EcCC825b692ef65FF099a0A387743788bf78": "Vault"
      }
    },
    {
      "name": "rsETH Vault (Polynomial)",
      "address": "eth:0x8309E63F777805f362d42f5B5f2D1A20287d5Df2",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1751017763,
      "sinceBlock": 22794987,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x8309E63F777805f362d42f5B5f2D1A20287d5Df2": ""
      }
    },
    {
      "name": "weETH Vault (Polynomial)",
      "address": "eth:0x847579e12CFb96a3357d9C51e374330af61716C2",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1746458207,
      "sinceBlock": 22418372,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x847579e12CFb96a3357d9C51e374330af61716C2": ""
      }
    },
    {
      "name": "cbBTC Vault (Kinto)",
      "address": "eth:0x8F5247072e9580624Be243D4EC8cD3F3ABfF86B9",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1730657447,
      "sinceBlock": 21108816,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x8F5247072e9580624Be243D4EC8cD3F3ABfF86B9": "Vault"
      }
    },
    {
      "name": "Socket",
      "address": "eth:0x943AC2775928318653e91d350574436A1b9b16f9",
      "type": "Contract",
      "sourceHashes": [
        "0x0a472e41e2b0da865c051222fc77f1a0e9a6f6462383cbf9a6e4da8b9b332167"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["globalMessageCount"],
      "sinceTimestamp": 1700126147,
      "sinceBlock": 18583489,
      "values": {
        "$immutable": true,
        "capacitorFactory__": "eth:0x11Fbb9116801DB54bB51fF4dF423e34E8b45fc9a",
        "chainSlug": 1,
        "executionManager__": "eth:0x98CAd9A205f1F7A7150241Ef2d565d1702BCe57C",
        "globalMessageCount": 17775,
        "hasher__": "eth:0x5C71beE4a6b0D617D8c3d107D331292741789E27",
        "inboundSwitchboards": [
          "eth:0x139f39DC7dC05F7aC2DB3DB6af4f2e1a9De7c287",
          "eth:0x053407DFA30267f6332f3c94a9e9F704A55e62CD",
          "eth:0xdf5f7dfDFc26ee5F629949e330bEf56906319CAe",
          "eth:0x0E674e057EC0FF97eeA57B6A350DBAAD22FE41BA",
          "eth:0xD5a83a40F262E2247e6566171f9ADc76b745F5cD"
        ],
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "outboundSwitchboards": [
          "eth:0x139f39DC7dC05F7aC2DB3DB6af4f2e1a9De7c287",
          "eth:0x053407DFA30267f6332f3c94a9e9F704A55e62CD",
          "eth:0xdf5f7dfDFc26ee5F629949e330bEf56906319CAe",
          "eth:0x0E674e057EC0FF97eeA57B6A350DBAAD22FE41BA",
          "eth:0xD5a83a40F262E2247e6566171f9ADc76b745F5cD"
        ],
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b",
        "plugs": [
          "eth:0x7a6Edde81cdD9d75BC10D87C490b132c08bD426D",
          "eth:0x200AF8FCdD5246D70B369A98143Ac8930A077B7A",
          "eth:0x22d8360eB04F46195c7B02A66658C375948d8A99",
          "eth:0xA621Bc5A9d13D39eb098865B723CEee71BB5C181",
          "eth:0xceA535B2a0A690ebA76ac6A4AF2A1ee7B9Fed1aa",
          "eth:0xCf814e58f1649F94d37E51f730D6bF72409fA09c",
          "eth:0xf71A92D4bEFc2e18671c3b20377d45729790e880",
          "eth:0x1Eb392Aba52a2D933e58f7E86Ca96b9A3e2D8166",
          "eth:0x5Afa7ddBcE8EE8862FDf5fD8c546BF32615d2D9B",
          "eth:0x02D53793b18d032Cd94d745F7586C6F66F83f8e3",
          "eth:0x3553c0102684c20e2f8192d6F013c7242710b4b3",
          "eth:0x280D208f0eE2f053A0441099bcBFf298bc8b9444",
          "eth:0x37091ade7C4E1A914D3155449e25eE91DA08EbE4",
          "eth:0x68411d61adF1341A6392C87A93941FdD3EE7DF8E",
          "eth:0x8F4e67C61232167584333e23D7d67BD73d80a4F5",
          "eth:0x4ab7B94BA3f3CF69354Eb2f6b5E856DC61e13660",
          "eth:0x727aD65db6aE99DB5Dbee8F202846DD6009bf6D5",
          "eth:0xdCcFb24f983586144c085426dbfa3414045E19a3",
          "eth:0x6A769e25081396a49a6702758d0830920ac1163A",
          "eth:0x2Dba37E679358125BaB2132dDF5133d7d66F7D06",
          "eth:0xaaDd94438f511aC22D35Ba7FC50849a9CD3e6AeF",
          "eth:0x998d7C2257591cC38383B4F91474c5346111f2E6",
          "eth:0x223033E1F905eEd161a7B2EBeb786a158156fb8D",
          "eth:0x7E6dA87FE69306CaAED675fFe4e7dC0FfE3bFe4D",
          "eth:0xCc958F84DaF36d3eC20BcBee7E99C073B882efc3",
          "eth:0xF15d420bE7b27F1fA0D9487105658EdC3C0EA508",
          "eth:0x3f66F272d33B764960779a301c4183306ae50e10",
          "eth:0xB49b8AAcD8396C49d9045f6bAb101aB32c59643D",
          "eth:0xb1178803A726e2077947754de9f2f0cbdA29A60F",
          "eth:0xE7ADE6Dda067c501A3d4C938c36c310c55FBcc27",
          "eth:0xAc00056920EfF02831CAf0baF116ADf6B42D9ad1",
          "eth:0x83C6d6597891Ad48cF5e0BA901De55120C37C6bE",
          "eth:0xe987a57DA7Ab112B1bDc7AA704E6EA943760d252",
          "eth:0x935f1C29Db1155c3E0f39F644DF78DDDBD4757Ff",
          "eth:0x266abd77Da7F877cdf93c0dd5782cC61Fa29ac96",
          "eth:0x73E0d4953c356a5Ca3A3D172739128776B2920b5",
          "eth:0x642c4c33301EF5837ADa6E74F15Aa939f3951Fff",
          "eth:0x170fFDe318B514B029E1B1eC4F096C7e1bDeaeA8",
          "eth:0xF5992B6A0dEa32dCF6BE7bfAf762A4D94f139Ea7",
          "eth:0xE274dB6b891159547FbDC18b07412EE7F4B8d767",
          "eth:0xC331BEeC6e36c8Df4FDD7e432de95863E7f80d67",
          "eth:0xE2c2291B80BFC8Bd0e4fc8Af196Ae5fc9136aeE0",
          "eth:0xdE9D8c2d465669c661672d7945D4d4f5407d22E2",
          "eth:0x32295769ea702BA9337EE5B65c6b42aFF75FEC62",
          "eth:0x388341d9E5A7D7d5accD738B2a31b0622E0c1b87",
          "eth:0x3685306641fB02804E9384C3af09Fa9B62199d7e",
          "eth:0xA72bc51f800127621d4Ab541E7Bb70B86Fe88F0F",
          "eth:0xDABF17a0f13290E85a347119deEb8539B41eF4eB",
          "eth:0x876b81F74AD47cF10e5D62aAAc80f9E99f5587FC",
          "eth:0x519Bc0379CA9C4061a6006B4EAc419bC00017B3E",
          "eth:0x2B93891dc80ab9696814615f553fd15a3b98d3a2",
          "eth:0xd0711b9eBE84b778483709CDe62BacFDBAE13623",
          "eth:0x716c339F41eAcfE2dc4775052411394A2Ed04743",
          "eth:0xDBa83C0C654DB1cd914FA2710bA743e925B53086",
          "eth:0x8843557Fd6005d617A735731BF1bAb0461af55E4",
          "eth:0xb40FdECfCa4EF29CACc37222Ce4dB1fd0f561a00",
          "eth:0xA7384185a6428e6B0D33199256fE67b6fA5D8e40",
          "eth:0xfa8c07E28461eb7c65b33De024DB97eE4C052C97",
          "eth:0x1967F0F374Eed3c0152d9CF0541F814206964041",
          "eth:0x12fBD04CB103c596B78110C70eEDF16821CBfcAE",
          "eth:0x1A9ba93F3cb22Ba7228D29607075F444e9ff515c",
          "eth:0x9D0487D8d93Fc08938A39e355c676A8b032Dc52a",
          "eth:0xAda55E4762c3663f90D55Dc6ACC073B012D1e6eA",
          "eth:0x3F574bc32a0bE9514010409FE8CF19e56fd7C83a",
          "eth:0xBF3233Ef07B9552578987e2A2d25F760fBf192e5",
          "eth:0x54bd887d31A5119Bbc91426eD6289b8ACD2b7349",
          "eth:0x6B3614474eE19FA9A2d6D2079a2D73c04E567310",
          "eth:0x4a43eD818411585fEAaf667a2D3E2605962084e0",
          "eth:0xcf2B4958e72Db99FDF844cD3992Daa2a8B7319c5",
          "eth:0xEd0952283fdA768aA9d69eB7e895d49afcC3c0fe",
          "eth:0x83D8e248cAb7c6074dCc07EA25892F8022244c50",
          "eth:0x91CE463148bD7695d4db41f4aA36088E502428F7",
          "eth:0xcb473D87A56b4609A695753711F727E5c4335cCf",
          "eth:0x1aE19B11B71b1e232c43Fe65cB1d31E139Ac7A63",
          "eth:0x4E83292d5cacf05B85bED2c3D4a6056F42EE1738",
          "eth:0xa1D11b141bb47eDb2c69B8ced4EFe80f62D1C276",
          "eth:0x083Add2A9afa97Efb6412b293145ce965eCE3600",
          "eth:0x254691C06Da387c1050C726cF498eFdA89083820",
          "eth:0x37C24e7081eb7f2B16bde81b556d082c0839F754",
          "eth:0x50D46c3BB529276aDe59a6678C14302D6B61C853",
          "eth:0x7Eee3241eC98ED0B47c8Bc0e9E3327B541BCDc1D",
          "eth:0x00CE54B988D8C44bFCae4026C17c37c69C490A12",
          "eth:0xaDA48ab8705Eb3904e5FA65D5622cd237a2341FF",
          "eth:0x49d446506D0f2db507AB4804563be9331BBc80E7",
          "eth:0x1b882b9E87ABd7DD9B9b689Bee10Ed6a040033D0",
          "eth:0x3F0dAfEB6386c710617180b376c118D7EcD6aC89",
          "eth:0x42F23C6d344d0322e13f254B9a8E187335AFB409",
          "eth:0x56705F7F12D4e0433e26a20298fCd3532226d744",
          "eth:0xA07EB173d58F7aF2b0267F2B5f6a091E01c17f85",
          "eth:0xe38Dccb8Bd138c326E3Df926ADD9dE71a442837F",
          "eth:0x457379de638CAFeB1759a22457fe893b288E2e89",
          "eth:0x2D733e70A377FcFc249d273095250762A93F3820",
          "eth:0xdb1c2F432e51824b33b9269C4b1Ff6190c1e5F35",
          "eth:0xd48A35a853858e344aFCbEcCDBf8FCbFaF8e1501",
          "eth:0xF391E487FE3958F0728436Af84455Fd4eBC9c7c9",
          "eth:0x55033cb4583f5526704Ee4C197e99504E504712c",
          "eth:0xc706c946623C70B294b91Bd4961E91FaF7A74317",
          "eth:0x17a8Be056ca13B072AB908126D4BC38e09c7cc39",
          "eth:0xBc978f47AD1122bdFE85855fcc40b3afdF4b5df3",
          "eth:0x094570E556C8E58119E21f47759F02F50Ae3bB49",
          "eth:0x895b6c1413243562128a9281a7f8891640Ca073f",
          "eth:0x88A05556Af1a8a5BB5964c46Be9D56C379a5E155",
          "eth:0x76ddfc271089e58Af68D8597D41aEF52Fb53EC3D",
          "eth:0x80f5143AF6BF51B38C038BaFF71465Be9b48cAEe",
          "eth:0xFAB1efe6cA9435faEf9e29f40E575e27A74373A9",
          "eth:0xE88F6b194BD3b43013710A785DDFF41454A19537",
          "eth:0xCF83efEe74f61771AF78b05DeA847773D3952C33",
          "eth:0x7FBCd72B6368f1771C9F6Ee16502C19b0AADBa1D",
          "eth:0xE3255bb716d8BA81aA97Ff20c75b404D9844CBE1",
          "eth:0xf1807B621efC3B072d1203dD28C880BBEDc56161",
          "eth:0x92469EEf05a071B0e56275b23597b1b701C15a71",
          "eth:0x6dED17643D7acFc0bE0e79ff6C4762F12AA5516E",
          "eth:0xCE0AB493716d96C0979E0B708BeF1915F3B07e01",
          "eth:0x3390ca7A0D7C80871B05C3FeBbeEee91307a35ba",
          "eth:0x7E34B138e507570bDCC9b99230cFaA2745F0222C",
          "eth:0x5deeAb623C6091A0A59E6d041dAAE9bDeFBfC203",
          "eth:0x65A9b862671de5Df85EcE387220C6b10a17230f7",
          "eth:0xC3875afddEde146DCfED7e72b2Ad12B853CA1241",
          "eth:0xBbA3095f6ACA17ff23Df466833D621cc91Db7675",
          "eth:0xb9703b625c3B846B58DFdaDBceF77e34a1C59965",
          "eth:0xf7a4a34d64E8fE4FCCffE2f3C985D43409Aa8c9a",
          "eth:0x29ACa1443F28DceDEBf99173b37b5C1e814cA548",
          "eth:0x5366D4acCC96Ed297e30B8702FBC9b85daA3a459",
          "eth:0xFb0c284CD9929eB5139eB027aD7497097Ba25C87",
          "eth:0x008244E37A90E090dc4abD70F37195075cbE8453",
          "eth:0xB1b7BC699cAEcB941e7377065c7CE82039889603",
          "eth:0x0c39a1b042AbfC68d10B78081AFE3F58a6523A35",
          "eth:0x76C9129b44c637500c88760ADd2EbEF07472b549",
          "eth:0x10ed00FDb26Ec6BE0183e6f14D8275d5898B0721",
          "eth:0x9d13F2b3B694DE6a1cF58edb5044454CAE3B84E4",
          "eth:0xab722902681A260762084A78A2d8f19CfA6A46Ef",
          "eth:0x5D5a2999E91A336CA99da0cB636898ccB521f40a",
          "eth:0xb5d5E523905bB397bCAfB36B252535a255d3E23C",
          "eth:0x1734067c2CDcFb81ef9672F80DA2D7bfC2CFAE73",
          "eth:0x12a4CC40a8F89E40F8C849c2F89741D5C9590a14",
          "eth:0x94104d7801f30d2f9069118C65Fe63A3A11515B1",
          "eth:0xA2bE759B86CeA53372C3e9a882047cdC3884D568",
          "eth:0x15f70f64438603e5872A4E81c7a8B5edB5D70d93",
          "eth:0x75695e8A56405dC60a0aFf07d1AF01A0baCA7188",
          "eth:0x1a0e7Efa0F74703A930B2b1Cb6565b1d8981dd85",
          "eth:0x3Deb3254730eEF7c50fb5b133CA0EaeA2e59127d",
          "eth:0x95c879322BA01e1c7Fe5EB3F3724C49C6aF7e426",
          "eth:0x412CC246d703598e3705B9536B4Ec3c2039f6e5E",
          "eth:0x833a7FA0Ff734b2BA01e8d2126e127cf8f29eFaD",
          "eth:0x04bc61DBd949f068387cfC7a7fB95555bc66F5C5",
          "eth:0x9ED094fDe2a31BEd0278a4cfdb5528473baFe5a8",
          "eth:0xD3a00E95658b05eBac3246e84f6583251dEd5D93",
          "eth:0x88444394f970B6F21C4f5101003ea513dE3E5406",
          "eth:0x67c97Bd542B3a7F1F1EcF85CBC4409421ccAe971",
          "eth:0xBEF69d0acC388091c7C9702aCbFB3b8A873e239e",
          "eth:0x96E1e9c80619D2038afe30450b3cBeCb2A7D94cd",
          "eth:0xB4e78DAEaE4aA911f2427FF4af4B10AFe70D9891",
          "eth:0x134643Df54DCaaAf343505361D1Eac58A7400b3d",
          "eth:0x8E8D89410000A993d2537d26366e1C3010AB90ff",
          "eth:0x5E72430EC945CCc183c34e2860FFC2b5bac712c2",
          "eth:0x15CEcd5190A43C7798dD2058308781D0662e678E",
          "eth:0x7163FaC3fc420923810cCA5d15949c1523F69B4a",
          "eth:0x432684E7e764343c836d9c78b9245aa774323E40",
          "eth:0x4B4ed8b47EA37FB0230472fAdaFAF12658f05Ad7",
          "eth:0x52DB079d07fb8C2F5FA158C3311d877f3769B01e",
          "eth:0x376f76B657a384e980F6Ea96e885654eC8F3ED61",
          "eth:0xB1dfE248EEfa405654b9ff7D470403452180b862",
          "eth:0xa5D1802fBd730c158f8F6E8401c4d8b3001A8d33",
          "eth:0x3645C506F4E22eA2380B8c4fd5fA914F36dfc3b0",
          "eth:0x4CC07BCB7949CAbAb7b19EC94267AF5C0e47AEdA",
          "eth:0x47D5E4eCae70c9AD12eaDF469344B6B52a0ebCcE",
          "eth:0xec837c413c25B6952845551183ba8900cc543b95",
          "eth:0xDb39c6502e6DaaC4d9EFe6383029bda464ea043c"
        ],
        "transmitManager__": "eth:0xeD037aFBffC65a94E9CC592947E851FB2f730341",
        "version": "0x484f1c5889188a0a81068ce8c49d8f7c3b3f1b0c1723b50ebd656a8d4f99e356"
      },
      "fieldMeta": {
        "executionManager__": {
          "description": "Manages crosschain execution and -fees."
        },
        "plugs": {
          "severity": "LOW",
          "description": "ConnectorPlugs connect vaults (escrows) or controllers via the socket main contract to the switchboards. They have counterparts on the sibling chain.",
          "type": "CODE_CHANGE"
        }
      },
      "implementationNames": {
        "eth:0x943AC2775928318653e91d350574436A1b9b16f9": "Socket"
      }
    },
    {
      "name": "KintsugiFoundation",
      "address": "eth:0x94561e98DD5E55271f91A103e4979aa6C493745E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ETHFI Vault (Kinto)",
      "address": "eth:0x95d60E34aB2E626407d98dF8C240e6174e5D37E5",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716216227,
      "sinceBlock": 19911811,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0x95d60E34aB2E626407d98dF8C240e6174e5D37E5": "Vault"
      }
    },
    {
      "name": "ExecutionManager",
      "address": "eth:0x98CAd9A205f1F7A7150241Ef2d565d1702BCe57C",
      "type": "Contract",
      "sourceHashes": [
        "0x4090ed28f96c48d603c9a606a131adf14f1ac4c81c478cde49b5b62ea4310ac3"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1721659427,
      "sinceBlock": 20362743,
      "values": {
        "$immutable": true,
        "chainSlug": 1,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b",
        "signatureVerifier__": "eth:0xf1ABF110d1B6ff0E2e8C05dd64FBF9eBA4d8af98",
        "socket__": "eth:0x943AC2775928318653e91d350574436A1b9b16f9"
      },
      "implementationNames": {
        "eth:0x98CAd9A205f1F7A7150241Ef2d565d1702BCe57C": "ExecutionManagerDF"
      }
    },
    {
      "address": "eth:0x9eab2223d84060E212354BfA620BF687b6E9Ae20",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x9f76043B23125024Ce5f0Fb4AE707482107dd2a8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SOL Vault (Kinto)",
      "address": "eth:0xA2bc0DaA9BF98820632bCa0663a9616f6bC180f8",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1725992651,
      "sinceBlock": 20721977,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0xA2bc0DaA9BF98820632bCa0663a9616f6bC180f8": "Vault"
      }
    },
    {
      "name": "LINK Vault (Kinto)",
      "address": "eth:0xA6Ae29Ce5c38DFE0Dd95B716748ac747f31E4013",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1730655983,
      "sinceBlock": 21108695,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0xA6Ae29Ce5c38DFE0Dd95B716748ac747f31E4013": "Vault"
      }
    },
    {
      "name": "LOOKS Vault (Blast)",
      "address": "eth:0xa83B4006c16DAeAb2718294696c0122519195137",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1717743623,
      "sinceBlock": 20038317,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xC8C57e4C73c71f72cA0a7e043E5D2D144F98ef13"
      },
      "implementationNames": {
        "eth:0xa83B4006c16DAeAb2718294696c0122519195137": "Vault"
      }
    },
    {
      "name": "USDe Vault (Reya)",
      "address": "eth:0xaA2f2B6cD33Eaabb795c6DB60AAec599C8450F35",
      "type": "Contract",
      "sourceHashes": [
        "0x1ca1782228ebefdeb92c0a3be06dac3dca400826838bb68b5500e8b8f3fac727"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1722533111,
      "sinceBlock": 20435172,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xB0BBff6311B7F245761A7846d3Ce7B1b100C1836"
      },
      "implementationNames": {
        "eth:0xaA2f2B6cD33Eaabb795c6DB60AAec599C8450F35": "Vault"
      }
    },
    {
      "address": "eth:0xB0BBff6311B7F245761A7846d3Ce7B1b100C1836",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "xSolvBTC Vault (Derive)",
      "address": "eth:0xB592512153c22F5Ba573b0c3E04cAB99d4Cd8856",
      "type": "Contract",
      "sourceHashes": [
        "0x31b99c44ab28174db25b94c3cca9ad4f335866894a5437384040c7bd682fca11"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1733971199,
      "sinceBlock": 21383497,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0xB592512153c22F5Ba573b0c3E04cAB99d4Cd8856": "Vault"
      }
    },
    {
      "address": "eth:0xb69F2341F008f673F757B49104c165C8022CD0df",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xb88D64a7E2ec1b137c969Adf2EC65f933d631F65",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "MamoriLabs",
      "address": "eth:0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xc31C4549356d46c37021393EeEb6f704B38061eC",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "wstETH Vault (Kinto)",
      "address": "eth:0xc5d01939Af7Ce9Ffc505F0bb36eFeDde7920f2dc",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716128303,
      "sinceBlock": 19904529,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0xc5d01939Af7Ce9Ffc505F0bb36eFeDde7920f2dc": "Vault"
      }
    },
    {
      "name": "sUSDe Vault (Polynomial)",
      "address": "eth:0xC6cfb996A7CFEB89813A68CD13942CD75553032b",
      "type": "Contract",
      "sourceHashes": [
        "0x6a891f3b93e83143ab3b768e2a7a5e2fee324b1f98745e241faaf97608eaa3ae"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1721382935,
      "sinceBlock": 20339816,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x9f76043B23125024Ce5f0Fb4AE707482107dd2a8"
      },
      "implementationNames": {
        "eth:0xC6cfb996A7CFEB89813A68CD13942CD75553032b": "Vault"
      }
    },
    {
      "name": "USDT Vault (Polynomial)",
      "address": "eth:0xc7C71E39C2F87b0a70C434Ed5bc0497F4cd55bfB",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1749766103,
      "sinceBlock": 22691365,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0xc7C71E39C2F87b0a70C434Ed5bc0497F4cd55bfB": ""
      }
    },
    {
      "name": "LooksRareMultisig",
      "address": "eth:0xC8C57e4C73c71f72cA0a7e043E5D2D144F98ef13",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1641797772,
      "sinceBlock": 13976268,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0xDA9854b190A54c6c5088AB43a274caFAFF7cF369",
          "eth:0x45d7A9bFC82Ca6AE410E4410f44c57a2b9F8Ec58",
          "eth:0xb69F2341F008f673F757B49104c165C8022CD0df",
          "eth:0x5ECfd6968593159e5b4f06832857943409122849",
          "eth:0x9eab2223d84060E212354BfA620BF687b6E9Ae20"
        ],
        "$threshold": 3,
        "domainSeparator": "0x294020d481fb2529cad70a3e4ea5fcf9aa3ec91ce00028602ae6bd087acb81d1",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 414,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0xC8C57e4C73c71f72cA0a7e043E5D2D144F98ef13": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "ONDO Vault (Kinto)",
      "address": "eth:0xCa1AaCB6E16E7d50c6442f9eD6faEe5dDa638DaD",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1735845611,
      "sinceBlock": 21538839,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x660ad4B5A74130a4796B4d54BC6750Ae93C86e6c"
      },
      "implementationNames": {
        "eth:0xCa1AaCB6E16E7d50c6442f9eD6faEe5dDa638DaD": "Vault"
      }
    },
    {
      "name": "XAUt Vault (Kinto)",
      "address": "eth:0xd04Bc056BE36a6127267E4F71d3b43D1BEEfE8bF",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1721253935,
      "sinceBlock": 20329119,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0xd04Bc056BE36a6127267E4F71d3b43D1BEEfE8bF": "Vault"
      }
    },
    {
      "name": "SPX Vault (Kinto)",
      "address": "eth:0xd1228C6CB94a670F30D5ACb1340a9d96aC30e6A8",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1730147723,
      "sinceBlock": 21066552,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0xd1228C6CB94a670F30D5ACb1340a9d96aC30e6A8": "Vault"
      }
    },
    {
      "name": "WBTC Vault (Kinto)",
      "address": "eth:0xd4964E8A405D396d94825f4d0f5dEDD8741C1d36",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1730653463,
      "sinceBlock": 21108487,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0xd4964E8A405D396d94825f4d0f5dEDD8741C1d36": "Vault"
      }
    },
    {
      "name": "WETH Vault (Derive)",
      "address": "eth:0xD4efe33C66B8CdE33B8896a2126E41e5dB571b7e",
      "type": "Contract",
      "sourceHashes": [
        "0xfd7de25c0b5615fb9cdd221236caa984819b6dd0511764ecfc6d0c724721741c"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1705069895,
      "sinceBlock": 18991429,
      "values": {
        "$immutable": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0xD4efe33C66B8CdE33B8896a2126E41e5dB571b7e": "Vault"
      }
    },
    {
      "name": "FastSwitchboard",
      "address": "eth:0xD5a83a40F262E2247e6566171f9ADc76b745F5cD",
      "type": "Contract",
      "sourceHashes": [
        "0x4c26d29d2554c606bb1c2391ea7b837be27ba2f6cc80d7a022bbd672f534fba4"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1700128955,
      "sinceBlock": 18583721,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          }
        },
        "chainSlug": 1,
        "isGlobalTipped": false,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b",
        "signatureVerifier__": "eth:0xf1ABF110d1B6ff0E2e8C05dd64FBF9eBA4d8af98",
        "socket__": "eth:0x943AC2775928318653e91d350574436A1b9b16f9",
        "timeoutInSeconds": 7200
      },
      "implementationNames": {
        "eth:0xD5a83a40F262E2247e6566171f9ADc76b745F5cD": "FastSwitchboard"
      }
    },
    {
      "address": "eth:0xDA9854b190A54c6c5088AB43a274caFAFF7cF369",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "EIGEN Vault (Kinto)",
      "address": "eth:0xdb161cdc9c11892922F7121a409b196f3b00e640",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716143711,
      "sinceBlock": 19905803,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0xdb161cdc9c11892922F7121a409b196f3b00e640": "Vault"
      }
    },
    {
      "name": "USDC Vault (Polynomial)",
      "address": "eth:0xDE1617Ddb7C8A250A409D986930001985cfad76F",
      "type": "Contract",
      "sourceHashes": [
        "0x6a891f3b93e83143ab3b768e2a7a5e2fee324b1f98745e241faaf97608eaa3ae"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1721277431,
      "sinceBlock": 20331066,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x9f76043B23125024Ce5f0Fb4AE707482107dd2a8"
      },
      "implementationNames": {
        "eth:0xDE1617Ddb7C8A250A409D986930001985cfad76F": "Vault"
      }
    },
    {
      "name": "USDe Vault (Kinto)",
      "address": "eth:0xdf34E61B6e7B9e348713d528fEB019d504d38c1e",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716143207,
      "sinceBlock": 19905761,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0xdf34E61B6e7B9e348713d528fEB019d504d38c1e": "Vault"
      }
    },
    {
      "name": "ArbitrumL1Switchboard",
      "address": "eth:0xdf5f7dfDFc26ee5F629949e330bEf56906319CAe",
      "type": "Contract",
      "sourceHashes": [
        "0xdacec605e22dae6e18ca1d184d8aec5d3307537166fbd48449491dc2227c6497"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": ["switchboardFees", "verificationOverheadFees"],
      "sinceTimestamp": 1700129015,
      "sinceBlock": 18583726,
      "values": {
        "$immutable": true,
        "bridge__": "eth:0x8315177aB297bA92A06054cE80a67Ed4DBd7ed3a",
        "capacitor__": "eth:0xf13012498D81bca8a1eE239dC4B52316F31890EE",
        "chainSlug": 1,
        "inbox__": "eth:0x4Dbd4fc535Ac27206064B68FfCf827b0A60BAB3f",
        "isGlobalTipped": false,
        "isInitialized": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "outbox__": "eth:0x0B9857ae2D4A3DBe74ffE1d7DF045bb7F96E4840",
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b",
        "remoteNativeSwitchboard": "eth:0xaB2F8c1588ACA57bC2909512B645a860C65770d3",
        "signatureVerifier__": "eth:0xf1ABF110d1B6ff0E2e8C05dd64FBF9eBA4d8af98",
        "socket__": "eth:0x943AC2775928318653e91d350574436A1b9b16f9",
        "switchboardFees": 737048258835616,
        "verificationOverheadFees": 6500000000000
      },
      "fieldMeta": {
        "switchboardFees": {
          "severity": "LOW",
          "description": "Fee charged by the switchboard for processing a transaction"
        },
        "verificationOverheadFees": {
          "severity": "LOW",
          "description": "Fee charged for verifying transaction"
        }
      },
      "implementationNames": {
        "eth:0xdf5f7dfDFc26ee5F629949e330bEf56906319CAe": "ArbitrumL1Switchboard"
      }
    },
    {
      "name": "USD0++ Vault (Polynomial)",
      "address": "eth:0xDf9Fa2b420689384E8DD55a706262DC0ED37020F",
      "type": "Contract",
      "sourceHashes": [
        "0xc3321c0d760c3f5fe8845b9fdd3fb32455ca5317920d929526142e921ddc68d9"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1728993695,
      "sinceBlock": 20970833,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x9f76043B23125024Ce5f0Fb4AE707482107dd2a8"
      },
      "implementationNames": {
        "eth:0xDf9Fa2b420689384E8DD55a706262DC0ED37020F": "Vault"
      }
    },
    {
      "name": "USDC Vault (Reya)",
      "address": "eth:0xdFf78A949E47c1e90f3Dd6dd7Fe2Fa72B42a75f7",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1712326631,
      "sinceBlock": 19590078,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xB0BBff6311B7F245761A7846d3Ce7B1b100C1836"
      },
      "implementationNames": {
        "eth:0xdFf78A949E47c1e90f3Dd6dd7Fe2Fa72B42a75f7": "Vault"
      }
    },
    {
      "name": "sUSDe Vault (Derive)",
      "address": "eth:0xE3E96892D30E0ee1a8131BAf87c891201F7137bf",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1719833675,
      "sinceBlock": 20211402,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0xE3E96892D30E0ee1a8131BAf87c891201F7137bf": "Vault"
      }
    },
    {
      "name": "USUAL Vault (Kinto)",
      "address": "eth:0xE753E9E0d046eD2Ff3234CD174C22E277F143FbF",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1735845179,
      "sinceBlock": 21538803,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x660ad4B5A74130a4796B4d54BC6750Ae93C86e6c"
      },
      "implementationNames": {
        "eth:0xE753E9E0d046eD2Ff3234CD174C22E277F143FbF": "Vault"
      }
    },
    {
      "name": "cbBTC Vault (Polynomial)",
      "address": "eth:0xEb3492A8A15baF729e57F4F7E84DC55B7A34A4e7",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1748903783,
      "sinceBlock": 22620000,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0xEb3492A8A15baF729e57F4F7E84DC55B7A34A4e7": ""
      }
    },
    {
      "name": "weETH Vault (Kinto)",
      "address": "eth:0xeB66259d2eBC3ed1d3a98148f6298927d8A36397",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1716143951,
      "sinceBlock": 19905823,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0xeB66259d2eBC3ed1d3a98148f6298927d8A36397": "Vault"
      }
    },
    {
      "name": "wstETH Vault (Derive)",
      "address": "eth:0xeBB5D642aA8ccDeE98373D6aC3ee0602b63824b3",
      "type": "Contract",
      "sourceHashes": [
        "0xfd7de25c0b5615fb9cdd221236caa984819b6dd0511764ecfc6d0c724721741c"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1709517155,
      "sinceBlock": 19358636,
      "values": {
        "$immutable": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF"
      },
      "implementationNames": {
        "eth:0xeBB5D642aA8ccDeE98373D6aC3ee0602b63824b3": "Vault"
      }
    },
    {
      "name": "TransmitManager",
      "address": "eth:0xeD037aFBffC65a94E9CC592947E851FB2f730341",
      "type": "Contract",
      "sourceHashes": [
        "0x20fd759cdae5666df50f4b5723ba03796b69ef7b2b3ec33712cb158d77b97133"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1700128943,
      "sinceBlock": 18583720,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          }
        },
        "chainSlug": 1,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b",
        "signatureVerifier__": "eth:0xf1ABF110d1B6ff0E2e8C05dd64FBF9eBA4d8af98",
        "socket__": "eth:0x943AC2775928318653e91d350574436A1b9b16f9"
      },
      "implementationNames": {
        "eth:0xeD037aFBffC65a94E9CC592947E851FB2f730341": "TransmitManager"
      }
    },
    {
      "name": "",
      "address": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b",
      "type": "Contract",
      "unverified": true,
      "proxyType": "gnosis safe",
      "sinceTimestamp": 1735913351,
      "sinceBlock": 21544458,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xa8165F6a303A6C07Ce3C784b8ABCc595a04e6506",
        "$members": ["eth:0xB0BBff6311B7F245761A7846d3Ce7B1b100C1836"],
        "$threshold": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)"
      },
      "implementationNames": {
        "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b": "",
        "eth:0xa8165F6a303A6C07Ce3C784b8ABCc595a04e6506": ""
      }
    },
    {
      "name": "KintoMultisig",
      "address": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1678700303,
      "sinceBlock": 16818229,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0x5D973Ea995d14799E528B14472346bfDE21eAe2e",
          "eth:0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B",
          "eth:0x94561e98DD5E55271f91A103e4979aa6C493745E",
          "eth:0xc31C4549356d46c37021393EeEb6f704B38061eC"
        ],
        "$threshold": 3,
        "domainSeparator": "0x6cb98df1bc26e62c494dcbf2f362c623e5e8cbb503b69ddf57a8e9a9a07117c7",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 4 (75%)",
        "nonce": 265,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "SignatureVerifier",
      "address": "eth:0xf1ABF110d1B6ff0E2e8C05dd64FBF9eBA4d8af98",
      "type": "Contract",
      "sourceHashes": [
        "0x92dc8defa29353a843ae6cb6d7508811be7c65f617fe92ef87739ccdbc3fa95b"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1700126111,
      "sinceBlock": 18583486,
      "values": {
        "$immutable": true,
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xeeF6520437A6545b4F325F6675C4CD49812d457b"
      },
      "implementationNames": {
        "eth:0xf1ABF110d1B6ff0E2e8C05dd64FBF9eBA4d8af98": "SignatureVerifier"
      }
    },
    {
      "name": "AAVE Vault (Kinto)",
      "address": "eth:0xF90AA670ddC1Ae778015f5B84587ad3407dB7Cf9",
      "type": "Contract",
      "sourceHashes": [
        "0x5a961d4cd1fe9b96535b53aaf638b45677b06e22d26037a62ccf6adc9c29f79d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1730652599,
      "sinceBlock": 21108416,
      "values": {
        "$immutable": true,
        "bridgeType": "0x9faa379a8f7762447354a00c30bda6b12f39577783c03b588d3fd75b4e2a5876",
        "nominee": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"
      },
      "implementationNames": {
        "eth:0xF90AA670ddC1Ae778015f5B84587ad3407dB7Cf9": "Vault"
      }
    }
  ],
  "abis": {
    "eth:0x00A0c9d82B95a17Cdf2D46703F2DcA13EB0E8A94": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x053407DFA30267f6332f3c94a9e9F704A55e62CD": [
      "constructor(uint32 chainSlug_, address checkpointManager_, address fxRoot_, address owner_, address socket_, address signatureVerifier_)",
      "error AlreadyInitialized()",
      "error FeesNotEnough()",
      "error InvalidNonce()",
      "error InvalidSender()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error NoRootFound()",
      "error OnlyExecutionManager()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error UnequalArrayLengths()",
      "error ZeroAddress()",
      "event FxChildTunnelSet(address fxChildTunnel, address newFxChildTunnel)",
      "event GlobalTripChanged(bool isGlobalTipped)",
      "event InitiatedNativeConfirmation(bytes32 packetId)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event RootReceived(bytes32 packetId, bytes32 root)",
      "event SwitchboardFeesSet(uint256 switchboardFees, uint256 verificationOverheadFees)",
      "event UpdatedRemoteNativeSwitchboard(address remoteNativeSwitchboard)",
      "function SEND_MESSAGE_EVENT_SIG() view returns (bytes32)",
      "function allowPacket(bytes32 root_, bytes32 packetId_, uint256, uint32, uint256) view returns (bool)",
      "function capacitor__() view returns (address)",
      "function chainSlug() view returns (uint32)",
      "function checkpointManager() view returns (address)",
      "function claimOwner()",
      "function fxChildTunnel() view returns (address)",
      "function fxRoot() view returns (address)",
      "function getMinFees(uint32) view returns (uint128 switchboardFee_, uint128 verificationFee_)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function initiateNativeConfirmation(bytes32 packetId_) payable",
      "function isGlobalTipped() view returns (bool)",
      "function isInitialized() view returns (bool)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function packetIdToRoot(bytes32) view returns (bytes32)",
      "function processedExits(bytes32) view returns (bool)",
      "function receiveFees(uint32) payable",
      "function receiveMessage(bytes inputData)",
      "function receivePacket(bytes32 packetId_, bytes32 root_)",
      "function registerSiblingSlug(uint32 siblingChainSlug_, uint256 maxPacketLength_, uint256 capacitorType_, uint256 initialPacketCount_, address remoteNativeSwitchboard_)",
      "function remoteNativeSwitchboard() view returns (address)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function setFees(uint256 nonce_, uint32, uint128 switchboardFees_, uint128 verificationOverheadFees_, bytes signature_)",
      "function setFxChildTunnel(address fxChildTunnel_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function switchboardFees() view returns (uint128)",
      "function tripGlobal(uint256 nonce_, bytes signature_)",
      "function unTrip(uint256 nonce_, bytes signature_)",
      "function updateSibling(uint32 siblingChainSlug_, address remoteNativeSwitchboard_)",
      "function verificationOverheadFees() view returns (uint128)",
      "function withdrawFees(address withdrawTo_)"
    ],
    "eth:0x0E674e057EC0FF97eeA57B6A350DBAAD22FE41BA": [
      "constructor(uint32 chainSlug_, uint256 receiveGasLimit_, address owner_, address socket_, address crossDomainMessenger_, address signatureVerifier_)",
      "error AlreadyInitialized()",
      "error FeesNotEnough()",
      "error InvalidNonce()",
      "error InvalidSender()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error NoRootFound()",
      "error OnlyExecutionManager()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error UnequalArrayLengths()",
      "error ZeroAddress()",
      "event GlobalTripChanged(bool isGlobalTipped)",
      "event InitiatedNativeConfirmation(bytes32 packetId)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event RootReceived(bytes32 packetId, bytes32 root)",
      "event SwitchboardFeesSet(uint256 switchboardFees, uint256 verificationOverheadFees)",
      "event UpdatedReceiveGasLimit(uint256 receiveGasLimit)",
      "event UpdatedRemoteNativeSwitchboard(address remoteNativeSwitchboard)",
      "function allowPacket(bytes32 root_, bytes32 packetId_, uint256, uint32, uint256) view returns (bool)",
      "function capacitor__() view returns (address)",
      "function chainSlug() view returns (uint32)",
      "function claimOwner()",
      "function crossDomainMessenger__() view returns (address)",
      "function getMinFees(uint32) view returns (uint128 switchboardFee_, uint128 verificationFee_)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function initiateNativeConfirmation(bytes32 packetId_)",
      "function isGlobalTipped() view returns (bool)",
      "function isInitialized() view returns (bool)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function packetIdToRoot(bytes32) view returns (bytes32)",
      "function receiveFees(uint32) payable",
      "function receiveGasLimit() view returns (uint256)",
      "function receivePacket(bytes32 packetId_, bytes32 root_)",
      "function registerSiblingSlug(uint32 siblingChainSlug_, uint256 maxPacketLength_, uint256 capacitorType_, uint256 initialPacketCount_, address remoteNativeSwitchboard_)",
      "function remoteNativeSwitchboard() view returns (address)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function setFees(uint256 nonce_, uint32, uint128 switchboardFees_, uint128 verificationOverheadFees_, bytes signature_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function switchboardFees() view returns (uint128)",
      "function tripGlobal(uint256 nonce_, bytes signature_)",
      "function unTrip(uint256 nonce_, bytes signature_)",
      "function updateReceiveGasLimit(uint256 receiveGasLimit_)",
      "function updateSibling(uint32 siblingChainSlug_, address remoteNativeSwitchboard_)",
      "function verificationOverheadFees() view returns (uint128)",
      "function withdrawFees(address withdrawTo_)"
    ],
    "eth:0x11Fbb9116801DB54bB51fF4dF423e34E8b45fc9a": [
      "constructor(address owner_, uint256 maxAllowedPacketLength_)",
      "error InvalidCapacitorType()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error PacketLengthNotAllowed()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "function claimOwner()",
      "function deploy(uint256 capacitorType_, uint32, uint256 maxPacketLength_) returns (address, address)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function maxAllowedPacketLength() view returns (uint256)",
      "function minAllowedPacketLength() view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeRole(bytes32 role_, address revokee_)"
    ],
    "eth:0x12Cf431BdF7F143338cC09A0629EDcCEDCBCEcB5": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x139f39DC7dC05F7aC2DB3DB6af4f2e1a9De7c287": [
      "constructor(uint32 chainSlug_, uint256 receiveGasLimit_, address owner_, address socket_, address crossDomainMessenger_, address signatureVerifier_)",
      "error AlreadyInitialized()",
      "error FeesNotEnough()",
      "error InvalidNonce()",
      "error InvalidSender()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error NoRootFound()",
      "error OnlyExecutionManager()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error UnequalArrayLengths()",
      "error ZeroAddress()",
      "event GlobalTripChanged(bool isGlobalTipped)",
      "event InitiatedNativeConfirmation(bytes32 packetId)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event RootReceived(bytes32 packetId, bytes32 root)",
      "event SwitchboardFeesSet(uint256 switchboardFees, uint256 verificationOverheadFees)",
      "event UpdatedReceiveGasLimit(uint256 receiveGasLimit)",
      "event UpdatedRemoteNativeSwitchboard(address remoteNativeSwitchboard)",
      "function allowPacket(bytes32 root_, bytes32 packetId_, uint256, uint32, uint256) view returns (bool)",
      "function capacitor__() view returns (address)",
      "function chainSlug() view returns (uint32)",
      "function claimOwner()",
      "function crossDomainMessenger__() view returns (address)",
      "function getMinFees(uint32) view returns (uint128 switchboardFee_, uint128 verificationFee_)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function initiateNativeConfirmation(bytes32 packetId_)",
      "function isGlobalTipped() view returns (bool)",
      "function isInitialized() view returns (bool)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function packetIdToRoot(bytes32) view returns (bytes32)",
      "function receiveFees(uint32) payable",
      "function receiveGasLimit() view returns (uint256)",
      "function receivePacket(bytes32 packetId_, bytes32 root_)",
      "function registerSiblingSlug(uint32 siblingChainSlug_, uint256 maxPacketLength_, uint256 capacitorType_, uint256 initialPacketCount_, address remoteNativeSwitchboard_)",
      "function remoteNativeSwitchboard() view returns (address)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function setFees(uint256 nonce_, uint32, uint128 switchboardFees_, uint128 verificationOverheadFees_, bytes signature_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function switchboardFees() view returns (uint128)",
      "function tripGlobal(uint256 nonce_, bytes signature_)",
      "function unTrip(uint256 nonce_, bytes signature_)",
      "function updateReceiveGasLimit(uint256 receiveGasLimit_)",
      "function updateSibling(uint32 siblingChainSlug_, address remoteNativeSwitchboard_)",
      "function verificationOverheadFees() view returns (uint128)",
      "function withdrawFees(address withdrawTo_)"
    ],
    "eth:0x1417f50f864ba75D5c6cb4CD14479c48Ce5166fB": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x1Ca284BaA0023b6bB0950C93ee6d1f2068de2D97": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x1D18263107a138C7fb0De65b4a78d193ff9664c1": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x2344621d5aA6e784e8C6f4c54b0B29Dd9c3Ad4B6": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x246d38588b16Dd877c558b245e6D5a711C649fCF": [
      "constructor(address _masterCopy)"
    ],
    "eth:0x25d35C8796c9dcD3857abE90D802FC17b1FB55A5": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x25f0D71Da51A77Ca231484eBbAD1f588A0230ef2": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x26Cf1Dc84694E04277F2Fe4C13E43597c6010C2A": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x351d8894fB8bfa1b0eFF77bFD9Aab18eA2da8fDd": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x35d4D9bc79B0a543934b1769304B90d752691caD": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x383a4EdB30E896b8d2d044Be87079D45c0EA7065": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x3Eec7c855aF33280F1eD38b93059F5aa5862E3ab": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function claimOwner()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "eth:0x412Ac6044401cDf1e9833B7056c14C74AA593D37": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x43b718Aa5e678b08615CA984cbe25f690B085b32": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x4421461239aE746127C13a19177656124433dC60": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x4BB4C3CDc7562f08e9910A0C7D8bB7e108861eB4": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x4F18853BE8C01d375889c02D61A77B476d3E59dd": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x54e60fef7c7f2f747900452D4151aF976EaeAb76": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x58CDCf55f2c8660674F17561334F6370cbaDeEF8": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x5B8Ae1C9c5970e2637Cf3Af431acAAebEf7aFb85": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x5C71beE4a6b0D617D8c3d107D331292741789E27": [
      "constructor(address owner_)",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "function claimOwner()",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function packMessage(uint32 srcChainSlug_, address srcPlug_, uint32 dstChainSlug_, address dstPlug_, tuple(bytes32 msgId, uint256 executionFee, uint256 minMsgGasLimit, bytes32 executionParams, bytes payload) messageDetails_) pure returns (bytes32)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeRole(bytes32 role_, address revokee_)"
    ],
    "eth:0x5cC25cc25bE29d18472E76b2a19975aA1a37Bd5C": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x5e98A25d8d6FF69A8992d6Aa57948dFB77D4ECBa": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function claimOwner()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "eth:0x5F18C54e4E10287414A47925a24Ea3A8Cf4A9F50": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x613e87BE1cd75dEBC5e6e56a2AF2fED84162C142": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x615172e47c0C5A6dA8ea959632Ac0166f7a59eDc": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function bridgeWithPermit(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_, uint256 deadline_, uint8 v_, bytes32 r_, bytes32 s_) payable",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x63c0c19a282a1B52b07dD5a65b58948A07DAE32B": [
      "constructor(address _delegationManager, address _entryPoint)",
      "error ECDSAInvalidSignature()",
      "error ECDSAInvalidSignatureLength(uint256 length)",
      "error ECDSAInvalidSignatureS(bytes32 s)",
      "error ExecutionFailed()",
      "error InvalidEIP712NameLength()",
      "error InvalidEIP712VersionLength()",
      "error InvalidShortString()",
      "error NotDelegationManager()",
      "error NotEntryPoint()",
      "error NotEntryPointOrSelf()",
      "error NotSelf()",
      "error StringTooLong(string str)",
      "error UnauthorizedCallContext()",
      "error UnsupportedCallType(bytes1 callType)",
      "error UnsupportedExecType(bytes1 execType)",
      "event EIP712DomainChanged()",
      "event SentPrefund(address indexed sender, uint256 amount, bool success)",
      "event SetDelegationManager(address indexed newDelegationManager)",
      "event SetEntryPoint(address indexed entryPoint)",
      "event TryExecuteUnsuccessful(uint256 batchExecutionindex, bytes result)",
      "function DOMAIN_VERSION() view returns (string)",
      "function NAME() view returns (string)",
      "function PACKED_USER_OP_TYPEHASH() view returns (bytes32)",
      "function VERSION() view returns (string)",
      "function addDeposit() payable",
      "function delegationManager() view returns (address)",
      "function disableDelegation(tuple(address delegate, address delegator, bytes32 authority, tuple(address enforcer, bytes terms, bytes args)[] caveats, uint256 salt, bytes signature) _delegation)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function enableDelegation(tuple(address delegate, address delegator, bytes32 authority, tuple(address enforcer, bytes terms, bytes args)[] caveats, uint256 salt, bytes signature) _delegation)",
      "function entryPoint() view returns (address)",
      "function execute(tuple(address target, uint256 value, bytes callData) _execution) payable",
      "function execute(bytes32 _mode, bytes _executionCalldata) payable",
      "function executeFromExecutor(bytes32 _mode, bytes _executionCalldata) payable returns (bytes[] returnData_)",
      "function getDeposit() view returns (uint256)",
      "function getDomainHash() view returns (bytes32)",
      "function getNonce(uint192 _key) view returns (uint256)",
      "function getNonce() view returns (uint256)",
      "function getPackedUserOperationHash(tuple(address sender, uint256 nonce, bytes initCode, bytes callData, bytes32 accountGasLimits, uint256 preVerificationGas, bytes32 gasFees, bytes paymasterAndData, bytes signature) _userOp) view returns (bytes32)",
      "function getPackedUserOperationTypedDataHash(tuple(address sender, uint256 nonce, bytes initCode, bytes callData, bytes32 accountGasLimits, uint256 preVerificationGas, bytes32 gasFees, bytes paymasterAndData, bytes signature) _userOp) view returns (bytes32)",
      "function isDelegationDisabled(bytes32 _delegationHash) view returns (bool)",
      "function isValidSignature(bytes32 _hash, bytes _signature) view returns (bytes4 magicValue_)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) view returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) view returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) view returns (bytes4)",
      "function redeemDelegations(bytes[] _permissionContexts, bytes32[] _modes, bytes[] _executionCallDatas)",
      "function supportsExecutionMode(bytes32 _mode) view returns (bool)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function validateUserOp(tuple(address sender, uint256 nonce, bytes initCode, bytes callData, bytes32 accountGasLimits, uint256 preVerificationGas, bytes32 gasFees, bytes paymasterAndData, bytes signature) _userOp, bytes32, uint256 _missingAccountFunds) returns (uint256 validationData_)",
      "function withdrawDeposit(address _withdrawAddress, uint256 _withdrawAmount)"
    ],
    "eth:0x64dF894688c5052BeAdC35371cF69151Ebc5D658": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x6D303CEE7959f814042D31E0624fB88Ec6fbcC1d": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function acceptOwnership()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function renounceOwnership()",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "eth:0x755cD5d147036E11c76F1EeffDd94794fC265f0d": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x76624ff43D610F64177Bb9c194A2503642e9B803": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x7D7aC8d55A9bD4152b703011f3E61AB3bB0A5592": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function claimOwner()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "eth:0x7E1d17b580dD4F89037DB331430eAEe8B8e50c91": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x8180EcCC825b692ef65FF099a0A387743788bf78": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x8F5247072e9580624Be243D4EC8cD3F3ABfF86B9": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x943AC2775928318653e91d350574436A1b9b16f9": [
      "constructor(uint32 chainSlug_, address hasher_, address capacitorFactory_, address owner_, string version_)",
      "error ErrInSourceValidation()",
      "error InvalidCapacitorAddress()",
      "error InvalidConnection()",
      "error InvalidPacketId()",
      "error InvalidProof()",
      "error InvalidTokenAddress()",
      "error InvalidTransmitter()",
      "error LowGasLimit()",
      "error MessageAlreadyExecuted()",
      "error NoPermit(bytes32 role)",
      "error NotExecutor()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error PacketNotProposed()",
      "error PlugDisconnected()",
      "error SwitchboardExists()",
      "error UnequalArrayLengths()",
      "error VerificationFailed()",
      "error ZeroAddress()",
      "event CapacitorFactorySet(address capacitorFactory)",
      "event ExecutionManagerSet(address executionManager)",
      "event ExecutionSuccess(bytes32 msgId)",
      "event HasherSet(address hasher)",
      "event MessageOutbound(uint32 localChainSlug, address localPlug, uint32 dstChainSlug, address dstPlug, bytes32 msgId, uint256 minMsgGasLimit, bytes32 executionParams, bytes32 transmissionParams, bytes payload, tuple(uint128 transmissionFees, uint128 executionFee, uint128 switchboardFees) fees)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PacketProposed(address indexed transmitter, bytes32 indexed packetId, uint256 proposalCount, bytes32 root, address switchboard)",
      "event PlugConnected(address plug, uint32 siblingChainSlug, address siblingPlug, address inboundSwitchboard, address outboundSwitchboard, address capacitor, address decapacitor)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event Sealed(address indexed transmitter, bytes32 indexed packetId, uint256 batchSize, bytes32 root, bytes signature)",
      "event SiblingSwitchboardUpdated(address switchboard, uint32 siblingChainSlug, address siblingSwitchboard)",
      "event SwitchboardAdded(address switchboard, uint32 siblingChainSlug, address capacitor, address decapacitor, uint256 maxPacketLength, uint256 capacitorType)",
      "event TransmitManagerSet(address transmitManager)",
      "function capacitorFactory__() view returns (address)",
      "function capacitorToSlug(address) view returns (uint32)",
      "function capacitors__(address, uint32) view returns (address)",
      "function chainSlug() view returns (uint32)",
      "function claimOwner()",
      "function connect(uint32 siblingChainSlug_, address siblingPlug_, address inboundSwitchboard_, address outboundSwitchboard_)",
      "function decapacitors__(address, uint32) view returns (address)",
      "function execute(tuple(bytes32 packetId, uint256 proposalCount, uint256 executionGasLimit, bytes decapacitorProof, bytes signature) executionDetails_, tuple(bytes32 msgId, uint256 executionFee, uint256 minMsgGasLimit, bytes32 executionParams, bytes payload) messageDetails_) payable",
      "function executionManager__() view returns (address)",
      "function getMinFees(uint256 minMsgGasLimit_, uint256 payloadSize_, bytes32 executionParams_, bytes32 transmissionParams_, uint32 siblingChainSlug_, address plug_) view returns (uint256 totalFees)",
      "function getPlugConfig(address plugAddress_, uint32 siblingChainSlug_) view returns (address siblingPlug, address inboundSwitchboard__, address outboundSwitchboard__, address capacitor__, address decapacitor__)",
      "function globalMessageCount() view returns (uint64)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function hasher__() view returns (address)",
      "function isPacketProposed(bytes32 packetId_, uint256 proposalCount_, address switchboard_) view returns (bool)",
      "function messageExecuted(bytes32) view returns (bool)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function outbound(uint32 siblingChainSlug_, uint256 minMsgGasLimit_, bytes32 executionParams_, bytes32 transmissionParams_, bytes payload_) payable returns (bytes32 msgId)",
      "function owner() view returns (address)",
      "function packetIdRoots(bytes32, uint256, address) view returns (bytes32)",
      "function proposalCount(bytes32) view returns (uint256)",
      "function proposeForSwitchboard(bytes32 packetId_, bytes32 root_, address switchboard_, bytes signature_) payable",
      "function registerSwitchboardForSibling(uint32 siblingChainSlug_, uint256 maxPacketLength_, uint256 capacitorType_, address siblingSwitchboard_) returns (address capacitor, address decapacitor)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function rootProposedAt(bytes32, uint256, address) view returns (uint256)",
      "function seal(uint256 batchSize_, address capacitorAddress_, bytes signature_) payable",
      "function setCapacitorFactory(address capacitorFactory_)",
      "function setExecutionManager(address executionManager_)",
      "function setHasher(address hasher_)",
      "function setTransmitManager(address transmitManager_)",
      "function transmitManager__() view returns (address)",
      "function useSiblingSwitchboard(uint32 siblingChainSlug_, address siblingSwitchboard_)",
      "function version() view returns (bytes32)"
    ],
    "eth:0x95d60E34aB2E626407d98dF8C240e6174e5D37E5": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0x98CAd9A205f1F7A7150241Ef2d565d1702BCe57C": [
      "constructor(address owner_, uint32 chainSlug_, address socket_, address signatureVerifier_)",
      "error FeesTooHigh()",
      "error InsufficientFees()",
      "error InsufficientMsgValue()",
      "error InvalidMsgValue()",
      "error InvalidNonce()",
      "error InvalidTokenAddress()",
      "error MsgValueTooHigh()",
      "error MsgValueTooLow()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error OnlySocket()",
      "error PayloadTooLarge()",
      "error UnequalArrayLengths()",
      "error ZeroAddress()",
      "event ExecutionFeesSet(uint32 siblingChainSlug, tuple(uint80 perGasCost, uint80 perByteCost, uint80 overhead) executionFees)",
      "event ExecutionFeesWithdrawn(address account, uint32 siblingChainSlug, uint256 amount)",
      "event MsgValueMaxThresholdSet(uint256 siblingChainSlug, uint256 msgValueMaxThresholdSet)",
      "event MsgValueMinThresholdSet(uint256 siblingChainSlug, uint256 msgValueMinThresholdSet)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RelativeNativeTokenPriceSet(uint256 siblingChainSlug, uint256 relativeNativeTokenPrice)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event SwitchboardFeesWithdrawn(address switchboard, uint32 siblingChainSlug, uint256 amount)",
      "event TransmissionFeesWithdrawn(address transmitManager, uint32 siblingChainSlug, uint256 amount)",
      "function chainSlug() view returns (uint32)",
      "function claimOwner()",
      "function executionFees(uint32) view returns (uint80 perGasCost, uint80 perByteCost, uint80 overhead)",
      "function getExecutionTransmissionMinFees(uint256 minMsgGasLimit_, uint256 payloadSize_, bytes32 executionParams_, bytes32, uint32 siblingChainSlug_, address transmitManager_) view returns (uint128 minExecutionFee, uint128 transmissionFees)",
      "function getMinFees(uint256 gasLimit_, uint256 payloadSize_, bytes32 executionParams_, uint32 siblingChainSlug_) view returns (uint128 minExecutionFee)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function isExecutor(bytes32 packedMessage, bytes sig) view returns (address executor, bool isValidExecutor)",
      "function msgValueMaxThreshold(uint32) view returns (uint256)",
      "function msgValueMinThreshold(uint32) view returns (uint256)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function payAndCheckFees(uint256 minMsgGasLimit_, uint256 payloadSize_, bytes32 executionParams_, bytes32, uint32 siblingChainSlug_, uint128 switchboardFees_, uint128 verificationOverheadFees_, address transmitManager_, address switchboard_, uint256 maxPacketLength_) payable returns (uint128 executionFee, uint128 transmissionFees)",
      "function relativeNativeTokenPrice(uint32) view returns (uint256)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function setExecutionFees(uint256 nonce_, uint32 siblingChainSlug_, tuple(uint80 perGasCost, uint80 perByteCost, uint80 overhead) executionFees_, bytes signature_)",
      "function setMsgValueMaxThreshold(uint256 nonce_, uint32 siblingChainSlug_, uint256 msgValueMaxThreshold_, bytes signature_)",
      "function setMsgValueMinThreshold(uint256 nonce_, uint32 siblingChainSlug_, uint256 msgValueMinThreshold_, bytes signature_)",
      "function setRelativeNativeTokenPrice(uint256 nonce_, uint32 siblingChainSlug_, uint256 relativeNativeTokenPrice_, bytes signature_)",
      "function setTransmissionMinFees(uint32 remoteChainSlug_, uint128 fees_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function totalExecutionAndTransmissionFees(uint32) view returns (uint128 totalExecutionFees, uint128 totalTransmissionFees)",
      "function totalSwitchboardFees(address, uint32) view returns (uint128)",
      "function transmissionMinFees(address, uint32) view returns (uint128)",
      "function updateExecutionFees(address, uint128, bytes32) view",
      "function verifyParams(bytes32 executionParams_, uint256 msgValue_) pure",
      "function withdrawExecutionFees(uint32 siblingChainSlug_, uint128 amount_, address withdrawTo_)",
      "function withdrawSwitchboardFees(uint32 siblingChainSlug_, address switchboard_, uint128 amount_)",
      "function withdrawTransmissionFees(uint32 siblingChainSlug_, uint128 amount_)"
    ],
    "eth:0xA2bc0DaA9BF98820632bCa0663a9616f6bC180f8": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xA6Ae29Ce5c38DFE0Dd95B716748ac747f31E4013": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xa83B4006c16DAeAb2718294696c0122519195137": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xaA2f2B6cD33Eaabb795c6DB60AAec599C8450F35": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xB592512153c22F5Ba573b0c3E04cAB99d4Cd8856": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes extraData_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xc5d01939Af7Ce9Ffc505F0bb36eFeDde7920f2dc": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xC6cfb996A7CFEB89813A68CD13942CD75553032b": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function bridgeWithPermit(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_, uint256 deadline_, uint8 v_, bytes32 r_, bytes32 s_) payable",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xC8C57e4C73c71f72cA0a7e043E5D2D144F98ef13": [
      "constructor(address _singleton)"
    ],
    "eth:0xCa1AaCB6E16E7d50c6442f9eD6faEe5dDa638DaD": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xd04Bc056BE36a6127267E4F71d3b43D1BEEfE8bF": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xd1228C6CB94a670F30D5ACb1340a9d96aC30e6A8": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xd4964E8A405D396d94825f4d0f5dEDD8741C1d36": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xD4efe33C66B8CdE33B8896a2126E41e5dB571b7e": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function claimOwner()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "eth:0xD5a83a40F262E2247e6566171f9ADc76b745F5cD": [
      "constructor(address owner_, address socket_, uint32 chainSlug_, uint256 timeoutInSeconds_, address signatureVerifier_)",
      "error AlreadyAttested()",
      "error InvalidNonce()",
      "error InvalidRole()",
      "error InvalidRoot()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyExecutionManager()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error UnequalArrayLengths()",
      "error WatcherFound()",
      "error WatcherNotFound()",
      "error ZeroAddress()",
      "event GlobalTripChanged(bool isGlobalTipped)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PathTripChanged(uint32 srcChainSlug, bool isPathTripped)",
      "event ProposalAttested(bytes32 packetId, uint256 proposalCount, bytes32 root, address watcher, uint256 attestationsCount)",
      "event ProposalTripped(bytes32 packetId, uint256 proposalCount)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event SocketSet(address newSocket)",
      "event SwitchboardFeesSet(uint32 siblingChainSlug, tuple(uint128 switchboardFees, uint128 verificationOverheadFees) fees)",
      "function allowPacket(bytes32 root_, bytes32 packetId_, uint256 proposalCount_, uint32 srcChainSlug_, uint256 proposeTime_) view returns (bool)",
      "function attest(bytes32 packetId_, uint256 proposalCount_, bytes32 root_, bytes signature_)",
      "function attestations(bytes32) view returns (uint256)",
      "function chainSlug() view returns (uint32)",
      "function claimOwner()",
      "function fees(uint32) view returns (uint128 switchboardFees, uint128 verificationOverheadFees)",
      "function getMinFees(uint32 dstChainSlug_) view returns (uint128, uint128)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function grantWatcherRole(uint32 srcChainSlug_, address watcher_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function initialPacketCount(uint32) view returns (uint256)",
      "function isAttested(address, bytes32) view returns (bool)",
      "function isGlobalTipped() view returns (bool)",
      "function isNonWatcherRole(bytes32 role_) pure returns (bool)",
      "function isPathTripped(uint32) view returns (bool)",
      "function isProposalTripped(bytes32, uint256) view returns (bool)",
      "function isRootValid(bytes32) view returns (bool)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveFees(uint32) payable",
      "function registerSiblingSlug(uint32 siblingChainSlug_, uint256 maxPacketLength_, uint256 capacitorType_, uint256 initialPacketCount_, address siblingSwitchboard_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address grantee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function revokeWatcherRole(uint32 srcChainSlug_, address watcher_)",
      "function setFees(uint256 nonce_, uint32 dstChainSlug_, uint128 switchboardFees_, uint128 verificationOverheadFees_, bytes signature_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function timeoutInSeconds() view returns (uint256)",
      "function totalWatchers(uint32) view returns (uint256)",
      "function tripGlobal(uint256 nonce_, bytes signature_)",
      "function tripPath(uint256 nonce_, uint32 srcChainSlug_, bytes signature_)",
      "function tripProposal(uint256 nonce_, bytes32 packetId_, uint256 proposalCount_, bytes signature_)",
      "function unTrip(uint256 nonce_, bytes signature_)",
      "function unTripPath(uint256 nonce_, uint32 srcChainSlug_, bytes signature_)",
      "function updateSibling(uint32 siblingChainSlug_, address siblingSwitchboard_)",
      "function withdrawFees(address withdrawTo_)"
    ],
    "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "eth:0xdb161cdc9c11892922F7121a409b196f3b00e640": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xDE1617Ddb7C8A250A409D986930001985cfad76F": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function bridgeWithPermit(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_, uint256 deadline_, uint8 v_, bytes32 r_, bytes32 s_) payable",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xdf34E61B6e7B9e348713d528fEB019d504d38c1e": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xdf5f7dfDFc26ee5F629949e330bEf56906319CAe": [
      "constructor(uint32 chainSlug_, address inbox_, address owner_, address socket_, address bridge_, address outbox_, address signatureVerifier_)",
      "error AlreadyInitialized()",
      "error FeesNotEnough()",
      "error InvalidNonce()",
      "error InvalidSender()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error NoRootFound()",
      "error OnlyExecutionManager()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error UnequalArrayLengths()",
      "error ZeroAddress()",
      "event GlobalTripChanged(bool isGlobalTipped)",
      "event InitiatedNativeConfirmation(bytes32 packetId)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event RootReceived(bytes32 packetId, bytes32 root)",
      "event SwitchboardFeesSet(uint256 switchboardFees, uint256 verificationOverheadFees)",
      "event UpdatedBridge(address bridgeAddress)",
      "event UpdatedInboxAddress(address inbox)",
      "event UpdatedOutbox(address outboxAddress)",
      "event UpdatedRemoteNativeSwitchboard(address remoteNativeSwitchboard)",
      "function allowPacket(bytes32 root_, bytes32 packetId_, uint256, uint32, uint256) view returns (bool)",
      "function bridge__() view returns (address)",
      "function capacitor__() view returns (address)",
      "function chainSlug() view returns (uint32)",
      "function claimOwner()",
      "function getMinFees(uint32) view returns (uint128 switchboardFee_, uint128 verificationFee_)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function inbox__() view returns (address)",
      "function initiateNativeConfirmation(bytes32 packetId_, uint256 maxSubmissionCost_, uint256 maxGas_, uint256 gasPriceBid_, address callValueRefundAddress_, address remoteRefundAddress_) payable",
      "function isGlobalTipped() view returns (bool)",
      "function isInitialized() view returns (bool)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function outbox__() view returns (address)",
      "function owner() view returns (address)",
      "function packetIdToRoot(bytes32) view returns (bytes32)",
      "function receiveFees(uint32) payable",
      "function receivePacket(bytes32 packetId_, bytes32 root_)",
      "function registerSiblingSlug(uint32 siblingChainSlug_, uint256 maxPacketLength_, uint256 capacitorType_, uint256 initialPacketCount_, address remoteNativeSwitchboard_)",
      "function remoteNativeSwitchboard() view returns (address)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function setFees(uint256 nonce_, uint32, uint128 switchboardFees_, uint128 verificationOverheadFees_, bytes signature_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function switchboardFees() view returns (uint128)",
      "function tripGlobal(uint256 nonce_, bytes signature_)",
      "function unTrip(uint256 nonce_, bytes signature_)",
      "function updateBridge(address bridgeAddress_)",
      "function updateInboxAddresses(address inbox_)",
      "function updateOutbox(address outboxAddress_)",
      "function updateSibling(uint32 siblingChainSlug_, address remoteNativeSwitchboard_)",
      "function verificationOverheadFees() view returns (uint128)",
      "function withdrawFees(address withdrawTo_)"
    ],
    "eth:0xDf9Fa2b420689384E8DD55a706262DC0ED37020F": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function bridgeWithPermit(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_, uint256 deadline_, uint8 v_, bytes32 r_, bytes32 s_) payable",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function disperseRewards(address receiver_, uint256 amount_, address rewardToken_)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xdFf78A949E47c1e90f3Dd6dd7Fe2Fa72B42a75f7": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xE3E96892D30E0ee1a8131BAf87c891201F7137bf": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xE753E9E0d046eD2Ff3234CD174C22E277F143FbF": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xeB66259d2eBC3ed1d3a98148f6298927d8A36397": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ],
    "eth:0xeBB5D642aA8ccDeE98373D6aC3ee0602b63824b3": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function claimOwner()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "eth:0xeD037aFBffC65a94E9CC592947E851FB2f730341": [
      "constructor(address owner_, uint32 chainSlug_, address socket_, address signatureVerifier_)",
      "error InvalidNonce()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyExecutionManager()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error UnequalArrayLengths()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event SignatureVerifierSet(address signatureVerifier)",
      "event TransmissionFeesSet(uint256 dstChainSlug, uint256 transmissionFees)",
      "function chainSlug() view returns (uint32)",
      "function checkTransmitter(uint32 siblingSlug_, bytes32 digest_, bytes signature_) view returns (address, bool)",
      "function claimOwner()",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveFees(uint32) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function setSignatureVerifier(address signatureVerifier_)",
      "function setTransmissionFees(uint256 nonce_, uint32 dstChainSlug_, uint128 transmissionFees_, bytes signature_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function withdrawFees(address withdrawTo_)"
    ],
    "eth:0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82": [
      "constructor(address _singleton)"
    ],
    "eth:0xf1ABF110d1B6ff0E2e8C05dd64FBF9eBA4d8af98": [
      "constructor(address owner_)",
      "error InvalidSigLength()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "function claimOwner()",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function recoverSigner(bytes32 digest_, bytes signature_) pure returns (address signer)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeRole(bytes32 role_, address revokee_)"
    ],
    "eth:0xF90AA670ddC1Ae778015f5B84587ad3407dB7Cf9": [
      "constructor(address token_)",
      "error CannotTransferOrExecuteOnBridgeContracts()",
      "error InsufficientMsgValue()",
      "error InvalidConnector()",
      "error InvalidTokenAddress()",
      "error InvalidTokenContract()",
      "error MessageIdMisMatched()",
      "error NoPendingData()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAddressReceiver()",
      "event BridgingTokens(address connector, address sender, address receiver, uint256 amount, bytes32 messageId)",
      "event ConnectorStatusUpdated(address connector, bool status)",
      "event HookUpdated(address newHook)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event TokensBridged(address connecter, address receiver, uint256 amount, bytes32 messageId)",
      "function bridge(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_, bytes execPayload_, bytes options_) payable",
      "function bridgeType() view returns (bytes32)",
      "function claimOwner()",
      "function connectorCache(address) view returns (bytes)",
      "function getMinFees(address connector_, uint256 msgGasLimit_, uint256 payloadSize_) view returns (uint256 totalFees)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hook__() view returns (address)",
      "function identifierCache(bytes32) view returns (bytes)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveInbound(uint32 siblingChainSlug_, bytes payload_) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function retry(address connector_, bytes32 messageId_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function token() view returns (address)",
      "function updateConnectorStatus(address[] connectors, bool[] statuses)",
      "function updateHook(address hook_, bool approve_)",
      "function validConnectors(address) view returns (bool)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c"
  },
  "usedBlockNumbers": { "ethereum": 23067746 },
  "permissionsConfigHash": "0xe5be59e86f42d01f9d74e39c9aa5a752c0b23737bc5676c0d8ceeba8c86cc0d0"
}
