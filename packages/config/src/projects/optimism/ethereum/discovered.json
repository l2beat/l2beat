{
  "name": "optimism",
  "chain": "ethereum",
  "blockNumber": 22437740,
  "configHash": "0x1c384be3eb6908db12a08b09af1cf1322ff41dd38663d773e2fc16edbd56bc56",
  "entries": [
    {
      "address": "0x000000000000000000000000000000000000dEaD",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LivenessModule",
      "address": "0x0454092516c9A4d636d3CAfA1e82161376C8a748",
      "type": "Contract",
      "template": "gnosisSafeModules/LivenessModule",
      "sourceHashes": [
        "0x998654cb64c7fc216505bdb3322b20e7d7c95704005228ad1f878bc631c4af8d"
      ],
      "proxyType": "immutable",
      "description": "used to remove members inactive for 98d while making sure that the threshold remains above 75%. If the number of members falls below 8, the 0x847B5c174615B1B7fDF770882256e2D3E95b9D92 takes ownership of the multisig",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03"
        }
      ],
      "sinceTimestamp": 1717149791,
      "sinceBlock": 19989094,
      "values": {
        "$immutable": true,
        "fallbackOwner": "0x847B5c174615B1B7fDF770882256e2D3E95b9D92",
        "getRequiredThreshold": [
          0, 1, 2, 3, 3, 4, 5, 6, 6, 7, 8, 9, 9, 10, 11, 12, 12, 13, 14, 15
        ],
        "livenessGuard": "0x24424336F04440b1c28685a38303aC33C9D14a25",
        "livenessInterval": "98d",
        "minOwners": 8,
        "ownershipTransferredToFallback": false,
        "safe": "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03",
        "thresholdPercentage": 75,
        "version": "1.2.0"
      },
      "implementationNames": {
        "0x0454092516c9A4d636d3CAfA1e82161376C8a748": "LivenessModule"
      }
    },
    {
      "address": "0x07dC0893cAfbF810e3E72505041f2865726Fd073",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Optimism Guardian Multisig",
      "address": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "directlyReceivedPermissions": [
        {
          "permission": "guard",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1716902219,
      "sinceBlock": 19968607,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0xc2819DC788505Aac350142A7A707BF9D03E3Bd03"],
        "$threshold": 1,
        "domainSeparator": "0x441442b08d4fdc9877b881d21b5394f2af9aa0f41ef7184f54e10664ea757773",
        "getChainId": 1,
        "GnosisSafe_modules": ["0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B"],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 4,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "0x0aA384EB2fedD2741277A0f72909A0d7275575D7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1DAITokenBridge",
      "address": "0x10E6593CDda8c58a1d0f14C5164B376352a55f2F",
      "type": "Contract",
      "sourceHashes": [
        "0x4c5465ff113d9808b9b99013be373f52fcb90c8df71628dd658f0adbceff1366"
      ],
      "proxyType": "immutable",
      "description": "Custom Gateway for DAI deposits via canonical messaging. Deposited DAI is forwarded to a Vault contract.",
      "sinceTimestamp": 1625675779,
      "sinceBlock": 12781431,
      "values": {
        "$immutable": true,
        "escrow": "0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65",
        "isOpen": 1,
        "l1Token": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "l2DAITokenBridge": "0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65",
        "l2Token": "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",
        "messenger": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1"
      },
      "implementationNames": {
        "0x10E6593CDda8c58a1d0f14C5164B376352a55f2F": "L1DAITokenBridge"
      }
    },
    {
      "name": "DeputyPauseModule",
      "address": "0x126a736B18E0a64fBA19D421647A530E327E112C",
      "type": "Contract",
      "template": "opstack/DeputyPauseModule",
      "sourceHashes": [
        "0x9ce85f452c217be52c8f91f907759e771e78bbcd9d8cda37e90e3cdd9a70cf15"
      ],
      "proxyType": "immutable",
      "description": "Allows 0x352f1defB49718e7Ea411687E850aA8d6299F7aC, called the deputy pauser, to act on behalf of the 0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A if set as its Safe module.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A"
        }
      ],
      "sinceTimestamp": 1745572679,
      "sinceBlock": 22345090,
      "values": {
        "$immutable": true,
        "deputy": "0x352f1defB49718e7Ea411687E850aA8d6299F7aC",
        "deputyAuthMessageTypehash": "0x92e47526b2e32be4f66cd2600e9cda9147735107631c0b241a067693f49b7f38",
        "deputyGuardianModule": "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "DeputyPauseModule",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x126a736B18E0a64fBA19D421647A530E327E112C",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "foundationSafe": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
        "pauseMessageTypehash": "0xd64f31a1d64c5b7eede44a92f46995fef9325cb2533a7798a738932f156c4481",
        "superchainConfig": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "version": "1.0.0-beta.2"
      },
      "implementationNames": {
        "0x126a736B18E0a64fBA19D421647A530E327E112C": "DeputyPauseModule"
      }
    },
    {
      "address": "0x1822b35B09f5ce1C78ecbC06AC0A4e17885b925e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "AnchorStateRegistry",
      "address": "0x1c68ECfbf9C8B1E6C0677965b3B9Ecf9A104305b",
      "type": "Contract",
      "template": "opstack/AnchorStateRegistry",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x5d50c259a38eef46641553e8ec1910a443c1b25062ea558d0b3e0bc7218adae1"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contains the latest confirmed state root that can be used as a starting point in a dispute game.",
      "ignoreInWatchMode": ["anchorGame", "getAnchorRoot"],
      "sinceTimestamp": 1743612623,
      "sinceBlock": 22182531,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0x7b465370BB7A333f99edd19599EB7Fb1c2D3F8D2",
        "$pastUpgrades": [
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x7b465370BB7A333f99edd19599EB7Fb1c2D3F8D2"]
          ]
        ],
        "$upgradeCount": 1,
        "anchorGame": "0xbF9e68fe6f7d6e6b2Ec5e34b38DBEFaB5700B456",
        "disputeGameFactory": "0xe5965Ab5962eDc7477C8520243A95517CD252fA9",
        "getAnchorRoot": [
          "0xa370ba8e35b643d1d85cd1283a425a69dce97a3d3c28a1ecba187e8654301798",
          135244172
        ],
        "portal": "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed",
        "respectedGameType": 0,
        "superchainConfig": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "version": "2.2.2"
      },
      "implementationNames": {
        "0x1c68ECfbf9C8B1E6C0677965b3B9Ecf9A104305b": "Proxy",
        "0x7b465370BB7A333f99edd19599EB7Fb1c2D3F8D2": "AnchorStateRegistry"
      }
    },
    {
      "name": "PreimageOracle",
      "address": "0x1fb8cdFc6831fc866Ed9C51aF8817Da5c287aDD3",
      "type": "Contract",
      "template": "opstack/PreimageOracle",
      "sourceHashes": [
        "0xd9838f1f137bd5397f583f33c414ec9c0fc3dc69401213fae0f09c36d4ac8e47"
      ],
      "proxyType": "immutable",
      "description": "The PreimageOracle contract is used to load the required data from L1 for a dispute game.",
      "sinceTimestamp": 1740762647,
      "sinceBlock": 21946249,
      "values": {
        "$immutable": true,
        "challengePeriod": 86400,
        "KECCAK_TREE_DEPTH": 16,
        "MAX_LEAF_COUNT": 65535,
        "MIN_BOND_SIZE": "250000000000000000",
        "minProposalSize": 126000,
        "PRECOMPILE_CALL_RESERVED_GAS": 100000,
        "proposalCount": 0,
        "proposals": [],
        "version": "1.1.4"
      },
      "implementationNames": {
        "0x1fb8cdFc6831fc866Ed9C51aF8817Da5c287aDD3": "PreimageOracle"
      }
    },
    {
      "name": "DelayedWETH_PermissionedGames",
      "address": "0x21429aF66058BC3e4aE4a8f2EC4531AaC433ecbC",
      "type": "Contract",
      "template": "opstack/DelayedWETH",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x1c7d0fda5ed6d8fc7f5b5f7df5e307f0fcfd173fa5833ea9fce8875d5d44d86a"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract designed to hold the bonded ETH for each game. It is designed as a wrapper around WETH to allow an owner to function as a backstop if a game would incorrectly distribute funds.",
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1733920151,
      "sinceBlock": 21379267,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0x5e40B9231B86984b5150507046e354dbFbeD3d9e",
        "$pastUpgrades": [
          [
            "2024-12-11T12:29:23.000Z",
            "0x6b9ad25cef01bd97f1be9642d96cbf75d533129608d5a62e4ae3d69ead47d3dc",
            ["0x71e966Ae981d1ce531a7b6d23DC0f27B38409087"]
          ],
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x5e40B9231B86984b5150507046e354dbFbeD3d9e"]
          ]
        ],
        "$upgradeCount": 2,
        "config": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "decimals": 18,
        "delay": 302400,
        "name": "Wrapped Ether",
        "owner": "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A",
        "symbol": "WETH",
        "totalSupply": 0,
        "version": "1.3.0"
      },
      "implementationNames": {
        "0x21429aF66058BC3e4aE4a8f2EC4531AaC433ecbC": "Proxy",
        "0x5e40B9231B86984b5150507046e354dbFbeD3d9e": "DelayedWETH"
      }
    },
    {
      "name": "SystemConfig",
      "address": "0x229047fed2591dbec1eF1118d64F7aF3dB9EB290",
      "type": "Contract",
      "template": "opstack/SystemConfig",
      "sourceHashes": [
        "0x2cdcfef705094aaac53d507bad64d27b48ea5a9c11a7fadffacc192aab7a823f",
        "0x921de6fc906d159fdcef862d2b9559063f5e7b9b7588fa5f33153360ddf296e7"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.",
      "ignoreInWatchMode": ["scalar", "overhead"],
      "sinceTimestamp": 1685377403,
      "sinceBlock": 17365804,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0x340f923E5c7cbB2171146f64169EC9d5a9FfE647",
        "$pastUpgrades": [
          [
            "2023-06-06T15:58:47.000Z",
            "0x76bceccd7d44656f5a129a600a6120091570b897c1d45c18cd7134cfe67c2537",
            ["0x5efa852e92800D1C982711761e45c3FE39a2b6D8"]
          ],
          [
            "2024-02-26T21:44:11.000Z",
            "0x3f7c36a1d636cdb23bf4f9171c27ebe58b73f4c0e6a33dbaac2c2f3c142faf50",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-02-26T21:44:11.000Z",
            "0x3f7c36a1d636cdb23bf4f9171c27ebe58b73f4c0e6a33dbaac2c2f3c142faf50",
            ["0x33A032ec93Ec0C492Ec4BF0B30D5f51986E5a314"]
          ],
          [
            "2024-04-11T20:49:59.000Z",
            "0x4758bd62359bc69d7e8a0faaf5308d826379c23258d689a7430d5c0ad0361ad2",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-04-11T20:49:59.000Z",
            "0x4758bd62359bc69d7e8a0faaf5308d826379c23258d689a7430d5c0ad0361ad2",
            ["0xba2492e52F45651B60B8B38d4Ea5E2390C64Ffb1"]
          ],
          [
            "2024-06-10T16:42:59.000Z",
            "0xbe810ed6e1e827930bd46cde42c4883662ddb6d244a26af2f0409cc2782bee61",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-06-10T16:42:59.000Z",
            "0xbe810ed6e1e827930bd46cde42c4883662ddb6d244a26af2f0409cc2782bee61",
            ["0xF56D96B2535B932656d3c04Ebf51baBff241D886"]
          ],
          [
            "2025-01-24T14:41:35.000Z",
            "0x86da7386a26978c3db89e97c1f4feee613a8a0c07bbe4640624b05276f49c350",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2025-01-24T14:41:35.000Z",
            "0x86da7386a26978c3db89e97c1f4feee613a8a0c07bbe4640624b05276f49c350",
            ["0xAB9d6cB7A427c0765163A7f45BB91cAfe5f2D375"]
          ],
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x760C48C62A85045A6B69f07F4a9f22868659CbCc"]
          ],
          [
            "2025-04-24T16:16:23.000Z",
            "0xbe44244e352a9ffa67ad7f7133e9ed014b380e4b1bd789419e6d33aaad780d12",
            ["0x340f923E5c7cbB2171146f64169EC9d5a9FfE647"]
          ]
        ],
        "$upgradeCount": 11,
        "basefeeScalar": 5227,
        "BATCH_INBOX_SLOT": "0x71ac12829d66ee73d8d95bff50b3589745ce57edae70a3fb111a2342464dc597",
        "batcherHash": "0x6887246668a3b87F54DeB3b94Ba47a6f63F32985",
        "batchInbox": "0xFF00000000000000000000000000000000000010",
        "blobbasefeeScalar": 1014213,
        "DISPUTE_GAME_FACTORY_SLOT": "0x52322a25d9f59ea17656545543306b7aef62bc0cc53a0e65ccfa0c75b97aa906",
        "disputeGameFactory": "0xe5965Ab5962eDc7477C8520243A95517CD252fA9",
        "eip1559Denominator": 250,
        "eip1559Elasticity": 4,
        "gasLimit": 60000000,
        "getAddresses": {
          "l1CrossDomainMessenger": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
          "l1ERC721Bridge": "0x5a7749f83b81B301cAb5f48EB8516B986DAef23D",
          "l1StandardBridge": "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1",
          "disputeGameFactory": "0xe5965Ab5962eDc7477C8520243A95517CD252fA9",
          "optimismPortal": "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed",
          "optimismMintableERC20Factory": "0x75505a97BD334E7BD3C476893285569C4136Fa0F"
        },
        "L1_CROSS_DOMAIN_MESSENGER_SLOT": "0x383f291819e6d54073bc9a648251d97421076bdd101933c0c022219ce9580636",
        "L1_ERC_721_BRIDGE_SLOT": "0x46adcbebc6be8ce551740c29c47c8798210f23f7f4086c41752944352568d5a7",
        "L1_STANDARD_BRIDGE_SLOT": "0x9904ba90dde5696cda05c9e0dab5cbaa0fea005ace4d11218a02ac668dad6376",
        "l1CrossDomainMessenger": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
        "l1ERC721Bridge": "0x5a7749f83b81B301cAb5f48EB8516B986DAef23D",
        "l1StandardBridge": "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1",
        "maximumGasLimit": 200000000,
        "minimumGasLimit": 21000000,
        "operatorFeeConstant": 0,
        "operatorFeeScalar": 0,
        "opStackDA": {
          "isSequencerSendingBlobTx": true,
          "isUsingCelestia": false,
          "isUsingEigenDA": false
        },
        "OPTIMISM_MINTABLE_ERC20_FACTORY_SLOT": "0xa04c5bb938ca6fc46d95553abf0a76345ce3e722a30bf4f74928b8e7d852320c",
        "OPTIMISM_PORTAL_SLOT": "0x4b6c74f9e688cb39801f2112c14a8c57232a3fc5202e1444126d4bce86eb19ac",
        "optimismMintableERC20Factory": "0x75505a97BD334E7BD3C476893285569C4136Fa0F",
        "optimismPortal": "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed",
        "overhead": 0,
        "owner": "0x847B5c174615B1B7fDF770882256e2D3E95b9D92",
        "resourceConfig": {
          "maxResourceLimit": 20000000,
          "elasticityMultiplier": 10,
          "baseFeeMaxChangeDenominator": 8,
          "minimumBaseFee": 1000000000,
          "systemTxMaxGas": 1000000,
          "maximumBaseFee": "340282366920938463463374607431768211455"
        },
        "scalar": "452312848583266388373324160190187140051835877600158453279135543542576845931",
        "sequencerInbox": "0xFF00000000000000000000000000000000000010",
        "START_BLOCK_SLOT": "0xa11ee3ab75b40e88a0105e935d17cd36c8faee0138320d776c411291bdbbb19f",
        "startBlock": 17422444,
        "UNSAFE_BLOCK_SIGNER_SLOT": "0x65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
        "unsafeBlockSigner": "0xAAAA45d9549EDA09E70937013520214382Ffc4A2",
        "version": "2.5.0",
        "VERSION": 0
      },
      "fieldMeta": {
        "gasLimit": {
          "severity": "LOW",
          "description": "Gas limit for blocks on L2."
        }
      },
      "implementationNames": {
        "0x229047fed2591dbec1eF1118d64F7aF3dB9EB290": "Proxy",
        "0x340f923E5c7cbB2171146f64169EC9d5a9FfE647": "SystemConfig"
      },
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "LivenessGuard",
      "address": "0x24424336F04440b1c28685a38303aC33C9D14a25",
      "type": "Contract",
      "sourceHashes": [
        "0xe771f3d1c51456e08e2c93a904b12010870dc4fa79ee82e4bc90433557931f05"
      ],
      "proxyType": "immutable",
      "description": "Modular contract to be used together with the LivenessModule. Tracks liveness / activity of Safe owners.",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0454092516c9A4d636d3CAfA1e82161376C8a748",
          "description": "can remove members of 0xc2819DC788505Aac350142A7A707BF9D03E3Bd03 inactive for 98d."
        }
      ],
      "ignoreInWatchMode": ["timeSinceLastL2beatInteraction"],
      "sinceTimestamp": 1717149791,
      "sinceBlock": 19989094,
      "values": {
        "$immutable": true,
        "safe": "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03",
        "timeSinceLastL2beatInteraction": "14d 17h",
        "version": "1.0.0"
      },
      "implementationNames": {
        "0x24424336F04440b1c28685a38303aC33C9D14a25": "LivenessGuard"
      }
    },
    {
      "name": "L1CrossDomainMessenger",
      "address": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
      "type": "Contract",
      "template": "opstack/L1CrossDomainMessenger",
      "sourceHashes": [
        "0x6e4b297b822bdda2bb8bbf4dde360ee51379af5a0de55c0d726a2d7b68791bf7",
        "0x03bcdc719cb7bd0a1377c01bb50b30a6122b308f673b7d7b15a3bb8628e6bd8c"
      ],
      "proxyType": "resolved delegate proxy",
      "description": "Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function.",
      "ignoreInWatchMode": ["messageNonce"],
      "sinceTimestamp": 1624400997,
      "sinceBlock": 12686757,
      "values": {
        "$immutable": false,
        "$implementation": "0x5D5a095665886119693F0B41d8DFeE78da033e8B",
        "$pastUpgrades": [
          [
            "2021-06-22T22:29:27.000Z",
            "0xd19d40f11c375feeea5fe47576ce98a3a08caac68b2a8a52fb95dd1a76dd205a",
            ["0x16393737D09d2722AD13DcA3cA8C3DB957699F1D"]
          ],
          [
            "2021-06-26T00:52:47.000Z",
            "0x98a05fb521b3349dd92cff2e104d78c6c318add003bb501c0d416b2b4d75df8a",
            ["0xbfba066b5cA610Fe70AdCE45FcB622F945891bb0"]
          ],
          [
            "2021-11-11T17:37:56.000Z",
            "0x2625aa2013fd1a650fb0264d2746be597e12f846baa48a68fe14539c200ed6dc",
            ["0x0000000000000000000000000000000000000000"]
          ],
          [
            "2021-11-11T19:29:14.000Z",
            "0xbabb37235bd38ae5a29717590eedfd9b02f84a12b890b2126feac68f223d7448",
            ["0xd9166833FF12A5F900ccfBf2c8B62a90F1Ca1FD5"]
          ],
          [
            "2023-06-06T15:58:47.000Z",
            "0x76bceccd7d44656f5a129a600a6120091570b897c1d45c18cd7134cfe67c2537",
            ["0x0000000000000000000000000000000000000000"]
          ],
          [
            "2023-06-06T18:24:11.000Z",
            "0xe2ff41f9bdf03d5455f55539b8b9c350276a179ca7f79322e2077d7c1ffb1268",
            ["0x2150Bc3c64cbfDDbaC9815EF615D6AB8671bfe43"]
          ],
          [
            "2024-02-26T21:44:11.000Z",
            "0x3f7c36a1d636cdb23bf4f9171c27ebe58b73f4c0e6a33dbaac2c2f3c142faf50",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-02-26T21:44:11.000Z",
            "0x3f7c36a1d636cdb23bf4f9171c27ebe58b73f4c0e6a33dbaac2c2f3c142faf50",
            ["0xa95B24af19f8907390eD15f8348A1a5e6Ccbc5C6"]
          ],
          [
            "2024-04-11T20:49:59.000Z",
            "0x4758bd62359bc69d7e8a0faaf5308d826379c23258d689a7430d5c0ad0361ad2",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-04-11T20:49:59.000Z",
            "0x4758bd62359bc69d7e8a0faaf5308d826379c23258d689a7430d5c0ad0361ad2",
            ["0xD3494713A5cfaD3F5359379DfA074E2Ac8C6Fd65"]
          ],
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x3eA6084748ED1b2A9B5D4426181F1ad8C93F6231"]
          ],
          [
            "2025-04-24T16:16:23.000Z",
            "0xbe44244e352a9ffa67ad7f7133e9ed014b380e4b1bd789419e6d33aaad780d12",
            ["0x5D5a095665886119693F0B41d8DFeE78da033e8B"]
          ]
        ],
        "$upgradeCount": 12,
        "ENCODING_OVERHEAD": 260,
        "FLOOR_CALLDATA_OVERHEAD": 40,
        "MESSAGE_VERSION": 1,
        "messageNonce": "1766847064778384329583297500742918515827483896875618958121606201292793059",
        "MIN_GAS_CALLDATA_OVERHEAD": 16,
        "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR": 63,
        "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR": 64,
        "OTHER_MESSENGER": "oeth:0x4200000000000000000000000000000000000007",
        "otherMessenger": "oeth:0x4200000000000000000000000000000000000007",
        "paused": false,
        "portal": "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed",
        "PORTAL": "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed",
        "RELAY_CALL_OVERHEAD": 40000,
        "RELAY_CONSTANT_OVERHEAD": 200000,
        "RELAY_GAS_CHECK_BUFFER": 5000,
        "RELAY_RESERVED_GAS": 40000,
        "ResolvedDelegateProxy_addressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "ResolvedDelegateProxy_implementationName": "OVM_L1CrossDomainMessenger",
        "superchainConfig": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "TX_BASE_GAS": 21000,
        "version": "2.6.0"
      },
      "implementationNames": {
        "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1": "Lib_ResolvedDelegateProxy",
        "0x5D5a095665886119693F0B41d8DFeE78da033e8B": "L1CrossDomainMessenger"
      },
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "oeth" } }
      ],
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "0x3041BA32f451F5850c147805F5521AC206421623",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "DelayedWETH_PermissionlessGames",
      "address": "0x323dFC63c9B83CB83f40325AaB74b245937cbdF0",
      "type": "Contract",
      "template": "opstack/DelayedWETH",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x1c7d0fda5ed6d8fc7f5b5f7df5e307f0fcfd173fa5833ea9fce8875d5d44d86a"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract designed to hold the bonded ETH for each game. It is designed as a wrapper around WETH to allow an owner to function as a backstop if a game would incorrectly distribute funds.",
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1733920199,
      "sinceBlock": 21379271,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0x5e40B9231B86984b5150507046e354dbFbeD3d9e",
        "$pastUpgrades": [
          [
            "2024-12-11T12:30:11.000Z",
            "0x01fcf03047d62053c36632d455437fb4cee158324af1d57a50cb50b43a7f8499",
            ["0x71e966Ae981d1ce531a7b6d23DC0f27B38409087"]
          ],
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x5e40B9231B86984b5150507046e354dbFbeD3d9e"]
          ]
        ],
        "$upgradeCount": 2,
        "config": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "decimals": 18,
        "delay": 302400,
        "name": "Wrapped Ether",
        "owner": "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A",
        "symbol": "WETH",
        "totalSupply": "20415188000000000000",
        "version": "1.3.0"
      },
      "implementationNames": {
        "0x323dFC63c9B83CB83f40325AaB74b245937cbdF0": "Proxy",
        "0x5e40B9231B86984b5150507046e354dbFbeD3d9e": "DelayedWETH"
      }
    },
    {
      "name": "Optimism EOA 1",
      "address": "0x352f1defB49718e7Ea411687E850aA8d6299F7aC",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "guard",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "via": [
            { "address": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2" },
            {
              "address": "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B",
              "condition": "if not revoked by the Security Council"
            },
            { "address": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A" },
            {
              "address": "0x126a736B18E0a64fBA19D421647A530E327E112C",
              "condition": "though restricted to the global pause function"
            }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x126a736B18E0a64fBA19D421647A530E327E112C",
          "condition": "though restricted to the global pause function"
        }
      ]
    },
    {
      "name": "GnosisSafe",
      "address": "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1678243007,
      "sinceBlock": 16780617,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xb23794fd6BA1CEAd01Cf54D772b8341F2F0197A5",
          "0x4665374939642965EfD8357D4568D2A77f677429"
        ],
        "$threshold": 2,
        "domainSeparator": "0xc7edf91fb84ec337ffa25b6f502a8c52c3dd4ea86d452728767d2836fa3819e3",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 2 (100%)",
        "nonce": 70,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "0x4665374939642965EfD8357D4568D2A77f677429",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1DAIEscrow",
      "address": "0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65",
      "type": "Contract",
      "template": "maker/L1Escrow",
      "sourceHashes": [
        "0xe3c0ee54209bc4a4d457bc5e251aff40a83fc784e37b8b90fd9158c6b0f29e5c"
      ],
      "proxyType": "immutable",
      "description": "Simple escrow that accepts tokens and allows to configure permissioned addresses that can access the tokens.",
      "sinceTimestamp": 1625675683,
      "sinceBlock": 12781427,
      "values": {
        "$immutable": true,
        "wards": [
          "0xBE8E3e3618f7474F8cB1d074A26afFef007E98FB",
          "0x09e05fF6142F2f9de8B6B65855A1d56B6cfE4c58"
        ]
      },
      "implementationNames": {
        "0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65": "L1Escrow"
      }
    },
    {
      "address": "0x473300df21D047806A082244b417f96b32f13A33",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x4A7322258c9E690e4CB8Cea6e5251443E956e61E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x51aCb8e1205De850D1b512584FeE9C29C3813dDa",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SuperchainProxyAdmin",
      "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x96d2f0fa1bd83ebd61ba6a2351c64c7fda7aa580b11ea67bb6bf4338e5c28512"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
          "description": "set and change address mappings."
        },
        {
          "permission": "upgrade",
          "from": "0x1c68ECfbf9C8B1E6C0677965b3B9Ecf9A104305b"
        },
        {
          "permission": "upgrade",
          "from": "0x21429aF66058BC3e4aE4a8f2EC4531AaC433ecbC"
        },
        {
          "permission": "upgrade",
          "from": "0x229047fed2591dbec1eF1118d64F7aF3dB9EB290"
        },
        {
          "permission": "upgrade",
          "from": "0x323dFC63c9B83CB83f40325AaB74b245937cbdF0"
        },
        {
          "permission": "upgrade",
          "from": "0x5a7749f83b81B301cAb5f48EB8516B986DAef23D"
        },
        {
          "permission": "upgrade",
          "from": "0x75505a97BD334E7BD3C476893285569C4136Fa0F"
        },
        {
          "permission": "upgrade",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C"
        },
        {
          "permission": "upgrade",
          "from": "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1",
          "description": "upgrading the bridge implementation can give access to all funds escrowed therein."
        },
        {
          "permission": "upgrade",
          "from": "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed"
        },
        {
          "permission": "upgrade",
          "from": "0xe5965Ab5962eDc7477C8520243A95517CD252fA9"
        }
      ],
      "sinceTimestamp": 1685377355,
      "sinceBlock": 17365800,
      "values": {
        "$immutable": true,
        "addressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "isUpgrading": false,
        "owner": "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A"
      },
      "implementationNames": {
        "0x543bA4AADBAb8f9025686Bd03993043599c6fB04": "ProxyAdmin"
      }
    },
    {
      "name": "SuperchainProxyAdminOwner",
      "address": "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x21429aF66058BC3e4aE4a8f2EC4531AaC433ecbC",
          "description": "can pull funds from the contract in case of emergency."
        },
        {
          "permission": "interact",
          "from": "0x323dFC63c9B83CB83f40325AaB74b245937cbdF0",
          "description": "can pull funds from the contract in case of emergency."
        },
        {
          "permission": "interact",
          "from": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
          "description": "set and change address mappings.",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0x1c68ECfbf9C8B1E6C0677965b3B9Ecf9A104305b",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0x21429aF66058BC3e4aE4a8f2EC4531AaC433ecbC",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0x229047fed2591dbec1eF1118d64F7aF3dB9EB290",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0x323dFC63c9B83CB83f40325AaB74b245937cbdF0",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0x5a7749f83b81B301cAb5f48EB8516B986DAef23D",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0x75505a97BD334E7BD3C476893285569C4136Fa0F",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1",
          "description": "upgrading the bridge implementation can give access to all funds escrowed therein.",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        },
        {
          "permission": "upgrade",
          "from": "0xe5965Ab5962eDc7477C8520243A95517CD252fA9",
          "via": [{ "address": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1707420875,
      "sinceBlock": 19185554,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x847B5c174615B1B7fDF770882256e2D3E95b9D92",
          "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03"
        ],
        "$threshold": 2,
        "domainSeparator": "0xdaf670b31fdf41fdaae2643ed0ebe709283539c0e61540c160b5a6403d79073f",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 2 (100%)",
        "nonce": 15,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "L1ERC721Bridge",
      "address": "0x5a7749f83b81B301cAb5f48EB8516B986DAef23D",
      "type": "Contract",
      "template": "opstack/L1ERC721Bridge",
      "sourceHashes": [
        "0x0a47b6d41e108156a5ce873322c843aad6040edbe7cf3d7e3473abb4d01e7e44",
        "0x28669b49da3effd51f0f9424ca9cdd455c5b9327c09a40c65fc06f114a6eb837"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Used to bridge ERC-721 tokens from host chain to this chain.",
      "sinceTimestamp": 1664918591,
      "sinceBlock": 15677422,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0x7aE1d3BD877a4C5CA257404ce26BE93A02C98013",
        "$pastUpgrades": [
          [
            "2022-10-04T22:08:59.000Z",
            "0xe8f632050cdf538eebcc5ab4a0ecb426966acfd14118e4fb8b181948449ae70d",
            ["0x3268Ed09f76e619331528270B6267D4d2C5Ab5C2"]
          ],
          [
            "2023-06-06T18:24:11.000Z",
            "0xe2ff41f9bdf03d5455f55539b8b9c350276a179ca7f79322e2077d7c1ffb1268",
            ["0x3268Ed09f76e619331528270B6267D4d2C5Ab5C2"]
          ],
          [
            "2024-02-26T21:44:11.000Z",
            "0x3f7c36a1d636cdb23bf4f9171c27ebe58b73f4c0e6a33dbaac2c2f3c142faf50",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-02-26T21:44:11.000Z",
            "0x3f7c36a1d636cdb23bf4f9171c27ebe58b73f4c0e6a33dbaac2c2f3c142faf50",
            ["0xc599Fa757c2bCaA5aE3753Ab129237F38C10da0b"]
          ],
          [
            "2024-04-11T20:49:59.000Z",
            "0x4758bd62359bc69d7e8a0faaf5308d826379c23258d689a7430d5c0ad0361ad2",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-04-11T20:49:59.000Z",
            "0x4758bd62359bc69d7e8a0faaf5308d826379c23258d689a7430d5c0ad0361ad2",
            ["0xAE2AF01232a6c4a4d3012C5eC5b1b35059caF10d"]
          ],
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x276d3730f219f7ec22274f7263180b8452B46d47"]
          ],
          [
            "2025-04-24T16:16:23.000Z",
            "0xbe44244e352a9ffa67ad7f7133e9ed014b380e4b1bd789419e6d33aaad780d12",
            ["0x7aE1d3BD877a4C5CA257404ce26BE93A02C98013"]
          ]
        ],
        "$upgradeCount": 8,
        "messenger": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
        "MESSENGER": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
        "OTHER_BRIDGE": "oeth:0x4200000000000000000000000000000000000014",
        "otherBridge": "oeth:0x4200000000000000000000000000000000000014",
        "paused": false,
        "superchainConfig": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "version": "2.4.0"
      },
      "implementationNames": {
        "0x5a7749f83b81B301cAb5f48EB8516B986DAef23D": "Proxy",
        "0x7aE1d3BD877a4C5CA257404ce26BE93A02C98013": "L1ERC721Bridge"
      },
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "oeth" } }
      ],
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "name": "SynthetixBridgeEscrow",
      "address": "0x5Fd79D46EBA7F351fe49BFF9E87cdeA6c821eF9f",
      "type": "Contract",
      "sourceHashes": [
        "0x9fdc8650f5cfe4f5ce38accccf178614c6a57917867d6ee7fcc9c5a690ade600"
      ],
      "proxyType": "immutable",
      "description": "Custom escrow for SNX bridged via canonical messaging.",
      "sinceTimestamp": 1620680982,
      "sinceBlock": 12409015,
      "values": {
        "$immutable": true,
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "owner": "0xEb3107117FEAd7de89Cd14D463D340A2E6917769"
      },
      "implementationNames": {
        "0x5Fd79D46EBA7F351fe49BFF9E87cdeA6c821eF9f": "SynthetixBridgeEscrow"
      }
    },
    {
      "address": "0x6323ef2b80030f3fBc508bFc321Fc71fDB95c865",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x652BC529E171847E2fFddCeA13567643C84ccB5f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x6887246668a3b87F54DeB3b94Ba47a6f63F32985",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "sequence",
          "from": "0x229047fed2591dbec1eF1118d64F7aF3dB9EB290"
        }
      ]
    },
    {
      "name": "OptimismMintableERC20Factory",
      "address": "0x75505a97BD334E7BD3C476893285569C4136Fa0F",
      "type": "Contract",
      "template": "opstack/OptimismMintableERC20Factory",
      "sourceHashes": [
        "0x2cdcfef705094aaac53d507bad64d27b48ea5a9c11a7fadffacc192aab7a823f",
        "0x9650b4bba6299e410f01a369a95a2c57e1c3ca35f0d80c13f4f59fc468f370e5"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "A helper contract that generates OptimismMintableERC20 contracts on the network it's deployed to. OptimismMintableERC20 is a standard extension of the base ERC20 token contract designed to allow the L1StandardBridge contracts to mint and burn tokens. This makes it possible to use an OptimismMintablERC20 as this chain's representation of a token on the host chain, or vice-versa.",
      "sinceTimestamp": 1685377391,
      "sinceBlock": 17365803,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0x5493f4677A186f64805fe7317D6993ba4863988F",
        "$pastUpgrades": [
          [
            "2023-06-06T18:24:11.000Z",
            "0xe2ff41f9bdf03d5455f55539b8b9c350276a179ca7f79322e2077d7c1ffb1268",
            ["0xaE849EFA4BcFc419593420e14707996936E365E2"]
          ],
          [
            "2024-02-26T21:44:11.000Z",
            "0x3f7c36a1d636cdb23bf4f9171c27ebe58b73f4c0e6a33dbaac2c2f3c142faf50",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-02-26T21:44:11.000Z",
            "0x3f7c36a1d636cdb23bf4f9171c27ebe58b73f4c0e6a33dbaac2c2f3c142faf50",
            ["0x74e273220Fa1cB62Fd756FE6CbDA8BBb89404deD"]
          ],
          [
            "2024-04-11T20:49:59.000Z",
            "0x4758bd62359bc69d7e8a0faaf5308d826379c23258d689a7430d5c0ad0361ad2",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-04-11T20:49:59.000Z",
            "0x4758bd62359bc69d7e8a0faaf5308d826379c23258d689a7430d5c0ad0361ad2",
            ["0xE01efbeb1089D1d1dB9c6c8b135C934C0734c846"]
          ],
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x5493f4677A186f64805fe7317D6993ba4863988F"]
          ]
        ],
        "$upgradeCount": 6,
        "bridge": "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1",
        "BRIDGE": "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1",
        "version": "1.10.1"
      },
      "implementationNames": {
        "0x75505a97BD334E7BD3C476893285569C4136Fa0F": "Proxy",
        "0x5493f4677A186f64805fe7317D6993ba4863988F": "OptimismMintableERC20Factory"
      }
    },
    {
      "name": "wstETHEscrow",
      "address": "0x76943C0D61395d8F2edF9060e1533529cAe05dE6",
      "type": "Contract",
      "template": "lido/L1LidoTokensBridge",
      "sourceHashes": [
        "0x698ae88793265d087e07a445b69bf16b450cdcf636b9073b86221936e912a135",
        "0xee07202651af1cf311f14f1f29908dd5524a050efc650832b6ee88c9a9cf86fd"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Lido custom escrow for wstETH tokens that uses the canonical bridge for messaging but is governed externally.",
      "sinceTimestamp": 1659687799,
      "sinceBlock": 15281202,
      "values": {
        "$admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "0x168Cfea1Ad879d7032B3936eF3b0E90790b6B6D4",
        "$pastUpgrades": [
          [
            "2022-08-05T08:23:19.000Z",
            "0x1bc90e7c6fe12e03691f7eccf025f3a244ea5a4888c7fb274f45f5e1004110ca",
            ["0x29C5c51A031165CE62F964966A6399b81165EFA4"]
          ],
          [
            "2024-10-11T16:21:11.000Z",
            "0xc7bc3019721ecf320698f2897b329d1930f64661100a5fa159181146088e03c2",
            ["0x168Cfea1Ad879d7032B3936eF3b0E90790b6B6D4"]
          ]
        ],
        "$upgradeCount": 2,
        "accesscontrol": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"]
          },
          "0x4b43b36766bde12c5e9cbbc37d15f8d1f769f08f54720ab370faeb4ce893753a": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"]
          },
          "0x63f736f21cb2943826cd50b191eb054ebbea670e4e962d0527611f830cd399d6": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
              "0x73b047fe6337183A454c5217241D780a932777bD"
            ]
          },
          "0x9ab8816a3dc0b3849ec1ac00483f6ec815b07eee2fd766a353311c823ad59d0d": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"]
          },
          "0x94a954c0bc99227eddbc0715a62a7e1056ed8784cd719c2303b685683908857c": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
              "0x73b047fe6337183A454c5217241D780a932777bD"
            ]
          }
        },
        "ACCOUNTING_ORACLE": "0x852deD011285fe67063a08005c71a85690503Cee",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSITS_DISABLER_ROLE": "0x63f736f21cb2943826cd50b191eb054ebbea670e4e962d0527611f830cd399d6",
        "DEPOSITS_ENABLER_ROLE": "0x4b43b36766bde12c5e9cbbc37d15f8d1f769f08f54720ab370faeb4ce893753a",
        "GENESIS_TIME": 1606824023,
        "getContractVersion": 2,
        "isDepositsEnabled": true,
        "isInitialized": true,
        "isWithdrawalsEnabled": true,
        "L1_TOKEN_NON_REBASABLE": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
        "L1_TOKEN_REBASABLE": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "L2_TOKEN_NON_REBASABLE": "0x1F32b1c2345538c0c6f582fCB022739c4A194Ebb",
        "L2_TOKEN_REBASABLE": "0x76A50b8c7349cCDDb7578c6627e79b5d99D24138",
        "l2TokenBridge": "0x8E01013243a96601a86eb3153F0d9Fa4fbFb6957",
        "MESSENGER": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0x168Cfea1Ad879d7032B3936eF3b0E90790b6B6D4",
        "proxy__getIsOssified": false,
        "SECONDS_PER_SLOT": 12,
        "TOKEN_RATE_DECIMALS": 27,
        "WITHDRAWALS_DISABLER_ROLE": "0x94a954c0bc99227eddbc0715a62a7e1056ed8784cd719c2303b685683908857c",
        "WITHDRAWALS_ENABLER_ROLE": "0x9ab8816a3dc0b3849ec1ac00483f6ec815b07eee2fd766a353311c823ad59d0d",
        "WSTETH": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
      },
      "implementationNames": {
        "0x76943C0D61395d8F2edF9060e1533529cAe05dE6": "OssifiableProxy",
        "0x168Cfea1Ad879d7032B3936eF3b0E90790b6B6D4": "L1LidoTokensBridge"
      }
    },
    {
      "address": "0x7cB07FE039a92B3D784f284D919503A381BEC54f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x7ed8d9Af9eaA194D1A75C67c1475579E42289E39",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OpFoundationUpgradeSafe",
      "address": "0x847B5c174615B1B7fDF770882256e2D3E95b9D92",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "guard",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "via": [
            { "address": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2" },
            { "address": "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03" },
            {
              "address": "0x0454092516c9A4d636d3CAfA1e82161376C8a748",
              "condition": "if the number of 0xc2819DC788505Aac350142A7A707BF9D03E3Bd03 members falls below 8."
            }
          ]
        },
        {
          "permission": "interact",
          "from": "0x229047fed2591dbec1eF1118d64F7aF3dB9EB290",
          "description": "it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system."
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x0454092516c9A4d636d3CAfA1e82161376C8a748",
          "description": "takes ownership of 0xc2819DC788505Aac350142A7A707BF9D03E3Bd03",
          "condition": "if the number of 0xc2819DC788505Aac350142A7A707BF9D03E3Bd03 members falls below 8."
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1707420755,
      "sinceBlock": 19185544,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64",
          "0x3041BA32f451F5850c147805F5521AC206421623",
          "0xE7dEA1306D9F829bA469d1904c50903b46ebd02e",
          "0xBF93D4d727F7Ba1F753E1124C3e532dCb04Ea2c8",
          "0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15",
          "0x7cB07FE039a92B3D784f284D919503A381BEC54f",
          "0x9bbFB9919062C29a5eE15aCD93c9D7c3b14d31aa"
        ],
        "$threshold": 5,
        "domainSeparator": "0xa4a9c312badf3fcaa05eafe5dc9bee8bd9316c78ee8b0bebe3115bb21b732672",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "5 of 7 (71%)",
        "nonce": 26,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x847B5c174615B1B7fDF770882256e2D3E95b9D92": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "FaultDisputeGame",
      "address": "0x89D68b1D63AAA0db4af1163e81f56B76934292F8",
      "type": "Contract",
      "template": "opstack/FaultDisputeGame",
      "sourceHashes": [
        "0xf5a782e7a87f4bc9ee32a988e6e97e11e371861c87f91e4563897a8e73c92b2e"
      ],
      "proxyType": "immutable",
      "description": "Logic of the dispute game. When a state root is proposed, a dispute game contract is deployed. Challengers can use such contracts to challenge the proposed state root.",
      "sinceTimestamp": 1746628403,
      "sinceBlock": 22432368,
      "values": {
        "$immutable": true,
        "absolutePrestate": "0x03682932cec7ce0a3874b19675a6bbc923054a7b321efc7d3835187b172494b6",
        "absolutePrestateDecoded": "v1.6.0 (cannon64)",
        "anchorStateRegistry": "0x1c68ECfbf9C8B1E6C0677965b3B9Ecf9A104305b",
        "bondDistributionMode": 0,
        "claimData": [],
        "claimDataLen": 0,
        "clockExtension": 10800,
        "createdAt": 0,
        "extraData": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "gameCreator": "0x0000000000000000000000000000000000000000",
        "gameData": {
          "gameType_": 0,
          "rootClaim_": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extraData_": "0x0000000000000000000000000000000000000000000000000000000000000000"
        },
        "gameType": 0,
        "getChallengerDuration": [],
        "l1Head": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "l2BlockNumber": 0,
        "l2BlockNumberChallenged": false,
        "l2BlockNumberChallenger": "0x0000000000000000000000000000000000000000",
        "l2ChainId": 10,
        "maxClockDuration": 302400,
        "maxGameDepth": 73,
        "resolvedAt": 0,
        "rootClaim": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "splitDepth": 30,
        "startingBlockNumber": 0,
        "startingOutputRoot": {
          "root": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "l2BlockNumber": 0
        },
        "startingRootHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "status": 0,
        "version": "1.4.1",
        "vm": "0xF027F4A985560fb13324e943edf55ad6F1d15Dc1",
        "wasRespectedGameTypeWhenCreated": false,
        "weth": "0x323dFC63c9B83CB83f40325AaB74b245937cbdF0"
      },
      "fieldMeta": {
        "absolutePrestateDecoded": {
          "description": "Prestate tag for known prestates."
        }
      },
      "implementationNames": {
        "0x89D68b1D63AAA0db4af1163e81f56B76934292F8": "FaultDisputeGame"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "0x03682932cec7ce0a3874b19675a6bbc923054a7b321efc7d3835187b172494b6": "v1.6.0 (cannon64)",
            "0x03ee2917da962ec266b091f4b62121dc9682bb0db534633707325339f99ee405": "v1.5.1-rc.1 (cannon64)",
            "0x0354eee87a1775d96afee8977ef6d5d6bd3612b256170952a01bf1051610ee01": "v1.5.1-rc.1",
            "0x039970872142f48b189d18dcbc03a3737338d098b0101713dc2d6710f9deb5ef": "v1.5.0 (cannon64)",
            "0x039facea52b20c605c05efb0a33560a92de7074218998f75bcdf61e8989cb5d9": "v1.5.0",
            "0x0386cde2f2b1bde1189ac9c9b7d66774e6260eca778223def326bfe680c14ab9": "v1.4.1-rc.2 (cannon64)",
            "0x03045fd433fb5391c40751939d7cb5e9dfe83cf156f9395566a311e7fe9d3aa2": "v1.4.1-rc.2",
            "0x03b7eaa4e3cbce90381921a4b48008f4769871d64f93d113fcadca08ecee503b": "v1.4.0 (cannon64)",
            "0x03f89406817db1ed7fd8b31e13300444652cdb0b9c509a674de43483b2f83568": "v1.4.0 (govApproved)",
            "0x0336751a224445089ba5456c8028376a0faf2bafa81d35f43fab8730258cdf37": "v1.4.0-unichain",
            "0x0348ce2059f718af75729c2c56860551b46b665956a641b3cb2cd51e50b7b725": "v1.4.0-rc.2 (cannon64)",
            "0x0364e4e72922e7d649338f558f8a14b50ca31922a1484e73ea03987fb1516095": "v1.4.0-rc.2",
            "0x032e5d6119ee983cb87deae3eef16ea6086f2347433c99f1820d60f36a24a6e6": "v1.4.0-rc.1 (cannon64)",
            "0x03925193e3e89f87835bbdf3a813f60b2aa818a36bbe71cd5d8fd7e79f5e8afe": "v1.4.0-rc.1",
            "0x03c50b9fd04bdadc228205f340767bbf2d01a030aec39903120d3559d94bb8cc": "v1.3.1-ink",
            "0x038512e02c4c3f7bdaec27d00edf55b7155e0905301e1a88083e4e0a6764d54c": "v1.3.1 (govApproved)",
            "0x03e806a2859a875267a563462a06d4d1d1b455a9efee959a46e21e54b6caf69a": "v1.3.1-rc.1",
            "0x030de10d9da911a2b180ecfae2aeaba8758961fc28262ce989458c6f9a547922": "v1.3.0-rc.3",
            "0x0385c3f8ee78491001d92b90b07d0cf387b7b52ab9b83b4d87c994e92cf823ba": "v1.3.0-rc.2",
            "0x0367c4aa897bffbded0b523f277ca892298dc3c691baf37bc2099b86024f9673": "v1.3.0-rc.1",
            "0x03617abec0b255dc7fc7a0513a2c2220140a1dcd7a1c8eca567659bd67e05cea": "v1.2.0 (govApproved)",
            "0x03e69d3de5155f4a80da99dd534561cbddd4f9dd56c9ecc704d6886625711d2b": "v1.1.0",
            "0x0398bdd93e2e9313befdf82beb709da6a4daf35ce1abb42d8a998ec9bc1c572e": "v1.0.1",
            "0x037ef3c1a487960b0e633d3e513df020c43432769f41a634d18a9595cbf53c55": "v1.0.0 (govApproved)",
            "0x034c8cc69f22c35ae386a97136715dd48aaf97fd190942a111bfa680c2f2f421": "v0.3.0",
            "0x031e3b504740d0b1264e8cf72b6dde0d497184cfb3f98e451c6be8b33bd3f808": "v0.2.0",
            "0x038942ec840131a63c49fa514a3f0577ae401fd5584d56ad50cdf5a8b41d4538": "v0.1.0",
            "0x03babef4b4c6d866d56e6356d961839fd9475931d11e0ea507420a87b0cadbdd": "v0.0.1"
          }
        }
      ]
    },
    {
      "address": "0x92827223f6b397CE9F208eE352bacA710765cACb",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SuperchainConfig",
      "address": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
      "type": "Contract",
      "template": "opstack/SuperchainConfig",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x03dba37173051b02bc81487e181c791bcf1aef664c249e5d035f11f488bdd686"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Used to manage global configuration values for multiple OP Chains within a single Superchain network. The SuperchainConfig contract manages the `PAUSED_SLOT`, a boolean value indicating whether the Superchain is paused, and `GUARDIAN_SLOT`, the address of the guardian which can pause and unpause the system.",
      "sinceTimestamp": 1705954799,
      "sinceBlock": 19064589,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0x4da82a327773965b8d4D85Fa3dB8249b387458E7",
        "$pastUpgrades": [
          [
            "2024-01-22T20:19:59.000Z",
            "0x8ba0e42b89cde22310b644ed30fd44e4a348619a165a54c908e7dc341e9bbd0c",
            ["0x53c165169401764778F780a69701385eb0FF19B7"]
          ],
          [
            "2024-06-10T18:29:23.000Z",
            "0xe361c0d4ae3aebc94b3f281ee372fbb1cbdb0c33ca8b1b35e7f3b009b2fcbdb0",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-06-10T18:29:23.000Z",
            "0xe361c0d4ae3aebc94b3f281ee372fbb1cbdb0c33ca8b1b35e7f3b009b2fcbdb0",
            ["0x53c165169401764778F780a69701385eb0FF19B7"]
          ],
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x4da82a327773965b8d4D85Fa3dB8249b387458E7"]
          ]
        ],
        "$upgradeCount": 4,
        "guardian": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2",
        "GUARDIAN_SLOT": "0xd30e835d3f35624761057ff5b27d558f97bd5be034621e62240e5c0b784abe68",
        "paused": false,
        "PAUSED_SLOT": "0x54176ff9944c4784e5857ec4e5ef560a462c483bf534eda43f91bb01a470b1b6",
        "version": "1.2.0"
      },
      "implementationNames": {
        "0x95703e0982140D16f8ebA6d158FccEde42f04a4C": "Proxy",
        "0x4da82a327773965b8d4D85Fa3dB8249b387458E7": "SuperchainConfig"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "name": "L1StandardBridge",
      "address": "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1",
      "type": "Contract",
      "template": "opstack/L1StandardBridge",
      "sourceHashes": [
        "0x18e98a64fbfe011a7514d7a547900c02a3e0f9a49ab3413d517fd7e0e3c539dd",
        "0x4e15d99844dc5a4304c2396a66c95ec41218ea311c8e524b118fad7beed0bb53"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main entry point to deposit ERC20 tokens from host chain to this chain.",
      "sinceTimestamp": 1624401464,
      "sinceBlock": 12686786,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "l2TokenBridge": "oeth:0x4200000000000000000000000000000000000010",
        "messenger": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
        "MESSENGER": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
        "OTHER_BRIDGE": "oeth:0x4200000000000000000000000000000000000010",
        "otherBridge": "oeth:0x4200000000000000000000000000000000000010",
        "paused": false,
        "superchainConfig": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "version": "2.3.0"
      },
      "implementationNames": {
        "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1": "L1ChugSplashProxy",
        "0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A": "L1StandardBridge"
      },
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "oeth" } }
      ],
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "name": "OpFoundationOperationsSafe",
      "address": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xd5a33441170541b7df25812e0e3dff6562b2f09ab835a6b431cb9e7198a47605",
        "0x263aadde480629cd3ca5704cc7d4e7df809d437e68f8d9864039801ddf820367"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "guard",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "via": [
            { "address": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2" },
            {
              "address": "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B",
              "condition": "if not revoked by the Security Council"
            }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B",
          "condition": "if not revoked by the Security Council"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1610850364,
      "sinceBlock": 11670007,
      "values": {
        "$immutable": false,
        "$implementation": "0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F",
        "$members": [
          "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64",
          "0x3041BA32f451F5850c147805F5521AC206421623",
          "0xE7dEA1306D9F829bA469d1904c50903b46ebd02e",
          "0xBF93D4d727F7Ba1F753E1124C3e532dCb04Ea2c8",
          "0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15",
          "0x7cB07FE039a92B3D784f284D919503A381BEC54f",
          "0x9bbFB9919062C29a5eE15aCD93c9D7c3b14d31aa"
        ],
        "$threshold": 5,
        "domainSeparator": "0x4e6a6554de0308f5ece8ff736beed8a1b876d16f5c27cac8e466d7de0c703890",
        "getModules": ["0x126a736B18E0a64fBA19D421647A530E327E112C"],
        "GnosisSafe_modules": ["0x126a736B18E0a64fBA19D421647A530E327E112C"],
        "multisigThreshold": "5 of 7 (71%)",
        "NAME": "Gnosis Safe",
        "nonce": 106,
        "VERSION": "1.1.1"
      },
      "implementationNames": {
        "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A": "Proxy",
        "0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F": "GnosisSafe"
      }
    },
    {
      "address": "0x9bbFB9919062C29a5eE15aCD93c9D7c3b14d31aa",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x9Eb11A55132c851b9991F148b3Af791ca498fD7A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "PermissionedDisputeGame",
      "address": "0xa1E0baCde89d899B3f24eEF3D179cC335A24E777",
      "type": "Contract",
      "template": "opstack/PermissionedDisputeGame",
      "sourceHashes": [
        "0x7129ee348039f13e017c18c90ffcb319f67a8fdd3b4a5a28c39aabc8bf0c57f6"
      ],
      "proxyType": "immutable",
      "description": "Same as FaultDisputeGame, but only two permissioned addresses are designated as proposer and challenger.",
      "sinceTimestamp": 1746628403,
      "sinceBlock": 22432368,
      "values": {
        "$immutable": true,
        "absolutePrestate": "0x03682932cec7ce0a3874b19675a6bbc923054a7b321efc7d3835187b172494b6",
        "absolutePrestateDecoded": "v1.6.0 (cannon64)",
        "anchorStateRegistry": "0x1c68ECfbf9C8B1E6C0677965b3B9Ecf9A104305b",
        "bondDistributionMode": 0,
        "challenger": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
        "claimData": [],
        "claimDataLen": 0,
        "clockExtension": 10800,
        "createdAt": 0,
        "extraData": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "gameCreator": "0x0000000000000000000000000000000000000000",
        "gameData": {
          "gameType_": 1,
          "rootClaim_": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extraData_": "0x0000000000000000000000000000000000000000000000000000000000000000"
        },
        "gameType": 1,
        "getChallengerDuration": [],
        "l1Head": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "l2BlockNumber": 0,
        "l2BlockNumberChallenged": false,
        "l2BlockNumberChallenger": "0x0000000000000000000000000000000000000000",
        "l2ChainId": 10,
        "maxClockDuration": 302400,
        "maxGameDepth": 73,
        "proposer": "0x473300df21D047806A082244b417f96b32f13A33",
        "resolvedAt": 0,
        "rootClaim": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "splitDepth": 30,
        "startingBlockNumber": 0,
        "startingOutputRoot": {
          "root": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "l2BlockNumber": 0
        },
        "startingRootHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "status": 0,
        "version": "1.4.1",
        "vm": "0xF027F4A985560fb13324e943edf55ad6F1d15Dc1",
        "wasRespectedGameTypeWhenCreated": false,
        "weth": "0x21429aF66058BC3e4aE4a8f2EC4531AaC433ecbC"
      },
      "fieldMeta": {
        "absolutePrestateDecoded": {
          "description": "Prestate tag for known prestates."
        }
      },
      "implementationNames": {
        "0xa1E0baCde89d899B3f24eEF3D179cC335A24E777": "PermissionedDisputeGame"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "0x03682932cec7ce0a3874b19675a6bbc923054a7b321efc7d3835187b172494b6": "v1.6.0 (cannon64)",
            "0x03ee2917da962ec266b091f4b62121dc9682bb0db534633707325339f99ee405": "v1.5.1-rc.1 (cannon64)",
            "0x0354eee87a1775d96afee8977ef6d5d6bd3612b256170952a01bf1051610ee01": "v1.5.1-rc.1",
            "0x039970872142f48b189d18dcbc03a3737338d098b0101713dc2d6710f9deb5ef": "v1.5.0 (cannon64)",
            "0x039facea52b20c605c05efb0a33560a92de7074218998f75bcdf61e8989cb5d9": "v1.5.0",
            "0x0386cde2f2b1bde1189ac9c9b7d66774e6260eca778223def326bfe680c14ab9": "v1.4.1-rc.2 (cannon64)",
            "0x03045fd433fb5391c40751939d7cb5e9dfe83cf156f9395566a311e7fe9d3aa2": "v1.4.1-rc.2",
            "0x03b7eaa4e3cbce90381921a4b48008f4769871d64f93d113fcadca08ecee503b": "v1.4.0 (cannon64)",
            "0x03f89406817db1ed7fd8b31e13300444652cdb0b9c509a674de43483b2f83568": "v1.4.0 (govApproved)",
            "0x0336751a224445089ba5456c8028376a0faf2bafa81d35f43fab8730258cdf37": "v1.4.0-unichain",
            "0x0348ce2059f718af75729c2c56860551b46b665956a641b3cb2cd51e50b7b725": "v1.4.0-rc.2 (cannon64)",
            "0x0364e4e72922e7d649338f558f8a14b50ca31922a1484e73ea03987fb1516095": "v1.4.0-rc.2",
            "0x032e5d6119ee983cb87deae3eef16ea6086f2347433c99f1820d60f36a24a6e6": "v1.4.0-rc.1 (cannon64)",
            "0x03925193e3e89f87835bbdf3a813f60b2aa818a36bbe71cd5d8fd7e79f5e8afe": "v1.4.0-rc.1",
            "0x03c50b9fd04bdadc228205f340767bbf2d01a030aec39903120d3559d94bb8cc": "v1.3.1-ink",
            "0x038512e02c4c3f7bdaec27d00edf55b7155e0905301e1a88083e4e0a6764d54c": "v1.3.1 (govApproved)",
            "0x03e806a2859a875267a563462a06d4d1d1b455a9efee959a46e21e54b6caf69a": "v1.3.1-rc.1",
            "0x030de10d9da911a2b180ecfae2aeaba8758961fc28262ce989458c6f9a547922": "v1.3.0-rc.3",
            "0x0385c3f8ee78491001d92b90b07d0cf387b7b52ab9b83b4d87c994e92cf823ba": "v1.3.0-rc.2",
            "0x0367c4aa897bffbded0b523f277ca892298dc3c691baf37bc2099b86024f9673": "v1.3.0-rc.1",
            "0x03617abec0b255dc7fc7a0513a2c2220140a1dcd7a1c8eca567659bd67e05cea": "v1.2.0 (govApproved)",
            "0x03e69d3de5155f4a80da99dd534561cbddd4f9dd56c9ecc704d6886625711d2b": "v1.1.0",
            "0x0398bdd93e2e9313befdf82beb709da6a4daf35ce1abb42d8a998ec9bc1c572e": "v1.0.1",
            "0x037ef3c1a487960b0e633d3e513df020c43432769f41a634d18a9595cbf53c55": "v1.0.0 (govApproved)",
            "0x034c8cc69f22c35ae386a97136715dd48aaf97fd190942a111bfa680c2f2f421": "v0.3.0",
            "0x031e3b504740d0b1264e8cf72b6dde0d497184cfb3f98e451c6be8b33bd3f808": "v0.2.0",
            "0x038942ec840131a63c49fa514a3f0577ae401fd5584d56ad50cdf5a8b41d4538": "v0.1.0",
            "0x03babef4b4c6d866d56e6356d961839fd9475931d11e0ea507420a87b0cadbdd": "v0.0.1"
          }
        }
      ]
    },
    {
      "name": "FeesCollector",
      "address": "0xa3d596EAfaB6B13Ab18D40FaE1A962700C84ADEa",
      "type": "Contract",
      "sourceHashes": [
        "0xa58ba822ad1db27a90c11078dd6ececa7d90a2f12794716b21e0ffaa038ff101"
      ],
      "proxyType": "immutable",
      "description": "Collecting sequencer, base- and L1 fees from L2.",
      "ignoreInWatchMode": ["getNextSequenceId"],
      "sinceTimestamp": 1672938575,
      "sinceBlock": 16341988,
      "values": {
        "$immutable": true,
        "getNextSequenceId": 125,
        "initialized": true,
        "safeMode": false
      },
      "implementationNames": {
        "0xa3d596EAfaB6B13Ab18D40FaE1A962700C84ADEa": "WalletSimple"
      }
    },
    {
      "address": "0xAAAA45d9549EDA09E70937013520214382Ffc4A2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xb23794fd6BA1CEAd01Cf54D772b8341F2F0197A5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OptimismPortal2",
      "address": "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed",
      "type": "Contract",
      "template": "opstack/OptimismPortal2",
      "sourceHashes": [
        "0x2cdcfef705094aaac53d507bad64d27b48ea5a9c11a7fadffacc192aab7a823f",
        "0xc483ef9e0a5ec2a0450732e743b3784de0cd3876b8fadfce14c0805a0846d26b"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The OptimismPortal contract is the main entry point to deposit funds from L1 to L2. It also allows to prove and finalize withdrawals. It specifies which game type can be used for withdrawals, which currently is the FaultDisputeGame.",
      "ignoreInWatchMode": ["params", "balance"],
      "sinceTimestamp": 1685377379,
      "sinceBlock": 17365802,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0xB443Da3e07052204A02d630a8933dAc05a0d6fB4",
        "$pastUpgrades": [
          [
            "2023-06-06T18:24:11.000Z",
            "0xe2ff41f9bdf03d5455f55539b8b9c350276a179ca7f79322e2077d7c1ffb1268",
            ["0x28a55488fef40005309e2DA0040DbE9D300a64AB"]
          ],
          [
            "2024-02-26T21:44:11.000Z",
            "0x3f7c36a1d636cdb23bf4f9171c27ebe58b73f4c0e6a33dbaac2c2f3c142faf50",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-02-26T21:44:11.000Z",
            "0x3f7c36a1d636cdb23bf4f9171c27ebe58b73f4c0e6a33dbaac2c2f3c142faf50",
            ["0xaBAbe63514dDd6277356F8cc3d6518aA8BDEB4de"]
          ],
          [
            "2024-04-11T20:49:59.000Z",
            "0x4758bd62359bc69d7e8a0faaf5308d826379c23258d689a7430d5c0ad0361ad2",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-04-11T20:49:59.000Z",
            "0x4758bd62359bc69d7e8a0faaf5308d826379c23258d689a7430d5c0ad0361ad2",
            ["0x2D778797049FE9259d947D1ED8e5442226dFB589"]
          ],
          [
            "2024-06-10T16:42:59.000Z",
            "0xbe810ed6e1e827930bd46cde42c4883662ddb6d244a26af2f0409cc2782bee61",
            ["0xd81f43eDBCAcb4c29a9bA38a13Ee5d79278270cC"]
          ],
          [
            "2024-06-10T16:42:59.000Z",
            "0xbe810ed6e1e827930bd46cde42c4883662ddb6d244a26af2f0409cc2782bee61",
            ["0xe2F826324b2faf99E513D16D266c3F80aE87832B"]
          ],
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x2D7e764a0D9919e16983a46595CfA81fc34fa7Cd"]
          ],
          [
            "2025-04-24T16:16:23.000Z",
            "0xbe44244e352a9ffa67ad7f7133e9ed014b380e4b1bd789419e6d33aaad780d12",
            ["0xB443Da3e07052204A02d630a8933dAc05a0d6fB4"]
          ]
        ],
        "$upgradeCount": 9,
        "disputeGameFactory": "0xe5965Ab5962eDc7477C8520243A95517CD252fA9",
        "disputeGameFinalityDelaySeconds": 302400,
        "guardian": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2",
        "l2Sender": "0x000000000000000000000000000000000000dEaD",
        "params": {
          "prevBaseFee": 1000000000,
          "prevBoughtGas": 463628,
          "prevBlockNum": 22437696
        },
        "paused": false,
        "proofMaturityDelaySeconds": 604800,
        "RespectedGameString": "FaultDisputeGame",
        "respectedGameType": 0,
        "respectedGameTypeUpdatedAt": 1726070915,
        "superchainConfig": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "systemConfig": "0x229047fed2591dbec1eF1118d64F7aF3dB9EB290",
        "version": "3.14.0"
      },
      "fieldMeta": {
        "paused": {
          "severity": "HIGH",
          "description": "Whether the contract is paused or not. Determined by the SuperchainConfig contract PAUSED_SLOT. Here it pauses withdrawals. If this is paused, also the L1CrossDomainMessenger and ERC-20, ERC-721 deposits are paused."
        }
      },
      "implementationNames": {
        "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed": "Proxy",
        "0xB443Da3e07052204A02d630a8933dAc05a0d6fB4": "OptimismPortal2"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": { "0": "FaultDisputeGame", "1": "PermissionedDisputeGame" }
        }
      ],
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "address": "0xBF93D4d727F7Ba1F753E1124C3e532dCb04Ea2c8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xbfA046B0bc5cEa1596be62B8b3f79f9f41f1E0d9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Optimism Security Council",
      "address": "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "guard",
          "from": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
          "via": [{ "address": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2" }]
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1707420419,
      "sinceBlock": 19185517,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x07dC0893cAfbF810e3E72505041f2865726Fd073",
          "0x652BC529E171847E2fFddCeA13567643C84ccB5f",
          "0x1822b35B09f5ce1C78ecbC06AC0A4e17885b925e",
          "0x4A7322258c9E690e4CB8Cea6e5251443E956e61E",
          "0x51aCb8e1205De850D1b512584FeE9C29C3813dDa",
          "0xEF9A98511939eEe6Ec69af62082E3F2ff606877c",
          "0x6323ef2b80030f3fBc508bFc321Fc71fDB95c865",
          "0xd5b735b676A043a53946C3b6F6BE28c1ECE6aC90",
          "0x7ed8d9Af9eaA194D1A75C67c1475579E42289E39",
          "0x0aA384EB2fedD2741277A0f72909A0d7275575D7",
          "0x9Eb11A55132c851b9991F148b3Af791ca498fD7A",
          "0xbfA046B0bc5cEa1596be62B8b3f79f9f41f1E0d9",
          "0x92827223f6b397CE9F208eE352bacA710765cACb"
        ],
        "$threshold": 10,
        "domainSeparator": "0xdf53d510b56e539b90b369ef08fce3631020fbf921e3136ea5f8747c20bce967",
        "getChainId": 1,
        "GnosisSafe_modules": ["0x0454092516c9A4d636d3CAfA1e82161376C8a748"],
        "isL2beatStillAnOwner": true,
        "multisigThreshold": "10 of 13 (77%)",
        "nonce": 27,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "references": [
        {
          "text": "Security Council members - Optimism Collective Governance Forum",
          "href": "https://gov.optimism.io/t/security-council-vote-2-initial-member-ratification/7118"
        }
      ]
    },
    {
      "name": "DeputyGuardianModule",
      "address": "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B",
      "type": "Contract",
      "template": "gnosisSafeModules/DeputyGuardianModule",
      "sourceHashes": [
        "0x9624d67fb3738cf1ce1e1f48e2cf433e9373345386943d12f1d751d6b8475cd6"
      ],
      "proxyType": "immutable",
      "description": "allows the 0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A, called the deputy guardian, to act on behalf of the Gnosis Safe.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2"
        }
      ],
      "sinceTimestamp": 1724111315,
      "sinceBlock": 20566057,
      "values": {
        "$immutable": true,
        "deputyGuardian": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
        "safe": "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2",
        "superchainConfig": "0x95703e0982140D16f8ebA6d158FccEde42f04a4C",
        "version": "2.0.0"
      },
      "implementationNames": {
        "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B": "DeputyGuardianModule"
      }
    },
    {
      "address": "0xd5b735b676A043a53946C3b6F6BE28c1ECE6aC90",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "AddressManager",
      "address": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
      "type": "Contract",
      "template": "opstack/AddressManager",
      "sourceHashes": [
        "0xe5211497d15a7ea75577cf992ab6093dd0f6083f45c955f0136737810e44c205"
      ],
      "proxyType": "immutable",
      "description": "Legacy contract used to manage a mapping of string names to addresses. Modern OP stack uses a different standard proxy system instead, but this contract is still necessary for backwards compatibility with several older contracts.",
      "sinceTimestamp": 1624400033,
      "sinceBlock": 12686687,
      "values": {
        "$immutable": true,
        "owner": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "Proxy__OVM_L1CrossDomainMessenger": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
        "Proxy__OVM_L1StandardBridge": "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1"
      },
      "implementationNames": {
        "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F": "Lib_AddressManager"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "DisputeGameFactory",
      "address": "0xe5965Ab5962eDc7477C8520243A95517CD252fA9",
      "type": "Contract",
      "template": "opstack/DisputeGameFactory",
      "sourceHashes": [
        "0x7913a1d7d0c47796c94eb6f8fd87a89ae9f2716eda57c9be4fd2b27c70bed617",
        "0x85ca17941ef36ac6b28a4f8f89803d0d41ef419c47586dcd3acdb47ee9617285"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The dispute game factory allows the creation of dispute games, used to propose state roots and eventually challenge them.",
      "ignoreInWatchMode": ["gameCount"],
      "sinceTimestamp": 1715887043,
      "sinceBlock": 19884569,
      "values": {
        "$admin": "0x543bA4AADBAb8f9025686Bd03993043599c6fB04",
        "$implementation": "0x4bbA758F006Ef09402eF31724203F316ab74e4a0",
        "$pastUpgrades": [
          [
            "2024-05-16T19:17:35.000Z",
            "0x2c16c813ff50e9e09a3c58508a9b90293c896f1f91534d09a5002f50bc8760ff",
            ["0xc641A33cab81C559F2bd4b21EA34C290E2440C2B"]
          ],
          [
            "2025-04-02T16:50:23.000Z",
            "0x5f3530e593bbac37c61dc5b7755b6a40c06c20c1a3a1b13fca5b7d00cde65c29",
            ["0x4bbA758F006Ef09402eF31724203F316ab74e4a0"]
          ]
        ],
        "$upgradeCount": 2,
        "gameCount": 7968,
        "gameImpls": [
          "0x89D68b1D63AAA0db4af1163e81f56B76934292F8",
          "0xa1E0baCde89d899B3f24eEF3D179cC335A24E777",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000"
        ],
        "initBonds": ["80000000000000000", "80000000000000000", 0, 0, 0],
        "owner": "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A",
        "permissionedGamesTotal": 617,
        "version": "1.0.1"
      },
      "implementationNames": {
        "0xe5965Ab5962eDc7477C8520243A95517CD252fA9": "Proxy",
        "0x4bbA758F006Ef09402eF31724203F316ab74e4a0": "DisputeGameFactory"
      },
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "address": "0xE7dEA1306D9F829bA469d1904c50903b46ebd02e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xEF9A98511939eEe6Ec69af62082E3F2ff606877c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "MIPS",
      "address": "0xF027F4A985560fb13324e943edf55ad6F1d15Dc1",
      "type": "Contract",
      "template": "opstack/MIPS",
      "sourceHashes": [
        "0x115725ab57eeed11f754138c0ec5f9bfba41e494b2336c2cd4745778eb26f776"
      ],
      "proxyType": "immutable",
      "description": "The MIPS contract is used to execute the final step of the dispute game which objectively determines the winner of the dispute.",
      "sinceTimestamp": 1741217219,
      "sinceBlock": 21983963,
      "values": {
        "$immutable": true,
        "oracle": "0x1fb8cdFc6831fc866Ed9C51aF8817Da5c287aDD3",
        "version": "1.0.0"
      },
      "implementationNames": {
        "0xF027F4A985560fb13324e943edf55ad6F1d15Dc1": "MIPS64"
      }
    },
    {
      "address": "0xFF00000000000000000000000000000000000010",
      "type": "EOA",
      "proxyType": "EOA"
    }
  ],
  "abis": {
    "0x0454092516c9A4d636d3CAfA1e82161376C8a748": [
      "constructor(address _safe, address _livenessGuard, uint256 _livenessInterval, uint256 _minOwners, uint256 _thresholdPercentage, address _fallbackOwner)",
      "error OwnerRemovalFailed(string)",
      "event OwnershipTransferredToFallback()",
      "event RemovedOwner(address indexed owner)",
      "function canRemove(address _owner) view returns (bool canRemove_)",
      "function fallbackOwner() view returns (address fallbackOwner_)",
      "function getRequiredThreshold(uint256 _numOwners) view returns (uint256 threshold_)",
      "function livenessGuard() view returns (address livenessGuard_)",
      "function livenessInterval() view returns (uint256 livenessInterval_)",
      "function minOwners() view returns (uint256 minOwners_)",
      "function ownershipTransferredToFallback() view returns (bool)",
      "function removeOwners(address[] _previousOwners, address[] _ownersToRemove)",
      "function safe() view returns (address safe_)",
      "function thresholdPercentage() view returns (uint256 thresholdPercentage_)",
      "function version() view returns (string)"
    ],
    "0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2": [
      "constructor(address _singleton)"
    ],
    "0x0b09ba359A106C9ea3b181CBc5F394570c7d2a7A": [
      "constructor()",
      "event ERC20BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20DepositInitiated(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20WithdrawalFinalized(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ETHBridgeFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHBridgeInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHDepositInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHWithdrawalFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event Initialized(uint8 version)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC20(address _localToken, address _remoteToken, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC20To(address _localToken, address _remoteToken, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function depositETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function deposits(address, address) view returns (uint256)",
      "function finalizeBridgeERC20(address _localToken, address _remoteToken, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeBridgeETH(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeETHWithdrawal(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function initialize(address _messenger, address _superchainConfig)",
      "function l2TokenBridge() view returns (address)",
      "function messenger() view returns (address)",
      "function otherBridge() view returns (address)",
      "function paused() view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x10E6593CDda8c58a1d0f14C5164B376352a55f2F": [
      "constructor(address _l1Token, address _l2DAITokenBridge, address _l2Token, address _l1messenger, address _escrow)",
      "event Closed()",
      "event Deny(address indexed usr)",
      "event ERC20DepositInitiated(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event ERC20WithdrawalFinalized(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event Rely(address indexed usr)",
      "function close()",
      "function deny(address usr)",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _l2Gas, bytes _data)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _l2Gas, bytes _data)",
      "function escrow() view returns (address)",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data)",
      "function isOpen() view returns (uint256)",
      "function l1Token() view returns (address)",
      "function l2DAITokenBridge() view returns (address)",
      "function l2Token() view returns (address)",
      "function messenger() view returns (address)",
      "function rely(address usr)",
      "function wards(address) view returns (uint256)"
    ],
    "0x126a736B18E0a64fBA19D421647A530E327E112C": [
      "constructor(address _foundationSafe, address _deputyGuardianModule, address _superchainConfig, address _deputy, bytes _deputySignature)",
      "error DeputyPauseModule_ExecutionFailed(string)",
      "error DeputyPauseModule_InvalidDeputy()",
      "error DeputyPauseModule_InvalidDeputyGuardianModule()",
      "error DeputyPauseModule_NonceAlreadyUsed()",
      "error DeputyPauseModule_NotFromSafe()",
      "error DeputyPauseModule_SuperchainNotPaused()",
      "error DeputyPauseModule_Unauthorized()",
      "error ECDSAInvalidSignature()",
      "error ECDSAInvalidSignatureLength(uint256 length)",
      "error ECDSAInvalidSignatureS(bytes32 s)",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "event DeputyGuardianModuleSet(address indexed deputyGuardianModule)",
      "event DeputySet(address indexed deputy)",
      "event EIP712DomainChanged()",
      "event PauseTriggered(address indexed deputy, bytes32 nonce)",
      "function deputy() view returns (address)",
      "function deputyAuthMessageTypehash() pure returns (bytes32 deputyAuthMessageTypehash_)",
      "function deputyGuardianModule() view returns (address)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function foundationSafe() view returns (address foundationSafe_)",
      "function pause(bytes32 _nonce, bytes _signature)",
      "function pauseMessageTypehash() pure returns (bytes32 pauseMessageTypehash_)",
      "function setDeputy(address _deputy, bytes _deputySignature)",
      "function setDeputyGuardianModule(address _deputyGuardianModule)",
      "function superchainConfig() view returns (address superchainConfig_)",
      "function usedNonces(bytes32) view returns (bool)",
      "function version() view returns (string)"
    ],
    "0x168Cfea1Ad879d7032B3936eF3b0E90790b6B6D4": [
      "constructor(address messenger_, address l2TokenBridge_, address l1TokenNonRebasable_, address l1TokenRebasable_, address l2TokenNonRebasable_, address l2TokenRebasable_, address accountingOracle_)",
      "error ErrorAccountIsZeroAddress()",
      "error ErrorAlreadyInitialized()",
      "error ErrorBridgingManagerIsNotInitialized()",
      "error ErrorDepositsDisabled()",
      "error ErrorDepositsEnabled()",
      "error ErrorSenderNotEOA()",
      "error ErrorUnauthorizedMessenger()",
      "error ErrorUnsupportedL1L2TokensPair(address l1Token, address l2Token)",
      "error ErrorUnsupportedL2Token(address l2Token)",
      "error ErrorWithdrawalsDisabled()",
      "error ErrorWithdrawalsEnabled()",
      "error ErrorWrongCrossDomainSender()",
      "error ErrorZeroAddressAccountingOracle()",
      "error ErrorZeroAddressAdmin()",
      "error ErrorZeroAddressL1TokenNonRebasable()",
      "error ErrorZeroAddressL1TokenRebasable()",
      "error ErrorZeroAddressL2Bridge()",
      "error ErrorZeroAddressL2TokenNonRebasable()",
      "error ErrorZeroAddressL2TokenRebasable()",
      "error ErrorZeroAddressMessenger()",
      "error ErrorZeroAddressWstETH()",
      "error InvalidContractVersionIncrement()",
      "error NonZeroContractVersionOnInit()",
      "error UnexpectedContractVersion(uint256 expected, uint256 received)",
      "event ContractVersionSet(uint256 version)",
      "event DepositsDisabled(address indexed disabler)",
      "event DepositsEnabled(address indexed enabler)",
      "event ERC20DepositInitiated(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event ERC20WithdrawalFinalized(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event Initialized(address indexed admin)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event WithdrawalsDisabled(address indexed disabler)",
      "event WithdrawalsEnabled(address indexed enabler)",
      "function ACCOUNTING_ORACLE() view returns (address)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSITS_DISABLER_ROLE() view returns (bytes32)",
      "function DEPOSITS_ENABLER_ROLE() view returns (bytes32)",
      "function GENESIS_TIME() view returns (uint256)",
      "function L1_TOKEN_NON_REBASABLE() view returns (address)",
      "function L1_TOKEN_REBASABLE() view returns (address)",
      "function L2_TOKEN_NON_REBASABLE() view returns (address)",
      "function L2_TOKEN_REBASABLE() view returns (address)",
      "function MESSENGER() view returns (address)",
      "function SECONDS_PER_SLOT() view returns (uint256)",
      "function TOKEN_RATE_DECIMALS() view returns (uint256)",
      "function WITHDRAWALS_DISABLER_ROLE() view returns (bytes32)",
      "function WITHDRAWALS_ENABLER_ROLE() view returns (bytes32)",
      "function WSTETH() view returns (address)",
      "function depositERC20(address l1Token_, address l2Token_, uint256 amount_, uint32 l2Gas_, bytes data_)",
      "function depositERC20To(address l1Token_, address l2Token_, address to_, uint256 amount_, uint32 l2Gas_, bytes data_)",
      "function disableDeposits()",
      "function disableWithdrawals()",
      "function enableDeposits()",
      "function enableWithdrawals()",
      "function finalizeERC20Withdrawal(address l1Token_, address l2Token_, address from_, address to_, uint256 amount_, bytes data_)",
      "function finalizeUpgrade_v2()",
      "function getContractVersion() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin_)",
      "function isDepositsEnabled() view returns (bool)",
      "function isInitialized() view returns (bool)",
      "function isWithdrawalsEnabled() view returns (bool)",
      "function l2TokenBridge() view returns (address)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0x1c68ECfbf9C8B1E6C0677965b3B9Ecf9A104305b": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x1fb8cdFc6831fc866Ed9C51aF8817Da5c287aDD3": [
      "constructor(uint256 _minProposalSize, uint256 _challengePeriod)",
      "error ActiveProposal()",
      "error AlreadyFinalized()",
      "error AlreadyInitialized()",
      "error BadProposal()",
      "error BondTransferFailed()",
      "error InsufficientBond()",
      "error InvalidInputSize()",
      "error InvalidPreimage()",
      "error InvalidProof()",
      "error NotEOA()",
      "error NotInitialized()",
      "error PartOffsetOOB()",
      "error PostStateMatches()",
      "error StatesNotContiguous()",
      "error TreeSizeOverflow()",
      "error WrongStartingBlock()",
      "function KECCAK_TREE_DEPTH() view returns (uint256)",
      "function MAX_LEAF_COUNT() view returns (uint256)",
      "function MIN_BOND_SIZE() view returns (uint256)",
      "function PRECOMPILE_CALL_RESERVED_GAS() view returns (uint256)",
      "function addLeavesLPP(uint256 _uuid, uint256 _inputStartBlock, bytes _input, bytes32[] _stateCommitments, bool _finalize)",
      "function challengeFirstLPP(address _claimant, uint256 _uuid, tuple(bytes input, uint256 index, bytes32 stateCommitment) _postState, bytes32[] _postStateProof)",
      "function challengeLPP(address _claimant, uint256 _uuid, tuple(uint64[25] state) _stateMatrix, tuple(bytes input, uint256 index, bytes32 stateCommitment) _preState, bytes32[] _preStateProof, tuple(bytes input, uint256 index, bytes32 stateCommitment) _postState, bytes32[] _postStateProof)",
      "function challengePeriod() view returns (uint256 challengePeriod_)",
      "function getTreeRootLPP(address _owner, uint256 _uuid) view returns (bytes32 treeRoot_)",
      "function initLPP(uint256 _uuid, uint32 _partOffset, uint32 _claimedSize) payable",
      "function loadBlobPreimagePart(uint256 _z, uint256 _y, bytes _commitment, bytes _proof, uint256 _partOffset)",
      "function loadKeccak256PreimagePart(uint256 _partOffset, bytes _preimage)",
      "function loadLocalData(uint256 _ident, bytes32 _localContext, bytes32 _word, uint256 _size, uint256 _partOffset) returns (bytes32 key_)",
      "function loadPrecompilePreimagePart(uint256 _partOffset, address _precompile, uint64 _requiredGas, bytes _input)",
      "function loadSha256PreimagePart(uint256 _partOffset, bytes _preimage)",
      "function minProposalSize() view returns (uint256 minProposalSize_)",
      "function preimageLengths(bytes32) view returns (uint256)",
      "function preimagePartOk(bytes32, uint256) view returns (bool)",
      "function preimageParts(bytes32, uint256) view returns (bytes32)",
      "function proposalBlocks(address, uint256, uint256) view returns (uint64)",
      "function proposalBlocksLen(address _claimant, uint256 _uuid) view returns (uint256 len_)",
      "function proposalBonds(address, uint256) view returns (uint256)",
      "function proposalBranches(address, uint256, uint256) view returns (bytes32)",
      "function proposalCount() view returns (uint256 count_)",
      "function proposalMetadata(address, uint256) view returns (bytes32)",
      "function proposalParts(address, uint256) view returns (bytes32)",
      "function proposals(uint256) view returns (address claimant, uint256 uuid)",
      "function readPreimage(bytes32 _key, uint256 _offset) view returns (bytes32 dat_, uint256 datLen_)",
      "function squeezeLPP(address _claimant, uint256 _uuid, tuple(uint64[25] state) _stateMatrix, tuple(bytes input, uint256 index, bytes32 stateCommitment) _preState, bytes32[] _preStateProof, tuple(bytes input, uint256 index, bytes32 stateCommitment) _postState, bytes32[] _postStateProof)",
      "function version() view returns (string)",
      "function zeroHashes(uint256) view returns (bytes32)"
    ],
    "0x21429aF66058BC3e4aE4a8f2EC4531AaC433ecbC": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x229047fed2591dbec1eF1118d64F7aF3dB9EB290": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x24424336F04440b1c28685a38303aC33C9D14a25": [
      "constructor(address _safe)",
      "event OwnerRecorded(address owner)",
      "function checkAfterExecution(bytes32, bool)",
      "function checkTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures, address msgSender)",
      "function lastLive(address) view returns (uint256)",
      "function safe() view returns (address safe_)",
      "function showLiveness()",
      "function version() view returns (string)"
    ],
    "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1": [
      "constructor(address _libAddressManager, string _implementationName)"
    ],
    "0x323dFC63c9B83CB83f40325AaB74b245937cbdF0": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x340f923E5c7cbB2171146f64169EC9d5a9FfE647": [
      "constructor()",
      "event ConfigUpdate(uint256 indexed version, uint8 indexed updateType, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function BATCH_INBOX_SLOT() view returns (bytes32)",
      "function DISPUTE_GAME_FACTORY_SLOT() view returns (bytes32)",
      "function L1_CROSS_DOMAIN_MESSENGER_SLOT() view returns (bytes32)",
      "function L1_ERC_721_BRIDGE_SLOT() view returns (bytes32)",
      "function L1_STANDARD_BRIDGE_SLOT() view returns (bytes32)",
      "function OPTIMISM_MINTABLE_ERC20_FACTORY_SLOT() view returns (bytes32)",
      "function OPTIMISM_PORTAL_SLOT() view returns (bytes32)",
      "function START_BLOCK_SLOT() view returns (bytes32)",
      "function UNSAFE_BLOCK_SIGNER_SLOT() view returns (bytes32)",
      "function VERSION() view returns (uint256)",
      "function basefeeScalar() view returns (uint32)",
      "function batchInbox() view returns (address addr_)",
      "function batcherHash() view returns (bytes32)",
      "function blobbasefeeScalar() view returns (uint32)",
      "function disputeGameFactory() view returns (address addr_)",
      "function eip1559Denominator() view returns (uint32)",
      "function eip1559Elasticity() view returns (uint32)",
      "function gasLimit() view returns (uint64)",
      "function getAddresses() view returns (tuple(address l1CrossDomainMessenger, address l1ERC721Bridge, address l1StandardBridge, address disputeGameFactory, address optimismPortal, address optimismMintableERC20Factory))",
      "function initialize(address _owner, uint32 _basefeeScalar, uint32 _blobbasefeeScalar, bytes32 _batcherHash, uint64 _gasLimit, address _unsafeBlockSigner, tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config, address _batchInbox, tuple(address l1CrossDomainMessenger, address l1ERC721Bridge, address l1StandardBridge, address disputeGameFactory, address optimismPortal, address optimismMintableERC20Factory) _addresses)",
      "function l1CrossDomainMessenger() view returns (address addr_)",
      "function l1ERC721Bridge() view returns (address addr_)",
      "function l1StandardBridge() view returns (address addr_)",
      "function maximumGasLimit() pure returns (uint64)",
      "function minimumGasLimit() view returns (uint64)",
      "function operatorFeeConstant() view returns (uint64)",
      "function operatorFeeScalar() view returns (uint32)",
      "function optimismMintableERC20Factory() view returns (address addr_)",
      "function optimismPortal() view returns (address addr_)",
      "function overhead() view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function resourceConfig() view returns (tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee))",
      "function scalar() view returns (uint256)",
      "function setBatcherHash(bytes32 _batcherHash)",
      "function setEIP1559Params(uint32 _denominator, uint32 _elasticity)",
      "function setGasConfig(uint256 _overhead, uint256 _scalar)",
      "function setGasConfigEcotone(uint32 _basefeeScalar, uint32 _blobbasefeeScalar)",
      "function setGasLimit(uint64 _gasLimit)",
      "function setOperatorFeeScalars(uint32 _operatorFeeScalar, uint64 _operatorFeeConstant)",
      "function setUnsafeBlockSigner(address _unsafeBlockSigner)",
      "function startBlock() view returns (uint256 startBlock_)",
      "function transferOwnership(address newOwner)",
      "function unsafeBlockSigner() view returns (address addr_)",
      "function version() pure returns (string)"
    ],
    "0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedMasterCopy(address masterCopy)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function NAME() view returns (string)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeMasterCopy(address _masterCopy)",
      "function changeThreshold(uint256 _threshold)",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getMessageHash(bytes message) view returns (bytes32)",
      "function getModules() view returns (address[])",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isOwner(address owner) view returns (bool)",
      "function isValidSignature(bytes _data, bytes _signature) returns (bytes4)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signMessage(bytes _data)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64": [
      "constructor(address _singleton)"
    ],
    "0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65": [
      "constructor()",
      "event Approve(address indexed token, address indexed spender, uint256 value)",
      "event Deny(address indexed usr)",
      "event Rely(address indexed usr)",
      "function approve(address token, address spender, uint256 value)",
      "function deny(address usr)",
      "function rely(address usr)",
      "function wards(address) view returns (uint256)"
    ],
    "0x4bbA758F006Ef09402eF31724203F316ab74e4a0": [
      "constructor()",
      "error GameAlreadyExists(bytes32 uuid)",
      "error IncorrectBondAmount()",
      "error NoImplementation(uint32 gameType)",
      "event DisputeGameCreated(address indexed disputeProxy, uint32 indexed gameType, bytes32 indexed rootClaim)",
      "event ImplementationSet(address indexed impl, uint32 indexed gameType)",
      "event InitBondUpdated(uint32 indexed gameType, uint256 indexed newBond)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function create(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) payable returns (address proxy_)",
      "function findLatestGames(uint32 _gameType, uint256 _start, uint256 _n) view returns (tuple(uint256 index, bytes32 metadata, uint64 timestamp, bytes32 rootClaim, bytes extraData)[] games_)",
      "function gameAtIndex(uint256 _index) view returns (uint32 gameType_, uint64 timestamp_, address proxy_)",
      "function gameCount() view returns (uint256 gameCount_)",
      "function gameImpls(uint32) view returns (address)",
      "function games(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) view returns (address proxy_, uint64 timestamp_)",
      "function getGameUUID(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) pure returns (bytes32 uuid_)",
      "function initBonds(uint32) view returns (uint256)",
      "function initialize(address _owner)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setImplementation(uint32 _gameType, address _impl)",
      "function setInitBond(uint32 _gameType, uint256 _initBond)",
      "function transferOwnership(address newOwner)",
      "function version() view returns (string)"
    ],
    "0x4da82a327773965b8d4D85Fa3dB8249b387458E7": [
      "constructor()",
      "event ConfigUpdate(uint8 indexed updateType, bytes data)",
      "event Initialized(uint8 version)",
      "event Paused(string identifier)",
      "event Unpaused()",
      "function GUARDIAN_SLOT() view returns (bytes32)",
      "function PAUSED_SLOT() view returns (bytes32)",
      "function guardian() view returns (address guardian_)",
      "function initialize(address _guardian, bool _paused)",
      "function pause(string _identifier)",
      "function paused() view returns (bool paused_)",
      "function unpause()",
      "function version() view returns (string)"
    ],
    "0x543bA4AADBAb8f9025686Bd03993043599c6fB04": [
      "constructor(address _owner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addressManager() view returns (address)",
      "function changeProxyAdmin(address _proxy, address _newAdmin)",
      "function getProxyAdmin(address _proxy) view returns (address)",
      "function getProxyImplementation(address _proxy) view returns (address)",
      "function implementationName(address) view returns (string)",
      "function isUpgrading() view returns (bool)",
      "function owner() view returns (address)",
      "function proxyType(address) view returns (uint8)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function setAddressManager(address _address)",
      "function setImplementationName(address _address, string _name)",
      "function setProxyType(address _address, uint8 _type)",
      "function setUpgrading(bool _upgrading)",
      "function transferOwnership(address newOwner)",
      "function upgrade(address _proxy, address _implementation)",
      "function upgradeAndCall(address _proxy, address _implementation, bytes _data) payable"
    ],
    "0x5493f4677A186f64805fe7317D6993ba4863988F": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event OptimismMintableERC20Created(address indexed localToken, address indexed remoteToken, address deployer)",
      "event StandardL2TokenCreated(address indexed remoteToken, address indexed localToken)",
      "function BRIDGE() view returns (address)",
      "function bridge() view returns (address)",
      "function createOptimismMintableERC20(address _remoteToken, string _name, string _symbol) returns (address)",
      "function createOptimismMintableERC20WithDecimals(address _remoteToken, string _name, string _symbol, uint8 _decimals) returns (address)",
      "function createStandardL2Token(address _remoteToken, string _name, string _symbol) returns (address)",
      "function deployments(address) view returns (address)",
      "function initialize(address _bridge)",
      "function version() view returns (string)"
    ],
    "0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A": [
      "constructor(address _singleton)"
    ],
    "0x5a7749f83b81B301cAb5f48EB8516B986DAef23D": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x5D5a095665886119693F0B41d8DFeE78da033e8B": [
      "constructor()",
      "event FailedRelayedMessage(bytes32 indexed msgHash)",
      "event Initialized(uint8 version)",
      "event RelayedMessage(bytes32 indexed msgHash)",
      "event SentMessage(address indexed target, address sender, bytes message, uint256 messageNonce, uint256 gasLimit)",
      "event SentMessageExtension1(address indexed sender, uint256 value)",
      "function ENCODING_OVERHEAD() view returns (uint64)",
      "function FLOOR_CALLDATA_OVERHEAD() view returns (uint64)",
      "function MESSAGE_VERSION() view returns (uint16)",
      "function MIN_GAS_CALLDATA_OVERHEAD() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR() view returns (uint64)",
      "function OTHER_MESSENGER() view returns (address)",
      "function PORTAL() view returns (address)",
      "function RELAY_CALL_OVERHEAD() view returns (uint64)",
      "function RELAY_CONSTANT_OVERHEAD() view returns (uint64)",
      "function RELAY_GAS_CHECK_BUFFER() view returns (uint64)",
      "function RELAY_RESERVED_GAS() view returns (uint64)",
      "function TX_BASE_GAS() view returns (uint64)",
      "function baseGas(bytes _message, uint32 _minGasLimit) pure returns (uint64)",
      "function failedMessages(bytes32) view returns (bool)",
      "function initialize(address _superchainConfig, address _portal)",
      "function messageNonce() view returns (uint256)",
      "function otherMessenger() view returns (address)",
      "function paused() view returns (bool)",
      "function portal() view returns (address)",
      "function relayMessage(uint256 _nonce, address _sender, address _target, uint256 _value, uint256 _minGasLimit, bytes _message) payable",
      "function sendMessage(address _target, bytes _message, uint32 _minGasLimit) payable",
      "function successfulMessages(bytes32) view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0x5e40B9231B86984b5150507046e354dbFbeD3d9e": [
      "constructor(uint256 _delay)",
      "event Approval(address indexed src, address indexed guy, uint256 wad)",
      "event Deposit(address indexed dst, uint256 wad)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed src, address indexed dst, uint256 wad)",
      "event Withdrawal(address indexed src, uint256 wad)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address guy, uint256 wad) returns (bool)",
      "function balanceOf(address src) view returns (uint256)",
      "function config() view returns (address)",
      "function decimals() view returns (uint8)",
      "function delay() view returns (uint256)",
      "function deposit() payable",
      "function hold(address _guy, uint256 _wad)",
      "function hold(address _guy)",
      "function initialize(address _owner, address _config)",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function recover(uint256 _wad)",
      "function renounceOwnership()",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address dst, uint256 wad) returns (bool)",
      "function transferFrom(address src, address dst, uint256 wad) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unlock(address _guy, uint256 _wad)",
      "function version() view returns (string)",
      "function withdraw(uint256 _wad)",
      "function withdraw(address _guy, uint256 _wad)",
      "function withdrawals(address, address) view returns (uint256 amount, uint256 timestamp)"
    ],
    "0x5Fd79D46EBA7F351fe49BFF9E87cdeA6c821eF9f": [
      "constructor(address _owner)",
      "event BridgeApproval(address _token, address indexed spender, uint256 value)",
      "event OwnerChanged(address oldOwner, address newOwner)",
      "event OwnerNominated(address newOwner)",
      "function acceptOwnership()",
      "function approveBridge(address _token, address _bridge, uint256 _amount)",
      "function nominateNewOwner(address _owner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)"
    ],
    "0x75505a97BD334E7BD3C476893285569C4136Fa0F": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x76943C0D61395d8F2edF9060e1533529cAe05dE6": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error ErrorNotAdmin()",
      "error ErrorProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_, bool forceCall_)"
    ],
    "0x7aE1d3BD877a4C5CA257404ce26BE93A02C98013": [
      "constructor()",
      "event ERC721BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 tokenId, bytes extraData)",
      "event ERC721BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 tokenId, bytes extraData)",
      "event Initialized(uint8 version)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC721(address _localToken, address _remoteToken, uint256 _tokenId, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC721To(address _localToken, address _remoteToken, address _to, uint256 _tokenId, uint32 _minGasLimit, bytes _extraData)",
      "function deposits(address, address, uint256) view returns (bool)",
      "function finalizeBridgeERC721(address _localToken, address _remoteToken, address _from, address _to, uint256 _tokenId, bytes _extraData)",
      "function initialize(address _messenger, address _superchainConfig)",
      "function messenger() view returns (address)",
      "function otherBridge() view returns (address)",
      "function paused() view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x7b465370BB7A333f99edd19599EB7Fb1c2D3F8D2": [
      "constructor()",
      "error AnchorStateRegistry_AnchorGameBlacklisted()",
      "error AnchorStateRegistry_InvalidAnchorGame()",
      "error AnchorStateRegistry_Unauthorized()",
      "event AnchorNotUpdated(address indexed game)",
      "event AnchorUpdated(address indexed game)",
      "event Initialized(uint8 version)",
      "function anchorGame() view returns (address)",
      "function anchors(uint32) view returns (bytes32, uint256)",
      "function disputeGameFactory() view returns (address)",
      "function getAnchorRoot() view returns (bytes32, uint256)",
      "function initialize(address _superchainConfig, address _disputeGameFactory, address _portal, tuple(bytes32 root, uint256 l2BlockNumber) _startingAnchorRoot)",
      "function isGameBlacklisted(address _game) view returns (bool)",
      "function isGameClaimValid(address _game) view returns (bool)",
      "function isGameFinalized(address _game) view returns (bool)",
      "function isGameProper(address _game) view returns (bool)",
      "function isGameRegistered(address _game) view returns (bool)",
      "function isGameResolved(address _game) view returns (bool)",
      "function isGameRespected(address _game) view returns (bool)",
      "function isGameRetired(address _game) view returns (bool)",
      "function portal() view returns (address)",
      "function respectedGameType() view returns (uint32)",
      "function setAnchorState(address _game)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x847B5c174615B1B7fDF770882256e2D3E95b9D92": [
      "constructor(address _singleton)"
    ],
    "0x89D68b1D63AAA0db4af1163e81f56B76934292F8": [
      "constructor(tuple(uint32 gameType, bytes32 absolutePrestate, uint256 maxGameDepth, uint256 splitDepth, uint64 clockExtension, uint64 maxClockDuration, address vm, address weth, address anchorStateRegistry, uint256 l2ChainId) _params)",
      "error AlreadyInitialized()",
      "error AnchorRootNotFound()",
      "error BlockNumberMatches()",
      "error BondTransferFailed()",
      "error CannotDefendRootClaim()",
      "error ClaimAboveSplit()",
      "error ClaimAlreadyExists()",
      "error ClaimAlreadyResolved()",
      "error ClockNotExpired()",
      "error ClockTimeExceeded()",
      "error ContentLengthMismatch()",
      "error DuplicateStep()",
      "error EmptyItem()",
      "error GameDepthExceeded()",
      "error GameNotFinalized()",
      "error GameNotInProgress()",
      "error GameNotResolved()",
      "error IncorrectBondAmount()",
      "error InvalidBondDistributionMode()",
      "error InvalidChallengePeriod()",
      "error InvalidClockExtension()",
      "error InvalidDataRemainder()",
      "error InvalidDisputedClaimIndex()",
      "error InvalidHeader()",
      "error InvalidHeaderRLP()",
      "error InvalidLocalIdent()",
      "error InvalidOutputRootProof()",
      "error InvalidParent()",
      "error InvalidPrestate()",
      "error InvalidSplitDepth()",
      "error L2BlockNumberChallenged()",
      "error MaxDepthTooLarge()",
      "error NoCreditToClaim()",
      "error OutOfOrderResolution()",
      "error ReservedGameType()",
      "error UnexpectedList()",
      "error UnexpectedRootClaim(bytes32 rootClaim)",
      "error UnexpectedString()",
      "error ValidStep()",
      "event GameClosed(uint8 bondDistributionMode)",
      "event Move(uint256 indexed parentIndex, bytes32 indexed claim, address indexed claimant)",
      "event Resolved(uint8 indexed status)",
      "function absolutePrestate() view returns (bytes32 absolutePrestate_)",
      "function addLocalData(uint256 _ident, uint256 _execLeafIdx, uint256 _partOffset)",
      "function anchorStateRegistry() view returns (address registry_)",
      "function attack(bytes32 _disputed, uint256 _parentIndex, bytes32 _claim) payable",
      "function bondDistributionMode() view returns (uint8)",
      "function challengeRootL2Block(tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, bytes _headerRLP)",
      "function claimCredit(address _recipient)",
      "function claimData(uint256) view returns (uint32 parentIndex, address counteredBy, address claimant, uint128 bond, bytes32 claim, uint128 position, uint128 clock)",
      "function claimDataLen() view returns (uint256 len_)",
      "function claims(bytes32) view returns (bool)",
      "function clockExtension() view returns (uint64 clockExtension_)",
      "function closeGame()",
      "function createdAt() view returns (uint64)",
      "function credit(address _recipient) view returns (uint256 credit_)",
      "function defend(bytes32 _disputed, uint256 _parentIndex, bytes32 _claim) payable",
      "function extraData() pure returns (bytes extraData_)",
      "function gameCreator() pure returns (address creator_)",
      "function gameData() view returns (uint32 gameType_, bytes32 rootClaim_, bytes extraData_)",
      "function gameType() view returns (uint32 gameType_)",
      "function getChallengerDuration(uint256 _claimIndex) view returns (uint64 duration_)",
      "function getNumToResolve(uint256 _claimIndex) view returns (uint256 numRemainingChildren_)",
      "function getRequiredBond(uint128 _position) view returns (uint256 requiredBond_)",
      "function hasUnlockedCredit(address) view returns (bool)",
      "function initialize() payable",
      "function l1Head() pure returns (bytes32 l1Head_)",
      "function l2BlockNumber() pure returns (uint256 l2BlockNumber_)",
      "function l2BlockNumberChallenged() view returns (bool)",
      "function l2BlockNumberChallenger() view returns (address)",
      "function l2ChainId() view returns (uint256 l2ChainId_)",
      "function maxClockDuration() view returns (uint64 maxClockDuration_)",
      "function maxGameDepth() view returns (uint256 maxGameDepth_)",
      "function move(bytes32 _disputed, uint256 _challengeIndex, bytes32 _claim, bool _isAttack) payable",
      "function normalModeCredit(address) view returns (uint256)",
      "function refundModeCredit(address) view returns (uint256)",
      "function resolutionCheckpoints(uint256) view returns (bool initialCheckpointComplete, uint32 subgameIndex, uint128 leftmostPosition, address counteredBy)",
      "function resolve() returns (uint8 status_)",
      "function resolveClaim(uint256 _claimIndex, uint256 _numToResolve)",
      "function resolvedAt() view returns (uint64)",
      "function resolvedSubgames(uint256) view returns (bool)",
      "function rootClaim() pure returns (bytes32 rootClaim_)",
      "function splitDepth() view returns (uint256 splitDepth_)",
      "function startingBlockNumber() view returns (uint256 startingBlockNumber_)",
      "function startingOutputRoot() view returns (bytes32 root, uint256 l2BlockNumber)",
      "function startingRootHash() view returns (bytes32 startingRootHash_)",
      "function status() view returns (uint8)",
      "function step(uint256 _claimIndex, bool _isAttack, bytes _stateData, bytes _proof)",
      "function subgames(uint256, uint256) view returns (uint256)",
      "function version() pure returns (string)",
      "function vm() view returns (address vm_)",
      "function wasRespectedGameTypeWhenCreated() view returns (bool)",
      "function weth() view returns (address weth_)"
    ],
    "0x95703e0982140D16f8ebA6d158FccEde42f04a4C": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1": [
      "constructor(address _owner)",
      "function getImplementation() returns (address)",
      "function getOwner() returns (address)",
      "function setCode(bytes _code)",
      "function setOwner(address _owner)",
      "function setStorage(bytes32 _key, bytes32 _value)"
    ],
    "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A": [
      "constructor(address _masterCopy)"
    ],
    "0xa1E0baCde89d899B3f24eEF3D179cC335A24E777": [
      "constructor(tuple(uint32 gameType, bytes32 absolutePrestate, uint256 maxGameDepth, uint256 splitDepth, uint64 clockExtension, uint64 maxClockDuration, address vm, address weth, address anchorStateRegistry, uint256 l2ChainId) _params, address _proposer, address _challenger)",
      "error AlreadyInitialized()",
      "error AnchorRootNotFound()",
      "error BadAuth()",
      "error BlockNumberMatches()",
      "error BondTransferFailed()",
      "error CannotDefendRootClaim()",
      "error ClaimAboveSplit()",
      "error ClaimAlreadyExists()",
      "error ClaimAlreadyResolved()",
      "error ClockNotExpired()",
      "error ClockTimeExceeded()",
      "error ContentLengthMismatch()",
      "error DuplicateStep()",
      "error EmptyItem()",
      "error GameDepthExceeded()",
      "error GameNotFinalized()",
      "error GameNotInProgress()",
      "error GameNotResolved()",
      "error IncorrectBondAmount()",
      "error InvalidBondDistributionMode()",
      "error InvalidChallengePeriod()",
      "error InvalidClockExtension()",
      "error InvalidDataRemainder()",
      "error InvalidDisputedClaimIndex()",
      "error InvalidHeader()",
      "error InvalidHeaderRLP()",
      "error InvalidLocalIdent()",
      "error InvalidOutputRootProof()",
      "error InvalidParent()",
      "error InvalidPrestate()",
      "error InvalidSplitDepth()",
      "error L2BlockNumberChallenged()",
      "error MaxDepthTooLarge()",
      "error NoCreditToClaim()",
      "error OutOfOrderResolution()",
      "error ReservedGameType()",
      "error UnexpectedList()",
      "error UnexpectedRootClaim(bytes32 rootClaim)",
      "error UnexpectedString()",
      "error ValidStep()",
      "event GameClosed(uint8 bondDistributionMode)",
      "event Move(uint256 indexed parentIndex, bytes32 indexed claim, address indexed claimant)",
      "event Resolved(uint8 indexed status)",
      "function absolutePrestate() view returns (bytes32 absolutePrestate_)",
      "function addLocalData(uint256 _ident, uint256 _execLeafIdx, uint256 _partOffset)",
      "function anchorStateRegistry() view returns (address registry_)",
      "function attack(bytes32 _disputed, uint256 _parentIndex, bytes32 _claim) payable",
      "function bondDistributionMode() view returns (uint8)",
      "function challengeRootL2Block(tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, bytes _headerRLP)",
      "function challenger() view returns (address challenger_)",
      "function claimCredit(address _recipient)",
      "function claimData(uint256) view returns (uint32 parentIndex, address counteredBy, address claimant, uint128 bond, bytes32 claim, uint128 position, uint128 clock)",
      "function claimDataLen() view returns (uint256 len_)",
      "function claims(bytes32) view returns (bool)",
      "function clockExtension() view returns (uint64 clockExtension_)",
      "function closeGame()",
      "function createdAt() view returns (uint64)",
      "function credit(address _recipient) view returns (uint256 credit_)",
      "function defend(bytes32 _disputed, uint256 _parentIndex, bytes32 _claim) payable",
      "function extraData() pure returns (bytes extraData_)",
      "function gameCreator() pure returns (address creator_)",
      "function gameData() view returns (uint32 gameType_, bytes32 rootClaim_, bytes extraData_)",
      "function gameType() view returns (uint32 gameType_)",
      "function getChallengerDuration(uint256 _claimIndex) view returns (uint64 duration_)",
      "function getNumToResolve(uint256 _claimIndex) view returns (uint256 numRemainingChildren_)",
      "function getRequiredBond(uint128 _position) view returns (uint256 requiredBond_)",
      "function hasUnlockedCredit(address) view returns (bool)",
      "function initialize() payable",
      "function l1Head() pure returns (bytes32 l1Head_)",
      "function l2BlockNumber() pure returns (uint256 l2BlockNumber_)",
      "function l2BlockNumberChallenged() view returns (bool)",
      "function l2BlockNumberChallenger() view returns (address)",
      "function l2ChainId() view returns (uint256 l2ChainId_)",
      "function maxClockDuration() view returns (uint64 maxClockDuration_)",
      "function maxGameDepth() view returns (uint256 maxGameDepth_)",
      "function move(bytes32 _disputed, uint256 _challengeIndex, bytes32 _claim, bool _isAttack) payable",
      "function normalModeCredit(address) view returns (uint256)",
      "function proposer() view returns (address proposer_)",
      "function refundModeCredit(address) view returns (uint256)",
      "function resolutionCheckpoints(uint256) view returns (bool initialCheckpointComplete, uint32 subgameIndex, uint128 leftmostPosition, address counteredBy)",
      "function resolve() returns (uint8 status_)",
      "function resolveClaim(uint256 _claimIndex, uint256 _numToResolve)",
      "function resolvedAt() view returns (uint64)",
      "function resolvedSubgames(uint256) view returns (bool)",
      "function rootClaim() pure returns (bytes32 rootClaim_)",
      "function splitDepth() view returns (uint256 splitDepth_)",
      "function startingBlockNumber() view returns (uint256 startingBlockNumber_)",
      "function startingOutputRoot() view returns (bytes32 root, uint256 l2BlockNumber)",
      "function startingRootHash() view returns (bytes32 startingRootHash_)",
      "function status() view returns (uint8)",
      "function step(uint256 _claimIndex, bool _isAttack, bytes _stateData, bytes _proof)",
      "function subgames(uint256, uint256) view returns (uint256)",
      "function version() pure returns (string)",
      "function vm() view returns (address vm_)",
      "function wasRespectedGameTypeWhenCreated() view returns (bool)",
      "function weth() view returns (address weth_)"
    ],
    "0xa3d596EAfaB6B13Ab18D40FaE1A962700C84ADEa": [
      "event BatchTransacted(address msgSender, address otherSigner, bytes32 operation)",
      "event BatchTransfer(address sender, address recipient, uint256 value)",
      "event Deposited(address from, uint256 value, bytes data)",
      "event SafeModeActivated(address msgSender)",
      "event Transacted(address msgSender, address otherSigner, bytes32 operation, address toAddress, uint256 value, bytes data)",
      "function activateSafeMode()",
      "function flushForwarderTokens(address forwarderAddress, address tokenContractAddress)",
      "function getNextSequenceId() view returns (uint256)",
      "function init(address[] allowedSigners)",
      "function initialized() view returns (bool)",
      "function isSigner(address signer) view returns (bool)",
      "function safeMode() view returns (bool)",
      "function sendMultiSig(address toAddress, uint256 value, bytes data, uint256 expireTime, uint256 sequenceId, bytes signature)",
      "function sendMultiSigBatch(address[] recipients, uint256[] values, uint256 expireTime, uint256 sequenceId, bytes signature)",
      "function sendMultiSigToken(address toAddress, uint256 value, address tokenContractAddress, uint256 expireTime, uint256 sequenceId, bytes signature)",
      "function signers(address) view returns (bool)"
    ],
    "0xB443Da3e07052204A02d630a8933dAc05a0d6fB4": [
      "constructor(uint256 _proofMaturityDelaySeconds, uint256 _disputeGameFinalityDelaySeconds)",
      "error AlreadyFinalized()",
      "error BadTarget()",
      "error Blacklisted()",
      "error CallPaused()",
      "error ContentLengthMismatch()",
      "error EmptyItem()",
      "error GasEstimation()",
      "error InvalidDataRemainder()",
      "error InvalidDisputeGame()",
      "error InvalidGameType()",
      "error InvalidHeader()",
      "error InvalidMerkleProof()",
      "error InvalidProof()",
      "error LargeCalldata()",
      "error LegacyGame()",
      "error NonReentrant()",
      "error OutOfGas()",
      "error ProposalNotValidated()",
      "error SmallGasLimit()",
      "error Unauthorized()",
      "error UnexpectedList()",
      "error UnexpectedString()",
      "error Unproven()",
      "event DisputeGameBlacklisted(address indexed disputeGame)",
      "event Initialized(uint8 version)",
      "event RespectedGameTypeSet(uint32 indexed newGameType, uint64 indexed updatedAt)",
      "event TransactionDeposited(address indexed from, address indexed to, uint256 indexed version, bytes opaqueData)",
      "event WithdrawalFinalized(bytes32 indexed withdrawalHash, bool success)",
      "event WithdrawalProven(bytes32 indexed withdrawalHash, address indexed from, address indexed to)",
      "event WithdrawalProvenExtension1(bytes32 indexed withdrawalHash, address indexed proofSubmitter)",
      "function blacklistDisputeGame(address _disputeGame)",
      "function checkWithdrawal(bytes32 _withdrawalHash, address _proofSubmitter) view",
      "function depositTransaction(address _to, uint256 _value, uint64 _gasLimit, bool _isCreation, bytes _data) payable",
      "function disputeGameBlacklist(address) view returns (bool)",
      "function disputeGameFactory() view returns (address)",
      "function disputeGameFinalityDelaySeconds() view returns (uint256)",
      "function donateETH() payable",
      "function finalizeWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx)",
      "function finalizeWithdrawalTransactionExternalProof(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx, address _proofSubmitter)",
      "function finalizedWithdrawals(bytes32) view returns (bool)",
      "function guardian() view returns (address)",
      "function initialize(address _disputeGameFactory, address _systemConfig, address _superchainConfig, uint32 _initialRespectedGameType)",
      "function l2Sender() view returns (address)",
      "function minimumGasLimit(uint64 _byteCount) pure returns (uint64)",
      "function numProofSubmitters(bytes32 _withdrawalHash) view returns (uint256)",
      "function params() view returns (uint128 prevBaseFee, uint64 prevBoughtGas, uint64 prevBlockNum)",
      "function paused() view returns (bool)",
      "function proofMaturityDelaySeconds() view returns (uint256)",
      "function proofSubmitters(bytes32, uint256) view returns (address)",
      "function proveWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx, uint256 _disputeGameIndex, tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, bytes[] _withdrawalProof)",
      "function provenWithdrawals(bytes32, address) view returns (address disputeGameProxy, uint64 timestamp)",
      "function respectedGameType() view returns (uint32)",
      "function respectedGameTypeUpdatedAt() view returns (uint64)",
      "function setRespectedGameType(uint32 _gameType)",
      "function superchainConfig() view returns (address)",
      "function systemConfig() view returns (address)",
      "function version() pure returns (string)"
    ],
    "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xc2819DC788505Aac350142A7A707BF9D03E3Bd03": [
      "constructor(address _singleton)"
    ],
    "0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B": [
      "constructor(address _safe, address _superchainConfig, address _deputyGuardian)",
      "error ExecutionFailed(string)",
      "error Unauthorized()",
      "event DisputeGameBlacklisted(address indexed game)",
      "event Paused(string identifier)",
      "event RespectedGameTypeSet(uint32 indexed gameType, uint64 indexed updatedAt)",
      "event Unpaused()",
      "function blacklistDisputeGame(address _portal, address _game)",
      "function deputyGuardian() view returns (address deputyGuardian_)",
      "function pause()",
      "function safe() view returns (address safe_)",
      "function setAnchorState(address _registry, address _game)",
      "function setRespectedGameType(address _portal, uint32 _gameType)",
      "function superchainConfig() view returns (address superchainConfig_)",
      "function unpause()",
      "function version() view returns (string)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F": [
      "event AddressSet(string indexed _name, address _newAddress, address _oldAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getAddress(string _name) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xe5965Ab5962eDc7477C8520243A95517CD252fA9": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xF027F4A985560fb13324e943edf55ad6F1d15Dc1": [
      "constructor(address _oracle)",
      "error InvalidExitedValue()",
      "error InvalidMemoryProof()",
      "error InvalidPC()",
      "error InvalidRMWInstruction()",
      "error InvalidSecondMemoryProof()",
      "function oracle() view returns (address oracle_)",
      "function step(bytes _stateData, bytes _proof, bytes32 _localContext) returns (bytes32 postState_)",
      "function version() view returns (string)"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x72c050bdd9c641a0ef7530a5f17a4ec3e430e09978cdfe9ad65c94bfd56fc148",
    "GnosisSafe": "0x62ebcf7ab79ebc3a7db30e84c423951d981b749397664ae678e312687409f5f0",
    "gnosisSafeModules/DeputyGuardianModule": "0x8b90baf04dee1921e1e57f188eeaf85ed0bf5dd20c023ee5c59ba4b679f14809",
    "gnosisSafeModules/LivenessModule": "0x84ebe3f876938b7e8af892e85878d552551156c5de90c2782952b405d394f3cd",
    "lido/L1LidoTokensBridge": "0xfbf3e83ab86a74d691bbceaf7d057f48ce1eb84928da555a82dee64747e5facc",
    "maker/L1Escrow": "0xb42f4a4e99cd96e0fdced856d5700812b16948444eb8bf9b0d9f41c6faec9de4",
    "opstack/AddressManager": "0x25e40f0e8a2f78e589d0f70a8975281af9e50c15f998b39f8bfbd6d5682d4f26",
    "opstack/AnchorStateRegistry": "0x0745ad704a222adcc2bfc1e083729a31e749ccc5465e0adb2995f87981c21fba",
    "opstack/DelayedWETH": "0x23d6aedd9fd736bb10884dc1269bfaafb4403d524ea6ba91d0ef99fe7a1b643f",
    "opstack/DeputyPauseModule": "0x2140a0f84c07311a5976aac404a07346dc35dbe3d71337001a5d1fa6eed8e467",
    "opstack/DisputeGameFactory": "0x67f69b090ef8ef37890cb4e7c28b9ee1844641f6c4eb75ff15cba998839606ed",
    "opstack/FaultDisputeGame": "0x7767458874d21640683474eaa7fb0c67552d513da9358bb1bcff2c755a165df3",
    "opstack/L1CrossDomainMessenger": "0x595eac283f949c40d81ad81550396e35b3345dca8e49cfca901122a2b4046561",
    "opstack/L1ERC721Bridge": "0xafa13690ce8b74136cc340eaa940528c1a96aaf7b4c95715b884decb544f7c67",
    "opstack/L1StandardBridge": "0xfb058df23faac0e013a6ee0b2298dc99719bdad3f340e85c05e281dca6321568",
    "opstack/MIPS": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "opstack/OptimismMintableERC20Factory": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "opstack/OptimismPortal2": "0x7ac072ef679e441e8543bbc677bcba6f25016b1232f4ee456519a28e3c3e2dee",
    "opstack/PermissionedDisputeGame": "0x7767458874d21640683474eaa7fb0c67552d513da9358bb1bcff2c755a165df3",
    "opstack/PreimageOracle": "0x6c435c8491ea31b14ac576d12c5ae3988f849f8c365b3989e522aba5f84ca1ec",
    "opstack/SuperchainConfig": "0x6dac142ba9c1d595920b33d54a95b1fb8237f9ea396311f48ea44f1d1491b977",
    "opstack/SystemConfig": "0x1d7557c7c4b24dc7003b7c6d375b0e6c4975b7fae1242eca554820cfe21e1153"
  },
  "permissionsConfigHash": "0x84180c28a6fa0faba60040d969bdccea0048ad997ff35e017a3e58b141204ab1"
}
