{
  "name": "scroll",
  "chain": "ethereum",
  "blockNumber": 22389279,
  "configHash": "0xfe2f62acebc77662d3849e4b157306d023d57dbe1e155bcf22f8fe18cb9570b1",
  "entries": [
    {
      "name": "ZkEvmVerifierPostEuclid",
      "address": "0x0112315Fa1c81c35ac9a477e161B52Ae4D1466B3",
      "type": "Contract",
      "sourceHashes": [
        "0xb3a265a8eb78423c08d849d4239a3a2a76deeeca1a1cb7d7857b3d7775b78c4d"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1743130499,
      "sinceBlock": 22142559,
      "values": {
        "$immutable": true,
        "plonkVerifier": "0xd1638c0C7Bd6bf49D655D855d353aC8b4f949582",
        "verifierDigest1": "0x001e7bcb266824cb08ad303990e90a9c4b901eaaa52e562e513df47d4c168949",
        "verifierDigest2": "0x0038553adf417a6a3df35d2fdfd14b892f1e49ba18937ece7960c1e7cee6e3dc"
      },
      "derivedName": "ZkEvmVerifierPostEuclid",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "PlonkVerifierV1-1",
      "address": "0x03a72B00D036C479105fF98A1953b15d9c510110",
      "type": "Contract",
      "sourceHashes": [
        "0xc98f03651ddf430db5e0fa5d49b57551e01975529019ff3fbc1897109cd6dc9e"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1719379319,
      "sinceBlock": 20173741,
      "values": { "$immutable": true },
      "derivedName": "",
      "references": [
        {
          "text": "Source Code",
          "href": "https://circuit-release.s3.us-west-2.amazonaws.com/release-v0.11.4/evm_verifier.yul"
        }
      ],
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x054a47B9E2a22aF6c0CE55020238C8FEcd7d334B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x0c5cc5155b346453154059aD9d2Ff695dB92f774",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        }
      ]
    },
    {
      "name": "TimelockSCEmergency",
      "address": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
      "type": "Contract",
      "template": "scroll/L1Timelock",
      "sourceHashes": [
        "0x9dd794c91c0c92b8b8129a7c4d61c361b75602f161dc7b58f5908edafb920049"
      ],
      "proxyType": "immutable",
      "description": "A timelock with access control. The current minimum delay is 0s. Proposals that passed their minimum delay can be executed by the anyone.",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "update the minimum delay and manage all access control roles of the timelock."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "disable enforced batch mode."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "update ScrollChain zk proof verifier."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "upgrade all core contracts of the system."
        }
      ],
      "sinceTimestamp": 1730294447,
      "sinceBlock": 21078719,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
              "0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f",
              "0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"
            ]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"]
          }
        },
        "Canceller": ["0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"],
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "Executor": [
          "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f",
          "0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"
        ],
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 0,
        "getMinDelayFormatted": "0s",
        "Proposer": ["0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"],
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5",
        "timelockAdminAC": [
          "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"
        ]
      },
      "fieldMeta": {
        "Executor": {
          "severity": "HIGH",
          "description": "Executing proposals is only open to all addresses if this resolves to the 0x0 address"
        }
      },
      "derivedName": "TimelockController",
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "name": "TimelockFast",
      "address": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
      "type": "Contract",
      "template": "scroll/L1Timelock",
      "sourceHashes": [
        "0x9dd794c91c0c92b8b8129a7c4d61c361b75602f161dc7b58f5908edafb920049"
      ],
      "proxyType": "immutable",
      "description": "A timelock with access control. The current minimum delay is 1d. Proposals that passed their minimum delay can be executed by the anyone.",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "description": "update the minimum delay and manage all access control roles of the timelock."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "add permissioned batchers and provers to the whitelist."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "set ERC20 gateways in the L1GatewayRouter."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "update the L1ScrollMessenger fee vault address."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "update the minimum delay message queue parameters and enforced mode parameters."
        }
      ],
      "sinceTimestamp": 1696782479,
      "sinceBlock": 18306947,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
              "0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"]
          }
        },
        "Canceller": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"],
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "Executor": ["0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f"],
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 86400,
        "getMinDelayFormatted": "1d",
        "Proposer": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"],
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5",
        "timelockAdminAC": [
          "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"
        ]
      },
      "fieldMeta": {
        "Executor": {
          "severity": "HIGH",
          "description": "Executing proposals is only open to all addresses if this resolves to the 0x0 address"
        }
      },
      "derivedName": "TimelockController",
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "address": "0x0f50874f227621Dea72482004639a9fFe440A4dA",
      "type": "EOA",
      "proxyType": "EOA",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "GnosisSafeL2",
      "address": "0x11cd09a0c5B1dc674615783b0772a9bFD53e3A8F",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0x59fe14e95a8aa7f52213f18bae5c9329cf583a7ba31194698b15eddb97d5e825"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1732063151,
      "sinceBlock": 21225420,
      "values": {
        "$immutable": false,
        "$implementation": "0x3E5c63644E683549055b9Be8653de26E0B4CD36E",
        "$members": [
          "0x4970e361f6168a301D1036348d625A8930B1AaB7",
          "0x7742637569CE1dd9AA9F4F91EaAc7c028C5e1f4d",
          "0xbB2491beFBd46CF26F7e9B9Dec16E0c31f9c5ae3",
          "0x6626593C237f530D15aE9980A95ef938Ac15c35c",
          "0xb3dd2CA3F575FCDd79F5Cd45c5a6c9db860F3E4d",
          "0xb01474b50382fAe1A847E3A916ECDf07Ba57BcC7",
          "0x9106372987a14400F283bc1AfC122A57130c18a3",
          "0xDD659911EcBD4458db07Ee7cDdeC79bf8F859AbC",
          "0x218C720079833e0e40a3cc68CD5fA2f89D65d0bf",
          "0xa28b7D23e9F8D8d5346A7901ecC9eC8ea48bAEcD",
          "0x93738D2aD25678BAE4F467FFad2c5a4C4c79658a",
          "0x32E8B0B9783d65170fd37f79079d5707107cCc62"
        ],
        "$threshold": 2,
        "domainSeparator": "0x6a0d5b5d136978428f96e7a25eff9c658a73697587fc6e42f0e308d79828c1b0",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 12 (17%)",
        "nonce": 5,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafeL2",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "Scroll Security Council",
      "address": "0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "cancel queued transactions."
        },
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "execute transactions that are ready."
        },
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "propose transactions."
        },
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "update the minimum delay and manage all access control roles of the timelock.",
          "via": [{ "address": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44" }]
        },
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "update the minimum delay and manage all access control roles of the timelock."
        },
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "cancel queued transactions."
        },
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "execute transactions that are ready."
        },
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "propose transactions."
        },
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "update the minimum delay and manage all access control roles of the timelock.",
          "via": [
            {
              "address": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
              "delay": 259200
            }
          ]
        },
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "update the minimum delay and manage all access control roles of the timelock."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "disable enforced batch mode.",
          "via": [{ "address": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44" }]
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "update ScrollChain zk proof verifier.",
          "via": [{ "address": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44" }]
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "upgrade all core contracts of the system.",
          "via": [{ "address": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44"
        },
        {
          "permission": "act",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "delay": 259200
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1732607939,
      "sinceBlock": 21270585,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0x0f50874f227621Dea72482004639a9fFe440A4dA",
          "0x70DFdAE47E29D2C40EE58Cefa7379588B421a86d",
          "0xE47D966E2c7e94fC20ffAf5119d1926381C40f2a",
          "0x9B2C2Bc80C209c9C5D7f26F57b1Bb3B1699281D4",
          "0x8edC4EADEE120d4C51923c515e7C3241c815C2BC",
          "0x30315233090F675520eef5CBd7A6cf7d185af443",
          "0x9479ABfebefEea3c846163012a472b44F305b3d7",
          "0x383C148ba96956F985F6141B2D119add1C34e3B7",
          "0xC3eA7C657884BB380B66D79C36aDCb5658b01896",
          "0x69C2eD64171bF5737c2B78bdF722e68a032B2825",
          "0x11cd09a0c5B1dc674615783b0772a9bFD53e3A8F",
          "0xFb77d22ED83F42922F9542e39dCfA9F8C47FDaFf"
        ],
        "$threshold": 9,
        "domainSeparator": "0x74e6026695cbb5e8a904a4284b747bdc78c19fa8955f45352ac71bf10feb66e9",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "9 of 12 (75%)",
        "nonce": 7,
        "VERSION": "1.4.1"
      },
      "derivedName": "Safe",
      "references": [
        {
          "text": "Security Council members - Scroll Docs",
          "href": "https://scroll.io/gov-docs/content/security-council"
        }
      ]
    },
    {
      "name": "Scroll Multisig 1",
      "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "execute transactions that are ready."
        },
        {
          "permission": "interact",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "description": "execute transactions that are ready."
        },
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "execute transactions that are ready."
        },
        {
          "permission": "interact",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "description": "execute transactions that are ready."
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1696661687,
      "sinceBlock": 18296951,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xEe9bb388d320F4305af6a4a1a70c862D3F4d0D5B",
          "0xFcf1f182FC79047d99e5db0d7113c0EfE2EC9402",
          "0x0c5cc5155b346453154059aD9d2Ff695dB92f774",
          "0x26eceC198AdC0be598311bAe8EDfd4eEa47A56c5"
        ],
        "$threshold": 1,
        "domainSeparator": "0xe9a5efc52797721f6bd4d9839b18dcdc4162a6e91c2fe8ce6e0d679f65e814a4",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 4 (25%)",
        "nonce": 25,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "address": "0x218C720079833e0e40a3cc68CD5fA2f89D65d0bf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "PlonkVerifierV1",
      "address": "0x2293cd12e8564e8219d314b075867c2f66ac6941",
      "type": "Contract",
      "sourceHashes": [
        "0xcd6a67da07fdd0ff4f75a99bf03d70659a6a00d98f1219b1aff2756b7ce971bd"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1712907503,
      "sinceBlock": 19638084,
      "values": { "$immutable": true },
      "derivedName": "",
      "references": [
        {
          "text": "Source Code",
          "href": "https://circuit-release.s3.us-west-2.amazonaws.com/release-v0.10.3/evm_verifier.yul"
        }
      ],
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x26eceC198AdC0be598311bAe8EDfd4eEa47A56c5",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        }
      ]
    },
    {
      "name": "ZkEvmVerifierV2",
      "address": "0x2d6e16d8e8a0C3Bc7750E774B108Ec39Ab0C18fB",
      "type": "Contract",
      "sourceHashes": [
        "0xa3e375ce1143ce7410edcfff2fbfa0ee90c06ef0710c4f11af9533ca40cdbb61"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1722833039,
      "sinceBlock": 20460054,
      "values": {
        "$immutable": true,
        "plonkVerifier": "0x8759E83b6570A0bA46c3CE7eB359F354F816c9a9",
        "verifierDigest": "0x30513ba1873ce1b9598c4faf101dccd32498e93c39e1f31a423390cbb1f81f7a"
      },
      "derivedName": "ZkEvmVerifierV2",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x30315233090F675520eef5CBd7A6cf7d185af443",
      "type": "EOA",
      "proxyType": "EOA",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x32E8B0B9783d65170fd37f79079d5707107cCc62",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ZkEvmVerifierPostEuclid",
      "address": "0x33996CC9EEe2dc20B10b8E57d313d0FacC7a0828",
      "type": "Contract",
      "sourceHashes": [
        "0xb3a265a8eb78423c08d849d4239a3a2a76deeeca1a1cb7d7857b3d7775b78c4d"
      ],
      "proxyType": "immutable",
      "description": "Contract used to verify zk proofs given the aggregate proof and the public input hash.",
      "sinceTimestamp": 1745397227,
      "sinceBlock": 22330536,
      "values": {
        "$immutable": true,
        "plonkVerifier": "0x9F66505cB1626D06B50EF2597f41De6686e8f79a",
        "verifierDigest1": "0x005df630e095f46df0109f12181a4bf4ff6a2e401e78f12f556b15c622d90660",
        "verifierDigest2": "0x0025771eef6c3413bbf64d460556238de411a9154ceb1e00ac91c73e0bfb30d3"
      },
      "derivedName": "ZkEvmVerifierPostEuclid"
    },
    {
      "address": "0x383C148ba96956F985F6141B2D119add1C34e3B7",
      "type": "EOA",
      "proxyType": "EOA",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "TimelockSCSlow",
      "address": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
      "type": "Contract",
      "template": "scroll/L1Timelock",
      "sourceHashes": [
        "0x9dd794c91c0c92b8b8129a7c4d61c361b75602f161dc7b58f5908edafb920049"
      ],
      "proxyType": "immutable",
      "description": "A timelock with access control. The current minimum delay is 3d. Proposals that passed their minimum delay can be executed by the anyone.",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "update the minimum delay and manage all access control roles of the timelock."
        }
      ],
      "sinceTimestamp": 1729781135,
      "sinceBlock": 21036143,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
              "0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD",
              "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f"
            ]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"]
          }
        },
        "Canceller": ["0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"],
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "Executor": [
          "0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD",
          "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f"
        ],
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 259200,
        "getMinDelayFormatted": "3d",
        "Proposer": ["0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"],
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5",
        "timelockAdminAC": [
          "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD"
        ]
      },
      "fieldMeta": {
        "Executor": {
          "severity": "HIGH",
          "description": "Executing proposals is only open to all addresses if this resolves to the 0x0 address"
        }
      },
      "derivedName": "TimelockController",
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "address": "0x4970e361f6168a301D1036348d625A8930B1AaB7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x498C0c17e26EEEC63375A4A20Ba8A91Aa357CbcD",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ZkEvmVerifierV1",
      "address": "0x4b289E4A5331bAFBc6cCb2F10C39B8EDceCDb247",
      "type": "Contract",
      "sourceHashes": [
        "0xac7d02f7eaff4b15c79e0507b392db7e05fbf7f5f5a594a7b091a936d951bb3a"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1712907539,
      "sinceBlock": 19638087,
      "values": {
        "$immutable": true,
        "plonkVerifier": "0x2293cd12e8564e8219d314b075867c2f66ac6941"
      },
      "derivedName": "ZkEvmVerifierV1",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "PlonkVerifierV0",
      "address": "0x4B8Aa8A96078689384DAb49691E9bA51F9d2F9E1",
      "type": "Contract",
      "sourceHashes": [
        "0x29ee0fd7e29697f9960266e0f8fc2b84b927300952d489ee40ea3cff695bd819"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1696780751,
      "sinceBlock": 18306805,
      "values": { "$immutable": true },
      "derivedName": "",
      "references": [
        {
          "text": "Source Code",
          "href": "https://circuit-release.s3.us-west-2.amazonaws.com/release-v0.9.5/evm_verifier.yul"
        }
      ],
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "MultipleVersionRollupVerifier",
      "address": "0x4CEA3E866e7c57fD75CB0CA3E9F5f1151D4Ead3F",
      "type": "Contract",
      "template": "scroll/MultipleVersionRollupVerifier",
      "sourceHashes": [
        "0x6e45af76d6f6e2d8cc55ec530468293a0af33a8ab5e385883527a3330ff21ed6"
      ],
      "proxyType": "immutable",
      "description": "Contract used to update the verifier and keep track of current and old versions.",
      "sinceTimestamp": 1722833675,
      "sinceBlock": 20460107,
      "values": {
        "$immutable": true,
        "latestVerifier": [
          {
            "startBatchIndex": 0,
            "verifier": "0x585DfaD7bF4099E011D185E266907A8ab60DAD2D"
          },
          {
            "startBatchIndex": 0,
            "verifier": "0x4b289E4A5331bAFBc6cCb2F10C39B8EDceCDb247"
          },
          {
            "startBatchIndex": 0,
            "verifier": "0x63FB51C55d9605a75F8872C80De260a00fACfaA2"
          },
          {
            "startBatchIndex": 0,
            "verifier": "0x2d6e16d8e8a0C3Bc7750E774B108Ec39Ab0C18fB"
          },
          {
            "startBatchIndex": 0,
            "verifier": "0xCAECeE2E815e7f758c2477f900AFA14bDDce54B3"
          },
          {
            "startBatchIndex": 0,
            "verifier": "0x0112315Fa1c81c35ac9a477e161B52Ae4D1466B3"
          },
          {
            "startBatchIndex": 0,
            "verifier": "0x33996CC9EEe2dc20B10b8E57d313d0FacC7a0828"
          }
        ],
        "legacyVerifiersLength": [0, 0, 0, 0, 0, 0, 0],
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "verifierVersions": [0, 1, 2, 3, 4, 6, 7]
      },
      "derivedName": "MultipleVersionRollupVerifier",
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "L1MessageQueueV2",
      "address": "0x56971da63A3C0205184FEF096E9ddFc7A8C2D18a",
      "type": "Contract",
      "template": "scroll/L1MessageQueue",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x99f1e9baeea6fd1f7773c90a40e71adfcfd2e28d14a59208a79323b7e36281a0"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contains the array of queued L1 -> L2 messages, either appended using the L1ScrollMessenger or the EnforcedTxGateway.",
      "ignoreInWatchMode": [
        "getFirstUnfinalizedMessageEnqueueTime",
        "nextCrossDomainMessageIndex",
        "nextUnfinalizedQueueIndex"
      ],
      "sinceTimestamp": 1742476139,
      "sinceBlock": 22088276,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0xEfA158006b072793a49E622B26761cD0eC38591d",
        "$pastUpgrades": [
          [
            "2025-03-20T13:08:59.000Z",
            "0xa44917bb285df86b23937d2180e5e2d21d47407803736797bc8cdbaf59d8f256",
            ["0xFAf8f72e54d1089fa1882b6f597BfDFF59a8AFca"]
          ],
          [
            "2025-04-22T06:01:35.000Z",
            "0x2c09704f5717cd65e31ea854b8c6a5229b841fcabc5bcbbbb1117f13b9f60d21",
            ["0xEfA158006b072793a49E622B26761cD0eC38591d"]
          ]
        ],
        "$upgradeCount": 2,
        "enforcedTxGateway": "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d",
        "firstCrossDomainMessageIndex": 953885,
        "getFirstUnfinalizedMessageEnqueueTime": 1746095867,
        "messageQueueV1": "0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "nextCrossDomainMessageIndex": 954314,
        "nextUnfinalizedQueueIndex": 954311,
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "scrollChain": "0xa13BAF47339d63B743e7Da8741db5456DAc1E556",
        "systemConfig": "0x8432728A257646449245558B8b7Dbe51A16c7a4D"
      },
      "derivedName": "L1MessageQueueV2",
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "ZkEvmVerifierV0",
      "address": "0x585DfaD7bF4099E011D185E266907A8ab60DAD2D",
      "type": "Contract",
      "sourceHashes": [
        "0xac7d02f7eaff4b15c79e0507b392db7e05fbf7f5f5a594a7b091a936d951bb3a"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1696782311,
      "sinceBlock": 18306933,
      "values": {
        "$immutable": true,
        "plonkVerifier": "0x4B8Aa8A96078689384DAb49691E9bA51F9d2F9E1"
      },
      "derivedName": "ZkEvmVerifierV1",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "cts-Zellic",
      "address": "0x5a09A94eE8198D3c474d723337aa58023810022C",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1ERC721Gateway",
      "address": "0x6260aF48e8948617b8FA17F4e5CEa2d21D21554B",
      "type": "Contract",
      "template": "scroll/L1ERC721Gateway",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x2a543ae77e08fc2293b99836986b16db46b713eb958556cd1c95fcabce559b4b"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to bridge ERC721 tokens from L1 to L2.",
      "sinceTimestamp": 1696782323,
      "sinceBlock": 18306934,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0xd1841c5756428812233eEA78afC17cb2D3e392bb",
        "$pastUpgrades": [
          [
            "2023-10-08T16:25:23.000Z",
            "0x5cb06c63fb2583db9eba85a73ca794a9d36eace7f91925962b8cc97fd06b9b7d",
            ["0xDE3be7C2AA151D1E152DDfcBf0962FcDf5323DAe"]
          ],
          [
            "2024-02-22T08:20:23.000Z",
            "0xe378370b6bbc3d7f7278df88aa0e233b8f0fea3d77bef04593919b29d0094826",
            ["0xd1841c5756428812233eEA78afC17cb2D3e392bb"]
          ]
        ],
        "$upgradeCount": 2,
        "counterpart": "scr:0x7bC08E1c04fb41d75F1410363F0c5746Eae80582",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "L1ERC721Gateway",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "name": "ZkEvmVerifierV1-1",
      "address": "0x63FB51C55d9605a75F8872C80De260a00fACfaA2",
      "type": "Contract",
      "sourceHashes": [
        "0xac7d02f7eaff4b15c79e0507b392db7e05fbf7f5f5a594a7b091a936d951bb3a"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1719379451,
      "sinceBlock": 20173752,
      "values": {
        "$immutable": true,
        "plonkVerifier": "0x03a72B00D036C479105fF98A1953b15d9c510110"
      },
      "derivedName": "ZkEvmVerifierV1",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "wstETHescrowLido",
      "address": "0x6625C6332c9F91F2D27c304E729B86db87A3f504",
      "type": "Contract",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x255712204c1736d1d147513fc6d0ded282eb2cd0cff359e7710a06463935c260"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1696920503,
      "sinceBlock": 18318364,
      "values": {
        "$admin": "0xCC2C53556Bc75217cf698721b29071d6f12628A9",
        "$implementation": "0xF4f2066EE72D62e3caF9678459149BA7FCf2262F",
        "$pastUpgrades": [
          [
            "2023-10-10T06:48:23.000Z",
            "0xec5c25ea4b3e6d1dc9fa4cb7b7dd37a7a245a171cd3d16fb312628b5ecc9e841",
            ["0xBAd002fB13adFfcbCba57a4d4a43886f3F4C56cb"]
          ],
          [
            "2024-03-05T07:48:59.000Z",
            "0xd755174ba6bacec85b68b77c9ec2a8b966955746be59a6efa932f47c37dda482",
            ["0xF4f2066EE72D62e3caF9678459149BA7FCf2262F"]
          ]
        ],
        "$upgradeCount": 2,
        "counterpart": "scr:0x8aE8f22226B9d789A36AC81474e633f8bE2856c9",
        "DEPOSITS_DISABLER_ROLE": "0x63f736f21cb2943826cd50b191eb054ebbea670e4e962d0527611f830cd399d6",
        "DEPOSITS_ENABLER_ROLE": "0x4b43b36766bde12c5e9cbbc37d15f8d1f769f08f54720ab370faeb4ce893753a",
        "isDepositsEnabled": true,
        "isWithdrawalsEnabled": true,
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6",
        "WITHDRAWALS_DISABLER_ROLE": "0x94a954c0bc99227eddbc0715a62a7e1056ed8784cd719c2303b685683908857c",
        "WITHDRAWALS_ENABLER_ROLE": "0x9ab8816a3dc0b3849ec1ac00483f6ec815b07eee2fd766a353311c823ad59d0d"
      },
      "derivedName": "L1LidoGateway",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "External Bridges", "priority": 1 }
    },
    {
      "address": "0x6626593C237f530D15aE9980A95ef938Ac15c35c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "DaiEscrow",
      "address": "0x67260A8B73C5B77B55c1805218A42A7A6F98F515",
      "type": "Contract",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x5d09a2c78d20d4e9f61774a32aa4da8e74be21a247188625d5eeffdac11e5eb4"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1696920095,
      "sinceBlock": 18318330,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0xBAd002fB13adFfcbCba57a4d4a43886f3F4C56cb",
        "$pastUpgrades": [
          [
            "2023-10-10T06:41:35.000Z",
            "0x9776779beb429ea826a81a8c1c5f782933bfc8ce568afa1c6f2c2b866be2a3a5",
            ["0xBAd002fB13adFfcbCba57a4d4a43886f3F4C56cb"]
          ]
        ],
        "$upgradeCount": 1,
        "counterpart": "scr:0xaC78dff3A87b5b534e366A93E785a0ce8fA6Cc62",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
      },
      "derivedName": "L1CustomERC20Gateway",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "External Bridges", "priority": 1 }
    },
    {
      "name": "L1ScrollMessenger",
      "address": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
      "type": "Contract",
      "template": "scroll/L1ScrollMessenger",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x0a1aa34da20ecb18034b84d08a6f6c0a3b5f5b865aaf9fbd37ef7c766dfdc5a8"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to send L1 -> L2 and relay messages from L2. It allows to replay failed messages and to drop skipped messages. L1 -> L2 messages sent using this contract pay for L2 gas on L1 and will have the aliased address of this contract as the sender.",
      "sinceTimestamp": 1696782323,
      "sinceBlock": 18306934,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0x84791281EF5cb8Af5dCd4c122f7A42FeD38Fef5b",
        "$pastUpgrades": [
          [
            "2023-10-08T16:25:23.000Z",
            "0xcad9f31340db6aca3a5da0d704ee33a9b6c43a5b1be4406cc0ed33edbdd7c92e",
            ["0xAf2F898a8680cb52766ABE0588ebe6b9bFe37845"]
          ],
          [
            "2024-02-22T08:20:23.000Z",
            "0xe378370b6bbc3d7f7278df88aa0e233b8f0fea3d77bef04593919b29d0094826",
            ["0x72981fD00087fF4F60aBFdE9f353cB1912A37fb6"]
          ],
          [
            "2025-04-22T06:01:35.000Z",
            "0x2c09704f5717cd65e31ea854b8c6a5229b841fcabc5bcbbbb1117f13b9f60d21",
            ["0xc6326109E33465d6d61e4Cb7AFCe7B1bE7cfF868"]
          ],
          [
            "2025-04-25T07:06:59.000Z",
            "0x783703d4e94de48edb75261149a540cbf7abb7ef077865c11080e622a508ab86",
            ["0x84791281EF5cb8Af5dCd4c122f7A42FeD38Fef5b"]
          ]
        ],
        "$upgradeCount": 4,
        "counterpart": "scr:0x781e90f1c8Fc4611c9b7497C3B47F99Ef6969CbC",
        "enforcedTxGateway": "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d",
        "feeVault": "0x8FA3b4570B4C96f8036C13b64971BA65867eEB48",
        "maxReplayTimes": 3,
        "messageQueueV1": "0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B",
        "messageQueueV2": "0x56971da63A3C0205184FEF096E9ddFc7A8C2D18a",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "paused": false,
        "rollup": "0xa13BAF47339d63B743e7Da8741db5456DAc1E556",
        "xDomainMessageSender": "scr:0x0000000000000000000000000000000000000001"
      },
      "derivedName": "L1ScrollMessenger",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "address": "0x68bA95fb5108CFFd9608e8d9d54320acC531Ebe3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Safe",
      "address": "0x69C2eD64171bF5737c2B78bdF722e68a032B2825",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1732150523,
      "sinceBlock": 21232661,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0xc8B6bF89877337188Ea84eA93547687225389553",
          "0x498C0c17e26EEEC63375A4A20Ba8A91Aa357CbcD",
          "0x5a09A94eE8198D3c474d723337aa58023810022C"
        ],
        "$threshold": 1,
        "domainSeparator": "0x23d77ea1edce90078514179b2a43766c249b43fb6383b8a295a6d201bad7e0ad",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 3 (33%)",
        "nonce": 4,
        "VERSION": "1.4.1"
      },
      "derivedName": "Safe",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x6F166508d423169A3C7cb3e7856Ba4bf9Fb2cCed",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x6F9D816c4ec365Fe8Fc6898c785Be0E2D51bEC2c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x70DFdAE47E29D2C40EE58Cefa7379588B421a86d",
      "type": "EOA",
      "proxyType": "EOA",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "EnforcedTxGateway",
      "address": "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d",
      "type": "Contract",
      "template": "scroll/EnforcedTxGateway",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x7e017c785ff8a5c9fce815594b0d7e7ced85dbc125ae000cd7babf1cfaefabf9"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contracts to force L1 -> L2 messages with the proper sender.",
      "sinceTimestamp": 1696782323,
      "sinceBlock": 18306934,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0x7e87c75BBe7991bbCEBd2C7a56f4cFC923BDDBcc",
        "$pastUpgrades": [
          [
            "2023-10-08T16:25:23.000Z",
            "0xd2e3c3d2839a35492419c5a1ae863e7a23d963cb4853c59e8e20832e0ee4ed3e",
            ["0x642af405bF64660665B37977449C9C536B806318"]
          ],
          [
            "2025-04-22T06:01:35.000Z",
            "0x2c09704f5717cd65e31ea854b8c6a5229b841fcabc5bcbbbb1117f13b9f60d21",
            ["0x7e87c75BBe7991bbCEBd2C7a56f4cFC923BDDBcc"]
          ]
        ],
        "$upgradeCount": 2,
        "DOMAIN_SEPARATOR": "0x4ba6355a403460269233dc486e88f1f91f64c2c97dc065c7ee1782de423fd902",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "EnforcedTxGateway",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "feeVault": "0x8FA3b4570B4C96f8036C13b64971BA65867eEB48",
        "messageQueue": "0x56971da63A3C0205184FEF096E9ddFc7A8C2D18a",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "paused": false
      },
      "fieldMeta": {
        "paused": {
          "severity": "HIGH",
          "description": "Whether the sendTransaction function is paused or not. Affects the sequencer failure risk."
        }
      },
      "derivedName": "EnforcedTxGateway",
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "address": "0x74b286304576625557629C47E9E8702383D9eF92",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x7742637569CE1dd9AA9F4F91EaAc7c028C5e1f4d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ScrollOwner",
      "address": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
      "type": "Contract",
      "template": "scroll/ScrollOwner",
      "sourceHashes": [
        "0x92fd37cca83c3ecf2b4b1343a3287484d39591016bdd853e572e12c286c0d952"
      ],
      "proxyType": "immutable",
      "description": "Owner of all contracts in the system. It implements an extension of AccessControl that manages roles and functions allowed to be called by each role.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
        },
        {
          "permission": "interact",
          "from": "0x8432728A257646449245558B8b7Dbe51A16c7a4D",
          "description": "update the minimum delay message queue parameters and enforced mode parameters."
        }
      ],
      "sinceTimestamp": 1696782479,
      "sinceBlock": 18306947,
      "values": {
        "$immutable": true,
        "accessControl": {
          "roles": {
            "DEFAULT_ADMIN_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": ["0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd"]
            },
            "SECURITY_COUNCIL_NO_DELAY_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": ["0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44"]
            },
            "SCROLL_MULTISIG_NO_DELAY_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": []
            },
            "EMERGENCY_MULTISIG_NO_DELAY_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": []
            },
            "TIMELOCK_1DAY_DELAY_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": []
            },
            "TIMELOCK_7DAY_DELAY_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": []
            },
            "emergency-nodelay": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": ["0x826714adD4dDA2b8750794A467C892c0Cd49216b"]
            },
            "ops-fast": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": ["0x0e58939204eEDa84F796FBc86840A50af10eC4F4"]
            }
          },
          "targets": {
            "0xEB803eb3F501998126bf37bB823646Ed3D59d072": {
              "upgrade(address,address)": ["SECURITY_COUNCIL_NO_DELAY_ROLE"],
              "upgradeAndCall(address,address,bytes)": [
                "SECURITY_COUNCIL_NO_DELAY_ROLE"
              ]
            },
            "0x4CEA3E866e7c57fD75CB0CA3E9F5f1151D4Ead3F": {
              "updateVerifier(uint256,uint64,address)": [
                "SECURITY_COUNCIL_NO_DELAY_ROLE"
              ]
            },
            "0xa13BAF47339d63B743e7Da8741db5456DAc1E556": {
              "removeSequencer(address)": ["emergency-nodelay"],
              "removeProver(address)": ["emergency-nodelay"],
              "setPause(bool)": ["emergency-nodelay"],
              "addSequencer(address)": ["ops-fast"],
              "addProver(address)": ["ops-fast"],
              "updateMaxNumTxInChunk(uint256)": ["ops-fast"],
              "revertBatch(bytes)": ["emergency-nodelay"],
              "disableEnforcedBatchMode()": ["SECURITY_COUNCIL_NO_DELAY_ROLE"]
            },
            "0x259204DDd2bA29bD9b1B9A5c9B093f73d7EAcf37": {
              "updateWhitelistStatus(address[],bool)": ["emergency-nodelay"]
            },
            "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367": {
              "setPause(bool)": ["emergency-nodelay"],
              "updateFeeVault(address)": ["ops-fast"],
              "updateMaxReplayTimes(uint256)": ["ops-fast"]
            },
            "0xf1AF3b23DE0A5Ca3CAb7261cb0061C0D779A5c7B": {
              "pauseDeposit(bool)": ["emergency-nodelay"],
              "pauseWithdraw(bool)": ["emergency-nodelay"],
              "updateCircleCaller(address)": ["ops-fast"]
            },
            "0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B": {
              "updateMaxGasLimit(uint256)": ["ops-fast"]
            },
            "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6": {
              "setERC20Gateway(address[],address[])": ["ops-fast"]
            },
            "0xb2b10a289A229415a124EFDeF310C10cb004B6ff": {
              "updateTokenMapping(address,address)": ["ops-fast"]
            },
            "0x6260aF48e8948617b8FA17F4e5CEa2d21D21554B": {
              "updateTokenMapping(address,address)": ["ops-fast"]
            },
            "0xb94f7F6ABcb811c5Ac709dE14E37590fcCd975B6": {
              "updateTokenMapping(address,address)": ["ops-fast"]
            },
            "0x5Bcfd99c34cf7E06fc756f6f5aE7400504852bc4": {
              "setBatchConfig(address,(uint96,uint96,uint16,uint24,uint24))": [
                "ops-fast"
              ],
              "grantRole(bytes32,address)": ["ops-fast"],
              "revokeRole(bytes32,address)": ["ops-fast"]
            },
            "0x8432728A257646449245558B8b7Dbe51A16c7a4D": {
              "updateMessageQueueParameters((uint32,uint112,uint112))": [
                "ops-fast"
              ],
              "updateEnforcedBatchParameters((uint24,uint24))": ["ops-fast"],
              "updateSigner(address)": ["emergency-nodelay"]
            },
            "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d": {
              "setPause(bool)": ["emergency-nodelay"]
            }
          }
        },
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "opsFast": ["0x0e58939204eEDa84F796FBc86840A50af10eC4F4"],
        "opsNoDelay": ["0x826714adD4dDA2b8750794A467C892c0Cd49216b"],
        "scNoDelay": ["0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44"]
      },
      "derivedName": "ScrollOwner",
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "L1WETHGateway",
      "address": "0x7AC440cAe8EB6328de4fA621163a792c1EA9D4fE",
      "type": "Contract",
      "template": "scroll/L1WETHGateway",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xb90cab5924c6894e3047536242125cdface40857b9c70a6551210bc6de166b42"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to bridge WETH from L1 to L2.",
      "sinceTimestamp": 1696782323,
      "sinceBlock": 18306934,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0xa4F400593DFfc0ae02F940ab58f6e3Cc6fb9FB49",
        "$pastUpgrades": [
          [
            "2023-10-08T16:25:23.000Z",
            "0x0f1df3c211e6b201b0bb0cc41c87c2fbb36683f2a24080d935ffdc587723c033",
            ["0xd3c42158682D55E082EaBe08a29F7515A97cA307"]
          ],
          [
            "2024-02-22T08:20:23.000Z",
            "0xe378370b6bbc3d7f7278df88aa0e233b8f0fea3d77bef04593919b29d0094826",
            ["0xa4F400593DFfc0ae02F940ab58f6e3Cc6fb9FB49"]
          ]
        ],
        "$upgradeCount": 2,
        "counterpart": "scr:0x7003E7B7186f0E6601203b99F7B8DECBfA391cf9",
        "l2WETH": "scr:0x5300000000000000000000000000000000000004",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
      },
      "derivedName": "L1WETHGateway",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "External Bridges", "priority": 1 }
    },
    {
      "name": "L1ETHGateway",
      "address": "0x7F2b8C31F88B6006c382775eea88297Ec1e3E905",
      "type": "Contract",
      "template": "scroll/L1ETHGateway",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xa874514fbf17dc321480a8270dcdc3a5a0d9b8e37ff5de1187df641cd4a2f6e4"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to bridge ETH from L1 to L2.",
      "sinceTimestamp": 1696782323,
      "sinceBlock": 18306934,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0x546E0bF31FB6e7babD493452e4e6999191367B42",
        "$pastUpgrades": [
          [
            "2023-10-08T16:25:23.000Z",
            "0xbd63d1902c6343a9cdb81aa8944621690e4dd62a82640fded7f7c3d969e3647a",
            ["0x1fcbE079c4Bbab37406daB7Dfd35AcAe37D5C55d"]
          ],
          [
            "2024-02-22T08:20:23.000Z",
            "0xe378370b6bbc3d7f7278df88aa0e233b8f0fea3d77bef04593919b29d0094826",
            ["0x546E0bF31FB6e7babD493452e4e6999191367B42"]
          ]
        ],
        "$upgradeCount": 2,
        "counterpart": "scr:0x6EA73e05AdC79974B931123675ea8F78FfdacDF0",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
      },
      "derivedName": "L1ETHGateway",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "name": "TimelockEmergency",
      "address": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
      "type": "Contract",
      "template": "scroll/L1Timelock",
      "sourceHashes": [
        "0x9dd794c91c0c92b8b8129a7c4d61c361b75602f161dc7b58f5908edafb920049"
      ],
      "proxyType": "immutable",
      "description": "A timelock with access control. The current minimum delay is 0s. Proposals that passed their minimum delay can be executed by the anyone.",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "pause the L1 -> L2 messenger and enforced transaction mode."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "remove permissioned batchers and provers to the whitelist, and update the sequencer address."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "revert unfinalized batches."
        },
        {
          "permission": "interact",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "description": "update the minimum delay and manage all access control roles of the timelock."
        }
      ],
      "sinceTimestamp": 1730294447,
      "sinceBlock": 21078719,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
              "0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc"]
          }
        },
        "Canceller": ["0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc"],
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "Executor": ["0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f"],
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 0,
        "getMinDelayFormatted": "0s",
        "Proposer": ["0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc"],
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5",
        "timelockAdminAC": [
          "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc"
        ]
      },
      "fieldMeta": {
        "Executor": {
          "severity": "HIGH",
          "description": "Executing proposals is only open to all addresses if this resolves to the 0x0 address"
        }
      },
      "derivedName": "TimelockController",
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "name": "SystemConfig",
      "address": "0x8432728A257646449245558B8b7Dbe51A16c7a4D",
      "type": "Contract",
      "template": "scroll/SystemConfig",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xc6b44b4f580a4675d79b547ed6eef62882f9be3e0c86e18360e9ba5ead33755a"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "System configuration contract for Scroll, contains enforcedBatchParameters and messageQueueParameters determining permissionless mode.",
      "sinceTimestamp": 1742476115,
      "sinceBlock": 22088274,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0x6A124779fDf107c3F6BcB992731dCAaD09f2276A",
        "$pastUpgrades": [
          [
            "2025-03-20T13:08:35.000Z",
            "0x693533d50e553bb88df2025b2f294549a13cc6ed266de233429ac8742314c77a",
            ["0xFAf8f72e54d1089fa1882b6f597BfDFF59a8AFca"]
          ],
          [
            "2025-04-22T06:01:35.000Z",
            "0x2c09704f5717cd65e31ea854b8c6a5229b841fcabc5bcbbbb1117f13b9f60d21",
            ["0x6A124779fDf107c3F6BcB992731dCAaD09f2276A"]
          ]
        ],
        "$upgradeCount": 2,
        "enforcedBatchParameters": {
          "maxDelayEnterEnforcedMode": 604800,
          "maxDelayMessageQueue": 604800
        },
        "getSigner": "0xD83C4892BB5aA241B63d8C4C134920111E142A20",
        "messageQueueParameters": {
          "maxGasLimit": 10000000,
          "baseFeeOverhead": 15680000,
          "baseFeeScalar": 34000000000000
        },
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6"
      },
      "derivedName": "SystemConfig",
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "address": "0x8460aCc9A42D2CF07015a3e838df2E3aB37d30ae",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "PlonkVerifierV2",
      "address": "0x8759E83b6570A0bA46c3CE7eB359F354F816c9a9",
      "type": "Contract",
      "sourceHashes": [
        "0x438a888895bdfdd405a223087c58ce76dcd866a0c5e208b94c63e83922724cb3"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1722833027,
      "sinceBlock": 20460053,
      "values": { "$immutable": true },
      "derivedName": "",
      "references": [
        {
          "text": "Source Code",
          "href": "https://github.com/scroll-tech/scroll-prover/blob/main/release-v0.12.0/evm_verifier.yul"
        }
      ],
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x8BBf9D47752fED1437Bb0EC7Ac4A2fAc2164F424",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "PlonkVerifierV2-1",
      "address": "0x8c1b52757b5c571ADcB5572E992679d4D48e30f7",
      "type": "Contract",
      "sourceHashes": [
        "0xdd6da115b0a4c879746bcca2a71fa1daa79f7e3a074369d9246f614b327e9322"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1724898419,
      "sinceBlock": 20631259,
      "values": { "$immutable": true },
      "derivedName": "",
      "references": [
        {
          "text": "Source Code",
          "href": "https://github.com/scroll-tech/scroll-prover/blob/main/release-v0.13.0/evm_verifier.yul"
        }
      ],
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "Safe",
      "address": "0x8edC4EADEE120d4C51923c515e7C3241c815C2BC",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1728588635,
      "sinceBlock": 20937315,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0xe515cD19E8a67BF367a1d20dA6f21035913a2897",
          "0xaFb4c32eCb8e4a86363a2fb2Fa27982fbd21ac32",
          "0x6F166508d423169A3C7cb3e7856Ba4bf9Fb2cCed"
        ],
        "$threshold": 2,
        "domainSeparator": "0x1a6c7cd52b11a6b02d030bc80bb72130a37ace50df179be7979796fa1eeff879",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 5,
        "VERSION": "1.4.1"
      },
      "derivedName": "Safe",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "Scroll Multisig 4",
      "address": "0x8FA3b4570B4C96f8036C13b64971BA65867eEB48",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1696661975,
      "sinceBlock": 18296974,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x0c5cc5155b346453154059aD9d2Ff695dB92f774",
          "0xFcf1f182FC79047d99e5db0d7113c0EfE2EC9402",
          "0x9337B41709c1C2B938Cb460ea3fA9DB586B172E0",
          "0xfc31892C5500AbE00974280b28907BaA9190E384"
        ],
        "$threshold": 2,
        "domainSeparator": "0x6de3852a7023a7bbf3cfe5ef762e1a4e088df670ad27867cbaecde81a0061a94",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 4 (50%)",
        "nonce": 43,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x9106372987a14400F283bc1AfC122A57130c18a3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x9337B41709c1C2B938Cb460ea3fA9DB586B172E0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x93738D2aD25678BAE4F467FFad2c5a4C4c79658a",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Safe",
      "address": "0x9479ABfebefEea3c846163012a472b44F305b3d7",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1730285903,
      "sinceBlock": 21078008,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0x8BBf9D47752fED1437Bb0EC7Ac4A2fAc2164F424",
          "0xc1985e3712b33a5303e097e9CeD22E91338ba64d"
        ],
        "$threshold": 1,
        "domainSeparator": "0x2237591027657c9b15484196dcf8ac4d4430f91dd64e725d7b5b07fe4312ddd8",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 2 (50%)",
        "nonce": 4,
        "VERSION": "1.4.1"
      },
      "derivedName": "Safe",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x9B2C2Bc80C209c9C5D7f26F57b1Bb3B1699281D4",
      "type": "EOA",
      "proxyType": "EOA",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "PlonkVerifierPostEuclid-2",
      "address": "0x9F66505cB1626D06B50EF2597f41De6686e8f79a",
      "type": "Contract",
      "sourceHashes": [
        "0x9c0d03d74376d16f2c9a220788c40085cec0fe424187af4e2154464ba928b36a"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1745397191,
      "sinceBlock": 22330533,
      "values": { "$immutable": true },
      "derivedName": "",
      "references": [
        {
          "text": "Source Code",
          "href": "https://circuit-release.s3.us-west-2.amazonaws.com/scroll-zkvm/releases/0.3.0/bundle/verifier.bin"
        }
      ]
    },
    {
      "name": "pufETHEscrow",
      "address": "0xA033Ff09f2da45f0e9ae495f525363722Df42b2a",
      "type": "Contract",
      "template": "scroll/L1CustomERC20Gateway",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xe564c04903b37a6ee36ca18aeb567c15ce70fe0a8022621e7c93c833bc2fbbf3"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to bridge ERC20 tokens from L1 to L2. It allows to change the token mappings.",
      "sinceTimestamp": 1713173507,
      "sinceBlock": 19660037,
      "values": {
        "$admin": "0x9eBf2f33526CD571f8b2ad312492cb650870CFd6",
        "$implementation": "0x08D77Ea90DB9BF6c0d3f66E6b8394DA2E81B9a03",
        "$pastUpgrades": [
          [
            "2024-04-15T09:31:47.000Z",
            "0xa2ff9275d6280e3cc298653463c5d8423c44cfbc66a52a9a138becbb106dc0f8",
            ["0xc4d46E8402F476F269c379677C99F18E22Ea030e"]
          ],
          [
            "2024-04-15T09:31:47.000Z",
            "0xe03abd155a10591ed1fa4a1e2ad0d6042549bfd67769dbf6bd66d25743950905",
            ["0x08D77Ea90DB9BF6c0d3f66E6b8394DA2E81B9a03"]
          ],
          [
            "2024-04-15T09:31:47.000Z",
            "0xb367f770c26a72ea837a51c2c1fc84a3396914db1d58c020177b207e0f876a79",
            ["0x08D77Ea90DB9BF6c0d3f66E6b8394DA2E81B9a03"]
          ]
        ],
        "$upgradeCount": 3,
        "counterpart": "scr:0x9eBf2f33526CD571f8b2ad312492cb650870CFd6",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x9eBf2f33526CD571f8b2ad312492cb650870CFd6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
      },
      "derivedName": "L1CustomERC20Gateway",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "name": "ScrollChain",
      "address": "0xa13BAF47339d63B743e7Da8741db5456DAc1E556",
      "type": "Contract",
      "template": "scroll/ScrollChain",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x73386ff4d9fbaf9cba78ae1e91ee43f11ff39acb8bcf332085ec42d7da6c2306"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main contract of the Scroll chain. Allows to post transaction data and state roots, along with proofs. Sequencing and proposing are behind a whitelist unless enforcedBatchMode is activated.",
      "ignoreInWatchMode": ["miscData", "lastFinalizedBatchIndex"],
      "sinceTimestamp": 1696782323,
      "sinceBlock": 18306934,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0xb7c8833F5627a8a12558cAFa0d0EBD1ACBDce43f",
        "$pastUpgrades": [
          [
            "2023-10-08T16:25:23.000Z",
            "0xecc94033ca66ea9068acde109b0c9e3c539191645916a35952bb6d9fd2be3a02",
            ["0x2E07f0FBA71709bb5e1f045b02152E45B451D75f"]
          ],
          [
            "2024-02-22T08:20:23.000Z",
            "0xe378370b6bbc3d7f7278df88aa0e233b8f0fea3d77bef04593919b29d0094826",
            ["0xFA148514d03420b7b1a13eC74da06D2Ca875539C"]
          ],
          [
            "2024-04-28T22:06:35.000Z",
            "0x6eb161ed649cf22771e586a8546eec157717e2dec4c871e7ad4e4d2c5c59a905",
            ["0xaa6d0F2490AC3957B97e11afEC6F0f250593CaC8"]
          ],
          [
            "2024-07-02T10:10:47.000Z",
            "0x87f533704b3cdac75c20bbdcd202a97ee62075c188ccea27ab7ff494cdeea247",
            ["0x4F250B05262240C787a1eE222687C6eC395C628A"]
          ],
          [
            "2024-08-20T23:36:35.000Z",
            "0x3928e0223337a112ea68c84db95441185a3e1da809638be13c0135761aa19ee7",
            ["0x9bB163401E8C72573854c4Cd968aFA7A7b02D25f"]
          ],
          [
            "2025-04-15T14:47:23.000Z",
            "0xa1faad1ccd2c390641b46d50d93c26b7369137f021e528acfec78385494b2fb0",
            ["0x8f339292d2b3909574B2bEB051a613a987dB538f"]
          ],
          [
            "2025-04-22T06:01:35.000Z",
            "0x2c09704f5717cd65e31ea854b8c6a5229b841fcabc5bcbbbb1117f13b9f60d21",
            ["0xb7c8833F5627a8a12558cAFa0d0EBD1ACBDce43f"]
          ]
        ],
        "$upgradeCount": 7,
        "initialEuclidBatchIndex": 357915,
        "isEnforcedModeEnabled": false,
        "lastFinalizedBatchIndex": 358685,
        "layer2ChainId": 534352,
        "maxNumTxInChunk": 100,
        "messageQueueV1": "0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B",
        "messageQueueV2": "0x56971da63A3C0205184FEF096E9ddFc7A8C2D18a",
        "miscData": {
          "lastCommittedBatchIndex": 358691,
          "lastFinalizedBatchIndex": 358685,
          "lastFinalizeTimestamp": 1746102359,
          "flags": 1,
          "reserved": 0
        },
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "paused": false,
        "provers": [
          "0x6F9D816c4ec365Fe8Fc6898c785Be0E2D51bEC2c",
          "0x74b286304576625557629C47E9E8702383D9eF92"
        ],
        "revertedBatches": [
          275119, 275120, 275121, 275122, 275123, 275124, 275125, 275126,
          275127, 275128, 275129, 275130, 275131, 275132, 275133, 275134,
          275135, 275136, 275137, 275138, 275139, 275140, 275141, 275142,
          275143, 275144, 275145, 275146, 275147, 275148, 275149, 275150,
          275151, 275152, 275153, 275154, 275155, 275156, 275157, 275158,
          275159, 275160, 275161, 275162, 275163, 275164, 275165, 275166,
          275167, 275168, 275169, 275170, 275171, 275172, 275173, 346818,
          346817, 346816, 346815
        ],
        "sequencers": [
          "0x054a47B9E2a22aF6c0CE55020238C8FEcd7d334B",
          "0xE514A8aE91d164C6Fb48a7DE336e10C34AF4e858"
        ],
        "systemConfig": "0x8432728A257646449245558B8b7Dbe51A16c7a4D",
        "verifier": "0x4CEA3E866e7c57fD75CB0CA3E9F5f1151D4Ead3F"
      },
      "derivedName": "ScrollChain",
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "address": "0xa28b7D23e9F8D8d5346A7901ecC9eC8ea48bAEcD",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xaFb4c32eCb8e4a86363a2fb2Fa27982fbd21ac32",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xb01474b50382fAe1A847E3A916ECDf07Ba57BcC7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1CustomERC20Gateway",
      "address": "0xb2b10a289A229415a124EFDeF310C10cb004B6ff",
      "type": "Contract",
      "template": "scroll/L1CustomERC20Gateway",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xe564c04903b37a6ee36ca18aeb567c15ce70fe0a8022621e7c93c833bc2fbbf3"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to bridge ERC20 tokens from L1 to L2. It allows to change the token mappings.",
      "sinceTimestamp": 1696782323,
      "sinceBlock": 18306934,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0x7F512E2E9dfC4552941D99A5b2405BBcF5781C2c",
        "$pastUpgrades": [
          [
            "2023-10-08T16:25:23.000Z",
            "0x12f874f5ca5a8dbdc5162db5179a4e4b753f4fcff8dab3f416bd1ce707ecb9ff",
            ["0xBAd002fB13adFfcbCba57a4d4a43886f3F4C56cb"]
          ],
          [
            "2024-02-22T08:20:23.000Z",
            "0xe378370b6bbc3d7f7278df88aa0e233b8f0fea3d77bef04593919b29d0094826",
            ["0x7F512E2E9dfC4552941D99A5b2405BBcF5781C2c"]
          ]
        ],
        "$upgradeCount": 2,
        "counterpart": "scr:0x64CCBE37c9A82D85A1F2E74649b7A42923067988",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
      },
      "derivedName": "L1CustomERC20Gateway",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "0xb3dd2CA3F575FCDd79F5Cd45c5a6c9db860F3E4d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1ERC1155Gateway",
      "address": "0xb94f7F6ABcb811c5Ac709dE14E37590fcCd975B6",
      "type": "Contract",
      "template": "scroll/L1ERC1155Gateway",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x35e9a9e7a691f357e642a73662c88a202224b73a44fc022f833ccc8aff9a4a64"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to bridge ERC1155 tokens from L1 to L2.",
      "sinceTimestamp": 1696782323,
      "sinceBlock": 18306934,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0x244BF7aEf29F03916569470a51fA0794B62F8cd7",
        "$pastUpgrades": [
          [
            "2023-10-08T16:25:23.000Z",
            "0xe6cabeddb49c286b33e0e6d4a43af76e1a2108ac9fc91afb508a5ea86a8fc646",
            ["0xCb4638620E4C6DeCef26374e71b0dd4871863593"]
          ],
          [
            "2024-02-22T08:20:23.000Z",
            "0xe378370b6bbc3d7f7278df88aa0e233b8f0fea3d77bef04593919b29d0094826",
            ["0x244BF7aEf29F03916569470a51fA0794B62F8cd7"]
          ]
        ],
        "$upgradeCount": 2,
        "counterpart": "scr:0x62597Cc19703aF10B58feF87B0d5D29eFE263bcc",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "L1ERC1155Gateway",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "0xbB2491beFBd46CF26F7e9B9Dec16E0c31f9c5ae3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Scroll Multisig 2",
      "address": "0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "pause the L1 -> L2 messenger and enforced transaction mode.",
          "via": [{ "address": "0x826714adD4dDA2b8750794A467C892c0Cd49216b" }]
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "remove permissioned batchers and provers to the whitelist, and update the sequencer address.",
          "via": [{ "address": "0x826714adD4dDA2b8750794A467C892c0Cd49216b" }]
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "revert unfinalized batches.",
          "via": [{ "address": "0x826714adD4dDA2b8750794A467C892c0Cd49216b" }]
        },
        {
          "permission": "interact",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "description": "cancel queued transactions."
        },
        {
          "permission": "interact",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "description": "propose transactions."
        },
        {
          "permission": "interact",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "description": "update the minimum delay and manage all access control roles of the timelock.",
          "via": [{ "address": "0x826714adD4dDA2b8750794A467C892c0Cd49216b" }]
        },
        {
          "permission": "interact",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "description": "update the minimum delay and manage all access control roles of the timelock."
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1696661411,
      "sinceBlock": 18296928,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x0c5cc5155b346453154059aD9d2Ff695dB92f774",
          "0xEe9bb388d320F4305af6a4a1a70c862D3F4d0D5B",
          "0xFcf1f182FC79047d99e5db0d7113c0EfE2EC9402",
          "0x26eceC198AdC0be598311bAe8EDfd4eEa47A56c5"
        ],
        "$threshold": 2,
        "domainSeparator": "0x7fefd60c480c008b3e78bd9438ded85b15722eff470797839b69ed8f36a54f6b",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 4 (50%)",
        "nonce": 157,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "address": "0xc1985e3712b33a5303e097e9CeD22E91338ba64d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Safe",
      "address": "0xC3eA7C657884BB380B66D79C36aDCb5658b01896",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1730932211,
      "sinceBlock": 21131603,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": ["0x68bA95fb5108CFFd9608e8d9d54320acC531Ebe3"],
        "$threshold": 1,
        "domainSeparator": "0x39201641d4b5a7a5a40632f58a3d45af4cc0a066f75c6c00d871b7bf9a4fe884",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 6,
        "VERSION": "1.4.1"
      },
      "derivedName": "Safe",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0xc8B6bF89877337188Ea84eA93547687225389553",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ZkEvmVerifierV2-1",
      "address": "0xCAECeE2E815e7f758c2477f900AFA14bDDce54B3",
      "type": "Contract",
      "sourceHashes": [
        "0xa3e375ce1143ce7410edcfff2fbfa0ee90c06ef0710c4f11af9533ca40cdbb61"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1724898431,
      "sinceBlock": 20631260,
      "values": {
        "$immutable": true,
        "plonkVerifier": "0x8c1b52757b5c571ADcB5572E992679d4D48e30f7",
        "verifierDigest": "0x0a1904dbfff4614fb090b4b3864af4874f12680c32f07889e9ede8665097e5ec"
      },
      "derivedName": "ZkEvmVerifierV2",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "PlonkVerifierPostEuclid",
      "address": "0xd1638c0C7Bd6bf49D655D855d353aC8b4f949582",
      "type": "Contract",
      "unverified": true,
      "proxyType": "immutable",
      "sinceTimestamp": 1743130487,
      "sinceBlock": 22142558,
      "values": { "$immutable": true },
      "derivedName": "",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0xd33b8405635fE0Bd91aD1483778Bc5c053D8177f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xD83C4892BB5aA241B63d8C4C134920111E142A20",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1StandardERC20Gateway",
      "address": "0xD8A791fE2bE73eb6E6cF1eb0cb3F36adC9B3F8f9",
      "type": "Contract",
      "template": "scroll/L1StandardERC20Gateway",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x93fe70d828e5646f5acb7768083ab2e5b9cfb5b6691a5dff48ff3c188ffd05a7"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to bridge ERC20 tokens from L1 to L2. It uses a fixed token list.",
      "sinceTimestamp": 1696782323,
      "sinceBlock": 18306934,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0x4015Fc868C06689ABEba4a9dC8FA43B804F6239c",
        "$pastUpgrades": [
          [
            "2023-10-08T16:25:23.000Z",
            "0x85d366c40632340d9e835fdd0a1646909a56d60c680373f15f9d36878ff13029",
            ["0x9218732389D80f9b8723C3f32a38865B7a63564A"]
          ],
          [
            "2024-02-22T08:20:23.000Z",
            "0xe378370b6bbc3d7f7278df88aa0e233b8f0fea3d77bef04593919b29d0094826",
            ["0x4015Fc868C06689ABEba4a9dC8FA43B804F6239c"]
          ]
        ],
        "$upgradeCount": 2,
        "counterpart": "scr:0xE2b4795039517653c5Ae8C2A9BFdd783b48f447A",
        "l2TokenFactory": "scr:0x66e5312EDeEAef6e80759A0F789e7914Fb401484",
        "l2TokenImplementation": "scr:0xC7d86908ccf644Db7C69437D5852CedBC1aD3f69",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
      },
      "derivedName": "L1StandardERC20Gateway",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "0xDD659911EcBD4458db07Ee7cDdeC79bf8F859AbC",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xE47D966E2c7e94fC20ffAf5119d1926381C40f2a",
      "type": "EOA",
      "proxyType": "EOA",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0xE514A8aE91d164C6Fb48a7DE336e10C34AF4e858",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xe515cD19E8a67BF367a1d20dA6f21035913a2897",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x68f689a23d3badd91255602a1eb13d4789baedc16d904c3103244642fc78ca8f"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x56971da63A3C0205184FEF096E9ddFc7A8C2D18a"
        },
        {
          "permission": "upgrade",
          "from": "0x6260aF48e8948617b8FA17F4e5CEa2d21D21554B"
        },
        {
          "permission": "upgrade",
          "from": "0x67260A8B73C5B77B55c1805218A42A7A6F98F515"
        },
        {
          "permission": "upgrade",
          "from": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367"
        },
        {
          "permission": "upgrade",
          "from": "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d"
        },
        {
          "permission": "upgrade",
          "from": "0x7AC440cAe8EB6328de4fA621163a792c1EA9D4fE"
        },
        {
          "permission": "upgrade",
          "from": "0x7F2b8C31F88B6006c382775eea88297Ec1e3E905"
        },
        {
          "permission": "upgrade",
          "from": "0x8432728A257646449245558B8b7Dbe51A16c7a4D"
        },
        {
          "permission": "upgrade",
          "from": "0xa13BAF47339d63B743e7Da8741db5456DAc1E556"
        },
        {
          "permission": "upgrade",
          "from": "0xb2b10a289A229415a124EFDeF310C10cb004B6ff"
        },
        {
          "permission": "upgrade",
          "from": "0xb94f7F6ABcb811c5Ac709dE14E37590fcCd975B6"
        },
        {
          "permission": "upgrade",
          "from": "0xD8A791fE2bE73eb6E6cF1eb0cb3F36adC9B3F8f9"
        },
        {
          "permission": "upgrade",
          "from": "0xf1AF3b23DE0A5Ca3CAb7261cb0061C0D779A5c7B"
        },
        {
          "permission": "upgrade",
          "from": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
        }
      ],
      "sinceTimestamp": 1696782311,
      "sinceBlock": 18306933,
      "values": {
        "$immutable": true,
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "address": "0xEbbeeAA424AE904508465a41c927Be594C43Dc68",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xEe9bb388d320F4305af6a4a1a70c862D3F4d0D5B",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        }
      ]
    },
    {
      "name": "Scroll Multisig 3",
      "address": "0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "description": "cancel queued transactions."
        },
        {
          "permission": "interact",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "description": "propose transactions."
        },
        {
          "permission": "interact",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "description": "update the minimum delay and manage all access control roles of the timelock.",
          "via": [
            {
              "address": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
              "delay": 86400
            }
          ]
        },
        {
          "permission": "interact",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "description": "update the minimum delay and manage all access control roles of the timelock."
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "add permissioned batchers and provers to the whitelist.",
          "via": [
            {
              "address": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
              "delay": 86400
            }
          ]
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "set ERC20 gateways in the L1GatewayRouter.",
          "via": [
            {
              "address": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
              "delay": 86400
            }
          ]
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "update the L1ScrollMessenger fee vault address.",
          "via": [
            {
              "address": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
              "delay": 86400
            }
          ]
        },
        {
          "permission": "interact",
          "from": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
          "description": "update the minimum delay message queue parameters and enforced mode parameters.",
          "via": [
            {
              "address": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
              "delay": 86400
            }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "delay": 86400
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1696660175,
      "sinceBlock": 18296825,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xFCf6364F5157901f533DD3615A5d8c375F13c072",
          "0x8460aCc9A42D2CF07015a3e838df2E3aB37d30ae",
          "0xEbbeeAA424AE904508465a41c927Be594C43Dc68",
          "0xfc31892C5500AbE00974280b28907BaA9190E384",
          "0xd33b8405635fE0Bd91aD1483778Bc5c053D8177f"
        ],
        "$threshold": 3,
        "domainSeparator": "0x0b2d8b018b82a6f3df3603b40beb281bc01da06566bbb8ecc16a0f0a2dbea20f",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 22,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "L1USDCGateway",
      "address": "0xf1AF3b23DE0A5Ca3CAb7261cb0061C0D779A5c7B",
      "type": "Contract",
      "template": "scroll/L1USDCGateway",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x390ebeb0e223ceead94e94a21c34b8bc5bde0351a7c29ca6b8abb4776ce58524"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to bridge USDC tokens from L1 to L2.",
      "ignoreInWatchMode": ["totalBridgedUSDC"],
      "sinceTimestamp": 1696919351,
      "sinceBlock": 18318268,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0x56ce8A8E8399f6cD5e7e4f549E8BfD673f2AfF5e",
        "$pastUpgrades": [
          [
            "2023-10-10T06:29:11.000Z",
            "0x394b36151c614a7dfd048ddc1085046d2a50e5fd54af4c335d4a08aa79dd773d",
            ["0x6667123b5017AAB9945F73345848B82D7A953AA8"]
          ],
          [
            "2024-02-22T08:20:23.000Z",
            "0xe378370b6bbc3d7f7278df88aa0e233b8f0fea3d77bef04593919b29d0094826",
            ["0x56ce8A8E8399f6cD5e7e4f549E8BfD673f2AfF5e"]
          ]
        ],
        "$upgradeCount": 2,
        "circleCaller": "0x0000000000000000000000000000000000000000",
        "counterpart": "scr:0x33B60d5Dd260d453cAC3782b0bDC01ce84672142",
        "depositPaused": false,
        "l2USDC": "scr:0x06eFdBFf2a14a7c8E15944D1F4A48F9F95F663A4",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6",
        "totalBridgedUSDC": 19605685745987,
        "withdrawPaused": false
      },
      "derivedName": "L1USDCGateway",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "scr" } }
      ],
      "category": { "name": "External Bridges", "priority": 1 }
    },
    {
      "name": "L1GatewayRouter",
      "address": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6",
      "type": "Contract",
      "template": "scroll/L1GatewayRouter",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x3257fd4336e925899e6352562238124ef46e51d144d4a4d12526837be49a062f"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Main entry point for depositing ETH and ERC20 tokens, which are then forwarded to the correct gateway.",
      "sinceTimestamp": 1696782323,
      "sinceBlock": 18306934,
      "values": {
        "$admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
        "$implementation": "0xb93Ac04010Bd61F45BF492022A5b49a902F798F3",
        "$pastUpgrades": [
          [
            "2023-10-08T16:25:23.000Z",
            "0x8f6851c707737c446ee55f39be1442ce8cfa50ef8522b34bac247c0bb39a14ec",
            ["0xb93Ac04010Bd61F45BF492022A5b49a902F798F3"]
          ]
        ],
        "$upgradeCount": 1,
        "defaultERC20Gateway": "0xD8A791fE2bE73eb6E6cF1eb0cb3F36adC9B3F8f9",
        "ethGateway": "0x7F2b8C31F88B6006c382775eea88297Ec1e3E905",
        "gatewayInContext": "0x0000000000000000000000000000000000000000",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6"
      },
      "derivedName": "L1GatewayRouter",
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "0xFb77d22ED83F42922F9542e39dCfA9F8C47FDaFf",
      "type": "EOA",
      "proxyType": "EOA",
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0xfc31892C5500AbE00974280b28907BaA9190E384",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xFcf1f182FC79047d99e5db0d7113c0EfE2EC9402",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        },
        {
          "permission": "interact",
          "from": "0x826714adD4dDA2b8750794A467C892c0Cd49216b",
          "description": "execute transactions that are ready.",
          "via": [{ "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f" }]
        }
      ]
    },
    {
      "address": "0xFCf6364F5157901f533DD3615A5d8c375F13c072",
      "type": "EOA",
      "proxyType": "EOA"
    }
  ],
  "abis": {
    "0x0112315Fa1c81c35ac9a477e161B52Ae4D1466B3": [
      "constructor(address _verifier, bytes32 _verifierDigest1, bytes32 _verifierDigest2)",
      "error VerificationFailed()",
      "function plonkVerifier() view returns (address)",
      "function verifierDigest1() view returns (bytes32)",
      "function verifierDigest2() view returns (bytes32)",
      "function verify(bytes bundleProof, bytes publicInput) view"
    ],
    "0x08D77Ea90DB9BF6c0d3f66E6b8394DA2E81B9a03": [
      "constructor(address _counterpart, address _router, address _messenger)",
      "error ErrorCallerIsNotCounterpartGateway()",
      "error ErrorCallerIsNotMessenger()",
      "error ErrorNotInDropMessageContext()",
      "error ErrorZeroAddress()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "event UpdateTokenMapping(address indexed l1Token, address indexed oldL2Token, address indexed newL2Token)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address _l1Token) view returns (address)",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function tokenMapping(address) view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateTokenMapping(address _l1Token, address _l2Token)"
    ],
    "0x0CD4c0F24a0A9f3E2Fe80ed385D8AD5a2FfECA44": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x0e58939204eEDa84F796FBc86840A50af10eC4F4": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x11cd09a0c5B1dc674615783b0772a9bFD53e3A8F": [
      "constructor(address _singleton)"
    ],
    "0x1a37bF1Ccbf570C92FE2239FefaaAF861c2924DD": [
      "constructor(address _singleton)"
    ],
    "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f": [
      "constructor(address _singleton)"
    ],
    "0x244BF7aEf29F03916569470a51fA0794B62F8cd7": [
      "constructor(address _counterpart, address _messenger)",
      "error ErrorCallerIsNotCounterpartGateway()",
      "error ErrorCallerIsNotMessenger()",
      "error ErrorNotInDropMessageContext()",
      "error ErrorZeroAddress()",
      "event BatchDepositERC1155(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256[] _tokenIds, uint256[] _amounts)",
      "event BatchRefundERC1155(address indexed token, address indexed recipient, uint256[] tokenIds, uint256[] amounts)",
      "event DepositERC1155(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _tokenId, uint256 _amount)",
      "event FinalizeBatchWithdrawERC1155(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256[] _tokenIds, uint256[] _amounts)",
      "event FinalizeWithdrawERC1155(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _tokenId, uint256 _amount)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC1155(address indexed token, address indexed recipient, uint256 tokenId, uint256 amount)",
      "event UpdateTokenMapping(address indexed l1Token, address indexed oldL2Token, address indexed newL2Token)",
      "function batchDepositERC1155(address _token, uint256[] _tokenIds, uint256[] _amounts, uint256 _gasLimit) payable",
      "function batchDepositERC1155(address _token, address _to, uint256[] _tokenIds, uint256[] _amounts, uint256 _gasLimit) payable",
      "function counterpart() view returns (address)",
      "function depositERC1155(address _token, address _to, uint256 _tokenId, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC1155(address _token, uint256 _tokenId, uint256 _amount, uint256 _gasLimit) payable",
      "function finalizeBatchWithdrawERC1155(address _l1Token, address _l2Token, address _from, address _to, uint256[] _tokenIds, uint256[] _amounts)",
      "function finalizeWithdrawERC1155(address _l1Token, address _l2Token, address _from, address _to, uint256 _tokenId, uint256 _amount)",
      "function initialize(address _counterpart, address _messenger)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function tokenMapping(address) view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateTokenMapping(address _l1Token, address _l2Token)"
    ],
    "0x2d6e16d8e8a0C3Bc7750E774B108Ec39Ab0C18fB": [
      "constructor(address _verifier, bytes32 _verifierDigest)",
      "error VerificationFailed()",
      "function plonkVerifier() view returns (address)",
      "function verifierDigest() view returns (bytes32)",
      "function verify(bytes bundleProof, bytes publicInput) view"
    ],
    "0x33996CC9EEe2dc20B10b8E57d313d0FacC7a0828": [
      "constructor(address _verifier, bytes32 _verifierDigest1, bytes32 _verifierDigest2)",
      "error VerificationFailed()",
      "function plonkVerifier() view returns (address)",
      "function verifierDigest1() view returns (bytes32)",
      "function verifierDigest2() view returns (bytes32)",
      "function verify(bytes bundleProof, bytes publicInput) view"
    ],
    "0x3E5c63644E683549055b9Be8653de26E0B4CD36E": [
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeModuleTransaction(address module, address to, uint256 value, bytes data, uint8 operation)",
      "event SafeMultiSigTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures, bytes additionalInfo)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x3f9041350B661c74C6CbE440c8Bd6BC4C168a9fd": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x4015Fc868C06689ABEba4a9dC8FA43B804F6239c": [
      "constructor(address _counterpart, address _router, address _messenger, address _l2TokenImplementation, address _l2TokenFactory)",
      "error ErrorCallerIsNotCounterpartGateway()",
      "error ErrorCallerIsNotMessenger()",
      "error ErrorNotInDropMessageContext()",
      "error ErrorZeroAddress()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address _l1Token) view returns (address)",
      "function initialize(address _counterpart, address _router, address _messenger, address, address)",
      "function l2TokenFactory() view returns (address)",
      "function l2TokenImplementation() view returns (address)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0x41675C099F32341bf84BFc5382aF534df5C7461a": [
      "constructor()",
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x4b289E4A5331bAFBc6cCb2F10C39B8EDceCDb247": [
      "constructor(address _verifier)",
      "error VerificationFailed()",
      "function plonkVerifier() view returns (address)",
      "function verify(bytes aggrProof, bytes32 publicInputHash) view"
    ],
    "0x4CEA3E866e7c57fD75CB0CA3E9F5f1151D4Ead3F": [
      "constructor(uint256[] _versions, address[] _verifiers)",
      "error ErrorStartBatchIndexTooSmall()",
      "error ErrorZeroAddress()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event UpdateVerifier(uint256 version, uint256 startBatchIndex, address verifier)",
      "function getVerifier(uint256 _version, uint256 _batchIndex) view returns (address)",
      "function latestVerifier(uint256) view returns (uint64 startBatchIndex, address verifier)",
      "function legacyVerifiers(uint256, uint256) view returns (uint64 startBatchIndex, address verifier)",
      "function legacyVerifiersLength(uint256 _version) view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function updateVerifier(uint256 _version, uint64 _startBatchIndex, address _verifier)",
      "function verifyAggregateProof(uint256 _version, uint256 _batchIndex, bytes _aggrProof, bytes32 _publicInputHash) view",
      "function verifyAggregateProof(uint256 _batchIndex, bytes _aggrProof, bytes32 _publicInputHash) view",
      "function verifyBundleProof(uint256 _version, uint256 _batchIndex, bytes _bundleProof, bytes _publicInput) view"
    ],
    "0x546E0bF31FB6e7babD493452e4e6999191367B42": [
      "constructor(address _counterpart, address _router, address _messenger)",
      "error ErrorCallerIsNotCounterpartGateway()",
      "error ErrorCallerIsNotMessenger()",
      "error ErrorNotInDropMessageContext()",
      "error ErrorZeroAddress()",
      "event DepositETH(address indexed from, address indexed to, uint256 amount, bytes data)",
      "event FinalizeWithdrawETH(address indexed from, address indexed to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundETH(address indexed recipient, uint256 amount)",
      "function counterpart() view returns (address)",
      "function depositETH(uint256 _amount, uint256 _gasLimit) payable",
      "function depositETH(address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositETHAndCall(address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function finalizeWithdrawETH(address _from, address _to, uint256 _amount, bytes _data) payable",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0x56971da63A3C0205184FEF096E9ddFc7A8C2D18a": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x56ce8A8E8399f6cD5e7e4f549E8BfD673f2AfF5e": [
      "constructor(address _l1USDC, address _l2USDC, address _counterpart, address _router, address _messenger)",
      "error ErrorCallerIsNotCounterpartGateway()",
      "error ErrorCallerIsNotMessenger()",
      "error ErrorNotInDropMessageContext()",
      "error ErrorZeroAddress()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "function burnAllLockedUSDC()",
      "function circleCaller() view returns (address)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function depositPaused() view returns (bool)",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address) view returns (address)",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function l1USDC() view returns (address)",
      "function l2USDC() view returns (address)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function pauseDeposit(bool _paused)",
      "function pauseWithdraw(bool _paused)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function totalBridgedUSDC() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function updateCircleCaller(address _caller)",
      "function withdrawPaused() view returns (bool)"
    ],
    "0x585DfaD7bF4099E011D185E266907A8ab60DAD2D": [
      "constructor(address _verifier)",
      "error VerificationFailed()",
      "function plonkVerifier() view returns (address)",
      "function verify(bytes aggrProof, bytes32 publicInputHash) view"
    ],
    "0x6260aF48e8948617b8FA17F4e5CEa2d21D21554B": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x63FB51C55d9605a75F8872C80De260a00fACfaA2": [
      "constructor(address _verifier)",
      "error VerificationFailed()",
      "function plonkVerifier() view returns (address)",
      "function verify(bytes aggrProof, bytes32 publicInputHash) view"
    ],
    "0x6625C6332c9F91F2D27c304E729B86db87A3f504": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x67260A8B73C5B77B55c1805218A42A7A6F98F515": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x69C2eD64171bF5737c2B78bdF722e68a032B2825": [
      "constructor(address _singleton)"
    ],
    "0x6A124779fDf107c3F6BcB992731dCAaD09f2276A": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function enforcedBatchParameters() view returns (uint24 maxDelayEnterEnforcedMode, uint24 maxDelayMessageQueue)",
      "function getSigner() view returns (address)",
      "function initialize(address _owner, address _signer, tuple(uint32 maxGasLimit, uint112 baseFeeOverhead, uint112 baseFeeScalar) _messageQueueParameters, tuple(uint24 maxDelayEnterEnforcedMode, uint24 maxDelayMessageQueue) _enforcedBatchParameters)",
      "function messageQueueParameters() view returns (uint32 maxGasLimit, uint112 baseFeeOverhead, uint112 baseFeeScalar)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function updateEnforcedBatchParameters(tuple(uint24 maxDelayEnterEnforcedMode, uint24 maxDelayMessageQueue) _params)",
      "function updateMessageQueueParameters(tuple(uint32 maxGasLimit, uint112 baseFeeOverhead, uint112 baseFeeScalar) _params)",
      "function updateSigner(address _newSigner)"
    ],
    "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x798576400F7D662961BA15C6b3F3d813447a26a6": [
      "constructor()",
      "event GrantAccess(bytes32 indexed role, address indexed target, bytes4[] selectors)",
      "event RevokeAccess(bytes32 indexed role, address indexed target, bytes4[] selectors)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function callableRoles(address _target, bytes4 _selector) view returns (bytes32[] _roles)",
      "function execute(address _target, uint256 _value, bytes _data, bytes32 _role) payable",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateAccess(address _target, bytes4[] _selectors, bytes32 _role, bool _status)"
    ],
    "0x7AC440cAe8EB6328de4fA621163a792c1EA9D4fE": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x7e87c75BBe7991bbCEBd2C7a56f4cFC923BDDBcc": [
      "constructor(address _messageQueue, address _feeVault)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event UpdateFeeVault(address _oldFeeVault, address _newFeeVault)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function feeVault() view returns (address)",
      "function initialize()",
      "function messageQueue() view returns (address)",
      "function nonces(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function paused() view returns (bool)",
      "function renounceOwnership()",
      "function sendTransaction(address _target, uint256 _value, uint256 _gasLimit, bytes _data) payable",
      "function sendTransaction(address _sender, address _target, uint256 _value, uint256 _gasLimit, bytes _data, uint256 _deadline, bytes _signature, address _refundAddress) payable",
      "function setPause(bool _status)",
      "function transferOwnership(address newOwner)"
    ],
    "0x7F2b8C31F88B6006c382775eea88297Ec1e3E905": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x7F512E2E9dfC4552941D99A5b2405BBcF5781C2c": [
      "constructor(address _counterpart, address _router, address _messenger)",
      "error ErrorCallerIsNotCounterpartGateway()",
      "error ErrorCallerIsNotMessenger()",
      "error ErrorNotInDropMessageContext()",
      "error ErrorZeroAddress()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "event UpdateTokenMapping(address indexed l1Token, address indexed oldL2Token, address indexed newL2Token)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address _l1Token) view returns (address)",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function tokenMapping(address) view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateTokenMapping(address _l1Token, address _l2Token)"
    ],
    "0x826714adD4dDA2b8750794A467C892c0Cd49216b": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x8432728A257646449245558B8b7Dbe51A16c7a4D": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x84791281EF5cb8Af5dCd4c122f7A42FeD38Fef5b": [
      "constructor(address _counterpart, address _rollup, address _messageQueueV1, address _messageQueueV2, address _enforcedTxGateway)",
      "error ErrorForbidToCallMessageQueue()",
      "error ErrorZeroAddress()",
      "event FailedRelayedMessage(bytes32 indexed messageHash)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RelayedMessage(bytes32 indexed messageHash)",
      "event SentMessage(address indexed sender, address indexed target, uint256 value, uint256 messageNonce, uint256 gasLimit, bytes message)",
      "event Unpaused(address account)",
      "event UpdateFeeVault(address _oldFeeVault, address _newFeeVault)",
      "event UpdateMaxReplayTimes(uint256 oldMaxReplayTimes, uint256 newMaxReplayTimes)",
      "function counterpart() view returns (address)",
      "function dropMessage(address _from, address _to, uint256 _value, uint256 _messageNonce, bytes _message)",
      "function enforcedTxGateway() view returns (address)",
      "function feeVault() view returns (address)",
      "function initialize(address _counterpart, address _feeVault, address _rollup, address _messageQueue)",
      "function isL1MessageDropped(bytes32) view returns (bool)",
      "function isL2MessageExecuted(bytes32) view returns (bool)",
      "function maxReplayTimes() view returns (uint256)",
      "function messageQueueV1() view returns (address)",
      "function messageQueueV2() view returns (address)",
      "function messageSendTimestamp(bytes32) view returns (uint256)",
      "function owner() view returns (address)",
      "function paused() view returns (bool)",
      "function prevReplayIndex(uint256) view returns (uint256)",
      "function relayMessageWithProof(address _from, address _to, uint256 _value, uint256 _nonce, bytes _message, tuple(uint256 batchIndex, bytes merkleProof) _proof)",
      "function renounceOwnership()",
      "function replayMessage(address _from, address _to, uint256 _value, uint256 _messageNonce, bytes _message, uint32 _newGasLimit, address _refundAddress) payable",
      "function replayStates(bytes32) view returns (uint128 times, uint128 lastIndex)",
      "function rollup() view returns (address)",
      "function sendMessage(address _to, uint256 _value, bytes _message, uint256 _gasLimit, address _refundAddress) payable",
      "function sendMessage(address _to, uint256 _value, bytes _message, uint256 _gasLimit) payable",
      "function setPause(bool _status)",
      "function transferOwnership(address newOwner)",
      "function updateFeeVault(address _newFeeVault)",
      "function updateMaxReplayTimes(uint256 _newMaxReplayTimes)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0x8edC4EADEE120d4C51923c515e7C3241c815C2BC": [
      "constructor(address _singleton)"
    ],
    "0x8FA3b4570B4C96f8036C13b64971BA65867eEB48": [
      "constructor(address _singleton)"
    ],
    "0x9479ABfebefEea3c846163012a472b44F305b3d7": [
      "constructor(address _singleton)"
    ],
    "0xA033Ff09f2da45f0e9ae495f525363722Df42b2a": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xa13BAF47339d63B743e7Da8741db5456DAc1E556": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xa4F400593DFfc0ae02F940ab58f6e3Cc6fb9FB49": [
      "constructor(address _WETH, address _l2WETH, address _counterpart, address _router, address _messenger)",
      "error ErrorCallerIsNotCounterpartGateway()",
      "error ErrorCallerIsNotMessenger()",
      "error ErrorNotInDropMessageContext()",
      "error ErrorZeroAddress()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "function WETH() view returns (address)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address) view returns (address)",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function l2WETH() view returns (address)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xb2b10a289A229415a124EFDeF310C10cb004B6ff": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xb7c8833F5627a8a12558cAFa0d0EBD1ACBDce43f": [
      "constructor(uint64 _chainId, address _messageQueueV1, address _messageQueueV2, address _verifier, address _systemConfig)",
      "error ErrorAccountIsNotEOA()",
      "error ErrorBatchHeaderV0LengthTooSmall()",
      "error ErrorBatchHeaderV1LengthTooSmall()",
      "error ErrorBatchHeaderV3LengthMismatch()",
      "error ErrorBatchHeaderV7LengthMismatch()",
      "error ErrorBatchIsAlreadyCommitted()",
      "error ErrorBatchIsAlreadyVerified()",
      "error ErrorBatchIsEmpty()",
      "error ErrorBatchNotCommitted()",
      "error ErrorCallPointEvaluationPrecompileFailed()",
      "error ErrorCallerIsNotProver()",
      "error ErrorCallerIsNotSequencer()",
      "error ErrorCannotDowngradeVersion()",
      "error ErrorEuclidForkEnabled()",
      "error ErrorFinalizePreAndPostEuclidBatchInOneBundle()",
      "error ErrorFoundMultipleBlobs()",
      "error ErrorGenesisBatchHasNonZeroField()",
      "error ErrorGenesisBatchImported()",
      "error ErrorGenesisDataHashIsZero()",
      "error ErrorGenesisParentBatchHashIsNonZero()",
      "error ErrorInEnforcedBatchMode()",
      "error ErrorIncorrectBatchHash()",
      "error ErrorIncorrectBatchVersion()",
      "error ErrorIncorrectBitmapLength()",
      "error ErrorIncorrectBitmapLengthV0()",
      "error ErrorIncorrectBitmapLengthV1()",
      "error ErrorIncorrectChunkLengthV1()",
      "error ErrorLastL1MessageSkipped()",
      "error ErrorNoBlobFound()",
      "error ErrorNoBlockInChunkV1()",
      "error ErrorNotAllV1MessagesAreFinalized()",
      "error ErrorNotInEnforcedBatchMode()",
      "error ErrorNumTxsLessThanNumL1Msgs()",
      "error ErrorRevertFinalizedBatch()",
      "error ErrorStateRootIsZero()",
      "error ErrorTooManyTxsInOneChunk()",
      "error ErrorUnexpectedPointEvaluationPrecompileOutput()",
      "error ErrorV5BatchContainsTransactions()",
      "error ErrorV5BatchNotContainsOnlyOneBlock()",
      "error ErrorV5BatchNotContainsOnlyOneChunk()",
      "error ErrorZeroAddress()",
      "error InconsistentBatchHash(uint256 batchIndex, bytes32 expected, bytes32 actual)",
      "event CommitBatch(uint256 indexed batchIndex, bytes32 indexed batchHash)",
      "event FinalizeBatch(uint256 indexed batchIndex, bytes32 indexed batchHash, bytes32 stateRoot, bytes32 withdrawRoot)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RevertBatch(uint256 indexed batchIndex, bytes32 indexed batchHash)",
      "event RevertBatch(uint256 indexed startBatchIndex, uint256 indexed finishBatchIndex)",
      "event Unpaused(address account)",
      "event UpdateEnforcedBatchMode(bool enabled, uint256 lastCommittedBatchIndex)",
      "event UpdateMaxNumTxInChunk(uint256 oldMaxNumTxInChunk, uint256 newMaxNumTxInChunk)",
      "event UpdateProver(address indexed account, bool status)",
      "event UpdateSequencer(address indexed account, bool status)",
      "function addProver(address _account)",
      "function addSequencer(address _account)",
      "function commitAndFinalizeBatch(uint8 version, bytes32 parentBatchHash, tuple(bytes batchHeader, uint256 totalL1MessagesPoppedOverall, bytes32 postStateRoot, bytes32 withdrawRoot, bytes zkProof) finalizeStruct)",
      "function commitBatchWithBlobProof(uint8 _version, bytes _parentBatchHeader, bytes[] _chunks, bytes _skippedL1MessageBitmap, bytes _blobDataProof)",
      "function commitBatches(uint8 version, bytes32 parentBatchHash, bytes32 lastBatchHash)",
      "function committedBatches(uint256) view returns (bytes32)",
      "function disableEnforcedBatchMode()",
      "function finalizeBundlePostEuclidV2(bytes batchHeader, uint256 totalL1MessagesPoppedOverall, bytes32 postStateRoot, bytes32 withdrawRoot, bytes aggrProof)",
      "function finalizeBundleWithProof(bytes batchHeader, bytes32 postStateRoot, bytes32 withdrawRoot, bytes aggrProof)",
      "function finalizedStateRoots(uint256) view returns (bytes32)",
      "function importGenesisBatch(bytes _batchHeader, bytes32 _stateRoot)",
      "function initialEuclidBatchIndex() view returns (uint256)",
      "function initialize(address _messageQueue, address _verifier, uint256 _maxNumTxInChunk)",
      "function initializeV2()",
      "function isBatchFinalized(uint256 _batchIndex) view returns (bool)",
      "function isEnforcedModeEnabled() view returns (bool)",
      "function isProver(address) view returns (bool)",
      "function isSequencer(address) view returns (bool)",
      "function lastFinalizedBatchIndex() view returns (uint256)",
      "function layer2ChainId() view returns (uint64)",
      "function maxNumTxInChunk() view returns (uint256)",
      "function messageQueueV1() view returns (address)",
      "function messageQueueV2() view returns (address)",
      "function miscData() view returns (uint64 lastCommittedBatchIndex, uint64 lastFinalizedBatchIndex, uint32 lastFinalizeTimestamp, uint8 flags, uint88 reserved)",
      "function owner() view returns (address)",
      "function paused() view returns (bool)",
      "function removeProver(address _account)",
      "function removeSequencer(address _account)",
      "function renounceOwnership()",
      "function revertBatch(bytes batchHeader)",
      "function setPause(bool _status)",
      "function systemConfig() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateMaxNumTxInChunk(uint256 _maxNumTxInChunk)",
      "function verifier() view returns (address)",
      "function withdrawRoots(uint256) view returns (bytes32)"
    ],
    "0xb93Ac04010Bd61F45BF492022A5b49a902F798F3": [
      "constructor()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event DepositETH(address indexed from, address indexed to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawETH(address indexed from, address indexed to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "event RefundETH(address indexed recipient, uint256 amount)",
      "event SetDefaultERC20Gateway(address indexed oldDefaultERC20Gateway, address indexed newDefaultERC20Gateway)",
      "event SetERC20Gateway(address indexed token, address indexed oldGateway, address indexed newGateway)",
      "event SetETHGateway(address indexed oldETHGateway, address indexed newEthGateway)",
      "function ERC20Gateway(address) view returns (address)",
      "function defaultERC20Gateway() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function depositETH(uint256 _amount, uint256 _gasLimit) payable",
      "function depositETH(address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositETHAndCall(address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function ethGateway() view returns (address)",
      "function finalizeWithdrawERC20(address, address, address, address, uint256, bytes) payable",
      "function finalizeWithdrawETH(address, address, uint256, bytes) payable",
      "function gatewayInContext() view returns (address)",
      "function getERC20Gateway(address _token) view returns (address)",
      "function getL2ERC20Address(address _l1Address) view returns (address)",
      "function initialize(address _ethGateway, address _defaultERC20Gateway)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function requestERC20(address _sender, address _token, uint256 _amount) returns (uint256)",
      "function setDefaultERC20Gateway(address _newDefaultERC20Gateway)",
      "function setERC20Gateway(address[] _tokens, address[] _gateways)",
      "function setETHGateway(address _newEthGateway)",
      "function transferOwnership(address newOwner)"
    ],
    "0xb94f7F6ABcb811c5Ac709dE14E37590fcCd975B6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xBAd002fB13adFfcbCba57a4d4a43886f3F4C56cb": [
      "constructor()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "event UpdateTokenMapping(address indexed l1Token, address indexed oldL2Token, address indexed newL2Token)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address _l1Token) view returns (address)",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function tokenMapping(address) view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateTokenMapping(address _l1Token, address _l2Token)"
    ],
    "0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc": [
      "constructor(address _singleton)"
    ],
    "0xC3eA7C657884BB380B66D79C36aDCb5658b01896": [
      "constructor(address _singleton)"
    ],
    "0xCAECeE2E815e7f758c2477f900AFA14bDDce54B3": [
      "constructor(address _verifier, bytes32 _verifierDigest)",
      "error VerificationFailed()",
      "function plonkVerifier() view returns (address)",
      "function verifierDigest() view returns (bytes32)",
      "function verify(bytes bundleProof, bytes publicInput) view"
    ],
    "0xd1841c5756428812233eEA78afC17cb2D3e392bb": [
      "constructor(address _counterpart, address _messenger)",
      "error ErrorCallerIsNotCounterpartGateway()",
      "error ErrorCallerIsNotMessenger()",
      "error ErrorNotInDropMessageContext()",
      "error ErrorZeroAddress()",
      "event BatchDepositERC721(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256[] _tokenIds)",
      "event BatchRefundERC721(address indexed token, address indexed recipient, uint256[] tokenIds)",
      "event DepositERC721(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _tokenId)",
      "event FinalizeBatchWithdrawERC721(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256[] _tokenIds)",
      "event FinalizeWithdrawERC721(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _tokenId)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC721(address indexed token, address indexed recipient, uint256 tokenId)",
      "event UpdateTokenMapping(address indexed l1Token, address indexed oldL2Token, address indexed newL2Token)",
      "function batchDepositERC721(address _token, address _to, uint256[] _tokenIds, uint256 _gasLimit) payable",
      "function batchDepositERC721(address _token, uint256[] _tokenIds, uint256 _gasLimit) payable",
      "function counterpart() view returns (address)",
      "function depositERC721(address _token, address _to, uint256 _tokenId, uint256 _gasLimit) payable",
      "function depositERC721(address _token, uint256 _tokenId, uint256 _gasLimit) payable",
      "function finalizeBatchWithdrawERC721(address _l1Token, address _l2Token, address _from, address _to, uint256[] _tokenIds)",
      "function finalizeWithdrawERC721(address _l1Token, address _l2Token, address _from, address _to, uint256 _tokenId)",
      "function initialize(address _counterpart, address _messenger)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function tokenMapping(address) view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateTokenMapping(address _l1Token, address _l2Token)"
    ],
    "0xD8A791fE2bE73eb6E6cF1eb0cb3F36adC9B3F8f9": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xEB803eb3F501998126bf37bB823646Ed3D59d072": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xEfA158006b072793a49E622B26761cD0eC38591d": [
      "constructor(address _messenger, address _scrollChain, address _enforcedTxGateway, address _messageQueueV1, address _systemConfig)",
      "error ErrorCallerIsNotEnforcedTxGateway()",
      "error ErrorCallerIsNotMessenger()",
      "error ErrorCallerIsNotScrollChain()",
      "error ErrorFinalizedIndexTooLarge()",
      "error ErrorFinalizedIndexTooSmall()",
      "error ErrorGasLimitBelowIntrinsicGas()",
      "error ErrorGasLimitExceeded()",
      "event FinalizedDequeuedTransaction(uint256 finalizedIndex)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event QueueTransaction(address indexed sender, address indexed target, uint256 value, uint64 queueIndex, uint256 gasLimit, bytes data)",
      "function appendCrossDomainMessage(address _target, uint256 _gasLimit, bytes _data)",
      "function appendEnforcedTransaction(address _sender, address _target, uint256 _value, uint256 _gasLimit, bytes _data)",
      "function calculateIntrinsicGasFee(bytes _calldata) pure returns (uint256)",
      "function computeTransactionHash(address _sender, uint256 _queueIndex, uint256 _value, address _target, uint256 _gasLimit, bytes _data) pure returns (bytes32)",
      "function enforcedTxGateway() view returns (address)",
      "function estimateCrossDomainMessageFee(uint256 _gasLimit) view returns (uint256)",
      "function estimateL2BaseFee() view returns (uint256)",
      "function finalizePoppedCrossDomainMessage(uint256 _nextUnfinalizedQueueIndex)",
      "function firstCrossDomainMessageIndex() view returns (uint256)",
      "function getFirstUnfinalizedMessageEnqueueTime() view returns (uint256 timestamp)",
      "function getMessageEnqueueTimestamp(uint256 queueIndex) view returns (uint256 timestamp)",
      "function getMessageRollingHash(uint256 queueIndex) view returns (bytes32 hash)",
      "function initialize()",
      "function messageQueueV1() view returns (address)",
      "function messenger() view returns (address)",
      "function nextCrossDomainMessageIndex() view returns (uint256)",
      "function nextUnfinalizedQueueIndex() view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function scrollChain() view returns (address)",
      "function systemConfig() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe": [
      "constructor(address _singleton)"
    ],
    "0xf1AF3b23DE0A5Ca3CAb7261cb0061C0D779A5c7B": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xF4f2066EE72D62e3caF9678459149BA7FCf2262F": [
      "constructor(address _l1Token, address _l2Token, address _counterpart, address _router, address _messenger)",
      "error DepositAndCallIsNotAllowed()",
      "error ErrorAccountIsZeroAddress()",
      "error ErrorCallerIsNotCounterpartGateway()",
      "error ErrorCallerIsNotDepositsDisabler()",
      "error ErrorCallerIsNotDepositsEnabler()",
      "error ErrorCallerIsNotMessenger()",
      "error ErrorCallerIsNotWithdrawalsDisabler()",
      "error ErrorCallerIsNotWithdrawalsEnabler()",
      "error ErrorDepositZeroAmount()",
      "error ErrorDepositsDisabled()",
      "error ErrorDepositsEnabled()",
      "error ErrorNonZeroMsgValue()",
      "error ErrorNotInDropMessageContext()",
      "error ErrorUnsupportedL1Token()",
      "error ErrorUnsupportedL2Token()",
      "error ErrorWithdrawalsDisabled()",
      "error ErrorWithdrawalsEnabled()",
      "error ErrorZeroAddress()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event DepositsDisabled(address indexed disabler)",
      "event DepositsEnabled(address indexed enabler)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event WithdrawalsDisabled(address indexed disabler)",
      "event WithdrawalsEnabled(address indexed enabler)",
      "function DEPOSITS_DISABLER_ROLE() view returns (bytes32)",
      "function DEPOSITS_ENABLER_ROLE() view returns (bytes32)",
      "function WITHDRAWALS_DISABLER_ROLE() view returns (bytes32)",
      "function WITHDRAWALS_ENABLER_ROLE() view returns (bytes32)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function disableDeposits()",
      "function disableWithdrawals()",
      "function enableDeposits()",
      "function enableWithdrawals()",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address _l1Token) view returns (address)",
      "function getRoleMember(bytes32 _role, uint256 _index) view returns (address)",
      "function getRoleMemberCount(bytes32 _role) view returns (uint256)",
      "function grantRole(bytes32 _role, address _account)",
      "function hasRole(bytes32 _role, address _account) view returns (bool)",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function initializeV2(address _depositsEnabler, address _depositsDisabler, address _withdrawalsEnabler, address _withdrawalsDisabler)",
      "function isDepositsEnabled() view returns (bool)",
      "function isWithdrawalsEnabled() view returns (bool)",
      "function l1Token() view returns (address)",
      "function l2Token() view returns (address)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function revokeRole(bytes32 _role, address _account)",
      "function router() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0xf7fb7c4e1e830e78c917fa640160f4d7d11b7cd8189984ab546b9094e72401cb",
    "GnosisSafe": "0x62ebcf7ab79ebc3a7db30e84c423951d981b749397664ae678e312687409f5f0",
    "scroll/EnforcedTxGateway": "0x135f3f175975582aabfd47f5af1c6b1c153fe6813d69cfb72d631ba725379300",
    "scroll/L1CustomERC20Gateway": "0x5568fac20f7a8fee66859dff5942732be58300b34bec128295476bd77ef9a2b5",
    "scroll/L1ERC1155Gateway": "0x5568fac20f7a8fee66859dff5942732be58300b34bec128295476bd77ef9a2b5",
    "scroll/L1ERC721Gateway": "0x5568fac20f7a8fee66859dff5942732be58300b34bec128295476bd77ef9a2b5",
    "scroll/L1ETHGateway": "0x5568fac20f7a8fee66859dff5942732be58300b34bec128295476bd77ef9a2b5",
    "scroll/L1GatewayRouter": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "scroll/L1MessageQueue": "0x5cec50d36f5c888cc9815ba4ee94ec48f3df987dc9b5ee78fbd46bd166e014b2",
    "scroll/L1ScrollMessenger": "0x56886461e1db51e3de8f8c9967c4888b7866eb7dfbd67fd7658e5c06256c8d0f",
    "scroll/L1StandardERC20Gateway": "0xa33e3df7e4fe83cb3d6299d79361bfa1ee10e2a4c4085ae4dc4d8557f2c264c3",
    "scroll/L1Timelock": "0x17275115a5a001259d842c060777b54be7fbef8787dc4da1b168c3e98734c86a",
    "scroll/L1USDCGateway": "0x0268dfcc7e4608b1b82280182004ae135e28bcb5c0ff8ade11d5f29a98b436d5",
    "scroll/L1WETHGateway": "0x2c64a4c320f500b832923b84ecefc7492ad8cb1a8cbf178924c774b75fd7ffe8",
    "scroll/MultipleVersionRollupVerifier": "0x12467348254718ddb1d7be2b7f101262147f9dc3ba171fa3d37fe21409f6d797",
    "scroll/ScrollChain": "0x047807130722fa3643ff477006ffca1906f79e3d9d198aee0e769485785f65b8",
    "scroll/ScrollOwner": "0xfd66b0dc42cf0df543470fb20ffad080c5050c5b20ad3f272aa74becef76efed",
    "scroll/SystemConfig": "0x9a4e9f2d20d157cab92c6950661e3141306abd40e573b6d43ad92f7640c94d5c"
  },
  "permissionsConfigHash": "0x235011363fc6855e8549bc65244f5aae0442c4f06d797c94eb697d881c86d32b"
}
