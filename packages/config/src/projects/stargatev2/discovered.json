{
  "name": "stargatev2",
  "timestamp": 1757343231,
  "configHash": "0x22c5661e736f57c319b2a084096d00980172fef41e2b01d30b0ed08247d2ea54",
  "entries": [
    {
      "name": "TokenMessagingArbitrum",
      "address": "arb1:0x19cFCE47eD54a88614648DC3f19A5980097007dD",
      "type": "Contract",
      "template": "stargate/TokenMessaging",
      "sourceHashes": [
        "0xd0e407d7588e82d593435d256d12b9da5c2c70686a62e24948a96fcbc1a463b4"
      ],
      "proxyType": "immutable",
      "description": "A LayerZero OApp owned by Stargate that manages bridging messages from all pools on Ethereum. It can batch messages with a 'bus' mode or dispatch them immediately (taxi) for higher fees.",
      "sinceTimestamp": 1716837025,
      "sinceBlock": 215658770,
      "values": {
        "$immutable": true,
        "endpoint": "arb1:0x1a44076050125825900e736c501f859c50fE728c",
        "getTransferGasLimit": 2300,
        "maxAssetId": 13,
        "MSG_TYPE_BUS": 2,
        "MSG_TYPE_TAXI": 1,
        "oApp": "arb1:0x19cFCE47eD54a88614648DC3f19A5980097007dD",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 2 },
        "owner": "arb1:0x184257d5b9e25A12D1dCafB697bFAaFE0F5CA150",
        "planner": "arb1:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "pools": [
          "arb1:0xe8CDF27AcD73a434D661C84887215F7598e7d0d3",
          "arb1:0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0x0000000000000000000000000000000000000000",
          "arb1:0xA45B5130f36CDcA45667738e2a258AB09f4A5f7F"
        ],
        "preCrime": "arb1:0x0000000000000000000000000000000000000000",
        "queueCapacity": 512
      },
      "fieldMeta": {
        "maxAssetId": {
          "description": "The highest currently registered assetID"
        }
      },
      "implementationNames": {
        "arb1:0x19cFCE47eD54a88614648DC3f19A5980097007dD": "TokenMessaging"
      }
    },
    {
      "name": "StargatePoolNative",
      "address": "arb1:0xA45B5130f36CDcA45667738e2a258AB09f4A5f7F",
      "type": "Contract",
      "template": "stargate/StargatePoolNative",
      "sourceHashes": [
        "0x63ac97930921267a1251904351ae2409e0d62d3d3c3fcb2ed7bc1fc4775321f7"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837008,
      "sinceBlock": 215658702,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "deficitOffset": 0,
        "endpoint": "arb1:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "arb1:0xda82A31dF339BfDF0123661134b4DB63Cb1706f5",
          "planner": "arb1:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "arb1:0x146c8e409C113ED87C6183f4d25c50251DFfbb3a",
          "tokenMessaging": "arb1:0x19cFCE47eD54a88614648DC3f19A5980097007dD",
          "creditMessaging": "arb1:0xF1fCb4CBd57B67d683972A59B6a7b1e2E8Bf27E6",
          "lzToken": "arb1:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 15000,
        "localEid": 30110,
        "lpToken": "arb1:0x993614e1c8c9C5AbE49462Ce5702431978Fd767F",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "arb1:0x184257d5b9e25A12D1dCafB697bFAaFE0F5CA150",
        "planner": "arb1:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "705700813425805719",
        "poolBalance": "1274202364000000000000",
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "arb1:0x0000000000000000000000000000000000000000",
        "treasurer": "arb1:0x146c8e409C113ED87C6183f4d25c50251DFfbb3a",
        "treasuryFee": 82475052,
        "tvl": "139895202000000000000"
      },
      "implementationNames": {
        "arb1:0xA45B5130f36CDcA45667738e2a258AB09f4A5f7F": "StargatePoolNative"
      }
    },
    {
      "name": "StargatePoolMigratable",
      "address": "arb1:0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0",
      "type": "Contract",
      "template": "stargate/StargatePoolMigratable",
      "sourceHashes": [
        "0xad746913c310c0ee643e98f0a0f4bc6095877e7c82e0779cb5d5e852e0e12c8d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837018,
      "sinceBlock": 215658745,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "burnAdmin": "arb1:0x0000000000000000000000000000000000000000",
        "burnAllowanceSD": 0,
        "deficitOffset": 0,
        "endpoint": "arb1:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "arb1:0x1F605162282570dFa6255D27895587f4117F52FA",
          "planner": "arb1:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "arb1:0x146c8e409C113ED87C6183f4d25c50251DFfbb3a",
          "tokenMessaging": "arb1:0x19cFCE47eD54a88614648DC3f19A5980097007dD",
          "creditMessaging": "arb1:0xF1fCb4CBd57B67d683972A59B6a7b1e2E8Bf27E6",
          "lzToken": "arb1:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30110,
        "lpToken": "arb1:0x8D66Ff1845b1baCC6E87D867CA4680d05A349cA8",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "arb1:0x184257d5b9e25A12D1dCafB697bFAaFE0F5CA150",
        "planner": "arb1:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "930230939465013447",
        "poolBalance": 945676910118,
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "arb1:0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",
        "treasurer": "arb1:0x146c8e409C113ED87C6183f4d25c50251DFfbb3a",
        "treasuryFee": 84078659744,
        "tvl": 322517114342
      },
      "implementationNames": {
        "arb1:0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0": "StargatePoolMigratable"
      }
    },
    {
      "address": "arb1:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "arb1:0xA45B5130f36CDcA45667738e2a258AB09f4A5f7F",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "arb1:0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "arb1:0xe8CDF27AcD73a434D661C84887215F7598e7d0d3",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        }
      ]
    },
    {
      "name": "StargatePoolUSDC",
      "address": "arb1:0xe8CDF27AcD73a434D661C84887215F7598e7d0d3",
      "type": "Contract",
      "template": "stargate/StargatePoolUSDC",
      "sourceHashes": [
        "0x0ef9b0bca6f74cd24daa9d50e734dfec2ecbc71cef5b209fa0c0f93561ad2640"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit"
      ],
      "sinceTimestamp": 1716837016,
      "sinceBlock": 215658734,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "burnAdmin": "arb1:0x0000000000000000000000000000000000000000",
        "burnAllowanceSD": 0,
        "deficitOffset": 0,
        "endpoint": "arb1:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "arb1:0x80F755e3091b2Ad99c08Da8D13E9C7635C1b8161",
          "planner": "arb1:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "arb1:0x146c8e409C113ED87C6183f4d25c50251DFfbb3a",
          "tokenMessaging": "arb1:0x19cFCE47eD54a88614648DC3f19A5980097007dD",
          "creditMessaging": "arb1:0xF1fCb4CBd57B67d683972A59B6a7b1e2E8Bf27E6",
          "lzToken": "arb1:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30110,
        "lpToken": "arb1:0x6Ea313859A5D9F6fF2a68f529e6361174bFD2225",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "arb1:0x184257d5b9e25A12D1dCafB697bFAaFE0F5CA150",
        "planner": "arb1:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "530581714180312213",
        "poolBalance": 13529095853012,
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "arb1:0xaf88d065e77c8cC2239327C5EDb3A432268e5831",
        "treasurer": "arb1:0x146c8e409C113ED87C6183f4d25c50251DFfbb3a",
        "treasuryFee": 287694770303,
        "tvl": 171904891762
      },
      "implementationNames": {
        "arb1:0xe8CDF27AcD73a434D661C84887215F7598e7d0d3": "StargatePoolUSDC"
      }
    },
    {
      "name": "StargatePoolUSDC",
      "address": "base:0x27a16dc786820B16E5c9028b75B99F6f604b5d26",
      "type": "Contract",
      "template": "stargate/StargatePoolUSDC",
      "sourceHashes": [
        "0x0ef9b0bca6f74cd24daa9d50e734dfec2ecbc71cef5b209fa0c0f93561ad2640"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit"
      ],
      "sinceTimestamp": 1716837017,
      "sinceBlock": 15023835,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "burnAdmin": "base:0x0000000000000000000000000000000000000000",
        "burnAllowanceSD": 0,
        "deficitOffset": 0,
        "endpoint": "base:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "base:0x08ed1d79D509A6f1020685535028ae60C144441E",
          "planner": "base:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "base:0xd47b03ee6d86Cf251ee7860FB2ACf9f91B9fD4d7",
          "tokenMessaging": "base:0x5634c4a5FEd09819E3c46D86A965Dd9447d86e47",
          "creditMessaging": "base:0x12dC9256Acc9895B076f6638D628382881e62CeE",
          "lzToken": "base:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30184,
        "lpToken": "base:0x53983F31E8E0D0c3Fd0b8d85654989A1336317d7",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "base:0x7c20d58Cb9f3F3CF73b79a3fBDA3fFf412D7D82D",
        "planner": "base:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "607664644642087147",
        "poolBalance": 16234225102847,
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "base:0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
        "treasurer": "base:0xd47b03ee6d86Cf251ee7860FB2ACf9f91B9fD4d7",
        "treasuryFee": 215017477366,
        "tvl": 113065487772
      },
      "implementationNames": {
        "base:0x27a16dc786820B16E5c9028b75B99F6f604b5d26": "StargatePoolUSDC"
      }
    },
    {
      "name": "TokenMessagingBase",
      "address": "base:0x5634c4a5FEd09819E3c46D86A965Dd9447d86e47",
      "type": "Contract",
      "template": "stargate/TokenMessaging",
      "sourceHashes": [
        "0xd0e407d7588e82d593435d256d12b9da5c2c70686a62e24948a96fcbc1a463b4"
      ],
      "proxyType": "immutable",
      "description": "A LayerZero OApp owned by Stargate that manages bridging messages from all pools on Ethereum. It can batch messages with a 'bus' mode or dispatch them immediately (taxi) for higher fees.",
      "sinceTimestamp": 1716837023,
      "sinceBlock": 15023838,
      "values": {
        "$immutable": true,
        "endpoint": "base:0x1a44076050125825900e736c501f859c50fE728c",
        "getTransferGasLimit": 2300,
        "maxAssetId": 23,
        "MSG_TYPE_BUS": 2,
        "MSG_TYPE_TAXI": 1,
        "oApp": "base:0x5634c4a5FEd09819E3c46D86A965Dd9447d86e47",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 2 },
        "owner": "base:0x7c20d58Cb9f3F3CF73b79a3fBDA3fFf412D7D82D",
        "planner": "base:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "pools": [
          "base:0x27a16dc786820B16E5c9028b75B99F6f604b5d26",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0xdc181Bd607330aeeBEF6ea62e03e5e1Fb4B6F7C7",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x0000000000000000000000000000000000000000",
          "base:0x87Dd5A7481726a53C5Ac6b0D296F5846f95a72f2"
        ],
        "preCrime": "base:0x0000000000000000000000000000000000000000",
        "queueCapacity": 512
      },
      "fieldMeta": {
        "maxAssetId": {
          "description": "The highest currently registered assetID"
        }
      },
      "implementationNames": {
        "base:0x5634c4a5FEd09819E3c46D86A965Dd9447d86e47": "TokenMessaging"
      }
    },
    {
      "name": "StargatePoolEURC",
      "address": "base:0x87Dd5A7481726a53C5Ac6b0D296F5846f95a72f2",
      "type": "Contract",
      "template": "stargate/StargatePool",
      "sourceHashes": [
        "0xfe723a77f93381425aafa246fb03a963bf9ab66f754f71d180d33f337bd65824"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1756254253,
      "sinceBlock": 34732453,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "burnAdmin": "base:0x0000000000000000000000000000000000000000",
        "burnAllowanceSD": 0,
        "deficitOffset": 0,
        "endpoint": "base:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "base:0x93819FfD972Fd57b1AAf42ba85e6B437D60FC807",
          "planner": "base:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "base:0xd47b03ee6d86Cf251ee7860FB2ACf9f91B9fD4d7",
          "tokenMessaging": "base:0x5634c4a5FEd09819E3c46D86A965Dd9447d86e47",
          "creditMessaging": "base:0x12dC9256Acc9895B076f6638D628382881e62CeE",
          "lzToken": "base:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30184,
        "lpToken": "base:0x886eADC2220c1aB227ddbd66FE0be27A6a87eF76",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "base:0x81EAb64E630C4a2E3E849268A6B64cb76D1C8109",
        "planner": "base:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": 0,
        "poolBalance": 0,
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "base:0x60a3E35Cc302bFA44Cb288Bc5a4F316Fdb1adb42",
        "treasurer": "base:0xd47b03ee6d86Cf251ee7860FB2ACf9f91B9fD4d7",
        "treasuryFee": 0,
        "tvl": 0
      },
      "implementationNames": {
        "base:0x87Dd5A7481726a53C5Ac6b0D296F5846f95a72f2": "StargatePoolEURC"
      }
    },
    {
      "name": "StargatePoolNative",
      "address": "base:0xdc181Bd607330aeeBEF6ea62e03e5e1Fb4B6F7C7",
      "type": "Contract",
      "template": "stargate/StargatePoolNative",
      "sourceHashes": [
        "0x63ac97930921267a1251904351ae2409e0d62d3d3c3fcb2ed7bc1fc4775321f7"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837009,
      "sinceBlock": 15023831,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "deficitOffset": 0,
        "endpoint": "base:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "base:0x17E450Be3Ba9557F2378E20d64AD417E59Ef9A34",
          "planner": "base:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "base:0xd47b03ee6d86Cf251ee7860FB2ACf9f91B9fD4d7",
          "tokenMessaging": "base:0x5634c4a5FEd09819E3c46D86A965Dd9447d86e47",
          "creditMessaging": "base:0x12dC9256Acc9895B076f6638D628382881e62CeE",
          "lzToken": "base:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 15000,
        "localEid": 30184,
        "lpToken": "base:0x98fB8522d891F43B771e2d27367b41Ba138D0B80",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "base:0x7c20d58Cb9f3F3CF73b79a3fBDA3fFf412D7D82D",
        "planner": "base:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "563816980233243908",
        "poolBalance": "2492630993000000000000",
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "base:0x0000000000000000000000000000000000000000",
        "treasurer": "base:0xd47b03ee6d86Cf251ee7860FB2ACf9f91B9fD4d7",
        "treasuryFee": 97373899,
        "tvl": "358813009000000000000"
      },
      "implementationNames": {
        "base:0xdc181Bd607330aeeBEF6ea62e03e5e1Fb4B6F7C7": "StargatePoolNative"
      }
    },
    {
      "address": "base:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "base:0x27a16dc786820B16E5c9028b75B99F6f604b5d26",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "base:0x87Dd5A7481726a53C5Ac6b0D296F5846f95a72f2",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "base:0xdc181Bd607330aeeBEF6ea62e03e5e1Fb4B6F7C7",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        }
      ]
    },
    {
      "address": "eth:0x0cb72C1F6a36c225A7E2B21712E8853A4A1acc47",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Treasurer",
      "address": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
      "type": "Contract",
      "template": "stargate/Treasurer",
      "sourceHashes": [
        "0x3857982ba9867dfe0d878491a8f43962a5ae20721e924738425e3e6902cf9097"
      ],
      "proxyType": "immutable",
      "description": "Permissions proxy allowing addresses to act through it.",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0x268Ca24DAefF1FaC2ed883c598200CcbB79E931D",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer"
        },
        {
          "permission": "interact",
          "from": "eth:0x77b2043768d28E9C9aB44E1aBfC95944bcE57931",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer"
        },
        {
          "permission": "interact",
          "from": "eth:0x783129E4d7bA0Af0C896c239E57C06DF379aAE8c",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer"
        },
        {
          "permission": "interact",
          "from": "eth:0x933597a323Eb81cAe705C5bC29985172fd5A3973",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer"
        },
        {
          "permission": "interact",
          "from": "eth:0xc026395860Db2d07ee33e05fE50ed7bD583189C7",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer"
        },
        {
          "permission": "interact",
          "from": "eth:0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer"
        }
      ],
      "sinceTimestamp": 1716837503,
      "sinceBlock": 19963243,
      "values": {
        "$immutable": true,
        "admin": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
        "getTransferGasLimit": 2300,
        "owner": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413"
      },
      "implementationNames": {
        "eth:0x1041D127b2d4BC700F0F563883bC689502606918": "Treasurer"
      }
    },
    {
      "name": "LayerZero Executor",
      "address": "eth:0x173272739Bd7Aa6e4e214714048a9fE699453059",
      "type": "Contract",
      "unverified": true,
      "proxyType": "EIP1967 proxy",
      "description": "Is tasked to execute verified messages at the destination for a fee paid at the origin. Jobs are assigned to this contract by the LayerZero Endpoint.",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
          "description": "execute Stargate messages sent via LayerZero at the destination.",
          "role": ".getExecutorConfig"
        }
      ],
      "sinceTimestamp": 1706308043,
      "sinceBlock": 19093746,
      "values": {
        "$admin": "eth:0xa36797bA947b378AefE5f726Cd87766CD3c25Ee3",
        "$implementation": "eth:0xfE9AB78eD4f9f3DbB168d9f5E5213d78605C9805",
        "$pastUpgrades": [
          [
            "2024-01-26T22:27:23.000Z",
            "0x5df683475486093be4a4f92d6f7c47548d3bf38e1a39e25bf0028353f83d4a2b",
            ["eth:0x1E45F27F0e96e9757cff938F2c9d697AA8279C85"]
          ],
          [
            "2024-07-04T23:54:35.000Z",
            "0x22c22ee402c4be83ef7c851992c3125008be9ee0a39c0d83cf6be91a0506f7c4",
            ["eth:0xDaC2d26317C42ae3CB21357B73404120E1dA4232"]
          ],
          [
            "2024-11-01T19:07:23.000Z",
            "0x8714871659f7ff2feb7968256c3baf39e5cdbe9160f36649f8a530a536456ed5",
            ["eth:0xfE9AB78eD4f9f3DbB168d9f5E5213d78605C9805"]
          ]
        ],
        "$upgradeCount": 3
      },
      "implementationNames": {
        "eth:0x173272739Bd7Aa6e4e214714048a9fE699453059": "OptimizedTransparentUpgradeableProxy",
        "eth:0xfE9AB78eD4f9f3DbB168d9f5E5213d78605C9805": ""
      }
    },
    {
      "name": "EndpointV2",
      "address": "eth:0x1a44076050125825900e736c501f859c50fE728c",
      "type": "Contract",
      "template": "layerzero/EndpointV2",
      "sourceHashes": [
        "0x399160e7d36a21fca31097d7875daed8f421f788b77f2a71974d51938c3ea520"
      ],
      "proxyType": "immutable",
      "description": "A contract that is part of the LayerZero messaging protocol. The Stargate OApp owner can configure verification (MessageLib) and execution settings here.",
      "sinceTimestamp": 1706307671,
      "sinceBlock": 19093715,
      "values": {
        "$immutable": true,
        "blockedLibrary": "eth:0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
        "delegatesCreditMessaging": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
        "delegatesTokenMessaging": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
        "eid": 30101,
        "EMPTY_PAYLOAD_HASH": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getReceiveLibrary": {
          "lib": "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2",
          "isDefault": true
        },
        "getRegisteredLibraries": [
          "eth:0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
          "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
          "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2",
          "eth:0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D"
        ],
        "getSendContext": [0, "eth:0x0000000000000000000000000000000000000000"],
        "getSendLibrary": "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
        "isSendingMessage": false,
        "lzToken": "eth:0x0000000000000000000000000000000000000000",
        "nativeToken": "eth:0x0000000000000000000000000000000000000000",
        "NIL_PAYLOAD_HASH": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "owner": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478"
      },
      "fieldMeta": {
        "getRegisteredLibraries": {
          "severity": "HIGH",
          "description": "MessageLibs registered for this Endpoint, enforcing the OApp owner's custom security stack."
        }
      },
      "implementationNames": {
        "eth:0x1a44076050125825900e736c501f859c50fE728c": "EndpointV2"
      }
    },
    {
      "name": "BlockedMessageLib",
      "address": "eth:0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862",
      "type": "Contract",
      "template": "layerzero/BlockedMessageLib",
      "sourceHashes": [
        "0xf00c4e5b1b0f8da8f50ec8b06aa9f6c7275c5f03398e8b607c0ed093e7c4fe40"
      ],
      "proxyType": "immutable",
      "description": "Simple LayerZero library that blocks all messages if configured.",
      "sinceTimestamp": 1706307671,
      "sinceBlock": 19093715,
      "values": {
        "$immutable": true,
        "messageLibType": 2,
        "version": {
          "major": "18446744073709551615",
          "minor": 255,
          "endpointVersion": 2
        }
      },
      "implementationNames": {
        "eth:0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862": "BlockedMessageLib"
      }
    },
    {
      "address": "eth:0x1D7C6783328C145393e84fb47a7f7C548f5Ee28d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "StargatePool",
      "address": "eth:0x268Ca24DAefF1FaC2ed883c598200CcbB79E931D",
      "type": "Contract",
      "template": "stargate/StargatePool",
      "sourceHashes": [
        "0xf0d2f0cd5f3481632b35bc976e24b16d77ccdeefeb7307139a3f3d2adf485094"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837323,
      "sinceBlock": 19963228,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "deficitOffset": 0,
        "endpoint": "eth:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "eth:0x6D5521F46b2cba9443feFC09cBaC3B15AE0F73eB",
          "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
          "tokenMessaging": "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980",
          "creditMessaging": "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
          "lzToken": "eth:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30101,
        "lpToken": "eth:0xD646CD9Dff77097b454a5a148BeaE6615e3bC2e2",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
        "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "22609067955088607",
        "poolBalance": "476136269000000000000",
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "eth:0xd5F7838F5C461fefF7FE49ea5ebaF7728bB0ADfa",
        "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
        "treasuryFee": 408858,
        "tvl": "932764979000000000000"
      },
      "implementationNames": {
        "eth:0x268Ca24DAefF1FaC2ed883c598200CcbB79E931D": "StargatePool"
      }
    },
    {
      "address": "eth:0x2E1078e128e8AA6A70eC8d1B17A79Fc4B457d437",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x39f86ECef62c5bcE23428d6b7c7050D9Ecb0e346",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x565cFd7224bbc2a81a6e2a1464892ecB27efB070",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x5bC6AA6ad117A8B50ABf9E1658971f5DA1968c5c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Treasury",
      "address": "eth:0x5ebB3f2feaA15271101a927869B3A56837e73056",
      "type": "Contract",
      "sourceHashes": [
        "0x79f573a9d94def8dc0b4319d44595f806685b0ca5875891eff1ed40a9ff6b6e0"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1706307779,
      "sinceBlock": 19093724,
      "values": {
        "$immutable": true,
        "lzTokenEnabled": false,
        "lzTokenFee": 0,
        "nativeBP": 0,
        "owner": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478"
      },
      "implementationNames": {
        "eth:0x5ebB3f2feaA15271101a927869B3A56837e73056": "Treasury"
      }
    },
    {
      "name": "CreditMessaging",
      "address": "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
      "type": "Contract",
      "template": "stargate/CreditMessaging",
      "sourceHashes": [
        "0xb151141227bb08ead5b1a7d464402bf23feaf60625a773cb8ced48745eb66fe6"
      ],
      "proxyType": "immutable",
      "description": "A LayerZero OApp owned by Stargate that is used for the virtual crosschain accounting of available tokens to the local pools. A local pool thus has a record of how many tokens are available when bridging to another remote pool. The permissioned Planner role can move these credits.",
      "sinceTimestamp": 1716837383,
      "sinceBlock": 19963233,
      "values": {
        "$immutable": true,
        "endpoint": "eth:0x1a44076050125825900e736c501f859c50fE728c",
        "maxAssetId": 23,
        "oApp": "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 2 },
        "owner": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
        "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "pools": [
          "eth:0xc026395860Db2d07ee33e05fE50ed7bD583189C7",
          "eth:0x933597a323Eb81cAe705C5bC29985172fd5A3973",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x77b2043768d28E9C9aB44E1aBfC95944bcE57931",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x268Ca24DAefF1FaC2ed883c598200CcbB79E931D",
          "eth:0x783129E4d7bA0Af0C896c239E57C06DF379aAE8c"
        ],
        "preCrime": "eth:0x0000000000000000000000000000000000000000"
      },
      "fieldMeta": {
        "maxAssetId": {
          "description": "The highest currently registered assetID"
        }
      },
      "implementationNames": {
        "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d": "CreditMessaging"
      }
    },
    {
      "name": "TokenMessagingEthereum",
      "address": "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980",
      "type": "Contract",
      "template": "stargate/TokenMessaging",
      "sourceHashes": [
        "0xd0e407d7588e82d593435d256d12b9da5c2c70686a62e24948a96fcbc1a463b4"
      ],
      "proxyType": "immutable",
      "description": "A LayerZero OApp owned by Stargate that manages bridging messages from all pools on Ethereum. It can batch messages with a 'bus' mode or dispatch them immediately (taxi) for higher fees.",
      "sinceTimestamp": 1716837371,
      "sinceBlock": 19963232,
      "values": {
        "$immutable": true,
        "endpoint": "eth:0x1a44076050125825900e736c501f859c50fE728c",
        "getTransferGasLimit": 2300,
        "maxAssetId": 23,
        "MSG_TYPE_BUS": 2,
        "MSG_TYPE_TAXI": 1,
        "oApp": "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 2 },
        "owner": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
        "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "preCrime": "eth:0x0000000000000000000000000000000000000000",
        "queueCapacity": 512
      },
      "implementationNames": {
        "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980": "TokenMessaging"
      }
    },
    {
      "address": "eth:0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ReadLib1002",
      "address": "eth:0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D",
      "type": "Contract",
      "template": "layerzero/ReadLib1002",
      "sourceHashes": [
        "0xf7800be6fd99520201da1404c35bac8a1ed826bbc2134f0a77547e0d7a74c9c1"
      ],
      "proxyType": "immutable",
      "description": "LayerZero library used to read state from remote blockchains.",
      "sinceTimestamp": 1730488859,
      "sinceBlock": 21094853,
      "values": {
        "$immutable": true,
        "getTreasuryAndNativeFeeCap": [
          "eth:0x0000000000000000000000000000000000000000",
          450000000000000
        ],
        "messageLibType": 2,
        "owner": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478",
        "version": { "major": 10, "minor": 0, "endpointVersion": 2 }
      },
      "implementationNames": {
        "eth:0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D": "ReadLib1002"
      }
    },
    {
      "address": "eth:0x76F6d257CEB5736CbcAAb5c48E4225a45F74d6e5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x771dcAcB96024d1e55Fd21Fe8a8187AA7EC9e77e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "StargatePoolNative",
      "address": "eth:0x77b2043768d28E9C9aB44E1aBfC95944bcE57931",
      "type": "Contract",
      "template": "stargate/StargatePoolNative",
      "sourceHashes": [
        "0x63ac97930921267a1251904351ae2409e0d62d3d3c3fcb2ed7bc1fc4775321f7"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837299,
      "sinceBlock": 19963227,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "deficitOffset": "20000000000000000000000",
        "endpoint": "eth:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "eth:0x3E368B6C95c6fEfB7A16dCc0D756389F3c658a06",
          "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
          "tokenMessaging": "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980",
          "creditMessaging": "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
          "lzToken": "eth:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 15000,
        "localEid": 30101,
        "lpToken": "eth:0xfcb42A0e352a08AbD50b8EE68d01f581B6Dfd80A",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
        "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "839042259538456476",
        "poolBalance": "89857337000000000000",
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "eth:0x0000000000000000000000000000000000000000",
        "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
        "treasuryFee": 6381567,
        "tvl": "5242062657000000000000"
      },
      "implementationNames": {
        "eth:0x77b2043768d28E9C9aB44E1aBfC95944bcE57931": "StargatePoolNative"
      }
    },
    {
      "name": "StargatePoolEURC",
      "address": "eth:0x783129E4d7bA0Af0C896c239E57C06DF379aAE8c",
      "type": "Contract",
      "template": "stargate/StargatePool",
      "sourceHashes": [
        "0xfe723a77f93381425aafa246fb03a963bf9ab66f754f71d180d33f337bd65824"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1756256951,
      "sinceBlock": 23229076,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "burnAdmin": "eth:0x0000000000000000000000000000000000000000",
        "burnAllowanceSD": 0,
        "deficitOffset": 0,
        "endpoint": "eth:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "eth:0x0F3273eA5d8B182CD87C8630Dc436a6133b9bE39",
          "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
          "tokenMessaging": "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980",
          "creditMessaging": "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
          "lzToken": "eth:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30101,
        "lpToken": "eth:0xBb363939D8B8C492c529c7c80D69fec4619e5d3a",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "eth:0x65bb797c2B9830d891D87288F029ed8dACc19705",
        "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": 0,
        "poolBalance": 0,
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "eth:0x1aBaEA1f7C830bD89Acc67eC4af516284b1bC33c",
        "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
        "treasuryFee": 0,
        "tvl": 0
      },
      "implementationNames": {
        "eth:0x783129E4d7bA0Af0C896c239E57C06DF379aAE8c": "StargatePoolEURC"
      }
    },
    {
      "address": "eth:0x79e2b9C1F6C9ed1375C93AaF139e6C4537f48523",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x8A403992b0d9CA20f009063C7bE6F20814Cb8AEB",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Stargate Verifier",
      "address": "eth:0x8FafAE7Dd957044088b3d0F67359C327c6200d18",
      "type": "Contract",
      "sourceHashes": [
        "0x67b975b3ef00e71be27727f49933e41872aa848504565806e3e3482a2245f99c"
      ],
      "proxyType": "immutable",
      "description": "One of the registered DVNs for the OApp acts through this smart contract. They are allowed to verify LayerZero messages for the Stargate bridge and enable their execution at the destination.",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2",
          "description": "verify Stargate messages sent via LayerZero.",
          "role": ".getUlnConfig"
        }
      ],
      "sinceTimestamp": 1716344279,
      "sinceBlock": 19922400,
      "values": {
        "$immutable": true,
        "allowlistSize": 0,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultMultiplierBps": 12000,
        "paused": false,
        "priceFeed": "eth:0xC03f31fD86a9077785b7bCf6598Ce3598Fa91113",
        "quorum": 1,
        "signerSize": 1,
        "vid": 101,
        "workerFeeLib": "eth:0xd0ab8512CF4907bD94CDb5fE7d0C324E666c4006"
      },
      "implementationNames": {
        "eth:0x8FafAE7Dd957044088b3d0F67359C327c6200d18": "DVN"
      }
    },
    {
      "name": "StargatePoolMigratable",
      "address": "eth:0x933597a323Eb81cAe705C5bC29985172fd5A3973",
      "type": "Contract",
      "template": "stargate/StargatePoolMigratable",
      "sourceHashes": [
        "0xad746913c310c0ee643e98f0a0f4bc6095877e7c82e0779cb5d5e852e0e12c8d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837359,
      "sinceBlock": 19963231,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "burnAdmin": "eth:0x0000000000000000000000000000000000000000",
        "burnAllowanceSD": 0,
        "deficitOffset": 0,
        "endpoint": "eth:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "eth:0xe171AFcd1E0394b3312e68ca823D5BC87F3Db311",
          "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
          "tokenMessaging": "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980",
          "creditMessaging": "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
          "lzToken": "eth:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30101,
        "lpToken": "eth:0x17BBC9BD51A52aAf4d2CC6652630DaF4fdB358F7",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
        "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "165808276116901386",
        "poolBalance": 4554394050895,
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "eth:0xdAC17F958D2ee523a2206206994597C13D831ec7",
        "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
        "treasuryFee": 227714150541,
        "tvl": 125536968125
      },
      "implementationNames": {
        "eth:0x933597a323Eb81cAe705C5bC29985172fd5A3973": "StargatePoolMigratable"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "eth:0xa36797bA947b378AefE5f726Cd87766CD3c25Ee3",
      "type": "Contract",
      "sourceHashes": [
        "0x130b90ae0c02f239d1ce8b414a1a9a49d97708bb4f07d7e9c69af4f7c8a8f5bc"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "eth:0x173272739Bd7Aa6e4e214714048a9fE699453059",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1706307875,
      "sinceBlock": 19093732,
      "values": {
        "$immutable": true,
        "owner": "eth:0x76F6d257CEB5736CbcAAb5c48E4225a45F74d6e5"
      },
      "implementationNames": {
        "eth:0xa36797bA947b378AefE5f726Cd87766CD3c25Ee3": "ProxyAdmin"
      }
    },
    {
      "name": "Nethermind Verifier",
      "address": "eth:0xa59BA433ac34D2927232918Ef5B2eaAfcF130BA5",
      "type": "Contract",
      "sourceHashes": [
        "0x67b975b3ef00e71be27727f49933e41872aa848504565806e3e3482a2245f99c"
      ],
      "proxyType": "immutable",
      "description": "One of the registered DVNs for the OApp acts through this smart contract. They are allowed to verify LayerZero messages for the Stargate bridge and enable their execution at the destination.",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2",
          "description": "verify Stargate messages sent via LayerZero.",
          "role": ".getUlnConfig"
        }
      ],
      "sinceTimestamp": 1706489567,
      "sinceBlock": 19108732,
      "values": {
        "$immutable": true,
        "allowlistSize": 0,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultMultiplierBps": 12000,
        "paused": false,
        "priceFeed": "eth:0xC03f31fD86a9077785b7bCf6598Ce3598Fa91113",
        "quorum": 1,
        "signerSize": 4,
        "vid": 101,
        "workerFeeLib": "eth:0xa7b5189bcA84Cd304D8553977c7C614329750d99"
      },
      "implementationNames": {
        "eth:0xa59BA433ac34D2927232918Ef5B2eaAfcF130BA5": "DVN"
      }
    },
    {
      "name": "SendUln302",
      "address": "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
      "type": "Contract",
      "template": "layerzero/SendUln302",
      "sourceHashes": [
        "0x159d8f84a5100285a7401e1ccb3d40a64fe944d9beb951c81749de40279a5876"
      ],
      "proxyType": "immutable",
      "description": "Send Library used by LayerZero, defining the protocol/execution of sent messages.",
      "sinceTimestamp": 1706307839,
      "sinceBlock": 19093729,
      "values": {
        "$immutable": true,
        "getExecutorConfig": {
          "maxMessageSize": 10000,
          "executor": "eth:0x173272739Bd7Aa6e4e214714048a9fE699453059"
        },
        "messageLibType": 0,
        "owner": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478",
        "treasury": "eth:0x5ebB3f2feaA15271101a927869B3A56837e73056",
        "version": { "major": 3, "minor": 0, "endpointVersion": 2 }
      },
      "fieldMeta": {
        "getExecutorConfig": {
          "description": "The executor config of the Stargate Bridge OApp (TokenMessaging) for all messages coming from Arbitrum. (returns: [maxMessageSize, Executor])"
        }
      },
      "implementationNames": {
        "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1": "SendUln302"
      }
    },
    {
      "name": "LayerZero Multisig",
      "address": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478",
      "type": "Contract",
      "template": "layerzero/OneSigMultisig",
      "sourceHashes": [
        "0x6a2feeb0055614ee29c746b6052e64dc677ffa602b25dfeb74cbf948bc6d9b74"
      ],
      "proxyType": "immutable",
      "description": "Custom multisignature contract allowing offchain signing and execution on multiple target chains.",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0x1a44076050125825900e736c501f859c50fE728c",
          "description": "configure the default send/receive libraries used for verification, affecting all OApps that have not set up a custom security config.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D",
          "description": "configure the settings of this library, affecting all OApps that have not set up a custom security config.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1",
          "description": "configure the settings of this library, affecting all OApps that have not set up a custom security config.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2",
          "description": "configure the settings of this library, affecting all OApps that have not set up a custom security config.",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1748566235,
      "sinceBlock": 22592087,
      "values": {
        "$immutable": true,
        "$members": [
          "eth:0x0cb72C1F6a36c225A7E2B21712E8853A4A1acc47",
          "eth:0x5bC6AA6ad117A8B50ABf9E1658971f5DA1968c5c",
          "eth:0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
          "eth:0x771dcAcB96024d1e55Fd21Fe8a8187AA7EC9e77e",
          "eth:0xe67DB04d7eFF4e9ec282eD929632D4FF058112d7"
        ],
        "$threshold": 3,
        "executorRequired": true,
        "getExecutors": ["eth:0x39f86ECef62c5bcE23428d6b7c7050D9Ecb0e346"],
        "LEAF_ENCODING_VERSION": 1,
        "nonce": 7,
        "ONE_SIG_ID": 30101,
        "seed": "0xa8c6099081c03ac4c11ed511690f296077e94d44cf99bebc8c349cf972f87340",
        "totalExecutors": 1,
        "totalSigners": 5,
        "VERSION": "0.0.1"
      },
      "fieldMeta": {
        "executorRequired": {
          "description": "if true, only executor OR any signer can execute a correctly signed tx. else anyone can."
        }
      },
      "implementationNames": {
        "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478": "OneSig"
      }
    },
    {
      "name": "Stargate Multisig 2",
      "address": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
      "type": "Contract",
      "template": "layerzero/OneSigMultisig",
      "sourceHashes": [
        "0x6a2feeb0055614ee29c746b6052e64dc677ffa602b25dfeb74cbf948bc6d9b74"
      ],
      "proxyType": "immutable",
      "description": "Custom multisignature contract allowing offchain signing and execution on multiple target chains.",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
          "description": "set the admin address and withdraw treasury fees from the contract.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0x268Ca24DAefF1FaC2ed883c598200CcbB79E931D",
          "description": "set critical configurations of the pool, potentially stealing funds.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0x268Ca24DAefF1FaC2ed883c598200CcbB79E931D",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer",
          "via": [
            { "address": "eth:0x1041D127b2d4BC700F0F563883bC689502606918" }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
          "description": "set OApp delegate, planner and critical configurations.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980",
          "description": "set OApp delegate and crosschain peers, manage assets and other critical configurations.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0x77b2043768d28E9C9aB44E1aBfC95944bcE57931",
          "description": "set critical configurations of the pool, potentially stealing funds.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0x77b2043768d28E9C9aB44E1aBfC95944bcE57931",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer",
          "via": [
            { "address": "eth:0x1041D127b2d4BC700F0F563883bC689502606918" }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0x783129E4d7bA0Af0C896c239E57C06DF379aAE8c",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer",
          "via": [
            { "address": "eth:0x1041D127b2d4BC700F0F563883bC689502606918" }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0x933597a323Eb81cAe705C5bC29985172fd5A3973",
          "description": "set critical configurations of the pool, potentially stealing funds.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0x933597a323Eb81cAe705C5bC29985172fd5A3973",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer",
          "via": [
            { "address": "eth:0x1041D127b2d4BC700F0F563883bC689502606918" }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0xc026395860Db2d07ee33e05fE50ed7bD583189C7",
          "description": "set critical configurations of the pool, potentially stealing funds.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0xc026395860Db2d07ee33e05fE50ed7bD583189C7",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer",
          "via": [
            { "address": "eth:0x1041D127b2d4BC700F0F563883bC689502606918" }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3",
          "description": "set critical configurations of the pool, potentially stealing funds.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3",
          "description": "withdraw fees and tokens that are not the pool token (sent by mistake).",
          "role": ".treasurer",
          "via": [
            { "address": "eth:0x1041D127b2d4BC700F0F563883bC689502606918" }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
          "role": ".admin"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1755895787,
      "sinceBlock": 23199114,
      "values": {
        "$immutable": true,
        "$members": [
          "eth:0x1D7C6783328C145393e84fb47a7f7C548f5Ee28d",
          "eth:0x2E1078e128e8AA6A70eC8d1B17A79Fc4B457d437",
          "eth:0x565cFd7224bbc2a81a6e2a1464892ecB27efB070",
          "eth:0x79e2b9C1F6C9ed1375C93AaF139e6C4537f48523",
          "eth:0x8A403992b0d9CA20f009063C7bE6F20814Cb8AEB",
          "eth:0xf02CC4dc84aC59Bd6089BAddcEB9d4Ef3AEFb0f0"
        ],
        "$threshold": 3,
        "executorRequired": true,
        "getExecutors": ["eth:0x39f86ECef62c5bcE23428d6b7c7050D9Ecb0e346"],
        "LEAF_ENCODING_VERSION": 1,
        "nonce": 1,
        "ONE_SIG_ID": 30101,
        "seed": "0x7fc77f9996dcec5457f6b2911fdeffc01f0fbc4e9ee1a4100979d004ea0709e6",
        "totalExecutors": 1,
        "totalSigners": 6,
        "VERSION": "0.0.1"
      },
      "fieldMeta": {
        "executorRequired": {
          "description": "if true, only executor OR any signer can execute a correctly signed tx. else anyone can."
        }
      },
      "implementationNames": {
        "eth:0xBE634B030FEAaB661300667EaF82510a3a025413": "OneSig"
      }
    },
    {
      "name": "StargatePoolUSDC",
      "address": "eth:0xc026395860Db2d07ee33e05fE50ed7bD583189C7",
      "type": "Contract",
      "template": "stargate/StargatePoolUSDC",
      "sourceHashes": [
        "0x0ef9b0bca6f74cd24daa9d50e734dfec2ecbc71cef5b209fa0c0f93561ad2640"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit"
      ],
      "sinceTimestamp": 1716837347,
      "sinceBlock": 19963230,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "burnAdmin": "eth:0x0000000000000000000000000000000000000000",
        "burnAllowanceSD": 0,
        "deficitOffset": 0,
        "endpoint": "eth:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "eth:0x52B35406CB2FB5e0038EdEcFc129A152a1f74087",
          "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
          "tokenMessaging": "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980",
          "creditMessaging": "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
          "lzToken": "eth:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30101,
        "lpToken": "eth:0x5DaAee9EF143faFF495B581e9863570e83F99d31",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
        "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "845620316802517809",
        "poolBalance": 30393409046545,
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "eth:0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
        "treasuryFee": 354413892999,
        "tvl": 718621183641
      },
      "implementationNames": {
        "eth:0xc026395860Db2d07ee33e05fE50ed7bD583189C7": "StargatePoolUSDC"
      }
    },
    {
      "name": "ReceiveUln302",
      "address": "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2",
      "type": "Contract",
      "template": "layerzero/ReceiveUln302",
      "sourceHashes": [
        "0x3904c78c7b0abf91f9544ebb9f08f2d2bc83028df65c912a7f7a6ca1ca109dde"
      ],
      "proxyType": "immutable",
      "description": "Receive Library used by LayerZero, defining the validation of received messages.",
      "sinceTimestamp": 1706307863,
      "sinceBlock": 19093731,
      "values": {
        "$immutable": true,
        "getUlnConfig": {
          "confirmations": 20,
          "requiredDVNCount": 2,
          "optionalDVNCount": 0,
          "optionalDVNThreshold": 0,
          "requiredDVNs": [
            "eth:0x8FafAE7Dd957044088b3d0F67359C327c6200d18",
            "eth:0xa59BA433ac34D2927232918Ef5B2eaAfcF130BA5"
          ],
          "optionalDVNs": []
        },
        "messageLibType": 1,
        "owner": "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478",
        "version": { "major": 3, "minor": 0, "endpointVersion": 2 }
      },
      "fieldMeta": {
        "getUlnConfig": {
          "description": "The verification config of the Stargate Bridge OApp (TokenMessaging) for all messages coming from Arbitrum. (returns: [confirmations, requiredDVNCount, optionalDVNCount, optionalDVNThreshold, requiredDVNs, optionalDVNs])"
        }
      },
      "implementationNames": {
        "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2": "ReceiveUln302"
      }
    },
    {
      "name": "StargatePool",
      "address": "eth:0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3",
      "type": "Contract",
      "template": "stargate/StargatePool",
      "sourceHashes": [
        "0xf0d2f0cd5f3481632b35bc976e24b16d77ccdeefeb7307139a3f3d2adf485094"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837335,
      "sinceBlock": 19963229,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "deficitOffset": 0,
        "endpoint": "eth:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "eth:0x6Dd69717B1194B81A92105B7e0F94cb40f68A3e3",
          "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
          "tokenMessaging": "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980",
          "creditMessaging": "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
          "lzToken": "eth:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30101,
        "lpToken": "eth:0xF14EEe033D8b00101aB147F87cB238a2d3E74940",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "eth:0xBE634B030FEAaB661300667EaF82510a3a025413",
        "planner": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": 1573303374785334,
        "poolBalance": "8403571000000000000",
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "eth:0x9E32b13ce7f2E80A01932B42553652E053D6ed8e",
        "treasurer": "eth:0x1041D127b2d4BC700F0F563883bC689502606918",
        "treasuryFee": 5557,
        "tvl": 1105000000000000
      },
      "implementationNames": {
        "eth:0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3": "StargatePool"
      }
    },
    {
      "address": "eth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0x268Ca24DAefF1FaC2ed883c598200CcbB79E931D",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d",
          "description": "send credits (asset claims) from pools on this chain to other pools.",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "eth:0x77b2043768d28E9C9aB44E1aBfC95944bcE57931",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "eth:0x783129E4d7bA0Af0C896c239E57C06DF379aAE8c",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "eth:0x933597a323Eb81cAe705C5bC29985172fd5A3973",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "eth:0xc026395860Db2d07ee33e05fE50ed7bD583189C7",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "eth:0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        }
      ]
    },
    {
      "address": "eth:0xe67DB04d7eFF4e9ec282eD929632D4FF058112d7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xf02CC4dc84aC59Bd6089BAddcEB9d4Ef3AEFb0f0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "linea:0x0000000000000000000000000000000000000000",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "TokenMessagingLinea",
      "address": "linea:0x5f688F563Dc16590e570f97b542FA87931AF2feD",
      "type": "Contract",
      "template": "stargate/TokenMessaging",
      "sourceHashes": [
        "0xd0e407d7588e82d593435d256d12b9da5c2c70686a62e24948a96fcbc1a463b4"
      ],
      "proxyType": "immutable",
      "description": "A LayerZero OApp owned by Stargate that manages bridging messages from all pools on Ethereum. It can batch messages with a 'bus' mode or dispatch them immediately (taxi) for higher fees.",
      "sinceTimestamp": 1716837017,
      "sinceBlock": 4931061,
      "values": {
        "$immutable": true,
        "endpoint": "linea:0x1a44076050125825900e736c501f859c50fE728c",
        "getTransferGasLimit": 2300,
        "maxAssetId": 13,
        "MSG_TYPE_BUS": 2,
        "MSG_TYPE_TAXI": 1,
        "oApp": "linea:0x5f688F563Dc16590e570f97b542FA87931AF2feD",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 2 },
        "owner": "linea:0xD37bA986553f7ac25BdF9867A60b10ebf182E51e",
        "planner": "linea:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "pools": [
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x0000000000000000000000000000000000000000",
          "linea:0x81F6138153d473E8c5EcebD3DC8Cd4903506B075"
        ],
        "preCrime": "linea:0x0000000000000000000000000000000000000000",
        "queueCapacity": 512
      },
      "fieldMeta": {
        "maxAssetId": {
          "description": "The highest currently registered assetID"
        }
      },
      "implementationNames": {
        "linea:0x5f688F563Dc16590e570f97b542FA87931AF2feD": "TokenMessaging"
      }
    },
    {
      "name": "StargatePoolNative",
      "address": "linea:0x81F6138153d473E8c5EcebD3DC8Cd4903506B075",
      "type": "Contract",
      "template": "stargate/StargatePoolNative",
      "sourceHashes": [
        "0x63ac97930921267a1251904351ae2409e0d62d3d3c3fcb2ed7bc1fc4775321f7"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837011,
      "sinceBlock": 4931059,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "deficitOffset": 0,
        "endpoint": "linea:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "linea:0x6E3d884C96d640526F273C61dfcF08915eBd7e2B",
          "planner": "linea:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "linea:0xf5F74d2508e97A3a7CCA2ccb75c8325D66b46152",
          "tokenMessaging": "linea:0x5f688F563Dc16590e570f97b542FA87931AF2feD",
          "creditMessaging": "linea:0x138EB30f73BC423c6455C53df6D89CB01d9eBc63",
          "lzToken": "linea:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 15000,
        "localEid": 30183,
        "lpToken": "linea:0x23A46eFDa973Bd4e97Ee84bAc87018537538D078",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "linea:0xD37bA986553f7ac25BdF9867A60b10ebf182E51e",
        "planner": "linea:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "298232321164215770",
        "poolBalance": "6880527319000000000000",
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "linea:0x0000000000000000000000000000000000000000",
        "treasurer": "linea:0xf5F74d2508e97A3a7CCA2ccb75c8325D66b46152",
        "treasuryFee": 37734774,
        "tvl": "669177151000000000000"
      },
      "implementationNames": {
        "linea:0x81F6138153d473E8c5EcebD3DC8Cd4903506B075": "StargatePoolNative"
      }
    },
    {
      "address": "linea:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "linea:0x81F6138153d473E8c5EcebD3DC8Cd4903506B075",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        }
      ]
    },
    {
      "address": "oeth:0x0000000000000000000000000000000000000000",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "StargatePoolMigratable",
      "address": "oeth:0x19cFCE47eD54a88614648DC3f19A5980097007dD",
      "type": "Contract",
      "template": "stargate/StargatePoolMigratable",
      "sourceHashes": [
        "0xad746913c310c0ee643e98f0a0f4bc6095877e7c82e0779cb5d5e852e0e12c8d"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837025,
      "sinceBlock": 120619124,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "burnAdmin": "oeth:0x0000000000000000000000000000000000000000",
        "burnAllowanceSD": 0,
        "deficitOffset": 0,
        "endpoint": "oeth:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "oeth:0x3da4f8E456AC648c489c286B99Ca37B666be7C4C",
          "planner": "oeth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "oeth:0x644abb1e17291b4403966119d15Ab081e4a487e9",
          "tokenMessaging": "oeth:0xF1fCb4CBd57B67d683972A59B6a7b1e2E8Bf27E6",
          "creditMessaging": "oeth:0xda82A31dF339BfDF0123661134b4DB63Cb1706f5",
          "lzToken": "oeth:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30111,
        "lpToken": "oeth:0x9f58A79D81477130C0C6D74b96e1397db9765ab1",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "oeth:0xec230013182261343F235B8c92b443f90A8A3c86",
        "planner": "oeth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "829848955208785830",
        "poolBalance": 303091931943,
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "oeth:0x94b008aA00579c1307B0EF2c499aD98a8ce58e58",
        "treasurer": "oeth:0x644abb1e17291b4403966119d15Ab081e4a487e9",
        "treasuryFee": 25001584282,
        "tvl": 279610179842
      },
      "implementationNames": {
        "oeth:0x19cFCE47eD54a88614648DC3f19A5980097007dD": "StargatePoolMigratable"
      }
    },
    {
      "name": "StargatePoolUSDC",
      "address": "oeth:0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0",
      "type": "Contract",
      "template": "stargate/StargatePoolUSDC",
      "sourceHashes": [
        "0x0ef9b0bca6f74cd24daa9d50e734dfec2ecbc71cef5b209fa0c0f93561ad2640"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit"
      ],
      "sinceTimestamp": 1716837017,
      "sinceBlock": 120619120,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "burnAdmin": "oeth:0x0000000000000000000000000000000000000000",
        "burnAllowanceSD": 0,
        "deficitOffset": 0,
        "endpoint": "oeth:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "oeth:0x1F605162282570dFa6255D27895587f4117F52FA",
          "planner": "oeth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "oeth:0x644abb1e17291b4403966119d15Ab081e4a487e9",
          "tokenMessaging": "oeth:0xF1fCb4CBd57B67d683972A59B6a7b1e2E8Bf27E6",
          "creditMessaging": "oeth:0xda82A31dF339BfDF0123661134b4DB63Cb1706f5",
          "lzToken": "oeth:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30111,
        "lpToken": "oeth:0x8D66Ff1845b1baCC6E87D867CA4680d05A349cA8",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "oeth:0xec230013182261343F235B8c92b443f90A8A3c86",
        "planner": "oeth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "349709877485436488",
        "poolBalance": 3245381105366,
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "oeth:0x0b2C639c533813f4Aa9D7837CAf62653d097Ff85",
        "treasurer": "oeth:0x644abb1e17291b4403966119d15Ab081e4a487e9",
        "treasuryFee": 51764145513,
        "tvl": 188905451774
      },
      "implementationNames": {
        "oeth:0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0": "StargatePoolUSDC"
      }
    },
    {
      "address": "oeth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "oeth:0x19cFCE47eD54a88614648DC3f19A5980097007dD",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "oeth:0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "oeth:0xe8CDF27AcD73a434D661C84887215F7598e7d0d3",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        }
      ]
    },
    {
      "name": "StargatePoolNative",
      "address": "oeth:0xe8CDF27AcD73a434D661C84887215F7598e7d0d3",
      "type": "Contract",
      "template": "stargate/StargatePoolNative",
      "sourceHashes": [
        "0x63ac97930921267a1251904351ae2409e0d62d3d3c3fcb2ed7bc1fc4775321f7"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837009,
      "sinceBlock": 120619116,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "deficitOffset": 0,
        "endpoint": "oeth:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "oeth:0x80F755e3091b2Ad99c08Da8D13E9C7635C1b8161",
          "planner": "oeth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "oeth:0x644abb1e17291b4403966119d15Ab081e4a487e9",
          "tokenMessaging": "oeth:0xF1fCb4CBd57B67d683972A59B6a7b1e2E8Bf27E6",
          "creditMessaging": "oeth:0xda82A31dF339BfDF0123661134b4DB63Cb1706f5",
          "lzToken": "oeth:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 15000,
        "localEid": 30111,
        "lpToken": "oeth:0x6Ea313859A5D9F6fF2a68f529e6361174bFD2225",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "oeth:0xec230013182261343F235B8c92b443f90A8A3c86",
        "planner": "oeth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "970263106782875053",
        "poolBalance": "740292645000000000000",
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "oeth:0x0000000000000000000000000000000000000000",
        "treasurer": "oeth:0x644abb1e17291b4403966119d15Ab081e4a487e9",
        "treasuryFee": 33681718,
        "tvl": "1329033937000000000000"
      },
      "implementationNames": {
        "oeth:0xe8CDF27AcD73a434D661C84887215F7598e7d0d3": "StargatePoolNative"
      }
    },
    {
      "name": "TokenMessagingOptimism",
      "address": "oeth:0xF1fCb4CBd57B67d683972A59B6a7b1e2E8Bf27E6",
      "type": "Contract",
      "template": "stargate/TokenMessaging",
      "sourceHashes": [
        "0xd0e407d7588e82d593435d256d12b9da5c2c70686a62e24948a96fcbc1a463b4"
      ],
      "proxyType": "immutable",
      "description": "A LayerZero OApp owned by Stargate that manages bridging messages from all pools on Ethereum. It can batch messages with a 'bus' mode or dispatch them immediately (taxi) for higher fees.",
      "sinceTimestamp": 1716837031,
      "sinceBlock": 120619127,
      "values": {
        "$immutable": true,
        "endpoint": "oeth:0x1a44076050125825900e736c501f859c50fE728c",
        "getTransferGasLimit": 2300,
        "maxAssetId": 13,
        "MSG_TYPE_BUS": 2,
        "MSG_TYPE_TAXI": 1,
        "oApp": "oeth:0xF1fCb4CBd57B67d683972A59B6a7b1e2E8Bf27E6",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 2 },
        "owner": "oeth:0xec230013182261343F235B8c92b443f90A8A3c86",
        "planner": "oeth:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "pools": [
          "oeth:0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0",
          "oeth:0x19cFCE47eD54a88614648DC3f19A5980097007dD",
          "oeth:0x0000000000000000000000000000000000000000",
          "oeth:0x0000000000000000000000000000000000000000",
          "oeth:0x0000000000000000000000000000000000000000",
          "oeth:0x0000000000000000000000000000000000000000",
          "oeth:0x0000000000000000000000000000000000000000",
          "oeth:0x0000000000000000000000000000000000000000",
          "oeth:0x0000000000000000000000000000000000000000",
          "oeth:0x0000000000000000000000000000000000000000",
          "oeth:0x0000000000000000000000000000000000000000",
          "oeth:0x0000000000000000000000000000000000000000",
          "oeth:0xe8CDF27AcD73a434D661C84887215F7598e7d0d3"
        ],
        "preCrime": "oeth:0x0000000000000000000000000000000000000000",
        "queueCapacity": 512
      },
      "fieldMeta": {
        "maxAssetId": {
          "description": "The highest currently registered assetID"
        }
      },
      "implementationNames": {
        "oeth:0xF1fCb4CBd57B67d683972A59B6a7b1e2E8Bf27E6": "TokenMessaging"
      }
    },
    {
      "address": "scr:0x0000000000000000000000000000000000000000",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "StargatePoolUSDC",
      "address": "scr:0x3Fc69CC4A842838bCDC9499178740226062b14E4",
      "type": "Contract",
      "template": "stargate/StargatePoolUSDC",
      "sourceHashes": [
        "0x0ef9b0bca6f74cd24daa9d50e734dfec2ecbc71cef5b209fa0c0f93561ad2640"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit"
      ],
      "sinceTimestamp": 1716837020,
      "sinceBlock": 6044867,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "burnAdmin": "scr:0x0000000000000000000000000000000000000000",
        "burnAllowanceSD": 0,
        "deficitOffset": 0,
        "endpoint": "scr:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "scr:0x503C5cFEa3477E0A576C8Cf5354023854b7A06Ff",
          "planner": "scr:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "scr:0xcbE78230CcA58b9EF4c3c5D1bC0D7E4b3206588a",
          "tokenMessaging": "scr:0x4e422B0aCb2Bd7e3aC70B5c0E5eb806e86a94038",
          "creditMessaging": "scr:0x4694900bDbA99Edf07A2E46C4093f88F9106a90D",
          "lzToken": "scr:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 2300,
        "localEid": 30214,
        "lpToken": "scr:0x1eA77149Dfd4C80A753aaa39AaFC22453aefcc99",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "scr:0xe46B47Be62785C20C6f3cb89f7043Ea045e6f88E",
        "planner": "scr:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "9554930247270813",
        "poolBalance": 535218463050,
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "scr:0x06eFdBFf2a14a7c8E15944D1F4A48F9F95F663A4",
        "treasurer": "scr:0xcbE78230CcA58b9EF4c3c5D1bC0D7E4b3206588a",
        "treasuryFee": 38511563819,
        "tvl": 86912564765
      },
      "implementationNames": {
        "scr:0x3Fc69CC4A842838bCDC9499178740226062b14E4": "StargatePoolUSDC"
      }
    },
    {
      "name": "TokenMessagingScroll",
      "address": "scr:0x4e422B0aCb2Bd7e3aC70B5c0E5eb806e86a94038",
      "type": "Contract",
      "template": "stargate/TokenMessaging",
      "sourceHashes": [
        "0xd0e407d7588e82d593435d256d12b9da5c2c70686a62e24948a96fcbc1a463b4"
      ],
      "proxyType": "immutable",
      "description": "A LayerZero OApp owned by Stargate that manages bridging messages from all pools on Ethereum. It can batch messages with a 'bus' mode or dispatch them immediately (taxi) for higher fees.",
      "sinceTimestamp": 1716837029,
      "sinceBlock": 6044870,
      "values": {
        "$immutable": true,
        "endpoint": "scr:0x1a44076050125825900e736c501f859c50fE728c",
        "getTransferGasLimit": 2300,
        "maxAssetId": 13,
        "MSG_TYPE_BUS": 2,
        "MSG_TYPE_TAXI": 1,
        "oApp": "scr:0x4e422B0aCb2Bd7e3aC70B5c0E5eb806e86a94038",
        "oAppVersion": { "senderVersion": 1, "receiverVersion": 2 },
        "owner": "scr:0xe46B47Be62785C20C6f3cb89f7043Ea045e6f88E",
        "planner": "scr:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "pools": [
          "scr:0x3Fc69CC4A842838bCDC9499178740226062b14E4",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0x0000000000000000000000000000000000000000",
          "scr:0xC2b638Cb5042c1B3c5d5C969361fB50569840583"
        ],
        "preCrime": "scr:0x0000000000000000000000000000000000000000",
        "queueCapacity": 512
      },
      "fieldMeta": {
        "maxAssetId": {
          "description": "The highest currently registered assetID"
        }
      },
      "implementationNames": {
        "scr:0x4e422B0aCb2Bd7e3aC70B5c0E5eb806e86a94038": "TokenMessaging"
      }
    },
    {
      "name": "StargatePoolNative",
      "address": "scr:0xC2b638Cb5042c1B3c5d5C969361fB50569840583",
      "type": "Contract",
      "template": "stargate/StargatePoolNative",
      "sourceHashes": [
        "0x63ac97930921267a1251904351ae2409e0d62d3d3c3fcb2ed7bc1fc4775321f7"
      ],
      "proxyType": "immutable",
      "ignoreInWatchMode": [
        "plannerFee",
        "poolBalance",
        "treasuryFee",
        "tvl",
        "getTransferGasLimit",
        "deficitOffset"
      ],
      "sinceTimestamp": 1716837011,
      "sinceBlock": 6044864,
      "values": {
        "$immutable": true,
        "approvalRequired": true,
        "deficitOffset": 0,
        "endpoint": "scr:0x1a44076050125825900e736c501f859c50fE728c",
        "getAddressConfig": {
          "feeLib": "scr:0x2A6c43e0DBDCde23d40c82F45682BC6D8A6dB219",
          "planner": "scr:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
          "treasurer": "scr:0xcbE78230CcA58b9EF4c3c5D1bC0D7E4b3206588a",
          "tokenMessaging": "scr:0x4e422B0aCb2Bd7e3aC70B5c0E5eb806e86a94038",
          "creditMessaging": "scr:0x4694900bDbA99Edf07A2E46C4093f88F9106a90D",
          "lzToken": "scr:0x0000000000000000000000000000000000000000"
        },
        "getTransferGasLimit": 15000,
        "localEid": 30214,
        "lpToken": "scr:0x73424Acc8749b5c76c7AbBB1B17D1F18Ce0Bb092",
        "oftVersion": { "interfaceId": "0x02e49c2c", "version": 0 },
        "owner": "scr:0xe46B47Be62785C20C6f3cb89f7043Ea045e6f88E",
        "planner": "scr:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
        "plannerFee": "188357416609685362",
        "poolBalance": "1408440074000000000000",
        "sharedDecimals": 6,
        "stargateType": 0,
        "status": 1,
        "token": "scr:0x0000000000000000000000000000000000000000",
        "treasurer": "scr:0xcbE78230CcA58b9EF4c3c5D1bC0D7E4b3206588a",
        "treasuryFee": 30659081,
        "tvl": "38211894000000000000"
      },
      "implementationNames": {
        "scr:0xC2b638Cb5042c1B3c5d5C969361fB50569840583": "StargatePoolNative"
      }
    },
    {
      "address": "scr:0xe37f7c80ceD04c4F243C0Fd04A5510D663CB88b5",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "scr:0x3Fc69CC4A842838bCDC9499178740226062b14E4",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        },
        {
          "permission": "interact",
          "from": "scr:0xC2b638Cb5042c1B3c5d5C969361fB50569840583",
          "description": "pause the pool and set deficit offsets (affects crosschain liquidity and fees).",
          "role": ".planner"
        }
      ]
    }
  ],
  "abis": {
    "arb1:0x19cFCE47eD54a88614648DC3f19A5980097007dD": [
      "constructor(address _endpoint, address _owner, uint16 _queueCapacity)",
      "error BusCodec_InvalidBusBytesLength()",
      "error BusCodec_InvalidMessage()",
      "error BusCodec_InvalidPassengersBytesLength()",
      "error Bus_InvalidFare(bool nativeDrop)",
      "error Bus_InvalidNumPassengers(uint8 numPassengers)",
      "error Bus_InvalidPassenger()",
      "error Bus_QueueFull()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error InvalidOptions(bytes options)",
      "error LzTokenUnavailable()",
      "error MessagingOptions_ZeroGasLimit()",
      "error Messaging_InvalidAssetId()",
      "error Messaging_InvalidEid()",
      "error Messaging_InvalidMsgValue()",
      "error Messaging_InvalidQueueCapacity()",
      "error Messaging_MaxNumPassengersExceedsQueueCapacity()",
      "error Messaging_NotEnoughPassengers()",
      "error Messaging_Unauthorized()",
      "error Messaging_Unavailable()",
      "error NoPeer(uint32 eid)",
      "error NotEnoughNative(uint256 msgValue)",
      "error OnlyEndpoint(address addr)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "error OnlySelf()",
      "error SimulationResult(bytes result)",
      "error TaxiCodec_InvalidMessage()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AssetIdSet(address stargateImpl, uint16 assetId)",
      "event BusDriven(uint32 dstEid, uint72 startTicketId, uint8 numPassengers, bytes32 guid)",
      "event BusQueueStorageInitialized(uint32 dstEid, uint16 startSlot, uint16 endSlot)",
      "event BusRode(uint32 dstEid, uint72 ticketId, uint80 fare, bytes passenger)",
      "event EnforcedOptionSet(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "event FaresSet(uint32 dstEid, uint80 busFare, uint80 busAndNativeDropFare)",
      "event GasLimitSet(uint32 eid, uint128 gasLimit, uint128 nativeDropGasLimit)",
      "event MaxAssetIdSet(uint16 maxAssetId)",
      "event MaxNumPassengersSet(uint32 dstEid, uint8 maxNumPassengers)",
      "event NativeDropAmountSet(uint32 dstEid, uint128 nativeDropAmount)",
      "event NativeDropApplied(address receiver, uint128 amount)",
      "event NativeDropFailed(address receiver, uint128 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "event PlannerSet(address planner)",
      "event PreCrimeSet(address preCrimeAddress)",
      "function MSG_TYPE_BUS() view returns (uint8)",
      "function MSG_TYPE_TAXI() view returns (uint8)",
      "function allowInitializePath(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin) view returns (bool)",
      "function assetIds(address stargateImpl) view returns (uint16 assetId)",
      "function busQueues(uint32 dstEid) view returns (uint8 maxNumPassengers, uint80 busFare, uint80 busAndNativeDropFare, uint16 qLength, uint72 nextTicketId)",
      "function combineOptions(uint32 _eid, uint16 _msgType, bytes _extraOptions) view returns (bytes)",
      "function driveBus(uint32 _dstEid, bytes _passengers) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function endpoint() view returns (address)",
      "function enforcedOptions(uint32 eid, uint16 msgType) view returns (bytes enforcedOption)",
      "function gasLimits(uint32 eid) view returns (uint128 gasLimit, uint128 nativeDropGasLimit)",
      "function getPassengerHash(uint32 _dstEid, uint16 _index) view returns (bytes32 hash)",
      "function getTransferGasLimit() view returns (uint256)",
      "function initializeBusQueueStorage(uint32[] _dstEids, uint16 _startSlot, uint16 _endSlot)",
      "function isComposeMsgSender(tuple(uint32 srcEid, bytes32 sender, uint64 nonce), bytes _message, address _sender) view returns (bool)",
      "function isPeer(uint32 _eid, bytes32 _peer) view returns (bool)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function lzReceiveAndRevert(tuple(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, uint32 dstEid, address receiver, bytes32 guid, uint256 value, address executor, bytes message, bytes extraData)[] _packets) payable",
      "function lzReceiveSimulate(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function maxAssetId() view returns (uint16)",
      "function nativeDropAmounts(uint32 dstEid) view returns (uint128 nativeDropAmount)",
      "function nextNonce(uint32, bytes32) view returns (uint64 nonce)",
      "function oApp() view returns (address)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function owner() view returns (address)",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function planner() view returns (address)",
      "function preCrime() view returns (address)",
      "function queueCapacity() view returns (uint16)",
      "function quoteDriveBus(uint32 _dstEid, bytes _passengers) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteFares(uint32 _dstEid, uint8 _numPassengers) view returns (uint256 busFare, uint256 busAndNativeDropFare)",
      "function quoteRideBus(uint32 _dstEid, bool _airdrop) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteTaxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function renounceOwnership()",
      "function rideBus(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bool nativeDrop) _params) returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAssetId(address _stargateImpl, uint16 _assetId)",
      "function setDelegate(address _delegate)",
      "function setEnforcedOptions(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "function setFares(uint32 _dstEid, uint80 _busFare, uint80 _busAndNativeDropFare)",
      "function setGasLimit(uint32 _eid, uint128 _gasLimit, uint128 _nativeDropGasLimit)",
      "function setMaxAssetId(uint16 _maxAssetId)",
      "function setMaxNumPassengers(uint32 _dstEid, uint8 _maxNumPassengers)",
      "function setNativeDropAmount(uint32 _dstEid, uint128 _nativeDropAmount)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function setPlanner(address _planner)",
      "function setPreCrime(address _preCrime)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function stargateImpls(uint16 assetId) view returns (address stargateImpl)",
      "function taxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, tuple(uint256 nativeFee, uint256 lzTokenFee) _messagingFee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function transferOwnership(address newOwner)"
    ],
    "arb1:0xA45B5130f36CDcA45667738e2a258AB09f4A5f7F": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function approvalRequired() pure returns (bool)",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "arb1:0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error StargatePoolMigratable_BurnAmountExceedsBalance()",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Path_CreditBurned(uint64 amountSD)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function allowBurn(address _burnAdmin, uint64 _burnAllowanceSD)",
      "function approvalRequired() pure returns (bool)",
      "function burnAdmin() view returns (address)",
      "function burnAllowanceSD() view returns (uint64)",
      "function burnLocked()",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "arb1:0xe8CDF27AcD73a434D661C84887215F7598e7d0d3": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error StargatePoolUSDC_BurnAmountExceedsBalance()",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Path_CreditBurned(uint64 amountSD)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function allowBurn(address _burnAdmin, uint64 _burnAllowanceSD)",
      "function approvalRequired() pure returns (bool)",
      "function burnAdmin() view returns (address)",
      "function burnAllowanceSD() view returns (uint64)",
      "function burnLockedUSDC()",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "base:0x27a16dc786820B16E5c9028b75B99F6f604b5d26": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error StargatePoolUSDC_BurnAmountExceedsBalance()",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Path_CreditBurned(uint64 amountSD)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function allowBurn(address _burnAdmin, uint64 _burnAllowanceSD)",
      "function approvalRequired() pure returns (bool)",
      "function burnAdmin() view returns (address)",
      "function burnAllowanceSD() view returns (uint64)",
      "function burnLockedUSDC()",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "base:0x5634c4a5FEd09819E3c46D86A965Dd9447d86e47": [
      "constructor(address _endpoint, address _owner, uint16 _queueCapacity)",
      "error BusCodec_InvalidBusBytesLength()",
      "error BusCodec_InvalidMessage()",
      "error BusCodec_InvalidPassengersBytesLength()",
      "error Bus_InvalidFare(bool nativeDrop)",
      "error Bus_InvalidNumPassengers(uint8 numPassengers)",
      "error Bus_InvalidPassenger()",
      "error Bus_QueueFull()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error InvalidOptions(bytes options)",
      "error LzTokenUnavailable()",
      "error MessagingOptions_ZeroGasLimit()",
      "error Messaging_InvalidAssetId()",
      "error Messaging_InvalidEid()",
      "error Messaging_InvalidMsgValue()",
      "error Messaging_InvalidQueueCapacity()",
      "error Messaging_MaxNumPassengersExceedsQueueCapacity()",
      "error Messaging_NotEnoughPassengers()",
      "error Messaging_Unauthorized()",
      "error Messaging_Unavailable()",
      "error NoPeer(uint32 eid)",
      "error NotEnoughNative(uint256 msgValue)",
      "error OnlyEndpoint(address addr)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "error OnlySelf()",
      "error SimulationResult(bytes result)",
      "error TaxiCodec_InvalidMessage()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AssetIdSet(address stargateImpl, uint16 assetId)",
      "event BusDriven(uint32 dstEid, uint72 startTicketId, uint8 numPassengers, bytes32 guid)",
      "event BusQueueStorageInitialized(uint32 dstEid, uint16 startSlot, uint16 endSlot)",
      "event BusRode(uint32 dstEid, uint72 ticketId, uint80 fare, bytes passenger)",
      "event EnforcedOptionSet(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "event FaresSet(uint32 dstEid, uint80 busFare, uint80 busAndNativeDropFare)",
      "event GasLimitSet(uint32 eid, uint128 gasLimit, uint128 nativeDropGasLimit)",
      "event MaxAssetIdSet(uint16 maxAssetId)",
      "event MaxNumPassengersSet(uint32 dstEid, uint8 maxNumPassengers)",
      "event NativeDropAmountSet(uint32 dstEid, uint128 nativeDropAmount)",
      "event NativeDropApplied(address receiver, uint128 amount)",
      "event NativeDropFailed(address receiver, uint128 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "event PlannerSet(address planner)",
      "event PreCrimeSet(address preCrimeAddress)",
      "function MSG_TYPE_BUS() view returns (uint8)",
      "function MSG_TYPE_TAXI() view returns (uint8)",
      "function allowInitializePath(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin) view returns (bool)",
      "function assetIds(address stargateImpl) view returns (uint16 assetId)",
      "function busQueues(uint32 dstEid) view returns (uint8 maxNumPassengers, uint80 busFare, uint80 busAndNativeDropFare, uint16 qLength, uint72 nextTicketId)",
      "function combineOptions(uint32 _eid, uint16 _msgType, bytes _extraOptions) view returns (bytes)",
      "function driveBus(uint32 _dstEid, bytes _passengers) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function endpoint() view returns (address)",
      "function enforcedOptions(uint32 eid, uint16 msgType) view returns (bytes enforcedOption)",
      "function gasLimits(uint32 eid) view returns (uint128 gasLimit, uint128 nativeDropGasLimit)",
      "function getPassengerHash(uint32 _dstEid, uint16 _index) view returns (bytes32 hash)",
      "function getTransferGasLimit() view returns (uint256)",
      "function initializeBusQueueStorage(uint32[] _dstEids, uint16 _startSlot, uint16 _endSlot)",
      "function isComposeMsgSender(tuple(uint32 srcEid, bytes32 sender, uint64 nonce), bytes _message, address _sender) view returns (bool)",
      "function isPeer(uint32 _eid, bytes32 _peer) view returns (bool)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function lzReceiveAndRevert(tuple(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, uint32 dstEid, address receiver, bytes32 guid, uint256 value, address executor, bytes message, bytes extraData)[] _packets) payable",
      "function lzReceiveSimulate(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function maxAssetId() view returns (uint16)",
      "function nativeDropAmounts(uint32 dstEid) view returns (uint128 nativeDropAmount)",
      "function nextNonce(uint32, bytes32) view returns (uint64 nonce)",
      "function oApp() view returns (address)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function owner() view returns (address)",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function planner() view returns (address)",
      "function preCrime() view returns (address)",
      "function queueCapacity() view returns (uint16)",
      "function quoteDriveBus(uint32 _dstEid, bytes _passengers) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteFares(uint32 _dstEid, uint8 _numPassengers) view returns (uint256 busFare, uint256 busAndNativeDropFare)",
      "function quoteRideBus(uint32 _dstEid, bool _airdrop) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteTaxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function renounceOwnership()",
      "function rideBus(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bool nativeDrop) _params) returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAssetId(address _stargateImpl, uint16 _assetId)",
      "function setDelegate(address _delegate)",
      "function setEnforcedOptions(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "function setFares(uint32 _dstEid, uint80 _busFare, uint80 _busAndNativeDropFare)",
      "function setGasLimit(uint32 _eid, uint128 _gasLimit, uint128 _nativeDropGasLimit)",
      "function setMaxAssetId(uint16 _maxAssetId)",
      "function setMaxNumPassengers(uint32 _dstEid, uint8 _maxNumPassengers)",
      "function setNativeDropAmount(uint32 _dstEid, uint128 _nativeDropAmount)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function setPlanner(address _planner)",
      "function setPreCrime(address _preCrime)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function stargateImpls(uint16 assetId) view returns (address stargateImpl)",
      "function taxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, tuple(uint256 nativeFee, uint256 lzTokenFee) _messagingFee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function transferOwnership(address newOwner)"
    ],
    "base:0x87Dd5A7481726a53C5Ac6b0D296F5846f95a72f2": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error StargatePoolEURC_BurnAmountExceedsBalance()",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Path_CreditBurned(uint64 amountSD)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function allowBurn(address _burnAdmin, uint64 _burnAllowanceSD)",
      "function approvalRequired() pure returns (bool)",
      "function burnAdmin() view returns (address)",
      "function burnAllowanceSD() view returns (uint64)",
      "function burnLockedEURC()",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "base:0xdc181Bd607330aeeBEF6ea62e03e5e1Fb4B6F7C7": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function approvalRequired() pure returns (bool)",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "eth:0x1041D127b2d4BC700F0F563883bC689502606918": [
      "constructor(address _owner, address _admin)",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "error Unauthorized()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addTreasuryFee(address _stargate, uint256 _amountLD)",
      "function admin() view returns (address)",
      "function getTransferGasLimit() view returns (uint256)",
      "function owner() view returns (address)",
      "function recoverToken(address _stargate, address _token, uint256 _amount)",
      "function renounceOwnership()",
      "function setAdmin(address _admin)",
      "function setStargate(address _stargate, bool _value)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function stargates(address) view returns (bool)",
      "function transfer(address _token, address _to, uint256 _amount)",
      "function transferOwnership(address newOwner)",
      "function withdrawTreasuryFee(address _stargate, uint64 _amountSD)"
    ],
    "eth:0x173272739Bd7Aa6e4e214714048a9fE699453059": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "eth:0x1a44076050125825900e736c501f859c50fE728c": [
      "constructor(uint32 _eid, address _owner)",
      "error LZ_AlreadyRegistered()",
      "error LZ_ComposeExists()",
      "error LZ_ComposeNotFound(bytes32 expected, bytes32 actual)",
      "error LZ_DefaultReceiveLibUnavailable()",
      "error LZ_DefaultSendLibUnavailable()",
      "error LZ_InsufficientFee(uint256 requiredNative, uint256 suppliedNative, uint256 requiredLzToken, uint256 suppliedLzToken)",
      "error LZ_InvalidExpiry()",
      "error LZ_InvalidNonce(uint64 nonce)",
      "error LZ_InvalidPayloadHash()",
      "error LZ_InvalidReceiveLibrary()",
      "error LZ_LzTokenUnavailable()",
      "error LZ_OnlyNonDefaultLib()",
      "error LZ_OnlyReceiveLib()",
      "error LZ_OnlyRegisteredLib()",
      "error LZ_OnlyRegisteredOrDefaultLib()",
      "error LZ_OnlySendLib()",
      "error LZ_PathNotInitializable()",
      "error LZ_PathNotVerifiable()",
      "error LZ_PayloadHashNotFound(bytes32 expected, bytes32 actual)",
      "error LZ_SameValue()",
      "error LZ_SendReentrancy()",
      "error LZ_Unauthorized()",
      "error LZ_UnsupportedEid()",
      "error LZ_UnsupportedInterface()",
      "error LZ_ZeroLzTokenFee()",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event ComposeDelivered(address from, address to, bytes32 guid, uint16 index)",
      "event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message)",
      "event DefaultReceiveLibrarySet(uint32 eid, address newLib)",
      "event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry)",
      "event DefaultSendLibrarySet(uint32 eid, address newLib)",
      "event DelegateSet(address sender, address delegate)",
      "event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce)",
      "event LibraryRegistered(address newLib)",
      "event LzComposeAlert(address indexed from, address indexed to, address indexed executor, bytes32 guid, uint16 index, uint256 gas, uint256 value, bytes message, bytes extraData, bytes reason)",
      "event LzReceiveAlert(address indexed receiver, address indexed executor, tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, bytes32 guid, uint256 gas, uint256 value, bytes message, bytes extraData, bytes reason)",
      "event LzTokenSet(address token)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash)",
      "event PacketDelivered(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, address receiver)",
      "event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash)",
      "event PacketSent(bytes encodedPayload, bytes options, address sendLibrary)",
      "event PacketVerified(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, address receiver, bytes32 payloadHash)",
      "event ReceiveLibrarySet(address receiver, uint32 eid, address newLib)",
      "event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout)",
      "event SendLibrarySet(address sender, uint32 eid, address newLib)",
      "function EMPTY_PAYLOAD_HASH() view returns (bytes32)",
      "function NIL_PAYLOAD_HASH() view returns (bytes32)",
      "function blockedLibrary() view returns (address)",
      "function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash)",
      "function clear(address _oapp, tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message)",
      "function composeQueue(address from, address to, bytes32 guid, uint16 index) view returns (bytes32 messageHash)",
      "function defaultReceiveLibrary(uint32 srcEid) view returns (address lib)",
      "function defaultReceiveLibraryTimeout(uint32 srcEid) view returns (address lib, uint256 expiry)",
      "function defaultSendLibrary(uint32 dstEid) view returns (address lib)",
      "function delegates(address oapp) view returns (address delegate)",
      "function eid() view returns (uint32)",
      "function getConfig(address _oapp, address _lib, uint32 _eid, uint32 _configType) view returns (bytes config)",
      "function getReceiveLibrary(address _receiver, uint32 _srcEid) view returns (address lib, bool isDefault)",
      "function getRegisteredLibraries() view returns (address[])",
      "function getSendContext() view returns (uint32, address)",
      "function getSendLibrary(address _sender, uint32 _dstEid) view returns (address lib)",
      "function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) view returns (uint64)",
      "function inboundPayloadHash(address receiver, uint32 srcEid, bytes32 sender, uint64 inboundNonce) view returns (bytes32 payloadHash)",
      "function initializable(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver) view returns (bool)",
      "function isDefaultSendLibrary(address _sender, uint32 _dstEid) view returns (bool)",
      "function isRegisteredLibrary(address lib) view returns (bool)",
      "function isSendingMessage() view returns (bool)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function isValidReceiveLibrary(address _receiver, uint32 _srcEid, address _actualReceiveLib) view returns (bool)",
      "function lazyInboundNonce(address receiver, uint32 srcEid, bytes32 sender) view returns (uint64 nonce)",
      "function lzCompose(address _from, address _to, bytes32 _guid, uint16 _index, bytes _message, bytes _extraData) payable",
      "function lzComposeAlert(address _from, address _to, bytes32 _guid, uint16 _index, uint256 _gas, uint256 _value, bytes _message, bytes _extraData, bytes _reason)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _guid, bytes _message, bytes _extraData) payable",
      "function lzReceiveAlert(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _guid, uint256 _gas, uint256 _value, bytes _message, bytes _extraData, bytes _reason)",
      "function lzToken() view returns (address)",
      "function nativeToken() view returns (address)",
      "function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) view returns (bytes32)",
      "function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash)",
      "function outboundNonce(address sender, uint32 dstEid, bytes32 receiver) view returns (uint64 nonce)",
      "function owner() view returns (address)",
      "function quote(tuple(uint32 dstEid, bytes32 receiver, bytes message, bytes options, bool payInLzToken) _params, address _sender) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function receiveLibraryTimeout(address receiver, uint32 srcEid) view returns (address lib, uint256 expiry)",
      "function recoverToken(address _token, address _to, uint256 _amount)",
      "function registerLibrary(address _lib)",
      "function renounceOwnership()",
      "function send(tuple(uint32 dstEid, bytes32 receiver, bytes message, bytes options, bool payInLzToken) _params, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee))",
      "function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes _message)",
      "function setConfig(address _oapp, address _lib, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod)",
      "function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry)",
      "function setDefaultSendLibrary(uint32 _eid, address _newLib)",
      "function setDelegate(address _delegate)",
      "function setLzToken(address _lzToken)",
      "function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod)",
      "function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry)",
      "function setSendLibrary(address _oapp, uint32 _eid, address _newLib)",
      "function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver) view returns (bool)",
      "function verify(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, address _receiver, bytes32 _payloadHash)"
    ],
    "eth:0x1ccBf0db9C192d969de57E25B3fF09A25bb1D862": [
      "error LZ_NotImplemented()",
      "function isSupportedEid(uint32) pure returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)"
    ],
    "eth:0x268Ca24DAefF1FaC2ed883c598200CcbB79E931D": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function approvalRequired() pure returns (bool)",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "eth:0x5ebB3f2feaA15271101a927869B3A56837e73056": [
      "error LZ_Treasury_LzTokenNotEnabled()",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getFee(address, uint32, uint256 _totalFee, bool _payInLzToken) view returns (uint256)",
      "function lzTokenEnabled() view returns (bool)",
      "function lzTokenFee() view returns (uint256)",
      "function nativeBP() view returns (uint256)",
      "function owner() view returns (address)",
      "function payFee(address, uint32, uint256 _totalFee, bool _payInLzToken) payable returns (uint256)",
      "function renounceOwnership()",
      "function setLzTokenEnabled(bool _lzTokenEnabled)",
      "function setLzTokenFee(uint256 _lzTokenFee)",
      "function setNativeFeeBP(uint256 _nativeBP)",
      "function transferOwnership(address newOwner)",
      "function withdrawLzToken(address _messageLib, address _lzToken, address _to, uint256 _amount)",
      "function withdrawNativeFee(address _messageLib, address _to, uint256 _amount)",
      "function withdrawToken(address _token, address _to, uint256 _amount)"
    ],
    "eth:0x6b8aD17795d89B283e6D0362A87A403f3544bb9d": [
      "constructor(address _endpoint, address _owner)",
      "error CreditMsgCodec_InvalidMessage()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error InvalidOptions(bytes options)",
      "error LzTokenUnavailable()",
      "error MessagingOptions_ZeroGasLimit()",
      "error Messaging_InvalidAssetId()",
      "error Messaging_Unauthorized()",
      "error Messaging_Unavailable()",
      "error NoPeer(uint32 eid)",
      "error NotEnoughNative(uint256 msgValue)",
      "error OnlyEndpoint(address addr)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "error OnlySelf()",
      "error SimulationResult(bytes result)",
      "event AssetIdSet(address stargateImpl, uint16 assetId)",
      "event EnforcedOptionSet(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "event GasLimitSet(uint32 eid, uint128 gasLimit)",
      "event MaxAssetIdSet(uint16 maxAssetId)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "event PlannerSet(address planner)",
      "event PreCrimeSet(address preCrimeAddress)",
      "function allowInitializePath(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin) view returns (bool)",
      "function assetIds(address stargateImpl) view returns (uint16 assetId)",
      "function combineOptions(uint32 _eid, uint16 _msgType, bytes _extraOptions) view returns (bytes)",
      "function endpoint() view returns (address)",
      "function enforcedOptions(uint32 eid, uint16 msgType) view returns (bytes enforcedOption)",
      "function gasLimits(uint32 eid) view returns (uint128 gasLimit)",
      "function isComposeMsgSender(tuple(uint32 srcEid, bytes32 sender, uint64 nonce), bytes, address _sender) view returns (bool)",
      "function isPeer(uint32 _eid, bytes32 _peer) view returns (bool)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function lzReceiveAndRevert(tuple(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, uint32 dstEid, address receiver, bytes32 guid, uint256 value, address executor, bytes message, bytes extraData)[] _packets) payable",
      "function lzReceiveSimulate(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function maxAssetId() view returns (uint16)",
      "function nextNonce(uint32, bytes32) view returns (uint64 nonce)",
      "function oApp() view returns (address)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function owner() view returns (address)",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function planner() view returns (address)",
      "function preCrime() view returns (address)",
      "function quoteSendCredits(uint32 _dstEid, tuple(uint16 assetId, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] credits)[] _creditBatches) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function renounceOwnership()",
      "function sendCredits(uint32 _dstEid, tuple(uint16 assetId, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] credits)[] _creditBatches) payable",
      "function setAssetId(address _stargateImpl, uint16 _assetId)",
      "function setDelegate(address _delegate)",
      "function setEnforcedOptions(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "function setGasLimit(uint32 _eid, uint128 _gasLimit)",
      "function setMaxAssetId(uint16 _maxAssetId)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function setPlanner(address _planner)",
      "function setPreCrime(address _preCrime)",
      "function stargateImpls(uint16 assetId) view returns (address stargateImpl)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0x6d6620eFa72948C5f68A3C8646d58C00d3f4A980": [
      "constructor(address _endpoint, address _owner, uint16 _queueCapacity)",
      "error BusCodec_InvalidBusBytesLength()",
      "error BusCodec_InvalidMessage()",
      "error BusCodec_InvalidPassengersBytesLength()",
      "error Bus_InvalidFare(bool nativeDrop)",
      "error Bus_InvalidNumPassengers(uint8 numPassengers)",
      "error Bus_InvalidPassenger()",
      "error Bus_QueueFull()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error InvalidOptions(bytes options)",
      "error LzTokenUnavailable()",
      "error MessagingOptions_ZeroGasLimit()",
      "error Messaging_InvalidAssetId()",
      "error Messaging_InvalidEid()",
      "error Messaging_InvalidMsgValue()",
      "error Messaging_InvalidQueueCapacity()",
      "error Messaging_MaxNumPassengersExceedsQueueCapacity()",
      "error Messaging_NotEnoughPassengers()",
      "error Messaging_Unauthorized()",
      "error Messaging_Unavailable()",
      "error NoPeer(uint32 eid)",
      "error NotEnoughNative(uint256 msgValue)",
      "error OnlyEndpoint(address addr)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "error OnlySelf()",
      "error SimulationResult(bytes result)",
      "error TaxiCodec_InvalidMessage()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AssetIdSet(address stargateImpl, uint16 assetId)",
      "event BusDriven(uint32 dstEid, uint72 startTicketId, uint8 numPassengers, bytes32 guid)",
      "event BusQueueStorageInitialized(uint32 dstEid, uint16 startSlot, uint16 endSlot)",
      "event BusRode(uint32 dstEid, uint72 ticketId, uint80 fare, bytes passenger)",
      "event EnforcedOptionSet(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "event FaresSet(uint32 dstEid, uint80 busFare, uint80 busAndNativeDropFare)",
      "event GasLimitSet(uint32 eid, uint128 gasLimit, uint128 nativeDropGasLimit)",
      "event MaxAssetIdSet(uint16 maxAssetId)",
      "event MaxNumPassengersSet(uint32 dstEid, uint8 maxNumPassengers)",
      "event NativeDropAmountSet(uint32 dstEid, uint128 nativeDropAmount)",
      "event NativeDropApplied(address receiver, uint128 amount)",
      "event NativeDropFailed(address receiver, uint128 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "event PlannerSet(address planner)",
      "event PreCrimeSet(address preCrimeAddress)",
      "function MSG_TYPE_BUS() view returns (uint8)",
      "function MSG_TYPE_TAXI() view returns (uint8)",
      "function allowInitializePath(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin) view returns (bool)",
      "function assetIds(address stargateImpl) view returns (uint16 assetId)",
      "function busQueues(uint32 dstEid) view returns (uint8 maxNumPassengers, uint80 busFare, uint80 busAndNativeDropFare, uint16 qLength, uint72 nextTicketId)",
      "function combineOptions(uint32 _eid, uint16 _msgType, bytes _extraOptions) view returns (bytes)",
      "function driveBus(uint32 _dstEid, bytes _passengers) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function endpoint() view returns (address)",
      "function enforcedOptions(uint32 eid, uint16 msgType) view returns (bytes enforcedOption)",
      "function gasLimits(uint32 eid) view returns (uint128 gasLimit, uint128 nativeDropGasLimit)",
      "function getPassengerHash(uint32 _dstEid, uint16 _index) view returns (bytes32 hash)",
      "function getTransferGasLimit() view returns (uint256)",
      "function initializeBusQueueStorage(uint32[] _dstEids, uint16 _startSlot, uint16 _endSlot)",
      "function isComposeMsgSender(tuple(uint32 srcEid, bytes32 sender, uint64 nonce), bytes _message, address _sender) view returns (bool)",
      "function isPeer(uint32 _eid, bytes32 _peer) view returns (bool)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function lzReceiveAndRevert(tuple(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, uint32 dstEid, address receiver, bytes32 guid, uint256 value, address executor, bytes message, bytes extraData)[] _packets) payable",
      "function lzReceiveSimulate(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function maxAssetId() view returns (uint16)",
      "function nativeDropAmounts(uint32 dstEid) view returns (uint128 nativeDropAmount)",
      "function nextNonce(uint32, bytes32) view returns (uint64 nonce)",
      "function oApp() view returns (address)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function owner() view returns (address)",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function planner() view returns (address)",
      "function preCrime() view returns (address)",
      "function queueCapacity() view returns (uint16)",
      "function quoteDriveBus(uint32 _dstEid, bytes _passengers) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteFares(uint32 _dstEid, uint8 _numPassengers) view returns (uint256 busFare, uint256 busAndNativeDropFare)",
      "function quoteRideBus(uint32 _dstEid, bool _airdrop) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteTaxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function renounceOwnership()",
      "function rideBus(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bool nativeDrop) _params) returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAssetId(address _stargateImpl, uint16 _assetId)",
      "function setDelegate(address _delegate)",
      "function setEnforcedOptions(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "function setFares(uint32 _dstEid, uint80 _busFare, uint80 _busAndNativeDropFare)",
      "function setGasLimit(uint32 _eid, uint128 _gasLimit, uint128 _nativeDropGasLimit)",
      "function setMaxAssetId(uint16 _maxAssetId)",
      "function setMaxNumPassengers(uint32 _dstEid, uint8 _maxNumPassengers)",
      "function setNativeDropAmount(uint32 _dstEid, uint128 _nativeDropAmount)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function setPlanner(address _planner)",
      "function setPreCrime(address _preCrime)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function stargateImpls(uint16 assetId) view returns (address stargateImpl)",
      "function taxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, tuple(uint256 nativeFee, uint256 lzTokenFee) _messagingFee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function transferOwnership(address newOwner)"
    ],
    "eth:0x74F55Bc2a79A27A0bF1D1A35dB5d0Fc36b9FDB9D": [
      "constructor(address _endpoint, uint256 _treasuryGasLimit, uint256 _treasuryGasForFeeCap)",
      "error DVN_InvalidDVNIdx()",
      "error DVN_InvalidDVNOptions(uint256 cursor)",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_RL_AtLeastOneDVN()",
      "error LZ_RL_CannotWithdrawAltToken()",
      "error LZ_RL_InvalidAmount(uint256 requested, uint256 available)",
      "error LZ_RL_InvalidCmdHash()",
      "error LZ_RL_InvalidConfigType(uint32 configType)",
      "error LZ_RL_InvalidEid()",
      "error LZ_RL_InvalidExecutor()",
      "error LZ_RL_InvalidOptionalDVNCount()",
      "error LZ_RL_InvalidOptionalDVNThreshold()",
      "error LZ_RL_InvalidPacketHeader()",
      "error LZ_RL_InvalidPacketVersion()",
      "error LZ_RL_InvalidReceiver()",
      "error LZ_RL_InvalidRequiredDVNCount()",
      "error LZ_RL_NotTreasury()",
      "error LZ_RL_Unsorted()",
      "error LZ_RL_UnsupportedEid(uint32 eid)",
      "error LZ_RL_Verifying()",
      "error LZ_ULN_InvalidLegacyType1Option()",
      "error LZ_ULN_InvalidLegacyType2Option()",
      "error LZ_ULN_InvalidWorkerId(uint8 workerId)",
      "error LZ_ULN_InvalidWorkerOptions(uint256 cursor)",
      "error LZ_ULN_UnsupportedOptionType(uint16 optionType)",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event DVNFeePaid(address[] requiredDVNs, address[] optionalDVNs, uint256[] fees)",
      "event DefaultReadLibConfigsSet(tuple(uint32 eid, tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event ExecutorFeePaid(address executor, uint256 fee)",
      "event LzTokenFeeWithdrawn(address lzToken, address receiver, uint256 amount)",
      "event NativeFeeWithdrawn(address worker, address receiver, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PayloadVerified(address dvn, bytes header, bytes32 cmdHash, bytes32 payloadHash)",
      "event ReadLibConfigSet(address oapp, uint32 eid, tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "event TreasuryNativeFeeCapSet(uint256 newTreasuryNativeFeeCap)",
      "event TreasurySet(address treasury)",
      "function cmdHashLookup(address oapp, uint32 eid, uint64 nonce) view returns (bytes32 cmdHash)",
      "function commitVerification(bytes _packetHeader, bytes32 _cmdHash, bytes32 _payloadHash)",
      "function fees(address worker) view returns (uint256 fee)",
      "function getAppReadLibConfig(address _oapp, uint32 _remoteEid) view returns (tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getReadLibConfig(address _oapp, uint32 _remoteEid) view returns (tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function getTreasuryAndNativeFeeCap() view returns (address, uint256)",
      "function hashLookup(bytes32 headerHash, bytes32 cmdHash, address dvn) view returns (bytes32 payloadHash)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function quote(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function renounceOwnership()",
      "function send(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) returns (tuple(uint256 nativeFee, uint256 lzTokenFee), bytes)",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultReadLibConfigs(tuple(uint32 eid, tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function setTreasury(address _treasury)",
      "function setTreasuryNativeFeeCap(uint256 _newTreasuryNativeFeeCap)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(address executor, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) _config, bytes32 _headerHash, bytes32 _cmdHash, bytes32 _payloadHash) view returns (bool)",
      "function verify(bytes _packetHeader, bytes32 _cmdHash, bytes32 _payloadHash)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)",
      "function withdrawFee(address _to, uint256 _amount)",
      "function withdrawLzTokenFee(address _lzToken, address _to, uint256 _amount)"
    ],
    "eth:0x77b2043768d28E9C9aB44E1aBfC95944bcE57931": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function approvalRequired() pure returns (bool)",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "eth:0x783129E4d7bA0Af0C896c239E57C06DF379aAE8c": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error StargatePoolEURC_BurnAmountExceedsBalance()",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Path_CreditBurned(uint64 amountSD)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function allowBurn(address _burnAdmin, uint64 _burnAllowanceSD)",
      "function approvalRequired() pure returns (bool)",
      "function burnAdmin() view returns (address)",
      "function burnAllowanceSD() view returns (uint64)",
      "function burnLockedEURC()",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "eth:0x8FafAE7Dd957044088b3d0F67359C327c6200d18": [
      "constructor(uint32 _vid, address[] _messageLibs, address _priceFeed, address[] _signers, uint64 _quorum, address[] _admins)",
      "error DVN_DuplicatedHash(bytes32 executableHash)",
      "error DVN_InstructionExpired()",
      "error DVN_InvalidRole(bytes32 role)",
      "error DVN_InvalidSignatures()",
      "error DVN_InvalidTarget(address target)",
      "error DVN_InvalidVid(uint32 vid)",
      "error DVN_OnlySelf()",
      "error MultiSig_OnlySigner()",
      "error MultiSig_QuorumIsZero()",
      "error MultiSig_SignersSizeIsLessThanQuorum(uint64 signersSize, uint64 quorum)",
      "error MultiSig_StateAlreadySet(address signer, bool active)",
      "error MultiSig_UnorderedSigners()",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "error Worker_NotAllowed()",
      "error Worker_OnlyMessageLib()",
      "error Worker_RoleRenouncingDisabled()",
      "event ExecuteFailed(uint256 _index, bytes _data)",
      "event HashAlreadyUsed(tuple(uint32 vid, address target, bytes callData, uint256 expiration, bytes signatures) param, bytes32 _hash)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SetDefaultMultiplierBps(uint16 multiplierBps)",
      "event SetDstConfig(tuple(uint32 dstEid, uint64 gas, uint16 multiplierBps, uint128 floorMarginUSD)[] params)",
      "event SetPriceFeed(address priceFeed)",
      "event SetSupportedOptionTypes(uint32 dstEid, uint8[] optionTypes)",
      "event SetWorkerLib(address workerLib)",
      "event Unpaused(address account)",
      "event UpdateQuorum(uint64 _quorum)",
      "event UpdateSigner(address _signer, bool _active)",
      "event VerifierFeePaid(uint256 fee)",
      "event VerifySignaturesFailed(uint256 idx)",
      "event Withdraw(address lib, address to, uint256 amount)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function allowlistSize() view returns (uint64)",
      "function assignJob(tuple(uint32 dstEid, bytes packetHeader, bytes32 payloadHash, uint64 confirmations, address sender) _param, bytes _options) payable returns (uint256 totalFee)",
      "function assignJob(uint16 _dstEid, uint16, uint64 _confirmations, address _sender) returns (uint256 totalFee)",
      "function defaultMultiplierBps() view returns (uint16)",
      "function dstConfig(uint32 dstEid) view returns (uint64 gas, uint16 multiplierBps, uint128 floorMarginUSD)",
      "function execute(tuple(uint32 vid, address target, bytes callData, uint256 expiration, bytes signatures)[] _params)",
      "function getFee(uint32 _dstEid, uint64 _confirmations, address _sender, bytes _options) view returns (uint256 fee)",
      "function getFee(uint16 _dstEid, uint16, uint64 _confirmations, address _sender) view returns (uint256 fee)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getSupportedOptionTypes(uint32 _eid) view returns (uint8[])",
      "function grantRole(bytes32 _role, address _account)",
      "function hasAcl(address _sender) view returns (bool)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashCallData(uint32 _vid, address _target, bytes _callData, uint256 _expiration) pure returns (bytes32)",
      "function paused() view returns (bool)",
      "function priceFeed() view returns (address)",
      "function quorum() view returns (uint64)",
      "function quorumChangeAdmin(tuple(uint32 vid, address target, bytes callData, uint256 expiration, bytes signatures) _param)",
      "function renounceRole(bytes32, address) pure",
      "function revokeRole(bytes32 _role, address _account)",
      "function setDefaultMultiplierBps(uint16 _multiplierBps)",
      "function setDstConfig(tuple(uint32 dstEid, uint64 gas, uint16 multiplierBps, uint128 floorMarginUSD)[] _params)",
      "function setPaused(bool _paused)",
      "function setPriceFeed(address _priceFeed)",
      "function setQuorum(uint64 _quorum)",
      "function setSigner(address _signer, bool _active)",
      "function setSupportedOptionTypes(uint32 _eid, uint8[] _optionTypes)",
      "function setWorkerFeeLib(address _workerFeeLib)",
      "function signerSize() view returns (uint64)",
      "function signers(address signer) view returns (bool active)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function usedHashes(bytes32 executableHash) view returns (bool used)",
      "function verifySignatures(bytes32 _hash, bytes _signatures) view returns (bool, uint8)",
      "function vid() view returns (uint32)",
      "function withdrawFee(address _lib, address _to, uint256 _amount)",
      "function withdrawFeeFromUlnV2(address _lib, address _to, uint256 _amount)",
      "function withdrawToken(address _token, address _to, uint256 _amount)",
      "function workerFeeLib() view returns (address)"
    ],
    "eth:0x933597a323Eb81cAe705C5bC29985172fd5A3973": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error StargatePoolMigratable_BurnAmountExceedsBalance()",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Path_CreditBurned(uint64 amountSD)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function allowBurn(address _burnAdmin, uint64 _burnAllowanceSD)",
      "function approvalRequired() pure returns (bool)",
      "function burnAdmin() view returns (address)",
      "function burnAllowanceSD() view returns (uint64)",
      "function burnLocked()",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "eth:0xa36797bA947b378AefE5f726Cd87766CD3c25Ee3": [
      "constructor(address initialOwner)",
      "error AdminCallFailed()",
      "error ImplementationCallFailed()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "eth:0xa59BA433ac34D2927232918Ef5B2eaAfcF130BA5": [
      "constructor(uint32 _vid, address[] _messageLibs, address _priceFeed, address[] _signers, uint64 _quorum, address[] _admins)",
      "error DVN_DuplicatedHash(bytes32 executableHash)",
      "error DVN_InstructionExpired()",
      "error DVN_InvalidRole(bytes32 role)",
      "error DVN_InvalidSignatures()",
      "error DVN_InvalidTarget(address target)",
      "error DVN_InvalidVid(uint32 vid)",
      "error DVN_OnlySelf()",
      "error MultiSig_OnlySigner()",
      "error MultiSig_QuorumIsZero()",
      "error MultiSig_SignersSizeIsLessThanQuorum(uint64 signersSize, uint64 quorum)",
      "error MultiSig_StateAlreadySet(address signer, bool active)",
      "error MultiSig_UnorderedSigners()",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "error Worker_NotAllowed()",
      "error Worker_OnlyMessageLib()",
      "error Worker_RoleRenouncingDisabled()",
      "event ExecuteFailed(uint256 _index, bytes _data)",
      "event HashAlreadyUsed(tuple(uint32 vid, address target, bytes callData, uint256 expiration, bytes signatures) param, bytes32 _hash)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SetDefaultMultiplierBps(uint16 multiplierBps)",
      "event SetDstConfig(tuple(uint32 dstEid, uint64 gas, uint16 multiplierBps, uint128 floorMarginUSD)[] params)",
      "event SetPriceFeed(address priceFeed)",
      "event SetSupportedOptionTypes(uint32 dstEid, uint8[] optionTypes)",
      "event SetWorkerLib(address workerLib)",
      "event Unpaused(address account)",
      "event UpdateQuorum(uint64 _quorum)",
      "event UpdateSigner(address _signer, bool _active)",
      "event VerifierFeePaid(uint256 fee)",
      "event VerifySignaturesFailed(uint256 idx)",
      "event Withdraw(address lib, address to, uint256 amount)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function allowlistSize() view returns (uint64)",
      "function assignJob(tuple(uint32 dstEid, bytes packetHeader, bytes32 payloadHash, uint64 confirmations, address sender) _param, bytes _options) payable returns (uint256 totalFee)",
      "function assignJob(uint16 _dstEid, uint16, uint64 _confirmations, address _sender) returns (uint256 totalFee)",
      "function defaultMultiplierBps() view returns (uint16)",
      "function dstConfig(uint32 dstEid) view returns (uint64 gas, uint16 multiplierBps, uint128 floorMarginUSD)",
      "function execute(tuple(uint32 vid, address target, bytes callData, uint256 expiration, bytes signatures)[] _params)",
      "function getFee(uint32 _dstEid, uint64 _confirmations, address _sender, bytes _options) view returns (uint256 fee)",
      "function getFee(uint16 _dstEid, uint16, uint64 _confirmations, address _sender) view returns (uint256 fee)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getSupportedOptionTypes(uint32 _eid) view returns (uint8[])",
      "function grantRole(bytes32 _role, address _account)",
      "function hasAcl(address _sender) view returns (bool)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashCallData(uint32 _vid, address _target, bytes _callData, uint256 _expiration) pure returns (bytes32)",
      "function paused() view returns (bool)",
      "function priceFeed() view returns (address)",
      "function quorum() view returns (uint64)",
      "function quorumChangeAdmin(tuple(uint32 vid, address target, bytes callData, uint256 expiration, bytes signatures) _param)",
      "function renounceRole(bytes32, address) pure",
      "function revokeRole(bytes32 _role, address _account)",
      "function setDefaultMultiplierBps(uint16 _multiplierBps)",
      "function setDstConfig(tuple(uint32 dstEid, uint64 gas, uint16 multiplierBps, uint128 floorMarginUSD)[] _params)",
      "function setPaused(bool _paused)",
      "function setPriceFeed(address _priceFeed)",
      "function setQuorum(uint64 _quorum)",
      "function setSigner(address _signer, bool _active)",
      "function setSupportedOptionTypes(uint32 _eid, uint8[] _optionTypes)",
      "function setWorkerFeeLib(address _workerFeeLib)",
      "function signerSize() view returns (uint64)",
      "function signers(address signer) view returns (bool active)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function usedHashes(bytes32 executableHash) view returns (bool used)",
      "function verifySignatures(bytes32 _hash, bytes _signatures) view returns (bool, uint8)",
      "function vid() view returns (uint32)",
      "function withdrawFee(address _lib, address _to, uint256 _amount)",
      "function withdrawFeeFromUlnV2(address _lib, address _to, uint256 _amount)",
      "function withdrawToken(address _token, address _to, uint256 _amount)",
      "function workerFeeLib() view returns (address)"
    ],
    "eth:0xbB2Ea70C9E858123480642Cf96acbcCE1372dCe1": [
      "constructor(address _endpoint, uint256 _treasuryGasLimit, uint256 _treasuryGasForFeeCap)",
      "error DVN_InvalidDVNIdx()",
      "error DVN_InvalidDVNOptions(uint256 cursor)",
      "error LZ_MessageLib_CannotWithdrawAltToken()",
      "error LZ_MessageLib_InvalidAmount(uint256 requested, uint256 available)",
      "error LZ_MessageLib_InvalidExecutor()",
      "error LZ_MessageLib_InvalidMessageSize(uint256 actual, uint256 max)",
      "error LZ_MessageLib_NotTreasury()",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_MessageLib_TransferFailed()",
      "error LZ_MessageLib_ZeroMessageSize()",
      "error LZ_ULN_AtLeastOneDVN()",
      "error LZ_ULN_InvalidConfigType(uint32 configType)",
      "error LZ_ULN_InvalidConfirmations()",
      "error LZ_ULN_InvalidLegacyType1Option()",
      "error LZ_ULN_InvalidLegacyType2Option()",
      "error LZ_ULN_InvalidOptionalDVNCount()",
      "error LZ_ULN_InvalidOptionalDVNThreshold()",
      "error LZ_ULN_InvalidRequiredDVNCount()",
      "error LZ_ULN_InvalidWorkerId(uint8 workerId)",
      "error LZ_ULN_InvalidWorkerOptions(uint256 cursor)",
      "error LZ_ULN_Unsorted()",
      "error LZ_ULN_UnsupportedEid(uint32 eid)",
      "error LZ_ULN_UnsupportedOptionType(uint16 optionType)",
      "error Transfer_NativeFailed(address _to, uint256 _value)",
      "error Transfer_ToAddressIsZero()",
      "event DVNFeePaid(address[] requiredDVNs, address[] optionalDVNs, uint256[] fees)",
      "event DefaultExecutorConfigsSet(tuple(uint32 eid, tuple(uint32 maxMessageSize, address executor) config)[] params)",
      "event DefaultUlnConfigsSet(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event ExecutorConfigSet(address oapp, uint32 eid, tuple(uint32 maxMessageSize, address executor) config)",
      "event ExecutorFeePaid(address executor, uint256 fee)",
      "event LzTokenFeeWithdrawn(address lzToken, address receiver, uint256 amount)",
      "event NativeFeeWithdrawn(address worker, address receiver, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event TreasuryNativeFeeCapSet(uint256 newTreasuryNativeFeeCap)",
      "event TreasurySet(address treasury)",
      "event UlnConfigSet(address oapp, uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "function executorConfigs(address oapp, uint32 eid) view returns (uint32 maxMessageSize, address executor)",
      "function fees(address worker) view returns (uint256)",
      "function getAppUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getExecutorConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint32 maxMessageSize, address executor) rtnConfig)",
      "function getUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function quote(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee))",
      "function renounceOwnership()",
      "function send(tuple(uint64 nonce, uint32 srcEid, address sender, uint32 dstEid, bytes32 receiver, bytes32 guid, bytes message) _packet, bytes _options, bool _payInLzToken) returns (tuple(uint256 nativeFee, uint256 lzTokenFee), bytes)",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultExecutorConfigs(tuple(uint32 eid, tuple(uint32 maxMessageSize, address executor) config)[] _params)",
      "function setDefaultUlnConfigs(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function setTreasury(address _treasury)",
      "function setTreasuryNativeFeeCap(uint256 _newTreasuryNativeFeeCap)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function treasury() view returns (address)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)",
      "function withdrawFee(address _to, uint256 _amount)",
      "function withdrawLzTokenFee(address _lzToken, address _to, uint256 _amount)"
    ],
    "eth:0xBe010A7e3686FdF65E93344ab664D065A0B02478": [
      "constructor(uint64 _oneSigId, address[] _signers, uint256 _threshold, address[] _executors, bool _executorRequired, bytes32 _seed)",
      "error ECDSAInvalidSignature()",
      "error ECDSAInvalidSignatureLength(uint256 length)",
      "error ECDSAInvalidSignatureS(bytes32 s)",
      "error ExecutionFailed(uint256 index)",
      "error ExecutorAlreadyActive(address executor)",
      "error ExecutorNotFound(address executor)",
      "error InvalidExecutor()",
      "error InvalidProofOrNonce()",
      "error InvalidSigner()",
      "error MerkleRootExpired()",
      "error OnlyExecutorOrSigner()",
      "error OnlySelfCall()",
      "error ReentrancyGuardReentrantCall()",
      "error SignatureError()",
      "error SignerAlreadyAdded(address signer)",
      "error SignerNotFound(address signer)",
      "error TotalSignersLessThanThreshold(uint256 totalSigners, uint256 threshold)",
      "error UnsortedSigners()",
      "error ZeroThreshold()",
      "event ExecutorRequiredSet(bool required)",
      "event ExecutorSet(address indexed executor, bool active)",
      "event SeedSet(bytes32 seed)",
      "event SignerSet(address indexed signer, bool active)",
      "event ThresholdSet(uint256 threshold)",
      "event TransactionExecuted(bytes32 merkleRoot, uint256 nonce)",
      "function LEAF_ENCODING_VERSION() view returns (uint8)",
      "function ONE_SIG_ID() view returns (uint64)",
      "function VERSION() view returns (string)",
      "function canExecuteTransaction(address _sender) view returns (bool)",
      "function encodeLeaf(uint64 _nonce, tuple(address to, uint256 value, bytes data)[] _calls) view returns (bytes32)",
      "function executeTransaction(tuple(tuple(address to, uint256 value, bytes data)[] calls, bytes32[] proof) _transaction, bytes32 _merkleRoot, uint256 _expiry, bytes _signatures) payable",
      "function executorRequired() view returns (bool)",
      "function getExecutors() view returns (address[])",
      "function getSigners() view returns (address[])",
      "function isExecutor(address _executor) view returns (bool)",
      "function isSigner(address _signer) view returns (bool)",
      "function nonce() view returns (uint64)",
      "function seed() view returns (bytes32)",
      "function setExecutor(address _executor, bool _active)",
      "function setExecutorRequired(bool _executorRequired)",
      "function setSeed(bytes32 _seed)",
      "function setSigner(address _signer, bool _active)",
      "function setThreshold(uint256 _threshold)",
      "function threshold() view returns (uint256)",
      "function totalExecutors() view returns (uint256)",
      "function totalSigners() view returns (uint256)",
      "function verifyMerkleRoot(bytes32 _merkleRoot, uint256 _expiry, bytes _signatures) view",
      "function verifyNSignatures(bytes32 _digest, bytes _signatures, uint256 _threshold) view",
      "function verifySignatures(bytes32 _digest, bytes _signatures) view",
      "function verifyTransactionProof(bytes32 _merkleRoot, tuple(tuple(address to, uint256 value, bytes data)[] calls, bytes32[] proof) _transaction) view"
    ],
    "eth:0xBE634B030FEAaB661300667EaF82510a3a025413": [
      "constructor(uint64 _oneSigId, address[] _signers, uint256 _threshold, address[] _executors, bool _executorRequired, bytes32 _seed)",
      "error ECDSAInvalidSignature()",
      "error ECDSAInvalidSignatureLength(uint256 length)",
      "error ECDSAInvalidSignatureS(bytes32 s)",
      "error ExecutionFailed(uint256 index)",
      "error ExecutorAlreadyActive(address executor)",
      "error ExecutorNotFound(address executor)",
      "error InvalidExecutor()",
      "error InvalidProofOrNonce()",
      "error InvalidSigner()",
      "error MerkleRootExpired()",
      "error OnlyExecutorOrSigner()",
      "error OnlySelfCall()",
      "error ReentrancyGuardReentrantCall()",
      "error SignatureError()",
      "error SignerAlreadyAdded(address signer)",
      "error SignerNotFound(address signer)",
      "error TotalSignersLessThanThreshold(uint256 totalSigners, uint256 threshold)",
      "error UnsortedSigners()",
      "error ZeroThreshold()",
      "event ExecutorRequiredSet(bool required)",
      "event ExecutorSet(address indexed executor, bool active)",
      "event SeedSet(bytes32 seed)",
      "event SignerSet(address indexed signer, bool active)",
      "event ThresholdSet(uint256 threshold)",
      "event TransactionExecuted(bytes32 merkleRoot, uint256 nonce)",
      "function LEAF_ENCODING_VERSION() view returns (uint8)",
      "function ONE_SIG_ID() view returns (uint64)",
      "function VERSION() view returns (string)",
      "function canExecuteTransaction(address _sender) view returns (bool)",
      "function encodeLeaf(uint64 _nonce, tuple(address to, uint256 value, bytes data)[] _calls) view returns (bytes32)",
      "function executeTransaction(tuple(tuple(address to, uint256 value, bytes data)[] calls, bytes32[] proof) _transaction, bytes32 _merkleRoot, uint256 _expiry, bytes _signatures) payable",
      "function executorRequired() view returns (bool)",
      "function getExecutors() view returns (address[])",
      "function getSigners() view returns (address[])",
      "function isExecutor(address _executor) view returns (bool)",
      "function isSigner(address _signer) view returns (bool)",
      "function nonce() view returns (uint64)",
      "function seed() view returns (bytes32)",
      "function setExecutor(address _executor, bool _active)",
      "function setExecutorRequired(bool _executorRequired)",
      "function setSeed(bytes32 _seed)",
      "function setSigner(address _signer, bool _active)",
      "function setThreshold(uint256 _threshold)",
      "function threshold() view returns (uint256)",
      "function totalExecutors() view returns (uint256)",
      "function totalSigners() view returns (uint256)",
      "function verifyMerkleRoot(bytes32 _merkleRoot, uint256 _expiry, bytes _signatures) view",
      "function verifyNSignatures(bytes32 _digest, bytes _signatures, uint256 _threshold) view",
      "function verifySignatures(bytes32 _digest, bytes _signatures) view",
      "function verifyTransactionProof(bytes32 _merkleRoot, tuple(tuple(address to, uint256 value, bytes data)[] calls, bytes32[] proof) _transaction) view"
    ],
    "eth:0xc026395860Db2d07ee33e05fE50ed7bD583189C7": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error StargatePoolUSDC_BurnAmountExceedsBalance()",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Path_CreditBurned(uint64 amountSD)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function allowBurn(address _burnAdmin, uint64 _burnAllowanceSD)",
      "function approvalRequired() pure returns (bool)",
      "function burnAdmin() view returns (address)",
      "function burnAllowanceSD() view returns (uint64)",
      "function burnLockedUSDC()",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "eth:0xc02Ab410f0734EFa3F14628780e6e695156024C2": [
      "constructor(address _endpoint)",
      "error LZ_MessageLib_OnlyEndpoint()",
      "error LZ_ULN_AtLeastOneDVN()",
      "error LZ_ULN_InvalidConfigType(uint32 configType)",
      "error LZ_ULN_InvalidConfirmations()",
      "error LZ_ULN_InvalidEid()",
      "error LZ_ULN_InvalidOptionalDVNCount()",
      "error LZ_ULN_InvalidOptionalDVNThreshold()",
      "error LZ_ULN_InvalidPacketHeader()",
      "error LZ_ULN_InvalidPacketVersion()",
      "error LZ_ULN_InvalidRequiredDVNCount()",
      "error LZ_ULN_Unsorted()",
      "error LZ_ULN_UnsupportedEid(uint32 eid)",
      "error LZ_ULN_Verifying()",
      "event DefaultUlnConfigsSet(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] params)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PayloadVerified(address dvn, bytes header, uint256 confirmations, bytes32 proofHash)",
      "event UlnConfigSet(address oapp, uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)",
      "function assertHeader(bytes _packetHeader, uint32 _localEid) pure",
      "function commitVerification(bytes _packetHeader, bytes32 _payloadHash)",
      "function getAppUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs))",
      "function getConfig(uint32 _eid, address _oapp, uint32 _configType) view returns (bytes)",
      "function getUlnConfig(address _oapp, uint32 _remoteEid) view returns (tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) rtnConfig)",
      "function hashLookup(bytes32 headerHash, bytes32 payloadHash, address dvn) view returns (bool submitted, uint64 confirmations)",
      "function isSupportedEid(uint32 _eid) view returns (bool)",
      "function messageLibType() pure returns (uint8)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setConfig(address _oapp, tuple(uint32 eid, uint32 configType, bytes config)[] _params)",
      "function setDefaultUlnConfigs(tuple(uint32 eid, tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) config)[] _params)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function verifiable(tuple(uint64 confirmations, uint8 requiredDVNCount, uint8 optionalDVNCount, uint8 optionalDVNThreshold, address[] requiredDVNs, address[] optionalDVNs) _config, bytes32 _headerHash, bytes32 _payloadHash) view returns (bool)",
      "function verify(bytes _packetHeader, bytes32 _payloadHash, uint64 _confirmations)",
      "function version() pure returns (uint64 major, uint8 minor, uint8 endpointVersion)"
    ],
    "eth:0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function approvalRequired() pure returns (bool)",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "linea:0x5f688F563Dc16590e570f97b542FA87931AF2feD": [
      "constructor(address _endpoint, address _owner, uint16 _queueCapacity)",
      "error BusCodec_InvalidBusBytesLength()",
      "error BusCodec_InvalidMessage()",
      "error BusCodec_InvalidPassengersBytesLength()",
      "error Bus_InvalidFare(bool nativeDrop)",
      "error Bus_InvalidNumPassengers(uint8 numPassengers)",
      "error Bus_InvalidPassenger()",
      "error Bus_QueueFull()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error InvalidOptions(bytes options)",
      "error LzTokenUnavailable()",
      "error MessagingOptions_ZeroGasLimit()",
      "error Messaging_InvalidAssetId()",
      "error Messaging_InvalidEid()",
      "error Messaging_InvalidMsgValue()",
      "error Messaging_InvalidQueueCapacity()",
      "error Messaging_MaxNumPassengersExceedsQueueCapacity()",
      "error Messaging_NotEnoughPassengers()",
      "error Messaging_Unauthorized()",
      "error Messaging_Unavailable()",
      "error NoPeer(uint32 eid)",
      "error NotEnoughNative(uint256 msgValue)",
      "error OnlyEndpoint(address addr)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "error OnlySelf()",
      "error SimulationResult(bytes result)",
      "error TaxiCodec_InvalidMessage()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AssetIdSet(address stargateImpl, uint16 assetId)",
      "event BusDriven(uint32 dstEid, uint72 startTicketId, uint8 numPassengers, bytes32 guid)",
      "event BusQueueStorageInitialized(uint32 dstEid, uint16 startSlot, uint16 endSlot)",
      "event BusRode(uint32 dstEid, uint72 ticketId, uint80 fare, bytes passenger)",
      "event EnforcedOptionSet(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "event FaresSet(uint32 dstEid, uint80 busFare, uint80 busAndNativeDropFare)",
      "event GasLimitSet(uint32 eid, uint128 gasLimit, uint128 nativeDropGasLimit)",
      "event MaxAssetIdSet(uint16 maxAssetId)",
      "event MaxNumPassengersSet(uint32 dstEid, uint8 maxNumPassengers)",
      "event NativeDropAmountSet(uint32 dstEid, uint128 nativeDropAmount)",
      "event NativeDropApplied(address receiver, uint128 amount)",
      "event NativeDropFailed(address receiver, uint128 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "event PlannerSet(address planner)",
      "event PreCrimeSet(address preCrimeAddress)",
      "function MSG_TYPE_BUS() view returns (uint8)",
      "function MSG_TYPE_TAXI() view returns (uint8)",
      "function allowInitializePath(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin) view returns (bool)",
      "function assetIds(address stargateImpl) view returns (uint16 assetId)",
      "function busQueues(uint32 dstEid) view returns (uint8 maxNumPassengers, uint80 busFare, uint80 busAndNativeDropFare, uint16 qLength, uint72 nextTicketId)",
      "function combineOptions(uint32 _eid, uint16 _msgType, bytes _extraOptions) view returns (bytes)",
      "function driveBus(uint32 _dstEid, bytes _passengers) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function endpoint() view returns (address)",
      "function enforcedOptions(uint32 eid, uint16 msgType) view returns (bytes enforcedOption)",
      "function gasLimits(uint32 eid) view returns (uint128 gasLimit, uint128 nativeDropGasLimit)",
      "function getPassengerHash(uint32 _dstEid, uint16 _index) view returns (bytes32 hash)",
      "function getTransferGasLimit() view returns (uint256)",
      "function initializeBusQueueStorage(uint32[] _dstEids, uint16 _startSlot, uint16 _endSlot)",
      "function isComposeMsgSender(tuple(uint32 srcEid, bytes32 sender, uint64 nonce), bytes _message, address _sender) view returns (bool)",
      "function isPeer(uint32 _eid, bytes32 _peer) view returns (bool)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function lzReceiveAndRevert(tuple(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, uint32 dstEid, address receiver, bytes32 guid, uint256 value, address executor, bytes message, bytes extraData)[] _packets) payable",
      "function lzReceiveSimulate(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function maxAssetId() view returns (uint16)",
      "function nativeDropAmounts(uint32 dstEid) view returns (uint128 nativeDropAmount)",
      "function nextNonce(uint32, bytes32) view returns (uint64 nonce)",
      "function oApp() view returns (address)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function owner() view returns (address)",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function planner() view returns (address)",
      "function preCrime() view returns (address)",
      "function queueCapacity() view returns (uint16)",
      "function quoteDriveBus(uint32 _dstEid, bytes _passengers) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteFares(uint32 _dstEid, uint8 _numPassengers) view returns (uint256 busFare, uint256 busAndNativeDropFare)",
      "function quoteRideBus(uint32 _dstEid, bool _airdrop) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteTaxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function renounceOwnership()",
      "function rideBus(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bool nativeDrop) _params) returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAssetId(address _stargateImpl, uint16 _assetId)",
      "function setDelegate(address _delegate)",
      "function setEnforcedOptions(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "function setFares(uint32 _dstEid, uint80 _busFare, uint80 _busAndNativeDropFare)",
      "function setGasLimit(uint32 _eid, uint128 _gasLimit, uint128 _nativeDropGasLimit)",
      "function setMaxAssetId(uint16 _maxAssetId)",
      "function setMaxNumPassengers(uint32 _dstEid, uint8 _maxNumPassengers)",
      "function setNativeDropAmount(uint32 _dstEid, uint128 _nativeDropAmount)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function setPlanner(address _planner)",
      "function setPreCrime(address _preCrime)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function stargateImpls(uint16 assetId) view returns (address stargateImpl)",
      "function taxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, tuple(uint256 nativeFee, uint256 lzTokenFee) _messagingFee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function transferOwnership(address newOwner)"
    ],
    "linea:0x81F6138153d473E8c5EcebD3DC8Cd4903506B075": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function approvalRequired() pure returns (bool)",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "oeth:0x19cFCE47eD54a88614648DC3f19A5980097007dD": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error StargatePoolMigratable_BurnAmountExceedsBalance()",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Path_CreditBurned(uint64 amountSD)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function allowBurn(address _burnAdmin, uint64 _burnAllowanceSD)",
      "function approvalRequired() pure returns (bool)",
      "function burnAdmin() view returns (address)",
      "function burnAllowanceSD() view returns (uint64)",
      "function burnLocked()",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "oeth:0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error StargatePoolUSDC_BurnAmountExceedsBalance()",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Path_CreditBurned(uint64 amountSD)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function allowBurn(address _burnAdmin, uint64 _burnAllowanceSD)",
      "function approvalRequired() pure returns (bool)",
      "function burnAdmin() view returns (address)",
      "function burnAllowanceSD() view returns (uint64)",
      "function burnLockedUSDC()",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "oeth:0xe8CDF27AcD73a434D661C84887215F7598e7d0d3": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function approvalRequired() pure returns (bool)",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "oeth:0xF1fCb4CBd57B67d683972A59B6a7b1e2E8Bf27E6": [
      "constructor(address _endpoint, address _owner, uint16 _queueCapacity)",
      "error BusCodec_InvalidBusBytesLength()",
      "error BusCodec_InvalidMessage()",
      "error BusCodec_InvalidPassengersBytesLength()",
      "error Bus_InvalidFare(bool nativeDrop)",
      "error Bus_InvalidNumPassengers(uint8 numPassengers)",
      "error Bus_InvalidPassenger()",
      "error Bus_QueueFull()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error InvalidOptions(bytes options)",
      "error LzTokenUnavailable()",
      "error MessagingOptions_ZeroGasLimit()",
      "error Messaging_InvalidAssetId()",
      "error Messaging_InvalidEid()",
      "error Messaging_InvalidMsgValue()",
      "error Messaging_InvalidQueueCapacity()",
      "error Messaging_MaxNumPassengersExceedsQueueCapacity()",
      "error Messaging_NotEnoughPassengers()",
      "error Messaging_Unauthorized()",
      "error Messaging_Unavailable()",
      "error NoPeer(uint32 eid)",
      "error NotEnoughNative(uint256 msgValue)",
      "error OnlyEndpoint(address addr)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "error OnlySelf()",
      "error SimulationResult(bytes result)",
      "error TaxiCodec_InvalidMessage()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AssetIdSet(address stargateImpl, uint16 assetId)",
      "event BusDriven(uint32 dstEid, uint72 startTicketId, uint8 numPassengers, bytes32 guid)",
      "event BusQueueStorageInitialized(uint32 dstEid, uint16 startSlot, uint16 endSlot)",
      "event BusRode(uint32 dstEid, uint72 ticketId, uint80 fare, bytes passenger)",
      "event EnforcedOptionSet(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "event FaresSet(uint32 dstEid, uint80 busFare, uint80 busAndNativeDropFare)",
      "event GasLimitSet(uint32 eid, uint128 gasLimit, uint128 nativeDropGasLimit)",
      "event MaxAssetIdSet(uint16 maxAssetId)",
      "event MaxNumPassengersSet(uint32 dstEid, uint8 maxNumPassengers)",
      "event NativeDropAmountSet(uint32 dstEid, uint128 nativeDropAmount)",
      "event NativeDropApplied(address receiver, uint128 amount)",
      "event NativeDropFailed(address receiver, uint128 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "event PlannerSet(address planner)",
      "event PreCrimeSet(address preCrimeAddress)",
      "function MSG_TYPE_BUS() view returns (uint8)",
      "function MSG_TYPE_TAXI() view returns (uint8)",
      "function allowInitializePath(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin) view returns (bool)",
      "function assetIds(address stargateImpl) view returns (uint16 assetId)",
      "function busQueues(uint32 dstEid) view returns (uint8 maxNumPassengers, uint80 busFare, uint80 busAndNativeDropFare, uint16 qLength, uint72 nextTicketId)",
      "function combineOptions(uint32 _eid, uint16 _msgType, bytes _extraOptions) view returns (bytes)",
      "function driveBus(uint32 _dstEid, bytes _passengers) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function endpoint() view returns (address)",
      "function enforcedOptions(uint32 eid, uint16 msgType) view returns (bytes enforcedOption)",
      "function gasLimits(uint32 eid) view returns (uint128 gasLimit, uint128 nativeDropGasLimit)",
      "function getPassengerHash(uint32 _dstEid, uint16 _index) view returns (bytes32 hash)",
      "function getTransferGasLimit() view returns (uint256)",
      "function initializeBusQueueStorage(uint32[] _dstEids, uint16 _startSlot, uint16 _endSlot)",
      "function isComposeMsgSender(tuple(uint32 srcEid, bytes32 sender, uint64 nonce), bytes _message, address _sender) view returns (bool)",
      "function isPeer(uint32 _eid, bytes32 _peer) view returns (bool)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function lzReceiveAndRevert(tuple(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, uint32 dstEid, address receiver, bytes32 guid, uint256 value, address executor, bytes message, bytes extraData)[] _packets) payable",
      "function lzReceiveSimulate(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function maxAssetId() view returns (uint16)",
      "function nativeDropAmounts(uint32 dstEid) view returns (uint128 nativeDropAmount)",
      "function nextNonce(uint32, bytes32) view returns (uint64 nonce)",
      "function oApp() view returns (address)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function owner() view returns (address)",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function planner() view returns (address)",
      "function preCrime() view returns (address)",
      "function queueCapacity() view returns (uint16)",
      "function quoteDriveBus(uint32 _dstEid, bytes _passengers) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteFares(uint32 _dstEid, uint8 _numPassengers) view returns (uint256 busFare, uint256 busAndNativeDropFare)",
      "function quoteRideBus(uint32 _dstEid, bool _airdrop) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteTaxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function renounceOwnership()",
      "function rideBus(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bool nativeDrop) _params) returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAssetId(address _stargateImpl, uint16 _assetId)",
      "function setDelegate(address _delegate)",
      "function setEnforcedOptions(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "function setFares(uint32 _dstEid, uint80 _busFare, uint80 _busAndNativeDropFare)",
      "function setGasLimit(uint32 _eid, uint128 _gasLimit, uint128 _nativeDropGasLimit)",
      "function setMaxAssetId(uint16 _maxAssetId)",
      "function setMaxNumPassengers(uint32 _dstEid, uint8 _maxNumPassengers)",
      "function setNativeDropAmount(uint32 _dstEid, uint128 _nativeDropAmount)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function setPlanner(address _planner)",
      "function setPreCrime(address _preCrime)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function stargateImpls(uint16 assetId) view returns (address stargateImpl)",
      "function taxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, tuple(uint256 nativeFee, uint256 lzTokenFee) _messagingFee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function transferOwnership(address newOwner)"
    ],
    "scr:0x3Fc69CC4A842838bCDC9499178740226062b14E4": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, address _token, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error StargatePoolUSDC_BurnAmountExceedsBalance()",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Path_CreditBurned(uint64 amountSD)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function allowBurn(address _burnAdmin, uint64 _burnAllowanceSD)",
      "function approvalRequired() pure returns (bool)",
      "function burnAdmin() view returns (address)",
      "function burnAllowanceSD() view returns (uint64)",
      "function burnLockedUSDC()",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ],
    "scr:0x4e422B0aCb2Bd7e3aC70B5c0E5eb806e86a94038": [
      "constructor(address _endpoint, address _owner, uint16 _queueCapacity)",
      "error BusCodec_InvalidBusBytesLength()",
      "error BusCodec_InvalidMessage()",
      "error BusCodec_InvalidPassengersBytesLength()",
      "error Bus_InvalidFare(bool nativeDrop)",
      "error Bus_InvalidNumPassengers(uint8 numPassengers)",
      "error Bus_InvalidPassenger()",
      "error Bus_QueueFull()",
      "error InvalidDelegate()",
      "error InvalidEndpointCall()",
      "error InvalidOptions(bytes options)",
      "error LzTokenUnavailable()",
      "error MessagingOptions_ZeroGasLimit()",
      "error Messaging_InvalidAssetId()",
      "error Messaging_InvalidEid()",
      "error Messaging_InvalidMsgValue()",
      "error Messaging_InvalidQueueCapacity()",
      "error Messaging_MaxNumPassengersExceedsQueueCapacity()",
      "error Messaging_NotEnoughPassengers()",
      "error Messaging_Unauthorized()",
      "error Messaging_Unavailable()",
      "error NoPeer(uint32 eid)",
      "error NotEnoughNative(uint256 msgValue)",
      "error OnlyEndpoint(address addr)",
      "error OnlyPeer(uint32 eid, bytes32 sender)",
      "error OnlySelf()",
      "error SimulationResult(bytes result)",
      "error TaxiCodec_InvalidMessage()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AssetIdSet(address stargateImpl, uint16 assetId)",
      "event BusDriven(uint32 dstEid, uint72 startTicketId, uint8 numPassengers, bytes32 guid)",
      "event BusQueueStorageInitialized(uint32 dstEid, uint16 startSlot, uint16 endSlot)",
      "event BusRode(uint32 dstEid, uint72 ticketId, uint80 fare, bytes passenger)",
      "event EnforcedOptionSet(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "event FaresSet(uint32 dstEid, uint80 busFare, uint80 busAndNativeDropFare)",
      "event GasLimitSet(uint32 eid, uint128 gasLimit, uint128 nativeDropGasLimit)",
      "event MaxAssetIdSet(uint16 maxAssetId)",
      "event MaxNumPassengersSet(uint32 dstEid, uint8 maxNumPassengers)",
      "event NativeDropAmountSet(uint32 dstEid, uint128 nativeDropAmount)",
      "event NativeDropApplied(address receiver, uint128 amount)",
      "event NativeDropFailed(address receiver, uint128 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PeerSet(uint32 eid, bytes32 peer)",
      "event PlannerSet(address planner)",
      "event PreCrimeSet(address preCrimeAddress)",
      "function MSG_TYPE_BUS() view returns (uint8)",
      "function MSG_TYPE_TAXI() view returns (uint8)",
      "function allowInitializePath(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin) view returns (bool)",
      "function assetIds(address stargateImpl) view returns (uint16 assetId)",
      "function busQueues(uint32 dstEid) view returns (uint8 maxNumPassengers, uint80 busFare, uint80 busAndNativeDropFare, uint16 qLength, uint72 nextTicketId)",
      "function combineOptions(uint32 _eid, uint16 _msgType, bytes _extraOptions) view returns (bytes)",
      "function driveBus(uint32 _dstEid, bytes _passengers) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function endpoint() view returns (address)",
      "function enforcedOptions(uint32 eid, uint16 msgType) view returns (bytes enforcedOption)",
      "function gasLimits(uint32 eid) view returns (uint128 gasLimit, uint128 nativeDropGasLimit)",
      "function getPassengerHash(uint32 _dstEid, uint16 _index) view returns (bytes32 hash)",
      "function getTransferGasLimit() view returns (uint256)",
      "function initializeBusQueueStorage(uint32[] _dstEids, uint16 _startSlot, uint16 _endSlot)",
      "function isComposeMsgSender(tuple(uint32 srcEid, bytes32 sender, uint64 nonce), bytes _message, address _sender) view returns (bool)",
      "function isPeer(uint32 _eid, bytes32 _peer) view returns (bool)",
      "function lzReceive(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function lzReceiveAndRevert(tuple(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) origin, uint32 dstEid, address receiver, bytes32 guid, uint256 value, address executor, bytes message, bytes extraData)[] _packets) payable",
      "function lzReceiveSimulate(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, bytes _message, address _executor, bytes _extraData) payable",
      "function maxAssetId() view returns (uint16)",
      "function nativeDropAmounts(uint32 dstEid) view returns (uint128 nativeDropAmount)",
      "function nextNonce(uint32, bytes32) view returns (uint64 nonce)",
      "function oApp() view returns (address)",
      "function oAppVersion() pure returns (uint64 senderVersion, uint64 receiverVersion)",
      "function owner() view returns (address)",
      "function peers(uint32 eid) view returns (bytes32 peer)",
      "function planner() view returns (address)",
      "function preCrime() view returns (address)",
      "function queueCapacity() view returns (uint16)",
      "function quoteDriveBus(uint32 _dstEid, bytes _passengers) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteFares(uint32 _dstEid, uint8 _numPassengers) view returns (uint256 busFare, uint256 busAndNativeDropFare)",
      "function quoteRideBus(uint32 _dstEid, bool _airdrop) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteTaxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function renounceOwnership()",
      "function rideBus(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bool nativeDrop) _params) returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAssetId(address _stargateImpl, uint16 _assetId)",
      "function setDelegate(address _delegate)",
      "function setEnforcedOptions(tuple(uint32 eid, uint16 msgType, bytes options)[] _enforcedOptions)",
      "function setFares(uint32 _dstEid, uint80 _busFare, uint80 _busAndNativeDropFare)",
      "function setGasLimit(uint32 _eid, uint128 _gasLimit, uint128 _nativeDropGasLimit)",
      "function setMaxAssetId(uint16 _maxAssetId)",
      "function setMaxNumPassengers(uint32 _dstEid, uint8 _maxNumPassengers)",
      "function setNativeDropAmount(uint32 _dstEid, uint128 _nativeDropAmount)",
      "function setPeer(uint32 _eid, bytes32 _peer)",
      "function setPlanner(address _planner)",
      "function setPreCrime(address _preCrime)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function stargateImpls(uint16 assetId) view returns (address stargateImpl)",
      "function taxi(tuple(address sender, uint32 dstEid, bytes32 receiver, uint64 amountSD, bytes composeMsg, bytes extraOptions) _params, tuple(uint256 nativeFee, uint256 lzTokenFee) _messagingFee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) receipt)",
      "function transferOwnership(address newOwner)"
    ],
    "scr:0xC2b638Cb5042c1B3c5d5C969361fB50569840583": [
      "constructor(string _lpTokenName, string _lpTokenSymbol, uint8 _tokenDecimals, uint8 _sharedDecimals, address _endpoint, address _owner)",
      "error InvalidLocalDecimals()",
      "error Path_AlreadyHasCredit()",
      "error Path_InsufficientCredit()",
      "error Path_UnlimitedCredit()",
      "error SlippageExceeded(uint256 amountLD, uint256 minAmountLD)",
      "error Stargate_InsufficientFare()",
      "error Stargate_InvalidAmount()",
      "error Stargate_InvalidPath()",
      "error Stargate_InvalidTokenDecimals()",
      "error Stargate_LzTokenUnavailable()",
      "error Stargate_OnlyTaxi()",
      "error Stargate_OutflowFailed()",
      "error Stargate_Paused()",
      "error Stargate_RecoverTokenUnsupported()",
      "error Stargate_ReentrantCall()",
      "error Stargate_SlippageTooHigh()",
      "error Stargate_Unauthorized()",
      "error Stargate_UnreceivedTokenNotFound()",
      "error Transfer_ApproveFailed()",
      "error Transfer_TransferFailed()",
      "event AddressConfigSet(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) config)",
      "event CreditsReceived(uint32 srcEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event CreditsSent(uint32 dstEid, tuple(uint32 srcEid, uint64 amount)[] credits)",
      "event Deposited(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event OFTPathSet(uint32 dstEid, bool oft)",
      "event OFTReceived(bytes32 indexed guid, uint32 srcEid, address indexed toAddress, uint256 amountReceivedLD)",
      "event OFTSent(bytes32 indexed guid, uint32 dstEid, address indexed fromAddress, uint256 amountSentLD, uint256 amountReceivedLD)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PauseSet(bool paused)",
      "event PlannerFeeWithdrawn(uint256 amount)",
      "event Redeemed(address indexed payer, address indexed receiver, uint256 amountLD)",
      "event TreasuryFeeAdded(uint64 amountSD)",
      "event TreasuryFeeWithdrawn(address to, uint64 amountSD)",
      "event UnreceivedTokenCached(bytes32 guid, uint8 index, uint32 srcEid, address receiver, uint256 amountLD, bytes composeMsg)",
      "function addTreasuryFee(uint256 _amountLD) payable",
      "function approvalRequired() pure returns (bool)",
      "function deficitOffset() view returns (uint256)",
      "function deposit(address _receiver, uint256 _amountLD) payable returns (uint256 amountLD)",
      "function endpoint() view returns (address)",
      "function getAddressConfig() view returns (tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken))",
      "function getTransferGasLimit() view returns (uint256)",
      "function localEid() view returns (uint32)",
      "function lpToken() view returns (address)",
      "function oftVersion() pure returns (bytes4 interfaceId, uint64 version)",
      "function owner() view returns (address)",
      "function paths(uint32 eid) view returns (uint64 credit)",
      "function plannerFee() view returns (uint256 available)",
      "function poolBalance() view returns (uint256)",
      "function quoteOFT(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam) view returns (tuple(uint256 minAmountLD, uint256 maxAmountLD) limit, tuple(int256 feeAmountLD, string description)[] oftFeeDetails, tuple(uint256 amountSentLD, uint256 amountReceivedLD) receipt)",
      "function quoteRedeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function quoteSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, bool _payInLzToken) view returns (tuple(uint256 nativeFee, uint256 lzTokenFee) fee)",
      "function receiveCredits(uint32 _srcEid, tuple(uint32 srcEid, uint64 amount)[] _credits)",
      "function receiveTokenBus(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, uint8 _seatNumber, address _receiver, uint64 _amountSD)",
      "function receiveTokenTaxi(tuple(uint32 srcEid, bytes32 sender, uint64 nonce) _origin, bytes32 _guid, address _receiver, uint64 _amountSD, bytes _composeMsg)",
      "function recoverToken(address _token, address _to, uint256 _amount) returns (uint256)",
      "function redeem(uint256 _amountLD, address _receiver) returns (uint256 amountLD)",
      "function redeemSend(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function redeemable(address _owner) view returns (uint256 amountLD)",
      "function renounceOwnership()",
      "function retryReceiveToken(bytes32 _guid, uint8 _index, uint32 _srcEid, address _receiver, uint256 _amountLD, bytes _composeMsg)",
      "function send(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt)",
      "function sendCredits(uint32 _dstEid, tuple(uint32 srcEid, uint64 amount, uint64 minAmount)[] _credits) returns (tuple(uint32 srcEid, uint64 amount)[])",
      "function sendToken(tuple(uint32 dstEid, bytes32 to, uint256 amountLD, uint256 minAmountLD, bytes extraOptions, bytes composeMsg, bytes oftCmd) _sendParam, tuple(uint256 nativeFee, uint256 lzTokenFee) _fee, address _refundAddress) payable returns (tuple(bytes32 guid, uint64 nonce, tuple(uint256 nativeFee, uint256 lzTokenFee) fee) msgReceipt, tuple(uint256 amountSentLD, uint256 amountReceivedLD) oftReceipt, tuple(uint72 ticketId, bytes passengerBytes) ticket)",
      "function setAddressConfig(tuple(address feeLib, address planner, address treasurer, address tokenMessaging, address creditMessaging, address lzToken) _config)",
      "function setDeficitOffset(uint256 _deficitOffsetLD)",
      "function setOFTPath(uint32 _dstEid, bool _oft)",
      "function setPause(bool _paused)",
      "function setTransferGasLimit(uint256 _gasLimit)",
      "function sharedDecimals() view returns (uint8)",
      "function stargateType() pure returns (uint8)",
      "function status() view returns (uint8)",
      "function token() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function treasuryFee() view returns (uint64)",
      "function tvl() view returns (uint256)",
      "function unreceivedTokens(bytes32 guid, uint8 index) view returns (bytes32 hash)",
      "function withdrawPlannerFee()",
      "function withdrawTreasuryFee(address _to, uint64 _amountSD)"
    ]
  },
  "usedTemplates": {
    "layerzero/BlockedMessageLib": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "layerzero/EndpointV2": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "layerzero/OneSigMultisig": "0xc11771171058a9b7b769e672624ae0e1bc69bd278173d8b2fd0260d666354861",
    "layerzero/ReadLib1002": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "layerzero/ReceiveUln302": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "layerzero/SendUln302": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "stargate/CreditMessaging": "0x8532f05a5616874028312a6ee4696d48701c52f2df4ac7e70309cac1ad4f3bfb",
    "stargate/StargatePool": "0xce418a7888fae882fbb63dcd3881dfc3afa990e51d8b929573c1ec87c8991729",
    "stargate/StargatePoolMigratable": "0xce418a7888fae882fbb63dcd3881dfc3afa990e51d8b929573c1ec87c8991729",
    "stargate/StargatePoolNative": "0xce418a7888fae882fbb63dcd3881dfc3afa990e51d8b929573c1ec87c8991729",
    "stargate/StargatePoolUSDC": "0x78bfbb3b251053d58737301eb00781991a427f16546f35270db225282df104f2",
    "stargate/TokenMessaging": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "stargate/Treasurer": "0x893e4b5c910be84ccc45d870bef75de4b3fc748040df291137faab3705c83c24"
  },
  "usedBlockNumbers": {
    "ethereum": 23319099,
    "optimism": 140872227,
    "scroll": 20824257,
    "linea": 23078701,
    "arbitrum": 377020219,
    "base": 35276942
  },
  "permissionsConfigHash": "0x2d7557b4020745b71eb4e20ff97266707f322f9bceb1ed81ef2add8fd0e20957"
}
