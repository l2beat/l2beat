{
  "name": "linea",
  "timestamp": 1756720779,
  "configHash": "0xe1c360b8eebc994be70853de4341f1483d00e962f450a68a8976910b7e277ac9",
  "entries": [
    {
      "name": "TokenBridge",
      "address": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
      "type": "Contract",
      "template": "linea/L1TokenBridge",
      "sourceHashes": [
        "0x36a2777510f3b20063560bdcb7f657da283bcfdc484a19b0a0f77d18f6a8b5e1",
        "0x49bdbe79d2cc9cefee03245e4b48260f4a71e7976af51741005758e7236d687d"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to bridge and escrow ERC-20 tokens.",
      "sinceTimestamp": 1691067875,
      "sinceBlock": 17834649,
      "values": {
        "$admin": "eth:0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
        "$implementation": "eth:0x2B6A2F8880220a66DfB9059FCB76F7dB54104a34",
        "$pastUpgrades": [
          [
            "2023-08-03T13:04:35.000Z",
            "0xbc08c4596eeee0a2e2527f03c0f2e85ec9e76e062b5f86eb435a67bca8f21122",
            ["eth:0x6ccfD65b0b14F67259C77Ca6267104e058dDB292"]
          ],
          [
            "2024-06-05T11:49:35.000Z",
            "0x497bdab1d3fb97eed72a55fc6e3672694195b08f949c2e0e84ea4b36428ee9c6",
            ["eth:0xd52c09E67aF3BE0977B52b4817366e9BaB5dCFA2"]
          ],
          [
            "2024-12-16T13:52:11.000Z",
            "0x96b88112de2e594cb763bc625cc2dcb6920825bb642eb1a62ff577f0c29f616d",
            ["eth:0x2B6A2F8880220a66DfB9059FCB76F7dB54104a34"]
          ]
        ],
        "$upgradeCount": 3,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_ALL_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "UNPAUSE_ALL_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_INITIATE_TOKEN_BRIDGING_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "UNPAUSE_INITIATE_TOKEN_BRIDGING_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_COMPLETE_TOKEN_BRIDGING_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "UNPAUSE_COMPLETE_TOKEN_BRIDGING_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "SET_CUSTOM_CONTRACT_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
              "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
            ]
          },
          "REMOVE_RESERVED_TOKEN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
              "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
            ]
          },
          "SET_MESSAGE_SERVICE_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "SET_REMOTE_TOKENBRIDGE_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "SET_RESERVED_TOKEN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
              "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
            ]
          }
        },
        "allPausers": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"],
        "allUnpausers": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"],
        "completeTokenBridgingPausers": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"
        ],
        "completeTokenBridgingUnpausers": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"
        ],
        "CONTRACT_VERSION": "1.0",
        "customContractSetters": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
          "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
        ],
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdminAC": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"],
        "initiateTokenBridgingPausers": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"
        ],
        "initiateTokenBridgingUnpausers": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"
        ],
        "isPaused_BLOB_SUBMISSION": false,
        "isPaused_CALLDATA_SUBMISSION": false,
        "isPaused_COMPLETE_TOKEN_BRIDGING": false,
        "isPaused_FINALIZATION": false,
        "isPaused_GENERAL": false,
        "isPaused_INITIATE_TOKEN_BRIDGING": false,
        "isPaused_L1_L2": false,
        "isPaused_L2_L1": false,
        "messageService": "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
        "messageServiceSetters": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"
        ],
        "PAUSE_ALL_ROLE": "0x56bdc3c9ec86cb7db110a7699b2ade72f0b8819727d9f7d906b012641505fa77",
        "PAUSE_COMPLETE_TOKEN_BRIDGING_ROLE": "0x50962b2d10066f5051f78d5ea04a3ab09b9c87dd1002962f0b1e30e66eeb80a5",
        "PAUSE_INITIATE_TOKEN_BRIDGING_ROLE": "0x3900d9d72d5177a154375317154fdc0e08377e3134a8a5d21cadccf831cc231c",
        "pauseTypeToRole": {
          "1": "0x56bdc3c9ec86cb7db110a7699b2ade72f0b8819727d9f7d906b012641505fa77",
          "7": "0x3900d9d72d5177a154375317154fdc0e08377e3134a8a5d21cadccf831cc231c",
          "8": "0x50962b2d10066f5051f78d5ea04a3ab09b9c87dd1002962f0b1e30e66eeb80a5"
        },
        "remoteSender": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
        "remoteTokenBridgeSetters": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"
        ],
        "REMOVE_RESERVED_TOKEN_ROLE": "0x19bf281d118073c159a713666aba52e0d403520cd01e03f42e0f62a0b3bd4a35",
        "reserveTokenRemovers": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
          "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
        ],
        "reserveTokenSetters": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
          "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
        ],
        "SET_CUSTOM_CONTRACT_ROLE": "0x550554a677c8e7b73b62db78b0ef06c5f237da4ef30b88196a899ccf591041fe",
        "SET_MESSAGE_SERVICE_ROLE": "0x77974cc9cb5bafc9bb265be792d93fa46355c05701895b82f6d3b4b448c8ce00",
        "SET_REMOTE_TOKENBRIDGE_ROLE": "0xbf094fe3c005c553ff0d33c7dff9d1273add12fb3f258b992f8d36224dd35b24",
        "SET_RESERVED_TOKEN_ROLE": "0xeaf25fcc6b7d45bda16c56628df3f435e20319ef53b065c11ee4510083f0ae2d",
        "sourceChainId": 1,
        "targetChainId": 59144,
        "tokenBeacon": "eth:0x971f46a2852d11D59dbF0909e837cfd06f357DeB",
        "UNPAUSE_ALL_ROLE": "0xd8b4c34c2ec1f3194471108c64ad2beda340c0337ee4ca35592f9ef270f4228b",
        "UNPAUSE_COMPLETE_TOKEN_BRIDGING_ROLE": "0x8a7b208fd13ab36d18025be4f62b53d46aeb2cbe8958d2e13de74c040dddcddd",
        "UNPAUSE_INITIATE_TOKEN_BRIDGING_ROLE": "0x46e34517dc946faf87aabe65eb5b4fa06b974e5c8d72c5df73b9fb6ff7b6d802",
        "unpauseTypeToRole": {
          "1": "0xd8b4c34c2ec1f3194471108c64ad2beda340c0337ee4ca35592f9ef270f4228b",
          "7": "0x46e34517dc946faf87aabe65eb5b4fa06b974e5c8d72c5df73b9fb6ff7b6d802",
          "8": "0x8a7b208fd13ab36d18025be4f62b53d46aeb2cbe8958d2e13de74c040dddcddd"
        }
      },
      "fieldMeta": {
        "isPaused_GENERAL": { "severity": "HIGH" },
        "isPaused_L1_L2": { "severity": "HIGH" },
        "isPaused_L2_L1": { "severity": "HIGH" },
        "isPaused_BLOB_SUBMISSION": { "severity": "HIGH" },
        "isPaused_CALLDATA_SUBMISSION": { "severity": "HIGH" },
        "isPaused_FINALIZATION": { "severity": "HIGH" },
        "isPaused_INITIATE_TOKEN_BRIDGING": { "severity": "HIGH" },
        "isPaused_COMPLETE_TOKEN_BRIDGING": { "severity": "HIGH" }
      },
      "implementationNames": {
        "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319": "TransparentUpgradeableProxy",
        "eth:0x2B6A2F8880220a66DfB9059FCB76F7dB54104a34": "TokenBridge"
      },
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "linea" } }
      ]
    },
    {
      "address": "eth:0x0645A95411C3431BB2fc58Fa61BC837FFA2e12F2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x239d9B860399366F8d25F6e2962Fb2B9D070aEFE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "CallForwardingProxy",
      "address": "eth:0x3697bD0bC6C050135b8321F989a5316eACbF367D",
      "type": "Contract",
      "template": "linea/CallForwardingProxy",
      "sourceHashes": [
        "0x51e1fd21b79473438268845d5f9025c91fd69c6feb26e25f97f932e174e7ce1e"
      ],
      "proxyType": "immutable",
      "description": "A public proxy contract forwarding calls to a predefined target contract (eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F). Can be called by any address.",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
          "description": "submit and finalize blocks as the Operator role when 6 months of no finalizations have passed.",
          "role": ".fallbackOperator"
        }
      ],
      "sinceTimestamp": 1733219987,
      "sinceBlock": 21321239,
      "values": {
        "$immutable": true,
        "target": "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F"
      },
      "implementationNames": {
        "eth:0x3697bD0bC6C050135b8321F989a5316eACbF367D": "CallForwardingProxy"
      }
    },
    {
      "name": "BridgedToken",
      "address": "eth:0x36f274C1C197F277EA3C57859729398FCc8a3763",
      "type": "Contract",
      "template": "linea/BridgedToken",
      "sourceHashes": [
        "0x8a6c3f5b047664111c8f981a4cb5d8a79c5652771665343ffdd15ae64fa253bf"
      ],
      "proxyType": "immutable",
      "description": "Standard implementation used for assets that are native to the other layer and are bridged to this layer.",
      "sinceTimestamp": 1691067827,
      "sinceBlock": 17834645,
      "values": {
        "_decimals": 0,
        "$immutable": true,
        "bridge": "eth:0x0000000000000000000000000000000000000000",
        "decimals": 0,
        "DOMAIN_SEPARATOR": "0x3c2cd540b452637fdaef67438674b505a06d5b5a7d0d30cd3c8b7eb57d2f980f",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "",
          "version": "",
          "chainId": 1,
          "verifyingContract": "eth:0x36f274C1C197F277EA3C57859729398FCc8a3763",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "name": "",
        "symbol": "",
        "totalSupply": 0
      },
      "implementationNames": {
        "eth:0x36f274C1C197F277EA3C57859729398FCc8a3763": "BridgedToken"
      }
    },
    {
      "address": "eth:0x3acC729EdE75355EDab57aB82bEb32011cB1B079",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ProxyAdmin",
      "address": "eth:0x41fAD3Df1B07B647D120D055259E474fE8046eb5",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x31b987ba8db4fc147856ec1375d9df4f40d58c4dc97e16be5b38ee2e3c3cc6f9"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "eth:0x504A330327A089d8364C4ab3811Ee26976d388ce",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1691086259,
      "sinceBlock": 17836169,
      "values": {
        "$immutable": true,
        "owner": "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"
      },
      "implementationNames": {
        "eth:0x41fAD3Df1B07B647D120D055259E474fE8046eb5": "ProxyAdmin"
      }
    },
    {
      "address": "eth:0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0xF24f1DC519d88246809B660eb56D94048575d083",
          "description": "pause the TokenBridge, the USDCBridge and the core functionalities of the system (via Roles module, LineaRollup contract).",
          "role": ".pausers"
        }
      ]
    },
    {
      "address": "eth:0x46d2F319fd42165D4318F099E143dEA8124E9E3e",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "operateLinea",
          "from": "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
          "role": ".Operators"
        }
      ]
    },
    {
      "address": "eth:0x497515578b0BE54d2f0f32cF3F08B85Bf8cEB6aB",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1USDCBridge",
      "address": "eth:0x504A330327A089d8364C4ab3811Ee26976d388ce",
      "type": "Contract",
      "template": "linea/L1USDCBridge",
      "sourceHashes": [
        "0x6d1bbfb1ed7d88848e594dc11366fbed3d53c5a507022c04dbeea72ef549cd6a",
        "0xf678573abd85e88b327027262fe80c5008f18138d6f2a4b3558ccf78d535c94f"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "L1 side of the old and now unused USDC bridge.",
      "sinceTimestamp": 1691086271,
      "sinceBlock": 17836170,
      "values": {
        "$admin": "eth:0x41fAD3Df1B07B647D120D055259E474fE8046eb5",
        "$implementation": "eth:0x66CFD1562d6Aa4629e9e4142662c1A403528Df00",
        "$pastUpgrades": [
          [
            "2023-08-03T18:11:11.000Z",
            "0xa93648a8d01d65bea363bc2f6e19897e42f9af999370c07cb2a0ea6a5401b6b0",
            ["eth:0x16Db542C30fB3519D11CF8F632077c62c1a944fd"]
          ],
          [
            "2023-09-01T20:25:47.000Z",
            "0xe752ce539119fc11af6239e8b26a79d80c9e84cec19ac6aca060f466853f5b7d",
            ["eth:0x0eC393209674090368C592A591B25811e490BF36"]
          ],
          [
            "2025-03-16T19:57:11.000Z",
            "0xd61b29009aa7f628ff1b04138e30ebd39805e40a2e3e4a3e43050fd8b0f75548",
            ["eth:0x66CFD1562d6Aa4629e9e4142662c1A403528Df00"]
          ]
        ],
        "$upgradeCount": 3,
        "balance": 0,
        "messageService": "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
        "owner": "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "paused": true,
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000",
        "remoteUSDCBridge": "linea:0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A"
      },
      "implementationNames": {
        "eth:0x504A330327A089d8364C4ab3811Ee26976d388ce": "TransparentUpgradeableProxy",
        "eth:0x66CFD1562d6Aa4629e9e4142662c1A403528Df00": "L1USDCBridge"
      },
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "linea" } }
      ]
    },
    {
      "address": "eth:0x52FF08F313A00A54e3Beffb5C4a7F7446eFb6754",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "operateLinea",
          "from": "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
          "role": ".Operators"
        }
      ]
    },
    {
      "address": "eth:0x535dE1e2A961529AA84EF208981f8cF4e7dcbdF5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x727833aB68F32a7f2ab96f15aD67336660eCBBD0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Delay",
      "address": "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436",
      "type": "Contract",
      "template": "gnosisSafeModules/ZodiacDelay",
      "sourceHashes": [
        "0x6fa89ecef1d104e0b7fd7adc29f3bbfbd1a0fb71fe67422181d1201980ec2d56"
      ],
      "proxyType": "gnosis safe zodiac module",
      "description": "A simple Safe module for that can queue and execute transactions as eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051 after a delay of currently 90d, if registered as a module there.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051",
          "role": ".GnosisSafe_modules"
        }
      ],
      "ignoreInWatchMode": ["txNonce", "queueNonce"],
      "sinceTimestamp": 1753454807,
      "sinceBlock": 22996844,
      "values": {
        "$immutable": false,
        "avatar": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051",
        "getGuard": "eth:0x0000000000000000000000000000000000000000",
        "guard": "eth:0x0000000000000000000000000000000000000000",
        "owner": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051",
        "queueNonce": 0,
        "target": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051",
        "txCooldown": 7776000,
        "txCooldownFmt": "90d",
        "txExpiration": 0,
        "txNonce": 0,
        "ZodiacModule_avatar": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051",
        "ZodiacModule_guard": "eth:0x0000000000000000000000000000000000000000",
        "ZodiacModule_modules": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"
        ],
        "ZodiacModule_target": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
      },
      "implementationNames": {
        "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436": "Delay"
      }
    },
    {
      "address": "eth:0x7E55b79A01BD9125CD213Bc9F533d21Eb3bD68c5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Linea Multisig 1",
      "address": "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can pause the bridge.",
          "role": ".allPausers"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can pause the bridge.",
          "role": ".allUnpausers"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can pause token bridging actions initiated from the other layer.",
          "role": ".completeTokenBridgingPausers"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can pause token bridging actions initiated from this layer.",
          "role": ".initiateTokenBridgingPausers"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can prevent tokens that have not been bridged already from being bridged by assigning them a reserved status.",
          "role": ".reserveTokenSetters",
          "via": [
            { "address": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051" },
            {
              "address": "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436",
              "delay": 7776000
            }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can prevent tokens that have not been bridged already from being bridged by assigning them a reserved status.",
          "role": ".reserveTokenSetters"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can remove the reserved status from a token, meaning that it is allowed to be bridged again.",
          "role": ".reserveTokenRemovers",
          "via": [
            { "address": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051" },
            {
              "address": "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436",
              "delay": 7776000
            }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can remove the reserved status from a token, meaning that it is allowed to be bridged again.",
          "role": ".reserveTokenRemovers"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can set custom ERC20 contracts for specific ERC20s.",
          "role": ".customContractSetters",
          "via": [
            { "address": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051" },
            {
              "address": "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436",
              "delay": 7776000
            }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can set custom ERC20 contracts for specific ERC20s.",
          "role": ".customContractSetters"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can set the contract that is recognized to be the token bridge contract on the other side.",
          "role": ".remoteTokenBridgeSetters"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can set the contract used as the source of truth from crosschain messages.",
          "role": ".messageServiceSetters"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can unpause token bridging actions initiated from the other layer.",
          "role": ".completeTokenBridgingUnpausers"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can unpause token bridging actions initiated from this layer.",
          "role": ".initiateTokenBridgingUnpausers"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "manage all critical access control roles and permissions (full admin of the main bridge escrow).",
          "role": ".defaultAdminAC"
        },
        {
          "permission": "interact",
          "from": "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436",
          "description": "enable/disable the module, set delays and expiration of transactions, set the target.",
          "role": ".owner",
          "via": [
            { "address": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051" },
            {
              "address": "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436",
              "delay": 7776000
            }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0x971f46a2852d11D59dbF0909e837cfd06f357DeB",
          "description": "change the beacon implementation.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
          "description": "manage all critical access control roles and permissions (full admin of the rollup system).",
          "role": ".defaultAdminAC"
        },
        {
          "permission": "interact",
          "from": "eth:0xd6B95c960779c72B8C6752119849318E5d550574",
          "description": "cancel queued transactions.",
          "role": ".cancellerAC"
        },
        {
          "permission": "interact",
          "from": "eth:0xd6B95c960779c72B8C6752119849318E5d550574",
          "description": "execute transactions that are ready.",
          "role": ".executorAC"
        },
        {
          "permission": "interact",
          "from": "eth:0xd6B95c960779c72B8C6752119849318E5d550574",
          "description": "manage all access control roles and change the minimum delay.",
          "role": ".timelockAdminAC",
          "via": [
            { "address": "eth:0xd6B95c960779c72B8C6752119849318E5d550574" }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0xd6B95c960779c72B8C6752119849318E5d550574",
          "description": "propose transactions.",
          "role": ".proposerAC",
          "via": [
            { "address": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051" },
            {
              "address": "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436",
              "delay": 7776000
            }
          ]
        },
        {
          "permission": "interact",
          "from": "eth:0xd6B95c960779c72B8C6752119849318E5d550574",
          "description": "propose transactions.",
          "role": ".proposerAC"
        },
        {
          "permission": "upgrade",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "role": "admin",
          "via": [
            { "address": "eth:0xF5058616517C068C7b8c7EbC69FF636Ade9066d6" },
            { "address": "eth:0xd6B95c960779c72B8C6752119849318E5d550574" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0x504A330327A089d8364C4ab3811Ee26976d388ce",
          "role": "admin",
          "via": [
            { "address": "eth:0x41fAD3Df1B07B647D120D055259E474fE8046eb5" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
          "role": "admin",
          "via": [
            { "address": "eth:0xF5058616517C068C7b8c7EbC69FF636Ade9066d6" },
            { "address": "eth:0xd6B95c960779c72B8C6752119849318E5d550574" }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "eth:0x41fAD3Df1B07B647D120D055259E474fE8046eb5",
          "role": ".owner"
        },
        {
          "permission": "act",
          "from": "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436",
          "delay": 7776000,
          "role": ".ZodiacModule_modules"
        },
        {
          "permission": "act",
          "from": "eth:0xd6B95c960779c72B8C6752119849318E5d550574",
          "role": ".executorAC"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1689149759,
      "sinceBlock": 17676233,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "eth:0x497515578b0BE54d2f0f32cF3F08B85Bf8cEB6aB",
          "eth:0x239d9B860399366F8d25F6e2962Fb2B9D070aEFE",
          "eth:0x535dE1e2A961529AA84EF208981f8cF4e7dcbdF5",
          "eth:0xC263178AC471C4411abAf5c22cD4D8D67033bc82",
          "eth:0x9376c137AF5124FFc39bD8940A3D88D1cd508992",
          "eth:0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4",
          "eth:0x99234cd9B532F30538ac797D33c212e3B69Fd087",
          "eth:0xB4dAebe4D01f467701F95f0196fc29033c54dBcb"
        ],
        "$threshold": 4,
        "domainSeparator": "0xf720f1fd8bfacb497aa1c16a19a7f17ba6e7bfba9ae23c73812ce40727956e08",
        "getChainId": 1,
        "GnosisSafe_modules": [
          "eth:0xF24f1DC519d88246809B660eb56D94048575d083"
        ],
        "multisigThreshold": "4 of 8 (50%)",
        "nonce": 61,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3": "GnosisSafeProxy",
        "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "eth:0x9376c137AF5124FFc39bD8940A3D88D1cd508992",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "PlonkVerifierMainnetFull",
      "address": "eth:0x9473C37A9fE76fbbc3Fd7d3b59E1b550415bd873",
      "type": "Contract",
      "template": "linea/Verifier",
      "sourceHashes": [
        "0x64013fe6cc4367b6dbbeb934bdb33f30aa57f2e6ebd6342fd05f2beb795c59c4"
      ],
      "proxyType": "immutable",
      "description": "Smart contract used to verify the proofs of Linea zkEVM execution.",
      "sinceTimestamp": 1755702719,
      "sinceBlock": 23183104,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0x9473C37A9fE76fbbc3Fd7d3b59E1b550415bd873": "PlonkVerifierMainnetFull"
      }
    },
    {
      "name": "UpgradeableBeacon",
      "address": "eth:0x971f46a2852d11D59dbF0909e837cfd06f357DeB",
      "type": "Contract",
      "template": "global/UpgradeableBeacon",
      "sourceHashes": [
        "0x02777a2575f23718a66224f10ac65db704c8c844f66d08dd5f9afd58b869f133"
      ],
      "proxyType": "immutable",
      "description": "A beacon with an upgradeable implementation currently set as eth:0x36f274C1C197F277EA3C57859729398FCc8a3763. Beacon proxy contracts pointing to this beacon will all use its implementation.",
      "sinceTimestamp": 1691067839,
      "sinceBlock": 17834646,
      "values": {
        "$immutable": true,
        "implementation": "eth:0x36f274C1C197F277EA3C57859729398FCc8a3763",
        "owner": "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"
      },
      "implementationNames": {
        "eth:0x971f46a2852d11D59dbF0909e837cfd06f357DeB": "UpgradeableBeacon"
      }
    },
    {
      "address": "eth:0x99234cd9B532F30538ac797D33c212e3B69Fd087",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xA9714aE1A9FBd20E1bc0BD03A1B7755aBF73A451",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xB4dAebe4D01f467701F95f0196fc29033c54dBcb",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Linea Multisig 2",
      "address": "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can prevent tokens that have not been bridged already from being bridged by assigning them a reserved status.",
          "role": ".reserveTokenSetters"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can remove the reserved status from a token, meaning that it is allowed to be bridged again.",
          "role": ".reserveTokenRemovers"
        },
        {
          "permission": "interact",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "description": "can set custom ERC20 contracts for specific ERC20s.",
          "role": ".customContractSetters"
        },
        {
          "permission": "interact",
          "from": "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436",
          "description": "enable/disable the module, set delays and expiration of transactions, set the target.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0xd6B95c960779c72B8C6752119849318E5d550574",
          "description": "propose transactions.",
          "role": ".proposerAC"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1748512535,
      "sinceBlock": 22587649,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "eth:0x3acC729EdE75355EDab57aB82bEb32011cB1B079",
          "eth:0x727833aB68F32a7f2ab96f15aD67336660eCBBD0",
          "eth:0x7E55b79A01BD9125CD213Bc9F533d21Eb3bD68c5",
          "eth:0xA9714aE1A9FBd20E1bc0BD03A1B7755aBF73A451",
          "eth:0x0645A95411C3431BB2fc58Fa61BC837FFA2e12F2"
        ],
        "$threshold": 3,
        "domainSeparator": "0xc00e33af56f8ccba4ad8898e0858c3b0d9b46e751023faec112ed32395a3dc89",
        "getChainId": 1,
        "GnosisSafe_modules": [
          "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436"
        ],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 5,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051": "SafeProxy",
        "eth:0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      }
    },
    {
      "address": "eth:0xC263178AC471C4411abAf5c22cD4D8D67033bc82",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "LineaRollup",
      "address": "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
      "type": "Contract",
      "template": "linea/LineaRollup",
      "sourceHashes": [
        "0x36a2777510f3b20063560bdcb7f657da283bcfdc484a19b0a0f77d18f6a8b5e1",
        "0xd9038151917d14b4d25257789abe9a10cecf3a5b4c0c2520860ce1338757ceff"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main contract of the Linea zkEVM rollup. Contains state roots, the verifier addresses and manages messages between L1 and the L2.",
      "ignoreInWatchMode": [
        "currentPeriodAmountInWei",
        "currentL2StoredL1MessageNumber",
        "currentL2StoredL1RollingHash",
        "currentFinalizedShnarf",
        "currentFinalizedState"
      ],
      "sinceTimestamp": 1689159923,
      "sinceBlock": 17677070,
      "values": {
        "$admin": "eth:0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
        "$implementation": "eth:0x07ddce60658A61dc1732Cacf2220FcE4A01C49B0",
        "$pastUpgrades": [
          [
            "2023-07-12T11:05:23.000Z",
            "0x3564f15a274bdc49a6ad8af161113d20a678d87efbd3d708540a9b4d026f1122",
            ["eth:0xE8f627df6Cb02e415b2e6d6e112323BD269b4706"]
          ],
          [
            "2023-07-12T12:57:47.000Z",
            "0x8ee4253600d68665e8d52a522d8ba7136639187b87f8079b881de9e6d1f20d2a",
            ["eth:0xE8f627df6Cb02e415b2e6d6e112323BD269b4706"]
          ],
          [
            "2023-07-15T13:31:23.000Z",
            "0x628efc29f5b2267f23cf613720003fafe671ee47db60b4f6610f5ae1ab838555",
            ["eth:0x4c8d4Ce72afAA417d1F7E833725FdB4E793cd6b3"]
          ],
          [
            "2023-08-08T16:58:47.000Z",
            "0xdff29a7f65b6bec4e8288673a5ca55e12081b4d55879e600817484f28c5a80b1",
            ["eth:0xb32c3D0dDb0063FfB15E8a50b40cC62230D820B3"]
          ],
          [
            "2024-02-13T08:39:59.000Z",
            "0xb4ed5b2646e45744945a4fc51da0e5e687ffe26f570b7aa3abb7b1fd4a460ea4",
            ["eth:0xAA4b3a9515c921996Abe7930bF75Eff7466a4457"]
          ],
          [
            "2024-03-26T10:29:47.000Z",
            "0x565c77e109aac4df41d81457bdfbdd17782d8bca9a1330c68a271c64f35d05e5",
            ["eth:0x934Dd4C63E285551CEceF8459103554D0096c179"]
          ],
          [
            "2024-06-05T11:49:35.000Z",
            "0x497bdab1d3fb97eed72a55fc6e3672694195b08f949c2e0e84ea4b36428ee9c6",
            ["eth:0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562"]
          ],
          [
            "2024-10-29T15:35:47.000Z",
            "0x0970f422c80627f28916f9c5583ff6298070893debd191ead0cf39778e4bae14",
            ["eth:0x1825242411792536469Cbb5843fd27Ce3e9e583A"]
          ],
          [
            "2024-12-16T13:52:11.000Z",
            "0x96b88112de2e594cb763bc625cc2dcb6920825bb642eb1a62ff577f0c29f616d",
            ["eth:0x07ddce60658A61dc1732Cacf2220FcE4A01C49B0"]
          ]
        ],
        "$upgradeCount": 9,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "OPERATOR_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "eth:0x46d2F319fd42165D4318F099E143dEA8124E9E3e",
              "eth:0x52FF08F313A00A54e3Beffb5C4a7F7446eFb6754"
            ]
          },
          "RATE_LIMIT_SETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_MANAGER": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "VERIFIER_SETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0xd6B95c960779c72B8C6752119849318E5d550574"]
          },
          "PAUSE_ALL_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_L1_L2_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_L2_L1_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "UNPAUSE_ALL_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "UNPAUSE_L1_L2_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "UNPAUSE_L2_L1_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_BLOB_SUBMISSION_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "UNPAUSE_BLOB_SUBMISSION_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_FINALIZATION_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "UNPAUSE_FINALIZATION_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "USED_RATE_LIMIT_RESETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "VERIFIER_UNSETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          }
        },
        "CONTRACT_VERSION": "6.0",
        "currentFinalizedShnarf": "0x0404dad7630cf460c8d683f04272586d03e673a70ad40e557e23060abc7e9d0a",
        "currentFinalizedState": "0x0977f91be6bea2e594c2a88673bfcee74ccf1a02a3b1d444eaed986344f76628",
        "currentL2StoredL1MessageNumber": 626080,
        "currentL2StoredL1RollingHash": "0xc2453f13443df7f6fd1a09328e1ed9aca29edf668321fb8376948908127c22ac",
        "currentPeriodAmountInWei": "914795376457072105431",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdminAC": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"],
        "fallbackOperator": "eth:0x3697bD0bC6C050135b8321F989a5316eACbF367D",
        "GENESIS_SHNARF": "0x47452a1b9ebadfe02bdd02f580fa1eba17680d57eec968a591644d05d78ee84f",
        "INBOX_STATUS_RECEIVED": 1,
        "INBOX_STATUS_UNKNOWN": 0,
        "isPaused_BLOB_SUBMISSION": false,
        "isPaused_CALLDATA_SUBMISSION": false,
        "isPaused_COMPLETE_TOKEN_BRIDGING": false,
        "isPaused_FINALIZATION": false,
        "isPaused_GENERAL": false,
        "isPaused_INITIATE_TOKEN_BRIDGING": false,
        "isPaused_L1_L2": false,
        "isPaused_L2_L1": false,
        "limitInWei": "18750000000000000000000",
        "OPERATOR_ROLE": "0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
        "Operators": [
          "eth:0x46d2F319fd42165D4318F099E143dEA8124E9E3e",
          "eth:0x52FF08F313A00A54e3Beffb5C4a7F7446eFb6754"
        ],
        "OUTBOX_STATUS_RECEIVED": 2,
        "OUTBOX_STATUS_SENT": 1,
        "OUTBOX_STATUS_UNKNOWN": 0,
        "PAUSE_ALL_ROLE": "0x56bdc3c9ec86cb7db110a7699b2ade72f0b8819727d9f7d906b012641505fa77",
        "PAUSE_BLOB_SUBMISSION_ROLE": "0x67c2dca7476ee0fe1dd3cba13428c6760bfe2599a6dfe26a9ad7ef27317c6e77",
        "PAUSE_FINALIZATION_ROLE": "0xe37c272ea30e2bb381ad7cf89ae754b49153250609f36d0cbdad8b64c184bb5c",
        "PAUSE_L1_L2_ROLE": "0x430a7f0cb00b5ebbe63cecc96e82cf959a883e7c13a95110854f1fa6b3fbf598",
        "PAUSE_L2_L1_ROLE": "0xe1fce82838dd7a42cfe783f60dc6233c8aa2c4fc66e77817805e767ec5e349b6",
        "periodInSeconds": 86400,
        "RATE_LIMIT_SETTER_ROLE": "0x1185e52d62bfbbea270e57d3d09733d221b53ab7a18bae82bb3c6c74bab16d82",
        "sender": "eth:0x0000000000000000000000000000000000000000",
        "systemMigrationBlock": 19219000,
        "UNPAUSE_ALL_ROLE": "0xd8b4c34c2ec1f3194471108c64ad2beda340c0337ee4ca35592f9ef270f4228b",
        "UNPAUSE_BLOB_SUBMISSION_ROLE": "0xe4831f9e4316ac2c65117d1f602fbf56d38128a9973d5e3fdbc5b77265c18d40",
        "UNPAUSE_FINALIZATION_ROLE": "0x1ab87f7458c0e3d07e9881c14ee67f0141703614fd48ea5b15ed987e5f4b030e",
        "UNPAUSE_L1_L2_ROLE": "0xe8cb6172fcf5cbaae022b7c910224a4f0c20d53227e630056efff182155a5abc",
        "UNPAUSE_L2_L1_ROLE": "0xb6cc65f42901ed602aec1619cc1ead29d487cd489094a37615153eaeb991d770",
        "USED_RATE_LIMIT_RESETTER_ROLE": "0x0cf0d2deb70d7bdac2fa48c4ac99bc558170be0ce5fcb994caefa4bf7b96edf9",
        "VERIFIER_SETTER_ROLE": "0x32937fd5162e282df7e9a14a5073a2425321c7966eaf70ed6c838a1006d84c4c",
        "VERIFIER_UNSETTER_ROLE": "0x6b5661ddfbd1fbd525c902a513e0f47d9c74f1c1ee8a2d4f1937ad305fb8f41a",
        "verifiers": [
          "eth:0xED39C0C41A7651006953AB58Ecb3039363620995",
          "eth:0x9473C37A9fE76fbbc3Fd7d3b59E1b550415bd873",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000",
          "eth:0x0000000000000000000000000000000000000000"
        ]
      },
      "fieldMeta": {
        "verifiers": {
          "description": "Mapping of proof type to ZK Plonk Verifier contract"
        },
        "isPaused_GENERAL": { "severity": "HIGH" },
        "isPaused_L1_L2": { "severity": "HIGH" },
        "isPaused_L2_L1": { "severity": "HIGH" },
        "isPaused_BLOB_SUBMISSION": { "severity": "HIGH" },
        "isPaused_CALLDATA_SUBMISSION": { "severity": "HIGH" },
        "isPaused_FINALIZATION": { "severity": "HIGH" },
        "isPaused_INITIATE_TOKEN_BRIDGING": { "severity": "HIGH" },
        "isPaused_COMPLETE_TOKEN_BRIDGING": { "severity": "HIGH" }
      },
      "implementationNames": {
        "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F": "TransparentUpgradeableProxy",
        "eth:0x07ddce60658A61dc1732Cacf2220FcE4A01C49B0": "LineaRollup"
      }
    },
    {
      "name": "Timelock",
      "address": "eth:0xd6B95c960779c72B8C6752119849318E5d550574",
      "type": "Contract",
      "template": "global/Timelock",
      "sourceHashes": [
        "0xaf04cf94ef4bf759d6466fa262a5e8e54f6d5c9652286fe5d71c9a904de27e5c"
      ],
      "proxyType": "immutable",
      "description": "A standard timelock with access control. The current minimum delay is 0s.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "eth:0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0xd6B95c960779c72B8C6752119849318E5d550574",
          "description": "manage all access control roles and change the minimum delay.",
          "role": ".timelockAdminAC"
        }
      ],
      "sinceTimestamp": 1689150959,
      "sinceBlock": 17676332,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["eth:0xd6B95c960779c72B8C6752119849318E5d550574"]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
              "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
            ]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "cancellerAC": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"],
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "executorAC": ["eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"],
        "getMinDelay": 0,
        "minDelayFormatted": "0s",
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "proposerAC": [
          "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
          "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
        ],
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5",
        "timelockAdminAC": ["eth:0xd6B95c960779c72B8C6752119849318E5d550574"]
      },
      "implementationNames": {
        "eth:0xd6B95c960779c72B8C6752119849318E5d550574": "TimeLock"
      }
    },
    {
      "name": "PlonkVerifierMainnetFull",
      "address": "eth:0xED39C0C41A7651006953AB58Ecb3039363620995",
      "type": "Contract",
      "template": "linea/Verifier",
      "sourceHashes": [
        "0xb87d66914fca067b6c490e46194aeef92a6c4930a9a6e53bfd2833813b0685a8"
      ],
      "proxyType": "immutable",
      "description": "Smart contract used to verify the proofs of Linea zkEVM execution.",
      "sinceTimestamp": 1748943779,
      "sinceBlock": 22623305,
      "values": { "$immutable": true },
      "implementationNames": {
        "eth:0xED39C0C41A7651006953AB58Ecb3039363620995": "PlonkVerifierMainnetFull"
      }
    },
    {
      "name": "Roles",
      "address": "eth:0xF24f1DC519d88246809B660eb56D94048575d083",
      "type": "Contract",
      "template": "linea/Roles",
      "sourceHashes": [
        "0x699a67bde09c0d73c29ec9de66133bfee484544494865d954ac01f9736efed30"
      ],
      "proxyType": "gnosis safe zodiac module",
      "description": "The Zodiac 'Roles' module for Safe multisigs allows defining roles that can call preconfigured targets on behalf of the Gnosis Safe.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
          "role": ".GnosisSafe_modules"
        }
      ],
      "sinceTimestamp": 1700506439,
      "sinceBlock": 18614911,
      "values": {
        "$immutable": false,
        "avatar": "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "getGuard": "eth:0x0000000000000000000000000000000000000000",
        "guard": "eth:0x0000000000000000000000000000000000000000",
        "multisend": "eth:0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761",
        "owner": "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "pausers": "eth:0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8",
        "roles": {
          "defaultRoles": {},
          "roles": {
            "1": {
              "members": {
                "eth:0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8": true
              },
              "targets": {
                "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F": {
                  "clearance": "Function",
                  "options": "None"
                },
                "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319": {
                  "clearance": "Function",
                  "options": "None"
                },
                "eth:0x504A330327A089d8364C4ab3811Ee26976d388ce": {
                  "clearance": "Function",
                  "options": "None"
                }
              },
              "functions": {
                "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319": {
                  "pause()": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  }
                },
                "eth:0x504A330327A089d8364C4ab3811Ee26976d388ce": {
                  "pause()": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  }
                },
                "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F": {
                  "pauseByType(uint8)": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  }
                }
              },
              "compValues": {},
              "compValuesOneOf": {}
            }
          }
        },
        "target": "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "ZodiacModule_avatar": "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "ZodiacModule_guard": "eth:0x0000000000000000000000000000000000000000",
        "ZodiacModule_modules": [
          "eth:0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8"
        ],
        "ZodiacModule_target": "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3"
      },
      "implementationNames": {
        "eth:0xF24f1DC519d88246809B660eb56D94048575d083": "Roles"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "eth:0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x68f689a23d3badd91255602a1eb13d4789baedc16d904c3103244642fc78ca8f"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1689158711,
      "sinceBlock": 17676969,
      "values": {
        "$immutable": true,
        "owner": "eth:0xd6B95c960779c72B8C6752119849318E5d550574"
      },
      "implementationNames": {
        "eth:0xF5058616517C068C7b8c7EbC69FF636Ade9066d6": "ProxyAdmin"
      }
    },
    {
      "address": "linea:0x0000000000000000000000000000000000000000",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "linea:0x00000000000000000000000000000000075BCd15",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "linea:0x0645A95411C3431BB2fc58Fa61BC837FFA2e12F2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ProxyAdmin",
      "address": "linea:0x1E1f6F22f97b4a7522D8B62e983953639239774E",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x68f689a23d3badd91255602a1eb13d4789baedc16d904c3103244642fc78ca8f"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "linea:0x508Ca82Df566dCD1B0DE8296e70a96332cD644ec",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1688650653,
      "sinceBlock": 3,
      "values": {
        "$immutable": true,
        "owner": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca"
      },
      "implementationNames": {
        "linea:0x1E1f6F22f97b4a7522D8B62e983953639239774E": "ProxyAdmin"
      }
    },
    {
      "address": "linea:0x239d9B860399366F8d25F6e2962Fb2B9D070aEFE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "TokenBridge",
      "address": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
      "type": "Contract",
      "template": "linea/L2TokenBridge",
      "sourceHashes": [
        "0x36a2777510f3b20063560bdcb7f657da283bcfdc484a19b0a0f77d18f6a8b5e1",
        "0x49bdbe79d2cc9cefee03245e4b48260f4a71e7976af51741005758e7236d687d"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract used to bridge and escrow ERC-20 tokens.",
      "sinceTimestamp": 1691068282,
      "sinceBlock": 116555,
      "values": {
        "$admin": "linea:0x1E1f6F22f97b4a7522D8B62e983953639239774E",
        "$implementation": "linea:0xD90ed3D4f9d11262d3D346a4369058d5B3777137",
        "$pastUpgrades": [
          [
            "2023-08-03T13:11:22.000Z",
            "0x74e2ded3ed8dd2fd39692b053ede573c6d8205a2dcdb29a201d6320006f81404",
            ["linea:0x2bfdf4a0d54C93a4bAF74F8DcEA8a275D8EE97a9"]
          ],
          [
            "2024-06-05T11:55:17.000Z",
            "0x679e1f421ff3d583b75adc32bda76d9408688e9fd6897bc499baaee547711f13",
            ["linea:0x0fFCBe98041B77BD87C38e2d0a6b473e7703444E"]
          ],
          [
            "2024-12-16T14:06:23.000Z",
            "0xbb31a92afc2c725d0b10aaf96829db7a553041d0be10ca840d2fb82ef77119e7",
            ["linea:0xD90ed3D4f9d11262d3D346a4369058d5B3777137"]
          ]
        ],
        "$upgradeCount": 3,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "PAUSE_ALL_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "UNPAUSE_ALL_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "PAUSE_INITIATE_TOKEN_BRIDGING_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "UNPAUSE_INITIATE_TOKEN_BRIDGING_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "PAUSE_COMPLETE_TOKEN_BRIDGING_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "UNPAUSE_COMPLETE_TOKEN_BRIDGING_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "SET_CUSTOM_CONTRACT_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
              "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
            ]
          },
          "REMOVE_RESERVED_TOKEN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
              "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
            ]
          },
          "SET_MESSAGE_SERVICE_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "SET_REMOTE_TOKENBRIDGE_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "SET_RESERVED_TOKEN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
              "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
            ]
          }
        },
        "allPausers": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"],
        "allUnpausers": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"],
        "completeTokenBridgingPausers": [
          "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"
        ],
        "completeTokenBridgingUnpausers": [
          "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"
        ],
        "CONTRACT_VERSION": "1.0",
        "customContractSetters": [
          "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
          "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
        ],
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdminAC": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"],
        "initiateTokenBridgingPausers": [
          "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"
        ],
        "initiateTokenBridgingUnpausers": [
          "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"
        ],
        "isPaused_BLOB_SUBMISSION": false,
        "isPaused_CALLDATA_SUBMISSION": false,
        "isPaused_COMPLETE_TOKEN_BRIDGING": false,
        "isPaused_FINALIZATION": false,
        "isPaused_GENERAL": false,
        "isPaused_INITIATE_TOKEN_BRIDGING": false,
        "isPaused_L1_L2": false,
        "isPaused_L2_L1": false,
        "messageService": "linea:0x508Ca82Df566dCD1B0DE8296e70a96332cD644ec",
        "messageServiceSetters": [
          "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"
        ],
        "PAUSE_ALL_ROLE": "0x56bdc3c9ec86cb7db110a7699b2ade72f0b8819727d9f7d906b012641505fa77",
        "PAUSE_COMPLETE_TOKEN_BRIDGING_ROLE": "0x50962b2d10066f5051f78d5ea04a3ab09b9c87dd1002962f0b1e30e66eeb80a5",
        "PAUSE_INITIATE_TOKEN_BRIDGING_ROLE": "0x3900d9d72d5177a154375317154fdc0e08377e3134a8a5d21cadccf831cc231c",
        "pauseTypeToRole": {
          "1": "0x56bdc3c9ec86cb7db110a7699b2ade72f0b8819727d9f7d906b012641505fa77",
          "7": "0x3900d9d72d5177a154375317154fdc0e08377e3134a8a5d21cadccf831cc231c",
          "8": "0x50962b2d10066f5051f78d5ea04a3ab09b9c87dd1002962f0b1e30e66eeb80a5"
        },
        "remoteSender": "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
        "remoteTokenBridgeSetters": [
          "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"
        ],
        "REMOVE_RESERVED_TOKEN_ROLE": "0x19bf281d118073c159a713666aba52e0d403520cd01e03f42e0f62a0b3bd4a35",
        "reserveTokenRemovers": [
          "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
          "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
        ],
        "reserveTokenSetters": [
          "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
          "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
        ],
        "SET_CUSTOM_CONTRACT_ROLE": "0x550554a677c8e7b73b62db78b0ef06c5f237da4ef30b88196a899ccf591041fe",
        "SET_MESSAGE_SERVICE_ROLE": "0x77974cc9cb5bafc9bb265be792d93fa46355c05701895b82f6d3b4b448c8ce00",
        "SET_REMOTE_TOKENBRIDGE_ROLE": "0xbf094fe3c005c553ff0d33c7dff9d1273add12fb3f258b992f8d36224dd35b24",
        "SET_RESERVED_TOKEN_ROLE": "0xeaf25fcc6b7d45bda16c56628df3f435e20319ef53b065c11ee4510083f0ae2d",
        "sourceChainId": 59144,
        "targetChainId": 1,
        "tokenBeacon": "linea:0xE798695d2e78f7caeb5BbF3385433959324c02c0",
        "UNPAUSE_ALL_ROLE": "0xd8b4c34c2ec1f3194471108c64ad2beda340c0337ee4ca35592f9ef270f4228b",
        "UNPAUSE_COMPLETE_TOKEN_BRIDGING_ROLE": "0x8a7b208fd13ab36d18025be4f62b53d46aeb2cbe8958d2e13de74c040dddcddd",
        "UNPAUSE_INITIATE_TOKEN_BRIDGING_ROLE": "0x46e34517dc946faf87aabe65eb5b4fa06b974e5c8d72c5df73b9fb6ff7b6d802",
        "unpauseTypeToRole": {
          "1": "0xd8b4c34c2ec1f3194471108c64ad2beda340c0337ee4ca35592f9ef270f4228b",
          "7": "0x46e34517dc946faf87aabe65eb5b4fa06b974e5c8d72c5df73b9fb6ff7b6d802",
          "8": "0x8a7b208fd13ab36d18025be4f62b53d46aeb2cbe8958d2e13de74c040dddcddd"
        }
      },
      "fieldMeta": {
        "isPaused_GENERAL": { "severity": "HIGH" },
        "isPaused_L1_L2": { "severity": "HIGH" },
        "isPaused_L2_L1": { "severity": "HIGH" },
        "isPaused_BLOB_SUBMISSION": { "severity": "HIGH" },
        "isPaused_CALLDATA_SUBMISSION": { "severity": "HIGH" },
        "isPaused_FINALIZATION": { "severity": "HIGH" },
        "isPaused_INITIATE_TOKEN_BRIDGING": { "severity": "HIGH" },
        "isPaused_COMPLETE_TOKEN_BRIDGING": { "severity": "HIGH" }
      },
      "implementationNames": {
        "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9": "TransparentUpgradeableProxy",
        "linea:0xD90ed3D4f9d11262d3D346a4369058d5B3777137": "TokenBridge"
      },
      "usedTypes": [{ "typeCaster": "ChainPrefix", "arg": { "prefix": "eth" } }]
    },
    {
      "name": "L2Roles",
      "address": "linea:0x3886a948eA7b4053312c3aE31a13776144aA6239",
      "type": "Contract",
      "template": "linea/L2Roles",
      "sourceHashes": [
        "0xd525e4c8c7b277954ecc3d7968759765db786739ef557a1e96711e5829dfc907"
      ],
      "proxyType": "gnosis safe zodiac module",
      "description": "The Zodiac 'Roles' module for Safe multisigs allows defining roles that can call preconfigured targets on behalf of the Gnosis Safe.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
          "role": ".GnosisSafe_modules"
        }
      ],
      "sinceTimestamp": 1700507247,
      "sinceBlock": 918978,
      "values": {
        "$immutable": false,
        "avatar": "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
        "getGuard": "linea:0x0000000000000000000000000000000000000000",
        "guard": "linea:0x0000000000000000000000000000000000000000",
        "multisend": "linea:0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761",
        "owner": "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
        "pausers": "linea:0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8",
        "roles": {
          "defaultRoles": {},
          "roles": {
            "1": {
              "members": {
                "linea:0x97643DD2dFE4dd0b64d43504BAC4ADb2923fdf7a": true
              },
              "targets": {
                "linea:0xd83af4fbD77f3AB65C3B1Dc4B38D7e67AEcf599A": {
                  "clearance": "Function",
                  "options": "None"
                }
              },
              "functions": {
                "linea:0xd83af4fbD77f3AB65C3B1Dc4B38D7e67AEcf599A": {
                  "batchMint(address[],uint256)": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  },
                  "batchMintMultiple(address[],uint256[])": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  }
                }
              },
              "compValues": {},
              "compValuesOneOf": {}
            },
            "2": {
              "members": {
                "linea:0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8": true
              },
              "targets": {
                "linea:0x508Ca82Df566dCD1B0DE8296e70a96332cD644ec": {
                  "clearance": "Function",
                  "options": "None"
                },
                "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9": {
                  "clearance": "Function",
                  "options": "None"
                },
                "linea:0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A": {
                  "clearance": "Function",
                  "options": "None"
                }
              },
              "functions": {
                "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9": {
                  "pause()": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  }
                },
                "linea:0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A": {
                  "pause()": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  }
                },
                "linea:0x508Ca82Df566dCD1B0DE8296e70a96332cD644ec": {
                  "pauseByType(uint8)": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  }
                }
              },
              "compValues": {},
              "compValuesOneOf": {}
            }
          }
        },
        "target": "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
        "voyageXpMinters": "linea:0x97643DD2dFE4dd0b64d43504BAC4ADb2923fdf7a",
        "ZodiacModule_avatar": "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
        "ZodiacModule_guard": "linea:0x0000000000000000000000000000000000000000",
        "ZodiacModule_modules": [
          "linea:0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8",
          "linea:0x97643DD2dFE4dd0b64d43504BAC4ADb2923fdf7a"
        ],
        "ZodiacModule_target": "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"
      },
      "implementationNames": {
        "linea:0x3886a948eA7b4053312c3aE31a13776144aA6239": "Roles"
      }
    },
    {
      "address": "linea:0x3acC729EdE75355EDab57aB82bEb32011cB1B079",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "linea:0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "linea:0x3886a948eA7b4053312c3aE31a13776144aA6239",
          "description": "can pause the L2MessageService, the TokenBridge and the L2USDCBridge.",
          "role": ".pausers"
        }
      ]
    },
    {
      "address": "linea:0x497515578b0BE54d2f0f32cF3F08B85Bf8cEB6aB",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "linea:0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L2MessageService",
      "address": "linea:0x508Ca82Df566dCD1B0DE8296e70a96332cD644ec",
      "type": "Contract",
      "template": "linea/L2MessageService",
      "sourceHashes": [
        "0x36a2777510f3b20063560bdcb7f657da283bcfdc484a19b0a0f77d18f6a8b5e1",
        "0x9436ff273e587ee919293672a7a5ba7bf371053a92565ee236a004932a5dda66"
      ],
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": [
        "currentPeriodAmountInWei",
        "currentPeriodEnd",
        "lastAnchoredL1MessageNumber",
        "nextMessageNumber"
      ],
      "sinceTimestamp": 1688650665,
      "sinceBlock": 4,
      "values": {
        "$admin": "linea:0x1E1f6F22f97b4a7522D8B62e983953639239774E",
        "$implementation": "linea:0x05d43713B7E333d2D54be65cE3b5F3698aB960Fd",
        "$pastUpgrades": [
          [
            "2023-07-06T13:37:45.000Z",
            "0xed74f383b9adf7473d3acd918f80cfdd9e971e861e08c82da880b0b6c3e7d5da",
            ["linea:0x369DB650D875938252682532eA9E4Af267a7d126"]
          ],
          [
            "2023-07-12T14:48:18.000Z",
            "0x0c07ca13444501284e8935d6cc93cde21ab6a45c6d442aae2681fe01e4106b8d",
            ["linea:0x49B620cC5DaD8254253ADf9f769262fF15C79e8c"]
          ],
          [
            "2023-07-15T13:41:19.000Z",
            "0x58e2af8033120299d32c2c561cb236a386565e981a14626d1b96a7d592564b66",
            ["linea:0x89e70E2AAAD2021cEa50b1eb235B7Fe97625147d"]
          ],
          [
            "2024-02-13T08:35:05.000Z",
            "0xcc8a117438895921a7768cef24fd55a179538956fe8e3dfdbf44181ae2eb4151",
            ["linea:0x2c4F0ed41E356E289b5b479684006427Ec3589af"]
          ],
          [
            "2024-03-26T10:36:57.000Z",
            "0xb50f4883ceaaecaa5c3864e17e0cedcdfbf13a8d49e2e318dbde814d7dbe1459",
            ["linea:0x9899f25BDD0785B2b47c1Bd29711D88406c3b54D"]
          ],
          [
            "2024-12-16T14:06:23.000Z",
            "0xbb31a92afc2c725d0b10aaf96829db7a553041d0be10ca840d2fb82ef77119e7",
            ["linea:0x05d43713B7E333d2D54be65cE3b5F3698aB960Fd"]
          ]
        ],
        "$upgradeCount": 6,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "L1_L2_MESSAGE_SETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xc1C6B09D1eB6fCA0fF3cA11027E5Bc4AeDb47F67"]
          },
          "MINIMUM_FEE_SETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "RATE_LIMIT_SETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "0x356a809dfdea9198dd76fb76bf6d403ecf13ea675eb89e1eda2db2c4a4676a26": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "USED_RATE_LIMIT_RESETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "PAUSE_ALL_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "PAUSE_L1_L2_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "PAUSE_L2_L1_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "UNPAUSE_ALL_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "UNPAUSE_L1_L2_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "UNPAUSE_L2_L1_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          }
        },
        "CONTRACT_VERSION": "1.0",
        "currentPeriodAmountInWei": "5241088278173320873",
        "currentPeriodEnd": 1756786836,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "INBOX_STATUS_CLAIMED": 2,
        "INBOX_STATUS_RECEIVED": 1,
        "INBOX_STATUS_UNKNOWN": 0,
        "L1_L2_MESSAGE_SETTER_ROLE": "0x4705265620026983c754c5288b65446d794a03174326ec6d7c0b5c7f1fd67415",
        "l1l2MessageSetter": [
          "linea:0xc1C6B09D1eB6fCA0fF3cA11027E5Bc4AeDb47F67"
        ],
        "lastAnchoredL1MessageNumber": 777675,
        "limitInWei": "15000000000000000000000",
        "MINIMUM_FEE_SETTER_ROLE": "0xcc6ce8bb749b4b07d2f635ce95747506096d0737f9abf10cc8f4a14384603ba2",
        "minimumFeeInWei": 100000000000000,
        "nextMessageNumber": 97317,
        "PAUSE_ALL_ROLE": "0x56bdc3c9ec86cb7db110a7699b2ade72f0b8819727d9f7d906b012641505fa77",
        "PAUSE_L1_L2_ROLE": "0x430a7f0cb00b5ebbe63cecc96e82cf959a883e7c13a95110854f1fa6b3fbf598",
        "PAUSE_L2_L1_ROLE": "0xe1fce82838dd7a42cfe783f60dc6233c8aa2c4fc66e77817805e767ec5e349b6",
        "periodInSeconds": 86400,
        "RATE_LIMIT_SETTER_ROLE": "0x1185e52d62bfbbea270e57d3d09733d221b53ab7a18bae82bb3c6c74bab16d82",
        "sender": "linea:0x00000000000000000000000000000000075BCd15",
        "UNPAUSE_ALL_ROLE": "0xd8b4c34c2ec1f3194471108c64ad2beda340c0337ee4ca35592f9ef270f4228b",
        "UNPAUSE_L1_L2_ROLE": "0xe8cb6172fcf5cbaae022b7c910224a4f0c20d53227e630056efff182155a5abc",
        "UNPAUSE_L2_L1_ROLE": "0xb6cc65f42901ed602aec1619cc1ead29d487cd489094a37615153eaeb991d770",
        "USED_RATE_LIMIT_RESETTER_ROLE": "0x0cf0d2deb70d7bdac2fa48c4ac99bc558170be0ce5fcb994caefa4bf7b96edf9"
      },
      "fieldMeta": {
        "sender": {
          "description": "Value used to identify the crosschain caller during a crosschain call. It defaults to a inaccessible address outside of calls."
        }
      },
      "implementationNames": {
        "linea:0x508Ca82Df566dCD1B0DE8296e70a96332cD644ec": "TransparentUpgradeableProxy",
        "linea:0x05d43713B7E333d2D54be65cE3b5F3698aB960Fd": "L2MessageService"
      }
    },
    {
      "address": "linea:0x535dE1e2A961529AA84EF208981f8cF4e7dcbdF5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "linea:0x727833aB68F32a7f2ab96f15aD67336660eCBBD0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "linea:0x7E55b79A01BD9125CD213Bc9F533d21Eb3bD68c5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "linea:0x9376c137AF5124FFc39bD8940A3D88D1cd508992",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "linea:0x97643DD2dFE4dd0b64d43504BAC4ADb2923fdf7a",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "linea:0x3886a948eA7b4053312c3aE31a13776144aA6239",
          "description": "can mint XP soulbound tokens as part of the Voyage campaign.",
          "role": ".voyageXpMinters"
        }
      ]
    },
    {
      "address": "linea:0x99234cd9B532F30538ac797D33c212e3B69Fd087",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L2USDCBridge",
      "address": "linea:0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A",
      "type": "Contract",
      "template": "linea/OldL2USDCBridge",
      "sourceHashes": [
        "0x6d1bbfb1ed7d88848e594dc11366fbed3d53c5a507022c04dbeea72ef549cd6a",
        "0xada2bd06bab20673a23b4757fbbceab4ffc5b705f52244de79d7b7442916fe4d"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "L2 side of the old and now unused USDC bridge.",
      "sinceTimestamp": 1691086556,
      "sinceBlock": 118064,
      "values": {
        "$admin": "linea:0xcB04d0AD0D3ceA5aEc1B480957Ddb20CA47EA30c",
        "$implementation": "linea:0x1998108fA7993EA67a8B1a99d392a3288C5a5521",
        "$pastUpgrades": [
          [
            "2023-08-03T18:15:56.000Z",
            "0xb50a7330132542dc795312528f39e57822236eb7d35cfcaf2616e091c378705e",
            ["linea:0x71E4dB49008C7D7648597E8D24A8E2fD1D220B81"]
          ],
          [
            "2023-09-01T20:28:32.000Z",
            "0xdcd89930e7456d8d80313aa109e5ab95d2455354e39e56d1ae0432f2579339d0",
            ["linea:0x6D967F862d8c5D9E230a976AB2063eD1d4D7A43c"]
          ],
          [
            "2025-03-15T14:03:39.000Z",
            "0xdf59afa26b1f9768cf98f2f59a55a175faa5e911501d2043e6564340d0841140",
            ["linea:0x1998108fA7993EA67a8B1a99d392a3288C5a5521"]
          ]
        ],
        "$upgradeCount": 3,
        "balance": 0,
        "messageService": "linea:0x508Ca82Df566dCD1B0DE8296e70a96332cD644ec",
        "owner": "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
        "paused": true,
        "pendingOwner": "linea:0x0000000000000000000000000000000000000000",
        "remoteUSDCBridge": "eth:0x504A330327A089d8364C4ab3811Ee26976d388ce"
      },
      "implementationNames": {
        "linea:0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A": "TransparentUpgradeableProxy",
        "linea:0x1998108fA7993EA67a8B1a99d392a3288C5a5521": "L2USDCBridge"
      },
      "usedTypes": [{ "typeCaster": "ChainPrefix", "arg": { "prefix": "eth" } }]
    },
    {
      "address": "linea:0xA9714aE1A9FBd20E1bc0BD03A1B7755aBF73A451",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "linea:0xB4dAebe4D01f467701F95f0196fc29033c54dBcb",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Linea Multisig 4",
      "address": "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x618c83d2fbbe19fd6f2d6ee6ee79a60e6206e48bf361eaf4812e1c1fc14b4527"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can prevent tokens that have not been bridged already from being bridged by assigning them a reserved status.",
          "role": ".reserveTokenSetters"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can remove the reserved status from a token, meaning that it is allowed to be bridged again.",
          "role": ".reserveTokenRemovers"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can set custom ERC20 contracts for specific ERC20s.",
          "role": ".customContractSetters"
        },
        {
          "permission": "interact",
          "from": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca",
          "description": "propose transactions.",
          "role": ".proposerAC"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1738349746,
      "sinceBlock": 15270058,
      "values": {
        "$immutable": false,
        "$implementation": "linea:0x29fcB43b46531BcA003ddC8FCB67FFE91900C762",
        "$members": [
          "linea:0x3acC729EdE75355EDab57aB82bEb32011cB1B079",
          "linea:0x727833aB68F32a7f2ab96f15aD67336660eCBBD0",
          "linea:0x7E55b79A01BD9125CD213Bc9F533d21Eb3bD68c5",
          "linea:0xA9714aE1A9FBd20E1bc0BD03A1B7755aBF73A451",
          "linea:0x0645A95411C3431BB2fc58Fa61BC837FFA2e12F2"
        ],
        "$threshold": 3,
        "domainSeparator": "0x56bb3e65360c7315ea96c2e694207d3a09c843d8d7778ff9c8cdc51f5079436a",
        "getChainId": 59144,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 6,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051": "SafeProxy",
        "linea:0x29fcB43b46531BcA003ddC8FCB67FFE91900C762": "SafeL2"
      }
    },
    {
      "address": "linea:0xc1C6B09D1eB6fCA0fF3cA11027E5Bc4AeDb47F67",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "linea:0x508Ca82Df566dCD1B0DE8296e70a96332cD644ec",
          "description": "Can anchor L1 data on the L2. A check is supposed to be added to the proof system on L1 so that it is not possible to settle if the anchor is not correct. The function is permissioned because otherwise anyone can cause a liveness failure by posting an invalid anchor.",
          "role": ".l1l2MessageSetter"
        }
      ]
    },
    {
      "address": "linea:0xC263178AC471C4411abAf5c22cD4D8D67033bc82",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L2Timelock",
      "address": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca",
      "type": "Contract",
      "template": "global/Timelock",
      "sourceHashes": [
        "0xaf04cf94ef4bf759d6466fa262a5e8e54f6d5c9652286fe5d71c9a904de27e5c"
      ],
      "proxyType": "immutable",
      "description": "A standard timelock with access control. The current minimum delay is 0s.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "linea:0x1E1f6F22f97b4a7522D8B62e983953639239774E",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca",
          "description": "manage all access control roles and change the minimum delay.",
          "role": ".timelockAdminAC"
        }
      ],
      "sinceTimestamp": 1689151821,
      "sinceBlock": 21,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca"]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
              "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
            ]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "cancellerAC": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"],
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "executorAC": ["linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"],
        "getMinDelay": 0,
        "minDelayFormatted": "0s",
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "proposerAC": [
          "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
          "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051"
        ],
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5",
        "timelockAdminAC": ["linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca"]
      },
      "implementationNames": {
        "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca": "TimeLock"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "linea:0xcB04d0AD0D3ceA5aEc1B480957Ddb20CA47EA30c",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x31b987ba8db4fc147856ec1375d9df4f40d58c4dc97e16be5b38ee2e3c3cc6f9"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "linea:0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1691086544,
      "sinceBlock": 118063,
      "values": {
        "$immutable": true,
        "owner": "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"
      },
      "implementationNames": {
        "linea:0xcB04d0AD0D3ceA5aEc1B480957Ddb20CA47EA30c": "ProxyAdmin"
      }
    },
    {
      "name": "LineaVoyageXP",
      "address": "linea:0xd83af4fbD77f3AB65C3B1Dc4B38D7e67AEcf599A",
      "type": "Contract",
      "template": "linea/LineaVoyageXP",
      "sourceHashes": [
        "0x27c154755b817aa7f568ee6f2c163f981b6af18c0c3a1708d6a79932467ff12c"
      ],
      "proxyType": "immutable",
      "description": "Voyage XP tokens are non-transferrable, soulbound tokens that are distributed to recognize the community’s contribution toward the growth of the Linea ecosystem.",
      "sinceTimestamp": 1699958814,
      "sinceBlock": 854427,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "MINTER_ROLE": "0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
        "name": "Linea Voyage XP",
        "symbol": "LXP",
        "totalSupply": "2621511258000000000000000000"
      },
      "implementationNames": {
        "linea:0xd83af4fbD77f3AB65C3B1Dc4B38D7e67AEcf599A": "LineaVoyageXP"
      }
    },
    {
      "name": "BridgedToken",
      "address": "linea:0xda8AEFCf0F9B0b81915a2C124f913e58212D49dF",
      "type": "Contract",
      "template": "linea/BridgedToken",
      "sourceHashes": [
        "0x8a6c3f5b047664111c8f981a4cb5d8a79c5652771665343ffdd15ae64fa253bf"
      ],
      "proxyType": "immutable",
      "description": "Standard implementation used for assets that are native to the other layer and are bridged to this layer.",
      "sinceTimestamp": 1691068234,
      "sinceBlock": 116551,
      "values": {
        "_decimals": 0,
        "$immutable": true,
        "bridge": "linea:0x0000000000000000000000000000000000000000",
        "decimals": 0,
        "DOMAIN_SEPARATOR": "0x5ab14c9946d55727a406e8f79786c5d9ddd8034e16d1c3336bf0a60e46e0dfc6",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "",
          "version": "",
          "chainId": 59144,
          "verifyingContract": "linea:0xda8AEFCf0F9B0b81915a2C124f913e58212D49dF",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "name": "",
        "symbol": "",
        "totalSupply": 0
      },
      "implementationNames": {
        "linea:0xda8AEFCf0F9B0b81915a2C124f913e58212D49dF": "BridgedToken"
      }
    },
    {
      "name": "UpgradeableBeacon",
      "address": "linea:0xE798695d2e78f7caeb5BbF3385433959324c02c0",
      "type": "Contract",
      "template": "global/UpgradeableBeacon",
      "sourceHashes": [
        "0x02777a2575f23718a66224f10ac65db704c8c844f66d08dd5f9afd58b869f133"
      ],
      "proxyType": "immutable",
      "description": "A beacon with an upgradeable implementation currently set as linea:0xda8AEFCf0F9B0b81915a2C124f913e58212D49dF. Beacon proxy contracts pointing to this beacon will all use its implementation.",
      "sinceTimestamp": 1691068246,
      "sinceBlock": 116552,
      "values": {
        "$immutable": true,
        "implementation": "linea:0xda8AEFCf0F9B0b81915a2C124f913e58212D49dF",
        "owner": "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD"
      },
      "implementationNames": {
        "linea:0xE798695d2e78f7caeb5BbF3385433959324c02c0": "UpgradeableBeacon"
      }
    },
    {
      "name": "Linea Multisig 3",
      "address": "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0x59fe14e95a8aa7f52213f18bae5c9329cf583a7ba31194698b15eddb97d5e825"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can pause the bridge.",
          "role": ".allPausers"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can pause the bridge.",
          "role": ".allUnpausers"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can pause token bridging actions initiated from the other layer.",
          "role": ".completeTokenBridgingPausers"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can pause token bridging actions initiated from this layer.",
          "role": ".initiateTokenBridgingPausers"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can prevent tokens that have not been bridged already from being bridged by assigning them a reserved status.",
          "role": ".reserveTokenSetters"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can remove the reserved status from a token, meaning that it is allowed to be bridged again.",
          "role": ".reserveTokenRemovers"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can set custom ERC20 contracts for specific ERC20s.",
          "role": ".customContractSetters"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can set the contract that is recognized to be the token bridge contract on the other side.",
          "role": ".remoteTokenBridgeSetters"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can set the contract used as the source of truth from crosschain messages.",
          "role": ".messageServiceSetters"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can unpause token bridging actions initiated from the other layer.",
          "role": ".completeTokenBridgingUnpausers"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "can unpause token bridging actions initiated from this layer.",
          "role": ".initiateTokenBridgingUnpausers"
        },
        {
          "permission": "interact",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "description": "manage all critical access control roles and permissions (full admin of the main bridge escrow).",
          "role": ".defaultAdminAC"
        },
        {
          "permission": "interact",
          "from": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca",
          "description": "cancel queued transactions.",
          "role": ".cancellerAC"
        },
        {
          "permission": "interact",
          "from": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca",
          "description": "execute transactions that are ready.",
          "role": ".executorAC"
        },
        {
          "permission": "interact",
          "from": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca",
          "description": "manage all access control roles and change the minimum delay.",
          "role": ".timelockAdminAC",
          "via": [
            { "address": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca" }
          ]
        },
        {
          "permission": "interact",
          "from": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca",
          "description": "propose transactions.",
          "role": ".proposerAC"
        },
        {
          "permission": "interact",
          "from": "linea:0xE798695d2e78f7caeb5BbF3385433959324c02c0",
          "description": "change the beacon implementation.",
          "role": ".owner"
        },
        {
          "permission": "upgrade",
          "from": "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
          "role": "admin",
          "via": [
            { "address": "linea:0x1E1f6F22f97b4a7522D8B62e983953639239774E" },
            { "address": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "linea:0x508Ca82Df566dCD1B0DE8296e70a96332cD644ec",
          "role": "admin",
          "via": [
            { "address": "linea:0x1E1f6F22f97b4a7522D8B62e983953639239774E" },
            { "address": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "linea:0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A",
          "role": "admin",
          "via": [
            { "address": "linea:0xcB04d0AD0D3ceA5aEc1B480957Ddb20CA47EA30c" }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca",
          "role": ".executorAC"
        },
        {
          "permission": "act",
          "from": "linea:0xcB04d0AD0D3ceA5aEc1B480957Ddb20CA47EA30c",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1689150124,
      "sinceBlock": 20,
      "values": {
        "$immutable": false,
        "$implementation": "linea:0x3E5c63644E683549055b9Be8653de26E0B4CD36E",
        "$members": [
          "linea:0x239d9B860399366F8d25F6e2962Fb2B9D070aEFE",
          "linea:0x497515578b0BE54d2f0f32cF3F08B85Bf8cEB6aB",
          "linea:0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4",
          "linea:0xB4dAebe4D01f467701F95f0196fc29033c54dBcb",
          "linea:0x9376c137AF5124FFc39bD8940A3D88D1cd508992",
          "linea:0x535dE1e2A961529AA84EF208981f8cF4e7dcbdF5",
          "linea:0xC263178AC471C4411abAf5c22cD4D8D67033bc82",
          "linea:0x99234cd9B532F30538ac797D33c212e3B69Fd087"
        ],
        "$threshold": 4,
        "domainSeparator": "0xe0f063329e41ab79d7613d3a597cf99f6ba127b9f3675d255beac070b585ca3f",
        "getChainId": 59144,
        "GnosisSafe_modules": [
          "linea:0x3886a948eA7b4053312c3aE31a13776144aA6239"
        ],
        "multisigThreshold": "4 of 8 (50%)",
        "nonce": 49,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD": "GnosisSafeProxy",
        "linea:0x3E5c63644E683549055b9Be8653de26E0B4CD36E": "GnosisSafeL2"
      }
    }
  ],
  "abis": {
    "eth:0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "eth:0x07ddce60658A61dc1732Cacf2220FcE4A01C49B0": [
      "constructor()",
      "error ArrayLengthsDoNotMatch()",
      "error BlobSubmissionDataEmpty(uint256 emptyBlobIndex)",
      "error BlobSubmissionDataIsMissing()",
      "error BytesLengthNotMultipleOf32()",
      "error BytesLengthNotMultipleOfTwo(uint256 bytesLength)",
      "error DataAlreadySubmitted(bytes32 currentDataHash)",
      "error EmptyBlobDataAtIndex(uint256 index)",
      "error EmptySubmissionData()",
      "error FeePaymentFailed(address recipient)",
      "error FeeTooLow()",
      "error FinalBlobNotSubmitted(bytes32 shnarf)",
      "error FinalBlockNumberLessThanOrEqualToLastFinalizedBlock(uint256 finalBlockNumber, uint256 lastFinalizedBlock)",
      "error FinalBlockStateEqualsZeroHash()",
      "error FinalShnarfWrong(bytes32 expected, bytes32 value)",
      "error FinalizationInTheFuture(uint256 l2BlockTimestamp, uint256 currentBlockTimestamp)",
      "error FinalizationStateIncorrect(bytes32 expected, bytes32 value)",
      "error FirstByteIsNotZero()",
      "error InvalidMerkleProof()",
      "error InvalidProof()",
      "error InvalidProofOrProofVerificationRanOutOfGas(string errorReason)",
      "error InvalidProofType()",
      "error IsNotPaused(uint8 pauseType)",
      "error IsPaused(uint8 pauseType)",
      "error L1RollingHashDoesNotExistOnL1(uint256 messageNumber, bytes32 rollingHash)",
      "error L2MerkleRootAlreadyAnchored(bytes32 merkleRoot)",
      "error L2MerkleRootDoesNotExist()",
      "error LastFinalizationTimeNotLapsed()",
      "error LeafIndexOutOfBounds(uint32 leafIndex, uint32 maxAllowedIndex)",
      "error LimitIsZero()",
      "error MessageAlreadyClaimed(uint256 messageIndex)",
      "error MessageDoesNotExistOrHasAlreadyBeenClaimed(bytes32 messageHash)",
      "error MessageSendingFailed(address destination)",
      "error MissingMessageNumberForRollingHash(bytes32 rollingHash)",
      "error MissingRollingHashForMessageNumber(uint256 messageNumber)",
      "error OnlyNonFallbackOperator()",
      "error ParentBlobNotSubmitted(bytes32 shnarf)",
      "error PeriodIsZero()",
      "error PointEvaluationFailed()",
      "error PointEvaluationResponseInvalid(uint256 fieldElements, uint256 blsCurveModulus)",
      "error PrecompileReturnDataLengthWrong(uint256 expected, uint256 actual)",
      "error ProofIsEmpty()",
      "error ProofLengthDifferentThanMerkleDepth(uint256 actual, uint256 expected)",
      "error RateLimitExceeded()",
      "error ReentrantCall()",
      "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
      "error StartingRootHashDoesNotMatch()",
      "error ValueSentTooLow()",
      "error ZeroAddressNotAllowed()",
      "error ZeroHashNotAllowed()",
      "event AmountUsedInPeriodReset(address indexed resettingAddress)",
      "event DataFinalizedV3(uint256 indexed startBlockNumber, uint256 indexed endBlockNumber, bytes32 indexed shnarf, bytes32 parentStateRootHash, bytes32 finalStateRootHash)",
      "event DataSubmittedV3(bytes32 parentShnarf, bytes32 indexed shnarf, bytes32 finalStateRootHash)",
      "event FallbackOperatorAddressSet(address indexed caller, address indexed fallbackOperator)",
      "event FallbackOperatorRoleGranted(address indexed caller, address indexed fallbackOperator)",
      "event Initialized(uint8 version)",
      "event L2MerkleRootAdded(bytes32 indexed l2MerkleRoot, uint256 indexed treeDepth)",
      "event L2MessagingBlockAnchored(uint256 indexed l2Block)",
      "event LimitAmountChanged(address indexed amountChangeBy, uint256 amount, bool amountUsedLoweredToLimit, bool usedAmountResetToZero)",
      "event LineaRollupVersionChanged(bytes8 indexed previousVersion, bytes8 indexed newVersion)",
      "event MessageClaimed(bytes32 indexed _messageHash)",
      "event MessageSent(address indexed _from, address indexed _to, uint256 _fee, uint256 _value, uint256 _nonce, bytes _calldata, bytes32 indexed _messageHash)",
      "event PauseTypeRoleSet(uint8 indexed pauseType, bytes32 indexed role)",
      "event Paused(address messageSender, uint8 indexed pauseType)",
      "event RateLimitInitialized(uint256 periodInSeconds, uint256 limitInWei, uint256 currentPeriodEnd)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RollingHashUpdated(uint256 indexed messageNumber, bytes32 indexed rollingHash, bytes32 indexed messageHash)",
      "event UnPauseTypeRoleSet(uint8 indexed unPauseType, bytes32 indexed role)",
      "event UnPaused(address messageSender, uint8 indexed pauseType)",
      "event VerifierAddressChanged(address indexed verifierAddress, uint256 indexed proofType, address indexed verifierSetBy, address oldVerifierAddress)",
      "function CONTRACT_VERSION() view returns (string)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function GENESIS_SHNARF() view returns (bytes32)",
      "function INBOX_STATUS_RECEIVED() view returns (uint8)",
      "function INBOX_STATUS_UNKNOWN() view returns (uint8)",
      "function OPERATOR_ROLE() view returns (bytes32)",
      "function OUTBOX_STATUS_RECEIVED() view returns (uint8)",
      "function OUTBOX_STATUS_SENT() view returns (uint8)",
      "function OUTBOX_STATUS_UNKNOWN() view returns (uint8)",
      "function PAUSE_ALL_ROLE() view returns (bytes32)",
      "function PAUSE_BLOB_SUBMISSION_ROLE() view returns (bytes32)",
      "function PAUSE_FINALIZATION_ROLE() view returns (bytes32)",
      "function PAUSE_L1_L2_ROLE() view returns (bytes32)",
      "function PAUSE_L2_L1_ROLE() view returns (bytes32)",
      "function RATE_LIMIT_SETTER_ROLE() view returns (bytes32)",
      "function UNPAUSE_ALL_ROLE() view returns (bytes32)",
      "function UNPAUSE_BLOB_SUBMISSION_ROLE() view returns (bytes32)",
      "function UNPAUSE_FINALIZATION_ROLE() view returns (bytes32)",
      "function UNPAUSE_L1_L2_ROLE() view returns (bytes32)",
      "function UNPAUSE_L2_L1_ROLE() view returns (bytes32)",
      "function USED_RATE_LIMIT_RESETTER_ROLE() view returns (bytes32)",
      "function VERIFIER_SETTER_ROLE() view returns (bytes32)",
      "function VERIFIER_UNSETTER_ROLE() view returns (bytes32)",
      "function blobShnarfExists(bytes32 shnarf) view returns (uint256 exists)",
      "function claimMessage(address _from, address _to, uint256 _fee, uint256 _value, address _feeRecipient, bytes _calldata, uint256 _nonce)",
      "function claimMessageWithProof(tuple(bytes32[] proof, uint256 messageNumber, uint32 leafIndex, address from, address to, uint256 fee, uint256 value, address feeRecipient, bytes32 merkleRoot, bytes data) _params)",
      "function currentFinalizedShnarf() view returns (bytes32)",
      "function currentFinalizedState() view returns (bytes32)",
      "function currentL2BlockNumber() view returns (uint256)",
      "function currentL2StoredL1MessageNumber() view returns (uint256)",
      "function currentL2StoredL1RollingHash() view returns (bytes32)",
      "function currentPeriodAmountInWei() view returns (uint256)",
      "function currentPeriodEnd() view returns (uint256)",
      "function currentTimestamp() view returns (uint256)",
      "function dataEndingBlock(bytes32 dataHash) view returns (uint256 endingBlock)",
      "function dataFinalStateRootHashes(bytes32 dataHash) view returns (bytes32 finalStateRootHash)",
      "function dataParents(bytes32 dataHash) view returns (bytes32 parentHash)",
      "function dataShnarfHashes(bytes32 dataHash) view returns (bytes32 shnarfHash)",
      "function dataStartingBlock(bytes32 dataHash) view returns (uint256 startingBlock)",
      "function fallbackOperator() view returns (address)",
      "function finalizeBlocks(bytes _aggregatedProof, uint256 _proofType, tuple(bytes32 parentStateRootHash, uint256 endBlockNumber, tuple(bytes32 parentShnarf, bytes32 snarkHash, bytes32 finalStateRootHash, bytes32 dataEvaluationPoint, bytes32 dataEvaluationClaim) shnarfData, uint256 lastFinalizedTimestamp, uint256 finalTimestamp, bytes32 lastFinalizedL1RollingHash, bytes32 l1RollingHash, uint256 lastFinalizedL1RollingHashMessageNumber, uint256 l1RollingHashMessageNumber, uint256 l2MerkleTreesDepth, bytes32[] l2MerkleRoots, bytes l2MessagingBlocksOffsets) _finalizationData)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function inboxL2L1MessageStatus(bytes32 messageHash) view returns (uint256 messageStatus)",
      "function initialize(tuple(bytes32 initialStateRootHash, uint256 initialL2BlockNumber, uint256 genesisTimestamp, address defaultVerifier, uint256 rateLimitPeriodInSeconds, uint256 rateLimitAmountInWei, tuple(address addressWithRole, bytes32 role)[] roleAddresses, tuple(uint8 pauseType, bytes32 role)[] pauseTypeRoles, tuple(uint8 pauseType, bytes32 role)[] unpauseTypeRoles, address fallbackOperator, address defaultAdmin) _initializationData)",
      "function isMessageClaimed(uint256 _messageNumber) view returns (bool isClaimed)",
      "function isPaused(uint8 _pauseType) view returns (bool pauseTypeIsPaused)",
      "function l2MerkleRootsDepths(bytes32 merkleRoot) view returns (uint256 treeDepth)",
      "function limitInWei() view returns (uint256)",
      "function nextMessageNumber() view returns (uint256)",
      "function outboxL1L2MessageStatus(bytes32 messageHash) view returns (uint256 messageStatus)",
      "function pauseByType(uint8 _pauseType)",
      "function pauseTypeStatuses(bytes32 pauseType) view returns (bool pauseStatus)",
      "function periodInSeconds() view returns (uint256)",
      "function reinitializeLineaRollupV6(tuple(address addressWithRole, bytes32 role)[] _roleAddresses, tuple(uint8 pauseType, bytes32 role)[] _pauseTypeRoles, tuple(uint8 pauseType, bytes32 role)[] _unpauseTypeRoles, address _fallbackOperator)",
      "function renounceRole(bytes32 _role, address _account)",
      "function resetAmountUsedInPeriod()",
      "function resetRateLimitAmount(uint256 _amount)",
      "function revokeRole(bytes32 role, address account)",
      "function rollingHashes(uint256 messageNumber) view returns (bytes32 rollingHash)",
      "function sendMessage(address _to, uint256 _fee, bytes _calldata) payable",
      "function sender() view returns (address originalSender)",
      "function setFallbackOperator(uint256 _messageNumber, bytes32 _rollingHash, uint256 _lastFinalizedTimestamp)",
      "function setVerifierAddress(address _newVerifierAddress, uint256 _proofType)",
      "function stateRootHashes(uint256 blockNumber) view returns (bytes32 stateRootHash)",
      "function submitBlobs(tuple(uint256 dataEvaluationClaim, bytes kzgCommitment, bytes kzgProof, bytes32 finalStateRootHash, bytes32 snarkHash)[] _blobSubmissions, bytes32 _parentShnarf, bytes32 _finalBlobShnarf)",
      "function submitDataAsCalldata(tuple(bytes32 finalStateRootHash, bytes32 snarkHash, bytes compressedData) _submission, bytes32 _parentShnarf, bytes32 _expectedShnarf)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function systemMigrationBlock() view returns (uint256)",
      "function unPauseByType(uint8 _pauseType)",
      "function unsetVerifierAddress(uint256 _proofType)",
      "function verifiers(uint256 proofType) view returns (address verifierAddress)"
    ],
    "eth:0x2B6A2F8880220a66DfB9059FCB76F7dB54104a34": [
      "constructor()",
      "error AlreadyBridgedToken(address token)",
      "error AlreadyBrigedToNativeTokenSet(address token)",
      "error ArrayLengthsDoNotMatch()",
      "error CallerIsNotMessageService()",
      "error DecimalsAreUnknown(address token)",
      "error InvalidPermitData(bytes4 permitData, bytes4 permitSelector)",
      "error IsNotPaused(uint8 pauseType)",
      "error IsPaused(uint8 pauseType)",
      "error NativeToBridgedTokenAlreadySet(address token)",
      "error NotReserved(address token)",
      "error PermitNotAllowingBridge(address spender)",
      "error PermitNotFromSender(address owner)",
      "error RemoteTokenBridgeAlreadySet(address remoteTokenBridge)",
      "error ReservedToken(address token)",
      "error SenderNotAuthorized()",
      "error StatusAddressNotAllowed(address token)",
      "error TokenListEmpty()",
      "error TokenNotDeployed(address token)",
      "error ZeroAddressNotAllowed()",
      "error ZeroAmountNotAllowed(uint256 amount)",
      "error ZeroHashNotAllowed()",
      "event BridgingFinalized(address indexed nativeToken, address indexed bridgedToken, uint256 indexed amount, address recipient)",
      "event BridgingFinalizedV2(address indexed nativeToken, address indexed bridgedToken, uint256 amount, address indexed recipient)",
      "event BridgingInitiated(address indexed sender, address recipient, address indexed token, uint256 indexed amount)",
      "event BridgingInitiatedV2(address indexed sender, address indexed recipient, address indexed token, uint256 amount)",
      "event CustomContractSet(address indexed nativeToken, address indexed customContract, address indexed setBy)",
      "event DeploymentConfirmed(address[] tokens, address indexed confirmedBy)",
      "event Initialized(uint8 version)",
      "event MessageServiceUpdated(address indexed newMessageService, address indexed oldMessageService, address indexed setBy)",
      "event NewToken(address indexed token)",
      "event NewTokenDeployed(address indexed bridgedToken, address indexed nativeToken)",
      "event PauseTypeRoleSet(uint8 indexed pauseType, bytes32 indexed role)",
      "event Paused(address messageSender, uint8 indexed pauseType)",
      "event RemoteSenderSet(address indexed remoteSender, address indexed setter)",
      "event RemoteTokenBridgeSet(address indexed remoteTokenBridge, address indexed setBy)",
      "event ReservationRemoved(address indexed token)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event TokenDeployed(address indexed token)",
      "event TokenReserved(address indexed token)",
      "event UnPauseTypeRoleSet(uint8 indexed unPauseType, bytes32 indexed role)",
      "event UnPaused(address messageSender, uint8 indexed pauseType)",
      "function CONTRACT_VERSION() view returns (string)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function PAUSE_ALL_ROLE() view returns (bytes32)",
      "function PAUSE_COMPLETE_TOKEN_BRIDGING_ROLE() view returns (bytes32)",
      "function PAUSE_INITIATE_TOKEN_BRIDGING_ROLE() view returns (bytes32)",
      "function REMOVE_RESERVED_TOKEN_ROLE() view returns (bytes32)",
      "function SET_CUSTOM_CONTRACT_ROLE() view returns (bytes32)",
      "function SET_MESSAGE_SERVICE_ROLE() view returns (bytes32)",
      "function SET_REMOTE_TOKENBRIDGE_ROLE() view returns (bytes32)",
      "function SET_RESERVED_TOKEN_ROLE() view returns (bytes32)",
      "function UNPAUSE_ALL_ROLE() view returns (bytes32)",
      "function UNPAUSE_COMPLETE_TOKEN_BRIDGING_ROLE() view returns (bytes32)",
      "function UNPAUSE_INITIATE_TOKEN_BRIDGING_ROLE() view returns (bytes32)",
      "function bridgeToken(address _token, uint256 _amount, address _recipient) payable",
      "function bridgeTokenWithPermit(address _token, uint256 _amount, address _recipient, bytes _permitData) payable",
      "function bridgedToNativeToken(address bridged) view returns (address native)",
      "function completeBridging(address _nativeToken, uint256 _amount, address _recipient, uint256 _chainId, bytes _tokenMetadata)",
      "function confirmDeployment(address[] _tokens) payable",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(tuple(address defaultAdmin, address messageService, address tokenBeacon, uint256 sourceChainId, uint256 targetChainId, address[] reservedTokens, tuple(address addressWithRole, bytes32 role)[] roleAddresses, tuple(uint8 pauseType, bytes32 role)[] pauseTypeRoles, tuple(uint8 pauseType, bytes32 role)[] unpauseTypeRoles) _initializationData)",
      "function isPaused(uint8 _pauseType) view returns (bool pauseTypeIsPaused)",
      "function messageService() view returns (address)",
      "function nativeToBridgedToken(uint256 chainId, address native) view returns (address bridged)",
      "function pauseByType(uint8 _pauseType)",
      "function pauseTypeStatuses(bytes32 pauseType) view returns (bool pauseStatus)",
      "function reinitializePauseTypesAndPermissions(address _defaultAdmin, tuple(address addressWithRole, bytes32 role)[] _roleAddresses, tuple(uint8 pauseType, bytes32 role)[] _pauseTypeRoles, tuple(uint8 pauseType, bytes32 role)[] _unpauseTypeRoles)",
      "function remoteSender() view returns (address)",
      "function removeReserved(address _token)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setCustomContract(address _nativeToken, address _targetContract)",
      "function setDeployed(address[] _nativeTokens)",
      "function setMessageService(address _messageService)",
      "function setRemoteTokenBridge(address _remoteTokenBridge)",
      "function setReserved(address _token)",
      "function sourceChainId() view returns (uint256)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function targetChainId() view returns (uint256)",
      "function tokenBeacon() view returns (address)",
      "function unPauseByType(uint8 _pauseType)"
    ],
    "eth:0x3697bD0bC6C050135b8321F989a5316eACbF367D": [
      "constructor(address _target)",
      "function target() view returns (address)"
    ],
    "eth:0x36f274C1C197F277EA3C57859729398FCc8a3763": [
      "constructor()",
      "error OnlyBridge(address bridgeAddress)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function _decimals() view returns (uint8)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function bridge() view returns (address)",
      "function burn(address _account, uint256 _amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string _tokenName, string _tokenSymbol, uint8 _tokenDecimals)",
      "function mint(address _recipient, uint256 _amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "eth:0x41675C099F32341bf84BFc5382aF534df5C7461a": [
      "constructor()",
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "eth:0x41fAD3Df1B07B647D120D055259E474fE8046eb5": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "eth:0x504A330327A089d8364C4ab3811Ee26976d388ce": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "eth:0x66CFD1562d6Aa4629e9e4142662c1A403528Df00": [
      "error AmountTooBig(uint256 amount, uint256 limit)",
      "error NoBurnCapabilities(address addr)",
      "error NotFromRemoteUSDCBridge(address sender, address remoteUSDCBridge)",
      "error NotMessageService(address addr, address messageService)",
      "error NotUpgrader(address addr, address upgrader)",
      "error RemoteUSDCBridgeAlreadySet(address remoteUSDCBridge)",
      "error RemoteUSDCBridgeNotSet()",
      "error SameMessageServiceAddr(address messageService)",
      "error SenderBalanceTooLow(uint256 amount, uint256 balance)",
      "error ZeroAddressNotAllowed(address addr)",
      "error ZeroAmountNotAllowed(uint256 amount)",
      "event AllLockedUSDCBurnt(address indexed sender)",
      "event Deposited(address indexed depositor, uint256 amount, address indexed to)",
      "event Initialized(uint8 version)",
      "event MessageServiceUpdated(address indexed oldAddress, address indexed newAddress)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event ReceivedFromOtherLayer(address indexed recipient, uint256 indexed amount)",
      "event RemoteUSDCBridgeSet(address indexed newRemoteUSDCBridge)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function balance() view returns (uint256)",
      "function burnAllLockedUSDC()",
      "function changeMessageService(address newMessageService)",
      "function deposit(uint256 amount) payable",
      "function depositTo(uint256 amount, address to) payable",
      "function initialize(address _messageService, address _usdc)",
      "function messageService() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function receiveFromOtherLayer(address recipient, uint256 amount)",
      "function remoteUSDCBridge() view returns (address)",
      "function renounceOwnership()",
      "function rescueTransfer(address to, uint256 amount)",
      "function setRemoteUSDCBridge(address _remoteUSDCBridge)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function usdc() view returns (address)"
    ],
    "eth:0x784CCeE002E259Fc38C4b36C2D8bd8a457e55436": [
      "constructor(address _owner, address _avatar, address _target, uint256 _cooldown, uint256 _expiration)",
      "event AvatarSet(address indexed previousAvatar, address indexed newAvatar)",
      "event ChangedGuard(address guard)",
      "event DelaySetup(address indexed initiator, address indexed owner, address indexed avatar, address target)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event TargetSet(address indexed previousTarget, address indexed newTarget)",
      "event TransactionAdded(uint256 indexed queueNonce, bytes32 indexed txHash, address to, uint256 value, bytes data, uint8 operation)",
      "function avatar() view returns (address)",
      "function disableModule(address prevModule, address module)",
      "function enableModule(address module)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function executeNextTx(address to, uint256 value, bytes data, uint8 operation)",
      "function getGuard() view returns (address _guard)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation) pure returns (bytes32)",
      "function getTxCreatedAt(uint256 _nonce) view returns (uint256)",
      "function getTxHash(uint256 _nonce) view returns (bytes32)",
      "function guard() view returns (address)",
      "function isModuleEnabled(address _module) view returns (bool)",
      "function owner() view returns (address)",
      "function queueNonce() view returns (uint256)",
      "function renounceOwnership()",
      "function setAvatar(address _avatar)",
      "function setGuard(address _guard)",
      "function setTarget(address _target)",
      "function setTxCooldown(uint256 cooldown)",
      "function setTxExpiration(uint256 expiration)",
      "function setTxNonce(uint256 _nonce)",
      "function setUp(bytes initParams)",
      "function skipExpired()",
      "function target() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function txCooldown() view returns (uint256)",
      "function txCreatedAt(uint256) view returns (uint256)",
      "function txExpiration() view returns (uint256)",
      "function txHash(uint256) view returns (bytes32)",
      "function txNonce() view returns (uint256)"
    ],
    "eth:0x892bb7EeD71efB060ab90140e7825d8127991DD3": [
      "constructor(address _singleton)"
    ],
    "eth:0x9473C37A9fE76fbbc3Fd7d3b59E1b550415bd873": [
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)"
    ],
    "eth:0x971f46a2852d11D59dbF0909e837cfd06f357DeB": [
      "constructor(address implementation_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)"
    ],
    "eth:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051": [
      "constructor(address _singleton)"
    ],
    "eth:0xd19d4B5d358258f05D7B411E21A1460D11B0876F": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "eth:0xd6B95c960779c72B8C6752119849318E5d550574": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "eth:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "eth:0xED39C0C41A7651006953AB58Ecb3039363620995": [
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)"
    ],
    "eth:0xF24f1DC519d88246809B660eb56D94048575d083": [
      "constructor(address _owner, address _avatar, address _target)",
      "error ArraysDifferentLength()",
      "error ModuleTransactionFailed()",
      "error NoMembership()",
      "error SetUpModulesAlreadyCalled()",
      "event AssignRoles(address module, uint16[] roles, bool[] memberOf)",
      "event AvatarSet(address indexed previousAvatar, address indexed newAvatar)",
      "event ChangedGuard(address guard)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RolesModSetup(address indexed initiator, address indexed owner, address indexed avatar, address target)",
      "event SetDefaultRole(address module, uint16 defaultRole)",
      "event SetMultisendAddress(address multisendAddress)",
      "event TargetSet(address indexed previousTarget, address indexed newTarget)",
      "function allowTarget(uint16 role, address targetAddress, uint8 options)",
      "function assignRoles(address module, uint16[] _roles, bool[] memberOf)",
      "function avatar() view returns (address)",
      "function defaultRoles(address) view returns (uint16)",
      "function disableModule(address prevModule, address module)",
      "function enableModule(address module)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool, bytes)",
      "function execTransactionWithRole(address to, uint256 value, bytes data, uint8 operation, uint16 role, bool shouldRevert) returns (bool success)",
      "function execTransactionWithRoleReturnData(address to, uint256 value, bytes data, uint8 operation, uint16 role, bool shouldRevert) returns (bool success, bytes returnData)",
      "function getGuard() view returns (address _guard)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function guard() view returns (address)",
      "function isModuleEnabled(address _module) view returns (bool)",
      "function multisend() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function revokeTarget(uint16 role, address targetAddress)",
      "function scopeAllowFunction(uint16 role, address targetAddress, bytes4 functionSig, uint8 options)",
      "function scopeFunction(uint16 role, address targetAddress, bytes4 functionSig, bool[] isParamScoped, uint8[] paramType, uint8[] paramComp, bytes[] compValue, uint8 options)",
      "function scopeFunctionExecutionOptions(uint16 role, address targetAddress, bytes4 functionSig, uint8 options)",
      "function scopeParameter(uint16 role, address targetAddress, bytes4 functionSig, uint256 paramIndex, uint8 paramType, uint8 paramComp, bytes compValue)",
      "function scopeParameterAsOneOf(uint16 role, address targetAddress, bytes4 functionSig, uint256 paramIndex, uint8 paramType, bytes[] compValues)",
      "function scopeRevokeFunction(uint16 role, address targetAddress, bytes4 functionSig)",
      "function scopeTarget(uint16 role, address targetAddress)",
      "function setAvatar(address _avatar)",
      "function setDefaultRole(address module, uint16 role)",
      "function setGuard(address _guard)",
      "function setMultisend(address _multisend)",
      "function setTarget(address _target)",
      "function setUp(bytes initParams)",
      "function target() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unscopeParameter(uint16 role, address targetAddress, bytes4 functionSig, uint8 paramIndex)"
    ],
    "eth:0xF5058616517C068C7b8c7EbC69FF636Ade9066d6": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "linea:0x05d43713B7E333d2D54be65cE3b5F3698aB960Fd": [
      "constructor()",
      "error ArrayLengthsDoNotMatch()",
      "error FeePaymentFailed(address recipient)",
      "error FeeTooLow()",
      "error FinalRollingHashIsZero()",
      "error IsNotPaused(uint8 pauseType)",
      "error IsPaused(uint8 pauseType)",
      "error L1MessageNumberSynchronizationWrong(uint256 expected, uint256 found)",
      "error L1RollingHashSynchronizationWrong(bytes32 expected, bytes32 found)",
      "error LimitIsZero()",
      "error MessageDoesNotExistOrHasAlreadyBeenClaimed(bytes32 messageHash)",
      "error MessageHashesListLengthHigherThanOneHundred(uint256 length)",
      "error MessageHashesListLengthIsZero()",
      "error MessageSendingFailed(address destination)",
      "error PeriodIsZero()",
      "error RateLimitExceeded()",
      "error ValueSentTooLow()",
      "error ZeroAddressNotAllowed()",
      "error ZeroHashNotAllowed()",
      "event AmountUsedInPeriodReset(address indexed resettingAddress)",
      "event Initialized(uint8 version)",
      "event L1L2MessageHashesAddedToInbox(bytes32[] messageHashes)",
      "event LimitAmountChanged(address indexed amountChangeBy, uint256 amount, bool amountUsedLoweredToLimit, bool usedAmountResetToZero)",
      "event MessageClaimed(bytes32 indexed _messageHash)",
      "event MessageSent(address indexed _from, address indexed _to, uint256 _fee, uint256 _value, uint256 _nonce, bytes _calldata, bytes32 indexed _messageHash)",
      "event MinimumFeeChanged(uint256 previousMinimumFee, uint256 newMinimumFee, address indexed calledBy)",
      "event PauseTypeRoleSet(uint8 indexed pauseType, bytes32 indexed role)",
      "event Paused(address messageSender, uint8 indexed pauseType)",
      "event RateLimitInitialized(uint256 periodInSeconds, uint256 limitInWei, uint256 currentPeriodEnd)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RollingHashUpdated(uint256 indexed messageNumber, bytes32 indexed rollingHash)",
      "event ServiceVersionMigrated(uint256 indexed version)",
      "event UnPauseTypeRoleSet(uint8 indexed unPauseType, bytes32 indexed role)",
      "event UnPaused(address messageSender, uint8 indexed pauseType)",
      "function CONTRACT_VERSION() view returns (string)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function INBOX_STATUS_CLAIMED() view returns (uint8)",
      "function INBOX_STATUS_RECEIVED() view returns (uint8)",
      "function INBOX_STATUS_UNKNOWN() view returns (uint8)",
      "function L1_L2_MESSAGE_SETTER_ROLE() view returns (bytes32)",
      "function MINIMUM_FEE_SETTER_ROLE() view returns (bytes32)",
      "function PAUSE_ALL_ROLE() view returns (bytes32)",
      "function PAUSE_L1_L2_ROLE() view returns (bytes32)",
      "function PAUSE_L2_L1_ROLE() view returns (bytes32)",
      "function RATE_LIMIT_SETTER_ROLE() view returns (bytes32)",
      "function UNPAUSE_ALL_ROLE() view returns (bytes32)",
      "function UNPAUSE_L1_L2_ROLE() view returns (bytes32)",
      "function UNPAUSE_L2_L1_ROLE() view returns (bytes32)",
      "function USED_RATE_LIMIT_RESETTER_ROLE() view returns (bytes32)",
      "function anchorL1L2MessageHashes(bytes32[] _messageHashes, uint256 _startingMessageNumber, uint256 _finalMessageNumber, bytes32 _finalRollingHash)",
      "function claimMessage(address _from, address _to, uint256 _fee, uint256 _value, address _feeRecipient, bytes _calldata, uint256 _nonce)",
      "function currentPeriodAmountInWei() view returns (uint256)",
      "function currentPeriodEnd() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function inboxL1L2MessageStatus(bytes32 messageHash) view returns (uint256 messageStatus)",
      "function initialize(uint256 _rateLimitPeriod, uint256 _rateLimitAmount, address _defaultAdmin, tuple(address addressWithRole, bytes32 role)[] _roleAddresses, tuple(uint8 pauseType, bytes32 role)[] _pauseTypeRoles, tuple(uint8 pauseType, bytes32 role)[] _unpauseTypeRoles)",
      "function isPaused(uint8 _pauseType) view returns (bool pauseTypeIsPaused)",
      "function l1RollingHashes(uint256 messageNumber) view returns (bytes32 rollingHash)",
      "function lastAnchoredL1MessageNumber() view returns (uint256)",
      "function limitInWei() view returns (uint256)",
      "function minimumFeeInWei() view returns (uint256)",
      "function nextMessageNumber() view returns (uint256)",
      "function pauseByType(uint8 _pauseType)",
      "function pauseTypeStatuses(bytes32 pauseType) view returns (bool pauseStatus)",
      "function periodInSeconds() view returns (uint256)",
      "function reinitializePauseTypesAndPermissions(tuple(address addressWithRole, bytes32 role)[] _roleAddresses, tuple(uint8 pauseType, bytes32 role)[] _pauseTypeRoles, tuple(uint8 pauseType, bytes32 role)[] _unpauseTypeRoles)",
      "function renounceRole(bytes32 role, address account)",
      "function resetAmountUsedInPeriod()",
      "function resetRateLimitAmount(uint256 _amount)",
      "function revokeRole(bytes32 role, address account)",
      "function sendMessage(address _to, uint256 _fee, bytes _calldata) payable",
      "function sender() view returns (address originalSender)",
      "function setMinimumFee(uint256 _feeInWei)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unPauseByType(uint8 _pauseType)"
    ],
    "linea:0x1998108fA7993EA67a8B1a99d392a3288C5a5521": [
      "error AmountTooBig(uint256 amount, uint256 limit)",
      "error NoBurnCapabilities(address addr)",
      "error NotFromRemoteUSDCBridge(address sender, address remoteUSDCBridge)",
      "error NotMessageService(address addr, address messageService)",
      "error NotUpgrader(address addr, address upgrader)",
      "error RemoteUSDCBridgeAlreadySet(address remoteUSDCBridge)",
      "error RemoteUSDCBridgeNotSet()",
      "error SameMessageServiceAddr(address messageService)",
      "error SenderBalanceTooLow(uint256 amount, uint256 balance)",
      "error ZeroAddressNotAllowed(address addr)",
      "error ZeroAmountNotAllowed(uint256 amount)",
      "event Deposited(address indexed depositor, uint256 amount, address indexed to)",
      "event Initialized(uint8 version)",
      "event MessageServiceUpdated(address indexed oldAddress, address indexed newAddress)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event ReceivedFromOtherLayer(address indexed recipient, uint256 indexed amount)",
      "event RemoteUSDCBridgeSet(address indexed newRemoteUSDCBridge)",
      "event USDCRolesTransferred(address indexed owner)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function balance() view returns (uint256)",
      "function changeMessageService(address newMessageService)",
      "function deposit(uint256 amount) payable",
      "function depositTo(uint256 amount, address to) payable",
      "function initialize(address _messageService, address _usdc)",
      "function messageService() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function receiveFromOtherLayer(address recipient, uint256 amount)",
      "function remoteUSDCBridge() view returns (address)",
      "function renounceOwnership()",
      "function rescueTransfer(address to, uint256 amount)",
      "function setRemoteUSDCBridge(address _remoteUSDCBridge)",
      "function transferOwnership(address newOwner)",
      "function transferUSDCRoles(address owner)",
      "function unpause()",
      "function usdc() view returns (address)"
    ],
    "linea:0x1E1f6F22f97b4a7522D8B62e983953639239774E": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "linea:0x29fcB43b46531BcA003ddC8FCB67FFE91900C762": [
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeModuleTransaction(address module, address to, uint256 value, bytes data, uint8 operation)",
      "event SafeMultiSigTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures, bytes additionalInfo)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "linea:0x353012dc4a9A6cF55c941bADC267f82004A8ceB9": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "linea:0x3886a948eA7b4053312c3aE31a13776144aA6239": [
      "constructor(address _owner, address _avatar, address _target)",
      "error ArraysDifferentLength()",
      "error ModuleTransactionFailed()",
      "error NoMembership()",
      "error SetUpModulesAlreadyCalled()",
      "event AssignRoles(address module, uint16[] roles, bool[] memberOf)",
      "event AvatarSet(address indexed previousAvatar, address indexed newAvatar)",
      "event ChangedGuard(address guard)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RolesModSetup(address indexed initiator, address indexed owner, address indexed avatar, address target)",
      "event SetDefaultRole(address module, uint16 defaultRole)",
      "event SetMultisendAddress(address multisendAddress)",
      "event TargetSet(address indexed previousTarget, address indexed newTarget)",
      "function allowTarget(uint16 role, address targetAddress, uint8 options)",
      "function assignRoles(address module, uint16[] _roles, bool[] memberOf)",
      "function avatar() view returns (address)",
      "function defaultRoles(address) view returns (uint16)",
      "function disableModule(address prevModule, address module)",
      "function enableModule(address module)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool, bytes)",
      "function execTransactionWithRole(address to, uint256 value, bytes data, uint8 operation, uint16 role, bool shouldRevert) returns (bool success)",
      "function execTransactionWithRoleReturnData(address to, uint256 value, bytes data, uint8 operation, uint16 role, bool shouldRevert) returns (bool success, bytes returnData)",
      "function getGuard() view returns (address _guard)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function guard() view returns (address)",
      "function isModuleEnabled(address _module) view returns (bool)",
      "function multisend() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function revokeTarget(uint16 role, address targetAddress)",
      "function scopeAllowFunction(uint16 role, address targetAddress, bytes4 functionSig, uint8 options)",
      "function scopeFunction(uint16 role, address targetAddress, bytes4 functionSig, bool[] isParamScoped, uint8[] paramType, uint8[] paramComp, bytes[] compValue, uint8 options)",
      "function scopeFunctionExecutionOptions(uint16 role, address targetAddress, bytes4 functionSig, uint8 options)",
      "function scopeParameter(uint16 role, address targetAddress, bytes4 functionSig, uint256 paramIndex, uint8 paramType, uint8 paramComp, bytes compValue)",
      "function scopeParameterAsOneOf(uint16 role, address targetAddress, bytes4 functionSig, uint256 paramIndex, uint8 paramType, bytes[] compValues)",
      "function scopeRevokeFunction(uint16 role, address targetAddress, bytes4 functionSig)",
      "function scopeTarget(uint16 role, address targetAddress)",
      "function setAvatar(address _avatar)",
      "function setDefaultRole(address module, uint16 role)",
      "function setGuard(address _guard)",
      "function setMultisend(address _multisend)",
      "function setTarget(address _target)",
      "function setUp(bytes initParams)",
      "function target() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unscopeParameter(uint16 role, address targetAddress, bytes4 functionSig, uint8 paramIndex)"
    ],
    "linea:0x3E5c63644E683549055b9Be8653de26E0B4CD36E": [
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeModuleTransaction(address module, address to, uint256 value, bytes data, uint8 operation)",
      "event SafeMultiSigTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures, bytes additionalInfo)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "linea:0x508Ca82Df566dCD1B0DE8296e70a96332cD644ec": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "linea:0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "linea:0xB8F5524D73f549Cf14A0587a3C7810723f9c0051": [
      "constructor(address _singleton)"
    ],
    "linea:0xc808BfCBeD34D90fa9579CAa664e67B9A03C56ca": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "linea:0xcB04d0AD0D3ceA5aEc1B480957Ddb20CA47EA30c": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "linea:0xd83af4fbD77f3AB65C3B1Dc4B38D7e67AEcf599A": [
      "constructor(address minter)",
      "error TokenIsSoulBound()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function MINTER_ROLE() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address, uint256) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function batchMint(address[] _to, uint256 _amount)",
      "function batchMintMultiple(address[] _to, uint256[] _amounts)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address, uint256) returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address, uint256) returns (bool)",
      "function mint(address _to, uint256 _amount)",
      "function name() view returns (string)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address, uint256) returns (bool)",
      "function transferFrom(address, address, uint256) returns (bool)"
    ],
    "linea:0xD90ed3D4f9d11262d3D346a4369058d5B3777137": [
      "constructor()",
      "error AlreadyBridgedToken(address token)",
      "error AlreadyBrigedToNativeTokenSet(address token)",
      "error ArrayLengthsDoNotMatch()",
      "error CallerIsNotMessageService()",
      "error DecimalsAreUnknown(address token)",
      "error InvalidPermitData(bytes4 permitData, bytes4 permitSelector)",
      "error IsNotPaused(uint8 pauseType)",
      "error IsPaused(uint8 pauseType)",
      "error NativeToBridgedTokenAlreadySet(address token)",
      "error NotReserved(address token)",
      "error PermitNotAllowingBridge(address spender)",
      "error PermitNotFromSender(address owner)",
      "error RemoteTokenBridgeAlreadySet(address remoteTokenBridge)",
      "error ReservedToken(address token)",
      "error SenderNotAuthorized()",
      "error StatusAddressNotAllowed(address token)",
      "error TokenListEmpty()",
      "error TokenNotDeployed(address token)",
      "error ZeroAddressNotAllowed()",
      "error ZeroAmountNotAllowed(uint256 amount)",
      "error ZeroHashNotAllowed()",
      "event BridgingFinalized(address indexed nativeToken, address indexed bridgedToken, uint256 indexed amount, address recipient)",
      "event BridgingFinalizedV2(address indexed nativeToken, address indexed bridgedToken, uint256 amount, address indexed recipient)",
      "event BridgingInitiated(address indexed sender, address recipient, address indexed token, uint256 indexed amount)",
      "event BridgingInitiatedV2(address indexed sender, address indexed recipient, address indexed token, uint256 amount)",
      "event CustomContractSet(address indexed nativeToken, address indexed customContract, address indexed setBy)",
      "event DeploymentConfirmed(address[] tokens, address indexed confirmedBy)",
      "event Initialized(uint8 version)",
      "event MessageServiceUpdated(address indexed newMessageService, address indexed oldMessageService, address indexed setBy)",
      "event NewToken(address indexed token)",
      "event NewTokenDeployed(address indexed bridgedToken, address indexed nativeToken)",
      "event PauseTypeRoleSet(uint8 indexed pauseType, bytes32 indexed role)",
      "event Paused(address messageSender, uint8 indexed pauseType)",
      "event RemoteSenderSet(address indexed remoteSender, address indexed setter)",
      "event RemoteTokenBridgeSet(address indexed remoteTokenBridge, address indexed setBy)",
      "event ReservationRemoved(address indexed token)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event TokenDeployed(address indexed token)",
      "event TokenReserved(address indexed token)",
      "event UnPauseTypeRoleSet(uint8 indexed unPauseType, bytes32 indexed role)",
      "event UnPaused(address messageSender, uint8 indexed pauseType)",
      "function CONTRACT_VERSION() view returns (string)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function PAUSE_ALL_ROLE() view returns (bytes32)",
      "function PAUSE_COMPLETE_TOKEN_BRIDGING_ROLE() view returns (bytes32)",
      "function PAUSE_INITIATE_TOKEN_BRIDGING_ROLE() view returns (bytes32)",
      "function REMOVE_RESERVED_TOKEN_ROLE() view returns (bytes32)",
      "function SET_CUSTOM_CONTRACT_ROLE() view returns (bytes32)",
      "function SET_MESSAGE_SERVICE_ROLE() view returns (bytes32)",
      "function SET_REMOTE_TOKENBRIDGE_ROLE() view returns (bytes32)",
      "function SET_RESERVED_TOKEN_ROLE() view returns (bytes32)",
      "function UNPAUSE_ALL_ROLE() view returns (bytes32)",
      "function UNPAUSE_COMPLETE_TOKEN_BRIDGING_ROLE() view returns (bytes32)",
      "function UNPAUSE_INITIATE_TOKEN_BRIDGING_ROLE() view returns (bytes32)",
      "function bridgeToken(address _token, uint256 _amount, address _recipient) payable",
      "function bridgeTokenWithPermit(address _token, uint256 _amount, address _recipient, bytes _permitData) payable",
      "function bridgedToNativeToken(address bridged) view returns (address native)",
      "function completeBridging(address _nativeToken, uint256 _amount, address _recipient, uint256 _chainId, bytes _tokenMetadata)",
      "function confirmDeployment(address[] _tokens) payable",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(tuple(address defaultAdmin, address messageService, address tokenBeacon, uint256 sourceChainId, uint256 targetChainId, address[] reservedTokens, tuple(address addressWithRole, bytes32 role)[] roleAddresses, tuple(uint8 pauseType, bytes32 role)[] pauseTypeRoles, tuple(uint8 pauseType, bytes32 role)[] unpauseTypeRoles) _initializationData)",
      "function isPaused(uint8 _pauseType) view returns (bool pauseTypeIsPaused)",
      "function messageService() view returns (address)",
      "function nativeToBridgedToken(uint256 chainId, address native) view returns (address bridged)",
      "function pauseByType(uint8 _pauseType)",
      "function pauseTypeStatuses(bytes32 pauseType) view returns (bool pauseStatus)",
      "function reinitializePauseTypesAndPermissions(address _defaultAdmin, tuple(address addressWithRole, bytes32 role)[] _roleAddresses, tuple(uint8 pauseType, bytes32 role)[] _pauseTypeRoles, tuple(uint8 pauseType, bytes32 role)[] _unpauseTypeRoles)",
      "function remoteSender() view returns (address)",
      "function removeReserved(address _token)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setCustomContract(address _nativeToken, address _targetContract)",
      "function setDeployed(address[] _nativeTokens)",
      "function setMessageService(address _messageService)",
      "function setRemoteTokenBridge(address _remoteTokenBridge)",
      "function setReserved(address _token)",
      "function sourceChainId() view returns (uint256)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function targetChainId() view returns (uint256)",
      "function tokenBeacon() view returns (address)",
      "function unPauseByType(uint8 _pauseType)"
    ],
    "linea:0xda8AEFCf0F9B0b81915a2C124f913e58212D49dF": [
      "constructor()",
      "error OnlyBridge(address bridgeAddress)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function _decimals() view returns (uint8)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function bridge() view returns (address)",
      "function burn(address _account, uint256 _amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string _tokenName, string _tokenSymbol, uint8 _tokenDecimals)",
      "function mint(address _recipient, uint256 _amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "linea:0xE798695d2e78f7caeb5BbF3385433959324c02c0": [
      "constructor(address implementation_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)"
    ],
    "linea:0xf5cc7604a5ef3565b4D2050D65729A06B68AA0bD": [
      "constructor(address _singleton)"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "global/Timelock": "0xadf6c9c4d77d92049a7365bc568182b2182a16c5c6e5e0e7ab6c15c6a1c76e3c",
    "global/UpgradeableBeacon": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "gnosisSafeModules/ZodiacDelay": "0x1cf1f83927c30dff78d2b2b635f9995b93db52502fcae1b9478e1dd4664540c5",
    "linea/BridgedToken": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "linea/CallForwardingProxy": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "linea/L1TokenBridge": "0xef38a739bf90c693c298d238745c360992548cf941cdee82ed7c4a5ba41df4ae",
    "linea/L1USDCBridge": "0xccec7b3207d7988b8869cf749a88b90a47d5a9e6cd0dc62f99b2accc9a81df1f",
    "linea/L2MessageService": "0x734bf260a111807cc0b66114f86680b832667c5f1d22a8c3509f18823bdd0872",
    "linea/L2Roles": "0x87df637d02e99d769d43f393133e5ea3e583758a151bdccb3bf7a6a1bd6c6187",
    "linea/L2TokenBridge": "0xde60fe36104dfc27d1da95bf2e74c70fc2b30fa7cb17e179ebcfce8c4a701e3b",
    "linea/LineaRollup": "0x62179b632448b6fa5622bfea4240428dcd0cd7f2fd455914a05b040313014dfe",
    "linea/LineaVoyageXP": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "linea/OldL2USDCBridge": "0xccb6aa386553cef9261d1c92eeefb41fec3e371485b321044615eb9e86ca0698",
    "linea/Roles": "0xa53488bfd173ae836ebda33b0560f0f0dd61141e44bc38b9ce23133023bde792",
    "linea/Verifier": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c"
  },
  "usedBlockNumbers": { "linea": 22778234, "ethereum": 23267544 },
  "permissionsConfigHash": "0x42675d6fc2ff4a6ece45a816fa7c18ee1113d9e4543cde2b9590dd394d797942"
}
