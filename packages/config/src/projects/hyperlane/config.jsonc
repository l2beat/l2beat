{
  "$schema": "../../../../discovery/schemas/config.v2.schema.json",
  "name": "hyperlane",
  "import": ["../globalConfig.jsonc"],
  "chains": {
    "ethereum": {
      "initialAddresses": [
        "0xc005dc82818d67AF737725bD4bf75435d065D239",
        "0xe1De9910fe71cC216490AC7FCF019e13a34481D7",
        "0x647C621CEb36853Ef6A907E397Adf18568E70543",
        "0x5B4e223DE74ef8c3218e66EEcC541003CAB3121A",
        "0xc2495f3183F043627CAECD56dAaa726e3B2D9c09",
        "0xef899e92DA472E014bE795Ecce948308958E25A2",
        "0xd34FE1685c28A68Bb4B8fAaadCb2769962AE737c",
        "0xF6419b2d603f7D00C383FE8b43E75DD6C0C1D63e"
      ],
      "names": {
        "0xe1De9910fe71cC216490AC7FCF019e13a34481D7": "HypERC20Collateral",
        "0x3965AC3D295641E452E0ea896a086A9cD7C6C5b6": "HyperlaneMultisig",
        "0xc005dc82818d67AF737725bD4bf75435d065D239": "Mailbox",
        "0x1AB8c76BAD3829B46b738B61cC941b22bE82C16e": "StaticAggregationIsm_default",
        "0xB82118FFB9AaC2A8462B10E585c2E7d9094d2C50": "UnknownIsm",
        "0xdc210018B5ff5fdB6Fe66827EffcfdA81f879cc8": "DomainRoutingIsm",
        "0xA2d8EBB801c632517Ff35b97Dea0685abc41494c": "StaticAggregationIsm_eclipse",
        "0xF6419b2d603f7D00C383FE8b43E75DD6C0C1D63e": "StaticMessageIdMultisigIsm",
        "0xbdf8DBfBe22D06ae7A3a9efFC669Ee32D0B99896": "StaticMerkleRootMultisigIsm"
      },
      "overrides": {
        "0xc005dc82818d67AF737725bD4bf75435d065D239": {
          "description": "The Mailbox contract is deployed on each chain and is used as a central Endpoint of the Hyperlane protocol to dispatch outgoing or process incoming messages.",
          "ignoreRelatives": ["defaultHook", "requiredHook"],
          "ignoreMethods": ["latestDispatchedId", "nonce"],
          "fields": {
            "owner": {
              "permissions": [
                {
                  "type": "interact",
                  "description": "change the default ISM and hooks for this chain that are used for all connected contracts that do not override them."
                }
              ]
            },
            "defaultIsm": {
              "description": "The default ISM contract that is used for all destination contracts that do not override it.",
              "permissions": [
                {
                  "type": "interact",
                  "description": "verify messages for destination contracts that do not specify a custom ISM."
                }
              ]
            }
          }
        },
        "0x1AB8c76BAD3829B46b738B61cC941b22bE82C16e": {
          // StaticAggregationIsm_default
          "description": "This specific Interchain Security Module (ISM) contract is a simple 't of n' module that checks that a threshold of {{threshold}} out of the [{{modules}}] ISM contracts successfully verify a message.",
          "fields": {
            "modules": { "copy": "modulesAndThreshold", "edit": ["get", 0] },
            "threshold": { "copy": "modulesAndThreshold", "edit": ["get", 1] }
          }
        },
        "0xdc210018B5ff5fdB6Fe66827EffcfdA81f879cc8": {
          // domainRoutingIsm
          "description": "ISM contract that delegates message verification to other ISMs based on the origin of the message. Currently routing to {{module}} for the origin Eclipse.",
          "fields": {
            "owner": {
              "severity": "HIGH",
              "permissions": [
                {
                  "type": "interact",
                  "description": "manage the domain -> ISM contract mapping."
                }
              ]
            },
            "module": {
              "severity": "HIGH",
              "handler": {
                "type": "call",
                "method": "module",
                "args": ["1408864445"]
              }
            }
          }
        },
        "0xA2d8EBB801c632517Ff35b97Dea0685abc41494c": {
          // StaticAggregationIsm_eclipse
          "description": "This specific Interchain Security Module (ISM) contract is a simple 't of n' module that checks that a threshold of {{threshold}} out of the [{{modules}}] ISM contracts successfully verify a message. It is an example ISM currently configured for the message origin Eclipse.",
          "fields": {
            "modules": {
              "severity": "HIGH",
              "handler": {
                "type": "hardcoded",
                "value": [
                  "0xF6419b2d603f7D00C383FE8b43E75DD6C0C1D63e",
                  "0xbdf8DBfBe22D06ae7A3a9efFC669Ee32D0B99896"
                ]
              }
            },
            "threshold": { "handler": { "type": "hardcoded", "value": 1 } }
          }
        },
        "0xF6419b2d603f7D00C383FE8b43E75DD6C0C1D63e": {
          "description": "An ISM contract that verifies if a threshold of {{threshold}} validators signed a message. The validator set is immutably defined at deployment time.",
          "fields": {
            "validators": {
              "severity": "HIGH",
              "handler": {
                "type": "hardcoded",
                "value": [
                  "0x3571223e745dC0fCbDEFa164C9B826B90c0d2DAc",
                  "0x4d4629F5bfeABe66Edc7A78da26Ef5273C266f97",
                  "0xEa83086a62617A7228ce4206FAe2ea8b0ab23513",
                  "0xebB52D7eaa3ff7A5A6260bfe5111CE52D57401d0"
                ]
              },
              "permissions": [{ "type": "validateBridge2" }]
            },
            "threshold": { "handler": { "type": "hardcoded", "value": 3 } },
            "validatorsAndThreshold": {
              "description": "Validators and threshold of a random USDC message from Eclipse to Ethereum.",
              "handler": {
                "type": "call",
                "method": "validatorsAndThreshold",
                "args": [
                  "0x03000282fc53f990bd8751a99baf21a9cbc78e891d99ad8ca04bca545f5b668671a07cd0ec107923d2000000010000000000000000000000005b4e223de74ef8c3218e66eecc541003cab3121a000000000000000000000000ab6247d122c109f00aec1353859682c0775f4cd4000000000000000000000000000000000000000000000000000000000003a980"
                ]
              }
            }
          }
        },
        "0xbdf8DBfBe22D06ae7A3a9efFC669Ee32D0B99896": {
          "description": "An ISM contract that verifies if a threshold of {{threshold}} validators signed a message. The validator set is immutably defined at deployment time. In addition, this ISM also verifies the presence of the given bridge message ID in a merkle tree of bridge messages. Newer validator-signed checkpoints can thus be used to verify older messages, which prevents the validators from censoring specific bridge messages.",
          "fields": {
            "validators": {
              "severity": "HIGH",
              "handler": {
                "type": "hardcoded",
                "value": [
                  "0x3571223e745dC0fCbDEFa164C9B826B90c0d2DAc",
                  "0x4d4629F5bfeABe66Edc7A78da26Ef5273C266f97",
                  "0xEa83086a62617A7228ce4206FAe2ea8b0ab23513",
                  "0xebB52D7eaa3ff7A5A6260bfe5111CE52D57401d0"
                ]
              }
            },
            "threshold": { "handler": { "type": "hardcoded", "value": 3 } },
            "validatorsAndThreshold": {
              "description": "Validators and threshold of a random USDC message from Eclipse to Ethereum.",
              "handler": {
                "type": "call",
                "method": "validatorsAndThreshold",
                "args": [
                  "0x03000282fc53f990bd8751a99baf21a9cbc78e891d99ad8ca04bca545f5b668671a07cd0ec107923d2000000010000000000000000000000005b4e223de74ef8c3218e66eecc541003cab3121a000000000000000000000000ab6247d122c109f00aec1353859682c0775f4cd4000000000000000000000000000000000000000000000000000000000003a980"
                ]
              }
            }
          }
        },
        "0xe1De9910fe71cC216490AC7FCF019e13a34481D7": {
          "description": "Escrow for USDC that is bridged from Ethereum to Eclipse."
        },
        "0xd34FE1685c28A68Bb4B8fAaadCb2769962AE737c": {
          "description": "Escrow for apxETH that is bridged from Ethereum to Eclipse."
        },
        "0x647C621CEb36853Ef6A907E397Adf18568E70543": {
          "description": "Escrow for USDT that is bridged from Ethereum to Eclipse."
        },
        "0x5B4e223DE74ef8c3218e66EEcC541003CAB3121A": {
          "description": "Escrow for WBTC that is bridged from Ethereum to Eclipse."
        },
        "0xc2495f3183F043627CAECD56dAaa726e3B2D9c09": {
          "description": "Escrow for tETH that is bridged from Ethereum to Eclipse."
        },
        "0xef899e92DA472E014bE795Ecce948308958E25A2": {
          "description": "Escrow for weETHs that is bridged from Ethereum to Eclipse."
        }
      }
    }
  }
}
