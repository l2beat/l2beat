{
  "name": "shared-sp1",
  "chain": "base",
  "timestamp": 1752073781,
  "configHash": "0x0d92ad4bf6f9ca6ee74fd8fc271b886d7174fe114f3ef96cadff02d4fd7043cb",
  "entries": [
    {
      "name": "SP1Verifier",
      "address": "base:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459",
      "type": "Contract",
      "template": "succinct/SP1Verifier",
      "sourceHashes": [
        "0x3ffef9f4f4cd24743e4612a4c1011ca13c0b983c52bbe8f4a6d40a58e5eeae42"
      ],
      "proxyType": "immutable",
      "description": "Verifier contract for SP1 proofs (v5.0.0).",
      "sinceTimestamp": 1748550043,
      "sinceBlock": 30880348,
      "values": {
        "$immutable": true,
        "VERIFIER_HASH": "0xd4e8ecd2357dd882209800acd6abb443d231cf287d77ba62b732ce937c8b56e7",
        "VERSION": "v5.0.0"
      },
      "implementationNames": {
        "base:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459": "SP1Verifier"
      }
    },
    {
      "name": "SP1VerifierGateway",
      "address": "base:0x3B6041173B80E77f038f3F2C0f9744f04837185e",
      "type": "Contract",
      "template": "succinct/SP1VerifierGateway",
      "sourceHashes": [
        "0xc651adcd746b8794c5b6c418aeb146f1b13b207cc9d2712ba66a42bd4b29af37"
      ],
      "proxyType": "immutable",
      "description": "This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.",
      "sinceTimestamp": 1719523667,
      "sinceBlock": 16367160,
      "values": {
        "$immutable": true,
        "activeVerifiers": [
          {
            "selector": "0xd4e8ecd2",
            "verifier": "base:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459"
          }
        ],
        "allVerifiers": [
          {
            "selector": "0x8c5bc5e4",
            "verifier": "base:0x331b350dDA287d0A65ce43103984CD44cb4Da9f0"
          },
          {
            "selector": "0x801c66ac",
            "verifier": "base:0xfE2bb0Ad7F2c44Bd1289234Af08aD6FDEC0d54a2"
          },
          {
            "selector": "0xfedc1fcc",
            "verifier": "base:0x36B353776AF6EF3A2bD707049e783F52c4209017"
          },
          {
            "selector": "0xc430ff7f",
            "verifier": "base:0xc350F063C13a3Ca21331610fe159E697a5c9c2FB"
          },
          {
            "selector": "0xc865c1b6",
            "verifier": "base:0x6B6A7Ded061567d8A56279801DEA5cFB79be5bFc"
          },
          {
            "selector": "0x4aca240a",
            "verifier": "base:0x1764C29FBd94865198588f10FC75D4f6636d158d"
          },
          {
            "selector": "0x09069090",
            "verifier": "base:0x6A87EFd4e6B2Db1ed73129A8b9c51aaA583d49e3"
          },
          {
            "selector": "0x54bdcae3",
            "verifier": "base:0xd2832Cf1fC8bA210FfABF62Db9A8781153131d16"
          },
          {
            "selector": "0x1b34fe11",
            "verifier": "base:0xE00a3cBFC45241b33c0A44C78e26168CBc55EC63"
          },
          {
            "selector": "0xd4e8ecd2",
            "verifier": "base:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459"
          }
        ],
        "owner": "base:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878"
      },
      "fieldMeta": {
        "activeVerifiers": {
          "description": "Verifiers that are routed to by their selector and not frozen."
        },
        "allVerifiers": {
          "description": "All verifiers that were ever routed to by this gateway."
        }
      },
      "implementationNames": {
        "base:0x3B6041173B80E77f038f3F2C0f9744f04837185e": "SP1VerifierGateway"
      }
    },
    {
      "address": "base:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "base:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "base:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SP1VerifierGatewayMultisig",
      "address": "base:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "base:0x3B6041173B80E77f038f3F2C0f9744f04837185e",
          "description": "affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes.",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1724206353,
      "sinceBlock": 18708503,
      "values": {
        "$immutable": false,
        "$implementation": "base:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "base:0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126",
          "base:0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
          "base:0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"
        ],
        "$threshold": 2,
        "domainSeparator": "0x29c0e10a02cbb7ea0a33470bec57a3f470dfc0e226a22a30f58cce014ff1ac28",
        "getChainId": 8453,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 11,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "base:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878": "GnosisSafeProxy",
        "base:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    }
  ],
  "abis": {
    "base:0x0459d576A6223fEeA177Fb3DF53C9c77BF84C459": [
      "error InvalidProof()",
      "error WrongVerifierSelector(bytes4 received, bytes4 expected)",
      "function VERIFIER_HASH() pure returns (bytes32)",
      "function VERSION() pure returns (string)",
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)",
      "function hashPublicValues(bytes publicValues) pure returns (bytes32)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "base:0x3B6041173B80E77f038f3F2C0f9744f04837185e": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error RouteAlreadyExists(address verifier)",
      "error RouteIsFrozen(bytes4 selector)",
      "error RouteNotFound(bytes4 selector)",
      "error SelectorCannotBeZero()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RouteAdded(bytes4 selector, address verifier)",
      "event RouteFrozen(bytes4 selector, address verifier)",
      "function addRoute(address verifier)",
      "function freezeRoute(bytes4 selector)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function routes(bytes4) view returns (address verifier, bool frozen)",
      "function transferOwnership(address newOwner)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "base:0xCafEf00d348Adbd57c37d1B77e0619C6244C6878": [
      "constructor(address _singleton)"
    ],
    "base:0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "succinct/SP1Verifier": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "succinct/SP1VerifierGateway": "0x9dd3e588fb5bceb40abbb60a0e68e868c7e81a6959705eb6f5f2c53651d5e85c"
  },
  "usedBlockNumbers": { "base": 32642217 },
  "permissionsConfigHash": "0xdc2deb6f7087a92eb180fce5107eb4f47fcf970b11072b4b4fcdb9b6d6b8a416"
}
