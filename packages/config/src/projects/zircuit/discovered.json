{
  "name": "zircuit",
  "timestamp": 1756451851,
  "configHash": "0xaf6cad6bf37359453834557ac3717460c7a23d53f8976abdec7346607ced69aa",
  "entries": [
    {
      "address": "eth:0x000000000000000000000000000000000000dEaD",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OptimismPortal",
      "address": "eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1",
      "type": "Contract",
      "template": "opstack/zircuit/OptimismPortal",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0xc4abdb5610f10d943d33cff714f0c98807bd0f37828f9b5b32a0874a2f192ce6"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main entry point to deposit funds from the host chain to this chain. It also allows to prove and finalize withdrawals. This fork of the standard OP stack contract allows for permissionless 'escaping' of assets with merkle proofs or a resolver if there were no state updates for a time defined by the eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4.",
      "ignoreInWatchMode": ["params"],
      "sinceTimestamp": 1719936491,
      "sinceBlock": 20219921,
      "values": {
        "$admin": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
        "$implementation": "eth:0xF7209f5471628aC5f68FE4ae98Feb7f02E0f40Be",
        "$pastUpgrades": [
          [
            "2024-07-02T16:13:23.000Z",
            "0x67e7390665dd0d4d9d7ad86cf3ae11c0dce8d7538b69d5fc15d176b36474e08f",
            ["eth:0x8Ab1b1E21c2f229a7bB1430CF3ADfb0644a69ab7"]
          ],
          [
            "2024-07-16T08:48:59.000Z",
            "0xf3c21a1c1d5df7cd11018e70254ed8b78bba36107c8231dfee6ff1b1c5702196",
            ["eth:0x304a52C8354f323672191Ebf1347Cd3d494Ea830"]
          ],
          [
            "2024-07-17T12:11:35.000Z",
            "0x472c4b57b3828c3f8a846702da5707eccb216d672b4ede4eb4186ffe606b14b3",
            ["eth:0xde8B916B972cE3c27C21157Fc2b107c413062b9d"]
          ],
          [
            "2025-02-12T09:23:47.000Z",
            "0x19e7944c32b28126488482597f707797b60c4c3201abacdba5b9ea00b31cfbb4",
            ["eth:0xb6714d9808909b9383B09aD7Ea4Bc7E59b3B0E20"]
          ],
          [
            "2025-04-23T14:46:59.000Z",
            "0xe9ed64d1dc4bf02f583f912b831f46ae873996b36901c3b1180ac56c710e1d6f",
            ["eth:0x6335a030fdCBa6c5704a74EF3BeDdd6550c0375a"]
          ],
          [
            "2025-08-05T13:35:59.000Z",
            "0x12d1d0dde1bafad169722a0d6a42fafad00cacc19282bc0f7de4ad39b70afed1",
            ["eth:0xE14b12F4843447114A093D99Dc9322b93a967DE6"]
          ],
          [
            "2025-08-05T13:35:59.000Z",
            "0x12d1d0dde1bafad169722a0d6a42fafad00cacc19282bc0f7de4ad39b70afed1",
            ["eth:0xA0A36095A2258568759fb41CAE4934BBd2d04E26"]
          ],
          [
            "2025-08-22T22:25:59.000Z",
            "0x1d729201879e9035259d12fc58020a8f4dd1cb7c6972f915a6fcef15f89756d6",
            ["eth:0xF7209f5471628aC5f68FE4ae98Feb7f02E0f40Be"]
          ]
        ],
        "$upgradeCount": 8,
        "guardian": "eth:0x2c0B27F7C8F083B539557a0bA787041BF22DB276",
        "l2Oracle": "eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4",
        "l2Sender": "eth:0x000000000000000000000000000000000000dEaD",
        "params": {
          "prevBaseFee": 1000000000,
          "prevBoughtGas": 312784,
          "prevBlockNum": 23245140
        },
        "paused": false,
        "resolverRegistry": "eth:0x6c89104690452AD7e209f0ab72287C2561d5cF0E",
        "superchainConfig": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
        "systemConfig": "eth:0x30F82a1Ca89226E8b8815d6EbB728e3b18a428ff",
        "version": "2.2.0"
      },
      "implementationNames": {
        "eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1": "Proxy",
        "eth:0xF7209f5471628aC5f68FE4ae98Feb7f02E0f40Be": "OptimismPortal"
      },
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "L1CrossDomainMessenger",
      "address": "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091",
      "type": "Contract",
      "template": "opstack/L1CrossDomainMessenger",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0x931681cb03b7ea6b4521cf57be98c5303f045f088c4cb9e282b889be911da623"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function.",
      "ignoreInWatchMode": ["messageNonce"],
      "sinceTimestamp": 1719936563,
      "sinceBlock": 20219927,
      "values": {
        "$admin": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
        "$implementation": "eth:0xA5B66A9FBCE3d57dA2b3Bd764d0a05B95052f73F",
        "$pastUpgrades": [
          [
            "2024-07-02T16:12:35.000Z",
            "0xba20c00dc03b009737ebbcaa3db1263524a1322c5984a4f51fbf7c4ebc979575",
            ["eth:0x6c01D349d3010Cc2953fFA0A5e8d176fc273B834"]
          ],
          [
            "2025-04-23T14:46:59.000Z",
            "0xe9ed64d1dc4bf02f583f912b831f46ae873996b36901c3b1180ac56c710e1d6f",
            ["eth:0xA5B66A9FBCE3d57dA2b3Bd764d0a05B95052f73F"]
          ]
        ],
        "$upgradeCount": 2,
        "ENCODING_OVERHEAD": 260,
        "FLOOR_CALLDATA_OVERHEAD": 40,
        "MESSAGE_VERSION": 1,
        "messageNonce": "1766847064778384329583297500742918515827483896875618958121606201292639446",
        "MIN_GAS_CALLDATA_OVERHEAD": 16,
        "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR": 63,
        "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR": 64,
        "OTHER_MESSENGER": "eth:0x4200000000000000000000000000000000000007",
        "otherMessenger": "eth:0x4200000000000000000000000000000000000007",
        "paused": false,
        "portal": "eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1",
        "PORTAL": "eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1",
        "RELAY_CALL_OVERHEAD": 40000,
        "RELAY_CONSTANT_OVERHEAD": 200000,
        "RELAY_GAS_CHECK_BUFFER": 5000,
        "RELAY_RESERVED_GAS": 40000,
        "superchainConfig": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
        "TX_BASE_GAS": 21000,
        "version": "2.4.0"
      },
      "implementationNames": {
        "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091": "Proxy",
        "eth:0xA5B66A9FBCE3d57dA2b3Bd764d0a05B95052f73F": "L1CrossDomainMessenger"
      },
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "name": "Zircuit Multisig 2",
      "address": "eth:0x2c0B27F7C8F083B539557a0bA787041BF22DB276",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "guard",
          "from": "eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1",
          "role": ".guardian"
        },
        {
          "permission": "guard",
          "from": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
          "role": ".defaultAdmin"
        },
        {
          "permission": "interact",
          "from": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
          "description": "manage roles including the guardian role.",
          "role": ".defaultAdmin"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1719933695,
      "sinceBlock": 20219691,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0x69f4D1788e39c87893C980c06EdF4b7f686e2938",
        "$members": [
          "eth:0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4",
          "eth:0x63cbB9fA540F6249AE4A3576f48BF07609b3a355",
          "eth:0x62C688FCa995e07632D64A9586896BB7EcD68567",
          "eth:0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb",
          "eth:0x38809210f69ed6204E276d2Be6b15cd530698679"
        ],
        "$threshold": 2,
        "domainSeparator": "0x2f5a11412426a5c8d31f741f163ead381cc22d989644b0397df78d087004170c",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 5 (40%)",
        "nonce": 8,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0x2c0B27F7C8F083B539557a0bA787041BF22DB276": "GnosisSafeProxy",
        "eth:0x69f4D1788e39c87893C980c06EdF4b7f686e2938": "GnosisSafe"
      }
    },
    {
      "address": "eth:0x2F9072d5A8118a60ce41611AEe3e393D107f8Cec",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SystemConfig",
      "address": "eth:0x30F82a1Ca89226E8b8815d6EbB728e3b18a428ff",
      "type": "Contract",
      "template": "opstack/SystemConfig",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0x55baff01a4d31b7dd4257fdb3509fffb44fb2fcc634cb987ae812f322bde0fcf"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.",
      "ignoreInWatchMode": ["scalar", "overhead"],
      "sinceTimestamp": 1719936527,
      "sinceBlock": 20219924,
      "values": {
        "$admin": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
        "$implementation": "eth:0x83085450544c3F360a40720859EbB1bfd311584D",
        "$pastUpgrades": [
          [
            "2024-07-02T16:11:47.000Z",
            "0x9cebd2cdbd71bf96668e003794de90cf09858ccebb8f93c41e3d7822df207505",
            ["eth:0xA03E2f3Ee6dBa20411A2326D7FA9CCCc6a9A53de"]
          ],
          [
            "2025-05-07T18:25:23.000Z",
            "0x19f086f222696bf287600d456e602d10dd4a1db43027e97262e1abb52f347570",
            ["eth:0x795277B6aD8778E27aa70813157134cfC4a4D446"]
          ],
          [
            "2025-08-22T22:25:59.000Z",
            "0x1d729201879e9035259d12fc58020a8f4dd1cb7c6972f915a6fcef15f89756d6",
            ["eth:0x83085450544c3F360a40720859EbB1bfd311584D"]
          ]
        ],
        "$upgradeCount": 3,
        "basefeeScalar": 1368,
        "BATCH_INBOX_SLOT": "0x71ac12829d66ee73d8d95bff50b3589745ce57edae70a3fb111a2342464dc597",
        "batcherHash": "eth:0xAF1E4f6a47af647F87C0Ec814d8032C4a4bFF145",
        "batchInbox": "eth:0xFF00000000000000000000000000000000048900",
        "blobbasefeeScalar": 810949,
        "eip1559Denominator": 0,
        "eip1559Elasticity": 0,
        "gasLimit": 30000000,
        "L1_CROSS_DOMAIN_MESSENGER_SLOT": "0x383f291819e6d54073bc9a648251d97421076bdd101933c0c022219ce9580636",
        "L1_ERC_721_BRIDGE_SLOT": "0x46adcbebc6be8ce551740c29c47c8798210f23f7f4086c41752944352568d5a7",
        "L1_STANDARD_BRIDGE_SLOT": "0x9904ba90dde5696cda05c9e0dab5cbaa0fea005ace4d11218a02ac668dad6376",
        "l1CrossDomainMessenger": "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091",
        "l1ERC721Bridge": "eth:0x994eEb321F9cD79B077a5455fC248c77f30Dd244",
        "l1StandardBridge": "eth:0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8",
        "L2_OUTPUT_ORACLE_SLOT": "0xe52a667f71ec761b9b381c7b76ca9b852adf7e8905da0e0ad49986a0a6871815",
        "l2OutputOracle": "eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4",
        "minimumGasLimit": 7000000,
        "operatorFeeConstant": 23225000000,
        "operatorFeeScalar": 4200000000,
        "opStackDA": {
          "isSequencerSendingBlobTx": true,
          "isUsingCelestia": false,
          "isUsingEigenDA": false
        },
        "OPTIMISM_MINTABLE_ERC20_FACTORY_SLOT": "0xa04c5bb938ca6fc46d95553abf0a76345ce3e722a30bf4f74928b8e7d852320c",
        "OPTIMISM_PORTAL_SLOT": "0x4b6c74f9e688cb39801f2112c14a8c57232a3fc5202e1444126d4bce86eb19ac",
        "optimismMintableERC20Factory": "eth:0xc77ece87C91C44AFb5f19638f9a0F75b5d90E932",
        "optimismPortal": "eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1",
        "overhead": 0,
        "owner": "eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38",
        "resourceConfig": {
          "maxResourceLimit": 6000000,
          "elasticityMultiplier": 10,
          "baseFeeMaxChangeDenominator": 8,
          "_spacer": 8,
          "minimumBaseFee": 1000000000,
          "systemTxMaxGas": 1000000,
          "maximumBaseFee": "340282366920938463463374607431768211455"
        },
        "scalar": "452312848583266388373324160190187140051835877600158453279134670530344387928",
        "sequencerInbox": "eth:0xFF00000000000000000000000000000000048900",
        "START_BLOCK_SLOT": "0xa11ee3ab75b40e88a0105e935d17cd36c8faee0138320d776c411291bdbbb19f",
        "startBlock": 20219939,
        "UNSAFE_BLOCK_SIGNER_SLOT": "0x65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
        "unsafeBlockSigner": "eth:0xAE8f771E297AAbfDE7ff35a33FB6D558f4E0a679",
        "version": "1.12.0",
        "VERSION": 0
      },
      "fieldMeta": {
        "gasLimit": {
          "severity": "LOW",
          "description": "Gas limit for blocks on L2."
        },
        "eip1559Denominator": {
          "description": "volatility param: lower denominator -> quicker fee changes on L2"
        }
      },
      "implementationNames": {
        "eth:0x30F82a1Ca89226E8b8815d6EbB728e3b18a428ff": "Proxy",
        "eth:0x83085450544c3F360a40720859EbB1bfd311584D": "SystemConfig"
      },
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "L1StandardBridge",
      "address": "eth:0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8",
      "type": "Contract",
      "template": "opstack/zircuit/L1StandardBridge",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0x2ffe3729df0a4fa39ab88f1451d7d0023e7f6d680f4a8d025a68111673392470"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main entry point to deposit ERC20 tokens from the host chain to this chain. This fork of the standard OP stack contract allows for permissionless 'escaping' of assets with merkle proofs or a resolver if there were no state updates for a configurable time.",
      "sinceTimestamp": 1719936539,
      "sinceBlock": 20219925,
      "values": {
        "$admin": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
        "$implementation": "eth:0xFF30d6E9acecc919e4E9e1A2e67980ee44Df6Ebb",
        "$pastUpgrades": [
          [
            "2024-07-02T16:11:59.000Z",
            "0xd13642194be1a1b8947f8d3cd1504ec56ca67f4ba953cc45e4f135fb118a46f7",
            ["eth:0x7409668285336dBBe720bE3525AEe372Fce4c2ab"]
          ],
          [
            "2024-07-16T08:48:59.000Z",
            "0xf3c21a1c1d5df7cd11018e70254ed8b78bba36107c8231dfee6ff1b1c5702196",
            ["eth:0xE14b12F4843447114A093D99Dc9322b93a967DE6"]
          ],
          [
            "2024-07-16T08:48:59.000Z",
            "0xf3c21a1c1d5df7cd11018e70254ed8b78bba36107c8231dfee6ff1b1c5702196",
            ["eth:0x0Fc6203310c494963eBAdd1157780a613B67eCDf"]
          ],
          [
            "2024-07-17T12:11:35.000Z",
            "0x472c4b57b3828c3f8a846702da5707eccb216d672b4ede4eb4186ffe606b14b3",
            ["eth:0xA4ba8bd753695B6121722CBB7cd81c71BCFBCA28"]
          ],
          [
            "2025-02-12T09:23:47.000Z",
            "0x19e7944c32b28126488482597f707797b60c4c3201abacdba5b9ea00b31cfbb4",
            ["eth:0xf829F2B0d741712198Aa3F0Be88b68Ec2aB5024b"]
          ],
          [
            "2025-04-23T14:46:59.000Z",
            "0xe9ed64d1dc4bf02f583f912b831f46ae873996b36901c3b1180ac56c710e1d6f",
            ["eth:0x506aadcb7bF93E892a43208d879BAc076eBC97Ef"]
          ],
          [
            "2025-08-05T13:35:59.000Z",
            "0x12d1d0dde1bafad169722a0d6a42fafad00cacc19282bc0f7de4ad39b70afed1",
            ["eth:0xFF30d6E9acecc919e4E9e1A2e67980ee44Df6Ebb"]
          ]
        ],
        "$upgradeCount": 7,
        "accessController": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
        "messenger": "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091",
        "MESSENGER": "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091",
        "OTHER_BRIDGE": "eth:0x4200000000000000000000000000000000000010",
        "otherBridge": "eth:0x4200000000000000000000000000000000000010",
        "paused": false,
        "superchainConfig": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
        "version": "2.3.0"
      },
      "implementationNames": {
        "eth:0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8": "Proxy",
        "eth:0xFF30d6E9acecc919e4E9e1A2e67980ee44Df6Ebb": "L1StandardBridge"
      },
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "eth:0x38809210f69ed6204E276d2Be6b15cd530698679",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SP1Verifier",
      "address": "eth:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5",
      "type": "Contract",
      "template": "succinct/SP1Verifier",
      "sourceHashes": [
        "0x3a6132d983fd1e502fe3b75fbf74f0debc0d183b404d144b5220d8d5b3645582"
      ],
      "proxyType": "immutable",
      "description": "Verifier contract for SP1 proofs (v5.0.0).",
      "sinceTimestamp": 1748550083,
      "sinceBlock": 22590749,
      "values": {
        "$immutable": true,
        "VERIFIER_HASH": "0xa4594c59bbc142f3b81c3ecb7f50a7c34bc9af7c4c444b5d48b795427e285913",
        "VERSION": "v5.0.0"
      },
      "implementationNames": {
        "eth:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5": "SP1Verifier"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x9097b28161923c9e2353a796f1580ecf8bf3415bae9a69f49102bdf7a1b94da8"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "eth:0x30F82a1Ca89226E8b8815d6EbB728e3b18a428ff",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "eth:0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8",
          "description": "upgrading the bridge implementation can give access to all funds escrowed therein.",
          "role": ".$admin"
        },
        {
          "permission": "upgrade",
          "from": "eth:0x6c89104690452AD7e209f0ab72287C2561d5cF0E",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "eth:0x994eEb321F9cD79B077a5455fC248c77f30Dd244",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "eth:0xC25D093D3A3f58952252D2e763BEAF2559dc9737",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "eth:0xc77ece87C91C44AFb5f19638f9a0F75b5d90E932",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1719936419,
      "sinceBlock": 20219915,
      "values": {
        "$immutable": true,
        "owner": "eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38"
      },
      "implementationNames": {
        "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257": "ProxyAdmin"
      }
    },
    {
      "address": "eth:0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x62C688FCa995e07632D64A9586896BB7EcD68567",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0x63cbB9fA540F6249AE4A3576f48BF07609b3a355",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ResolverRegistry",
      "address": "eth:0x6c89104690452AD7e209f0ab72287C2561d5cF0E",
      "type": "Contract",
      "template": "opstack/zircuit/ResolverRegistry",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0xaf3dfb2d731a0031df7fce45e164a2730f66ed2997bc3081932341a0ad0f2155"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Registers 'resolvers' which are allowed to supply authoritative data for blockchain balances to support escapes without merkle proofs from e.g. DeFi smart contracts on L2. A resolver can either be registered directly by the respective contract on L2 or by its deployer from L1, using deterministic deployment derivation.",
      "sinceTimestamp": 1753355723,
      "sinceBlock": 22988652,
      "values": {
        "$admin": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
        "$implementation": "eth:0xC82fB8FB873b0c56E1aeb9238d79b27e3d67f155",
        "$pastUpgrades": [
          [
            "2025-08-05T13:35:59.000Z",
            "0x12d1d0dde1bafad169722a0d6a42fafad00cacc19282bc0f7de4ad39b70afed1",
            ["eth:0xC82fB8FB873b0c56E1aeb9238d79b27e3d67f155"]
          ]
        ],
        "$upgradeCount": 1,
        "messenger": "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091",
        "version": "1.0.0"
      },
      "implementationNames": {
        "eth:0x6c89104690452AD7e209f0ab72287C2561d5cF0E": "Proxy",
        "eth:0xC82fB8FB873b0c56E1aeb9238d79b27e3d67f155": "ResolverRegistry"
      }
    },
    {
      "name": "ZircuitSuperchainConfig",
      "address": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
      "type": "Contract",
      "template": "opstack/zircuit/SuperchainConfig",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0xf69fa98cc18afd5754767df58a79532b52dab119b14df252fbea558da850139a"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "This is NOT the shared SuperchainConfig contract of the OP stack Superchain but rather a local fork. It manages the `PAUSED_SLOT`, a boolean value indicating whether the local chain is paused, and access control for configuring actors who can pause and unpause the system.",
      "sinceTimestamp": 1719936443,
      "sinceBlock": 20219917,
      "values": {
        "$admin": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
        "$implementation": "eth:0x70D688D4Bd6B1b195aE51040b54ab501278D1d31",
        "$pastUpgrades": [
          [
            "2024-07-02T16:08:11.000Z",
            "0xb5e745182a810d657ce620881623f4109ba08309028552c87519442deef98a13",
            ["eth:0xA47314C96ab9572af656788e15143B459F99AE0f"]
          ],
          [
            "2025-08-05T13:35:59.000Z",
            "0x12d1d0dde1bafad169722a0d6a42fafad00cacc19282bc0f7de4ad39b70afed1",
            ["eth:0x70D688D4Bd6B1b195aE51040b54ab501278D1d31"]
          ]
        ],
        "$upgradeCount": 2,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0x2c0B27F7C8F083B539557a0bA787041BF22DB276"]
          },
          "MONITOR_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["eth:0xf9Fda17D91383120D59a7c60eAEA8Bd7319B5AE5"]
          }
        },
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdmin": "eth:0x2c0B27F7C8F083B539557a0bA787041BF22DB276",
        "defaultAdminDelay": 86400,
        "defaultAdminDelayIncreaseWait": 432000,
        "guardian": "eth:0x2c0B27F7C8F083B539557a0bA787041BF22DB276",
        "MONITOR_ROLE": "0x8227712ef8ad39d0f26f06731ef0df8665eb7ada7f41b1ee089adf3c238862a2",
        "monitorAC": ["eth:0xf9Fda17D91383120D59a7c60eAEA8Bd7319B5AE5"],
        "OPERATOR_ROLE": "0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
        "owner": "eth:0x2c0B27F7C8F083B539557a0bA787041BF22DB276",
        "paused": false,
        "PAUSED_SLOT": "0xee35723ac350a69d2a92d3703f17439cbaadf2f093a21ba5bf5f1a53eb2a14d8",
        "pausedTimestamp": 0,
        "pendingDefaultAdmin": {
          "newAdmin": "eth:0x0000000000000000000000000000000000000000",
          "schedule": 0
        },
        "pendingDefaultAdminDelay": { "newDelay": 0, "schedule": 0 },
        "version": "1.2.0"
      },
      "implementationNames": {
        "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0": "Proxy",
        "eth:0x70D688D4Bd6B1b195aE51040b54ab501278D1d31": "SuperchainConfig"
      },
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "name": "L1ERC20TokenBridge",
      "address": "eth:0x912C7271a6A3622dfb8B218eb46a6122aB046C79",
      "type": "Contract",
      "template": "lido/L1ERC20TokenBridge",
      "sourceHashes": [
        "0x698ae88793265d087e07a445b69bf16b450cdcf636b9073b86221936e912a135",
        "0xc4b0423b7d0fcada3862027e805c2fc79676feb6f4bc3978e5a86b390bfd7be3"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Escrow for custom external tokens that use the canonical bridge for messaging but are governed externally.",
      "sinceTimestamp": 1726591415,
      "sinceBlock": 20771597,
      "values": {
        "$admin": "eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "$implementation": "eth:0x6bc726C993103197C41d787dd72eCd4D2e1614E8",
        "$pastUpgrades": [
          [
            "2024-09-17T16:43:35.000Z",
            "0x7ce2acc826dbccea48fc0d45858f428df245e825147aa96c020b57c71f5b6c96",
            ["eth:0x6bc726C993103197C41d787dd72eCd4D2e1614E8"]
          ]
        ],
        "$upgradeCount": 1,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSITS_DISABLER_ROLE": "0x63f736f21cb2943826cd50b191eb054ebbea670e4e962d0527611f830cd399d6",
        "DEPOSITS_ENABLER_ROLE": "0x4b43b36766bde12c5e9cbbc37d15f8d1f769f08f54720ab370faeb4ce893753a",
        "isDepositsEnabled": true,
        "isInitialized": true,
        "isWithdrawalsEnabled": true,
        "l1Token": "eth:0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
        "l2Token": "eth:0xf0e673Bc224A8Ca3ff67a61605814666b1234833",
        "l2TokenBridge": "eth:0xF4DC271cA48446a5d2b97Ff41D39918DF8A4Eb0e",
        "messenger": "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091",
        "proxy__getAdmin": "eth:0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "eth:0x6bc726C993103197C41d787dd72eCd4D2e1614E8",
        "proxy__getIsOssified": false,
        "WITHDRAWALS_DISABLER_ROLE": "0x94a954c0bc99227eddbc0715a62a7e1056ed8784cd719c2303b685683908857c",
        "WITHDRAWALS_ENABLER_ROLE": "0x9ab8816a3dc0b3849ec1ac00483f6ec815b07eee2fd766a353311c823ad59d0d"
      },
      "implementationNames": {
        "eth:0x912C7271a6A3622dfb8B218eb46a6122aB046C79": "OssifiableProxy",
        "eth:0x6bc726C993103197C41d787dd72eCd4D2e1614E8": "L1ERC20TokenBridge"
      }
    },
    {
      "name": "L2OutputOracle",
      "address": "eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4",
      "type": "Contract",
      "template": "opstack/zircuit/L2OutputOracle_SP1",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0x409b9567c50661b673c0f84e9b8ed470f1ca48bc04fb1c8d09f8cac545e82cf8"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Entrypoint for permissioned proposers to propose new L2 outputs (state roots). New proposals have to be accompanied by a zk-SNARK proof of a correct state transition, but there currently is a backdoor that lets this contract accept a state root without proof if the operator has not updated the state in 4h. Additionally, users can 'escape' their funds after 30d of no state updates by supplying merkle proofs or using a resolver.",
      "ignoreInWatchMode": [
        "latestBlockNumber",
        "latestOutputIndex",
        "nextBlockNumber",
        "nextOutputIndex",
        "latestOutputProposedV2",
        "latestOutputProposedV3"
      ],
      "sinceTimestamp": 1719936515,
      "sinceBlock": 20219923,
      "values": {
        "$admin": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
        "$implementation": "eth:0x6AB82bb139383BB758348fBb81EdA57458e59f65",
        "$pastUpgrades": [
          [
            "2024-07-02T16:12:59.000Z",
            "0xb7f011bd8d0fabfe82b954ebee2fdb2bc366baa21dcceaedf227bf8cf6803232",
            ["eth:0xaaF7FCc7252eb739E0001D8727800deAE04A84f1"]
          ],
          [
            "2025-02-12T09:23:47.000Z",
            "0x19e7944c32b28126488482597f707797b60c4c3201abacdba5b9ea00b31cfbb4",
            ["eth:0x98DFF0828C8f870c31E209f35dF7ed22d194Ea9B"]
          ],
          [
            "2025-03-11T01:01:59.000Z",
            "0x82c8840f615a9681634471d0ca91ae7ab00e483dbc01dbf4b16a0efe042c7e2a",
            ["eth:0xE14b12F4843447114A093D99Dc9322b93a967DE6"]
          ],
          [
            "2025-03-11T01:01:59.000Z",
            "0x82c8840f615a9681634471d0ca91ae7ab00e483dbc01dbf4b16a0efe042c7e2a",
            ["eth:0xeE646fEA9b1D7f89ae92266c5d7E799158416ca4"]
          ],
          [
            "2025-08-05T13:35:59.000Z",
            "0x12d1d0dde1bafad169722a0d6a42fafad00cacc19282bc0f7de4ad39b70afed1",
            ["eth:0xE14b12F4843447114A093D99Dc9322b93a967DE6"]
          ],
          [
            "2025-08-05T13:35:59.000Z",
            "0x12d1d0dde1bafad169722a0d6a42fafad00cacc19282bc0f7de4ad39b70afed1",
            ["eth:0xb82E8B7B3a93290EE38dB201686AbDc9FDF6A315"]
          ],
          [
            "2025-08-22T22:25:59.000Z",
            "0x1d729201879e9035259d12fc58020a8f4dd1cb7c6972f915a6fcef15f89756d6",
            ["eth:0x6AB82bb139383BB758348fBb81EdA57458e59f65"]
          ]
        ],
        "$upgradeCount": 7,
        "aggregationVkey": "0x008adbf6e7ba087ac0b05572c938b7707400d7b41318efcbc1d7ffbbbed50452",
        "allowBootstrapKeepalive": false,
        "challenger": "eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38",
        "CHALLENGER": "eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38",
        "deletedOutputs": [],
        "FINALIZATION_PERIOD_SECONDS": 14400,
        "finalizationPeriodSeconds": 14400,
        "initializerVersion": 2,
        "L2_BLOCK_TIME": 2,
        "l2BlockTime": 2,
        "l2ChainId": 48900,
        "latestBlockNumber": 18254392,
        "latestOutputIndex": 32918,
        "latestOutputProposedV2": 32836,
        "latestOutputProposedV3": 32918,
        "nextBlockNumber": 18254393,
        "nextOutputIndex": 32919,
        "owner": "eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000",
        "proposer": "eth:0xE8C20EA8eF100d7aa3846616E5D07A5aBb067C65",
        "PROPOSER": "eth:0xE8C20EA8eF100d7aa3846616E5D07A5aBb067C65",
        "rangeVkeyCommitment": "0x40bc0563112dcc6868037ea0445916342df200ec0152bf7b4c2cca1d640fdaa3",
        "rollupConfigHash": "0x4443cede364fd50e63d976126c720d4b12b9a608e1005e42f95d619b552a913c",
        "startingBlockNumber": 0,
        "startingTimestamp": 1719935831,
        "superchainConfig": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
        "timeLimitOutputRootSubmissionSeconds": 2592000,
        "timeLimitOutputRootSubmissionSecondsFmt": "30d",
        "verifierV2": "eth:0xC25D093D3A3f58952252D2e763BEAF2559dc9737",
        "verifierV3": "eth:0xf35A4088eA0231C44B9DB52D25c0E9E2fEe31f67",
        "version": "3.0.0",
        "withdrawalKeepalivePeriodSeconds": 14400,
        "withdrawalKeepalivePeriodSecondsFmt": "4h"
      },
      "fieldMeta": {
        "proposer": { "severity": "HIGH" },
        "challenger": { "severity": "HIGH" },
        "deletedOutputs": { "severity": "HIGH" }
      },
      "implementationNames": {
        "eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4": "Proxy",
        "eth:0x6AB82bb139383BB758348fBb81EdA57458e59f65": "L2OutputOracle"
      },
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "L1ERC721Bridge",
      "address": "eth:0x994eEb321F9cD79B077a5455fC248c77f30Dd244",
      "type": "Contract",
      "template": "opstack/L1ERC721Bridge",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0x937e394859daaa4d66de4cbe3e6770d80adf639ecc5d3394774676870cda8d62"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Used to bridge ERC-721 tokens from host chain to this chain.",
      "sinceTimestamp": 1719936587,
      "sinceBlock": 20219929,
      "values": {
        "$admin": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
        "$implementation": "eth:0xDF129ECFc63Af454F62b69d03C0f0E21e69bcDAb",
        "$pastUpgrades": [
          [
            "2024-07-02T16:12:11.000Z",
            "0xd6346f4354e7b4f58d6ef747d0ac04afa4c80319963ac187a69403ff1dcebdc8",
            ["eth:0x3B21dC86c412aC34fF4c679497b274509D73cDcC"]
          ],
          [
            "2025-04-23T14:46:59.000Z",
            "0xe9ed64d1dc4bf02f583f912b831f46ae873996b36901c3b1180ac56c710e1d6f",
            ["eth:0xDF129ECFc63Af454F62b69d03C0f0E21e69bcDAb"]
          ]
        ],
        "$upgradeCount": 2,
        "messenger": "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091",
        "MESSENGER": "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091",
        "OTHER_BRIDGE": "eth:0x4200000000000000000000000000000000000014",
        "otherBridge": "eth:0x4200000000000000000000000000000000000014",
        "paused": false,
        "superchainConfig": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
        "version": "2.2.0"
      },
      "implementationNames": {
        "eth:0x994eEb321F9cD79B077a5455fC248c77f30Dd244": "Proxy",
        "eth:0xDF129ECFc63Af454F62b69d03C0f0E21e69bcDAb": "L1ERC721Bridge"
      },
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "eth:0xAE8f771E297AAbfDE7ff35a33FB6D558f4E0a679",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xAF1E4f6a47af647F87C0Ec814d8032C4a4bFF145",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "sequence",
          "from": "eth:0x30F82a1Ca89226E8b8815d6EbB728e3b18a428ff",
          "role": ".batcherHash"
        }
      ]
    },
    {
      "address": "eth:0xC1Ea584f696ABF39044c18D510067f0Ce2cC8966",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "VerifierV2",
      "address": "eth:0xC25D093D3A3f58952252D2e763BEAF2559dc9737",
      "type": "Contract",
      "template": "opstack/zircuit/Verifier",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0x709abb48f790c58a1517d5b15d470a3b3058adc8ff1953bb2764302ffd552c1b"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "ZK verifier that verifies zk-SNARKs using the PLONK proving system to prove correct EVM state transitions. The verifier is now unused as the project migrated to SP1.",
      "sinceTimestamp": 1741569827,
      "sinceBlock": 22013168,
      "values": {
        "$admin": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
        "$implementation": "eth:0x5d4F36e70Ab3Ccd8cA898A06C2D725B22A1D57f0",
        "$pastUpgrades": [
          [
            "2025-03-11T01:01:59.000Z",
            "0x82c8840f615a9681634471d0ca91ae7ab00e483dbc01dbf4b16a0efe042c7e2a",
            ["eth:0xD5B424AC36928E2da7dA9eCA9807938a56988F5a"]
          ],
          [
            "2025-05-07T18:25:23.000Z",
            "0x19f086f222696bf287600d456e602d10dd4a1db43027e97262e1abb52f347570",
            ["eth:0x89223192E728a830F09b32d93D51AaC88b6a466e"]
          ],
          [
            "2025-06-11T21:09:23.000Z",
            "0x273c02e325a3bd80d508d1b259225e739853611a87491e1bbb1642141a6b1612",
            ["eth:0x5d4F36e70Ab3Ccd8cA898A06C2D725B22A1D57f0"]
          ]
        ],
        "$upgradeCount": 3,
        "digest": "0x167f5fa574c6c6d9dec2cca7c084f607c905044487a03eb3290089b218bd1f0f"
      },
      "implementationNames": {
        "eth:0xC25D093D3A3f58952252D2e763BEAF2559dc9737": "Proxy",
        "eth:0x5d4F36e70Ab3Ccd8cA898A06C2D725B22A1D57f0": "VerifierV2"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "Zircuit Multisig 1",
      "address": "eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "challenge",
          "from": "eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4",
          "role": ".challenger"
        },
        {
          "permission": "interact",
          "from": "eth:0x30F82a1Ca89226E8b8815d6EbB728e3b18a428ff",
          "description": "it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "eth:0xf35A4088eA0231C44B9DB52D25c0E9E2fEe31f67",
          "description": "affect the liveness and safety of the gateway - can transfer ownership, add and freeze verifier routes.",
          "role": ".owner"
        },
        {
          "permission": "upgrade",
          "from": "eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1",
          "role": "admin",
          "via": [
            { "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091",
          "role": "admin",
          "via": [
            { "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0x30F82a1Ca89226E8b8815d6EbB728e3b18a428ff",
          "role": "admin",
          "via": [
            { "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8",
          "description": "upgrading the bridge implementation can give access to all funds escrowed therein.",
          "role": ".$admin",
          "via": [
            { "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0x6c89104690452AD7e209f0ab72287C2561d5cF0E",
          "role": "admin",
          "via": [
            { "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
          "role": "admin",
          "via": [
            { "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4",
          "role": "admin",
          "via": [
            { "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0x994eEb321F9cD79B077a5455fC248c77f30Dd244",
          "role": "admin",
          "via": [
            { "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0xC25D093D3A3f58952252D2e763BEAF2559dc9737",
          "role": "admin",
          "via": [
            { "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "eth:0xc77ece87C91C44AFb5f19638f9a0F75b5d90E932",
          "role": "admin",
          "via": [
            { "address": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257" }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1719933659,
      "sinceBlock": 20219688,
      "values": {
        "$immutable": false,
        "$implementation": "eth:0x69f4D1788e39c87893C980c06EdF4b7f686e2938",
        "$members": [
          "eth:0xD8399320cF3a6C7068DaC0C35ea5e74ddd650BD4",
          "eth:0xC1Ea584f696ABF39044c18D510067f0Ce2cC8966",
          "eth:0x63cbB9fA540F6249AE4A3576f48BF07609b3a355",
          "eth:0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4",
          "eth:0x2F9072d5A8118a60ce41611AEe3e393D107f8Cec",
          "eth:0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb",
          "eth:0x62C688FCa995e07632D64A9586896BB7EcD68567",
          "eth:0x38809210f69ed6204E276d2Be6b15cd530698679"
        ],
        "$threshold": 6,
        "domainSeparator": "0xe753a06679d8fe2168fab8f34f0dc5e26b01b6eda11e4be92246bd7687e7a436",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "6 of 8 (75%)",
        "nonce": 16,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38": "GnosisSafeProxy",
        "eth:0x69f4D1788e39c87893C980c06EdF4b7f686e2938": "GnosisSafe"
      }
    },
    {
      "name": "OptimismMintableERC20Factory",
      "address": "eth:0xc77ece87C91C44AFb5f19638f9a0F75b5d90E932",
      "type": "Contract",
      "template": "opstack/OptimismMintableERC20Factory",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0xae58fedc9cba4efd31498542acf99901aec1544412fb8cf69fa5c7e804602cc7"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "A helper contract that generates OptimismMintableERC20 contracts on the network it's deployed to. OptimismMintableERC20 is a standard extension of the base ERC20 token contract designed to allow the L1StandardBridge contracts to mint and burn tokens. This makes it possible to use an OptimismMintableERC20 as this chain's representation of a token on the host chain, or vice-versa.",
      "sinceTimestamp": 1719936575,
      "sinceBlock": 20219928,
      "values": {
        "$admin": "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257",
        "$implementation": "eth:0xf885DA6A3B4c93905b02f36f9a13680922A554b0",
        "$pastUpgrades": [
          [
            "2024-07-02T16:12:23.000Z",
            "0x25c6d394396aef5f15c5f4fd388c8ebf206b71dfe6ced6d1933573016d7cee77",
            ["eth:0xf885DA6A3B4c93905b02f36f9a13680922A554b0"]
          ]
        ],
        "$upgradeCount": 1,
        "bridge": "eth:0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8",
        "BRIDGE": "eth:0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8",
        "version": "1.9.0"
      },
      "implementationNames": {
        "eth:0xc77ece87C91C44AFb5f19638f9a0F75b5d90E932": "Proxy",
        "eth:0xf885DA6A3B4c93905b02f36f9a13680922A554b0": "OptimismMintableERC20Factory"
      }
    },
    {
      "address": "eth:0xD8399320cF3a6C7068DaC0C35ea5e74ddd650BD4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "eth:0xE8C20EA8eF100d7aa3846616E5D07A5aBb067C65",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "propose",
          "from": "eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4",
          "role": ".proposer"
        }
      ]
    },
    {
      "name": "SP1VerifierGateway",
      "address": "eth:0xf35A4088eA0231C44B9DB52D25c0E9E2fEe31f67",
      "type": "Contract",
      "template": "succinct/SP1VerifierGateway",
      "sourceHashes": [
        "0xae43138d235a7d6bdc28d5f7a1d652c8b9faecc9208b0f4c21490db6c906fa6c"
      ],
      "proxyType": "immutable",
      "description": "This contract is the router for zk proof verification. It stores the mapping between identifiers and the address of onchain verifier contracts, routing each identifier to the corresponding verifier contract.",
      "sinceTimestamp": 1755850955,
      "sinceBlock": 23195391,
      "values": {
        "$immutable": true,
        "activeVerifiers": [
          {
            "selector": "0xa4594c59",
            "verifier": "eth:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5"
          }
        ],
        "allVerifiers": [
          {
            "selector": "0xa4594c59",
            "verifier": "eth:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5"
          }
        ],
        "owner": "eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38",
        "pendingOwner": "eth:0x0000000000000000000000000000000000000000"
      },
      "fieldMeta": {
        "activeVerifiers": {
          "description": "Verifiers that are routed to by their selector and not frozen."
        },
        "allVerifiers": {
          "description": "All verifiers that were ever routed to by this gateway."
        }
      },
      "implementationNames": {
        "eth:0xf35A4088eA0231C44B9DB52D25c0E9E2fEe31f67": "SP1VerifierGateway"
      }
    },
    {
      "address": "eth:0xf9Fda17D91383120D59a7c60eAEA8Bd7319B5AE5",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "guard",
          "from": "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0",
          "role": ".monitorAC"
        }
      ]
    },
    {
      "address": "eth:0xFF00000000000000000000000000000000048900",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "zircuit:0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "zircuit:0x2F9072d5A8118a60ce41611AEe3e393D107f8Cec",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "zircuit:0x38809210f69ed6204E276d2Be6b15cd530698679",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1Block",
      "address": "zircuit:0x4200000000000000000000000000000000000015",
      "type": "Contract",
      "template": "opstack/Layer2/L1Block_depositExclusions",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0xbb69c5830d6e822e4bf9c51ad08b5ade53450cf808a5cabc8665f40e5c6d7c1a"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Simple contract that returns information about the latest L1 block, which is derived permissionlessly from the L1 chain. This version though also contains a storage slot for `depositExclusions`.",
      "ignoreInWatchMode": [
        "basefee",
        "hash",
        "number",
        "timestamp",
        "sequenceNumber"
      ],
      "values": {
        "$admin": "zircuit:0x4200000000000000000000000000000000000018",
        "$implementation": "zircuit:0xFf256497D61dcd71a9e9Ff43967C13fdE1F72D12",
        "$pastUpgrades": [
          [
            "2025-05-12T16:00:01.000Z",
            "0xe992e00998b34075506d2726a274db07a62af6cdd9d527bfda9128114603cfbd",
            ["zircuit:0xFf256497D61dcd71a9e9Ff43967C13fdE1F72D12"]
          ]
        ],
        "$upgradeCount": 1,
        "basefee": 624805720,
        "baseFeeScalar": 1368,
        "batcherHash": "0x000000000000000000000000af1e4f6a47af647f87c0ec814d8032c4a4bff145",
        "blobBaseFee": 1,
        "blobBaseFeeScalar": 810949,
        "depositExclusions": "0x",
        "DEPOSITOR_ACCOUNT": "zircuit:0xDeaDDEaDDeAdDeAdDEAdDEaddeAddEAdDEAd0001",
        "hash": "0xce35c1ab11166cae4d3f4f8cbf50ab566fa94badb398e9bc917d0ec1f637ab7f",
        "l1FeeOverhead": 0,
        "l1FeeScalar": 0,
        "number": 23245235,
        "operatorFeeConstant": 23225000000,
        "operatorFeeScalar": 4200000000,
        "sequenceNumber": 2,
        "timestamp": 1756451843,
        "version": "1.3.0"
      },
      "implementationNames": {
        "zircuit:0x4200000000000000000000000000000000000015": "Proxy",
        "zircuit:0xFf256497D61dcd71a9e9Ff43967C13fdE1F72D12": "L1Block"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "zircuit:0x4200000000000000000000000000000000000018",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x58e0fa3818df29fbb7de4e09a8c62f8952335a4ac32e30256ae72fd9681d7b50",
        "0x9097b28161923c9e2353a796f1580ecf8bf3415bae9a69f49102bdf7a1b94da8"
      ],
      "proxyType": "EIP1967 proxy",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "zircuit:0x4200000000000000000000000000000000000015",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "zircuit:0x4200000000000000000000000000000000000018",
          "role": "admin"
        }
      ],
      "values": {
        "$admin": "zircuit:0x4200000000000000000000000000000000000018",
        "$implementation": "zircuit:0xC0d3C0D3c0d3C0d3c0d3c0D3C0D3C0d3C0D30018",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "owner": "zircuit:0xC463EaC02572CC964D43D2414023E2c6B62bAF38"
      },
      "implementationNames": {
        "zircuit:0x4200000000000000000000000000000000000018": "Proxy",
        "zircuit:0xC0d3C0D3c0d3C0d3c0d3c0D3C0D3C0d3C0D30018": "ProxyAdmin"
      }
    },
    {
      "address": "zircuit:0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "zircuit:0x62C688FCa995e07632D64A9586896BB7EcD68567",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "zircuit:0x63cbB9fA540F6249AE4A3576f48BF07609b3a355",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "zircuit:0xC1Ea584f696ABF39044c18D510067f0Ce2cC8966",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "zircuit:0xC463EaC02572CC964D43D2414023E2c6B62bAF38",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "zircuit:0x4200000000000000000000000000000000000015",
          "role": "admin",
          "via": [
            { "address": "zircuit:0x4200000000000000000000000000000000000018" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "zircuit:0x4200000000000000000000000000000000000018",
          "role": "admin",
          "via": [
            { "address": "zircuit:0x4200000000000000000000000000000000000018" }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "zircuit:0x4200000000000000000000000000000000000018",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "values": {
        "$immutable": false,
        "$implementation": "zircuit:0x69f4D1788e39c87893C980c06EdF4b7f686e2938",
        "$members": [
          "zircuit:0xD8399320cF3a6C7068DaC0C35ea5e74ddd650BD4",
          "zircuit:0xC1Ea584f696ABF39044c18D510067f0Ce2cC8966",
          "zircuit:0x63cbB9fA540F6249AE4A3576f48BF07609b3a355",
          "zircuit:0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4",
          "zircuit:0x2F9072d5A8118a60ce41611AEe3e393D107f8Cec",
          "zircuit:0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb",
          "zircuit:0x62C688FCa995e07632D64A9586896BB7EcD68567",
          "zircuit:0x38809210f69ed6204E276d2Be6b15cd530698679"
        ],
        "$threshold": 6,
        "domainSeparator": "0x0e6beaeca7fa9d76ff797b4cb9b1613246b764489fd9feeb5ac844c73acdd8c9",
        "getChainId": 48900,
        "GnosisSafe_modules": [],
        "multisigThreshold": "6 of 8 (75%)",
        "nonce": 6,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "zircuit:0xC463EaC02572CC964D43D2414023E2c6B62bAF38": "GnosisSafeProxy",
        "zircuit:0x69f4D1788e39c87893C980c06EdF4b7f686e2938": "GnosisSafe"
      }
    },
    {
      "address": "zircuit:0xD8399320cF3a6C7068DaC0C35ea5e74ddd650BD4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "zircuit:0xDeaDDEaDDeAdDeAdDEAdDEaddeAddEAdDEAd0001",
      "type": "EOA",
      "proxyType": "EOA"
    }
  ],
  "abis": {
    "eth:0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "eth:0x2a721cBE81a128be0F01040e3353c3805A5EA091": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "eth:0x2c0B27F7C8F083B539557a0bA787041BF22DB276": [
      "constructor(address _singleton)"
    ],
    "eth:0x30F82a1Ca89226E8b8815d6EbB728e3b18a428ff": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "eth:0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "eth:0x50ACFBEdecf4cbe350E1a86fC6f03a821772f1e5": [
      "error InvalidProof()",
      "error ProofInvalid()",
      "error PublicInputNotInField()",
      "error WrongVerifierSelector(bytes4 received, bytes4 expected)",
      "function VERIFIER_HASH() pure returns (bytes32)",
      "function VERSION() pure returns (string)",
      "function Verify(uint256[8] proof, uint256[2] input) view",
      "function compressProof(uint256[8] proof) view returns (uint256[4] compressed)",
      "function hashPublicValues(bytes publicValues) pure returns (bytes32)",
      "function verifyCompressedProof(uint256[4] compressedProof, uint256[2] input) view",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "eth:0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257": [
      "constructor(address _owner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address _proxy, address _newAdmin)",
      "function getProxyAdmin(address _proxy) view returns (address)",
      "function getProxyImplementation(address _proxy) view returns (address)",
      "function owner() view returns (address)",
      "function proxyType(address) view returns (uint8)",
      "function renounceOwnership()",
      "function setProxyType(address _address, uint8 _type)",
      "function transferOwnership(address newOwner)",
      "function upgrade(address _proxy, address _implementation)",
      "function upgradeAndCall(address _proxy, address _implementation, bytes _data) payable"
    ],
    "eth:0x5d4F36e70Ab3Ccd8cA898A06C2D725B22A1D57f0": [
      "function digest() view returns (bytes32)"
    ],
    "eth:0x69f4D1788e39c87893C980c06EdF4b7f686e2938": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "eth:0x6AB82bb139383BB758348fBb81EdA57458e59f65": [
      "constructor()",
      "error BlockNotProposed()",
      "error InvalidInitialization()",
      "error L1BlockHashNotAvailable()",
      "error L1BlockHashNotCheckpointed()",
      "error NotInitializing()",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event AggregationVkeyUpdated(bytes32 indexed oldAggregationVkey, bytes32 indexed newAggregationVkey)",
      "event Initialized(uint64 version)",
      "event OutputProposed(bytes32 indexed outputRoot, uint256 indexed l2OutputIndex, uint256 indexed l2BlockNumber, uint256 l1Timestamp)",
      "event OutputProposedV2(bytes32 indexed poseidonStateRoot, uint256 indexed l2OutputIndex, uint256 batchIndex, bytes32 batchHash)",
      "event OutputsDeleted(uint256 indexed prevNextOutputIndex, uint256 indexed newNextOutputIndex)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ProposerUpdated(address indexed proposer, bool added)",
      "event RangeVkeyCommitmentUpdated(bytes32 indexed oldRangeVkeyCommitment, bytes32 indexed newRangeVkeyCommitment)",
      "event RollupConfigHashUpdated(bytes32 indexed oldRollupConfigHash, bytes32 indexed newRollupConfigHash)",
      "event VerifierUpdated(address indexed oldVerifier, address indexed newVerifier)",
      "function CHALLENGER() view returns (address)",
      "function FINALIZATION_PERIOD_SECONDS() view returns (uint256)",
      "function L2_BLOCK_TIME() view returns (uint256)",
      "function PROPOSER() view returns (address)",
      "function acceptOwnership()",
      "function aggregationVkey() view returns (bytes32)",
      "function allowBootstrapKeepalive() view returns (bool)",
      "function bootstrapL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber)",
      "function bootstrapV2(uint256 _batchIndex, bytes32 _batchHash, bytes32 _poseidonPostStateRoot, bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1BlockHash, uint256 _l1BlockNumber)",
      "function challenger() view returns (address)",
      "function checkpointBlockHash(uint256 _blockNumber)",
      "function computeL2Timestamp(uint256 _l2BlockNumber) view returns (uint256)",
      "function deleteL2Outputs(uint256 _l2OutputIndex)",
      "function finalizationPeriodSeconds() view returns (uint256)",
      "function getL2Output(uint256 _l2OutputIndex) view returns (tuple(bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputAfter(uint256 _l2BlockNumber) view returns (tuple(bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputIndexAfter(uint256 _l2BlockNumber) view returns (uint256)",
      "function getL2OutputRootWithFinalization(uint256 _l2OutputIndex) view returns (bytes32 outputRoot, uint256 finalizedTimestamp)",
      "function historicBlockHashes(uint256) view returns (bytes32)",
      "function initialize(tuple(uint256 l2ChainId, uint256 l2BlockTime, uint256 startingBlockNumber, uint256 startingTimestamp, address proposer, address challenger, address verifierV3, address verifierV2, uint256 finalizationPeriodSeconds, uint256 withdrawalKeepalivePeriodSeconds, bytes32 aggregationVkey, bytes32 rangeVkeyCommitment, bytes32 rollupConfigHash, address owner, address superchainConfig, uint256 timeLimitOutputRootSubmissionSeconds, bool allowBootstrapKeepalive) _initParams)",
      "function initializerVersion() view returns (uint8)",
      "function isL2OutputFinalized(uint256 _l2OutputIndex) view returns (bool isFinalized)",
      "function l2BlockTime() view returns (uint256)",
      "function l2ChainId() view returns (uint256)",
      "function latestBlockNumber() view returns (uint256)",
      "function latestOutputIndex() view returns (uint256)",
      "function nextBlockNumber() view returns (uint256)",
      "function nextOutputIndex() view returns (uint256)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function proposeL2OutputV2(uint256 _batchIndex, bytes32 _batchHash, bytes32 _poseidonPostStateRoot, bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1BlockHash, uint256 _l1BlockNumber, bytes _aggrProof) payable",
      "function proposeL2OutputV3(bytes32 _outputRoot, uint256 _l2BlockNumber, uint256 _l1BlockNumber, bytes _proof, address _proverAddress) payable",
      "function proposer() view returns (address)",
      "function rangeVkeyCommitment() view returns (bytes32)",
      "function renounceOwnership()",
      "function rollupConfigHash() view returns (bytes32)",
      "function setFinalizationPeriodSeconds(uint256 newFinalizationPeriodLength)",
      "function setTimeLimitOutputRootSubmissionSeconds(uint256 _timeLimitOutputRootSubmissionSeconds)",
      "function setWithdrawalKeepalivePeriodSeconds(uint256 _withdrawalKeepalivePeriodSeconds)",
      "function startingBlockNumber() view returns (uint256)",
      "function startingTimestamp() view returns (uint256)",
      "function superchainConfig() view returns (address)",
      "function timeLimitOutputRootSubmissionSeconds() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function updateAggregationVkey(bytes32 _aggregationVkey)",
      "function updateRangeVkeyCommitment(bytes32 _rangeVkeyCommitment)",
      "function updateRollupConfigHash(bytes32 _rollupConfigHash)",
      "function updateVerifierV3(address _verifierV3)",
      "function verifierV2() view returns (address)",
      "function verifierV3() view returns (address)",
      "function verifyV2(bytes bundleProof, bytes publicInput) view",
      "function version() view returns (string)",
      "function withdrawalKeepalivePeriodSeconds() view returns (uint256)"
    ],
    "eth:0x6bc726C993103197C41d787dd72eCd4D2e1614E8": [
      "constructor(address messenger_, address l2TokenBridge_, address l1Token_, address l2Token_)",
      "error ErrorAccountIsZeroAddress()",
      "error ErrorAlreadyInitialized()",
      "error ErrorDepositsDisabled()",
      "error ErrorDepositsEnabled()",
      "error ErrorSenderNotEOA()",
      "error ErrorUnauthorizedMessenger()",
      "error ErrorUnsupportedL1Token()",
      "error ErrorUnsupportedL2Token()",
      "error ErrorWithdrawalsDisabled()",
      "error ErrorWithdrawalsEnabled()",
      "error ErrorWrongCrossDomainSender()",
      "event DepositsDisabled(address indexed disabler)",
      "event DepositsEnabled(address indexed enabler)",
      "event ERC20DepositInitiated(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event ERC20WithdrawalFinalized(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event Initialized(address indexed admin)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event WithdrawalsDisabled(address indexed disabler)",
      "event WithdrawalsEnabled(address indexed enabler)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSITS_DISABLER_ROLE() view returns (bytes32)",
      "function DEPOSITS_ENABLER_ROLE() view returns (bytes32)",
      "function WITHDRAWALS_DISABLER_ROLE() view returns (bytes32)",
      "function WITHDRAWALS_ENABLER_ROLE() view returns (bytes32)",
      "function depositERC20(address l1Token_, address l2Token_, uint256 amount_, uint32 l2Gas_, bytes data_)",
      "function depositERC20To(address l1Token_, address l2Token_, address to_, uint256 amount_, uint32 l2Gas_, bytes data_)",
      "function disableDeposits()",
      "function disableWithdrawals()",
      "function enableDeposits()",
      "function enableWithdrawals()",
      "function finalizeERC20Withdrawal(address l1Token_, address l2Token_, address from_, address to_, uint256 amount_, bytes data_)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin_)",
      "function isDepositsEnabled() view returns (bool)",
      "function isInitialized() view returns (bool)",
      "function isWithdrawalsEnabled() view returns (bool)",
      "function l1Token() view returns (address)",
      "function l2Token() view returns (address)",
      "function l2TokenBridge() view returns (address)",
      "function messenger() view returns (address)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "eth:0x6c89104690452AD7e209f0ab72287C2561d5cF0E": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "eth:0x70D688D4Bd6B1b195aE51040b54ab501278D1d31": [
      "constructor()",
      "error AccessControlBadConfirmation()",
      "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
      "error AccessControlEnforcedDefaultAdminRules()",
      "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
      "event DefaultAdminDelayChangeCanceled()",
      "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
      "event DefaultAdminTransferCanceled()",
      "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
      "event Initialized(uint64 version)",
      "event Paused(string identifier)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Unpaused()",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function MONITOR_ROLE() view returns (bytes32)",
      "function OPERATOR_ROLE() view returns (bytes32)",
      "function PAUSED_SLOT() view returns (bytes32)",
      "function acceptDefaultAdminTransfer()",
      "function beginDefaultAdminTransfer(address newAdmin)",
      "function cancelDefaultAdminTransfer()",
      "function changeDefaultAdminDelay(uint48 newDelay)",
      "function defaultAdmin() view returns (address)",
      "function defaultAdminDelay() view returns (uint48)",
      "function defaultAdminDelayIncreaseWait() view returns (uint48)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function guardian() view returns (address)",
      "function hasMonitorCapabilities(address _address) view returns (bool)",
      "function hasOperatorCapabilities(address _address) view returns (bool)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address _admin, bool _paused)",
      "function owner() view returns (address)",
      "function pause(string _identifier)",
      "function paused() view returns (bool paused_)",
      "function pausedTimestamp() view returns (uint256 pausedSince_)",
      "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
      "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function rollbackDefaultAdminDelay()",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unpause()",
      "function version() view returns (string)"
    ],
    "eth:0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "eth:0x83085450544c3F360a40720859EbB1bfd311584D": [
      "constructor()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event ConfigUpdate(uint256 indexed version, uint8 indexed updateType, bytes data)",
      "event Initialized(uint64 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function BATCH_INBOX_SLOT() view returns (bytes32)",
      "function L1_CROSS_DOMAIN_MESSENGER_SLOT() view returns (bytes32)",
      "function L1_ERC_721_BRIDGE_SLOT() view returns (bytes32)",
      "function L1_STANDARD_BRIDGE_SLOT() view returns (bytes32)",
      "function L2_OUTPUT_ORACLE_SLOT() view returns (bytes32)",
      "function OPTIMISM_MINTABLE_ERC20_FACTORY_SLOT() view returns (bytes32)",
      "function OPTIMISM_PORTAL_SLOT() view returns (bytes32)",
      "function START_BLOCK_SLOT() view returns (bytes32)",
      "function UNSAFE_BLOCK_SIGNER_SLOT() view returns (bytes32)",
      "function VERSION() view returns (uint256)",
      "function basefeeScalar() view returns (uint32)",
      "function batchInbox() view returns (address addr_)",
      "function batcherHash() view returns (bytes32)",
      "function blobbasefeeScalar() view returns (uint32)",
      "function eip1559Denominator() view returns (uint32)",
      "function eip1559Elasticity() view returns (uint32)",
      "function gasLimit() view returns (uint64)",
      "function initialize(address _owner, tuple(uint32 basefeeScalar, uint32 blobbasefeeScalar, uint32 operatorFeeScalar, uint64 operatorFeeConstant, uint64 gasLimit) _gasConfig, bytes32 _batcherHash, address _unsafeBlockSigner, tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint16 _spacer, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config, address _batchInbox, tuple(address l1CrossDomainMessenger, address l1ERC721Bridge, address l1StandardBridge, address l2OutputOracle, address optimismPortal, address optimismMintableERC20Factory) _addresses)",
      "function l1CrossDomainMessenger() view returns (address addr_)",
      "function l1ERC721Bridge() view returns (address addr_)",
      "function l1StandardBridge() view returns (address addr_)",
      "function l2OutputOracle() view returns (address addr_)",
      "function minimumGasLimit() view returns (uint64)",
      "function operatorFeeConstant() view returns (uint64)",
      "function operatorFeeScalar() view returns (uint32)",
      "function optimismMintableERC20Factory() view returns (address addr_)",
      "function optimismPortal() view returns (address addr_)",
      "function overhead() view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function resourceConfig() view returns (tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint16 _spacer, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee))",
      "function scalar() view returns (uint256)",
      "function setBatcherHash(bytes32 _batcherHash)",
      "function setEIP1559Params(uint32 _denominator, uint32 _elasticity)",
      "function setGasConfig(uint256 _overhead, uint256 _scalar)",
      "function setGasConfigEcotone(uint32 _basefeeScalar, uint32 _blobbasefeeScalar)",
      "function setGasLimit(uint64 _gasLimit)",
      "function setOperatorFeeScalars(uint32 _operatorFeeScalar, uint64 _operatorFeeConstant)",
      "function setResourceConfig(tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint16 _spacer, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config)",
      "function setUnsafeBlockSigner(address _unsafeBlockSigner)",
      "function startBlock() view returns (uint256 startBlock_)",
      "function transferOwnership(address newOwner)",
      "function unsafeBlockSigner() view returns (address addr_)",
      "function version() view returns (string)"
    ],
    "eth:0x912C7271a6A3622dfb8B218eb46a6122aB046C79": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error ErrorNotAdmin()",
      "error ErrorProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_, bool forceCall_)"
    ],
    "eth:0x92Ef6Af472b39F1b363da45E35530c24619245A4": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "eth:0x994eEb321F9cD79B077a5455fC248c77f30Dd244": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "eth:0xA5B66A9FBCE3d57dA2b3Bd764d0a05B95052f73F": [
      "constructor()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "event FailedRelayedMessage(bytes32 indexed msgHash)",
      "event Initialized(uint64 version)",
      "event RelayedMessage(bytes32 indexed msgHash)",
      "event SentMessage(address indexed target, address sender, bytes message, uint256 messageNonce, uint256 gasLimit)",
      "event SentMessageExtension1(address indexed sender, uint256 value)",
      "function ENCODING_OVERHEAD() view returns (uint64)",
      "function FLOOR_CALLDATA_OVERHEAD() view returns (uint64)",
      "function MESSAGE_VERSION() view returns (uint16)",
      "function MIN_GAS_CALLDATA_OVERHEAD() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR() view returns (uint64)",
      "function OTHER_MESSENGER() view returns (address)",
      "function PORTAL() view returns (address)",
      "function RELAY_CALL_OVERHEAD() view returns (uint64)",
      "function RELAY_CONSTANT_OVERHEAD() view returns (uint64)",
      "function RELAY_GAS_CHECK_BUFFER() view returns (uint64)",
      "function RELAY_RESERVED_GAS() view returns (uint64)",
      "function TX_BASE_GAS() view returns (uint64)",
      "function baseGas(bytes _message, uint32 _minGasLimit) pure returns (uint64)",
      "function failedMessages(bytes32) view returns (bool)",
      "function initialize(address _superchainConfig, address _portal)",
      "function messageNonce() view returns (uint256)",
      "function otherMessenger() view returns (address)",
      "function paused() view returns (bool)",
      "function portal() view returns (address)",
      "function relayMessage(uint256 _nonce, address _sender, address _target, uint256 _value, uint256 _minGasLimit, bytes _message) payable",
      "function sendMessage(address _target, bytes _message, uint32 _minGasLimit) payable",
      "function successfulMessages(bytes32) view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "eth:0xC25D093D3A3f58952252D2e763BEAF2559dc9737": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "eth:0xC463EaC02572CC964D43D2414023E2c6B62bAF38": [
      "constructor(address _singleton)"
    ],
    "eth:0xc77ece87C91C44AFb5f19638f9a0F75b5d90E932": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "eth:0xC82fB8FB873b0c56E1aeb9238d79b27e3d67f155": [
      "constructor()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "event Initialized(uint64 version)",
      "event ResolverAdded(address indexed l2Contract, address indexed newResolver)",
      "function initialize(address _messenger)",
      "function messenger() view returns (address)",
      "function resolvers(address) view returns (address)",
      "function setResolver(address _resolver)",
      "function setResolverByDeployer(address _resolver, address _l2Contract, uint64 _nonce)",
      "function setResolverByDeployer2(address _resolver, address _l2Contract, address _factory, bytes32 _salt, bytes32 _byteCodeHash)",
      "function setResolverByDeployer3(address _resolver, address _l2Contract, address _factory, bytes32 _salt)",
      "function version() view returns (string)"
    ],
    "eth:0xDF129ECFc63Af454F62b69d03C0f0E21e69bcDAb": [
      "constructor()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "event ERC721BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 tokenId, bytes extraData)",
      "event ERC721BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 tokenId, bytes extraData)",
      "event Initialized(uint64 version)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC721(address _localToken, address _remoteToken, uint256 _tokenId, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC721To(address _localToken, address _remoteToken, address _to, uint256 _tokenId, uint32 _minGasLimit, bytes _extraData)",
      "function deposits(address, address, uint256) view returns (bool)",
      "function finalizeBridgeERC721(address _localToken, address _remoteToken, address _from, address _to, uint256 _tokenId, bytes _extraData)",
      "function initialize(address _messenger, address _superchainConfig)",
      "function messenger() view returns (address)",
      "function otherBridge() view returns (address)",
      "function paused() view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "eth:0xf35A4088eA0231C44B9DB52D25c0E9E2fEe31f67": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error RouteAlreadyExists(address verifier)",
      "error RouteIsFrozen(bytes4 selector)",
      "error RouteNotFound(bytes4 selector)",
      "error SelectorCannotBeZero()",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RouteAdded(bytes4 selector, address verifier)",
      "event RouteFrozen(bytes4 selector, address verifier)",
      "function acceptOwnership()",
      "function addRoute(address verifier)",
      "function freezeRoute(bytes4 selector)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function routes(bytes4) view returns (address verifier, bool frozen)",
      "function transferOwnership(address newOwner)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "eth:0xF7209f5471628aC5f68FE4ae98Feb7f02E0f40Be": [
      "constructor()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error OutOfGas()",
      "error ReentrancyGuardReentrantCall()",
      "event ETHEscaped(address indexed user, uint256 amount)",
      "event ETHEscapedResolver(address indexed l2Contract, address indexed user, uint256 amount)",
      "event GasBurned(uint256 gasAmount, address indexed sender)",
      "event Initialized(uint64 version)",
      "event TransactionDeposited(address indexed from, address indexed to, uint256 indexed version, bytes opaqueData)",
      "event WETHEscaped(address indexed user, uint256 amount)",
      "event WETHEscapedResolver(address indexed l2Contract, address indexed user, uint256 amount)",
      "event WithdrawalFinalized(bytes32 indexed withdrawalHash, bool success)",
      "event WithdrawalProven(bytes32 indexed withdrawalHash, address indexed from, address indexed to)",
      "function amountEscaped(address) view returns (uint256)",
      "function amountWETHEscaped(address) view returns (uint256)",
      "function depositTransaction(address _to, uint256 _value, uint64 _gasLimit, bool _isCreation, bytes _data) payable",
      "function donateETH() payable",
      "function escapeETH(tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, tuple(uint256 nonce, uint256 balance, bytes32 storageRoot, bytes32 codeHash) _accountState, bytes[] _proof)",
      "function escapeETHThroughResolver(tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, tuple(uint256 nonce, uint256 balance, bytes32 storageRoot, bytes32 codeHash) _accountstate, bytes[] _proof, address _l2Contract, bytes _data)",
      "function escapeWETH(tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, tuple(uint256 nonce, uint256 balance, bytes32 storageRoot, bytes32 codeHash) _accountState, bytes[] _stateProof, uint256 _wethBalance, bytes[] _storageProof)",
      "function escapeWETHThroughResolver(tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, tuple(uint256 nonce, uint256 balance, bytes32 storageRoot, bytes32 codeHash) _wethState, bytes[] _stateProof, uint256 _tokenBalance, bytes[] _storageProof, tuple(address l2Contract, bytes data) _resolverData)",
      "function finalizeWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx)",
      "function finalizedWithdrawals(bytes32) view returns (bool)",
      "function guardian() view returns (address)",
      "function initialize(address _l2Oracle, address _systemConfig, address _superchainConfig, address _resolverRegistry)",
      "function isOutputFinalized(uint256 _l2OutputIndex) view returns (bool)",
      "function l2Oracle() view returns (address)",
      "function l2Sender() view returns (address)",
      "function minimumGasLimit(uint64 _byteCount) pure returns (uint64)",
      "function params() view returns (uint128 prevBaseFee, uint64 prevBoughtGas, uint64 prevBlockNum)",
      "function paused() view returns (bool paused_)",
      "function proveWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx, uint256 _l2OutputIndex, tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, bytes[] _withdrawalProof)",
      "function provenWithdrawals(bytes32) view returns (bytes32 outputRoot, uint128 timestamp, uint128 l2OutputIndex)",
      "function resolverRegistry() view returns (address)",
      "function superchainConfig() view returns (address)",
      "function systemConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "eth:0xf885DA6A3B4c93905b02f36f9a13680922A554b0": [
      "constructor()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "event Initialized(uint64 version)",
      "event OptimismMintableERC20Created(address indexed localToken, address indexed remoteToken, address deployer)",
      "event StandardL2TokenCreated(address indexed remoteToken, address indexed localToken)",
      "function BRIDGE() view returns (address)",
      "function bridge() view returns (address)",
      "function createOptimismMintableERC20(address _remoteToken, string _name, string _symbol) returns (address)",
      "function createOptimismMintableERC20WithDecimals(address _remoteToken, string _name, string _symbol, uint8 _decimals) returns (address)",
      "function createStandardL2Token(address _remoteToken, string _name, string _symbol) returns (address)",
      "function initialize(address _bridge)",
      "function version() view returns (string)"
    ],
    "eth:0xFF30d6E9acecc919e4E9e1A2e67980ee44Df6Ebb": [
      "constructor()",
      "error AddressEmptyCode(address target)",
      "error AddressInsufficientBalance(address account)",
      "error FailedInnerCall()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error ReentrancyGuardReentrantCall()",
      "error SafeERC20FailedOperation(address token)",
      "event ERC20BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20Escape(address indexed user, address indexed localToken, address indexed remoteToken, uint256 amount)",
      "event ERC20EscapeResolver(address indexed user, address indexed l2Contract, address indexed localToken, address remoteToken, uint256 amount)",
      "event ETHBridgeFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHBridgeInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event Initialized(uint64 version)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function accessController() view returns (address)",
      "function bridgeERC20(address _localToken, address _remoteToken, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC20To(address _localToken, address _remoteToken, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function deposits(address, address) view returns (uint256)",
      "function escapeERC20(address _localToken, address _remoteToken, tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, tuple(uint256 nonce, uint256 balance, bytes32 storageRoot, bytes32 codeHash) _accountState, bytes[] _stateProof, uint256 _tokenBalance, bytes[] _storageProof)",
      "function escapeERC20ThroughResolver(address _localToken, address _remoteToken, tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, tuple(uint256 nonce, uint256 balance, bytes32 storageRoot, bytes32 codeHash) _accountState, bytes[] _stateProof, uint256 _tokenBalance, bytes[] _storageProof, tuple(address l2Contract, bytes data) _resolverData)",
      "function escapedAmount(address, address) view returns (uint256)",
      "function finalizeBridgeERC20(address _localToken, address _remoteToken, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeBridgeETH(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function initialize(address _messenger, address _superchainConfig)",
      "function messenger() view returns (address)",
      "function otherBridge() view returns (address)",
      "function paused() view returns (bool)",
      "function superchainConfig() view returns (address)",
      "function version() view returns (string)"
    ],
    "zircuit:0x4200000000000000000000000000000000000015": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "zircuit:0x4200000000000000000000000000000000000018": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "zircuit:0x69f4D1788e39c87893C980c06EdF4b7f686e2938": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "zircuit:0xC0d3C0D3c0d3C0d3c0d3c0D3C0D3C0d3C0D30018": [
      "constructor(address _owner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address _proxy, address _newAdmin)",
      "function getProxyAdmin(address _proxy) view returns (address)",
      "function getProxyImplementation(address _proxy) view returns (address)",
      "function owner() view returns (address)",
      "function proxyType(address) view returns (uint8)",
      "function renounceOwnership()",
      "function setProxyType(address _address, uint8 _type)",
      "function transferOwnership(address newOwner)",
      "function upgrade(address _proxy, address _implementation)",
      "function upgradeAndCall(address _proxy, address _implementation, bytes _data) payable"
    ],
    "zircuit:0xC463EaC02572CC964D43D2414023E2c6B62bAF38": [
      "constructor(address _singleton)"
    ],
    "zircuit:0xFf256497D61dcd71a9e9Ff43967C13fdE1F72D12": [
      "function DEPOSITOR_ACCOUNT() view returns (address)",
      "function baseFeeScalar() view returns (uint32)",
      "function basefee() view returns (uint256)",
      "function batcherHash() view returns (bytes32)",
      "function blobBaseFee() view returns (uint256)",
      "function blobBaseFeeScalar() view returns (uint32)",
      "function depositExclusions() view returns (bytes)",
      "function hash() view returns (bytes32)",
      "function l1FeeOverhead() view returns (uint256)",
      "function l1FeeScalar() view returns (uint256)",
      "function number() view returns (uint64)",
      "function operatorFeeConstant() view returns (uint64)",
      "function operatorFeeScalar() view returns (uint32)",
      "function sequenceNumber() view returns (uint64)",
      "function setL1BlockValues(uint64 _number, uint64 _timestamp, uint256 _basefee, bytes32 _hash, uint64 _sequenceNumber, bytes32 _batcherHash, uint256 _l1FeeOverhead, uint256 _l1FeeScalar)",
      "function setL1BlockValues(uint64 _number, uint64 _timestamp, uint256 _basefee, bytes32 _hash, uint64 _sequenceNumber, bytes32 _batcherHash, uint256 _l1FeeOverhead, uint256 _l1FeeScalar, bytes _depositExclusions)",
      "function setL1BlockValuesEcotone()",
      "function setL1BlockValuesEcotoneExclusions()",
      "function setL1BlockValuesIsthmus()",
      "function setL1BlockValuesIsthmusExclusions()",
      "function timestamp() view returns (uint64)",
      "function version() view returns (string)"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "lido/L1ERC20TokenBridge": "0x1dbfb76725d8a5de94df533062c2232ad27f9bd9988b137706333c26e2ffc4d7",
    "opstack/L1CrossDomainMessenger": "0x595eac283f949c40d81ad81550396e35b3345dca8e49cfca901122a2b4046561",
    "opstack/L1ERC721Bridge": "0xafa13690ce8b74136cc340eaa940528c1a96aaf7b4c95715b884decb544f7c67",
    "opstack/Layer2/L1Block_depositExclusions": "0x0dc9fa32452642b8d19e27a9a1e5e227852608d9a1b6fa9f532ff7dc53c77219",
    "opstack/OptimismMintableERC20Factory": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "opstack/SystemConfig": "0x499f136cde0c11e214b4e9ef6ee1149701d33e15d10cb3284d703257956f96d3",
    "opstack/zircuit/L1StandardBridge": "0x2f9c34737989113306a892abba83353771734bbf57cae7245088154cbf90be77",
    "opstack/zircuit/L2OutputOracle_SP1": "0x85a1b833cdedb6708fe1e18092c56a4f9e09b7bc277ed143f3992fe3b21f768a",
    "opstack/zircuit/OptimismPortal": "0xc3cdbd0b6752833adcaa14487b9cfc1f863a5770d71a98ce9969ae1e4ccafefb",
    "opstack/zircuit/ResolverRegistry": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "opstack/zircuit/SuperchainConfig": "0x88333adf1f4e7a6bbd8da95cbcd6e91ee1dbda7da976597818c96c0dbef27421",
    "opstack/zircuit/Verifier": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "succinct/SP1Verifier": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "succinct/SP1VerifierGateway": "0x9dd3e588fb5bceb40abbb60a0e68e868c7e81a6959705eb6f5f2c53651d5e85c"
  },
  "usedBlockNumbers": { "ethereum": 23245235, "zircuit": 18257818 },
  "permissionsConfigHash": "0xe02e2dd058fdb1f985e68753f52ca88a0f125d28226e3acd442c4ee402c1939c"
}
