{
  "name": "tokens-v2",
  "chain": "ethereum",
  "blockNumber": 22923968,
  "configHash": "0xb24745a1d3722048f27636070b45a128f47167c510c5e2398172bf4cbe9d36eb",
  "entries": [
    {
      "name": "ProxyAdmin",
      "address": "0x3AC19C48662729b30F3BC3cf66364070F8b26424",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x8fd8f837bb320bd2a7463c103bea2ff207b0969b5795f320a6c868858aa92074"
      ],
      "proxyType": "immutable",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "eth:0x67f3228fD58f5A26D93a5dd0c6989b69c95618eB",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1723579643,
      "sinceBlock": 20521985,
      "values": {
        "$immutable": true,
        "owner": "0xeF18F2f054A7Ad2909333051aA42D5c0bb3f92F6",
        "UPGRADE_INTERFACE_VERSION": "5.0.0"
      },
      "implementationNames": {
        "0x3AC19C48662729b30F3BC3cf66364070F8b26424": "ProxyAdmin"
      }
    },
    {
      "name": "Staked $AZUR Token",
      "address": "0x67f3228fD58f5A26D93a5dd0c6989b69c95618eB",
      "type": "Contract",
      "sourceHashes": [
        "0x8c407edc4ac1fa1cea2c45903e2cf0158906a2ff39fc2eb92aca3ca9f0d43ed8",
        "0xa9291fc66798387bc6d07d6a47cc5d1573c07d5fa0464919eba895291a9a995a"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1723579643,
      "sinceBlock": 20521985,
      "values": {
        "$admin": "0x3AC19C48662729b30F3BC3cf66364070F8b26424",
        "$implementation": "0xB9321FA9b769E14c76F6c67B09ffA126BDD23ea9",
        "$pastUpgrades": [
          [
            "2024-08-13T20:07:23.000Z",
            "0xa82fc3537e52fc19eb796ab6b7063d1b7b1b74c2a4c982cad4c9b4f5120f7b1d",
            ["0xe63237F2dCa683B56f8466DF3A7db16414D514D9"]
          ],
          [
            "2024-12-10T08:58:35.000Z",
            "0x73e80e5d6f38624e32ecd38b646b82b28a8460cede408af3db31e42a17d1040d",
            ["0xB9321FA9b769E14c76F6c67B09ffA126BDD23ea9"]
          ]
        ],
        "$tokenData": {
          "name": "Staked $AZUR",
          "coingeckoId": "azuro-protocol",
          "address": "0x67f3228fD58f5A26D93a5dd0c6989b69c95618eB",
          "symbol": "stAZUR",
          "decimals": 18,
          "deploymentTimestamp": 1723579643,
          "coingeckoListingTimestamp": 1718755200,
          "category": "other",
          "iconUrl": "https://coin-images.coingecko.com/coins/images/38499/large/azuro.jpeg?1717727357",
          "chainId": 1,
          "supply": "zero",
          "source": "canonical"
        },
        "$upgradeCount": 2,
        "decimals": 18,
        "exchangeRate": "1076516550531035748",
        "incentiveEndsAt": 1752844811,
        "incentiveStartedAt": 1750252811,
        "name": "Staked $AZUR",
        "nextWithdrawalRequestId": 483,
        "owner": "0x80cB7c007D448aF0822E7b7b2459012cdfb5A200",
        "reward": "241004000000000000000000",
        "rewardRate": "92979938271604938271604938271604938",
        "symbol": "stAZUR",
        "totalRequestedAmount": "3836329397640751677549821",
        "totalSupply": "26115139155226008836985861",
        "withdrawalDelay": 1209600
      },
      "implementationNames": {
        "0x67f3228fD58f5A26D93a5dd0c6989b69c95618eB": "TransparentUpgradeableProxy",
        "0xB9321FA9b769E14c76F6c67B09ffA126BDD23ea9": "RewardPoolV2"
      }
    },
    {
      "address": "0x80cB7c007D448aF0822E7b7b2459012cdfb5A200",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Renzo Restaked LST  Token",
      "address": "0x8c9532a60E0E7C6BbD2B2c1303F63aCE1c3E9811",
      "type": "Contract",
      "sourceHashes": [
        "0x8c407edc4ac1fa1cea2c45903e2cf0158906a2ff39fc2eb92aca3ca9f0d43ed8",
        "0xdf0f0eb6be5581f33b6bdf19907308ff38c72febf850dcb99646c05ab48746d9"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1719403475,
      "sinceBlock": 20175746,
      "values": {
        "$admin": "0x985E459801d37749C331BBd2673B665b9114fB01",
        "$implementation": "0x0C5BC4C8406Fe03214D18bbf2962Ae2fa378c6f7",
        "$pastUpgrades": [
          [
            "2024-06-26T12:04:35.000Z",
            "0x4b9c6483c1ec3949a6952ce3cb7c4c2694b4bca7e66eedc60ce0b57752db8da9",
            ["0x39c62c6308BeD7B0832CAfc2BeA0C0eDC7f2060c"]
          ],
          [
            "2024-06-26T12:04:59.000Z",
            "0xd7701c51baa604ce41573c802e2aa6de9ac95f34fa73ad23a01b198406e9ebd1",
            ["0xaf108ae0AD8700ac41346aCb620e828c03BB8848"]
          ],
          [
            "2025-01-27T19:37:47.000Z",
            "0xfa57264c7151b93400ee47ccb9d67ac368114e6a3b0e3c4c8495a22262ca7ca2",
            ["0x09bBa67C316e59840699124a8DC0bBDa6A2A9d59"]
          ],
          [
            "2025-07-03T17:13:23.000Z",
            "0xb313628e27510e83aab8f781ed684c37fc2267e51653943d73dc466aaf5cefe7",
            ["0x0C5BC4C8406Fe03214D18bbf2962Ae2fa378c6f7"]
          ]
        ],
        "$tokenData": {
          "name": "Renzo Restaked LST ",
          "coingeckoId": "renzo-restaked-lst",
          "address": "0x8c9532a60E0E7C6BbD2B2c1303F63aCE1c3E9811",
          "symbol": "pzETH",
          "decimals": 18,
          "deploymentTimestamp": 1719403475,
          "coingeckoListingTimestamp": 1720569600,
          "category": "other",
          "iconUrl": "https://coin-images.coingecko.com/coins/images/39124/large/200x200.png?1720629607",
          "chainId": 1,
          "supply": "zero",
          "source": "canonical"
        },
        "$upgradeCount": 4,
        "ADD_SUBVAULT_ROLE": "0xae944fcb809c01a95e89b6931e61939dd0bbb790c044c20197d070090098c3a2",
        "asset": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultCollateral": "0xC329400492c6ff2438472D4651Ad17389fCb843a",
        "depositPause": false,
        "depositStrategy": "0x3aA61E6196fb3eb1170E578ad924898624f54ad6",
        "depositWhitelist": false,
        "eigenLayerAdapter": "0x0000000000000000000000000000000000000000",
        "erc4626Adapter": "0x0000000000000000000000000000000000000000",
        "farmCount": 0,
        "farmIdAt": [],
        "farmIds": [],
        "limit": "80000000024518790233583",
        "name": "Renzo Restaked LST ",
        "REBALANCE_ROLE": "0x2c09deb013d6a86a9063c95b5e2b10937d1128a3937347eb7e00408ed9fb1a9c",
        "rebalanceStrategy": "0x3aA61E6196fb3eb1170E578ad924898624f54ad6",
        "REMOVE_SUBVAULT_ROLE": "0x5e9c3ed0ef5487d8cda3fc51646c35847fdc0325200c5a21a159b36d8cba882e",
        "SET_ADAPTER_ROLE": "0xf2e7ea90350f51c371470888fa66eef25113ab1613606afc7de17fa5ee9605d2",
        "SET_DEFAULT_COLLATERAL_ROLE": "0x52a2e0e4c67d823979c1b45c7474d67476e3760d4e4797c5ad3a000c3e72a9cf",
        "SET_FARM_ROLE": "0x4c30aa7f742e0a14ed7755cb202fc37abe01363d805182186c7cfe8f8a15d64c",
        "SET_STRATEGY_ROLE": "0x2e704739166abb26e88a93c0d60bae654bea582d8d8fa53cd8580ca0878fb548",
        "subvaultAt": [
          [
            0,
            "0xa88e91cEF50b792f9449e2D4C699b6B3CcE1D19F",
            "0x87283edb0F12E7cd0eD3E18baEab20AaF43b5f6e"
          ]
        ],
        "subvaultsCount": 1,
        "symbioticAdapter": "0x99D02C680f33ee693a2fa6bCf77DC8654313ecFe",
        "symbol": "pzETH",
        "totalAssets": "11087452369925601619099",
        "totalSupply": "11087452366527465133451",
        "withdrawalPause": false,
        "withdrawalStrategy": "0x3aA61E6196fb3eb1170E578ad924898624f54ad6"
      },
      "implementationNames": {
        "0x8c9532a60E0E7C6BbD2B2c1303F63aCE1c3E9811": "TransparentUpgradeableProxy",
        "0x0C5BC4C8406Fe03214D18bbf2962Ae2fa378c6f7": "MultiVault"
      }
    },
    {
      "name": "Renzo Restaked ETH Token",
      "address": "0xbf5495Efe5DB9ce00f80364C8B423567e58d2110",
      "type": "Contract",
      "sourceHashes": [
        "0xccb5b222f823953e2082d6174b99d09cb9046c862bb91c6fe6cb57e5289a9738",
        "0xa8e9f180ef81d5b199440aa49bc0e39c74dd551d29934400210f55f5ec3c10f6"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1701811163,
      "sinceBlock": 18722779,
      "values": {
        "_deprecated_paused": false,
        "$admin": "0x91625601e2BbBEb7171C40c79FadBCFbFf6A1982",
        "$implementation": "0x9bD289b14Dd6E0782aF82eEb3FCfeed4354CDA2C",
        "$pastUpgrades": [
          [
            "2023-12-05T21:19:23.000Z",
            "0xaf05c89f7b29f1dd7eff4bbf87807308ca2a3ad96a64e75011339fbd34c6a207",
            ["0x67D4E4031Efc2288df1E257CA2d5c596d8Bd86ae"]
          ],
          [
            "2023-12-06T03:06:35.000Z",
            "0x51426833f5f5564d438c83ad262717466fa45c5dad6812cee46773516de98606",
            ["0x1e756B7bCca7B26FB9D85344B3525F5559bbacb0"]
          ],
          [
            "2024-06-11T13:39:59.000Z",
            "0xe576365fd7cc2ed36e94225188d9c2a712681dab573a12d791eb22088da46408",
            ["0x680A7937c59b19E2d38b86Ef47e9C2e415043dED"]
          ],
          [
            "2025-04-11T19:24:11.000Z",
            "0xd2cac9721f19cf36cde7c119b676074bdb9014c6f470ed81275677c2b8f82715",
            ["0x9bD289b14Dd6E0782aF82eEb3FCfeed4354CDA2C"]
          ]
        ],
        "$tokenData": {
          "name": "Renzo Restaked ETH",
          "coingeckoId": "renzo-restaked-eth",
          "address": "0xbf5495Efe5DB9ce00f80364C8B423567e58d2110",
          "symbol": "ezETH",
          "decimals": 18,
          "deploymentTimestamp": 1701811163,
          "coingeckoListingTimestamp": 1706140800,
          "category": "other",
          "iconUrl": "https://coin-images.coingecko.com/coins/images/34753/large/Ezeth_logo_circle.png?1713496404",
          "chainId": 1,
          "supply": "zero",
          "source": "canonical"
        },
        "$upgradeCount": 4,
        "decimals": 18,
        "name": "Renzo Restaked ETH",
        "roleManager": "0x4994EFc62101A9e3F885d872514c2dC7b3235849",
        "symbol": "ezETH",
        "totalSupply": "318301186773211304041439"
      },
      "implementationNames": {
        "0xbf5495Efe5DB9ce00f80364C8B423567e58d2110": "TransparentUpgradeableProxy",
        "0x9bD289b14Dd6E0782aF82eEb3FCfeed4354CDA2C": "EzEthToken"
      }
    },
    {
      "name": "STASIS EURS Token",
      "address": "0xdB25f211AB05b1c97D595516F45794528a807ad8",
      "type": "Contract",
      "sourceHashes": [
        "0xf79815a7227d23a793e9e15c9e6f5dcdac105c2c8025ec498f9e54f4bb9ee2f2"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1529686012,
      "sinceBlock": 5835251,
      "values": {
        "$immutable": true,
        "$tokenData": {
          "name": "STASIS EURS Token",
          "coingeckoId": "stasis-eurs",
          "address": "0xdB25f211AB05b1c97D595516F45794528a807ad8",
          "symbol": "EURS",
          "decimals": 2,
          "deploymentTimestamp": 1529686012,
          "coingeckoListingTimestamp": 1573689600,
          "category": "stablecoin",
          "iconUrl": "https://coin-images.coingecko.com/coins/images/5164/large/EURS_300x300.png?1696505680",
          "chainId": 1,
          "supply": "zero",
          "source": "canonical"
        },
        "decimals": 2,
        "getFeeParameters": {
          "_fixedFee": 0,
          "_minVariableFee": 0,
          "_maxVariableFee": 0,
          "_variableFeeNumnerator": 0
        },
        "name": "STASIS EURS Token",
        "symbol": "EURS",
        "totalSupply": 12412594000
      },
      "implementationNames": {
        "0xdB25f211AB05b1c97D595516F45794528a807ad8": "EURSToken"
      }
    },
    {
      "name": "USDS Stablecoin Token",
      "address": "0xdC035D45d973E3EC169d2276DDab16f1e407384F",
      "type": "Contract",
      "sourceHashes": [
        "0xbbe53a68c0042f4050bdf21e8d16eee4688dd35d24e49740915f0a0cf994f0d6",
        "0x3511bc489974e8a833d7590187eaab4f8835886bdcb8fff1ea63b7b4caaab165"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1725290327,
      "sinceBlock": 20663730,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x1923DfeE706A8E78157416C29cBCCFDe7cdF4102",
        "$pastUpgrades": [
          [
            "2024-09-02T15:18:47.000Z",
            "0xdf7d4ba4114f654a4ef64f74099be3fc91358610078febe5be68af6cf257b21c",
            ["0x1923DfeE706A8E78157416C29cBCCFDe7cdF4102"]
          ]
        ],
        "$tokenData": {
          "name": "USDS Stablecoin",
          "coingeckoId": "usds",
          "address": "0xdC035D45d973E3EC169d2276DDab16f1e407384F",
          "symbol": "USDS",
          "decimals": 18,
          "deploymentTimestamp": 1725290327,
          "coingeckoListingTimestamp": 1727136000,
          "category": "stablecoin",
          "iconUrl": "https://coin-images.coingecko.com/coins/images/39926/large/usds.webp?1726666683",
          "chainId": 1,
          "supply": "zero",
          "source": "canonical"
        },
        "$upgradeCount": 1,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x2bc1b7e1bb385a0b6eeb599e6bf1dc875f0933b1a91bea26cf895ebdee2a5b56",
        "getImplementation": "0x1923DfeE706A8E78157416C29cBCCFDe7cdF4102",
        "name": "USDS Stablecoin",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "symbol": "USDS",
        "totalSupply": "3908267869075392717374632148",
        "UPGRADE_INTERFACE_VERSION": "5.0.0",
        "version": "1"
      },
      "implementationNames": {
        "0xdC035D45d973E3EC169d2276DDab16f1e407384F": "ERC1967Proxy",
        "0x1923DfeE706A8E78157416C29cBCCFDe7cdF4102": "Usds"
      }
    }
  ],
  "abis": {
    "0x0C5BC4C8406Fe03214D18bbf2962Ae2fa378c6f7": [
      "constructor(bytes32 name_, uint256 version_)",
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error AddressEmptyCode(address target)",
      "error AddressInsufficientBalance(address account)",
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error ERC4626ExceededMaxDeposit(address receiver, uint256 assets, uint256 max)",
      "error ERC4626ExceededMaxMint(address receiver, uint256 shares, uint256 max)",
      "error ERC4626ExceededMaxRedeem(address owner, uint256 shares, uint256 max)",
      "error ERC4626ExceededMaxWithdraw(address owner, uint256 assets, uint256 max)",
      "error FailedInnerCall()",
      "error InvalidInitialization()",
      "error MathOverflowedMulDiv()",
      "error NotInitializing()",
      "error ReentrancyGuardReentrantCall()",
      "error SafeERC20FailedOperation(address token)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event DefaultCollateralSet(address indexed defaultCollateral)",
      "event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)",
      "event DepositIntoCollateral(uint256 assets)",
      "event DepositPauseSet(bool paused, uint256 timestamp, address sender)",
      "event DepositStrategySet(address indexed depositStrategy)",
      "event DepositWhitelistSet(bool status, uint256 timestamp, address sender)",
      "event DepositorWhitelistStatusSet(address account, bool status, uint256 timestamp, address sender)",
      "event ERC4626AdapterSet(address indexed erc4626Adapter)",
      "event EigenLayerAdapterSet(address indexed eigenLayerAdapter)",
      "event Initialized(uint64 version)",
      "event LimitSet(uint256 limit, uint256 timestamp, address sender)",
      "event Rebalance(tuple(uint256 subvaultIndex, uint256 deposit, uint256 claimable, uint256 staked)[] data, uint256 timestamp)",
      "event RebalanceStrategySet(address indexed rebalanceStrategy)",
      "event ReferralDeposit(uint256 assets, address receiver, address referral)",
      "event RewardDataRemoved(uint256 indexed farmId)",
      "event RewardDataSet(uint256 indexed farmId, tuple(address distributionFarm, address curatorTreasury, address token, uint256 curatorFeeD6, uint8 protocol, bytes data) data)",
      "event RewardsPushed(uint256 indexed farmId, uint256 indexed rewardAmount, uint256 indexed curatorFee, uint256 timestamp)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SubvaultAdded(address indexed subvault, address withdrawalQueue, uint8 protocol, uint256 subvaultIndex)",
      "event SubvaultIndexChanged(address indexed subvault, uint256 oldIndex, uint256 newIndex)",
      "event SubvaultRemoved(address indexed subvault, uint256 subvaultIndex)",
      "event SymbioticAdapterSet(address indexed symbioticAdapter)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "event WithdrawalPauseSet(bool paused, uint256 timestamp, address sender)",
      "event WithdrawalStrategySet(address indexed withdrawalStrategy)",
      "function ADD_SUBVAULT_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function REBALANCE_ROLE() view returns (bytes32)",
      "function REMOVE_SUBVAULT_ROLE() view returns (bytes32)",
      "function SET_ADAPTER_ROLE() view returns (bytes32)",
      "function SET_DEFAULT_COLLATERAL_ROLE() view returns (bytes32)",
      "function SET_FARM_ROLE() view returns (bytes32)",
      "function SET_STRATEGY_ROLE() view returns (bytes32)",
      "function adapterOf(uint8 protocol) view returns (address adapter)",
      "function addSubvault(address vault, uint8 protocol)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function asset() view returns (address)",
      "function balanceOf(address account) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function defaultCollateral() view returns (address)",
      "function deposit(uint256 assets, address receiver, address referral) returns (uint256 shares)",
      "function deposit(uint256 assets, address receiver) returns (uint256)",
      "function depositPause() view returns (bool)",
      "function depositStrategy() view returns (address)",
      "function depositWhitelist() view returns (bool)",
      "function eigenLayerAdapter() view returns (address)",
      "function erc4626Adapter() view returns (address)",
      "function farmCount() view returns (uint256)",
      "function farmIdAt(uint256 index) view returns (uint256)",
      "function farmIds() view returns (uint256[])",
      "function farmIdsContains(uint256 farmId) view returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function indexOfSubvault(address subvault) view returns (uint256)",
      "function initialize(tuple(address admin, uint256 limit, bool depositPause, bool withdrawalPause, bool depositWhitelist, address asset, string name, string symbol, address depositStrategy, address withdrawalStrategy, address rebalanceStrategy, address defaultCollateral, address symbioticAdapter, address eigenLayerAdapter, address erc4626Adapter) initParams)",
      "function isDepositorWhitelisted(address account) view returns (bool)",
      "function limit() view returns (uint256)",
      "function maxDeposit(address account) view returns (uint256)",
      "function maxMint(address account) view returns (uint256)",
      "function maxRedeem(address account) view returns (uint256)",
      "function maxWithdraw(address account) view returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256)",
      "function name() view returns (string)",
      "function pauseDeposits()",
      "function pauseWithdrawals()",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function pushRewards(uint256 farmId, bytes farmData)",
      "function rebalance()",
      "function rebalanceStrategy() view returns (address)",
      "function redeem(uint256 shares, address receiver, address owner) returns (uint256)",
      "function removeSubvault(address subvault)",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function revokeRole(bytes32 role, address account)",
      "function rewardData(uint256 farmId) view returns (tuple(address distributionFarm, address curatorTreasury, address token, uint256 curatorFeeD6, uint8 protocol, bytes data))",
      "function setDefaultCollateral(address defaultCollateral_)",
      "function setDepositStrategy(address newDepositStrategy)",
      "function setDepositWhitelist(bool status)",
      "function setDepositorWhitelistStatus(address account, bool status)",
      "function setERC4626Adapter(address adapter_)",
      "function setEigenLayerAdapter(address adapter_)",
      "function setLimit(uint256 _limit)",
      "function setRebalanceStrategy(address newRebalanceStrategy)",
      "function setRewardsData(uint256 farmId, tuple(address distributionFarm, address curatorTreasury, address token, uint256 curatorFeeD6, uint8 protocol, bytes data) rewardData)",
      "function setSymbioticAdapter(address adapter_)",
      "function setWithdrawalStrategy(address newWithdrawalStrategy)",
      "function subvaultAt(uint256 index) view returns (tuple(uint8 protocol, address vault, address withdrawalQueue))",
      "function subvaultsCount() view returns (uint256)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbioticAdapter() view returns (address)",
      "function symbol() view returns (string)",
      "function totalAssets() view returns (uint256 assets_)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function unpauseDeposits()",
      "function unpauseWithdrawals()",
      "function withdraw(uint256 assets, address receiver, address owner) returns (uint256)",
      "function withdrawalPause() view returns (bool)",
      "function withdrawalStrategy() view returns (address)"
    ],
    "0x1923DfeE706A8E78157416C29cBCCFDe7cdF4102": [
      "constructor()",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "error UUPSUnauthorizedCallContext()",
      "error UUPSUnsupportedProxiableUUID(bytes32 slot)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Deny(address indexed usr)",
      "event Initialized(uint64 version)",
      "event Rely(address indexed usr)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Upgraded(address indexed implementation)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address) view returns (uint256)",
      "function burn(address from, uint256 value)",
      "function decimals() view returns (uint8)",
      "function deny(address usr)",
      "function getImplementation() view returns (address)",
      "function initialize()",
      "function mint(address to, uint256 value)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, bytes signature)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function proxiableUUID() view returns (bytes32)",
      "function rely(address usr)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function version() view returns (string)",
      "function wards(address) view returns (uint256)"
    ],
    "0x3AC19C48662729b30F3BC3cf66364070F8b26424": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x67f3228fD58f5A26D93a5dd0c6989b69c95618eB": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x8c9532a60E0E7C6BbD2B2c1303F63aCE1c3E9811": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x9bD289b14Dd6E0782aF82eEb3FCfeed4354CDA2C": [
      "constructor()",
      "error InvalidZeroInput()",
      "error NotEzETHMinterBurner()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint8 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function _deprecated_paused() view returns (bool)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(address from, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address _roleManager)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function roleManager() view returns (address)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0xB9321FA9b769E14c76F6c67B09ffA126BDD23ea9": [
      "constructor()",
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error ERC20InvalidUnderlying(address token)",
      "error InsufficientDeposit(uint256 amount)",
      "error InvalidIncentiveDuration(uint32 minDuration, uint32 maxDuration)",
      "error InvalidInitialization()",
      "error NoReward()",
      "error NotInitializing()",
      "error OnlyRequesterCanWithdrawToAnotherAddress(address requester)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error RequestDoesNotExist(uint256 requestId)",
      "error WithdrawalLocked(uint32 withdrawAfter)",
      "error ZeroAmount()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint64 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event StakingIncentiveUpdated(uint128 reward, uint32 incentiveEndsAt)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event WithdrawalDelayChanged(uint256 newWithdrawalDelay)",
      "event WithdrawalRequestProcessed(uint256 indexed requestId, address indexed to)",
      "event WithdrawalRequested(address indexed requester, uint256 indexed requestId, uint128 redeemAmount, uint128 withdrawalAmount, uint32 withdrawAfter)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function batchWithdrawTo(address account, uint256[] requestIds)",
      "function calculateWithdrawalAmount(uint256 redeemAmount) view returns (uint128)",
      "function changeWithdrawalDelay(uint32 newWithdrawalDelay)",
      "function decimals() view returns (uint8)",
      "function depositFor(address account, uint256 amount) returns (bool)",
      "function exchangeRate() view returns (uint128)",
      "function incentiveEndsAt() view returns (uint32)",
      "function incentiveStartedAt() view returns (uint32)",
      "function initialize(address underlyingToken_, string name_, string symbol_, uint32 withdrawalDelay_)",
      "function name() view returns (string)",
      "function nextWithdrawalRequestId() view returns (uint256)",
      "function owner() view returns (address)",
      "function recover(address account) returns (uint256 recoveredAmount)",
      "function renounceOwnership()",
      "function requestWithdrawal(uint128 redeemAmount) returns (uint256 requestId)",
      "function reward() view returns (uint128)",
      "function rewardRate() view returns (uint256)",
      "function symbol() view returns (string)",
      "function totalRequestedAmount() view returns (uint128)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function underlying() view returns (address)",
      "function underlyingBalanceOf(address account) view returns (uint256)",
      "function updateStakingIncentive(uint128 extraReward, uint32 incentiveDuration)",
      "function withdrawTo(address account, uint256 requestId) returns (bool)",
      "function withdrawalDelay() view returns (uint32)",
      "function withdrawalRequests(uint256) view returns (uint128 value, address requester, uint32 withdrawAfter)"
    ],
    "0xbf5495Efe5DB9ce00f80364C8B423567e58d2110": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xdB25f211AB05b1c97D595516F45794528a807ad8": [
      "function freezeTransfers() payable",
      "function name() view returns (string)",
      "function approve(address _spender, uint256 _value) payable returns (bool success)",
      "function setOwner(address _newOwner)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address _from, address _to, uint256 _value) payable returns (bool)",
      "function decimals() view returns (uint8)",
      "function unfreezeTransfers() payable",
      "function getFeeParameters() view returns (uint256 _fixedFee, uint256 _minVariableFee, uint256 _maxVariableFee, uint256 _variableFeeNumnerator)",
      "function burnTokens(uint256 _value) payable returns (bool)",
      "function balanceOf(address _owner) view returns (uint256 balance)",
      "function nonce(address _owner) view returns (uint256)",
      "function createTokens(uint256 _value) payable returns (bool)",
      "function symbol() view returns (string)",
      "function calculateFee(uint256 _amount) view returns (uint256 _fee)",
      "function flags(address _address) view returns (uint256)",
      "function setFeeCollector(address _newFeeCollector) payable",
      "function transfer(address _to, uint256 _value) payable returns (bool)",
      "function setFlags(address _address, uint256 _flags) payable",
      "function delegatedTransfer(address _to, uint256 _value, uint256 _fee, uint256 _nonce, uint8 _v, bytes32 _r, bytes32 _s) payable returns (bool)",
      "function setDelegate(address _delegate)",
      "function setFeeParameters(uint256 _fixedFee, uint256 _minVariableFee, uint256 _maxVariableFee, uint256 _variableFeeNumerator) payable",
      "function allowance(address _owner, address _spender) view returns (uint256 remaining)",
      "constructor(address _feeCollector)",
      "event Freeze()",
      "event Unfreeze()",
      "event FeeChange(uint256 fixedFee, uint256 minVariableFee, uint256 maxVariableFee, uint256 variableFeeNumerator)",
      "event Delegation(address delegate)",
      "event Transfer(address indexed _from, address indexed _to, uint256 _value)",
      "event Approval(address indexed _owner, address indexed _spender, uint256 _value)"
    ],
    "0xdC035D45d973E3EC169d2276DDab16f1e407384F": [
      "constructor(address implementation, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "event Upgraded(address indexed implementation)"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d"
  },
  "permissionsConfigHash": "0xbb9928171515442daaf8942f1aa78d2d32b895dadcdab43378a185ff2838ab55"
}
