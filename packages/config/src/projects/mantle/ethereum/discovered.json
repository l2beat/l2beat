{
  "name": "mantle",
  "chain": "ethereum",
  "blockNumber": 22081896,
  "configHash": "0x3b976fc1bef115648cb51fd7951081d85155eab2c4249889eaae484640363763",
  "entries": [
    {
      "address": "0x000000000000000000000000000000000000dEaD",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x00da2F87c56C3a19BD863613995705095F55b524",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "MantleTokenProxyAdmin",
      "address": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x68f689a23d3badd91255602a1eb13d4789baedc16d904c3103244642fc78ca8f"
      ],
      "proxyType": "immutable",
      "displayName": "ProxyAdmin",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354"
        }
      ],
      "sinceTimestamp": 1687241639,
      "sinceBlock": 17519057,
      "values": {
        "$immutable": true,
        "owner": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "address": "0x207E804758e28F2b3fD6E4219671B327100b82f8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "sequence",
          "from": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf"
        }
      ]
    },
    {
      "name": "MantleEngineeringMultisig",
      "address": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "challenge",
          "from": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481"
        },
        {
          "permission": "guard",
          "from": "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1686902471,
      "sinceBlock": 17491078,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xC37642355c18ec9c3b3268AAC67e33516aa115eb",
          "0x207E804758e28F2b3fD6E4219671B327100b82f8",
          "0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317",
          "0x00da2F87c56C3a19BD863613995705095F55b524",
          "0xbE73dea9c8DcDdB6b03F7e5797b85982065fe34e",
          "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8",
          "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a"
        ],
        "$threshold": 3,
        "domainSeparator": "0x509138b8efbf4ec65dfd2396c0fbf689e8a0193b00f12ce81d154ffd0de8f6af",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 7 (43%)",
        "nonce": 114,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "address": "0x3000BE80ad204D327990eB403654aCd1Eaa8eCeb",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L2OutputOracle",
      "address": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481",
      "type": "Contract",
      "template": "opstack/L2OutputOracle",
      "sourceHashes": [
        "0x2cdcfef705094aaac53d507bad64d27b48ea5a9c11a7fadffacc192aab7a823f",
        "0x45368d302fba850124115aa8ee67238f47d47d89c2b1b8c5dfd39818369e6cea"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contains a list of proposed state roots which Proposers assert to be a result of block execution. Currently only the PROPOSER address can submit new state roots.",
      "issuedPermissions": [
        {
          "permission": "challenge",
          "to": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
          "via": []
        },
        {
          "permission": "propose",
          "to": "0x6667961f5e9C98A76a48767522150889703Ed77D",
          "via": []
        },
        {
          "permission": "upgrade",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        }
      ],
      "ignoreInWatchMode": [
        "nextBlockNumber",
        "nextOutputIndex",
        "latestBlockNumber",
        "latestOutputIndex"
      ],
      "sinceTimestamp": 1710439931,
      "sinceBlock": 19434935,
      "values": {
        "$admin": "0xca35F8338054739D138884685e08b39EE2217794",
        "$implementation": "0xD1230865641561653406906Fb08873F011c19080",
        "$pastUpgrades": [
          [
            "2024-03-15T08:19:35.000Z",
            "0xa5fff128e999954c7dfe8e3360d0844e439425124922e85cd32fdcf2e3582247",
            ["0xD1230865641561653406906Fb08873F011c19080"]
          ]
        ],
        "$upgradeCount": 1,
        "CHALLENGER": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "deletedOutputs": [],
        "FINALIZATION_PERIOD_SECONDS": 604800,
        "L2_BLOCK_TIME": 2,
        "latestBlockNumber": 77132546,
        "latestOutputIndex": 8866,
        "nextBlockNumber": 77134346,
        "nextOutputIndex": 8867,
        "PROPOSER": "0x6667961f5e9C98A76a48767522150889703Ed77D",
        "startingBlockNumber": 61171946,
        "startingTimestamp": 1710474204,
        "SUBMISSION_INTERVAL": 1800,
        "version": "1.3.0"
      },
      "fieldMeta": {
        "FINALIZATION_PERIOD_SECONDS": {
          "description": "Challenge period (Number of seconds until a state root is finalized)."
        },
        "proposer": { "severity": "HIGH" },
        "challenger": { "severity": "HIGH" },
        "deletedOutputs": { "severity": "HIGH" }
      },
      "derivedName": "L2OutputOracle",
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "L1MantleToken",
      "address": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
      "type": "Contract",
      "sourceHashes": [
        "0x36a2777510f3b20063560bdcb7f657da283bcfdc484a19b0a0f77d18f6a8b5e1",
        "0x13e07c3c64aef03cfd7f5c01b2b1b443fd1dfb19c4128447fe316bb5fcd128cd"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "MNT token contract: Mantle uses Mantle (MNT) as the designated gas token, allowing users pay for gas in MNT.",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
              "delay": 86400
            },
            { "address": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd" }
          ]
        }
      ],
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1687241795,
      "sinceBlock": 17519070,
      "values": {
        "$admin": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd",
        "$implementation": "0xCd368c1d80120b0Dd92447c87eB570154f8e685c",
        "$pastUpgrades": [
          [
            "2023-06-20T06:16:35.000Z",
            "0x8f7867724cfba4b9b1b19ca140711809b40dda9ae245caf7bcff9473a5a7e45e",
            ["0xCd368c1d80120b0Dd92447c87eB570154f8e685c"]
          ]
        ],
        "$upgradeCount": 1,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x4657b7bac12b34fb80f1848c560d6e440dfccdffe8b83f2dc958a534c89b0622",
        "MIN_MINT_INTERVAL": 31536000,
        "MINT_CAP_DENOMINATOR": 10000,
        "MINT_CAP_MAX_NUMERATOR": 200,
        "mintCapNumerator": 0,
        "name": "Mantle",
        "nextMint": 1718777795,
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "symbol": "MNT",
        "totalSupply": "6219316794990000000000000000"
      },
      "derivedName": "L1MantleToken"
    },
    {
      "address": "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SystemConfig",
      "address": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf",
      "type": "Contract",
      "template": "opstack/SystemConfig",
      "sourceHashes": [
        "0x2cdcfef705094aaac53d507bad64d27b48ea5a9c11a7fadffacc192aab7a823f",
        "0xb2a3bda11c08328ecb46ec5789f3264be5d816bc218a5024a4cafd1c59017160"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.",
      "issuedPermissions": [
        {
          "permission": "interact",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "description": "it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system.",
          "via": []
        },
        {
          "permission": "sequence",
          "to": "0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749",
          "via": []
        },
        {
          "permission": "upgrade",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        }
      ],
      "ignoreInWatchMode": ["scalar", "overhead"],
      "sinceTimestamp": 1710440051,
      "sinceBlock": 19434945,
      "values": {
        "$admin": "0xca35F8338054739D138884685e08b39EE2217794",
        "$implementation": "0x6Dbb7D9C5dC60844B8CF442ddC6Be081c060B2E3",
        "$pastUpgrades": [
          [
            "2024-03-15T01:47:47.000Z",
            "0x667a55493b70812eedb69586be570fa87bb305ff046ebd1419cdc71163f770ac",
            ["0x6Dbb7D9C5dC60844B8CF442ddC6Be081c060B2E3"]
          ]
        ],
        "$upgradeCount": 1,
        "baseFee": 20000000,
        "batcherHash": "0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749",
        "gasLimit": 200000000000,
        "minimumGasLimit": 21000000,
        "opStackDA": {
          "isSequencerSendingBlobTx": false,
          "isUsingCelestia": false,
          "isUsingEigenDA": false
        },
        "overhead": 188,
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "resourceConfig": {
          "maxResourceLimit": 20000000,
          "elasticityMultiplier": 10,
          "baseFeeMaxChangeDenominator": 8,
          "minimumBaseFee": 1000000000,
          "systemTxMaxGas": 1000000,
          "maximumBaseFee": "340282366920938463463374607431768211455"
        },
        "scalar": 10000,
        "sequencerInbox": "0xFFEEDDCcBbAA0000000000000000000000000000",
        "UNSAFE_BLOCK_SIGNER_SLOT": "0x65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
        "unsafeBlockSigner": "0xAAC979CBeE00C75C35DE9a2635d8B75940F466dc",
        "version": "1.3.0",
        "VERSION": 0
      },
      "fieldMeta": {
        "gasLimit": {
          "severity": "LOW",
          "description": "Gas limit for blocks on L2."
        }
      },
      "derivedName": "SystemConfig",
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "address": "0x4A42577Bf6e51127c490F3639F5c8B90Ec53f5B1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x4b6CFecA60f8BDF8AbCEE10f033f17cb2a928498",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "MantleSecurityMultisig",
      "address": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf",
          "description": "it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system."
        },
        {
          "permission": "interact",
          "from": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
          "description": "cancel queued transactions."
        },
        {
          "permission": "interact",
          "from": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
          "description": "execute transactions that are ready."
        },
        {
          "permission": "interact",
          "from": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
          "description": "manage all access control roles.",
          "via": [
            {
              "address": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
              "delay": 86400
            }
          ]
        },
        {
          "permission": "interact",
          "from": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
          "description": "manage all access control roles."
        },
        {
          "permission": "interact",
          "from": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
          "description": "propose transactions."
        },
        {
          "permission": "interact",
          "from": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
          "description": "set and change address mappings.",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        },
        {
          "permission": "upgrade",
          "from": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        },
        {
          "permission": "upgrade",
          "from": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
          "via": [
            { "address": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd" },
            {
              "address": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
              "delay": 86400
            }
          ]
        },
        {
          "permission": "upgrade",
          "from": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        },
        {
          "permission": "upgrade",
          "from": "0x95fC37A27a2f68e3A647CDc081F0A89bb47c3012",
          "description": "upgrading the bridge implementation can give access to all funds escrowed therein.",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        },
        {
          "permission": "upgrade",
          "from": "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
          "delay": 86400
        },
        {
          "permission": "act",
          "from": "0xca35F8338054739D138884685e08b39EE2217794"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1683509999,
      "sinceBlock": 17212573,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xf73546Da2F971bD0Ed1b3c5F9C01092180Db5089",
          "0x61Af7a48B0EeA8481E5A055A35f829d0e8505fE3",
          "0x50dCf0B40E593301aA75DcB54f36f379607595CE",
          "0xA3C8f55BE8aF7402d5192b343E8BfE4BB9795C2F",
          "0xdC3644e172813ADbF6D130262e2416975Ac48Af3",
          "0x4A42577Bf6e51127c490F3639F5c8B90Ec53f5B1",
          "0x4b6CFecA60f8BDF8AbCEE10f033f17cb2a928498",
          "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8",
          "0xf5b16239f88B54894e03e0293d3d7FDdEb9f9070",
          "0xe75D7324d6BC4E70A200c5E268160332F43b2d2B",
          "0x3000BE80ad204D327990eB403654aCd1Eaa8eCeb",
          "0xc4143711aA5bd6d37F1b0A690120AA5859e32A93",
          "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a"
        ],
        "$threshold": 6,
        "domainSeparator": "0xc2040462c2819b7e5f0c5e3926088f96c882d435e0b03cef5b72ef73cdfaf7d4",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "6 of 13 (46%)",
        "nonce": 54,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "address": "0x50dCf0B40E593301aA75DcB54f36f379607595CE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x61Af7a48B0EeA8481E5A055A35f829d0e8505fE3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "TimelockController",
      "address": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
      "type": "Contract",
      "template": "global/TimelockController",
      "sourceHashes": [
        "0xc4d0d6be09d9d589447b5e4983d9fb98fc772a22d463cef44caa7bd943eff26d"
      ],
      "proxyType": "immutable",
      "description": "A timelock with access control. The current minimum delay is 1d.",
      "issuedPermissions": [
        {
          "permission": "interact",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "description": "cancel queued transactions.",
          "via": []
        },
        {
          "permission": "interact",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "description": "execute transactions that are ready.",
          "via": []
        },
        {
          "permission": "interact",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "description": "manage all access control roles.",
          "via": []
        },
        {
          "permission": "interact",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "description": "manage all access control roles.",
          "via": [
            {
              "address": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
              "delay": 86400
            }
          ]
        },
        {
          "permission": "interact",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "description": "propose transactions.",
          "via": []
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd"
        },
        {
          "permission": "interact",
          "from": "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
          "description": "manage all access control roles."
        }
      ],
      "sinceTimestamp": 1739349323,
      "sinceBlock": 21829257,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
              "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"]
          }
        },
        "Canceller": ["0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"],
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdminAC": [
          "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F",
          "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
        ],
        "Executor": ["0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"],
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 86400,
        "getMinDelayFormatted": "1d",
        "Proposer": ["0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"],
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1"
      },
      "derivedName": "TimelockController"
    },
    {
      "address": "0x6667961f5e9C98A76a48767522150889703Ed77D",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "propose",
          "from": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481"
        }
      ]
    },
    {
      "name": "L1CrossDomainMessenger",
      "address": "0x676A795fe6E43C17c668de16730c3F690FEB7120",
      "type": "Contract",
      "template": "opstack/L1CrossDomainMessenger",
      "sourceHashes": [
        "0x6e4b297b822bdda2bb8bbf4dde360ee51379af5a0de55c0d726a2d7b68791bf7",
        "0x430d270834512dafe98bf268d6912f12a10c5a6287e7463830a22e4616dd63a0"
      ],
      "proxyType": "resolved delegate proxy",
      "description": "Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function.",
      "ignoreInWatchMode": ["messageNonce"],
      "sinceTimestamp": 1687953527,
      "sinceBlock": 17577670,
      "values": {
        "$immutable": false,
        "$implementation": "0xb8DE82551fA4BA3bE4B3d9097763EDBeED541308",
        "$pastUpgrades": [
          [
            "2023-06-28T13:13:59.000Z",
            "0x3ef2116cdd9366a646b6625affcf0cbe96bb3c59c3ffc629432d3f79ff1f886c",
            ["0x4692363048d0F32a2dE7816860D48fff0c61B24B"]
          ],
          [
            "2024-03-15T01:47:47.000Z",
            "0x667a55493b70812eedb69586be570fa87bb305ff046ebd1419cdc71163f770ac",
            ["0x0000000000000000000000000000000000000000"]
          ],
          [
            "2024-03-15T08:19:35.000Z",
            "0xa5fff128e999954c7dfe8e3360d0844e439425124922e85cd32fdcf2e3582247",
            ["0xb8DE82551fA4BA3bE4B3d9097763EDBeED541308"]
          ]
        ],
        "$upgradeCount": 3,
        "HASH_MESSAGE_BASE_GAS": 800,
        "HASH_MESSAGE_GAS_PER_BYTE": 2,
        "L1_MNT_ADDRESS": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "MESSAGE_VERSION": 1,
        "messageNonce": "1766847064778384329583297500742918515827483896875618958121606201292638910",
        "MIN_GAS_CALLDATA_OVERHEAD": 16,
        "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR": 63,
        "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR": 64,
        "OTHER_MESSENGER": "0x4200000000000000000000000000000000000007",
        "PORTAL": "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb",
        "RELAY_CALL_OVERHEAD": 40000,
        "RELAY_CONSTANT_OVERHEAD": 200000,
        "RELAY_GAS_CHECK_BUFFER": 55000,
        "RELAY_RESERVED_GAS": 90000,
        "ResolvedDelegateProxy_addressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "ResolvedDelegateProxy_implementationName": "BVM_L1CrossDomainMessenger",
        "version": "1.5.0"
      },
      "derivedName": "L1CrossDomainMessenger",
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "name": "AddressManager",
      "address": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
      "type": "Contract",
      "template": "opstack/AddressManager",
      "sourceHashes": [
        "0x763c5728a19538783edf38c17731f9cf79ff6f38bfa4bce61333cef0aac5452e"
      ],
      "proxyType": "immutable",
      "description": "Legacy contract used to manage a mapping of string names to addresses. Modern OP stack uses a different standard proxy system instead, but this contract is still necessary for backwards compatibility with several older contracts.",
      "issuedPermissions": [
        {
          "permission": "interact",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "description": "set and change address mappings.",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        }
      ],
      "sinceTimestamp": 1687951883,
      "sinceBlock": 17577535,
      "values": {
        "$immutable": true,
        "owner": "0xca35F8338054739D138884685e08b39EE2217794"
      },
      "derivedName": "Lib_AddressManager"
    },
    {
      "address": "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1StandardBridge",
      "address": "0x95fC37A27a2f68e3A647CDc081F0A89bb47c3012",
      "type": "Contract",
      "template": "opstack/L1StandardBridge",
      "sourceHashes": [
        "0x18e98a64fbfe011a7514d7a547900c02a3e0f9a49ab3413d517fd7e0e3c539dd",
        "0x1cd5cb2fa146b2a5dfb07279a52cd93855b268115912df60292b18394cc532e8"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main entry point to deposit ERC20 tokens from host chain to this chain.",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "description": "upgrading the bridge implementation can give access to all funds escrowed therein.",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        }
      ],
      "sinceTimestamp": 1687954103,
      "sinceBlock": 17577718,
      "values": {
        "$admin": "0xca35F8338054739D138884685e08b39EE2217794",
        "$implementation": "0xb4133552BA49dFb60DA6eb5cA0102d0f94ce071f",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "L1_MNT_ADDRESS": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "l2TokenBridge": "0x4200000000000000000000000000000000000010",
        "messenger": "0x676A795fe6E43C17c668de16730c3F690FEB7120",
        "MESSENGER": "0x676A795fe6E43C17c668de16730c3F690FEB7120",
        "OTHER_BRIDGE": "0x4200000000000000000000000000000000000010",
        "version": "1.1.0"
      },
      "derivedName": "L1StandardBridge",
      "category": { "name": "Canonical Bridges", "priority": 2 }
    },
    {
      "address": "0xA3C8f55BE8aF7402d5192b343E8BfE4BB9795C2F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xAAC979CBeE00C75C35DE9a2635d8B75940F466dc",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xbE73dea9c8DcDdB6b03F7e5797b85982065fe34e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xC37642355c18ec9c3b3268AAC67e33516aa115eb",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xc4143711aA5bd6d37F1b0A690120AA5859e32A93",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OptimismPortal",
      "address": "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb",
      "type": "Contract",
      "template": "opstack/OptimismPortal",
      "sourceHashes": [
        "0x2cdcfef705094aaac53d507bad64d27b48ea5a9c11a7fadffacc192aab7a823f",
        "0x3a064711ad01291b3644b5f657fd8317cd07f19222c9f216e25557d4d69ea295"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main entry point to deposit funds from host chain to this chain. It also allows to prove and finalize withdrawals.",
      "issuedPermissions": [
        {
          "permission": "guard",
          "to": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
          "via": []
        },
        {
          "permission": "upgrade",
          "to": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        }
      ],
      "ignoreInWatchMode": ["params"],
      "sinceTimestamp": 1710439967,
      "sinceBlock": 19434938,
      "values": {
        "$admin": "0xca35F8338054739D138884685e08b39EE2217794",
        "$implementation": "0xe1399f54ba2597b4EaDA9E3450c34D393fb131A7",
        "$pastUpgrades": [
          [
            "2024-03-15T08:19:35.000Z",
            "0xa5fff128e999954c7dfe8e3360d0844e439425124922e85cd32fdcf2e3582247",
            ["0xe1399f54ba2597b4EaDA9E3450c34D393fb131A7"]
          ]
        ],
        "$upgradeCount": 1,
        "GUARDIAN": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "L1_MNT_ADDRESS": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "L2_ORACLE": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481",
        "l2Sender": "0x000000000000000000000000000000000000dEaD",
        "params": {
          "prevBaseFee": 1000000000,
          "prevBoughtGas": 593078,
          "prevBlockNum": 22081766
        },
        "paused": false,
        "SYSTEM_CONFIG": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf",
        "version": "1.7.0"
      },
      "derivedName": "OptimismPortal",
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xca35F8338054739D138884685e08b39EE2217794",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x96d2f0fa1bd83ebd61ba6a2351c64c7fda7aa580b11ea67bb6bf4338e5c28512"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
          "description": "set and change address mappings."
        },
        {
          "permission": "upgrade",
          "from": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481"
        },
        {
          "permission": "upgrade",
          "from": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf"
        },
        {
          "permission": "upgrade",
          "from": "0x95fC37A27a2f68e3A647CDc081F0A89bb47c3012",
          "description": "upgrading the bridge implementation can give access to all funds escrowed therein."
        },
        {
          "permission": "upgrade",
          "from": "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb"
        }
      ],
      "sinceTimestamp": 1710439895,
      "sinceBlock": 19434932,
      "values": {
        "$immutable": true,
        "addressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "isUpgrading": false,
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "address": "0xdC3644e172813ADbF6D130262e2416975Ac48Af3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xe75D7324d6BC4E70A200c5E268160332F43b2d2B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xf5b16239f88B54894e03e0293d3d7FDdEb9f9070",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xf73546Da2F971bD0Ed1b3c5F9C01092180Db5089",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xFFEEDDCcBbAA0000000000000000000000000000",
      "type": "EOA",
      "proxyType": "EOA"
    }
  ],
  "abis": {
    "0x0cac2B1a172ac24012621101634DD5ABD6399ADd": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9": [
      "constructor(address _singleton)"
    ],
    "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x3c3a81e81dc49A522A592e7622A7E711c06bf354": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x427Ea0710FA5252057F0D88274f7aeb308386cAf": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f": [
      "constructor(address _singleton)"
    ],
    "0x65331ff6F8B0fc2612F2a0deBD9d04Fce60a447F": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "error AccessControlBadConfirmation()",
      "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
      "error FailedCall()",
      "error TimelockInsufficientDelay(uint256 delay, uint256 minDelay)",
      "error TimelockInvalidOperationLength(uint256 targets, uint256 payloads, uint256 values)",
      "error TimelockUnauthorizedCaller(address caller)",
      "error TimelockUnexecutedPredecessor(bytes32 predecessorId)",
      "error TimelockUnexpectedOperationState(bytes32 operationId, bytes32 expectedStates)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getOperationState(bytes32 id) view returns (uint8)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address callerConfirmation)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x676A795fe6E43C17c668de16730c3F690FEB7120": [
      "constructor(address _libAddressManager, string _implementationName)"
    ],
    "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42": [
      "event AddressSet(string indexed _name, address _newAddress, address _oldAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getAddress(string _name) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function transferOwnership(address newOwner)"
    ],
    "0x6Dbb7D9C5dC60844B8CF442ddC6Be081c060B2E3": [
      "constructor(address _owner, uint256 _overhead, uint256 _scalar, bytes32 _batcherHash, uint64 _gasLimit, uint256 _baseFee, address _unsafeBlockSigner, tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config)",
      "event ConfigUpdate(uint256 indexed version, uint8 indexed updateType, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UNSAFE_BLOCK_SIGNER_SLOT() view returns (bytes32)",
      "function VERSION() view returns (uint256)",
      "function baseFee() view returns (uint256)",
      "function batcherHash() view returns (bytes32)",
      "function gasLimit() view returns (uint64)",
      "function initialize(address _owner, uint256 _overhead, uint256 _scalar, bytes32 _batcherHash, uint64 _gasLimit, uint256 _baseFee, address _unsafeBlockSigner, tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config)",
      "function minimumGasLimit() view returns (uint64)",
      "function overhead() view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function resourceConfig() view returns (tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee))",
      "function scalar() view returns (uint256)",
      "function setBaseFee(uint256 _baseFee)",
      "function setBatcherHash(bytes32 _batcherHash)",
      "function setGasConfig(uint256 _overhead, uint256 _scalar)",
      "function setGasLimit(uint64 _gasLimit)",
      "function setResourceConfig(tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config)",
      "function setUnsafeBlockSigner(address _unsafeBlockSigner)",
      "function transferOwnership(address newOwner)",
      "function unsafeBlockSigner() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x95fC37A27a2f68e3A647CDc081F0A89bb47c3012": [
      "constructor(address _owner)",
      "function getImplementation() returns (address)",
      "function getOwner() returns (address)",
      "function setCode(bytes _code)",
      "function setOwner(address _owner)",
      "function setStorage(bytes32 _key, bytes32 _value)"
    ],
    "0xb4133552BA49dFb60DA6eb5cA0102d0f94ce071f": [
      "constructor(address _messenger, address _l1mnt)",
      "event ERC20BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20DepositInitiated(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20WithdrawalFinalized(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ETHBridgeFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHBridgeInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHDepositInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHWithdrawalFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event MNTBridgeFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event MNTBridgeInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event MNTDepositInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event MNTWithdrawalFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "function L1_MNT_ADDRESS() view returns (address)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC20(address _localToken, address _remoteToken, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC20To(address _localToken, address _remoteToken, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeMNT(uint256 _amount, uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeMNTTo(address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData) payable",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function depositETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function depositMNT(uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositMNTTo(address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData) payable",
      "function deposits(address, address) view returns (uint256)",
      "function finalizeBridgeERC20(address _localToken, address _remoteToken, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeBridgeETH(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function finalizeBridgeMNT(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeETHWithdrawal(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function finalizeMantleWithdrawal(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function l2TokenBridge() view returns (address)",
      "function messenger() view returns (address)",
      "function version() view returns (string)"
    ],
    "0xb8DE82551fA4BA3bE4B3d9097763EDBeED541308": [
      "constructor(address _portal, address l1mnt)",
      "event FailedRelayedMessage(bytes32 indexed msgHash)",
      "event Initialized(uint8 version)",
      "event RelayedMessage(bytes32 indexed msgHash)",
      "event SentMessage(address indexed target, address sender, bytes message, uint256 messageNonce, uint256 gasLimit)",
      "event SentMessageExtension1(address indexed sender, uint256 mntValue, uint256 ethValue)",
      "function HASH_MESSAGE_BASE_GAS() view returns (uint64)",
      "function HASH_MESSAGE_GAS_PER_BYTE() view returns (uint64)",
      "function L1_MNT_ADDRESS() view returns (address)",
      "function MESSAGE_VERSION() view returns (uint16)",
      "function MIN_GAS_CALLDATA_OVERHEAD() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR() view returns (uint64)",
      "function OTHER_MESSENGER() view returns (address)",
      "function PORTAL() view returns (address)",
      "function RELAY_CALL_OVERHEAD() view returns (uint64)",
      "function RELAY_CONSTANT_OVERHEAD() view returns (uint64)",
      "function RELAY_GAS_CHECK_BUFFER() view returns (uint64)",
      "function RELAY_RESERVED_GAS() view returns (uint64)",
      "function baseGas(bytes _message, uint32 _minGasLimit) pure returns (uint64)",
      "function failedMessages(bytes32) view returns (bool)",
      "function initialize()",
      "function messageNonce() view returns (uint256)",
      "function relayMessage(uint256 _nonce, address _sender, address _target, uint256 _mntValue, uint256 _ethValue, uint256 _minGasLimit, bytes _message) payable",
      "function sendMessage(address _target, bytes _message, uint32 _minGasLimit) payable",
      "function sendMessage(uint256 _mntAmount, address _target, bytes _message, uint32 _minGasLimit) payable",
      "function successfulMessages(bytes32) view returns (bool)",
      "function version() view returns (string)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xca35F8338054739D138884685e08b39EE2217794": [
      "constructor(address _owner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addressManager() view returns (address)",
      "function changeProxyAdmin(address _proxy, address _newAdmin)",
      "function getProxyAdmin(address _proxy) view returns (address)",
      "function getProxyImplementation(address _proxy) view returns (address)",
      "function implementationName(address) view returns (string)",
      "function isUpgrading() view returns (bool)",
      "function owner() view returns (address)",
      "function proxyType(address) view returns (uint8)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function setAddressManager(address _address)",
      "function setImplementationName(address _address, string _name)",
      "function setProxyType(address _address, uint8 _type)",
      "function setUpgrading(bool _upgrading)",
      "function transferOwnership(address newOwner)",
      "function upgrade(address _proxy, address _implementation)",
      "function upgradeAndCall(address _proxy, address _implementation, bytes _data) payable"
    ],
    "0xCd368c1d80120b0Dd92447c87eB570154f8e685c": [
      "constructor()",
      "error MantleToken_ImproperlyInitialized()",
      "error MantleToken_MintAmountTooLarge(uint256 amount, uint256 maximumAmount)",
      "error MantleToken_MintCapNumeratorTooLarge(uint256 numerator, uint256 maximumNumerator)",
      "error MantleToken_NextMintTimestampNotElapsed(uint256 currentTimestamp, uint256 nextMintTimestamp)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event Initialized(uint8 version)",
      "event MintCapNumeratorChanged(address indexed from, uint256 previousMintCapNumerator, uint256 newMintCapNumerator)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function MINT_CAP_DENOMINATOR() view returns (uint256)",
      "function MINT_CAP_MAX_NUMERATOR() view returns (uint256)",
      "function MIN_MINT_INTERVAL() view returns (uint256)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function checkpoints(address account, uint32 pos) view returns (tuple(uint32 fromBlock, uint224 votes))",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address account) view returns (address)",
      "function getPastTotalSupply(uint256 blockNumber) view returns (uint256)",
      "function getPastVotes(address account, uint256 blockNumber) view returns (uint256)",
      "function getVotes(address account) view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(uint256 _initialSupply, address _owner)",
      "function mint(address _recipient, uint256 _amount)",
      "function mintCapNumerator() view returns (uint256)",
      "function name() view returns (string)",
      "function nextMint() view returns (uint256)",
      "function nonces(address owner) view returns (uint256)",
      "function numCheckpoints(address account) view returns (uint32)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceOwnership()",
      "function setMintCapNumerator(uint256 _mintCapNumerator)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0xD1230865641561653406906Fb08873F011c19080": [
      "constructor(uint256 _submissionInterval, uint256 _l2BlockTime, uint256 _startingBlockNumber, uint256 _startingTimestamp, address _proposer, address _challenger, uint256 _finalizationPeriodSeconds)",
      "event Initialized(uint8 version)",
      "event OutputProposed(bytes32 indexed outputRoot, uint256 indexed l2OutputIndex, uint256 indexed l2BlockNumber, uint256 l1Timestamp)",
      "event OutputsDeleted(uint256 indexed prevNextOutputIndex, uint256 indexed newNextOutputIndex)",
      "function CHALLENGER() view returns (address)",
      "function FINALIZATION_PERIOD_SECONDS() view returns (uint256)",
      "function L2_BLOCK_TIME() view returns (uint256)",
      "function PROPOSER() view returns (address)",
      "function SUBMISSION_INTERVAL() view returns (uint256)",
      "function computeL2Timestamp(uint256 _l2BlockNumber) view returns (uint256)",
      "function deleteL2Outputs(uint256 _l2OutputIndex)",
      "function getL2Output(uint256 _l2OutputIndex) view returns (tuple(bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputAfter(uint256 _l2BlockNumber) view returns (tuple(bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputIndexAfter(uint256 _l2BlockNumber) view returns (uint256)",
      "function initialize(uint256 _startingBlockNumber, uint256 _startingTimestamp)",
      "function latestBlockNumber() view returns (uint256)",
      "function latestOutputIndex() view returns (uint256)",
      "function nextBlockNumber() view returns (uint256)",
      "function nextOutputIndex() view returns (uint256)",
      "function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1BlockHash, uint256 _l1BlockNumber)",
      "function startingBlockNumber() view returns (uint256)",
      "function startingTimestamp() view returns (uint256)",
      "function version() view returns (string)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xe1399f54ba2597b4EaDA9E3450c34D393fb131A7": [
      "constructor(address _l2Oracle, address _guardian, bool _paused, address _config, address _l1MNT)",
      "event Initialized(uint8 version)",
      "event Paused(address account)",
      "event TransactionDeposited(address indexed from, address indexed to, uint256 indexed version, bytes opaqueData)",
      "event Unpaused(address account)",
      "event WithdrawalFinalized(bytes32 indexed withdrawalHash, bool success)",
      "event WithdrawalProven(bytes32 indexed withdrawalHash, address indexed from, address indexed to)",
      "function GUARDIAN() view returns (address)",
      "function L1_MNT_ADDRESS() view returns (address)",
      "function L2_ORACLE() view returns (address)",
      "function SYSTEM_CONFIG() view returns (address)",
      "function depositTransaction(uint256 _ethTxValue, uint256 _mntValue, address _to, uint256 _mntTxValue, uint64 _gasLimit, bool _isCreation, bytes _data) payable",
      "function donateETH() payable",
      "function finalizeWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 mntValue, uint256 ethValue, uint256 gasLimit, bytes data) _tx)",
      "function finalizedWithdrawals(bytes32) view returns (bool)",
      "function initialize(bool _paused)",
      "function isOutputFinalized(uint256 _l2OutputIndex) view returns (bool)",
      "function l2Sender() view returns (address)",
      "function minimumGasLimit(uint64 _byteCount) pure returns (uint64)",
      "function params() view returns (uint128 prevBaseFee, uint64 prevBoughtGas, uint64 prevBlockNum)",
      "function pause()",
      "function paused() view returns (bool)",
      "function proveWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 mntValue, uint256 ethValue, uint256 gasLimit, bytes data) _tx, uint256 _l2OutputIndex, tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, bytes[] _withdrawalProof)",
      "function provenWithdrawals(bytes32) view returns (bytes32 outputRoot, uint128 timestamp, uint128 l2OutputIndex)",
      "function unpause()",
      "function version() view returns (string)"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x2eb29f308508b9cc7f51b5984e0a5636340fc562271d0682bde062bc96f88a27",
    "global/TimelockController": "0x15a08533b0e2d9bb08add3809242c7487b2205bde0fac91a8bc371eda55eb16c",
    "GnosisSafe": "0x9d7f7b8b6adea28c4538f12e31b0c59eac5339b4e5c80def637cccc0cfe82106",
    "opstack/AddressManager": "0xdce2903f9a604505aa9785e7bfe472e6af5ec2b08d0a6408e5b79a86148344b3",
    "opstack/L1CrossDomainMessenger": "0xde2a916ff69f6b7310088054466bd1ff30bd91e359db75b6f8b0da9c1b23b1b0",
    "opstack/L1StandardBridge": "0xf27b89c7dc7d718e47969109bf6470d680395ee0ce530dac25d74ec0fb77957a",
    "opstack/L2OutputOracle": "0x22fe6c814f54c1a5de78dbf69b450ae3f13ead484e6fbc675f78c00b0f754405",
    "opstack/OptimismPortal": "0x86dc78550214d6e43fda82cc0465fa27db3db49de0104c52918b711d004f7665",
    "opstack/SystemConfig": "0x5ddc5eebebef91bf7b53c131698e8d76b94d355b28d20a9dcc14b59eb1dc68b1"
  }
}
