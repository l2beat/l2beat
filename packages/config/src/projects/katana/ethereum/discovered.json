{
  "name": "katana",
  "chain": "ethereum",
  "blockNumber": 22637654,
  "configHash": "0x231e335d0ce900b99fee9ec5e4121e3eda4337bc2901db33524c4788e144a2d2",
  "entries": [
    {
      "address": "0x2B888954421b424C5D3D9Ce9bB67c9bD47537d12",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Accountant",
      "address": "0x40a87104AEb279C061Af6b7C48F7E08c4A6e388D",
      "type": "Contract",
      "sourceHashes": [
        "0xbb98e3f17e055525db245944fa9a4119607271391cfde74fa3cacf1d99676704"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1747148987,
      "sinceBlock": 22475100,
      "values": {
        "$immutable": true,
        "DEPOSIT_RELAYER": "0xB01dADEC98308528ee57A17b24A473213c1704bb"
      },
      "implementationNames": {
        "0x40a87104AEb279C061Af6b7C48F7E08c4A6e388D": "Accountant"
      }
    },
    {
      "name": "Katana Pre-Deposit USDT Token",
      "address": "0x48c03B6FfD0008460F8657Db1037C7e09dEedfcb",
      "type": "Contract",
      "template": "yearn/vaultv3",
      "sourceHashes": [
        "0x5d40986c3a1dd9125adfec96b4aec8a7336eb319d3c4cdde3e55bb1096c11461",
        "0x5d40986c3a1dd9125adfec96b4aec8a7336eb319d3c4cdde3e55bb1096c11461"
      ],
      "proxyType": "EIP1167 proxy",
      "ignoreInWatchMode": [
        "pricePerShare",
        "totalAssets",
        "totalDebt",
        "totalIdle",
        "totalSupply"
      ],
      "sinceTimestamp": 1747148987,
      "sinceBlock": 22475100,
      "values": {
        "$implementation": "0xd8063123BBA3B480569244AE66BFE72B6c84b00d",
        "accountant": "0x40a87104AEb279C061Af6b7C48F7E08c4A6e388D",
        "apiVersion": "3.0.4",
        "asset": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
        "auto_allocate": false,
        "decimals": 6,
        "default_queue": [
          "0x310B7Ea7475A0B449Cfd73bE81522F1B88eFAFaa",
          "0xBC64210D565aabca8eb6Eb795833Cc505ac3647F"
        ],
        "deposit_limit": 250000000000000,
        "deposit_limit_module": "0x0000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0xceed67918f219b820ec939ec0af1492ad306b9bf8570309bf979e8d2c4c4dd31",
        "FACTORY": "0x770D0d1Fb036483Ed4AbB6d53c1C88fb277D812F",
        "fullProfitUnlockDate": 0,
        "future_role_manager": "0x0000000000000000000000000000000000000000",
        "get_default_queue": [
          "0x310B7Ea7475A0B449Cfd73bE81522F1B88eFAFaa",
          "0xBC64210D565aabca8eb6Eb795833Cc505ac3647F"
        ],
        "isShutdown": false,
        "lastProfitUpdate": 0,
        "minimum_total_idle": 0,
        "name": "Katana Pre-Deposit USDT",
        "pricePerShare": 1000000,
        "profitMaxUnlockTime": 86400,
        "profitUnlockingRate": 0,
        "role_manager": "0xb3bd6B2E61753C311EFbCF0111f75D29706D9a41",
        "symbol": "kpdUSDT",
        "totalAssets": 1489365217152,
        "totalDebt": 1459366762626,
        "totalIdle": 29998454526,
        "totalSupply": 1489365217152,
        "unlockedShares": 0,
        "use_default_queue": false,
        "withdraw_limit_module": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0x48c03B6FfD0008460F8657Db1037C7e09dEedfcb": "Yearn V3 Vault",
        "0xd8063123BBA3B480569244AE66BFE72B6c84b00d": "Yearn V3 Vault"
      }
    },
    {
      "address": "0x5Db9926c93085a92F14A85daBF6FF27b07362Cae",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x6F2A8Ee9452ba7d336b3fba03caC27f7818AeAD6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x700F1a984C962b447CcDb95c4c2D8074C65098a3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Katana Pre-Deposit USDC Token",
      "address": "0x7B5A0182E400b241b317e781a4e9dEdFc1429822",
      "type": "Contract",
      "template": "yearn/vaultv3",
      "sourceHashes": [
        "0x5d40986c3a1dd9125adfec96b4aec8a7336eb319d3c4cdde3e55bb1096c11461",
        "0x5d40986c3a1dd9125adfec96b4aec8a7336eb319d3c4cdde3e55bb1096c11461"
      ],
      "proxyType": "EIP1167 proxy",
      "ignoreInWatchMode": [
        "pricePerShare",
        "totalAssets",
        "totalDebt",
        "totalIdle",
        "totalSupply"
      ],
      "sinceTimestamp": 1747148987,
      "sinceBlock": 22475100,
      "values": {
        "$implementation": "0xd8063123BBA3B480569244AE66BFE72B6c84b00d",
        "accountant": "0x40a87104AEb279C061Af6b7C48F7E08c4A6e388D",
        "apiVersion": "3.0.4",
        "asset": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "auto_allocate": false,
        "decimals": 6,
        "default_queue": [
          "0xBe53A109B494E5c9f97b9Cd39Fe969BE68BF6204",
          "0x63a028963907F5a0c1cEb7e47100f52DfC611117"
        ],
        "deposit_limit": 300000000000000,
        "deposit_limit_module": "0x0000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0x322b414561eb64090f902726b7fbcea41c4778b3768590cfd0609983e943de68",
        "FACTORY": "0x770D0d1Fb036483Ed4AbB6d53c1C88fb277D812F",
        "fullProfitUnlockDate": 0,
        "future_role_manager": "0x0000000000000000000000000000000000000000",
        "get_default_queue": [
          "0xBe53A109B494E5c9f97b9Cd39Fe969BE68BF6204",
          "0x63a028963907F5a0c1cEb7e47100f52DfC611117"
        ],
        "isShutdown": false,
        "lastProfitUpdate": 0,
        "minimum_total_idle": 0,
        "name": "Katana Pre-Deposit USDC",
        "pricePerShare": 1000000,
        "profitMaxUnlockTime": 86400,
        "profitUnlockingRate": 0,
        "role_manager": "0xb3bd6B2E61753C311EFbCF0111f75D29706D9a41",
        "symbol": "kpdUSDC",
        "totalAssets": 11394930114775,
        "totalDebt": 11394930114775,
        "totalIdle": 0,
        "totalSupply": 11394930114775,
        "unlockedShares": 0,
        "use_default_queue": false,
        "withdraw_limit_module": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0x7B5A0182E400b241b317e781a4e9dEdFc1429822": "Yearn V3 Vault",
        "0xd8063123BBA3B480569244AE66BFE72B6c84b00d": "Yearn V3 Vault"
      }
    },
    {
      "name": "ShareReceiver",
      "address": "0x836304B832687f3811a0dF935934C724B40578eB",
      "type": "Contract",
      "sourceHashes": [
        "0x9dff5b57cc06152f55c03a3315607e71aea85a8c2a650034f40bba879a5c7725"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1747148987,
      "sinceBlock": 22475100,
      "values": {
        "$immutable": true,
        "DEPOSIT_RELAYER": "0xB01dADEC98308528ee57A17b24A473213c1704bb"
      },
      "implementationNames": {
        "0x836304B832687f3811a0dF935934C724B40578eB": "ShareReceiver"
      }
    },
    {
      "name": "Katana Pre-Deposit WBTC Token",
      "address": "0x92C82f5F771F6A44CfA09357DD0575B81BF5F728",
      "type": "Contract",
      "template": "yearn/vaultv3",
      "sourceHashes": [
        "0x5d40986c3a1dd9125adfec96b4aec8a7336eb319d3c4cdde3e55bb1096c11461",
        "0x5d40986c3a1dd9125adfec96b4aec8a7336eb319d3c4cdde3e55bb1096c11461"
      ],
      "proxyType": "EIP1167 proxy",
      "ignoreInWatchMode": [
        "pricePerShare",
        "totalAssets",
        "totalDebt",
        "totalIdle",
        "totalSupply"
      ],
      "sinceTimestamp": 1747148987,
      "sinceBlock": 22475100,
      "values": {
        "$implementation": "0xd8063123BBA3B480569244AE66BFE72B6c84b00d",
        "accountant": "0x40a87104AEb279C061Af6b7C48F7E08c4A6e388D",
        "apiVersion": "3.0.4",
        "asset": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",
        "auto_allocate": false,
        "decimals": 8,
        "default_queue": [
          "0x751F0cC6115410A3eE9eC92d08f46Ff6Da98b708",
          "0xb3760eD42E9e87497A371697fF4F08b510C93Df1"
        ],
        "deposit_limit": 250000000000,
        "deposit_limit_module": "0x0000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0xbb571004f8dd36f597d2192502ac7651ce590edbc8ed1060b44fd538fb68a8ce",
        "FACTORY": "0x770D0d1Fb036483Ed4AbB6d53c1C88fb277D812F",
        "fullProfitUnlockDate": 0,
        "future_role_manager": "0x0000000000000000000000000000000000000000",
        "get_default_queue": [
          "0x751F0cC6115410A3eE9eC92d08f46Ff6Da98b708",
          "0xb3760eD42E9e87497A371697fF4F08b510C93Df1"
        ],
        "isShutdown": false,
        "lastProfitUpdate": 0,
        "minimum_total_idle": 0,
        "name": "Katana Pre-Deposit WBTC",
        "pricePerShare": 100000000,
        "profitMaxUnlockTime": 86400,
        "profitUnlockingRate": 0,
        "role_manager": "0xb3bd6B2E61753C311EFbCF0111f75D29706D9a41",
        "symbol": "kpdWBTC",
        "totalAssets": 2369016777,
        "totalDebt": 2369016777,
        "totalIdle": 0,
        "totalSupply": 2369016777,
        "unlockedShares": 0,
        "use_default_queue": false,
        "withdraw_limit_module": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0x92C82f5F771F6A44CfA09357DD0575B81BF5F728": "Yearn V3 Vault",
        "0xd8063123BBA3B480569244AE66BFE72B6c84b00d": "Yearn V3 Vault"
      }
    },
    {
      "address": "0x962228a90eaC69238c7D1F216d80037e61eA9255",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x99BC02c239025E431D5741cC1DbA8CE77fc51CE3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "DepositRelayer",
      "address": "0xB01dADEC98308528ee57A17b24A473213c1704bb",
      "type": "Contract",
      "sourceHashes": [
        "0x7187bf2c2da4631859d47dd91211b499a54042901f34845f027d43591743c7eb"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1747148987,
      "sinceBlock": 22475100,
      "values": {
        "$immutable": true,
        "acrossBridge": "0x5c7BCd6E7De5423a257D81B442095A1a6ced35C5",
        "governance": "0xFEB4acf3df3cDEA7399794D0869ef76A6EfAff52",
        "pdVaultUSDC": "0x7B5A0182E400b241b317e781a4e9dEdFc1429822",
        "pdVaultUSDT": "0x48c03B6FfD0008460F8657Db1037C7e09dEedfcb",
        "pdVaultWBTC": "0x92C82f5F771F6A44CfA09357DD0575B81BF5F728",
        "pdVaultWETH": "0xcc6a16Be713f6a714f68b0E1f4914fD3db15fBeF",
        "pendingGovernance": "0x0000000000000000000000000000000000000000",
        "PRE_DEPOSIT_FACTORY": "0x9d770717d63e32089B2E11E4Ce927C1dCe8A023d",
        "relayLinkBridge": "0xeeeeee9eC4769A09a76A83C7bC42b185872860eE",
        "SHARE_RECEIVER": "0x836304B832687f3811a0dF935934C724B40578eB",
        "WETH": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "implementationNames": {
        "0xB01dADEC98308528ee57A17b24A473213c1704bb": "DepositRelayer"
      }
    },
    {
      "name": "Katana Pre-Deposit WETH Token",
      "address": "0xcc6a16Be713f6a714f68b0E1f4914fD3db15fBeF",
      "type": "Contract",
      "template": "yearn/vaultv3",
      "sourceHashes": [
        "0x5d40986c3a1dd9125adfec96b4aec8a7336eb319d3c4cdde3e55bb1096c11461",
        "0x5d40986c3a1dd9125adfec96b4aec8a7336eb319d3c4cdde3e55bb1096c11461"
      ],
      "proxyType": "EIP1167 proxy",
      "ignoreInWatchMode": [
        "pricePerShare",
        "totalAssets",
        "totalDebt",
        "totalIdle",
        "totalSupply"
      ],
      "sinceTimestamp": 1747148987,
      "sinceBlock": 22475100,
      "values": {
        "$implementation": "0xd8063123BBA3B480569244AE66BFE72B6c84b00d",
        "accountant": "0x40a87104AEb279C061Af6b7C48F7E08c4A6e388D",
        "apiVersion": "3.0.4",
        "asset": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "auto_allocate": false,
        "decimals": 18,
        "default_queue": [
          "0xc56413869c6CDf96496f2b1eF801fEDBdFA7dDB0",
          "0x30EAaCaD508BA57B30edafa1aD6bD337B211A9DE"
        ],
        "deposit_limit": "140000000000000000000000",
        "deposit_limit_module": "0x0000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0x9b264ab674ac2118d2624b8c7681d9d4b279aaa47cab9910c25a0bf902d1aebf",
        "FACTORY": "0x770D0d1Fb036483Ed4AbB6d53c1C88fb277D812F",
        "fullProfitUnlockDate": 0,
        "future_role_manager": "0x0000000000000000000000000000000000000000",
        "get_default_queue": [
          "0xc56413869c6CDf96496f2b1eF801fEDBdFA7dDB0",
          "0x30EAaCaD508BA57B30edafa1aD6bD337B211A9DE"
        ],
        "isShutdown": false,
        "lastProfitUpdate": 0,
        "minimum_total_idle": 0,
        "name": "Katana Pre-Deposit WETH",
        "pricePerShare": "1000000000000000000",
        "profitMaxUnlockTime": 86400,
        "profitUnlockingRate": 0,
        "role_manager": "0xb3bd6B2E61753C311EFbCF0111f75D29706D9a41",
        "symbol": "kpdWETH",
        "totalAssets": "3527003679104501121712",
        "totalDebt": "3527003679104501121712",
        "totalIdle": 0,
        "totalSupply": "3527003679104501121712",
        "unlockedShares": 0,
        "use_default_queue": false,
        "withdraw_limit_module": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0xcc6a16Be713f6a714f68b0E1f4914fD3db15fBeF": "Yearn V3 Vault",
        "0xd8063123BBA3B480569244AE66BFE72B6c84b00d": "Yearn V3 Vault"
      }
    },
    {
      "name": "AllowanceModule",
      "address": "0xCFbFaC74C26F8647cBDb8c5caf80BB5b32E43134",
      "type": "Contract",
      "sourceHashes": [
        "0x739427cbd7c2389a7c03972460f1e89b911776b7fdd5332f544dac83493eabb1"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "ethereum:0xFEB4acf3df3cDEA7399794D0869ef76A6EfAff52",
          "role": ".GnosisSafe_modules"
        }
      ],
      "sinceTimestamp": 1603880884,
      "sinceBlock": 11144602,
      "values": {
        "$immutable": true,
        "ALLOWANCE_TRANSFER_TYPEHASH": "0x80b006280932094e7cc965863eb5118dc07e5d272c6670c4a7c87299e04fceeb",
        "DOMAIN_SEPARATOR_TYPEHASH": "0x47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218",
        "getChainId": 1,
        "NAME": "Allowance Module",
        "VERSION": "0.1.0"
      },
      "implementationNames": {
        "0xCFbFaC74C26F8647cBDb8c5caf80BB5b32E43134": "AllowanceModule"
      }
    },
    {
      "address": "0xeA6c0837fef621E77329f85820F503cA09f2B3a9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ERC20Router",
      "address": "0xeeeeee9eC4769A09a76A83C7bC42b185872860eE",
      "type": "Contract",
      "sourceHashes": [
        "0xc901cf186fa1d7d3e12a4c7a4087ce98ea46bf3ba7ae2e354fab1569c009b9fe"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1741021415,
      "sinceBlock": 21967727,
      "values": {
        "_EIP_712_RELAYER_WITNESS_TYPE_HASH": "0x4910260415865c6d3ecf96968c7d912a0d533a72c3479ab1e1df0f4eb86fb008",
        "_RELAYER_WITNESS_TYPE_STRING": "RelayerWitness witness)RelayerWitness(address relayer)TokenPermissions(address token,uint256 amount)",
        "$immutable": true
      },
      "implementationNames": {
        "0xeeeeee9eC4769A09a76A83C7bC42b185872860eE": "ERC20Router"
      }
    },
    {
      "address": "0xf5D3dbda5F41A0E26D71B948e29522398e71cFaE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xFe45baf0F18c207152A807c1b05926583CFE2e4b",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0xFEB4acf3df3cDEA7399794D0869ef76A6EfAff52",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xd5a33441170541b7df25812e0e3dff6562b2f09ab835a6b431cb9e7198a47605",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1595301010,
      "sinceBlock": 10500302,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xf5D3dbda5F41A0E26D71B948e29522398e71cFaE",
          "0xeA6c0837fef621E77329f85820F503cA09f2B3a9",
          "0x6F2A8Ee9452ba7d336b3fba03caC27f7818AeAD6",
          "0x2B888954421b424C5D3D9Ce9bB67c9bD47537d12",
          "0xFe45baf0F18c207152A807c1b05926583CFE2e4b",
          "0x962228a90eaC69238c7D1F216d80037e61eA9255",
          "0x99BC02c239025E431D5741cC1DbA8CE77fc51CE3",
          "0x5Db9926c93085a92F14A85daBF6FF27b07362Cae",
          "0x700F1a984C962b447CcDb95c4c2D8074C65098a3"
        ],
        "$threshold": 6,
        "domainSeparator": "0x88fbc465dedd7fe71b7baef26a1f46cdaadd50b95c77cbe88569195a9fe589ab",
        "getChainId": 1,
        "GnosisSafe_modules": ["0xCFbFaC74C26F8647cBDb8c5caf80BB5b32E43134"],
        "multisigThreshold": "6 of 9 (67%)",
        "nonce": 2157,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xFEB4acf3df3cDEA7399794D0869ef76A6EfAff52": "Proxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    }
  ],
  "abis": {
    "0x40a87104AEb279C061Af6b7C48F7E08c4A6e388D": [
      "constructor(address _depositRelayer)",
      "function DEPOSIT_RELAYER() view returns (address)",
      "function report(address, uint256 _gain, uint256 _loss) returns (uint256 totalFees, uint256)",
      "function sweep(address _token)"
    ],
    "0x48c03B6FfD0008460F8657Db1037C7e09dEedfcb": [
      "event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)",
      "event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "event Transfer(address indexed sender, address indexed receiver, uint256 value)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event StrategyChanged(address indexed strategy, uint256 indexed change_type)",
      "event StrategyReported(address indexed strategy, uint256 gain, uint256 loss, uint256 current_debt, uint256 protocol_fees, uint256 total_fees, uint256 total_refunds)",
      "event DebtUpdated(address indexed strategy, uint256 current_debt, uint256 new_debt)",
      "event RoleSet(address indexed account, uint256 indexed role)",
      "event UpdateFutureRoleManager(address indexed future_role_manager)",
      "event UpdateRoleManager(address indexed role_manager)",
      "event UpdateAccountant(address indexed accountant)",
      "event UpdateDepositLimitModule(address indexed deposit_limit_module)",
      "event UpdateWithdrawLimitModule(address indexed withdraw_limit_module)",
      "event UpdateDefaultQueue(address[] new_default_queue)",
      "event UpdateUseDefaultQueue(bool use_default_queue)",
      "event UpdateAutoAllocate(bool auto_allocate)",
      "event UpdatedMaxDebtForStrategy(address indexed sender, address indexed strategy, uint256 new_debt)",
      "event UpdateDepositLimit(uint256 deposit_limit)",
      "event UpdateMinimumTotalIdle(uint256 minimum_total_idle)",
      "event UpdateProfitMaxUnlockTime(uint256 profit_max_unlock_time)",
      "event DebtPurchased(address indexed strategy, uint256 amount)",
      "event Shutdown()",
      "constructor()",
      "function initialize(address asset, string name, string symbol, address role_manager, uint256 profit_max_unlock_time)",
      "function setName(string name)",
      "function setSymbol(string symbol)",
      "function set_accountant(address new_accountant)",
      "function set_default_queue(address[] new_default_queue)",
      "function set_use_default_queue(bool use_default_queue)",
      "function set_auto_allocate(bool auto_allocate)",
      "function set_deposit_limit(uint256 deposit_limit)",
      "function set_deposit_limit(uint256 deposit_limit, bool override)",
      "function set_deposit_limit_module(address deposit_limit_module)",
      "function set_deposit_limit_module(address deposit_limit_module, bool override)",
      "function set_withdraw_limit_module(address withdraw_limit_module)",
      "function set_minimum_total_idle(uint256 minimum_total_idle)",
      "function setProfitMaxUnlockTime(uint256 new_profit_max_unlock_time)",
      "function set_role(address account, uint256 role)",
      "function add_role(address account, uint256 role)",
      "function remove_role(address account, uint256 role)",
      "function transfer_role_manager(address role_manager)",
      "function accept_role_manager()",
      "function isShutdown() view returns (bool)",
      "function unlockedShares() view returns (uint256)",
      "function pricePerShare() view returns (uint256)",
      "function get_default_queue() view returns (address[])",
      "function process_report(address strategy) returns (uint256, uint256)",
      "function buy_debt(address strategy, uint256 amount)",
      "function add_strategy(address new_strategy)",
      "function add_strategy(address new_strategy, bool add_to_queue)",
      "function revoke_strategy(address strategy)",
      "function force_revoke_strategy(address strategy)",
      "function update_max_debt_for_strategy(address strategy, uint256 new_max_debt)",
      "function update_debt(address strategy, uint256 target_debt) returns (uint256)",
      "function update_debt(address strategy, uint256 target_debt, uint256 max_loss) returns (uint256)",
      "function shutdown_vault()",
      "function deposit(uint256 assets, address receiver) returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner, uint256 max_loss) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner, uint256 max_loss, address[] strategies) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner, uint256 max_loss) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner, uint256 max_loss, address[] strategies) returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function transfer(address receiver, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address receiver, uint256 amount) returns (bool)",
      "function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns (bool)",
      "function balanceOf(address addr) view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function totalAssets() view returns (uint256)",
      "function totalIdle() view returns (uint256)",
      "function totalDebt() view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function maxDeposit(address receiver) view returns (uint256)",
      "function maxMint(address receiver) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function maxWithdraw(address owner, uint256 max_loss) view returns (uint256)",
      "function maxWithdraw(address owner, uint256 max_loss, address[] strategies) view returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxRedeem(address owner, uint256 max_loss) view returns (uint256)",
      "function maxRedeem(address owner, uint256 max_loss, address[] strategies) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function FACTORY() view returns (address)",
      "function apiVersion() pure returns (string)",
      "function assess_share_of_unrealised_losses(address strategy, uint256 assets_needed) view returns (uint256)",
      "function profitMaxUnlockTime() view returns (uint256)",
      "function fullProfitUnlockDate() view returns (uint256)",
      "function profitUnlockingRate() view returns (uint256)",
      "function lastProfitUpdate() view returns (uint256)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function asset() view returns (address)",
      "function decimals() view returns (uint8)",
      "function strategies(address arg0) view returns (tuple(uint256 activation, uint256 last_report, uint256 current_debt, uint256 max_debt))",
      "function default_queue(uint256 arg0) view returns (address)",
      "function use_default_queue() view returns (bool)",
      "function auto_allocate() view returns (bool)",
      "function allowance(address arg0, address arg1) view returns (uint256)",
      "function minimum_total_idle() view returns (uint256)",
      "function deposit_limit() view returns (uint256)",
      "function accountant() view returns (address)",
      "function deposit_limit_module() view returns (address)",
      "function withdraw_limit_module() view returns (address)",
      "function roles(address arg0) view returns (uint256)",
      "function role_manager() view returns (address)",
      "function future_role_manager() view returns (address)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function nonces(address arg0) view returns (uint256)"
    ],
    "0x7B5A0182E400b241b317e781a4e9dEdFc1429822": [
      "event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)",
      "event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "event Transfer(address indexed sender, address indexed receiver, uint256 value)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event StrategyChanged(address indexed strategy, uint256 indexed change_type)",
      "event StrategyReported(address indexed strategy, uint256 gain, uint256 loss, uint256 current_debt, uint256 protocol_fees, uint256 total_fees, uint256 total_refunds)",
      "event DebtUpdated(address indexed strategy, uint256 current_debt, uint256 new_debt)",
      "event RoleSet(address indexed account, uint256 indexed role)",
      "event UpdateFutureRoleManager(address indexed future_role_manager)",
      "event UpdateRoleManager(address indexed role_manager)",
      "event UpdateAccountant(address indexed accountant)",
      "event UpdateDepositLimitModule(address indexed deposit_limit_module)",
      "event UpdateWithdrawLimitModule(address indexed withdraw_limit_module)",
      "event UpdateDefaultQueue(address[] new_default_queue)",
      "event UpdateUseDefaultQueue(bool use_default_queue)",
      "event UpdateAutoAllocate(bool auto_allocate)",
      "event UpdatedMaxDebtForStrategy(address indexed sender, address indexed strategy, uint256 new_debt)",
      "event UpdateDepositLimit(uint256 deposit_limit)",
      "event UpdateMinimumTotalIdle(uint256 minimum_total_idle)",
      "event UpdateProfitMaxUnlockTime(uint256 profit_max_unlock_time)",
      "event DebtPurchased(address indexed strategy, uint256 amount)",
      "event Shutdown()",
      "constructor()",
      "function initialize(address asset, string name, string symbol, address role_manager, uint256 profit_max_unlock_time)",
      "function setName(string name)",
      "function setSymbol(string symbol)",
      "function set_accountant(address new_accountant)",
      "function set_default_queue(address[] new_default_queue)",
      "function set_use_default_queue(bool use_default_queue)",
      "function set_auto_allocate(bool auto_allocate)",
      "function set_deposit_limit(uint256 deposit_limit)",
      "function set_deposit_limit(uint256 deposit_limit, bool override)",
      "function set_deposit_limit_module(address deposit_limit_module)",
      "function set_deposit_limit_module(address deposit_limit_module, bool override)",
      "function set_withdraw_limit_module(address withdraw_limit_module)",
      "function set_minimum_total_idle(uint256 minimum_total_idle)",
      "function setProfitMaxUnlockTime(uint256 new_profit_max_unlock_time)",
      "function set_role(address account, uint256 role)",
      "function add_role(address account, uint256 role)",
      "function remove_role(address account, uint256 role)",
      "function transfer_role_manager(address role_manager)",
      "function accept_role_manager()",
      "function isShutdown() view returns (bool)",
      "function unlockedShares() view returns (uint256)",
      "function pricePerShare() view returns (uint256)",
      "function get_default_queue() view returns (address[])",
      "function process_report(address strategy) returns (uint256, uint256)",
      "function buy_debt(address strategy, uint256 amount)",
      "function add_strategy(address new_strategy)",
      "function add_strategy(address new_strategy, bool add_to_queue)",
      "function revoke_strategy(address strategy)",
      "function force_revoke_strategy(address strategy)",
      "function update_max_debt_for_strategy(address strategy, uint256 new_max_debt)",
      "function update_debt(address strategy, uint256 target_debt) returns (uint256)",
      "function update_debt(address strategy, uint256 target_debt, uint256 max_loss) returns (uint256)",
      "function shutdown_vault()",
      "function deposit(uint256 assets, address receiver) returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner, uint256 max_loss) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner, uint256 max_loss, address[] strategies) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner, uint256 max_loss) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner, uint256 max_loss, address[] strategies) returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function transfer(address receiver, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address receiver, uint256 amount) returns (bool)",
      "function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns (bool)",
      "function balanceOf(address addr) view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function totalAssets() view returns (uint256)",
      "function totalIdle() view returns (uint256)",
      "function totalDebt() view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function maxDeposit(address receiver) view returns (uint256)",
      "function maxMint(address receiver) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function maxWithdraw(address owner, uint256 max_loss) view returns (uint256)",
      "function maxWithdraw(address owner, uint256 max_loss, address[] strategies) view returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxRedeem(address owner, uint256 max_loss) view returns (uint256)",
      "function maxRedeem(address owner, uint256 max_loss, address[] strategies) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function FACTORY() view returns (address)",
      "function apiVersion() pure returns (string)",
      "function assess_share_of_unrealised_losses(address strategy, uint256 assets_needed) view returns (uint256)",
      "function profitMaxUnlockTime() view returns (uint256)",
      "function fullProfitUnlockDate() view returns (uint256)",
      "function profitUnlockingRate() view returns (uint256)",
      "function lastProfitUpdate() view returns (uint256)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function asset() view returns (address)",
      "function decimals() view returns (uint8)",
      "function strategies(address arg0) view returns (tuple(uint256 activation, uint256 last_report, uint256 current_debt, uint256 max_debt))",
      "function default_queue(uint256 arg0) view returns (address)",
      "function use_default_queue() view returns (bool)",
      "function auto_allocate() view returns (bool)",
      "function allowance(address arg0, address arg1) view returns (uint256)",
      "function minimum_total_idle() view returns (uint256)",
      "function deposit_limit() view returns (uint256)",
      "function accountant() view returns (address)",
      "function deposit_limit_module() view returns (address)",
      "function withdraw_limit_module() view returns (address)",
      "function roles(address arg0) view returns (uint256)",
      "function role_manager() view returns (address)",
      "function future_role_manager() view returns (address)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function nonces(address arg0) view returns (uint256)"
    ],
    "0x836304B832687f3811a0dF935934C724B40578eB": [
      "constructor()",
      "function DEPOSIT_RELAYER() view returns (address)"
    ],
    "0x92C82f5F771F6A44CfA09357DD0575B81BF5F728": [
      "event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)",
      "event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "event Transfer(address indexed sender, address indexed receiver, uint256 value)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event StrategyChanged(address indexed strategy, uint256 indexed change_type)",
      "event StrategyReported(address indexed strategy, uint256 gain, uint256 loss, uint256 current_debt, uint256 protocol_fees, uint256 total_fees, uint256 total_refunds)",
      "event DebtUpdated(address indexed strategy, uint256 current_debt, uint256 new_debt)",
      "event RoleSet(address indexed account, uint256 indexed role)",
      "event UpdateFutureRoleManager(address indexed future_role_manager)",
      "event UpdateRoleManager(address indexed role_manager)",
      "event UpdateAccountant(address indexed accountant)",
      "event UpdateDepositLimitModule(address indexed deposit_limit_module)",
      "event UpdateWithdrawLimitModule(address indexed withdraw_limit_module)",
      "event UpdateDefaultQueue(address[] new_default_queue)",
      "event UpdateUseDefaultQueue(bool use_default_queue)",
      "event UpdateAutoAllocate(bool auto_allocate)",
      "event UpdatedMaxDebtForStrategy(address indexed sender, address indexed strategy, uint256 new_debt)",
      "event UpdateDepositLimit(uint256 deposit_limit)",
      "event UpdateMinimumTotalIdle(uint256 minimum_total_idle)",
      "event UpdateProfitMaxUnlockTime(uint256 profit_max_unlock_time)",
      "event DebtPurchased(address indexed strategy, uint256 amount)",
      "event Shutdown()",
      "constructor()",
      "function initialize(address asset, string name, string symbol, address role_manager, uint256 profit_max_unlock_time)",
      "function setName(string name)",
      "function setSymbol(string symbol)",
      "function set_accountant(address new_accountant)",
      "function set_default_queue(address[] new_default_queue)",
      "function set_use_default_queue(bool use_default_queue)",
      "function set_auto_allocate(bool auto_allocate)",
      "function set_deposit_limit(uint256 deposit_limit)",
      "function set_deposit_limit(uint256 deposit_limit, bool override)",
      "function set_deposit_limit_module(address deposit_limit_module)",
      "function set_deposit_limit_module(address deposit_limit_module, bool override)",
      "function set_withdraw_limit_module(address withdraw_limit_module)",
      "function set_minimum_total_idle(uint256 minimum_total_idle)",
      "function setProfitMaxUnlockTime(uint256 new_profit_max_unlock_time)",
      "function set_role(address account, uint256 role)",
      "function add_role(address account, uint256 role)",
      "function remove_role(address account, uint256 role)",
      "function transfer_role_manager(address role_manager)",
      "function accept_role_manager()",
      "function isShutdown() view returns (bool)",
      "function unlockedShares() view returns (uint256)",
      "function pricePerShare() view returns (uint256)",
      "function get_default_queue() view returns (address[])",
      "function process_report(address strategy) returns (uint256, uint256)",
      "function buy_debt(address strategy, uint256 amount)",
      "function add_strategy(address new_strategy)",
      "function add_strategy(address new_strategy, bool add_to_queue)",
      "function revoke_strategy(address strategy)",
      "function force_revoke_strategy(address strategy)",
      "function update_max_debt_for_strategy(address strategy, uint256 new_max_debt)",
      "function update_debt(address strategy, uint256 target_debt) returns (uint256)",
      "function update_debt(address strategy, uint256 target_debt, uint256 max_loss) returns (uint256)",
      "function shutdown_vault()",
      "function deposit(uint256 assets, address receiver) returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner, uint256 max_loss) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner, uint256 max_loss, address[] strategies) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner, uint256 max_loss) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner, uint256 max_loss, address[] strategies) returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function transfer(address receiver, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address receiver, uint256 amount) returns (bool)",
      "function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns (bool)",
      "function balanceOf(address addr) view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function totalAssets() view returns (uint256)",
      "function totalIdle() view returns (uint256)",
      "function totalDebt() view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function maxDeposit(address receiver) view returns (uint256)",
      "function maxMint(address receiver) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function maxWithdraw(address owner, uint256 max_loss) view returns (uint256)",
      "function maxWithdraw(address owner, uint256 max_loss, address[] strategies) view returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxRedeem(address owner, uint256 max_loss) view returns (uint256)",
      "function maxRedeem(address owner, uint256 max_loss, address[] strategies) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function FACTORY() view returns (address)",
      "function apiVersion() pure returns (string)",
      "function assess_share_of_unrealised_losses(address strategy, uint256 assets_needed) view returns (uint256)",
      "function profitMaxUnlockTime() view returns (uint256)",
      "function fullProfitUnlockDate() view returns (uint256)",
      "function profitUnlockingRate() view returns (uint256)",
      "function lastProfitUpdate() view returns (uint256)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function asset() view returns (address)",
      "function decimals() view returns (uint8)",
      "function strategies(address arg0) view returns (tuple(uint256 activation, uint256 last_report, uint256 current_debt, uint256 max_debt))",
      "function default_queue(uint256 arg0) view returns (address)",
      "function use_default_queue() view returns (bool)",
      "function auto_allocate() view returns (bool)",
      "function allowance(address arg0, address arg1) view returns (uint256)",
      "function minimum_total_idle() view returns (uint256)",
      "function deposit_limit() view returns (uint256)",
      "function accountant() view returns (address)",
      "function deposit_limit_module() view returns (address)",
      "function withdraw_limit_module() view returns (address)",
      "function roles(address arg0) view returns (uint256)",
      "function role_manager() view returns (address)",
      "function future_role_manager() view returns (address)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function nonces(address arg0) view returns (uint256)"
    ],
    "0xB01dADEC98308528ee57A17b24A473213c1704bb": [
      "constructor(address _governance, address _acrossBridge, address _relayLinkBridge)",
      "event AcrossBridgeSet(address indexed acrossBridge)",
      "event DepositCapSet(address indexed asset, uint256 indexed cap)",
      "event DepositProcessed(address indexed asset, address indexed user, uint256 indexed amount, uint256 originChainId, address referral)",
      "event GovernanceTransferred(address indexed previousGovernance, address indexed newGovernance)",
      "event RelayLinkBridgeSet(address indexed relayLinkBridge)",
      "event UpdatePendingGovernance(address indexed newPendingGovernance)",
      "event VaultSet(address indexed asset, address indexed vault)",
      "function PRE_DEPOSIT_FACTORY() view returns (address)",
      "function SHARE_RECEIVER() view returns (address)",
      "function WETH() view returns (address)",
      "function acceptGovernance()",
      "function acrossBridge() view returns (address)",
      "function deposit(address _asset, uint256 _amount)",
      "function deposit(address _asset, uint256 _amount, address _referral)",
      "function depositCap(address) view returns (uint256)",
      "function depositEth() payable",
      "function depositEth(address _referral) payable",
      "function deposited(address, address) view returns (uint256)",
      "function governance() view returns (address)",
      "function handleRelayLinkDeposit(address _asset, uint256 _amount, address _user, uint256 _originChainId, address _referral)",
      "function handleV3AcrossMessage(address _asset, uint256 _amount, address, bytes _message)",
      "function maxDeposit(address _asset) view returns (uint256)",
      "function newVault(address _asset, address _vault, address _stbStrategy)",
      "function pendingGovernance() view returns (address)",
      "function preDepositVault(address) view returns (address)",
      "function relayLinkBridge() view returns (address)",
      "function rescue(address _token)",
      "function setAcrossBridge(address _acrossBridge)",
      "function setDepositCap(address _asset, uint256 _cap)",
      "function setRelayLinkBridge(address _relayLinkBridge)",
      "function setVault(address _asset, address _vault)",
      "function stbDepositor(address) view returns (address)",
      "function totalDeposited(address) view returns (uint256)",
      "function transferGovernance(address _newGovernance)"
    ],
    "0xcc6a16Be713f6a714f68b0E1f4914fD3db15fBeF": [
      "event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)",
      "event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "event Transfer(address indexed sender, address indexed receiver, uint256 value)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event StrategyChanged(address indexed strategy, uint256 indexed change_type)",
      "event StrategyReported(address indexed strategy, uint256 gain, uint256 loss, uint256 current_debt, uint256 protocol_fees, uint256 total_fees, uint256 total_refunds)",
      "event DebtUpdated(address indexed strategy, uint256 current_debt, uint256 new_debt)",
      "event RoleSet(address indexed account, uint256 indexed role)",
      "event UpdateFutureRoleManager(address indexed future_role_manager)",
      "event UpdateRoleManager(address indexed role_manager)",
      "event UpdateAccountant(address indexed accountant)",
      "event UpdateDepositLimitModule(address indexed deposit_limit_module)",
      "event UpdateWithdrawLimitModule(address indexed withdraw_limit_module)",
      "event UpdateDefaultQueue(address[] new_default_queue)",
      "event UpdateUseDefaultQueue(bool use_default_queue)",
      "event UpdateAutoAllocate(bool auto_allocate)",
      "event UpdatedMaxDebtForStrategy(address indexed sender, address indexed strategy, uint256 new_debt)",
      "event UpdateDepositLimit(uint256 deposit_limit)",
      "event UpdateMinimumTotalIdle(uint256 minimum_total_idle)",
      "event UpdateProfitMaxUnlockTime(uint256 profit_max_unlock_time)",
      "event DebtPurchased(address indexed strategy, uint256 amount)",
      "event Shutdown()",
      "constructor()",
      "function initialize(address asset, string name, string symbol, address role_manager, uint256 profit_max_unlock_time)",
      "function setName(string name)",
      "function setSymbol(string symbol)",
      "function set_accountant(address new_accountant)",
      "function set_default_queue(address[] new_default_queue)",
      "function set_use_default_queue(bool use_default_queue)",
      "function set_auto_allocate(bool auto_allocate)",
      "function set_deposit_limit(uint256 deposit_limit)",
      "function set_deposit_limit(uint256 deposit_limit, bool override)",
      "function set_deposit_limit_module(address deposit_limit_module)",
      "function set_deposit_limit_module(address deposit_limit_module, bool override)",
      "function set_withdraw_limit_module(address withdraw_limit_module)",
      "function set_minimum_total_idle(uint256 minimum_total_idle)",
      "function setProfitMaxUnlockTime(uint256 new_profit_max_unlock_time)",
      "function set_role(address account, uint256 role)",
      "function add_role(address account, uint256 role)",
      "function remove_role(address account, uint256 role)",
      "function transfer_role_manager(address role_manager)",
      "function accept_role_manager()",
      "function isShutdown() view returns (bool)",
      "function unlockedShares() view returns (uint256)",
      "function pricePerShare() view returns (uint256)",
      "function get_default_queue() view returns (address[])",
      "function process_report(address strategy) returns (uint256, uint256)",
      "function buy_debt(address strategy, uint256 amount)",
      "function add_strategy(address new_strategy)",
      "function add_strategy(address new_strategy, bool add_to_queue)",
      "function revoke_strategy(address strategy)",
      "function force_revoke_strategy(address strategy)",
      "function update_max_debt_for_strategy(address strategy, uint256 new_max_debt)",
      "function update_debt(address strategy, uint256 target_debt) returns (uint256)",
      "function update_debt(address strategy, uint256 target_debt, uint256 max_loss) returns (uint256)",
      "function shutdown_vault()",
      "function deposit(uint256 assets, address receiver) returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner, uint256 max_loss) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner, uint256 max_loss, address[] strategies) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner, uint256 max_loss) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner, uint256 max_loss, address[] strategies) returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function transfer(address receiver, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address receiver, uint256 amount) returns (bool)",
      "function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns (bool)",
      "function balanceOf(address addr) view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function totalAssets() view returns (uint256)",
      "function totalIdle() view returns (uint256)",
      "function totalDebt() view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function maxDeposit(address receiver) view returns (uint256)",
      "function maxMint(address receiver) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function maxWithdraw(address owner, uint256 max_loss) view returns (uint256)",
      "function maxWithdraw(address owner, uint256 max_loss, address[] strategies) view returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxRedeem(address owner, uint256 max_loss) view returns (uint256)",
      "function maxRedeem(address owner, uint256 max_loss, address[] strategies) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function FACTORY() view returns (address)",
      "function apiVersion() pure returns (string)",
      "function assess_share_of_unrealised_losses(address strategy, uint256 assets_needed) view returns (uint256)",
      "function profitMaxUnlockTime() view returns (uint256)",
      "function fullProfitUnlockDate() view returns (uint256)",
      "function profitUnlockingRate() view returns (uint256)",
      "function lastProfitUpdate() view returns (uint256)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function asset() view returns (address)",
      "function decimals() view returns (uint8)",
      "function strategies(address arg0) view returns (tuple(uint256 activation, uint256 last_report, uint256 current_debt, uint256 max_debt))",
      "function default_queue(uint256 arg0) view returns (address)",
      "function use_default_queue() view returns (bool)",
      "function auto_allocate() view returns (bool)",
      "function allowance(address arg0, address arg1) view returns (uint256)",
      "function minimum_total_idle() view returns (uint256)",
      "function deposit_limit() view returns (uint256)",
      "function accountant() view returns (address)",
      "function deposit_limit_module() view returns (address)",
      "function withdraw_limit_module() view returns (address)",
      "function roles(address arg0) view returns (uint256)",
      "function role_manager() view returns (address)",
      "function future_role_manager() view returns (address)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function nonces(address arg0) view returns (uint256)"
    ],
    "0xCFbFaC74C26F8647cBDb8c5caf80BB5b32E43134": [
      "event AddDelegate(address indexed safe, address delegate)",
      "event DeleteAllowance(address indexed safe, address delegate, address token)",
      "event ExecuteAllowanceTransfer(address indexed safe, address delegate, address token, address to, uint96 value, uint16 nonce)",
      "event PayAllowanceTransfer(address indexed safe, address delegate, address paymentToken, address paymentReceiver, uint96 payment)",
      "event RemoveDelegate(address indexed safe, address delegate)",
      "event ResetAllowance(address indexed safe, address delegate, address token)",
      "event SetAllowance(address indexed safe, address delegate, address token, uint96 allowanceAmount, uint16 resetTime)",
      "function ALLOWANCE_TRANSFER_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR_TYPEHASH() view returns (bytes32)",
      "function NAME() view returns (string)",
      "function VERSION() view returns (string)",
      "function addDelegate(address delegate)",
      "function allowances(address, address, address) view returns (uint96 amount, uint96 spent, uint16 resetTimeMin, uint32 lastResetMin, uint16 nonce)",
      "function delegates(address, uint48) view returns (address delegate, uint48 prev, uint48 next)",
      "function delegatesStart(address) view returns (uint48)",
      "function deleteAllowance(address delegate, address token)",
      "function executeAllowanceTransfer(address safe, address token, address to, uint96 amount, address paymentToken, uint96 payment, address delegate, bytes signature)",
      "function generateTransferHash(address safe, address token, address to, uint96 amount, address paymentToken, uint96 payment, uint16 nonce) view returns (bytes32)",
      "function getChainId() pure returns (uint256)",
      "function getDelegates(address safe, uint48 start, uint8 pageSize) view returns (address[] results, uint48 next)",
      "function getTokenAllowance(address safe, address delegate, address token) view returns (uint256[5])",
      "function getTokens(address safe, address delegate) view returns (address[])",
      "function removeDelegate(address delegate, bool removeAllowances)",
      "function resetAllowance(address delegate, address token)",
      "function setAllowance(address delegate, address token, uint96 allowanceAmount, uint16 resetTimeMin, uint32 resetBaseMin)",
      "function tokens(address, address, uint256) view returns (address)"
    ],
    "0xd8063123BBA3B480569244AE66BFE72B6c84b00d": [
      "event Deposit(address indexed sender, address indexed owner, uint256 assets, uint256 shares)",
      "event Withdraw(address indexed sender, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "event Transfer(address indexed sender, address indexed receiver, uint256 value)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event StrategyChanged(address indexed strategy, uint256 indexed change_type)",
      "event StrategyReported(address indexed strategy, uint256 gain, uint256 loss, uint256 current_debt, uint256 protocol_fees, uint256 total_fees, uint256 total_refunds)",
      "event DebtUpdated(address indexed strategy, uint256 current_debt, uint256 new_debt)",
      "event RoleSet(address indexed account, uint256 indexed role)",
      "event UpdateFutureRoleManager(address indexed future_role_manager)",
      "event UpdateRoleManager(address indexed role_manager)",
      "event UpdateAccountant(address indexed accountant)",
      "event UpdateDepositLimitModule(address indexed deposit_limit_module)",
      "event UpdateWithdrawLimitModule(address indexed withdraw_limit_module)",
      "event UpdateDefaultQueue(address[] new_default_queue)",
      "event UpdateUseDefaultQueue(bool use_default_queue)",
      "event UpdateAutoAllocate(bool auto_allocate)",
      "event UpdatedMaxDebtForStrategy(address indexed sender, address indexed strategy, uint256 new_debt)",
      "event UpdateDepositLimit(uint256 deposit_limit)",
      "event UpdateMinimumTotalIdle(uint256 minimum_total_idle)",
      "event UpdateProfitMaxUnlockTime(uint256 profit_max_unlock_time)",
      "event DebtPurchased(address indexed strategy, uint256 amount)",
      "event Shutdown()",
      "constructor()",
      "function initialize(address asset, string name, string symbol, address role_manager, uint256 profit_max_unlock_time)",
      "function setName(string name)",
      "function setSymbol(string symbol)",
      "function set_accountant(address new_accountant)",
      "function set_default_queue(address[] new_default_queue)",
      "function set_use_default_queue(bool use_default_queue)",
      "function set_auto_allocate(bool auto_allocate)",
      "function set_deposit_limit(uint256 deposit_limit)",
      "function set_deposit_limit(uint256 deposit_limit, bool override)",
      "function set_deposit_limit_module(address deposit_limit_module)",
      "function set_deposit_limit_module(address deposit_limit_module, bool override)",
      "function set_withdraw_limit_module(address withdraw_limit_module)",
      "function set_minimum_total_idle(uint256 minimum_total_idle)",
      "function setProfitMaxUnlockTime(uint256 new_profit_max_unlock_time)",
      "function set_role(address account, uint256 role)",
      "function add_role(address account, uint256 role)",
      "function remove_role(address account, uint256 role)",
      "function transfer_role_manager(address role_manager)",
      "function accept_role_manager()",
      "function isShutdown() view returns (bool)",
      "function unlockedShares() view returns (uint256)",
      "function pricePerShare() view returns (uint256)",
      "function get_default_queue() view returns (address[])",
      "function process_report(address strategy) returns (uint256, uint256)",
      "function buy_debt(address strategy, uint256 amount)",
      "function add_strategy(address new_strategy)",
      "function add_strategy(address new_strategy, bool add_to_queue)",
      "function revoke_strategy(address strategy)",
      "function force_revoke_strategy(address strategy)",
      "function update_max_debt_for_strategy(address strategy, uint256 new_max_debt)",
      "function update_debt(address strategy, uint256 target_debt) returns (uint256)",
      "function update_debt(address strategy, uint256 target_debt, uint256 max_loss) returns (uint256)",
      "function shutdown_vault()",
      "function deposit(uint256 assets, address receiver) returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner, uint256 max_loss) returns (uint256)",
      "function withdraw(uint256 assets, address receiver, address owner, uint256 max_loss, address[] strategies) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner, uint256 max_loss) returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner, uint256 max_loss, address[] strategies) returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function transfer(address receiver, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address receiver, uint256 amount) returns (bool)",
      "function permit(address owner, address spender, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns (bool)",
      "function balanceOf(address addr) view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function totalAssets() view returns (uint256)",
      "function totalIdle() view returns (uint256)",
      "function totalDebt() view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function maxDeposit(address receiver) view returns (uint256)",
      "function maxMint(address receiver) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function maxWithdraw(address owner, uint256 max_loss) view returns (uint256)",
      "function maxWithdraw(address owner, uint256 max_loss, address[] strategies) view returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxRedeem(address owner, uint256 max_loss) view returns (uint256)",
      "function maxRedeem(address owner, uint256 max_loss, address[] strategies) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function FACTORY() view returns (address)",
      "function apiVersion() pure returns (string)",
      "function assess_share_of_unrealised_losses(address strategy, uint256 assets_needed) view returns (uint256)",
      "function profitMaxUnlockTime() view returns (uint256)",
      "function fullProfitUnlockDate() view returns (uint256)",
      "function profitUnlockingRate() view returns (uint256)",
      "function lastProfitUpdate() view returns (uint256)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function asset() view returns (address)",
      "function decimals() view returns (uint8)",
      "function strategies(address arg0) view returns (tuple(uint256 activation, uint256 last_report, uint256 current_debt, uint256 max_debt))",
      "function default_queue(uint256 arg0) view returns (address)",
      "function use_default_queue() view returns (bool)",
      "function auto_allocate() view returns (bool)",
      "function allowance(address arg0, address arg1) view returns (uint256)",
      "function minimum_total_idle() view returns (uint256)",
      "function deposit_limit() view returns (uint256)",
      "function accountant() view returns (address)",
      "function deposit_limit_module() view returns (address)",
      "function withdraw_limit_module() view returns (address)",
      "function roles(address arg0) view returns (uint256)",
      "function role_manager() view returns (address)",
      "function future_role_manager() view returns (address)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function nonces(address arg0) view returns (uint256)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xeeeeee9eC4769A09a76A83C7bC42b185872860eE": [
      "constructor(address permit2)",
      "error AddressEmptyCode(address target)",
      "error AddressInsufficientBalance(address account)",
      "error ArrayLengthsMismatch()",
      "error FailedInnerCall()",
      "error InvalidMsgSender(address storedSender, address actualSender)",
      "error InvalidRecipient(address recipient)",
      "error InvalidTarget(address target)",
      "error NativeTransferFailed()",
      "error NoRecipientSet()",
      "error OnlyDirectCalls()",
      "error SafeERC20FailedOperation(address token)",
      "error TStoreAlreadyActivated()",
      "error TStoreNotSupported()",
      "error TloadTestContractDeploymentFailed()",
      "function _EIP_712_RELAYER_WITNESS_TYPE_HASH() view returns (bytes32)",
      "function _RELAYER_WITNESS_TYPE_STRING() view returns (string)",
      "function __activateTstore()",
      "function cleanupERC20(address token, address refundTo)",
      "function delegatecallMulticall(address[] targets, bytes[] datas, uint256[] values, address refundTo) payable returns (bytes[])",
      "function onERC1155BatchReceived(address, address, uint256[] _ids, uint256[] _values, bytes _data) returns (bytes4)",
      "function onERC1155Received(address, address, uint256 _id, uint256 _value, bytes _data) returns (bytes4)",
      "function onERC721Received(address, address, uint256 _tokenId, bytes _data) returns (bytes4)",
      "function permitMulticall(address user, tuple(tuple(address token, uint256 amount)[] permitted, uint256 nonce, uint256 deadline) permit, address[] targets, bytes[] datas, uint256[] values, address refundTo, bytes permitSignature) payable returns (bytes[])"
    ],
    "0xFEB4acf3df3cDEA7399794D0869ef76A6EfAff52": [
      "constructor(address _masterCopy)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "yearn/vaultv3": "0xfa2c8148050d24bcc2f100b33c5f19da7574046371aa1b2622d2944f4facb0ff"
  },
  "permissionsConfigHash": "0x0b5dfe96ee9833b81de57cb9e894b8bc96041f7f540ccd1ce0138557bfa47fa9"
}
