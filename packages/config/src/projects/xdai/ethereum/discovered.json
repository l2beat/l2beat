{
  "name": "xdai",
  "chain": "ethereum",
  "blockNumber": 22297612,
  "configHash": "0xae974cf9143b81fb925cb0b8a4f5509991c51e038ac41d46e96bab8f84b566b9",
  "entries": [
    {
      "address": "0x0577FEC70907676039f7DAF961F8A44bda3Ea9Af",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x1312E98995bbCc30fc63Db3cef807e20CDd33dca",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Yaru",
      "address": "0x30f64a297cc66a873FB603d1e89D5891962C25ba",
      "type": "Contract",
      "template": "gnosisbridge/Yaru",
      "sourceHashes": [
        "0x08b3a970ed97adf129059abd1030e73ebd6904533643bd35cfce0459bf3a0641"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1726020995,
      "sinceBlock": 20724328,
      "values": {
        "$immutable": true,
        "HASHI": "0xA86bc62Ac53Dc86687AB6C15fdebC71ad51fB615",
        "SOURCE_CHAIN_ID": 100,
        "YAHO": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8"
      },
      "derivedName": "Yaru"
    },
    {
      "address": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x9acCFAD714A1e670CD1f6dc666FE892d1d5547BD"
        }
      ]
    },
    {
      "address": "0x329c54289Ff5D6B7b7daE13592C6B1EDA1543eD4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisBridgeGovernanceMultisig",
      "address": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xd5a33441170541b7df25812e0e3dff6562b2f09ab835a6b431cb9e7198a47605",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016"
        },
        {
          "permission": "upgrade",
          "from": "0xe1579dEbdD2DF16Ebdb9db8694391fa74EeA201E"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1600956399,
      "sinceBlock": 10925774,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43",
          "0xb8173f558f75EE263013fd6294177bf75279a21e",
          "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
          "0xf59E447E97bC03c2B0C5719e2E551F0B15b724e5",
          "0xA07888742c18d7e658132AE0148fF205fFF46481",
          "0x329c54289Ff5D6B7b7daE13592C6B1EDA1543eD4",
          "0xcF9ebF877688Ed88a7479A6e63457Fd78D4275cE",
          "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893",
          "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8",
          "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
          "0xB646B8b5Fe6cBc7770578B7679208337ef747ae4",
          "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
          "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
          "0xb2a33ae0E07fD2ca8DBdE9545F6ce0b3234dc4e8",
          "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
          "0x544cE64C3Fc6Da72CEB2456CC4cF19E7c7972eFA"
        ],
        "$threshold": 8,
        "domainSeparator": "0x877c70937e5670b3f50eb943a4e9d65fbd9bc8ce060659a7dc0543885a0ca59e",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "8 of 16 (50%)",
        "nonce": 86,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "address": "0x4743BA328C28dbC2b8B4e083b92cB4baA047494b",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SDaiForeignBridge",
      "address": "0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016",
      "type": "Contract",
      "sourceHashes": [
        "0x781decea1d7b5174464b57449f32ada83d1c1b7e12bdfa47eb9d00a41a36c839",
        "0x07db9068db8cb815b37ab00e7a0098b6200657a2c4126fc4c87af49468891d99"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["maxAvailablePerTx", "nonce"],
      "sinceTimestamp": 1539028166,
      "sinceBlock": 6478422,
      "values": {
        "$admin": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "$implementation": "0xb54042F5bA4B048fEa54aaE70abbbe41AC716299",
        "$pastUpgrades": [
          [
            "2018-10-08T19:50:23.000Z",
            "0x01d8eeea7ea146970fb4fbe8991d6118f8f41a779b06c69041d32362575f1eda",
            ["0x710d6eC2b0948dEf1f423Ec77B51b6a55847D2C5"]
          ],
          [
            "2018-12-19T12:49:42.000Z",
            "0x29fdf4418b3ab5b5380e7ad0259278b1bbab18e121438c9c9d69ac6091f44a00",
            ["0x0D3726e5a9f37234D6B55216fC971D30F150a60F"]
          ],
          [
            "2019-12-25T13:53:49.000Z",
            "0x003ae91dc06c549cc28cdf47294abeb545577e119b98f6b6e631940a744a3356",
            ["0x75Df5AF045d91108662D8080fD1FEFAd6aA0bb59"]
          ],
          [
            "2020-03-31T11:16:05.000Z",
            "0x9f50cee64b4e729b7bd61630ed174ea3c7e47e3db1403d9828a9736b2ad7ce79",
            ["0xd40355B17643Bc26554c9A9BBC95b5CAbd92C2CD"]
          ],
          [
            "2020-04-16T15:59:27.000Z",
            "0xd0c3c92c94e05bc71256055ce8c4c993e047f04e04f3283a04e4cb077b71f6c6",
            ["0x83c2E0E3B5328E599a3cBa95d97090fA7d0FDE8b"]
          ],
          [
            "2020-05-12T14:05:38.000Z",
            "0x0f8ee640cb733e48ef1011554cb36945492f8cd40b5111417d1f54f30633f986",
            ["0x7E7669bdff02F2eE75b68B91FB81c2B38F9228C2"]
          ],
          [
            "2021-10-06T18:49:32.000Z",
            "0xb4afa1efcf12ba7907458062704efcc5658af3da5d36a4b4d4035af431d9df19",
            ["0xEeE4f8dB4410beBD74A76cB711D096c5E66d0473"]
          ],
          [
            "2023-09-20T07:33:35.000Z",
            "0x291d48fdfd430165b2b7f62c3ae806ea28ab34b4dc8a2e4d7d01693f19b780c9",
            ["0x166124b75c798Cedf1B43655E9B5284eBd5203DB"]
          ],
          [
            "2025-04-15T09:12:11.000Z",
            "0xc4db8a77365d4870af65f44232ca728e5e0fd583cde3ba83ba81cac3d77ff89d",
            ["0xb54042F5bA4B048fEa54aaE70abbbe41AC716299"]
          ]
        ],
        "$upgradeCount": 9,
        "dailyLimit": "10000000000000000000000000",
        "daiToken": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "decimalShift": 0,
        "deployedAtBlock": 6478428,
        "erc20token": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "executionDailyLimit": "15000000000000000000000000",
        "executionMaxPerTx": "10000000000000000000000000",
        "gasPrice": 100000000000,
        "getBridgeInterfacesVersion": { "major": 6, "minor": 1, "patch": 0 },
        "getBridgeMode": "0x18762d46",
        "getTrustedForwarder": "0x0000000000000000000000000000000000000000",
        "HASHI_IS_ENABLED": true,
        "HASHI_IS_MANDATORY": false,
        "hashiManager": "0x9acCFAD714A1e670CD1f6dc666FE892d1d5547BD",
        "implementation": "0xb54042F5bA4B048fEa54aaE70abbbe41AC716299",
        "isInitialized": true,
        "maxAvailablePerTx": "9961054445144258732097276",
        "maxPerTx": "9999999000000000000000000",
        "minPerTx": 5000000000000000,
        "nonce": 47,
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "proxyOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "requiredBlockConfirmations": 20,
        "requiredSignatures": 4,
        "sDaiToken": "0x83F20F44975D03b1b09e64809B757c47f942BEeA",
        "upgradeabilityOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "validatorContract": "0xe1579dEbdD2DF16Ebdb9db8694391fa74EeA201E",
        "version": 9,
        "versionRecipient": "1.0.1"
      },
      "derivedName": "XDaiForeignBridge"
    },
    {
      "name": "GnosisSafe",
      "address": "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1686042107,
      "sinceBlock": 17420395,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xD1aA7F557af9cC5Ba4Daf87D923d712fdAf1D709",
          "0x4743BA328C28dbC2b8B4e083b92cB4baA047494b",
          "0x52F05Eff62fC36c83d840D9684daCAD3be43D8bf"
        ],
        "$threshold": 2,
        "domainSeparator": "0xaee10730379a3d6df2303789b1843342698bd85d618cdf13a5f75b84e16d88eb",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 20,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "address": "0x4D1c96B9A49C4469A0b720a22b74b034EDdFe051",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x52F05Eff62fC36c83d840D9684daCAD3be43D8bf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x544cE64C3Fc6Da72CEB2456CC4cF19E7c7972eFA",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x587C0d02B40822f15f05301d87c16f6a08AaDDde",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Safe",
      "address": "0x670a3e447F4DE92C012777Ac5591D81E12aD0957",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1729072343,
      "sinceBlock": 20977347,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0xeca6EAa2C77d8f0aA9247e681C64455deAae51aC",
          "0x0577FEC70907676039f7DAF961F8A44bda3Ea9Af",
          "0xB1dD1828794075f7521365163A93DE9e68e3c49f",
          "0x9bd93c5ad5e0a6be890c82FD77eE42ce8B642eF8"
        ],
        "$threshold": 2,
        "domainSeparator": "0x55fd33e1f6d651168aaf544b6f7a3e8b59f3673b8dfdef28e13b9053b118aa40",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 4 (50%)",
        "nonce": 5,
        "VERSION": "1.4.1"
      },
      "derivedName": "Safe"
    },
    {
      "address": "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x90776017057b84bc47D7e7383b65C463C80a6cdd",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x97630E2aE609D4104aBdA91F3066C556403182dd",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "HashiManager",
      "address": "0x9acCFAD714A1e670CD1f6dc666FE892d1d5547BD",
      "type": "Contract",
      "sourceHashes": [
        "0xc2d647dd43d1a5c348b27b8b2bd671627d194c85cb69a865e67ae8dbdf38b705",
        "0x824f58e3acf3f9403dc26549af4869336347109f24d07d82aa11897bed907b17"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
          "via": []
        }
      ],
      "sinceTimestamp": 1738140599,
      "sinceBlock": 21729100,
      "values": {
        "$admin": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
        "$implementation": "0x716623daF27f2aFA8D6051A4Eda08E12107a2c83",
        "$pastUpgrades": [
          [
            "2025-01-29T08:50:23.000Z",
            "0xa689d7b7870d7f1e36c27d9a26d2315b38c27be19e985a7038b4fa1e706807aa",
            ["0x716623daF27f2aFA8D6051A4Eda08E12107a2c83"]
          ]
        ],
        "$upgradeCount": 1,
        "adapters": ["gnosis:0xCEb436489e9C6d9E4Db76145A6CCE2a06411ea0A"],
        "AdaptersFromStorage": "0x0000000000000000000000000000000000000000",
        "deployedAtBlock": 0,
        "expectedAdaptersHash": "0x6b603f4a7f51661e39122b2cc2745ffbc56eca92e59f655d365cd5170d930c0a",
        "expectedThreshold": 1,
        "implementation": "0x716623daF27f2aFA8D6051A4Eda08E12107a2c83",
        "isInitialized": true,
        "owner": "0x670a3e447F4DE92C012777Ac5591D81E12aD0957",
        "reporters": ["gnosis:0x0000000000000000000000000000000000000000"],
        "targetAddress": "gnosis:0x7301CFA0e1756B71869E93d4e4Dca5c7d0eb0AA6",
        "targetChainId": 100,
        "threshold": 1,
        "upgradeabilityOwner": "0x30Fb61178F39c0452cED4AD9A7FEC3344CB10B2E",
        "version": 1,
        "yaho": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8",
        "yaru": "0x30f64a297cc66a873FB603d1e89D5891962C25ba"
      },
      "fieldMeta": {
        "HASHI_IS_MANDATORY": {
          "severity": "HIGH",
          "description": "If true, Hashi validation is mandatory"
        },
        "targetAddress": {
          "severity": "HIGH",
          "description": "Address of the target contract on GnosisChain"
        },
        "adapters": {
          "severity": "HIGH",
          "description": "Array of the adapters on GnosisChain"
        },
        "reporters": {
          "severity": "HIGH",
          "description": "Array of the reports on GnosisChain"
        },
        "threshold": {
          "severity": "HIGH",
          "description": "Threshold of the adapters on GnosisChain"
        }
      },
      "derivedName": "HashiManager",
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "gnosis" } }
      ]
    },
    {
      "address": "0x9bd93c5ad5e0a6be890c82FD77eE42ce8B642eF8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xA07888742c18d7e658132AE0148fF205fFF46481",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Hashi",
      "address": "0xA86bc62Ac53Dc86687AB6C15fdebC71ad51fB615",
      "type": "Contract",
      "sourceHashes": [
        "0x43d4a4b8ebf5f34d224efe2343c5abc3fc5042025c06fb8dd82efc9257fbaa92"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1720770791,
      "sinceBlock": 20289052,
      "values": { "$immutable": true },
      "derivedName": "Hashi"
    },
    {
      "address": "0xB1dD1828794075f7521365163A93DE9e68e3c49f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xb2a33ae0E07fD2ca8DBdE9545F6ce0b3234dc4e8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xB646B8b5Fe6cBc7770578B7679208337ef747ae4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xb8173f558f75EE263013fd6294177bf75279a21e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Yaho",
      "address": "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8",
      "type": "Contract",
      "template": "gnosisbridge/Yaho",
      "sourceHashes": [
        "0x0a159de58bdd599af48d18d484a70a71f1038064d066e7e489b877721b866bcb"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1720772543,
      "sinceBlock": 20289197,
      "values": { "$immutable": true },
      "derivedName": "Yaho"
    },
    {
      "address": "0xc073C8E5ED9Aa11CF6776C69b3e13b259Ba9F506",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xcF9ebF877688Ed88a7479A6e63457Fd78D4275cE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xD1aA7F557af9cC5Ba4Daf87D923d712fdAf1D709",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BridgeValidators",
      "address": "0xe1579dEbdD2DF16Ebdb9db8694391fa74EeA201E",
      "type": "Contract",
      "sourceHashes": [
        "0x781decea1d7b5174464b57449f32ada83d1c1b7e12bdfa47eb9d00a41a36c839",
        "0x7123b263360e368977fbfb7da550817b9a4807849090a69d6415b0b1bb33b398"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "to": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
          "via": []
        }
      ],
      "sinceTimestamp": 1539028018,
      "sinceBlock": 6478411,
      "values": {
        "$admin": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "$implementation": "0x6943A218d58135793F1FE619414eD476C37ad65a",
        "$pastUpgrades": [
          [
            "2018-10-08T19:48:08.000Z",
            "0x6dbedab00bc4840c459ba44c856c3aa1e7be5acd0c4a4602620a457979e7c4ee",
            ["0xd760E016226836cC02E329aDDBB6821945Dd5100"]
          ],
          [
            "2019-12-25T13:53:35.000Z",
            "0x721841ce7ca52a0a5ed23f1f4093fdd1dac4e538bcace263f0b59008885d2f34",
            ["0x6943A218d58135793F1FE619414eD476C37ad65a"]
          ]
        ],
        "$upgradeCount": 2,
        "deployedAtBlock": 6478417,
        "F_ADDR": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
        "getBridgeValidatorsInterfacesVersion": {
          "major": 2,
          "minor": 3,
          "patch": 0
        },
        "implementation": "0x6943A218d58135793F1FE619414eD476C37ad65a",
        "isInitialized": true,
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "proxyOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "requiredSignatures": 4,
        "upgradeabilityOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "validatorCount": 7,
        "validatorList": [
          "0x90776017057b84bc47D7e7383b65C463C80a6cdd",
          "0xfA98B60E02A61B6590f073cAD56e68326652d094",
          "0x97630E2aE609D4104aBdA91F3066C556403182dd",
          "0x587C0d02B40822f15f05301d87c16f6a08AaDDde",
          "0x1312E98995bbCc30fc63Db3cef807e20CDd33dca",
          "0x4D1c96B9A49C4469A0b720a22b74b034EDdFe051",
          "0xc073C8E5ED9Aa11CF6776C69b3e13b259Ba9F506"
        ],
        "version": 2
      },
      "derivedName": "BridgeValidators"
    },
    {
      "address": "0xeca6EAa2C77d8f0aA9247e681C64455deAae51aC",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "DaiForeignBridge",
      "address": "0xEeE4f8dB4410beBD74A76cB711D096c5E66d0473",
      "type": "Contract",
      "sourceHashes": [
        "0xcb87e015ffbef1673d8778ea9b1172914c7fc9f9c57dc71e126ad5b0fb9bda62"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1633444035,
      "sinceBlock": 13359601,
      "values": {
        "$immutable": true,
        "cDaiToken": "0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643",
        "compToken": "0xc00e94Cb662C3520282E6f5717214004A7f26888",
        "comptroller": "0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B",
        "dailyLimit": 0,
        "daiToken": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "decimalShift": 0,
        "deployedAtBlock": 0,
        "erc20token": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "executionDailyLimit": 0,
        "executionMaxPerTx": 0,
        "gasPrice": 0,
        "getBridgeInterfacesVersion": { "major": 6, "minor": 1, "patch": 0 },
        "getBridgeMode": "0x18762d46",
        "getTrustedForwarder": "0x0000000000000000000000000000000000000000",
        "isInitialized": false,
        "maxAvailablePerTx": 0,
        "maxPerTx": 0,
        "minPerTx": 0,
        "owner": "0x0000000000000000000000000000000000000000",
        "requiredBlockConfirmations": 0,
        "requiredSignatures": "EXPECT_REVERT",
        "validatorContract": "0x0000000000000000000000000000000000000000",
        "versionRecipient": "1.0.1"
      },
      "derivedName": "XDaiForeignBridge"
    },
    {
      "address": "0xf59E447E97bC03c2B0C5719e2E551F0B15b724e5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xfA98B60E02A61B6590f073cAD56e68326652d094",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
      "type": "EOA",
      "proxyType": "EOA"
    }
  ],
  "abis": {
    "0x30f64a297cc66a873FB603d1e89D5891962C25ba": [
      "constructor(address hashi, address yaho_, uint256 sourceChainId)",
      "error CallFailed()",
      "error InvalidToChainId(uint256 chainId, uint256 expectedChainId)",
      "error MessageIdAlreadyExecuted(uint256 messageId)",
      "error ThresholdNotMet()",
      "event MessageExecuted(uint256 indexed messageId, tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message)",
      "function HASHI() view returns (address)",
      "function SOURCE_CHAIN_ID() view returns (uint256)",
      "function YAHO() view returns (address)",
      "function calculateMessageHash(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message) pure returns (bytes32)",
      "function calculateMessageId(uint256 sourceChainId, address dispatcherAddress, bytes32 messageHash) pure returns (uint256)",
      "function executeMessages(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters)[] messages) returns (bytes[])",
      "function executed(uint256) view returns (bool)"
    ],
    "0x41675C099F32341bf84BFc5382aF534df5C7461a": [
      "constructor()",
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6": [
      "constructor(address _masterCopy)"
    ],
    "0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016": [
      "function proxyOwner() view returns (address)",
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43": [
      "constructor(address _singleton)"
    ],
    "0x670a3e447F4DE92C012777Ac5591D81E12aD0957": [
      "constructor(address _singleton)"
    ],
    "0x6943A218d58135793F1FE619414eD476C37ad65a": [
      "function validatorCount() view returns (uint256)",
      "function getBridgeValidatorsInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function isInitialized() view returns (bool)",
      "function removeValidator(address _validator)",
      "function addValidator(address _validator)",
      "function initialize(uint256 _requiredSignatures, address[] _initialValidators, address _owner) returns (bool)",
      "function validatorList() view returns (address[])",
      "function setRequiredSignatures(uint256 _requiredSignatures)",
      "function requiredSignatures() view returns (uint256)",
      "function getNextValidator(address _address) view returns (address)",
      "function owner() view returns (address)",
      "function isValidatorDuty(address _validator) view returns (bool)",
      "function deployedAtBlock() view returns (uint256)",
      "function upgradeToV230()",
      "function F_ADDR() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function isValidator(address _validator) view returns (bool)",
      "event ValidatorAdded(address indexed validator)",
      "event ValidatorRemoved(address indexed validator)",
      "event RequiredSignaturesChanged(uint256 requiredSignatures)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0x716623daF27f2aFA8D6051A4Eda08E12107a2c83": [
      "function setExpectedThreshold(uint256 expectedThreshold_)",
      "function setYaho(address yaho_)",
      "function targetChainId() view returns (uint256)",
      "function setReportersAdaptersAndThreshold(address[] reporters, address[] adapters, uint256 threshold)",
      "function expectedThreshold() view returns (uint256)",
      "function isInitialized() view returns (bool)",
      "function threshold() view returns (uint256)",
      "function targetAddress() view returns (address)",
      "function adapters() view returns (address[])",
      "function yaru() view returns (address)",
      "function owner() view returns (address)",
      "function deployedAtBlock() view returns (uint256)",
      "function initialize(address _owner) returns (bool)",
      "function setTargetChainId(uint256 targetChainId_)",
      "function setYaru(address yaru_)",
      "function setExpectedAdaptersHash(address[] adapters_)",
      "function yaho() view returns (address)",
      "function reporters() view returns (address[])",
      "function expectedAdaptersHash() view returns (bytes32)",
      "function transferOwnership(address newOwner)",
      "function setTargetAddress(address targetAddress_)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0x9acCFAD714A1e670CD1f6dc666FE892d1d5547BD": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0xA86bc62Ac53Dc86687AB6C15fdebC71ad51fB615": [
      "error AdaptersDisagree(address adapterOne, address adapterTwo)",
      "error HashNotAvailableInAdapter(address adapter)",
      "error InvalidThreshold(uint256 threshold, uint256 maxThreshold)",
      "error NoAdaptersGiven()",
      "function checkHashWithThresholdFromAdapters(uint256 domain, uint256 id, uint256 threshold, address[] adapters) view returns (bool)",
      "function getHash(uint256 domain, uint256 id, address[] adapters) view returns (bytes32 hash)",
      "function getHashFromAdapter(uint256 domain, uint256 id, address adapter) view returns (bytes32)",
      "function getHashesFromAdapters(uint256 domain, uint256 id, address[] adapters) view returns (bytes32[])"
    ],
    "0xb54042F5bA4B048fEa54aaE70abbbe41AC716299": [
      "function relayTokens(address _receiver, uint256 _amount)",
      "function invest(address _token)",
      "function refillBridge()",
      "function payInterest(address _token, uint256 _amount)",
      "function erc20token() view returns (address)",
      "function HASHI_IS_MANDATORY() view returns (bool)",
      "function executeSignaturesGSN(bytes message, bytes signatures, uint256 maxTokensFee)",
      "function relayedMessages(bytes32 _nonce) view returns (bool)",
      "function totalSpentPerDay(uint256 _day) view returns (uint256)",
      "function sDaiToken() pure returns (address)",
      "function isInitialized() view returns (bool)",
      "function setExecutionDailyLimit(uint256 _dailyLimit)",
      "function getCurrentDay() view returns (uint256)",
      "function requiredBlockConfirmations() view returns (uint256)",
      "function executeSignatures(bytes message, bytes signatures)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function executionDailyLimit() view returns (uint256)",
      "function minInterestPaid(address _token) view returns (uint256)",
      "function versionRecipient() view returns (string)",
      "function totalExecutedPerDay(uint256 _day) view returns (uint256)",
      "function minCashThreshold(address _token) view returns (uint256)",
      "function isTrustedForwarder(address forwarder) view returns (bool)",
      "function dailyLimit() view returns (uint256)",
      "function claimTokens(address _token, address _to)",
      "function initialize(address _validatorContract, address _erc20token, uint256 _requiredBlockConfirmations, uint256 _gasPrice, uint256[3] _dailyLimitMaxPerTxMinPerTxArray, uint256[2] _homeDailyLimitHomeMaxPerTxArray, address _owner, int256 _decimalShift, address _bridgeOnOtherSide) returns (bool)",
      "function investDai()",
      "function resendDataWithHashi(bytes data)",
      "function hashiManager() view returns (address)",
      "function setPayMaster(address _paymaster)",
      "function withinExecutionLimit(uint256 _amount) view returns (bool)",
      "function executionMaxPerTx() view returns (uint256)",
      "function HASHI_IS_ENABLED() view returns (bool)",
      "function requiredSignatures() view returns (uint256)",
      "function owner() view returns (address)",
      "function isApprovedByHashi(bytes32 hashMsg) view returns (bool)",
      "function setInterestReceiver(address _token, address _receiver)",
      "function maxAvailablePerTx() view returns (uint256)",
      "function validatorContract() view returns (address)",
      "function deployedAtBlock() view returns (uint256)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function setMinPerTx(uint256 _minPerTx)",
      "function setMinInterestPaid(address _token, uint256 _minInterestPaid)",
      "function setMinCashThreshold(address _token, uint256 _minCashThreshold)",
      "function interestReceiver(address _token) view returns (address)",
      "function setRequiredBlockConfirmations(uint256 _blockConfirmations)",
      "function nonce() view returns (uint256)",
      "function setDailyLimit(uint256 _dailyLimit)",
      "function previewWithdraw(address _token, uint256 _amount) view returns (uint256)",
      "function daiToken() pure returns (address)",
      "function setHashiManager(address _hashiManager)",
      "function setGasPrice(uint256 _gasPrice)",
      "function recoverLegacyTransfer(address _to)",
      "function setMaxPerTx(uint256 _maxPerTx)",
      "function interestAmount(address _token) view returns (uint256)",
      "function initializeInterest(address _token, uint256 _minCashThreshold, uint256 _minInterestPaid, address _interestReceiver)",
      "function getTrustedForwarder() view returns (address)",
      "function investedAmount(address _token) view returns (uint256)",
      "function isInterestEnabled(address _token) view returns (bool)",
      "function onMessage(uint256, uint256 chainId, address sender, uint256 threshold, address[] adapters, bytes data) returns (bytes)",
      "function setTrustedForwarder(address _trustedForwarder)",
      "function decimalShift() view returns (int256)",
      "function minPerTx() view returns (uint256)",
      "function withinLimit(uint256 _amount) view returns (bool)",
      "function setExecutionMaxPerTx(uint256 _maxPerTx)",
      "function transferOwnership(address newOwner)",
      "function disableInterest(address _token)",
      "function maxPerTx() view returns (uint256)",
      "function gasPrice() view returns (uint256)",
      "event PaidInterest(address indexed token, address to, uint256 value)",
      "event RelayedMessage(address recipient, uint256 value, bytes32 transactionHash)",
      "event UserRequestForAffirmation(address recipient, uint256 value, bytes32 nonce)",
      "event DailyLimitChanged(uint256 newLimit)",
      "event ExecutionDailyLimitChanged(uint256 newLimit)",
      "event GasPriceChanged(uint256 gasPrice)",
      "event RequiredBlockConfirmationChanged(uint256 requiredBlockConfirmations)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0xbAE4Ebbf42815BB9Bc3720267Ea4496277d60DB8": [
      "error InvalidMessage(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message)",
      "error InvalidThreshold(uint256 threshold, uint256 maxThreshold)",
      "error MessageHashNotFound(uint256 messageId)",
      "error NoAdaptersGiven()",
      "error NoMessageIdsGiven()",
      "error NoMessagesGiven()",
      "error NoReportersGiven()",
      "error UnequalArrayLengths(uint256 arrayOne, uint256 arrayTwo)",
      "event MessageDispatched(uint256 indexed messageId, tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message)",
      "function calculateMessageHash(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters) message) pure returns (bytes32)",
      "function calculateMessageId(uint256 sourceChainId, address dispatcherAddress, bytes32 messageHash) pure returns (uint256)",
      "function currentNonce() view returns (uint256)",
      "function dispatchMessage(uint256 targetChainId, uint256 threshold, address receiver, bytes data, address[] reporters, address[] adapters) returns (uint256)",
      "function dispatchMessageToAdapters(uint256 targetChainId, uint256 threshold, address receiver, bytes data, address[] reporters, address[] adapters) payable returns (uint256, bytes32[])",
      "function dispatchMessagesToAdapters(uint256 targetChainId, uint256[] thresholds, address[] receivers, bytes[] data, address[] reporters, address[] adapters) payable returns (uint256[], bytes32[])",
      "function getPendingMessageHash(uint256 messageId) view returns (bytes32)",
      "function relayMessagesToAdapters(tuple(uint256 nonce, uint256 targetChainId, uint256 threshold, address sender, address receiver, bytes data, address[] reporters, address[] adapters)[] messages) payable returns (bytes32[])"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xe1579dEbdD2DF16Ebdb9db8694391fa74EeA201E": [
      "function proxyOwner() view returns (address)",
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0xEeE4f8dB4410beBD74A76cB711D096c5E66d0473": [
      "function relayTokens(address _receiver, uint256 _amount)",
      "function invest(address _token)",
      "function erc20token() view returns (address)",
      "function executeSignaturesGSN(bytes message, bytes signatures, uint256 maxTokensFee)",
      "function relayedMessages(bytes32 _txHash) view returns (bool)",
      "function totalSpentPerDay(uint256 _day) view returns (uint256)",
      "function isInitialized() view returns (bool)",
      "function setExecutionDailyLimit(uint256 _dailyLimit)",
      "function getCurrentDay() view returns (uint256)",
      "function requiredBlockConfirmations() view returns (uint256)",
      "function executeSignatures(bytes message, bytes signatures)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function executionDailyLimit() view returns (uint256)",
      "function minInterestPaid(address _token) view returns (uint256)",
      "function versionRecipient() view returns (string)",
      "function totalExecutedPerDay(uint256 _day) view returns (uint256)",
      "function minCashThreshold(address _token) view returns (uint256)",
      "function isTrustedForwarder(address forwarder) view returns (bool)",
      "function comptroller() pure returns (address)",
      "function compToken() pure returns (address)",
      "function dailyLimit() view returns (uint256)",
      "function claimTokens(address _token, address _to)",
      "function migrateTo_6_1_0(address _interestReceiver)",
      "function initialize(address _validatorContract, address _erc20token, uint256 _requiredBlockConfirmations, uint256 _gasPrice, uint256[3] _dailyLimitMaxPerTxMinPerTxArray, uint256[2] _homeDailyLimitHomeMaxPerTxArray, address _owner, int256 _decimalShift, address _bridgeOnOtherSide) returns (bool)",
      "function investDai()",
      "function claimCompAndPay()",
      "function setPayMaster(address _paymaster)",
      "function withinExecutionLimit(uint256 _amount) view returns (bool)",
      "function executionMaxPerTx() view returns (uint256)",
      "function requiredSignatures() view returns (uint256)",
      "function owner() view returns (address)",
      "function setInterestReceiver(address _token, address _receiver)",
      "function maxAvailablePerTx() view returns (uint256)",
      "function validatorContract() view returns (address)",
      "function deployedAtBlock() view returns (uint256)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function setMinPerTx(uint256 _minPerTx)",
      "function setMinInterestPaid(address _token, uint256 _minInterestPaid)",
      "function setMinCashThreshold(address _token, uint256 _minCashThreshold)",
      "function interestReceiver(address _token) view returns (address)",
      "function setRequiredBlockConfirmations(uint256 _blockConfirmations)",
      "function setDailyLimit(uint256 _dailyLimit)",
      "function cDaiToken() pure returns (address)",
      "function daiToken() pure returns (address)",
      "function setGasPrice(uint256 _gasPrice)",
      "function setMaxPerTx(uint256 _maxPerTx)",
      "function interestAmount(address _token) view returns (uint256)",
      "function initializeInterest(address _token, uint256 _minCashThreshold, uint256 _minInterestPaid, address _interestReceiver)",
      "function getTrustedForwarder() view returns (address)",
      "function investedAmount(address _token) view returns (uint256)",
      "function payInterest(address _token)",
      "function isInterestEnabled(address _token) view returns (bool)",
      "function setTrustedForwarder(address _trustedForwarder)",
      "function decimalShift() view returns (int256)",
      "function minPerTx() view returns (uint256)",
      "function withinLimit(uint256 _amount) view returns (bool)",
      "function setExecutionMaxPerTx(uint256 _maxPerTx)",
      "function transferOwnership(address newOwner)",
      "function disableInterest(address _token)",
      "function maxPerTx() view returns (uint256)",
      "function gasPrice() view returns (uint256)",
      "event PaidInterest(address indexed token, address to, uint256 value)",
      "event RelayedMessage(address recipient, uint256 value, bytes32 transactionHash)",
      "event UserRequestForAffirmation(address recipient, uint256 value)",
      "event DailyLimitChanged(uint256 newLimit)",
      "event ExecutionDailyLimitChanged(uint256 newLimit)",
      "event GasPriceChanged(uint256 gasPrice)",
      "event RequiredBlockConfirmationChanged(uint256 requiredBlockConfirmations)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ]
  },
  "usedTemplates": {
    "gnosisbridge/Yaho": "0x76b2288ec00b5d9e742b851e9d05ebce417b241ace06d8810e3cf8fc347c40b4",
    "gnosisbridge/Yaru": "0xce05540016e0196c34fcc3433213c29d61e201069bda63bc542092c39cd76506",
    "GnosisSafe": "0x62ebcf7ab79ebc3a7db30e84c423951d981b749397664ae678e312687409f5f0"
  }
}
