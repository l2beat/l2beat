{
  "name": "taiko",
  "chain": "ethereum",
  "blockNumber": 22694475,
  "configHash": "0xc1d6d463dea3b1cff74ea70dd19ffac0f6bdc5ec34bed29469145e8d6e1fc142",
  "entries": [
    {
      "name": "PEMCertChainLib",
      "address": "0x02772b7B3a5Bea0141C993Dbb8D0733C19F46169",
      "type": "Contract",
      "template": "taiko/PEMCertChainLib",
      "sourceHashes": [
        "0x97476fc6413c58015ddf51b5d2e37c3fdfc6b85ced25779773a1652ecc154c77"
      ],
      "proxyType": "immutable",
      "description": "Library for managing PEM certificate chains.",
      "sinceTimestamp": 1714550639,
      "sinceBlock": 19773966,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x02772b7B3a5Bea0141C993Dbb8D0733C19F46169": "PEMCertChainLib"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "ForcedInclusionStore",
      "address": "0x05d88855361808fA1d7fc28084Ef3fCa191c4e03",
      "type": "Contract",
      "template": "taiko/ForcedInclusionStore",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0xce6601657c75d4d1a14ccf01a8722ebaa4beee1b464cd817b78af1029b9542dd"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract that allows users to enqueue forced transactions via L1. The system guarantees that at least one pending forced transaction from the queue will be processed every 255 batches. Individual transactions may face longer delays if the queue is extensive.",
      "sinceTimestamp": 1747268747,
      "sinceBlock": 22484948,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0xcdb25e201Ad3fdcFe16730A6CA2cC0B1Ce2137a2",
        "$pastUpgrades": [
          [
            "2025-05-15T00:25:47.000Z",
            "0x64a0b9958cff7b5465d4ba8ade9051c8f81eceba46f8838e3b9f797425087aa5",
            ["0x4BfB2bd9dC62474e440567D4D1D8bD72c022149b"]
          ],
          [
            "2025-05-15T00:25:47.000Z",
            "0xb5b74868eb84c8bbeada5d84156f885bb05c7170c0fd8e4bd50b68a65f0c8446",
            ["0xcdb25e201Ad3fdcFe16730A6CA2cC0B1Ce2137a2"]
          ]
        ],
        "$upgradeCount": 2,
        "feeInGwei": "9450499017092890624",
        "getForcedInclusion": [],
        "getOldestForcedInclusionDeadline": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "head": 0,
        "impl": "0xcdb25e201Ad3fdcFe16730A6CA2cC0B1Ce2137a2",
        "inbox": "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a",
        "inboxWrapper": "0x9F9D2fC7abe74C79f86F0D1212107692430eef72",
        "inclusionDelay": 255,
        "inNonReentrant": false,
        "isOldestForcedInclusionDue": false,
        "lastProcessedAtBatchId": 0,
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "resolver": "0x0000000000000000000000000000000000000000",
        "tail": 0
      },
      "implementationNames": {
        "0x05d88855361808fA1d7fc28084Ef3fCa191c4e03": "ERC1967Proxy",
        "0xcdb25e201Ad3fdcFe16730A6CA2cC0B1Ce2137a2": "ForcedInclusionStore"
      }
    },
    {
      "name": "TaikoL1",
      "address": "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a",
      "type": "Contract",
      "template": "taiko/TaikoL1PostPacaya",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0xc4ae3ca2fcf606673a1324989a7ac169b3fdb6780917814506e56898484e99d7"
      ],
      "proxyType": "TaikoFork proxy",
      "description": "Main contract implementing the logic for proposing and proving Taiko blocks on L1.",
      "ignoreInWatchMode": [
        "getLastSyncedTransition",
        "getLastVerifiedBlock",
        "getLastVerifiedTransition",
        "getStateVariables",
        "getStats1",
        "getStats2",
        "lastProposedIn",
        "state"
      ],
      "sinceTimestamp": 1714550627,
      "sinceBlock": 19773965,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": [
          "0x4e030b19135869F6fd926614754B7F9c184E2B83",
          "0x904Da4C5bD76f932fE09fF32Ae5D7E3d2A5D2264",
          "0x497B13f9192B09244de9b5F0964830969FB26F07"
        ],
        "$pastUpgrades": [
          [
            "2024-05-01T08:03:47.000Z",
            "0x675a0b8283bd222e1df42a0a4df4b781a1a7c5575729e2e91f89dda879933702",
            [
              "0x99Ba70E62cab0cB983e66F72330fBDDC11d85501",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-05-11T06:26:35.000Z",
            "0x416560cd96dc75ccffebe889e8d1ab3e08b33f814dc4a2bf7c6f9555071d1f6f",
            [
              "0x9fBBedBBcBb753E7214BE08381efE10d89D712fE",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-05-21T14:15:11.000Z",
            "0xaed098ad0c93113e401f61358f963501f40a046c5b5b659a1610f10120a9a86b",
            [
              "0xe0A5D394878723CEAEC8B993e04756DF1f4B44eF",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-05-27T16:37:11.000Z",
            "0x187cc99e9bcf2a94f723cf52d85b74b79bdb3872681e2a3808cadbbc3ba301e2",
            [
              "0xa200c2268d77737a8Fd2CA1698dA6eeab2a85CEb",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-05-28T05:18:11.000Z",
            "0xa603b6d55457e64e18ddae684bfd14948452cdd7b927dd22bf0b83045e8fd028",
            [
              "0x3505a0700DB72dEc7AbFF1aF231BB5D87aBF2944",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-06-04T06:10:11.000Z",
            "0x2c455ae888a23c232bb5c7603657eda010ffadc602a74e626332bc06eaaa3b78",
            [
              "0xE84DC8E2a21e59426542Ab040D77f81d6dB881eE",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-06-06T08:51:11.000Z",
            "0x8de1631a25b337c1e702f9ce9d9ab8a3b626922441855e959b2d79dae40bd131",
            [
              "0x4b2743B869b85d5F7D8020566f92664995E4f3c5",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-06-07T04:02:11.000Z",
            "0x0bbf7d1258c646f41a02a92a55825b1ebfd3659577d0f2b57b462f8895e23a04",
            [
              "0x0468745A07de44A9a3138adAc35875ecaf7a20D5",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-06-07T08:40:35.000Z",
            "0xdb5e926c96d112ce1389da77a927fba6c7d04a711839b9e14777530ebcf83914",
            [
              "0xB9E1E58bcF33B79CcfF99c298963546a6c334388",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-07-02T07:03:35.000Z",
            "0x13f54109cb7f7507ad03562b06ea8d8b472043186e44252302583bc64acfb20b",
            [
              "0x5fc54737ECC1de49D58AE1195d4A296257F1E31b",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-07-13T12:34:35.000Z",
            "0xdf3f0cb2eaca00484c30a5c63fafe8036a9e0f71bd4bab216504bee0f5bfb83f",
            [
              "0xcEe590fACd976B9BDE87BC1B7620B284c5edD2C3",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-07-16T14:30:23.000Z",
            "0x7d584f0a645cad61e634f64ffaf7e1bbfb92749878eb25b39ce0e5cf698897c7",
            [
              "0xBA1d90BCfA74163bFE09e8eF609b346507D83231",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-10-16T07:55:23.000Z",
            "0x8778064404816273804d74c97b051f3865bc03062cfa4b0e9567f4556ad31981",
            [
              "0xf0E6d34937701622cA887a75c150cC23d4FFDf2F",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-11-01T09:20:35.000Z",
            "0x13ea4d044a313cf667d16514465e6b96227ef7198bda7b19c70eefee44e9bccd",
            [
              "0x4229d14F520848aa83760Cf748abEB8A69cdaB2d",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-11-03T05:15:23.000Z",
            "0x78ca7c7d9c7e5aa9c5e6ab80e0229289a8d3bc8df2c2b9ba6baa74a0f60a0703",
            [
              "0xA3E75eDA1Be2114816f388A5cF53EbA142DCDB17",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-11-10T15:32:47.000Z",
            "0xa9e285d0f2cc84161ac3fc28962003779e9a618271bd6a54b16fb4001ede5b38",
            [
              "0x0205ea1e1162bc50E1030F36412E5Dd69daA4040",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-11-10T15:46:23.000Z",
            "0x5efedb806fca83936c58f9e4d30644257ce3a529239131b0b19f630320bcfb04",
            [
              "0xA3E75eDA1Be2114816f388A5cF53EbA142DCDB17",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-11-10T16:10:23.000Z",
            "0x5eb57ab352b3e3c1ddbc3fe468d582901b88c6a137ce49b0d70857d5218d626d",
            [
              "0xe7c4B445D3C7C8E4D68afb85A068F9fAa18e9A5B",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-12-23T02:45:11.000Z",
            "0xfa949022e61921e108974e73130e94fc5120463f2c537d26626e5cee2120c944",
            [
              "0xb74A66b6CF50AD63E29669F0BDE4354E11758162",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-12-23T03:12:35.000Z",
            "0xe66aba9f8bfcd86dc0ae32416862ca61a51c47f8ec747799e65f155ef27eeb20",
            [
              "0xA3E75eDA1Be2114816f388A5cF53EbA142DCDB17",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-12-23T14:55:47.000Z",
            "0x9c2f36af40c0004110041fc45d980b73b0c8dde8064713a55aeb6f69fca77a99",
            [
              "0xd4896d4537c6425aC5d89B9f122d4E4ac4D65e1c",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2024-12-24T14:19:11.000Z",
            "0x77871837d1749b22a7991da475e657baa4371937f5a8cb094d4e170db000cb25",
            [
              "0xe7c4B445D3C7C8E4D68afb85A068F9fAa18e9A5B",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2025-02-13T06:57:47.000Z",
            "0xc0e8ec30d1479ca2414d4d28a09a543c2845247d80387f78c179d663ffe55c3c",
            [
              "0x2784423f7c61Bc7B75dB6CdA26959946f437588D",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2025-02-27T03:27:23.000Z",
            "0x6368890b9aa2f87c6a6b727efdd8af0ea357a11460b546d8a7f3e19e38a34e41",
            [
              "0x5110634593Ccb8072d161A7d260A409A7E74D7Ca",
              "0x0000000000000000000000000000000000000000",
              "0x0000000000000000000000000000000000000000"
            ]
          ],
          [
            "2025-05-15T08:40:47.000Z",
            "0x97789b6668d0a287b1f57bb6c8e23cce62308fb887139faeb0f06b77855995fd",
            [
              "0x5eEcd1305aC72d4a77Bf3BD734e81c15e2A2adEf",
              "0xaA64D5A3A26D1e76AcAf6e22c199D02d58076A01",
              "0x497B13f9192B09244de9b5F0964830969FB26F07"
            ]
          ],
          [
            "2025-05-16T02:36:23.000Z",
            "0x78f766ae83ce94ef2293c9c7d81ae514e8fa0a79fbce1530c3c68d7624708795",
            [
              "0x4e030b19135869F6fd926614754B7F9c184E2B83",
              "0x904Da4C5bD76f932fE09fF32Ae5D7E3d2A5D2264",
              "0x497B13f9192B09244de9b5F0964830969FB26F07"
            ]
          ]
        ],
        "$upgradeCount": 26,
        "bondToken": "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800",
        "getConfig": {
          "chainId": 167000,
          "blockMaxProposals": 324000,
          "blockRingBufferSize": 360000,
          "maxBlocksToVerify": 16,
          "blockMaxGasLimit": 240000000,
          "livenessBond": "125000000000000000000",
          "stateRootSyncInternal": 16,
          "maxAnchorHeightOffset": 64,
          "baseFeeConfig": {
            "adjustmentQuotient": 8,
            "sharingPctg": 75,
            "gasIssuancePerSecond": 5000000,
            "minGasExcess": 1340000000,
            "maxGasIssuancePerBlock": 600000000
          },
          "ontakeForkHeight": 538304
        },
        "getLastSyncedTransition": {
          "batchId_": 1203156,
          "blockId_": 1203156,
          "ts_": {
            "parentHash": "0x581fadcc7748d3c4a8696ee2e16e3c91b5c570b934cd3101e60541b52fe7dcea",
            "blockHash": "0x3a3743cbf6ce552edce1ed8e315b6462d69c283cddc7b17e34bc1392ecc7e2ee",
            "stateRoot": "0x8af58c3da756318e63de89b69b6f2e084f22ff68b1a6f7aabb42ff7043aaef9a",
            "prover": "0x41F2F55571f9e8e3Ba511Adc48879Bd67626A2b6",
            "inProvingWindow": true,
            "createdAt": 1749793451
          }
        },
        "getLastVerifiedBlock": {
          "blockId_": 1203158,
          "blockHash_": "0xdc369ccf824acdf883b66f9f72b3e498f70a6d58524bbd9027d1f55ec6664fd9",
          "stateRoot_": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "verifiedAt_": 1739092055
        },
        "getLastVerifiedTransition": {
          "batchId_": 1203158,
          "blockId_": 1203158,
          "ts_": {
            "parentHash": "0x3f9b3c47c901f44dfca6bed2c19ec4df3b9bcf3bc3c42a17cf097589343d1e0e",
            "blockHash": "0xdc369ccf824acdf883b66f9f72b3e498f70a6d58524bbd9027d1f55ec6664fd9",
            "stateRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
            "prover": "0x41F2F55571f9e8e3Ba511Adc48879Bd67626A2b6",
            "inProvingWindow": true,
            "createdAt": 1749793451
          }
        },
        "getStateVariables": [
          {
            "genesisHeight": 19923613,
            "genesisTimestamp": 1716358991,
            "lastSyncedBlockId": 1203156,
            "lastSynecdAt": 1749803375
          },
          {
            "numBlocks": 1203396,
            "lastVerifiedBlockId": 1203158,
            "provingPaused": false,
            "lastProposedIn": 22694473,
            "lastUnpausedAt": 1716571955
          }
        ],
        "getStats1": {
          "genesisHeight": 19923613,
          "__reserved2": 1716358991,
          "lastSyncedBatchId": 1203156,
          "lastSyncedAt": 1749803375
        },
        "getStats2": {
          "numBatches": 1203396,
          "lastVerifiedBatchId": 1203158,
          "paused": false,
          "lastProposedIn": 22694473,
          "lastUnpausedAt": 1716571955
        },
        "impl": "0x4e030b19135869F6fd926614754B7F9c184E2B83",
        "inboxWrapper": "0x9F9D2fC7abe74C79f86F0D1212107692430eef72",
        "inNonReentrant": false,
        "isOnL1": true,
        "lastProposedIn": 22694473,
        "newFork": "0x497B13f9192B09244de9b5F0964830969FB26F07",
        "oldFork": "0x904Da4C5bD76f932fE09fF32Ae5D7E3d2A5D2264",
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "pacayaConfig": {
          "chainId": 167000,
          "maxUnverifiedBatches": 324000,
          "batchRingBufferSize": 360000,
          "maxBatchesToVerify": 16,
          "blockMaxGasLimit": 240000000,
          "livenessBondBase": "125000000000000000000",
          "livenessBondPerBlock": 0,
          "stateRootSyncInternal": 4,
          "maxAnchorHeightOffset": 64,
          "baseFeeConfig": {
            "adjustmentQuotient": 8,
            "sharingPctg": 50,
            "gasIssuancePerSecond": 5000000,
            "minGasExcess": 1344899430,
            "maxGasIssuancePerBlock": 600000000
          },
          "provingWindow": 7200,
          "cooldownWindow": 7200,
          "maxSignalsToReceive": 16,
          "maxBlocksPerBatch": 768,
          "forkHeights": {
            "ontake": 538304,
            "pacaya": 1166000,
            "shasta": 0,
            "unzen": 0
          }
        },
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "resolver": "0x0000000000000000000000000000000000000000",
        "signalService": "0x9e0a24964e5397B566c1ed39258e21aB5E35C77C",
        "state": {
          "__reserve1": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "stats1": {
            "genesisHeight": 19923613,
            "__reserved2": 1716358991,
            "lastSyncedBatchId": 1203156,
            "lastSyncedAt": 1749803375
          },
          "stats2": {
            "numBatches": 1203396,
            "lastVerifiedBatchId": 1203158,
            "paused": false,
            "lastProposedIn": 22694473,
            "lastUnpausedAt": 1716571955
          }
        },
        "verifier": "0xB16931e78d0cE3c9298bbEEf3b5e2276D34b8da1"
      },
      "implementationNames": {
        "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a": "ERC1967Proxy",
        "0x4e030b19135869F6fd926614754B7F9c184E2B83": "PacayaForkRouter",
        "0x904Da4C5bD76f932fE09fF32Ae5D7E3d2A5D2264": "MainnetTaikoL1",
        "0x497B13f9192B09244de9b5F0964830969FB26F07": "MainnetInbox"
      }
    },
    {
      "address": "0x0aED2375549D1115e180bd0caea829C429Ea50B3",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x0F026a3efE44E0Fe34B87375EFe69b16c05D0438",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Halborn",
      "address": "0x0F40268Ec0Dc8D88CF2f22E227A29a0b478b6351",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1744669439,
      "sinceBlock": 22270189,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0x1d955983044548E03DAA583B36A37cA4bdE6F556",
          "0xBFD60Cb2313B848a2FC088d3bc1ab6BF498E1DD1",
          "0xDFbD5490462963Cc242471913B53b034B209B32c"
        ],
        "$threshold": 1,
        "domainSeparator": "0x46bc81327e2a77d3c2264f8944ec556aa669588229e8da54a1887d0c5f46cf2f",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 3 (33%)",
        "nonce": 4,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0x0F40268Ec0Dc8D88CF2f22E227A29a0b478b6351": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "SignerList",
      "address": "0x0F95E6968EC1B28c794CF1aD99609431de5179c2",
      "type": "Contract",
      "template": "taiko/SignerList",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x2e03e80de0ae2460891172f783bb22adb3198bbe1184bf5558ce46a0a1426ddb"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "A signer list for registering agents, similar to a Multisig.",
      "sinceTimestamp": 1746111707,
      "sinceBlock": 22389760,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x584fE70fE82F728f0Fe26488857D623f3B59E070",
        "$pastUpgrades": [
          [
            "2025-05-01T15:01:47.000Z",
            "0x8acf74d966e6eb99972a4a73382cf42aa918d4715eaf4b587d1007f24edf5208",
            ["0x584fE70fE82F728f0Fe26488857D623f3B59E070"]
          ]
        ],
        "$upgradeCount": 1,
        "addresslistLength": 8,
        "dao": "0x9CDf589C941ee81D75F34d3755671d614f7cf261",
        "getEncryptionAgents": [
          "0x93533a3511E9b0d5c17b1CBD0e1737781DEf61a6",
          "0x884c3e8235788ae52C2106E847e30BD84F2FBCb8",
          "0x22aD66bcEaeff83e1461772Fa85CbeB01f0915f4",
          "0x4236f57E9dBc238878EFac4AeF0A16D4dD06DC1A",
          "0x824Dce8d292a393DAb5FFdeb788DC1086257f678",
          "0x18B4f2afe456Dc89bddE9710476dCfC62D01d656",
          "0x1d955983044548E03DAA583B36A37cA4bdE6F556",
          "0xf0A0d6Bd4aA94F53F3FB2c88488202a9E9eD2c55"
        ],
        "settings": {
          "encryptionRegistry": "0x2eFDb93a3B87b930E553d504db67Ee41c69C42d1",
          "minSignerListLength": 8
        }
      },
      "implementationNames": {
        "0x0F95E6968EC1B28c794CF1aD99609431de5179c2": "ERC1967Proxy",
        "0x584fE70fE82F728f0Fe26488857D623f3B59E070": "SignerList"
      }
    },
    {
      "name": "AutomataDcapV3Attestation",
      "address": "0x0ffa4A625ED9DB32B70F99180FD00759fc3e9261",
      "type": "Contract",
      "template": "taiko/AutomataDcapV3Attestation",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x0568e673edec0254e0d0584958369ffcb951f679158dd2a7c167bbf5fcf2a5bf"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract managing SGX attestation certificates.",
      "sinceTimestamp": 1747268759,
      "sinceBlock": 22484949,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0x5e46443bd131eB6d4c6Fb4849bAD29af9596dd72",
        "$pastUpgrades": [
          [
            "2025-05-15T00:25:59.000Z",
            "0x3b734f101aeef12dbbef6a43abae4176ac967c5ab8ea0194c6d890dafd6573ad",
            ["0x5e46443bd131eB6d4c6Fb4849bAD29af9596dd72"]
          ]
        ],
        "$upgradeCount": 1,
        "checkLocalEnclaveReport": true,
        "impl": "0x5e46443bd131eB6d4c6Fb4849bAD29af9596dd72",
        "inNonReentrant": false,
        "mrEnclaves": [
          "0xfda8bb1fc9938700c25353c0a5fabc96a238e69ce8e35f08e558831a20db33a6"
        ],
        "mrSigners": [
          "0xca0583a715534a8c981b914589a7f0dc5d60959d9ae79fb5353299a4231673d5"
        ],
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pemCertLib": "0x02772b7B3a5Bea0141C993Dbb8D0733C19F46169",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "EXPECT_REVERT",
        "qeIdentity": {
          "miscselect": "0x00000000",
          "miscselectMask": "0xffffffff",
          "isvprodid": 1,
          "attributes": "0x11000000000000000000000000000000",
          "attributesMask": "0xfbffffffffffffff0000000000000000",
          "mrsigner": "0x8c4f5775d796503e96137f77c68a829a0056ac8ded70140b081b094490c57bff"
        },
        "resolver": "0x0000000000000000000000000000000000000000",
        "sigVerifyLib": "0x47bB416ee947fE4a4b655011aF7d6E3A1B80E6e9"
      },
      "implementationNames": {
        "0x0ffa4A625ED9DB32B70F99180FD00759fc3e9261": "ERC1967Proxy",
        "0x5e46443bd131eB6d4c6Fb4849bAD29af9596dd72": "AutomataDcapV3Attestation"
      }
    },
    {
      "name": "Taiko Token",
      "address": "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800",
      "type": "Contract",
      "template": "taiko/TaikoTokenPostPacaya",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x2b1eb63ab3adb1a0783bae6252816727a2fb5d150dd0e9912e0a01e4ee224be9"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "ERC20 contract implementing the TAIKO token. It defines a list of addresses designated as non-voting.",
      "ignoreInWatchMode": ["clock"],
      "sinceTimestamp": 1714033799,
      "sinceBlock": 19731197,
      "values": {
        "$admin": "0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a",
        "$implementation": "0x5C96Ff5B7F61b9E3436Ef04DA1377C8388dfC106",
        "$pastUpgrades": [
          [
            "2024-04-25T08:29:59.000Z",
            "0x4f7a1c6ad21fbfeaecab40ea36a3845bf67e22d7770d8a259d62b995cb93cb34",
            ["0x9ae1a067F9655DD0511390e3d70Bb25933AE61eb"]
          ],
          [
            "2024-05-11T05:46:11.000Z",
            "0x7d82794932540ed9edd259e58f6ef8ae21a49beada7f0224638f888f7149c01c",
            ["0xea53c0f4b129Cf3f3FBA896F9f23ca18246e9B3c"]
          ],
          [
            "2024-05-29T08:03:23.000Z",
            "0x56402f9fd928be890fbd29829b817faffc0780b85e83300a29962c969808cae2",
            ["0x7dF8bfBf0f09e94200b6a158b421e2CCaCc4830F"]
          ],
          [
            "2024-06-07T04:02:11.000Z",
            "0x0bbf7d1258c646f41a02a92a55825b1ebfd3659577d0f2b57b462f8895e23a04",
            ["0x55833dA2962c2330ccCF043ff8037e6D2939bCF6"]
          ],
          [
            "2024-07-02T07:15:47.000Z",
            "0xc9f468d33d8d55911e4e5b5c301ed244a5f81ab0f389d2b4f398eb5b89d417ef",
            ["0xcfe803378D79d1180EbF030455040EA6513869dF"]
          ],
          [
            "2025-05-13T00:47:23.000Z",
            "0xdb7d5de46738ad3f676db47b61772db531f9858b7a01e8c3b5aee49fa74cac95",
            ["0x87C752b0F70cAa237Edd7571B0845470A37DE040"]
          ],
          [
            "2025-05-15T05:12:11.000Z",
            "0x986fc2c7ae945cdd358b2f2ae54364b350026f965f5861ed470f78e145f12626",
            ["0x5C96Ff5B7F61b9E3436Ef04DA1377C8388dfC106"]
          ]
        ],
        "$upgradeCount": 7,
        "clock": 1749803687,
        "CLOCK_MODE": "mode=timestamp",
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x15dfeacb963b1d12ac3b844e6bfc8a2eb912596d4287394b77f927575cd14cb2",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "Taiko Token",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "getNonVotingAccounts": [
          "0x0000000000000000000000000000000000000000",
          "0x363e846B91AF677Fb82f709b6c35BD1AaFc6B3Da",
          "0xfC3C4ca95a8C4e5a587373f1718CD91301d6b2D3",
          "0x996282cA11E5DEb6B5D122CC3B9A1FcAAD4415Ab"
        ],
        "impl": "0x5C96Ff5B7F61b9E3436Ef04DA1377C8388dfC106",
        "inNonReentrant": false,
        "name": "Taiko Token",
        "owner": "0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "resolver": "0x0000000000000000000000000000000000000000",
        "symbol": "TAIKO",
        "TAIKO_DAO_CONTROLLER": "0xfC3C4ca95a8C4e5a587373f1718CD91301d6b2D3",
        "TAIKO_ERC20_VAULT": "0x996282cA11E5DEb6B5D122CC3B9A1FcAAD4415Ab",
        "TAIKO_FOUNDATION_TREASURY": "0x363e846B91AF677Fb82f709b6c35BD1AaFc6B3Da",
        "totalSupply": "1000000000000000000000000000"
      },
      "implementationNames": {
        "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800": "ERC1967Proxy",
        "0x5C96Ff5B7F61b9E3436Ef04DA1377C8388dfC106": "TaikoToken"
      }
    },
    {
      "address": "0x166868E5AE72592a06056775236d2E4D64CDcCa9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Drew Van der Werff Agent",
      "address": "0x18B4f2afe456Dc89bddE9710476dCfC62D01d656",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Halborn Agent",
      "address": "0x1d955983044548E03DAA583B36A37cA4bdE6F556",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x1eE487CEdCe52c370DB11e62987F3ABe873E145A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Chainbound Agent",
      "address": "0x22aD66bcEaeff83e1461772Fa85CbeB01f0915f4",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x23aEC1a2094F995D1680E33c677b0a4092eFe2fB",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Drew Van der Werff",
      "address": "0x25d3E89bAcE2040Ed3aF7c4c7B505cfBB72fD6f1",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1744670315,
      "sinceBlock": 22270262,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0xE7CBcDa9a4FEAe2bC7ca6b2B682Bc4Ae9f8B7e3B",
          "0x23aEC1a2094F995D1680E33c677b0a4092eFe2fB"
        ],
        "$threshold": 2,
        "domainSeparator": "0xd46e6feb2f3cf7b1389e9d2f425229f881c046f161a089314d0e1eb782c1d83e",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 2 (100%)",
        "nonce": 2,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0x25d3E89bAcE2040Ed3aF7c4c7B505cfBB72fD6f1": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "EmergencyMultisig",
      "address": "0x2AffADEb2ef5e1F2a7F58964ee191F1e88317ECd",
      "type": "Contract",
      "template": "taiko/EmergencyMultisig",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x5214d838c15a1ddc2fa952f428cd6eeb5b5146d215923c3d4667100066d7f73e"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Modular Governance contract allowing for proposing, voting on and executing encrypted proposals (e.g. for Security Council emergency proposals).",
      "sinceTimestamp": 1746111707,
      "sinceBlock": 22389760,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x437E450452E8Bc142bd5317199296EcB187c514b",
        "$pastUpgrades": [
          [
            "2025-05-01T15:01:47.000Z",
            "0x8acf74d966e6eb99972a4a73382cf42aa918d4715eaf4b587d1007f24edf5208",
            ["0x437E450452E8Bc142bd5317199296EcB187c514b"]
          ]
        ],
        "$upgradeCount": 1,
        "dao": "0x9CDf589C941ee81D75F34d3755671d614f7cf261",
        "implementation": "0x437E450452E8Bc142bd5317199296EcB187c514b",
        "lastMultisigSettingsChange": 22574240,
        "multisigSettings": {
          "onlyListed": true,
          "minApprovals": 6,
          "signerList": "0x0F95E6968EC1B28c794CF1aD99609431de5179c2",
          "proposalExpirationPeriod": 1209600
        },
        "pluginType": 0,
        "proposalCount": 23,
        "UPDATE_MULTISIG_SETTINGS_PERMISSION_ID": "0xb1750e46d35a0069c8465b8643e7838d2149a842a2db8ee233d9835590040cad",
        "UPGRADE_PLUGIN_PERMISSION_ID": "0x821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f5"
      },
      "fieldMeta": {
        "proposalCount": {
          "description": "The total count of encrypted emergency proposals created."
        }
      },
      "implementationNames": {
        "0x2AffADEb2ef5e1F2a7F58964ee191F1e88317ECd": "ERC1967Proxy",
        "0x437E450452E8Bc142bd5317199296EcB187c514b": "EmergencyMultisig"
      }
    },
    {
      "name": "EncryptionRegistry",
      "address": "0x2eFDb93a3B87b930E553d504db67Ee41c69C42d1",
      "type": "Contract",
      "template": "taiko/EncryptionRegistry",
      "sourceHashes": [
        "0x95721d01741fd367320ddaabfaf4b41498755af0f0fda0f258599c6ddf848ed2"
      ],
      "proxyType": "immutable",
      "description": "A registry for signers (of the Security Council) to appoint agents to operate on their behalf. These agents can also register their encryption keys for encrypted emergency proposal support.",
      "sinceTimestamp": 1746111707,
      "sinceBlock": 22389760,
      "values": {
        "$immutable": true,
        "accountList": [
          "0x85f21919ed6046d7CE1F36a613eBA8f5EaC3d070",
          "0xa384E224A3F3D664F43eBE33395eF0DCcE67e894",
          "0xf1cF63589A1e012F9124182c9eAa36B5333e5f06",
          "0x436a1075099A145417EBFc74BBaC9605e3e4f1A7",
          "0x5353c607e6eca6C63FEC5c6C0F5CC3a5348d5c95",
          "0xb284810536C0dAB6A8e48153B58588A9B9e0F701",
          "0x25d3E89bAcE2040Ed3aF7c4c7B505cfBB72fD6f1",
          "0x0F40268Ec0Dc8D88CF2f22E227A29a0b478b6351",
          "0xb47fE76aC588101BFBdA9E68F66433bA51E8029a",
          "0xD5cF6A34Ba5fb9289510dC93c03F1f9084798487"
        ],
        "getRegisteredAccounts": [
          "0x85f21919ed6046d7CE1F36a613eBA8f5EaC3d070",
          "0xa384E224A3F3D664F43eBE33395eF0DCcE67e894",
          "0xf1cF63589A1e012F9124182c9eAa36B5333e5f06",
          "0x436a1075099A145417EBFc74BBaC9605e3e4f1A7",
          "0x5353c607e6eca6C63FEC5c6C0F5CC3a5348d5c95",
          "0xb284810536C0dAB6A8e48153B58588A9B9e0F701",
          "0x25d3E89bAcE2040Ed3aF7c4c7B505cfBB72fD6f1",
          "0x0F40268Ec0Dc8D88CF2f22E227A29a0b478b6351",
          "0xb47fE76aC588101BFBdA9E68F66433bA51E8029a",
          "0xD5cF6A34Ba5fb9289510dC93c03F1f9084798487"
        ]
      },
      "implementationNames": {
        "0x2eFDb93a3B87b930E553d504db67Ee41c69C42d1": "EncryptionRegistry"
      }
    },
    {
      "address": "0x30bc4C0Baf55A37Ccf2d626Bc592bd7715b75De2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Taiko Foundation Treasury Multisig",
      "address": "0x363e846B91AF677Fb82f709b6c35BD1AaFc6B3Da",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1713774047,
      "sinceBlock": 19709707,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xDC4ece5620659F4d5d1536Cab52BD5e5B15F8a0a",
          "0x0F026a3efE44E0Fe34B87375EFe69b16c05D0438",
          "0x1eE487CEdCe52c370DB11e62987F3ABe873E145A",
          "0xFa92ff698D57f7B875570D9F59501812B843CD44",
          "0x7Cdd1c128Cd72dd252f569eeD942735330937F91",
          "0x3b1D1F89E0b6803174A2dE72e21A6f6f8464d5F1"
        ],
        "$threshold": 4,
        "domainSeparator": "0xb928db8cda7e0d8ed365dcdc0efbd2c664a02d405dc5a14d69af87929137db55",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "4 of 6 (67%)",
        "nonce": 97,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x363e846B91AF677Fb82f709b6c35BD1AaFc6B3Da": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "address": "0x392EF0Ec3579436299E4f9b170c454995c03CE8A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x3b1D1F89E0b6803174A2dE72e21A6f6f8464d5F1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x3D4997AAC0834BEb5ede861c424807Aa3F29b5bB",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x3ffe3F16d47A54b1C6A3f47c9E6Ff5C2C1B32859",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x41F2F55571f9e8e3Ba511Adc48879Bd67626A2b6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Nethermind Agent",
      "address": "0x4236f57E9dBc238878EFac4AeF0A16D4dD06DC1A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Chainbound",
      "address": "0x436a1075099A145417EBFc74BBaC9605e3e4f1A7",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1744099343,
      "sinceBlock": 22222858,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0x719304183f09a84C4D8dA8d64BDB6C6E0EEede4E",
          "0xcF7017aD172a8aefBfF7e45CfaCeF5bd94701477",
          "0xbBCE182D3d6ae94CF0d0BF7C83E87c01f42635B0",
          "0x51c7c8F83F8C43D83ec5a5e0EB2a2863839B864d"
        ],
        "$threshold": 2,
        "domainSeparator": "0xb191b2fa234a05ce7930e8b23a4d977d6089bc86b36973c0fa445aa04708a3a7",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 4 (50%)",
        "nonce": 5,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0x436a1075099A145417EBFc74BBaC9605e3e4f1A7": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "SigVerifyLib",
      "address": "0x47bB416ee947fE4a4b655011aF7d6E3A1B80E6e9",
      "type": "Contract",
      "template": "taiko/SigVerifyLib",
      "sourceHashes": [
        "0x5bf803a773ed2c117313ea970df3b38542eab3522714f18be2b65a75062e0ebf"
      ],
      "proxyType": "immutable",
      "description": "Library for verifying signatures.",
      "sinceTimestamp": 1714550639,
      "sinceBlock": 19773966,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x47bB416ee947fE4a4b655011aF7d6E3A1B80E6e9": "SigVerifyLib"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x51c7c8F83F8C43D83ec5a5e0EB2a2863839B864d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Nethermind",
      "address": "0x5353c607e6eca6C63FEC5c6C0F5CC3a5348d5c95",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1745580551,
      "sinceBlock": 22345744,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0xbC40317A69CB1D1aF2CBcfE32C8B7a6840Dc287a",
          "0x4236f57E9dBc238878EFac4AeF0A16D4dD06DC1A",
          "0xE8Cd88fb3081EA29D1D6AeAefcb45BBDF512B39f"
        ],
        "$threshold": 2,
        "domainSeparator": "0x800112abf60154bd14da3294f48f3fc29049934338eda4a0974029f144cc12b1",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 1,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0x5353c607e6eca6C63FEC5c6C0F5CC3a5348d5c95": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x5374b2907a45a28c37caA45e06FC6eBceECAC72a",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x55792e1F0a41D3af8B6d41DFdcf24651AA80fA1e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x5811Ab14833720D743ec57BC49c9342DF66069d0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "DefaultResolver",
      "address": "0x5A982Fb1818c22744f5d7D36D0C4c9f61937b33a",
      "type": "Contract",
      "template": "taiko/DefaultResolver",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0xf9a4e26dd0a60d8733fc4c14afb5ecadc963a19be4536a7303c8cd0529b358d9"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Maps contract names to contract addresses. Changes in this mapping effectively act as contract upgrades.",
      "sinceTimestamp": 1747268711,
      "sinceBlock": 22484945,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0xE78659fbF234c84C909Cf317D84edc2f6C0D8413",
        "$pastUpgrades": [
          [
            "2025-05-15T00:25:11.000Z",
            "0x76cab61cff3f90ecf78478e012a2aa30a7e8ef79b7f06c9ea40265f5557bd8ae",
            ["0xE78659fbF234c84C909Cf317D84edc2f6C0D8413"]
          ]
        ],
        "$upgradeCount": 1,
        "impl": "0xE78659fbF234c84C909Cf317D84edc2f6C0D8413",
        "inNonReentrant": false,
        "namedAddresses": [
          {
            "name": "0x72697363305f67726f746831365f766572696669657200000000000000000000",
            "address": "0xfB3Ca570A5348FD101e65303eECdB5Bf43C5548a"
          },
          {
            "name": "0x7370315f72656d6f74655f766572696669657200000000000000000000000000",
            "address": "0xFF5Adab685362DC4C33536a65aF5873738D1216B"
          },
          {
            "name": "0x6175746f6d6174615f646361705f6174746573746174696f6e00000000000000",
            "address": "0x8d7C954960a36a7596d7eA4945dDf891967ca8A3"
          },
          {
            "name": "0x70726f7665725f73657400000000000000000000000000000000000000000000",
            "address": "0x280eAbfd252f017B78e15b69580F249F45FB55Fa"
          },
          {
            "name": "taiko_token",
            "address": "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800"
          },
          {
            "name": "bond_token",
            "address": "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800"
          },
          {
            "name": "signal_service",
            "address": "0x9e0a24964e5397B566c1ed39258e21aB5E35C77C"
          },
          {
            "name": "bridge",
            "address": "0xd60247c6848B7Ca29eDdF63AA924E53dB6Ddd8EC"
          },
          {
            "name": "0x666f726365645f696e636c7573696f6e5f73746f726500000000000000000000",
            "address": "0x05d88855361808fA1d7fc28084Ef3fCa191c4e03"
          },
          {
            "name": "0x7461696b6f5f7772617070657200000000000000000000000000000000000000",
            "address": "0x9F9D2fC7abe74C79f86F0D1212107692430eef72"
          },
          {
            "name": "0x70726f6f665f7665726966696572000000000000000000000000000000000000",
            "address": "0xB16931e78d0cE3c9298bbEEf3b5e2276D34b8da1"
          },
          {
            "name": "0x7461696b6f000000000000000000000000000000000000000000000000000000",
            "address": "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a"
          },
          {
            "name": "0x7367785f676574685f6175746f6d617461000000000000000000000000000000",
            "address": "0x0ffa4A625ED9DB32B70F99180FD00759fc3e9261"
          },
          {
            "name": "0x7367785f676574685f7665726966696572000000000000000000000000000000",
            "address": "0x7e6409e9b6c5e2064064a6cC994f9a2e95680782"
          },
          {
            "name": "0x7367785f726574685f7665726966696572000000000000000000000000000000",
            "address": "0x9e322fC59b8f4A29e6b25c3a166ac1892AA30136"
          },
          {
            "name": "0x72697363305f726574685f766572696669657200000000000000000000000000",
            "address": "0x73Ee496dA20e5C65340c040B0D8c3C891C1f74AE"
          },
          {
            "name": "0x7370315f726574685f7665726966696572000000000000000000000000000000",
            "address": "0xbee1040D0Aab17AE19454384904525aE4A3602B9"
          }
        ],
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "resolver": "0x5A982Fb1818c22744f5d7D36D0C4c9f61937b33a"
      },
      "implementationNames": {
        "0x5A982Fb1818c22744f5d7D36D0C4c9f61937b33a": "ERC1967Proxy",
        "0xE78659fbF234c84C909Cf317D84edc2f6C0D8413": "DefaultResolver"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "0x7461696b6f5f746f6b656e000000000000000000000000000000000000000000": "taiko_token",
            "0x626f6e645f746f6b656e00000000000000000000000000000000000000000000": "bond_token",
            "0x6272696467650000000000000000000000000000000000000000000000000000": "bridge",
            "0x7369676e616c5f73657276696365000000000000000000000000000000000000": "signal_service",
            "0x65726332305f7661756c74000000000000000000000000000000000000000000": "erc20_vault",
            "0x6572633732315f7661756c740000000000000000000000000000000000000000": "erc721_vault",
            "0x657263313135355f7661756c7400000000000000000000000000000000000000": "erc1155_vault",
            "0x6272696467655f7761746368646f670000000000000000000000000000000000": "bridge_watchdog",
            "0x627269646765645f657263323000000000000000000000000000000000000000": "bridged_erc20",
            "0x627269646765645f657263373231000000000000000000000000000000000000": "bridged_erc721",
            "0x627269646765645f657263313135350000000000000000000000000000000000": "bridged_erc1155"
          }
        }
      ]
    },
    {
      "name": "ProverSet",
      "address": "0x68d30f47F19c07bCCEf4Ac7FAE2Dc12FCa3e0dC9",
      "type": "Contract",
      "template": "taiko/ProverSet",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x3ea52d6499eecde88b2ef9725bb22d9d0adb70d187cdfa89dfe3f63895d57ee4"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "An operator proxy used by the Taiko team for operating (proposing, proving) the based rollup from permissioned addresses.",
      "sinceTimestamp": 1716217559,
      "sinceBlock": 19911920,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0xB8826B144eB895eFE2923b61b3b117B1298A9526",
        "$pastUpgrades": [
          [
            "2024-05-20T15:05:59.000Z",
            "0xf3b6af477112d0a8209506c8f310f4eb0713beebb1911ef5d11162d36d93c0ff",
            ["0x34f2B21107AfE3584949c184A1E6236FFDAC4f6F"]
          ],
          [
            "2024-05-25T11:00:59.000Z",
            "0x02ed558762eae5f0a930ba4a1047a02d4a793ea48890268c32df04e882f138ff",
            ["0x500735343372Dd6c9B84dBc7a75babf4479742B9"]
          ],
          [
            "2024-06-06T08:51:11.000Z",
            "0x8de1631a25b337c1e702f9ce9d9ab8a3b626922441855e959b2d79dae40bd131",
            ["0xd0AEe97712a4a88B75C31E3C61DD2Ce6E514D85F"]
          ],
          [
            "2024-06-07T04:02:11.000Z",
            "0x0bbf7d1258c646f41a02a92a55825b1ebfd3659577d0f2b57b462f8895e23a04",
            ["0x5D528253fA14cd7F637937de847BE8D5BE0Bf5fd"]
          ],
          [
            "2024-06-08T10:54:11.000Z",
            "0xb4c23d57a1f0916180d0752c57726b634e7707bb7377c93d9e95d19e3695887a",
            ["0xD547Ca5d6b50dC5E900a091978597eB51F18F9D1"]
          ],
          [
            "2024-07-13T12:34:35.000Z",
            "0xdf3f0cb2eaca00484c30a5c63fafe8036a9e0f71bd4bab216504bee0f5bfb83f",
            ["0x518845daA8870bE2C59E49620Fc262AD48953C9a"]
          ],
          [
            "2024-07-16T14:30:23.000Z",
            "0x7d584f0a645cad61e634f64ffaf7e1bbfb92749878eb25b39ce0e5cf698897c7",
            ["0x74828E5fe803072AF9Df512B3911B4223572D652"]
          ],
          [
            "2024-07-17T06:19:35.000Z",
            "0x170617251f2345eda4bcbd29e316caa0b014602a44244c60b963382ac7da7748",
            ["0xCE5a119479337a153CA3bd1b2bF9755c78F2B15A"]
          ],
          [
            "2024-11-01T09:20:35.000Z",
            "0x13ea4d044a313cf667d16514465e6b96227ef7198bda7b19c70eefee44e9bccd",
            ["0x3022Ed0346CCE0c08268c8ad081458AfD95E8763"]
          ],
          [
            "2024-12-23T02:45:11.000Z",
            "0xfa949022e61921e108974e73130e94fc5120463f2c537d26626e5cee2120c944",
            ["0xd0d3f025D83D7122de7eC43e86331C57c8A4F30B"]
          ],
          [
            "2025-02-13T06:57:47.000Z",
            "0xc0e8ec30d1479ca2414d4d28a09a543c2845247d80387f78c179d663ffe55c3c",
            ["0x280eAbfd252f017B78e15b69580F249F45FB55Fa"]
          ],
          [
            "2025-05-15T08:40:47.000Z",
            "0x97789b6668d0a287b1f57bb6c8e23cce62308fb887139faeb0f06b77855995fd",
            ["0xB8826B144eB895eFE2923b61b3b117B1298A9526"]
          ]
        ],
        "$upgradeCount": 12,
        "admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "bondToken": "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800",
        "entrypoint": "0x9F9D2fC7abe74C79f86F0D1212107692430eef72",
        "impl": "0xB8826B144eB895eFE2923b61b3b117B1298A9526",
        "inbox": "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a",
        "inNonReentrant": false,
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "resolver": "0x5A982Fb1818c22744f5d7D36D0C4c9f61937b33a"
      },
      "implementationNames": {
        "0x68d30f47F19c07bCCEf4Ac7FAE2Dc12FCa3e0dC9": "ERC1967Proxy",
        "0xB8826B144eB895eFE2923b61b3b117B1298A9526": "ProverSet"
      }
    },
    {
      "address": "0x6dcB04fCC1c597DAFad86e2886bE463d53CaFAdf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x7057A707621Fadd422f84DE94A9dF7c4F1AC595C",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x719304183f09a84C4D8dA8d64BDB6C6E0EEede4E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Risc0VerifierGateway",
      "address": "0x73Ee496dA20e5C65340c040B0D8c3C891C1f74AE",
      "type": "Contract",
      "template": "taiko/Risc0VerifierGateway",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0xbf2f7f196a5a1b3990b49d6d86c282eedd22259e4e1c970138b25b38cced4ac6"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Entry contract to verify batches using RISC Zero.",
      "sinceTimestamp": 1747268759,
      "sinceBlock": 22484949,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0xB1c6fF8dCbED16FE412291E7BDA0d611405944Be",
        "$pastUpgrades": [
          [
            "2025-05-15T00:25:59.000Z",
            "0x2c106efd4e844195ff8597792c0e87d8319c23b5f4b6f675f878d75181c27baa",
            ["0x801878e56A8DA58d6a837006345CDD11a9E6a852"]
          ],
          [
            "2025-06-12T03:50:35.000Z",
            "0x2b9250ebdcf10b1a1ec658e5cc9e7fd9aa19dd32573e6ab5bc036499682dea3a",
            ["0xB1c6fF8dCbED16FE412291E7BDA0d611405944Be"]
          ]
        ],
        "$upgradeCount": 2,
        "impl": "0xB1c6fF8dCbED16FE412291E7BDA0d611405944Be",
        "inNonReentrant": false,
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "resolver": "0x0000000000000000000000000000000000000000",
        "riscoGroth16Verifier": "0xfB3Ca570A5348FD101e65303eECdB5Bf43C5548a",
        "taikoChainId": 167000
      },
      "implementationNames": {
        "0x73Ee496dA20e5C65340c040B0D8c3C891C1f74AE": "ERC1967Proxy",
        "0xB1c6fF8dCbED16FE412291E7BDA0d611405944Be": "TaikoRisc0Verifier"
      }
    },
    {
      "name": "TaikoDAOController",
      "address": "0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a",
      "type": "Contract",
      "template": "taiko/TaikoDAOController",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0xacca94dada8d52e2f59e26907cb2b2de0a50f5241a1548ba8ceb5e2162f45040"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract that maintains ownership DAO-controlled assets and contracts. Its token weight does not count towards the DAO quorum.",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "ethereum:0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x996282cA11E5DEb6B5D122CC3B9A1FcAAD4415Ab",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1748146475,
      "sinceBlock": 22557392,
      "values": {
        "$admin": "0x9CDf589C941ee81D75F34d3755671d614f7cf261",
        "$implementation": "0x4347df63bdC82b8835fC9FF47bC5a71a12cC0f06",
        "$pastUpgrades": [
          [
            "2025-05-25T04:14:35.000Z",
            "0x5da0579fa85d4712efb3d66c95ee884d73259ede79760d25f685e4c3c3c4c0c1",
            ["0x4347df63bdC82b8835fC9FF47bC5a71a12cC0f06"]
          ]
        ],
        "$upgradeCount": 1,
        "impl": "0x4347df63bdC82b8835fC9FF47bC5a71a12cC0f06",
        "inNonReentrant": false,
        "lastExecutionId": 0,
        "owner": "0x9CDf589C941ee81D75F34d3755671d614f7cf261",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "EXPECT_REVERT",
        "resolver": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a": "ERC1967Proxy",
        "0x4347df63bdC82b8835fC9FF47bC5a71a12cC0f06": "TaikoDAOController"
      },
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "address": "0x7Cdd1c128Cd72dd252f569eeD942735330937F91",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SgxVerifier",
      "address": "0x7e6409e9b6c5e2064064a6cC994f9a2e95680782",
      "type": "Contract",
      "template": "taiko/SgxVerifier",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x623df54827648dd7289a821d9020c19faccf1c24e7cea82e7157f2dc2c548511"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Verifier contract for SGX proven blocks.",
      "ignoreInWatchMode": ["nextInstanceId"],
      "sinceTimestamp": 1747268759,
      "sinceBlock": 22484949,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0xDb7AEe4fA967C2aB0eC28f63C8675224E59340A5",
        "$pastUpgrades": [
          [
            "2025-05-15T00:25:59.000Z",
            "0x3f51eda811a4a753cdfa7c664bde1d5e4f58ae3692597a03fb2ebd2064695b0a",
            ["0xDb7AEe4fA967C2aB0eC28f63C8675224E59340A5"]
          ]
        ],
        "$upgradeCount": 1,
        "automataDcapAttestation": "0x0ffa4A625ED9DB32B70F99180FD00759fc3e9261",
        "impl": "0xDb7AEe4fA967C2aB0eC28f63C8675224E59340A5",
        "inNonReentrant": false,
        "INSTANCE_EXPIRY": 31536000,
        "INSTANCE_VALIDITY_DELAY": 0,
        "nextInstanceId": 12,
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "EXPECT_REVERT",
        "resolver": "0x0000000000000000000000000000000000000000",
        "taikoChainId": 167000,
        "taikoInbox": "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a",
        "taikoProofVerifier": "0xB16931e78d0cE3c9298bbEEf3b5e2276D34b8da1"
      },
      "implementationNames": {
        "0x7e6409e9b6c5e2064064a6cC994f9a2e95680782": "ERC1967Proxy",
        "0xDb7AEe4fA967C2aB0eC28f63C8675224E59340A5": "SgxVerifier"
      }
    },
    {
      "name": "Aragon Agent",
      "address": "0x824Dce8d292a393DAb5FFdeb788DC1086257f678",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x85f21919ed6046d7CE1F36a613eBA8f5EaC3d070",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L2BEAT Agent",
      "address": "0x884c3e8235788ae52C2106E847e30BD84F2FBCb8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "AutomataDcapV3Attestation",
      "address": "0x8d7C954960a36a7596d7eA4945dDf891967ca8A3",
      "type": "Contract",
      "template": "taiko/AutomataDcapV3Attestation",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0xac51975c574b128e9dc1e8542c616ed655d4a2abc91d3233648ac688e530c68c"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract managing SGX attestation certificates.",
      "sinceTimestamp": 1714550639,
      "sinceBlock": 19773966,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0x5f73f0AdC7dAA6134Fe751C4a78d524f9384e0B5",
        "$pastUpgrades": [
          [
            "2024-05-01T08:03:59.000Z",
            "0x207dec76298211a2d988b0de3e9a3f8da0edb4524a011e72f28200be08edd4c6",
            ["0xEE8FC1dbb8D345f5bF35dFb939C6f9EdC5fCDAFc"]
          ],
          [
            "2024-05-11T06:26:35.000Z",
            "0x416560cd96dc75ccffebe889e8d1ab3e08b33f814dc4a2bf7c6f9555071d1f6f",
            ["0xde1b1FBe7D721af4A56651272ef91A59B7303323"]
          ],
          [
            "2024-05-15T15:34:23.000Z",
            "0x46a6d47c15505a1259c64d1e09353680e525b2706dd9e095e15019dda7c1b295",
            ["0x5f73f0AdC7dAA6134Fe751C4a78d524f9384e0B5"]
          ]
        ],
        "$upgradeCount": 3,
        "addressManager": "0x0000000000000000000000000000000000000000",
        "checkLocalEnclaveReport": true,
        "impl": "0x5f73f0AdC7dAA6134Fe751C4a78d524f9384e0B5",
        "inNonReentrant": false,
        "lastUnpausedAt": 0,
        "mrEnclaves": [
          "0xdfcb4fca3073e3f3a90b05d328688c32619d56f26789c0a9797aa10e765a7807",
          "0xbdec26abd36fde2cfbb8db7a0793a9346b11bd558b39890407d458500711c88c",
          "0xa5f741bfed254a1e21738d429e7bd074e25918af7f71fbe1e0135c3974b06e00",
          "0x3551faac39edee5abfaa19ab065c217db1485aebae255a9edddf6dfff6b29b52",
          "0x13ea9869632ac20b176ae0fdc39998b2a644a695db024ef7fe0e4b3c59084160",
          "0xa096348d480eb0474f5eab182671933c029545521960d87d4e49283005809be9",
          "0xa4eedfc6484494d4c08bfb9b9dd887c6e0540ba9d8ee207fe0e16814852e3356",
          "0xc90e5d2e39d1d3f8397a6048c32ba50139d1577c28985e1f7638785935f41734",
          "0x9546301721e2ea111ab0f79b6e529d6bb6c486ac98bcf7739429ad06c09db63d",
          "0x3f71cf178a032816c2731a43aef746c464a5326e891dc881773ec2b599b2cf0a",
          "0xdcd483d3406d9b1871bb92420f5a080c4372e0d6b8522a4a2cb91a0f736669c6",
          "0x3b589538b775ddbfc5fb028167ff846116159e6687aef9f849ca5a70a7871ea5",
          "0xb09f9005e4612526e378466b5c16ab6028478e81c085812d6ed37166c4cda10e",
          "0x6e43c1d575b5b785d0f6259dfac44998c6f0c164864f9f98270fb740c14eb943"
        ],
        "mrSigners": [
          "0xca0583a715534a8c981b914589a7f0dc5d60959d9ae79fb5353299a4231673d5"
        ],
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pemCertLib": "0x02772b7B3a5Bea0141C993Dbb8D0733C19F46169",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "EXPECT_REVERT",
        "qeIdentity": {
          "miscselect": "0x00000000",
          "miscselectMask": "0xffffffff",
          "isvprodid": 1,
          "attributes": "0x11000000000000000000000000000000",
          "attributesMask": "0xfbffffffffffffff0000000000000000",
          "mrsigner": "0x8c4f5775d796503e96137f77c68a829a0056ac8ded70140b081b094490c57bff"
        },
        "sigVerifyLib": "0x47bB416ee947fE4a4b655011aF7d6E3A1B80E6e9"
      },
      "implementationNames": {
        "0x8d7C954960a36a7596d7eA4945dDf891967ca8A3": "ERC1967Proxy",
        "0x5f73f0AdC7dAA6134Fe751C4a78d524f9384e0B5": "AutomataDcapV3Attestation"
      }
    },
    {
      "name": "DefaultResolver",
      "address": "0x8Efa01564425692d0a0838DC10E300BD310Cb43e",
      "type": "Contract",
      "template": "taiko/DefaultResolver",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0xf9a4e26dd0a60d8733fc4c14afb5ecadc963a19be4536a7303c8cd0529b358d9"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Maps contract names to contract addresses. Changes in this mapping effectively act as contract upgrades.",
      "sinceTimestamp": 1747268711,
      "sinceBlock": 22484945,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0xFca4F0Ab7B95EEf2e3A60EF2Bc0c42DdAA62E66D",
        "$pastUpgrades": [
          [
            "2025-05-15T00:25:11.000Z",
            "0xe402a650eb9f8443ae3fb86d2ef4bc6105140c85774c56a3932fe097ea6f6c19",
            ["0xFca4F0Ab7B95EEf2e3A60EF2Bc0c42DdAA62E66D"]
          ]
        ],
        "$upgradeCount": 1,
        "impl": "0xFca4F0Ab7B95EEf2e3A60EF2Bc0c42DdAA62E66D",
        "inNonReentrant": false,
        "namedAddresses": [
          {
            "name": "taiko_token",
            "address": "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800"
          },
          {
            "name": "bond_token",
            "address": "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800"
          },
          {
            "name": "bridge",
            "address": "0x1670000000000000000000000000000000000001"
          },
          {
            "name": "signal_service",
            "address": "0x1670000000000000000000000000000000000005"
          },
          {
            "name": "erc20_vault",
            "address": "0x1670000000000000000000000000000000000002"
          },
          {
            "name": "erc721_vault",
            "address": "0x1670000000000000000000000000000000000003"
          },
          {
            "name": "erc1155_vault",
            "address": "0x1670000000000000000000000000000000000004"
          },
          {
            "name": "bridge_watchdog",
            "address": "0x00000291AB79c55dC4Fcd97dFbA4880DF4b93624"
          },
          {
            "name": "bridged_erc20",
            "address": "0x65666141a541423606365123Ed280AB16a09A2e1"
          },
          {
            "name": "bridged_erc721",
            "address": "0xC3310905E2BC9Cfb198695B75EF3e5B69C6A1Bf7"
          },
          {
            "name": "bridged_erc1155",
            "address": "0x3c90963cFBa436400B0F9C46Aa9224cB379c2c40"
          }
        ],
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "resolver": "0x8Efa01564425692d0a0838DC10E300BD310Cb43e"
      },
      "implementationNames": {
        "0x8Efa01564425692d0a0838DC10E300BD310Cb43e": "ERC1967Proxy",
        "0xFca4F0Ab7B95EEf2e3A60EF2Bc0c42DdAA62E66D": "DefaultResolver"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "0x7461696b6f5f746f6b656e000000000000000000000000000000000000000000": "taiko_token",
            "0x626f6e645f746f6b656e00000000000000000000000000000000000000000000": "bond_token",
            "0x6272696467650000000000000000000000000000000000000000000000000000": "bridge",
            "0x7369676e616c5f73657276696365000000000000000000000000000000000000": "signal_service",
            "0x65726332305f7661756c74000000000000000000000000000000000000000000": "erc20_vault",
            "0x6572633732315f7661756c740000000000000000000000000000000000000000": "erc721_vault",
            "0x657263313135355f7661756c7400000000000000000000000000000000000000": "erc1155_vault",
            "0x6272696467655f7761746368646f670000000000000000000000000000000000": "bridge_watchdog",
            "0x627269646765645f657263323000000000000000000000000000000000000000": "bridged_erc20",
            "0x627269646765645f657263373231000000000000000000000000000000000000": "bridged_erc721",
            "0x627269646765645f657263313135350000000000000000000000000000000000": "bridged_erc1155"
          }
        }
      ]
    },
    {
      "name": "QuotaManager",
      "address": "0x91f67118DD47d502B1f0C354D0611997B022f29E",
      "type": "Contract",
      "template": "taiko/QuotaManager",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x515420aaad70e32a5f53c329c15df869122650ffc387b0ef64bb3de9748b3797"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Defines withdrawal limits per token.",
      "sinceTimestamp": 1715578067,
      "sinceBlock": 19859002,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0xdb627bfD79e81fE42138Eb875287F94FAd5BBc64",
        "$pastUpgrades": [
          [
            "2024-05-13T05:27:47.000Z",
            "0x03df9b2af0bebae6b9a3d413c98e53ccd3c629e10010f2c1c14d1c6da630a7d7",
            ["0x49c5e5F131314Bb24b17E249960F8B12F925ef22"]
          ],
          [
            "2024-06-06T08:51:11.000Z",
            "0x8de1631a25b337c1e702f9ce9d9ab8a3b626922441855e959b2d79dae40bd131",
            ["0xdb627bfD79e81fE42138Eb875287F94FAd5BBc64"]
          ]
        ],
        "$upgradeCount": 2,
        "addressManager": "0xEf9EaA1dd30a9AA1df01c36411b5F082aA65fBaa",
        "impl": "0xdb627bfD79e81fE42138Eb875287F94FAd5BBc64",
        "inNonReentrant": false,
        "lastUnpausedAt": 0,
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "quotaPeriod": 86400,
        "tokenQuotas": [
          { "name": "Ether", "quota": "1,000" },
          { "name": "WETH", "quota": "1,000" },
          { "name": "TAIKO", "quota": "2,000,000" },
          { "name": "USDT", "quota": "4,000,000" },
          { "name": "USDC", "quota": "4,000,000" }
        ]
      },
      "implementationNames": {
        "0x91f67118DD47d502B1f0C354D0611997B022f29E": "ERC1967Proxy",
        "0xdb627bfD79e81fE42138Eb875287F94FAd5BBc64": "QuotaManager"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "0x0000000000000000000000000000000000000000": "Ether",
            "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2": "WETH",
            "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800": "TAIKO",
            "0xdAC17F958D2ee523a2206206994597C13D831ec7": "USDT",
            "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48": "USDC"
          }
        },
        { "typeCaster": "Undecimal", "arg": { "decimals": 18 } },
        { "typeCaster": "Undecimal", "arg": { "decimals": 6 } }
      ]
    },
    {
      "name": "Toni Wahrstätter Agent",
      "address": "0x93533a3511E9b0d5c17b1CBD0e1737781DEf61a6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "OptimisticTokenVotingPlugin",
      "address": "0x989E348275b659d36f8751ea1c10D146211650BE",
      "type": "Contract",
      "template": "taiko/OptimisticTokenVotingPlugin",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x919b8268f27c8e7d5eb3409d5dfa664b37f80dc78898df309e0fe272050c410a"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "An optimistic governance module. Proposals pass and can be executed unless 10% of votable TAIKO veto them within 7d.",
      "sinceTimestamp": 1746111707,
      "sinceBlock": 22389760,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x5B0Da2FB08754a5dDf32e28887D2F5437485f085",
        "$pastUpgrades": [
          [
            "2025-05-01T15:01:47.000Z",
            "0x8acf74d966e6eb99972a4a73382cf42aa918d4715eaf4b587d1007f24edf5208",
            ["0x5B0Da2FB08754a5dDf32e28887D2F5437485f085"]
          ]
        ],
        "$upgradeCount": 1,
        "dao": "0x9CDf589C941ee81D75F34d3755671d614f7cf261",
        "governanceSettings": {
          "minVetoRatio": 100000,
          "minDuration": 0,
          "timelockPeriod": 604800,
          "l2InactivityPeriod": 600,
          "l2AggregationGracePeriod": 172800,
          "skipL2": true
        },
        "governanceSettings_timelockPeriod_fmt": "7d",
        "implementation": "0x5B0Da2FB08754a5dDf32e28887D2F5437485f085",
        "isL2Available": false,
        "minVetoPercent": "10",
        "minVetoRatio": 100000,
        "pluginType": 0,
        "proposalCount": 19,
        "proposalIds": [
          "594318504305273196926027118847304676812617940992",
          "594333808845007833054360677244409987180489867265",
          "594333890512775894079591912881534348495153004546",
          "594368007222883387369940600290236287695678603267",
          "594516275055798178677248899489514254466604335108",
          "594516360806954642753743290707182802352260251653",
          "594516471058441525137805458817300690127055486982",
          "594544283016854707280302755040001935835586887687",
          "594544466769332844587073035223531748793578946568",
          "594789857995414210150628315872956409027640688649",
          "594868197801926748603689506985812031612995502090",
          "594868769476303175780308156445682560815637463051",
          "594932801089851422612858457733038049577270247436",
          "595112788683881116119978678391417950963358498829",
          "595168678020953678736974786657474616653076496398",
          "595202819231391590334926314529761202858453106703",
          "595223403592331371744459256866956472219296858128",
          "595223436259438596154551751121806216745162113041",
          "595300306046126036153418824792663965561388007442"
        ],
        "PROPOSER_PERMISSION_ID": "0x8513c2609a72007a81419055c80fdd2cf7e49f07dffbb28683bb4593636ce3b2",
        "taikoBridge": "0xd60247c6848B7Ca29eDdF63AA924E53dB6Ddd8EC",
        "taikoL1": "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a",
        "UPDATE_OPTIMISTIC_GOVERNANCE_SETTINGS_PERMISSION_ID": "0x3dc194e23158bc1a3f2c26e18c8c910b557388bad663356cd4fc49c11477a4a4",
        "UPGRADE_PLUGIN_PERMISSION_ID": "0x821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f5",
        "votingToken": "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800"
      },
      "fieldMeta": {
        "minVetoRatio": {
          "description": "this value /1000000 is the threshold ratio (relative to voting supply) to veto a proposal."
        },
        "governanceSettings": { "description": "" }
      },
      "implementationNames": {
        "0x989E348275b659d36f8751ea1c10D146211650BE": "ERC1967Proxy",
        "0x5B0Da2FB08754a5dDf32e28887D2F5437485f085": "OptimisticTokenVotingPlugin"
      },
      "usedTypes": [{ "typeCaster": "Undecimal", "arg": { "decimals": 4 } }]
    },
    {
      "name": "MainnetERC20Vault",
      "address": "0x996282cA11E5DEb6B5D122CC3B9A1FcAAD4415Ab",
      "type": "Contract",
      "template": "taiko/SharedERC20Vault",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x0112b81e89b367f8ffeb6b571bd245b1be7a1279474ffa11591f8374a2c8b14f"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Shared vault for Taiko chains for bridged ERC20 tokens.",
      "sinceTimestamp": 1714550603,
      "sinceBlock": 19773963,
      "values": {
        "$admin": "0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a",
        "$implementation": "0xb20C8Ffc2dD49596508d262b6E8B6817e9790E63",
        "$pastUpgrades": [
          [
            "2024-05-01T08:03:23.000Z",
            "0x109f0a0ff2b3b57f3a94bc1dd39159a7e3af9ec0141be56d49d7bb1db94279c2",
            ["0x15D9F7e12aEa18DAEF5c651fBf97567CAd4a4BEc"]
          ],
          [
            "2024-05-11T06:26:35.000Z",
            "0x416560cd96dc75ccffebe889e8d1ab3e08b33f814dc4a2bf7c6f9555071d1f6f",
            ["0xC722d9f3f8D60288589F7f67a9CFAd34d3B9bf8E"]
          ],
          [
            "2024-05-25T11:00:59.000Z",
            "0x02ed558762eae5f0a930ba4a1047a02d4a793ea48890268c32df04e882f138ff",
            ["0x4F750D13005444407D44dAA30922128db0374ca1"]
          ],
          [
            "2024-06-07T08:40:35.000Z",
            "0xdb5e926c96d112ce1389da77a927fba6c7d04a711839b9e14777530ebcf83914",
            ["0xF8bdaC4E68bA2595Be8381aaa5456917e374E737"]
          ],
          [
            "2024-06-10T12:45:47.000Z",
            "0x42a1dacf03a4032209ca4a6b922ffe2ebb34925c16a6632d8590cf3374ae59d8",
            ["0x75b5E276c5C1e9378E899cb3A87977421980Eb22"]
          ],
          [
            "2024-07-02T07:03:35.000Z",
            "0x13f54109cb7f7507ad03562b06ea8d8b472043186e44252302583bc64acfb20b",
            ["0xa303784B0557BF1F1FB8b8abEF2B18a005722689"]
          ],
          [
            "2024-07-16T12:45:59.000Z",
            "0xee632b50626beb2f7db84c9c7f303f29366f86dfaccd24ddd831ceac714c20e5",
            ["0x7ACFBb369a552C45d402448A4d64b9da54C3FF30"]
          ],
          [
            "2024-11-01T09:20:35.000Z",
            "0x13ea4d044a313cf667d16514465e6b96227ef7198bda7b19c70eefee44e9bccd",
            ["0xb20C8Ffc2dD49596508d262b6E8B6817e9790E63"]
          ]
        ],
        "$upgradeCount": 8,
        "addressManager": "0xEf9EaA1dd30a9AA1df01c36411b5F082aA65fBaa",
        "impl": "0xb20C8Ffc2dD49596508d262b6E8B6817e9790E63",
        "inNonReentrant": false,
        "lastUnpausedAt": 0,
        "MIN_MIGRATION_DELAY": 7776000,
        "name": "0x65726332305f7661756c74000000000000000000000000000000000000000000",
        "owner": "0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "EXPECT_REVERT"
      },
      "implementationNames": {
        "0x996282cA11E5DEb6B5D122CC3B9A1FcAAD4415Ab": "ERC1967Proxy",
        "0xb20C8Ffc2dD49596508d262b6E8B6817e9790E63": "MainnetERC20Vault"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "name": "Taiko Multisig",
      "address": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "ethereum:0x0ffa4A625ED9DB32B70F99180FD00759fc3e9261",
          "description": "can update the program being verified",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "ethereum:0x5A982Fb1818c22744f5d7D36D0C4c9f61937b33a",
          "description": "can update the contract address for a given name",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "ethereum:0x73Ee496dA20e5C65340c040B0D8c3C891C1f74AE",
          "description": "can update the program being verified",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "ethereum:0x7e6409e9b6c5e2064064a6cC994f9a2e95680782",
          "description": "can add new instances without a DCAP attestation",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "ethereum:0x8d7C954960a36a7596d7eA4945dDf891967ca8A3",
          "description": "can update the program being verified",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "ethereum:0x8Efa01564425692d0a0838DC10E300BD310Cb43e",
          "description": "can update the contract address for a given name",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "ethereum:0x9e322fC59b8f4A29e6b25c3a166ac1892AA30136",
          "description": "can add new instances without a DCAP attestation",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "ethereum:0xbee1040D0Aab17AE19454384904525aE4A3602B9",
          "description": "can update the program being verified",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "ethereum:0xEf9EaA1dd30a9AA1df01c36411b5F082aA65fBaa",
          "description": "can update the contract address for a given name",
          "role": ".owner"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x05d88855361808fA1d7fc28084Ef3fCa191c4e03",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x0ffa4A625ED9DB32B70F99180FD00759fc3e9261",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x5A982Fb1818c22744f5d7D36D0C4c9f61937b33a",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x68d30f47F19c07bCCEf4Ac7FAE2Dc12FCa3e0dC9",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x73Ee496dA20e5C65340c040B0D8c3C891C1f74AE",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x7e6409e9b6c5e2064064a6cC994f9a2e95680782",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x8d7C954960a36a7596d7eA4945dDf891967ca8A3",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x8Efa01564425692d0a0838DC10E300BD310Cb43e",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x91f67118DD47d502B1f0C354D0611997B022f29E",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x9e0a24964e5397B566c1ed39258e21aB5E35C77C",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x9e322fC59b8f4A29e6b25c3a166ac1892AA30136",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0x9F9D2fC7abe74C79f86F0D1212107692430eef72",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0xB16931e78d0cE3c9298bbEEf3b5e2276D34b8da1",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0xbee1040D0Aab17AE19454384904525aE4A3602B9",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0xd60247c6848B7Ca29eDdF63AA924E53dB6Ddd8EC",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0xEf9EaA1dd30a9AA1df01c36411b5F082aA65fBaa",
          "role": "admin"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1714192631,
      "sinceBlock": 19744335,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xDC4ece5620659F4d5d1536Cab52BD5e5B15F8a0a",
          "0x0aED2375549D1115e180bd0caea829C429Ea50B3",
          "0x1eE487CEdCe52c370DB11e62987F3ABe873E145A",
          "0x0F026a3efE44E0Fe34B87375EFe69b16c05D0438",
          "0x7Cdd1c128Cd72dd252f569eeD942735330937F91",
          "0x3b1D1F89E0b6803174A2dE72e21A6f6f8464d5F1"
        ],
        "$threshold": 4,
        "domainSeparator": "0x3a173428d0c590136352934d6660e8d16a6dc0181538aa341048cf31a1316c16",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "4 of 6 (67%)",
        "nonce": 104,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "DAO",
      "address": "0x9CDf589C941ee81D75F34d3755671d614f7cf261",
      "type": "Contract",
      "template": "taiko/DAO",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x0567fe67ea1d2872edb3f9420706c18e62259987f7e28a61ab4bdf9c44348e57"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main contract of the Aragon-based DAO governance framework.",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "from": "ethereum:0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "ethereum:0xfC3C4ca95a8C4e5a587373f1718CD91301d6b2D3",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1746111707,
      "sinceBlock": 22389760,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x52Af16664155608b845BE18aa29620EbF6eA2D3a",
        "$pastUpgrades": [
          [
            "2025-05-01T15:01:47.000Z",
            "0x8acf74d966e6eb99972a4a73382cf42aa918d4715eaf4b587d1007f24edf5208",
            ["0x52Af16664155608b845BE18aa29620EbF6eA2D3a"]
          ]
        ],
        "$upgradeCount": 1,
        "daoURI": "",
        "EXECUTE_PERMISSION_ID": "0xbf04b4486c9663d805744005c3da000eda93de6e3308a4a7a812eb565327b78d",
        "getTrustedForwarder": "0x0000000000000000000000000000000000000000",
        "protocolVersion": [1, 3, 0],
        "proxiableUUID": "EXPECT_REVERT",
        "REGISTER_STANDARD_CALLBACK_PERMISSION_ID": "0xfaf505be9907aa6951c2ebe5b0312f4980e14f21912ed355372103cc8bd683bc",
        "ROOT_PERMISSION_ID": "0x815fe80e4b37c8582a3b773d1d7071f983eacfd56b5965db654f3087c25ada33",
        "SET_METADATA_PERMISSION_ID": "0x4707e94b25cfce1a7c363508fbb838c35864388ad77284b248282b9746982b9b",
        "SET_SIGNATURE_VALIDATOR_PERMISSION_ID": "0x0dcbfb19b09fb8ff4e9af583d4b8e9c8127cc1b26529b4d96dd3b7e778088372",
        "SET_TRUSTED_FORWARDER_PERMISSION_ID": "0x06d294bc8cbad2e393408b20dd019a772661f60b8d633e56761157cb1ec85f8c",
        "signatureValidator": "0x0000000000000000000000000000000000000000",
        "UPGRADE_DAO_PERMISSION_ID": "0x1f53edd44352e5d15bad2b29233baa93bcd595e09457780bc7c5445bbbe751cc"
      },
      "implementationNames": {
        "0x9CDf589C941ee81D75F34d3755671d614f7cf261": "ERC1967Proxy",
        "0x52Af16664155608b845BE18aa29620EbF6eA2D3a": "DAO"
      },
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "name": "MainnetSignalService",
      "address": "0x9e0a24964e5397B566c1ed39258e21aB5E35C77C",
      "type": "Contract",
      "template": "taiko/SignalService",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0xc978dbfc097ca447823c4a1eb83078cd63532727420b19287acc0f87e884285f"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The SignalService contract serves as cross-chain message passing system. It defines methods for sending and verifying signals with merkle proofs.",
      "sinceTimestamp": 1714550603,
      "sinceBlock": 19773963,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0x42Ec977eb6B09a8D78c6D486c3b0e63569bA851c",
        "$pastUpgrades": [
          [
            "2024-05-01T08:03:23.000Z",
            "0x0898d14da2f38d677085073d2decfb7ca32902406df2e7a84f6615d9c92d4516",
            ["0xE1d91bAE44B70bD66e8b688B8421fD62dcC33c72"]
          ],
          [
            "2024-05-11T06:26:35.000Z",
            "0x416560cd96dc75ccffebe889e8d1ab3e08b33f814dc4a2bf7c6f9555071d1f6f",
            ["0xB11Cd7bA46a12F238b4Ad831f6F296262C1e652d"]
          ],
          [
            "2024-06-06T08:51:11.000Z",
            "0x8de1631a25b337c1e702f9ce9d9ab8a3b626922441855e959b2d79dae40bd131",
            ["0x3d59c18b31A7D950EF9bd15eD285b6c182E0f0bb"]
          ],
          [
            "2024-06-07T08:40:35.000Z",
            "0xdb5e926c96d112ce1389da77a927fba6c7d04a711839b9e14777530ebcf83914",
            ["0xB11Cd7bA46a12F238b4Ad831f6F296262C1e652d"]
          ],
          [
            "2024-07-16T14:30:23.000Z",
            "0x7d584f0a645cad61e634f64ffaf7e1bbfb92749878eb25b39ce0e5cf698897c7",
            ["0xDF8642a1FBFc2014de27E8E87283D6f3eEF315DF"]
          ],
          [
            "2024-11-01T09:20:35.000Z",
            "0x13ea4d044a313cf667d16514465e6b96227ef7198bda7b19c70eefee44e9bccd",
            ["0x45fed11Ba70D4217545F18E27DDAF7D76Ff499f3"]
          ],
          [
            "2025-05-15T08:40:47.000Z",
            "0x97789b6668d0a287b1f57bb6c8e23cce62308fb887139faeb0f06b77855995fd",
            ["0x0783Ee019C9b0f918A741469bD488A88827b3617"]
          ],
          [
            "2025-05-18T14:25:11.000Z",
            "0x0ae99d24b294622e3d3868c8dca911a5936231ce1f97254ec0c6a6f65f7aa81c",
            ["0x42Ec977eb6B09a8D78c6D486c3b0e63569bA851c"]
          ]
        ],
        "$upgradeCount": 8,
        "impl": "0x42Ec977eb6B09a8D78c6D486c3b0e63569bA851c",
        "inNonReentrant": false,
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "EXPECT_REVERT",
        "resolver": "0x8Efa01564425692d0a0838DC10E300BD310Cb43e"
      },
      "implementationNames": {
        "0x9e0a24964e5397B566c1ed39258e21aB5E35C77C": "ERC1967Proxy",
        "0x42Ec977eb6B09a8D78c6D486c3b0e63569bA851c": "MainnetSignalService"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "SgxVerifier",
      "address": "0x9e322fC59b8f4A29e6b25c3a166ac1892AA30136",
      "type": "Contract",
      "template": "taiko/SgxVerifier",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x623df54827648dd7289a821d9020c19faccf1c24e7cea82e7157f2dc2c548511"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Verifier contract for SGX proven blocks.",
      "ignoreInWatchMode": ["nextInstanceId"],
      "sinceTimestamp": 1747268759,
      "sinceBlock": 22484949,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0x8ADDcf5d4CD7BD9dA1CE62eF84AeE22c9E2BfbA5",
        "$pastUpgrades": [
          [
            "2025-05-15T00:25:59.000Z",
            "0x2a2d9e9bfab5ed17c7bb6d2c18a0a90ad1eb50075225b81c1492a61f22c85bd7",
            ["0x8ADDcf5d4CD7BD9dA1CE62eF84AeE22c9E2BfbA5"]
          ]
        ],
        "$upgradeCount": 1,
        "automataDcapAttestation": "0x8d7C954960a36a7596d7eA4945dDf891967ca8A3",
        "impl": "0x8ADDcf5d4CD7BD9dA1CE62eF84AeE22c9E2BfbA5",
        "inNonReentrant": false,
        "INSTANCE_EXPIRY": 31536000,
        "INSTANCE_VALIDITY_DELAY": 0,
        "nextInstanceId": 12,
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "EXPECT_REVERT",
        "resolver": "0x0000000000000000000000000000000000000000",
        "taikoChainId": 167000,
        "taikoInbox": "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a",
        "taikoProofVerifier": "0xB16931e78d0cE3c9298bbEEf3b5e2276D34b8da1"
      },
      "implementationNames": {
        "0x9e322fC59b8f4A29e6b25c3a166ac1892AA30136": "ERC1967Proxy",
        "0x8ADDcf5d4CD7BD9dA1CE62eF84AeE22c9E2BfbA5": "SgxVerifier"
      }
    },
    {
      "name": "TaikoWrapper",
      "address": "0x9F9D2fC7abe74C79f86F0D1212107692430eef72",
      "type": "Contract",
      "template": "taiko/TaikoWrapper",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x9cee3ca82b3cd60de871679b86db583cbf35a0a911ded84676f9fdcc1a77c8ca"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Entry point for proposing blocks. It enforces the inclusion of forced transactions after their deadline.",
      "sinceTimestamp": 1747268747,
      "sinceBlock": 22484948,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0xAdBa78120E85Add0dBD2050dBA0548CEDA81A31b",
        "$pastUpgrades": [
          [
            "2025-05-15T00:25:47.000Z",
            "0xf4136bf69dd60ed5f7716de1fc886feb28cddd315692053014caf4608c9de2ff",
            ["0xAdBa78120E85Add0dBD2050dBA0548CEDA81A31b"]
          ]
        ],
        "$upgradeCount": 1,
        "forcedInclusionStore": "0x05d88855361808fA1d7fc28084Ef3fCa191c4e03",
        "impl": "0xAdBa78120E85Add0dBD2050dBA0548CEDA81A31b",
        "inbox": "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a",
        "inNonReentrant": false,
        "MIN_TXS_PER_FORCED_INCLUSION": 512,
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "preconfRouter": "0x0000000000000000000000000000000000000000",
        "resolver": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0x9F9D2fC7abe74C79f86F0D1212107692430eef72": "ERC1967Proxy",
        "0xAdBa78120E85Add0dBD2050dBA0548CEDA81A31b": "TaikoWrapper"
      }
    },
    {
      "name": "Toni Wahrstätter",
      "address": "0xa384E224A3F3D664F43eBE33395eF0DCcE67e894",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1734939971,
      "sinceBlock": 21463784,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0xd0d756A346105511bc59726c82c7Fd2e3Fe69e3F",
          "0x93533a3511E9b0d5c17b1CBD0e1737781DEf61a6"
        ],
        "$threshold": 1,
        "domainSeparator": "0x2c85c7a523987922c6ceb40f6c07213d63480fc17b57b24b61991693a2ce8d4a",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 2 (50%)",
        "nonce": 2,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0xa384E224A3F3D664F43eBE33395eF0DCcE67e894": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "VerifierGateway",
      "address": "0xB16931e78d0cE3c9298bbEEf3b5e2276D34b8da1",
      "type": "Contract",
      "template": "taiko/VerifierGateway",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0xb3dccf29ca6ba3adf1d49f4ebb767cdb55ad46411e6cded20047cc3b2bdd428f"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Gateway contract for the multi-proof system. It redirects proof to the appropriate verifier based on the proof type.",
      "sinceTimestamp": 1747268747,
      "sinceBlock": 22484948,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0x8C520BB75590deaBC30c4fcaFD8778A43E5481b9",
        "$pastUpgrades": [
          [
            "2025-05-15T00:25:47.000Z",
            "0x97cbb3b627dbba1f69fdf82ab883b164a860421507be24fdaadec5cb6394645d",
            ["0xEbB8De866727984Ee3a364079f83177FE6d6e288"]
          ],
          [
            "2025-05-15T00:25:59.000Z",
            "0x0d65cd40703200e2a85d3e2c230e23889a51af84fdc475b40844c00e4e48e72f",
            ["0x8C520BB75590deaBC30c4fcaFD8778A43E5481b9"]
          ]
        ],
        "$upgradeCount": 2,
        "impl": "0x8C520BB75590deaBC30c4fcaFD8778A43E5481b9",
        "inNonReentrant": false,
        "opVerifier": "0x0000000000000000000000000000000000000000",
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "resolver": "0x0000000000000000000000000000000000000000",
        "risc0RethVerifier": "0x73Ee496dA20e5C65340c040B0D8c3C891C1f74AE",
        "sgxGethVerifier": "0x7e6409e9b6c5e2064064a6cC994f9a2e95680782",
        "sgxRethVerifier": "0x9e322fC59b8f4A29e6b25c3a166ac1892AA30136",
        "sp1RethVerifier": "0xbee1040D0Aab17AE19454384904525aE4A3602B9",
        "taikoInbox": "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a",
        "tdxGethVerifier": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0xB16931e78d0cE3c9298bbEEf3b5e2276D34b8da1": "ERC1967Proxy",
        "0x8C520BB75590deaBC30c4fcaFD8778A43E5481b9": "MainnetVerifier"
      }
    },
    {
      "name": "Aragon",
      "address": "0xb284810536C0dAB6A8e48153B58588A9B9e0F701",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1745211803,
      "sinceBlock": 22315159,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0x5811Ab14833720D743ec57BC49c9342DF66069d0",
          "0x824Dce8d292a393DAb5FFdeb788DC1086257f678",
          "0x3ffe3F16d47A54b1C6A3f47c9E6Ff5C2C1B32859"
        ],
        "$threshold": 2,
        "domainSeparator": "0xabf3ab8a64aad2cded05c3358873223fc1af4081735a969d65c1ce5991dc880f",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 4,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0xb284810536C0dAB6A8e48153B58588A9B9e0F701": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "Daniel Wang",
      "address": "0xb47fE76aC588101BFBdA9E68F66433bA51E8029a",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1732702979,
      "sinceBlock": 21278465,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0x30bc4C0Baf55A37Ccf2d626Bc592bd7715b75De2",
          "0x7057A707621Fadd422f84DE94A9dF7c4F1AC595C"
        ],
        "$threshold": 1,
        "domainSeparator": "0x4d1471e323401d347b11627cf824dfcf21c5307d1377cffaec145c873dc2550d",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 2 (50%)",
        "nonce": 67,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0xb47fE76aC588101BFBdA9E68F66433bA51E8029a": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0xB4BE8887908AA8a00A40F3a6AC28402672B83328",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xbBCE182D3d6ae94CF0d0BF7C83E87c01f42635B0",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xbC40317A69CB1D1aF2CBcfE32C8B7a6840Dc287a",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SP1VerifierGateway",
      "address": "0xbee1040D0Aab17AE19454384904525aE4A3602B9",
      "type": "Contract",
      "template": "taiko/SP1VerifierGateway",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x21ba9895a752c42c9a52b397fdc8ee7c4c22e621273f53176f80c853e2502ca0"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Entry contract to verify batches using SP1.",
      "sinceTimestamp": 1747268759,
      "sinceBlock": 22484949,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0x2E17aC86CafC1db939C9942E478F92bF0E548Ee7",
        "$pastUpgrades": [
          [
            "2025-05-15T00:25:59.000Z",
            "0xc2f94680481556ed7d11db79956690ede3707ca24c6b8cef62a2f360df4c7dda",
            ["0x35f26e14D0dAeDd1904843370f761C60B891D466"]
          ],
          [
            "2025-06-04T00:40:23.000Z",
            "0xbdc86ada3808a5987cd1f4bbc49ecd2d7e577bf90642956442a3d14cffa827ec",
            ["0x2E17aC86CafC1db939C9942E478F92bF0E548Ee7"]
          ]
        ],
        "$upgradeCount": 2,
        "impl": "0x2E17aC86CafC1db939C9942E478F92bF0E548Ee7",
        "inNonReentrant": false,
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "resolver": "0x0000000000000000000000000000000000000000",
        "sp1RemoteVerifier": "0xFF5Adab685362DC4C33536a65aF5873738D1216B",
        "taikoChainId": 167000
      },
      "implementationNames": {
        "0xbee1040D0Aab17AE19454384904525aE4A3602B9": "ERC1967Proxy",
        "0x2E17aC86CafC1db939C9942E478F92bF0E548Ee7": "TaikoSP1Verifier"
      }
    },
    {
      "address": "0xBFD60Cb2313B848a2FC088d3bc1ab6BF498E1DD1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xcF7017aD172a8aefBfF7e45CfaCeF5bd94701477",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xd0d756A346105511bc59726c82c7Fd2e3Fe69e3F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Safe",
      "address": "0xD5cF6A34Ba5fb9289510dC93c03F1f9084798487",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1746429647,
      "sinceBlock": 22416011,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0xB4BE8887908AA8a00A40F3a6AC28402672B83328",
          "0x392EF0Ec3579436299E4f9b170c454995c03CE8A",
          "0x55792e1F0a41D3af8B6d41DFdcf24651AA80fA1e",
          "0x5374b2907a45a28c37caA45e06FC6eBceECAC72a"
        ],
        "$threshold": 2,
        "domainSeparator": "0x6ea5ff8a5c7b48ff401e1c5f76f263954b3be76834480c8c8bbf33095b0c1732",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 4 (50%)",
        "nonce": 1,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0xD5cF6A34Ba5fb9289510dC93c03F1f9084798487": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "MainnetBridge",
      "address": "0xd60247c6848B7Ca29eDdF63AA924E53dB6Ddd8EC",
      "type": "Contract",
      "template": "taiko/TaikoBridge",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x118c20a34164db28141d7fa6496d1fcf9e139354ed77c4e1c3f33e5eaac65977"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Shared bridge for Taiko chains for bridged ETH.",
      "ignoreInWatchMode": ["nextMessageId"],
      "sinceTimestamp": 1714550603,
      "sinceBlock": 19773963,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0x2705B12a971dA766A3f9321a743d61ceAD67dA2F",
        "$pastUpgrades": [
          [
            "2024-05-01T08:03:23.000Z",
            "0x99673a767d36f5f3bc4af415072f97f344b6a5ec39e0d85eb799691787b1b98b",
            ["0x91d593d34f2E1904cDCe3D5290a74563F87bCF6f"]
          ],
          [
            "2024-05-11T06:26:35.000Z",
            "0x416560cd96dc75ccffebe889e8d1ab3e08b33f814dc4a2bf7c6f9555071d1f6f",
            ["0x4A1091c2fb37D9C4a661c2384Ff539d94CCF853D"]
          ],
          [
            "2024-05-22T06:23:11.000Z",
            "0x5a60c5815947a199cc84e1bc75539e01a202597b20c1f87bd9d02f8be6453abd",
            ["0xc71CC3B0a47149878fad337fb2ca54E546A645ba"]
          ],
          [
            "2024-05-25T11:00:59.000Z",
            "0x02ed558762eae5f0a930ba4a1047a02d4a793ea48890268c32df04e882f138ff",
            ["0x02F21B4C3d4dbfF70cE851741175a727c8D782Be"]
          ],
          [
            "2024-05-29T05:00:35.000Z",
            "0x8a380a25d03a740d9535dfc3e2fc4f6960e22d49ad88b8d85f59af4013aedf87",
            ["0x71c2f41AEDe913AAEf2c62596E03702E348D6Cd0"]
          ],
          [
            "2024-05-31T09:34:47.000Z",
            "0xf21f6bf720767db3bc9b63ef69cacb20340bdedfb6589e6a4d11fe082dfa7bd6",
            ["0x951B7Ae1bB26d12dB37f01748e8fB62FEf45A8B5"]
          ],
          [
            "2024-06-04T06:09:11.000Z",
            "0xc0ba6558642b93ee892bee0705dbcfb5130c53637e6266bfa5e3a6501167d6f2",
            ["0x3c326483EBFabCf3252205f26dF632FE83d11108"]
          ],
          [
            "2024-06-07T04:02:11.000Z",
            "0x0bbf7d1258c646f41a02a92a55825b1ebfd3659577d0f2b57b462f8895e23a04",
            ["0xD28f2c26aD8bA88b0691F6BB41Ff021878052561"]
          ],
          [
            "2024-06-27T15:36:23.000Z",
            "0x2f14829c3da1a755a74948d5716a625256ae7e2481e538b0660a8da11c84dc2e",
            ["0x40f8Be2969D0D5717768F6799c8840e5D5D603F7"]
          ],
          [
            "2024-07-02T07:03:35.000Z",
            "0x13f54109cb7f7507ad03562b06ea8d8b472043186e44252302583bc64acfb20b",
            ["0x01E7D369a619eF1B0E92563d8737F42C09789986"]
          ],
          [
            "2024-07-16T14:30:23.000Z",
            "0x7d584f0a645cad61e634f64ffaf7e1bbfb92749878eb25b39ce0e5cf698897c7",
            ["0xAc96FF285158bceBB8573D20d853e86BB2915aF3"]
          ],
          [
            "2024-11-01T09:20:35.000Z",
            "0x13ea4d044a313cf667d16514465e6b96227ef7198bda7b19c70eefee44e9bccd",
            ["0x2705B12a971dA766A3f9321a743d61ceAD67dA2F"]
          ]
        ],
        "$upgradeCount": 12,
        "addressManager": "0xEf9EaA1dd30a9AA1df01c36411b5F082aA65fBaa",
        "GAS_OVERHEAD": 120000,
        "GAS_RESERVE": 800000,
        "impl": "0x2705B12a971dA766A3f9321a743d61ceAD67dA2F",
        "inNonReentrant": false,
        "lastUnpausedAt": 1716809423,
        "nextMessageId": 37334,
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "EXPECT_REVERT",
        "RELAYER_MAX_PROOF_BYTES": 200000
      },
      "implementationNames": {
        "0xd60247c6848B7Ca29eDdF63AA924E53dB6Ddd8EC": "ERC1967Proxy",
        "0x2705B12a971dA766A3f9321a743d61ceAD67dA2F": "MainnetBridge"
      }
    },
    {
      "name": "Multisig",
      "address": "0xD7dA1C25E915438720692bC55eb3a7170cA90321",
      "type": "Contract",
      "template": "taiko/Multisig",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x2b345501d9a4b9f9fc8537b9a257c07664f8aa5cc1db8755e53d6f7d8a589f91"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Modular Governance contract allowing for proposing, voting on and executing proposals (e.g. for Security Council standard proposals).",
      "sinceTimestamp": 1746111707,
      "sinceBlock": 22389760,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x8510d389236d7213eE9B9C38CAaBc0aD24853C25",
        "$pastUpgrades": [
          [
            "2025-05-01T15:01:47.000Z",
            "0x8acf74d966e6eb99972a4a73382cf42aa918d4715eaf4b587d1007f24edf5208",
            ["0x8510d389236d7213eE9B9C38CAaBc0aD24853C25"]
          ]
        ],
        "$upgradeCount": 1,
        "dao": "0x9CDf589C941ee81D75F34d3755671d614f7cf261",
        "implementation": "0x8510d389236d7213eE9B9C38CAaBc0aD24853C25",
        "lastMultisigSettingsChange": 22574240,
        "multisigSettings": {
          "onlyListed": true,
          "minApprovals": 5,
          "destinationProposalDuration": 1814400,
          "signerList": "0x0F95E6968EC1B28c794CF1aD99609431de5179c2",
          "proposalExpirationPeriod": 1209600
        },
        "pluginType": 0,
        "proposalCount": 10,
        "UPDATE_MULTISIG_SETTINGS_PERMISSION_ID": "0xb1750e46d35a0069c8465b8643e7838d2149a842a2db8ee233d9835590040cad",
        "UPGRADE_PLUGIN_PERMISSION_ID": "0x821b6e3a557148015a918c89e5d092e878a69854a2d1a410635f771bd5a8a3f5"
      },
      "implementationNames": {
        "0xD7dA1C25E915438720692bC55eb3a7170cA90321": "ERC1967Proxy",
        "0x8510d389236d7213eE9B9C38CAaBc0aD24853C25": "Multisig"
      }
    },
    {
      "address": "0xDC4ece5620659F4d5d1536Cab52BD5e5B15F8a0a",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xDFbD5490462963Cc242471913B53b034B209B32c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xE7CBcDa9a4FEAe2bC7ca6b2B682Bc4Ae9f8B7e3B",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xE8Cd88fb3081EA29D1D6AeAefcb45BBDF512B39f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1SharedAddressManager",
      "address": "0xEf9EaA1dd30a9AA1df01c36411b5F082aA65fBaa",
      "type": "Contract",
      "template": "taiko/L1SharedAddressManager",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x61eadd250e6fee2eea7d778ca5fdb6e04b0fa09044c65eba836b397f585e5535"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Maps contract names to contract addresses. Changes in this mapping effectively act as contract upgrades.",
      "sinceTimestamp": 1714550603,
      "sinceBlock": 19773963,
      "values": {
        "$admin": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "$implementation": "0xEC1a9aa1C648F047752fe4eeDb2C21ceab0c6449",
        "$pastUpgrades": [
          [
            "2024-05-01T08:03:23.000Z",
            "0xf83131446154db1fb4013c20e9468c36f71085dbdf4304f8e2ef5ac13f2e3670",
            ["0x9cA1Ab10c9fAc5153F8b78E67f03aAa69C9c6A15"]
          ],
          [
            "2024-05-11T06:26:35.000Z",
            "0x416560cd96dc75ccffebe889e8d1ab3e08b33f814dc4a2bf7c6f9555071d1f6f",
            ["0xF1cA1F1A068468E1dcF90dA6add185467de80943"]
          ],
          [
            "2024-05-26T11:17:11.000Z",
            "0xe1ef58455de0b0331228e487d54720290ed8a73f709d2146bd43330d4a360bd3",
            ["0x9496502d7D121B3D5eF25cA6c58d4f7593398a17"]
          ],
          [
            "2024-07-16T14:30:23.000Z",
            "0x7d584f0a645cad61e634f64ffaf7e1bbfb92749878eb25b39ce0e5cf698897c7",
            ["0x2f7126f78365AD54EAB26fD7faEc60435008E2fD"]
          ],
          [
            "2024-11-01T09:20:35.000Z",
            "0x13ea4d044a313cf667d16514465e6b96227ef7198bda7b19c70eefee44e9bccd",
            ["0xEC1a9aa1C648F047752fe4eeDb2C21ceab0c6449"]
          ]
        ],
        "$upgradeCount": 5,
        "addressManager": "0xEf9EaA1dd30a9AA1df01c36411b5F082aA65fBaa",
        "impl": "0xEC1a9aa1C648F047752fe4eeDb2C21ceab0c6449",
        "inNonReentrant": false,
        "lastUnpausedAt": 0,
        "namedAddresses": [
          {
            "name": "taiko_token",
            "address": "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800"
          },
          {
            "name": "signal_service",
            "address": "0x1670000000000000000000000000000000000005"
          },
          {
            "name": "bridge",
            "address": "0x1670000000000000000000000000000000000001"
          },
          {
            "name": "erc20_vault",
            "address": "0x1670000000000000000000000000000000000002"
          },
          {
            "name": "erc721_vault",
            "address": "0x1670000000000000000000000000000000000003"
          },
          {
            "name": "erc1155_vault",
            "address": "0x1670000000000000000000000000000000000004"
          },
          {
            "name": "bridged_erc20",
            "address": "0x65666141a541423606365123Ed280AB16a09A2e1"
          },
          {
            "name": "bridged_erc721",
            "address": "0xC3310905E2BC9Cfb198695B75EF3e5B69C6A1Bf7"
          },
          {
            "name": "bridged_erc1155",
            "address": "0x3c90963cFBa436400B0F9C46Aa9224cB379c2c40"
          },
          {
            "name": "bridge_watchdog",
            "address": "0x0000000000000000000000000000000000000000"
          },
          {
            "name": "quota_manager",
            "address": "0x0000000000000000000000000000000000000000"
          }
        ],
        "owner": "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "EXPECT_REVERT",
        "quotaManager": "0x91f67118DD47d502B1f0C354D0611997B022f29E"
      },
      "implementationNames": {
        "0xEf9EaA1dd30a9AA1df01c36411b5F082aA65fBaa": "ERC1967Proxy",
        "0xEC1a9aa1C648F047752fe4eeDb2C21ceab0c6449": "MainnetSharedAddressManager"
      },
      "usedTypes": [
        {
          "typeCaster": "Mapping",
          "arg": {
            "0x7461696b6f5f746f6b656e000000000000000000000000000000000000000000": "taiko_token",
            "0x626f6e645f746f6b656e00000000000000000000000000000000000000000000": "bond_token",
            "0x6272696467650000000000000000000000000000000000000000000000000000": "bridge",
            "0x7369676e616c5f73657276696365000000000000000000000000000000000000": "signal_service",
            "0x65726332305f7661756c74000000000000000000000000000000000000000000": "erc20_vault",
            "0x6572633732315f7661756c740000000000000000000000000000000000000000": "erc721_vault",
            "0x657263313135355f7661756c7400000000000000000000000000000000000000": "erc1155_vault",
            "0x6272696467655f7761746368646f670000000000000000000000000000000000": "bridge_watchdog",
            "0x627269646765645f657263323000000000000000000000000000000000000000": "bridged_erc20",
            "0x627269646765645f657263373231000000000000000000000000000000000000": "bridged_erc721",
            "0x627269646765645f657263313135350000000000000000000000000000000000": "bridged_erc1155",
            "0x71756f74615f6d616e6167657200000000000000000000000000000000000000": "quota_manager"
          }
        }
      ]
    },
    {
      "name": "Daniel Wang Agent",
      "address": "0xf0A0d6Bd4aA94F53F3FB2c88488202a9E9eD2c55",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L2BEAT",
      "address": "0xf1cF63589A1e012F9124182c9eAa36B5333e5f06",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1744116143,
      "sinceBlock": 22224254,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0x3D4997AAC0834BEb5ede861c424807Aa3F29b5bB",
          "0x6dcB04fCC1c597DAFad86e2886bE463d53CaFAdf",
          "0x166868E5AE72592a06056775236d2E4D64CDcCa9"
        ],
        "$threshold": 2,
        "domainSeparator": "0xae594c52c29d405feb0ada763f5db9b0bdfb194b07d0804bfd2490415e9675fc",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 2,
        "VERSION": "1.4.1"
      },
      "implementationNames": {
        "0xf1cF63589A1e012F9124182c9eAa36B5333e5f06": "SafeProxy",
        "0x41675C099F32341bf84BFc5382aF534df5C7461a": "Safe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0xFa92ff698D57f7B875570D9F59501812B843CD44",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "RiscZeroGroth16Verifier",
      "address": "0xfB3Ca570A5348FD101e65303eECdB5Bf43C5548a",
      "type": "Contract",
      "template": "taiko/RiscZeroGroth16Verifier",
      "sourceHashes": [
        "0xe1597b3a05a2f083910b7e1c6e81e56d4eff97191b25307544c7f2164d824d51"
      ],
      "proxyType": "immutable",
      "description": "Verifier contract for RISC Zero Groth16 proofs.",
      "sinceTimestamp": 1749624299,
      "sinceBlock": 22679611,
      "values": {
        "$immutable": true,
        "BN254_CONTROL_ID": "0x04446e66d300eb7fb45c9726bb53c793dda407a62e9601618bb43c5c14657ac0",
        "CONTROL_ROOT_0": "0x61ee75ec4d335b47328b123e27894388",
        "CONTROL_ROOT_1": "0x60ee46c7447efe2120331cd433cb779b",
        "SELECTOR": "0xf536085a",
        "VERSION": "2.1.0"
      },
      "implementationNames": {
        "0xfB3Ca570A5348FD101e65303eECdB5Bf43C5548a": "RiscZeroGroth16Verifier"
      }
    },
    {
      "name": "TaikoDAOController",
      "address": "0xfC3C4ca95a8C4e5a587373f1718CD91301d6b2D3",
      "type": "Contract",
      "template": "taiko/TaikoDAOController",
      "sourceHashes": [
        "0xc44a84c18fe7660acbe7750e0a14401b3a0a0ad97d8c81305bd879dca88d873b",
        "0x2031bc459fbe34f9e0c0bbb1b59039b00ed92ea44002b5be98688d952fb1e4e9"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract that maintains ownership DAO-controlled assets and contracts. Its token weight does not count towards the DAO quorum.",
      "sinceTimestamp": 1746942803,
      "sinceBlock": 22458143,
      "values": {
        "$admin": "0x9CDf589C941ee81D75F34d3755671d614f7cf261",
        "$implementation": "0xd1934807041B168f383870A0d8F565aDe2DF9D7D",
        "$pastUpgrades": [
          [
            "2025-05-11T05:53:23.000Z",
            "0x8328e607699f67108c9b259225d5316a079ad52e648e6188c3fce7bf99abec38",
            ["0xd1934807041B168f383870A0d8F565aDe2DF9D7D"]
          ]
        ],
        "$upgradeCount": 1,
        "impl": "0xd1934807041B168f383870A0d8F565aDe2DF9D7D",
        "inNonReentrant": false,
        "owner": "0x9CDf589C941ee81D75F34d3755671d614f7cf261",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proxiableUUID": "EXPECT_REVERT",
        "resolver": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0xfC3C4ca95a8C4e5a587373f1718CD91301d6b2D3": "ERC1967Proxy",
        "0xd1934807041B168f383870A0d8F565aDe2DF9D7D": "TaikoDAOController"
      },
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "name": "SP1Verifier",
      "address": "0xFF5Adab685362DC4C33536a65aF5873738D1216B",
      "type": "Contract",
      "template": "succinct/SP1Verifier",
      "sourceHashes": [
        "0x3ffef9f4f4cd24743e4612a4c1011ca13c0b983c52bbe8f4a6d40a58e5eeae42"
      ],
      "proxyType": "immutable",
      "description": "Verifier contract for SP1 proofs (v5.0.0).",
      "sinceTimestamp": 1748931023,
      "sinceBlock": 22622255,
      "values": {
        "$immutable": true,
        "VERIFIER_HASH": "0xd4e8ecd2357dd882209800acd6abb443d231cf287d77ba62b732ce937c8b56e7",
        "VERSION": "v5.0.0"
      },
      "implementationNames": {
        "0xFF5Adab685362DC4C33536a65aF5873738D1216B": "SP1Verifier"
      }
    }
  ],
  "abis": {
    "0x02772b7B3a5Bea0141C993Dbb8D0733C19F46169": [
      "function decodeCert(bytes der, bool isPckCert) pure returns (bool success, tuple(uint256 notBefore, uint256 notAfter, bytes serialNumber, bytes tbsCertificate, bytes pubKey, bytes signature, bool isPck, tuple(string commonName, string issuerName, tuple(string pceid, string fmspc, uint256 pcesvn, uint256[] sgxTcbCompSvnArr) sgxExtension) pck) cert)",
      "function splitCertificateChain(bytes pemChain, uint256 size) pure returns (bool success, bytes[] certs)"
    ],
    "0x05d88855361808fA1d7fc28084Ef3fCa191c4e03": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x06a9Ab27c7e2255df1815E6CC0168d7755Feb19a": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x0F40268Ec0Dc8D88CF2f22E227A29a0b478b6351": [
      "constructor(address _singleton)"
    ],
    "0x0F95E6968EC1B28c794CF1aD99609431de5179c2": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x0ffa4A625ED9DB32B70F99180FD00759fc3e9261": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x10dea67478c5F8C5E2D90e5E9B26dBe60c54d800": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x25d3E89bAcE2040Ed3aF7c4c7B505cfBB72fD6f1": [
      "constructor(address _singleton)"
    ],
    "0x2705B12a971dA766A3f9321a743d61ceAD67dA2F": [
      "error B_INSUFFICIENT_GAS()",
      "error B_INVALID_CHAINID()",
      "error B_INVALID_CONTEXT()",
      "error B_INVALID_FEE()",
      "error B_INVALID_GAS_LIMIT()",
      "error B_INVALID_STATUS()",
      "error B_INVALID_VALUE()",
      "error B_MESSAGE_NOT_SENT()",
      "error B_OUT_OF_ETH_QUOTA()",
      "error B_PERMISSION_DENIED()",
      "error B_PROOF_TOO_LARGE()",
      "error B_RETRY_FAILED()",
      "error B_SIGNAL_NOT_RECEIVED()",
      "error ETH_TRANSFER_FAILED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error RESOLVER_DENIED()",
      "error RESOLVER_INVALID_MANAGER()",
      "error RESOLVER_UNEXPECTED_CHAINID()",
      "error RESOLVER_ZERO_ADDR(uint64 chainId, bytes32 name)",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event MessageProcessed(bytes32 indexed msgHash, tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) message, tuple(uint32 gasUsedInFeeCalc, uint32 proofSize, uint32 numCacheOps, bool processedByRelayer) stats)",
      "event MessageSent(bytes32 indexed msgHash, tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) message)",
      "event MessageStatusChanged(bytes32 indexed msgHash, uint8 status)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function GAS_OVERHEAD() view returns (uint32)",
      "function GAS_RESERVE() view returns (uint32)",
      "function RELAYER_MAX_PROOF_BYTES() view returns (uint256)",
      "function acceptOwnership()",
      "function addressManager() view returns (address)",
      "function context() view returns (tuple(bytes32 msgHash, address from, uint64 srcChainId) ctx_)",
      "function failMessage(tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) _message)",
      "function getMessageMinGasLimit(uint256 dataLength) pure returns (uint32)",
      "function hashMessage(tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) _message) pure returns (bytes32)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner, address _sharedAddressManager)",
      "function init2()",
      "function isDestChainEnabled(uint64 _chainId) view returns (bool enabled_, address destBridge_)",
      "function isMessageFailed(tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) _message, bytes _proof) view returns (bool)",
      "function isMessageReceived(tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) _message, bytes _proof) view returns (bool)",
      "function isMessageSent(tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) _message) view returns (bool)",
      "function lastUnpausedAt() view returns (uint64)",
      "function messageStatus(bytes32 msgHash) view returns (uint8 status)",
      "function nextMessageId() view returns (uint64)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function processMessage(tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) _message, bytes _proof) returns (uint8 status_, uint8 reason_)",
      "function proxiableUUID() view returns (bytes32)",
      "function recallMessage(tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) _message, bytes _proof)",
      "function renounceOwnership()",
      "function resolve(uint64 _chainId, bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function retryMessage(tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) _message, bool _isLastAttempt)",
      "function selfDelegate(address _anyToken)",
      "function sendMessage(tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) _message) payable returns (bytes32 msgHash_, tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) message_)",
      "function signalForFailedMessage(bytes32 _msgHash) pure returns (bytes32)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x2AffADEb2ef5e1F2a7F58964ee191F1e88317ECd": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x2E17aC86CafC1db939C9942E478F92bF0E548Ee7": [
      "constructor(uint64 _taikoChainId, address _sp1RemoteVerifier)",
      "error ACCESS_DENIED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error SP1_INVALID_AGGREGATION_VKEY()",
      "error SP1_INVALID_PARAMS()",
      "error SP1_INVALID_PROGRAM_VKEY()",
      "error SP1_INVALID_PROOF()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event ProgramTrusted(bytes32 programVKey, bool trusted)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner)",
      "function isProgramTrusted(bytes32 provingProgramVKey) view returns (bool trusted)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function setProgramTrusted(bytes32 _programVKey, bool _trusted)",
      "function sp1RemoteVerifier() view returns (address)",
      "function taikoChainId() view returns (uint64)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function verifyProof(tuple(uint64 batchId, bytes32 metaHash, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot) transition)[] _ctxs, bytes _proof) view"
    ],
    "0x2eFDb93a3B87b930E553d504db67Ee41c69C42d1": [
      "constructor(address _addresslist)",
      "error AlreadyAppointed()",
      "error AlreadyListed()",
      "error CannotAppointContracts()",
      "error InvalidAddressList()",
      "error MustBeAppointed()",
      "error MustBeListed()",
      "error MustResetAppointedAgent()",
      "event AgentAppointed(address account, address agent)",
      "event PublicKeySet(address account, bytes32 publicKey)",
      "function accountList(uint256) view returns (address)",
      "function accounts(address) view returns (address appointedAgent, bytes32 publicKey)",
      "function appointAgent(address _newAgent)",
      "function appointerOf(address) view returns (address)",
      "function getAppointedAgent(address _account) view returns (address)",
      "function getRegisteredAccounts() view returns (address[])",
      "function removeUnused()",
      "function setOwnPublicKey(bytes32 _publicKey)",
      "function setPublicKey(address _accountOwner, bytes32 _publicKey)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)"
    ],
    "0x363e846B91AF677Fb82f709b6c35BD1AaFc6B3Da": [
      "constructor(address _singleton)"
    ],
    "0x41675C099F32341bf84BFc5382aF534df5C7461a": [
      "constructor()",
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x42Ec977eb6B09a8D78c6D486c3b0e63569bA851c": [
      "constructor(address _resolver)",
      "error ACCESS_DENIED()",
      "error ContentLengthMismatch()",
      "error EmptyItem()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error InvalidDataRemainder()",
      "error InvalidHeader()",
      "error LTP_INVALID_ACCOUNT_PROOF()",
      "error LTP_INVALID_INCLUSION_PROOF()",
      "error REENTRANT_CALL()",
      "error RESOLVER_NOT_FOUND()",
      "error SS_EMPTY_PROOF()",
      "error SS_INVALID_HOPS_WITH_LOOP()",
      "error SS_INVALID_LAST_HOP_CHAINID()",
      "error SS_INVALID_MID_HOP_CHAINID()",
      "error SS_INVALID_STATE()",
      "error SS_SIGNAL_NOT_FOUND()",
      "error SS_SIGNAL_NOT_RECEIVED()",
      "error SS_UNAUTHORIZED()",
      "error UnexpectedList()",
      "error UnexpectedString()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Authorized(address indexed addr, bool authorized)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ChainDataSynced(uint64 indexed chainId, uint64 indexed blockId, bytes32 indexed kind, bytes32 data, bytes32 signal)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event SignalSent(address app, bytes32 signal, bytes32 slot, bytes32 value)",
      "event SignalsReceived(bytes32[] signalSlots)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function authorize(address _addr, bool _authorize)",
      "function getSignalSlot(uint64 _chainId, address _app, bytes32 _signal) pure returns (bytes32)",
      "function getSyncedChainData(uint64 _chainId, bytes32 _kind, uint64 _blockId) view returns (uint64 blockId_, bytes32 chainData_)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner)",
      "function isAuthorized(address addr) view returns (bool authorized)",
      "function isChainDataSynced(uint64 _chainId, bytes32 _kind, uint64 _blockId, bytes32 _chainData) view returns (bool)",
      "function isSignalSent(address _app, bytes32 _signal) view returns (bool)",
      "function isSignalSent(bytes32 _signalSlot) view returns (bool)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proveSignalReceived(uint64 _chainId, address _app, bytes32 _signal, bytes _proof) returns (uint256 numCacheOps_)",
      "function proxiableUUID() view returns (bytes32)",
      "function receiveSignals(bytes32[] _signalSlots)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function sendSignal(bytes32 _signal) returns (bytes32)",
      "function signalForChainData(uint64 _chainId, bytes32 _kind, uint64 _blockId) pure returns (bytes32)",
      "function syncChainData(uint64 _chainId, bytes32 _kind, uint64 _blockId, bytes32 _chainData) returns (bytes32)",
      "function topBlockId(uint64 chainId, bytes32 kind) view returns (uint64 blockId)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function verifySignalReceived(uint64 _chainId, address _app, bytes32 _signal, bytes _proof) view"
    ],
    "0x4347df63bdC82b8835fC9FF47bC5a71a12cC0f06": [
      "constructor()",
      "error ACCESS_DENIED()",
      "error DryrunSucceeded()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INNER_ERROR(bytes innerError)",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event ActionExecuted(address indexed target, uint256 value, bytes data)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event DryrunGasCost(uint256 gasUsed)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function acceptOwnershipOf(address _contractToOwn)",
      "function dryrun(bytes _actions) payable",
      "function execute(bytes _actions) returns (bytes[] results_)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _taikoDAO)",
      "function lastExecutionId() view returns (uint64)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x436a1075099A145417EBFc74BBaC9605e3e4f1A7": [
      "constructor(address _singleton)"
    ],
    "0x437E450452E8Bc142bd5317199296EcB187c514b": [
      "constructor()",
      "error ApprovalCastForbidden(uint256 proposalId, address sender)",
      "error DaoUnauthorized(address dao, address where, address who, bytes32 permissionId)",
      "error InvalidActions(uint256 proposalId)",
      "error InvalidMetadataUri(uint256 proposalId)",
      "error InvalidSignerList(address signerList)",
      "error MinApprovalsOutOfBounds(uint16 limit, uint16 actual)",
      "error ProposalCreationForbidden(address sender)",
      "error ProposalExecutionForbidden(uint256 proposalId)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Approved(uint256 indexed proposalId, address indexed approver)",
      "event BeaconUpgraded(address indexed beacon)",
      "event EmergencyProposalCreated(uint256 indexed proposalId, address indexed creator, bytes encryptedPayloadURI)",
      "event Executed(uint256 indexed proposalId)",
      "event Initialized(uint8 version)",
      "event MultisigSettingsUpdated(bool onlyListed, uint16 indexed minApprovals, address signerList, uint32 proposalExpirationPeriod)",
      "event ProposalCreated(uint256 indexed proposalId, address indexed creator, uint64 startDate, uint64 endDate, bytes metadata, tuple(address to, uint256 value, bytes data)[] actions, uint256 allowFailureMap)",
      "event ProposalExecuted(uint256 indexed proposalId)",
      "event Upgraded(address indexed implementation)",
      "function UPDATE_MULTISIG_SETTINGS_PERMISSION_ID() view returns (bytes32)",
      "function UPGRADE_PLUGIN_PERMISSION_ID() view returns (bytes32)",
      "function approve(uint256 _proposalId)",
      "function canApprove(uint256 _proposalId, address _account) view returns (bool)",
      "function canExecute(uint256 _proposalId) view returns (bool)",
      "function createProposal(bytes _encryptedPayloadURI, bytes32 _publicMetadataUriHash, bytes32 _destinationActionsHash, address _destinationPlugin, bool _approveProposal) returns (uint256 proposalId)",
      "function dao() view returns (address)",
      "function execute(uint256 _proposalId, bytes _metadataUri, tuple(address to, uint256 value, bytes data)[] _actions)",
      "function getProposal(uint256 _proposalId) view returns (bool executed, uint16 approvals, tuple(uint16 minApprovals, uint64 snapshotBlock, uint64 expirationDate) parameters, bytes encryptedPayloadURI, bytes32 publicMetadataUriHash, bytes32 destinationActionsHash, address destinationPlugin)",
      "function hasApproved(uint256 _proposalId, address _account) view returns (bool)",
      "function hashActions(tuple(address to, uint256 value, bytes data)[] _actions) pure returns (bytes32 actionsHash)",
      "function implementation() view returns (address)",
      "function initialize(address _dao, tuple(bool onlyListed, uint16 minApprovals, address signerList, uint32 proposalExpirationPeriod) _multisigSettings)",
      "function lastMultisigSettingsChange() view returns (uint64)",
      "function multisigSettings() view returns (bool onlyListed, uint16 minApprovals, address signerList, uint32 proposalExpirationPeriod)",
      "function pluginType() pure returns (uint8)",
      "function proposalCount() view returns (uint256)",
      "function proxiableUUID() view returns (bytes32)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function updateMultisigSettings(tuple(bool onlyListed, uint16 minApprovals, address signerList, uint32 proposalExpirationPeriod) _multisigSettings)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x47bB416ee947fE4a4b655011aF7d6E3A1B80E6e9": [
      "constructor(address es256Verifier)",
      "function verifyES256Signature(bytes tbs, bytes signature, bytes publicKey) view returns (bool sigValid)"
    ],
    "0x497B13f9192B09244de9b5F0964830969FB26F07": [
      "constructor(address _wrapper, address _verifier, address _bondToken, address _signalService)",
      "error ACCESS_DENIED()",
      "error AnchorBlockIdSmallerThanParent()",
      "error AnchorBlockIdTooLarge()",
      "error AnchorBlockIdTooSmall()",
      "error ArraySizesMismatch()",
      "error BatchNotFound()",
      "error BatchVerified()",
      "error BeyondCurrentFork()",
      "error BlobNotFound()",
      "error BlobNotSpecified()",
      "error BlockNotFound()",
      "error ContractPaused()",
      "error CustomProposerMissing()",
      "error CustomProposerNotAllowed()",
      "error ETH_TRANSFER_FAILED()",
      "error EtherNotPaidAsBond()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error FirstBlockTimeShiftNotZero()",
      "error ForkNotActivated()",
      "error INVALID_PAUSE_STATUS()",
      "error InsufficientBond()",
      "error InvalidBlobCreatedIn()",
      "error InvalidBlobParams()",
      "error InvalidGenesisBlockHash()",
      "error InvalidParams()",
      "error InvalidTransitionBlockHash()",
      "error InvalidTransitionParentHash()",
      "error InvalidTransitionStateRoot()",
      "error MetaHashMismatch()",
      "error MsgValueNotZero()",
      "error NoBlocksToProve()",
      "error NotFirstProposal()",
      "error NotInboxWrapper()",
      "error ParentMetaHashMismatch()",
      "error REENTRANT_CALL()",
      "error RESOLVER_NOT_FOUND()",
      "error SameTransition()",
      "error SignalNotSent()",
      "error TimestampSmallerThanParent()",
      "error TimestampTooLarge()",
      "error TimestampTooSmall()",
      "error TooManyBatches()",
      "error TooManyBlocks()",
      "error TooManySignals()",
      "error TransitionNotFound()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "error ZeroAnchorBlockHash()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BatchProposed(tuple(bytes32 txsHash, tuple(uint16 numTransactions, uint8 timeShift, bytes32[] signalSlots)[] blocks, bytes32[] blobHashes, bytes32 extraData, address coinbase, uint64 proposedIn, uint64 blobCreatedIn, uint32 blobByteOffset, uint32 blobByteSize, uint32 gasLimit, uint64 lastBlockId, uint64 lastBlockTimestamp, uint64 anchorBlockId, bytes32 anchorBlockHash, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig) info, tuple(bytes32 infoHash, address proposer, uint64 batchId, uint64 proposedAt) meta, bytes txList)",
      "event BatchesProved(address verifier, uint64[] batchIds, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot)[] transitions)",
      "event BatchesVerified(uint64 batchId, bytes32 blockHash)",
      "event BeaconUpgraded(address indexed beacon)",
      "event BondCredited(address indexed user, uint256 amount)",
      "event BondDebited(address indexed user, uint256 amount)",
      "event BondDeposited(address indexed user, uint256 amount)",
      "event BondWithdrawn(address indexed user, uint256 amount)",
      "event ConflictingProof(uint64 batchId, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot, address prover, bool inProvingWindow, uint48 createdAt) oldTran, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot) newTran)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Stats1Updated(tuple(uint64 genesisHeight, uint64 __reserved2, uint64 lastSyncedBatchId, uint64 lastSyncedAt) stats1)",
      "event Stats2Updated(tuple(uint64 numBatches, uint64 lastVerifiedBatchId, bool paused, uint56 lastProposedIn, uint64 lastUnpausedAt) stats2)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function bondBalanceOf(address _user) view returns (uint256)",
      "function bondToken() view returns (address)",
      "function depositBond(uint256 _amount) payable",
      "function getBatch(uint64 _batchId) view returns (tuple(bytes32 metaHash, uint64 lastBlockId, uint96 reserved3, uint96 livenessBond, uint64 batchId, uint64 lastBlockTimestamp, uint64 anchorBlockId, uint24 nextTransitionId, uint8 reserved4, uint24 verifiedTransitionId) batch_)",
      "function getBatchVerifyingTransition(uint64 _batchId) view returns (tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot, address prover, bool inProvingWindow, uint48 createdAt) ts_)",
      "function getLastSyncedTransition() view returns (uint64 batchId_, uint64 blockId_, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot, address prover, bool inProvingWindow, uint48 createdAt) ts_)",
      "function getLastVerifiedTransition() view returns (uint64 batchId_, uint64 blockId_, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot, address prover, bool inProvingWindow, uint48 createdAt) ts_)",
      "function getStats1() view returns (tuple(uint64 genesisHeight, uint64 __reserved2, uint64 lastSyncedBatchId, uint64 lastSyncedAt))",
      "function getStats2() view returns (tuple(uint64 numBatches, uint64 lastVerifiedBatchId, bool paused, uint56 lastProposedIn, uint64 lastUnpausedAt))",
      "function getTransitionById(uint64 _batchId, uint24 _tid) view returns (tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot, address prover, bool inProvingWindow, uint48 createdAt))",
      "function getTransitionByParentHash(uint64 _batchId, bytes32 _parentHash) view returns (tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot, address prover, bool inProvingWindow, uint48 createdAt))",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function inboxWrapper() view returns (address)",
      "function init(address _owner, bytes32 _genesisBlockHash)",
      "function isOnL1() pure returns (bool)",
      "function owner() view returns (address)",
      "function pacayaConfig() pure returns (tuple(uint64 chainId, uint64 maxUnverifiedBatches, uint64 batchRingBufferSize, uint64 maxBatchesToVerify, uint32 blockMaxGasLimit, uint96 livenessBondBase, uint96 livenessBondPerBlock, uint8 stateRootSyncInternal, uint64 maxAnchorHeightOffset, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig, uint16 provingWindow, uint24 cooldownWindow, uint8 maxSignalsToReceive, uint16 maxBlocksPerBatch, tuple(uint64 ontake, uint64 pacaya, uint64 shasta, uint64 unzen) forkHeights))",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proposeBatch(bytes _params, bytes _txList) returns (tuple(bytes32 txsHash, tuple(uint16 numTransactions, uint8 timeShift, bytes32[] signalSlots)[] blocks, bytes32[] blobHashes, bytes32 extraData, address coinbase, uint64 proposedIn, uint64 blobCreatedIn, uint32 blobByteOffset, uint32 blobByteSize, uint32 gasLimit, uint64 lastBlockId, uint64 lastBlockTimestamp, uint64 anchorBlockId, bytes32 anchorBlockHash, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig) info_, tuple(bytes32 infoHash, address proposer, uint64 batchId, uint64 proposedAt) meta_)",
      "function proveBatches(bytes _params, bytes _proof)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function signalService() view returns (address)",
      "function state() view returns (bytes32 __reserve1, tuple(uint64 genesisHeight, uint64 __reserved2, uint64 lastSyncedBatchId, uint64 lastSyncedAt) stats1, tuple(uint64 numBatches, uint64 lastVerifiedBatchId, bool paused, uint56 lastProposedIn, uint64 lastUnpausedAt) stats2)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function verifier() view returns (address)",
      "function verifyBatches(uint64 _length)",
      "function withdrawBond(uint256 _amount)"
    ],
    "0x4e030b19135869F6fd926614754B7F9c184E2B83": [
      "constructor(address _oldFork, address _newFork)",
      "error InvalidParams()",
      "error ZeroForkAddress()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function newFork() view returns (address)",
      "function oldFork() view returns (address)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function shouldRouteToOldFork(bytes4 _selector) pure returns (bool)",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x52Af16664155608b845BE18aa29620EbF6eA2D3a": [
      "constructor()",
      "error ActionFailed(uint256 index)",
      "error AnyAddressDisallowedForWhoAndWhere()",
      "error ConditionInterfacNotSupported(address condition)",
      "error ConditionNotAContract(address condition)",
      "error GrantWithConditionNotSupported()",
      "error InsufficientGas()",
      "error NativeTokenDepositAmountMismatch(uint256 expected, uint256 actual)",
      "error PermissionAlreadyGrantedForDifferentCondition(address where, address who, bytes32 permissionId, address currentCondition, address newCondition)",
      "error PermissionsForAnyAddressDisallowed()",
      "error ProtocolVersionUpgradeNotSupported(uint8[3] protocolVersion)",
      "error ReentrantCall()",
      "error TooManyActions()",
      "error Unauthorized(address where, address who, bytes32 permissionId)",
      "error UnkownCallback(bytes4 callbackSelector, bytes4 magicNumber)",
      "error ZeroAmount()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event CallbackReceived(address sender, bytes4 indexed sig, bytes data)",
      "event Deposited(address indexed sender, address indexed token, uint256 amount, string _reference)",
      "event Executed(address indexed actor, bytes32 callId, tuple(address to, uint256 value, bytes data)[] actions, uint256 allowFailureMap, uint256 failureMap, bytes[] execResults)",
      "event Granted(bytes32 indexed permissionId, address indexed here, address where, address indexed who, address condition)",
      "event Initialized(uint8 version)",
      "event MetadataSet(bytes metadata)",
      "event NativeTokenDeposited(address sender, uint256 amount)",
      "event NewURI(string daoURI)",
      "event Revoked(bytes32 indexed permissionId, address indexed here, address where, address indexed who)",
      "event SignatureValidatorSet(address signatureValidator)",
      "event StandardCallbackRegistered(bytes4 interfaceId, bytes4 callbackSelector, bytes4 magicNumber)",
      "event TrustedForwarderSet(address forwarder)",
      "event Upgraded(address indexed implementation)",
      "function EXECUTE_PERMISSION_ID() view returns (bytes32)",
      "function REGISTER_STANDARD_CALLBACK_PERMISSION_ID() view returns (bytes32)",
      "function ROOT_PERMISSION_ID() view returns (bytes32)",
      "function SET_METADATA_PERMISSION_ID() view returns (bytes32)",
      "function SET_SIGNATURE_VALIDATOR_PERMISSION_ID() view returns (bytes32)",
      "function SET_TRUSTED_FORWARDER_PERMISSION_ID() view returns (bytes32)",
      "function UPGRADE_DAO_PERMISSION_ID() view returns (bytes32)",
      "function applyMultiTargetPermissions(tuple(uint8 operation, address where, address who, address condition, bytes32 permissionId)[] _items)",
      "function applySingleTargetPermissions(address _where, tuple(uint8 operation, address who, bytes32 permissionId)[] items)",
      "function daoURI() view returns (string)",
      "function deposit(address _token, uint256 _amount, string _reference) payable",
      "function execute(bytes32 _callId, tuple(address to, uint256 value, bytes data)[] _actions, uint256 _allowFailureMap) returns (bytes[] execResults, uint256 failureMap)",
      "function getTrustedForwarder() view returns (address)",
      "function grant(address _where, address _who, bytes32 _permissionId)",
      "function grantWithCondition(address _where, address _who, bytes32 _permissionId, address _condition)",
      "function hasPermission(address _where, address _who, bytes32 _permissionId, bytes _data) view returns (bool)",
      "function initialize(bytes _metadata, address _initialOwner, address _trustedForwarder, string daoURI_)",
      "function initializeFrom(uint8[3] _previousProtocolVersion, bytes _initData)",
      "function isGranted(address _where, address _who, bytes32 _permissionId, bytes _data) view returns (bool)",
      "function isValidSignature(bytes32 _hash, bytes _signature) view returns (bytes4)",
      "function protocolVersion() pure returns (uint8[3])",
      "function proxiableUUID() view returns (bytes32)",
      "function registerStandardCallback(bytes4 _interfaceId, bytes4 _callbackSelector, bytes4 _magicNumber)",
      "function revoke(address _where, address _who, bytes32 _permissionId)",
      "function setDaoURI(string newDaoURI)",
      "function setMetadata(bytes _metadata)",
      "function setSignatureValidator(address _signatureValidator)",
      "function setTrustedForwarder(address _newTrustedForwarder)",
      "function signatureValidator() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x5353c607e6eca6C63FEC5c6C0F5CC3a5348d5c95": [
      "constructor(address _singleton)"
    ],
    "0x584fE70fE82F728f0Fe26488857D623f3B59E070": [
      "constructor()",
      "error DaoUnauthorized(address dao, address where, address who, bytes32 permissionId)",
      "error InvalidAddresslistUpdate(address member)",
      "error InvalidEncryptionRegistry(address givenAddress)",
      "error SignerListLengthOutOfBounds(uint16 limit, uint256 actual)",
      "event Initialized(uint8 version)",
      "event SignerListSettingsUpdated(address encryptionRegistry, uint16 minSignerListLength)",
      "event SignersAdded(address[] signers)",
      "event SignersRemoved(address[] signers)",
      "function addSigners(address[] _signers)",
      "function addresslistLength() view returns (uint256)",
      "function addresslistLengthAtBlock(uint256 _blockNumber) view returns (uint256)",
      "function dao() view returns (address)",
      "function getEncryptionAgents() view returns (address[] result)",
      "function getListedEncryptionOwnerAtBlock(address _address, uint256 _blockNumber) view returns (address _owner)",
      "function initialize(address _dao, address[] _signers)",
      "function isListed(address _account) view returns (bool)",
      "function isListedAtBlock(address _account, uint256 _blockNumber) view returns (bool)",
      "function isListedOrAppointedByListed(address _address) view returns (bool listedOrAppointedByListed)",
      "function removeSigners(address[] _signers)",
      "function resolveEncryptionAccountAtBlock(address _address, uint256 _blockNumber) view returns (address _owner, address _agent)",
      "function settings() view returns (address encryptionRegistry, uint16 minSignerListLength)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function updateSettings(tuple(address encryptionRegistry, uint16 minSignerListLength) _newSettings)"
    ],
    "0x5A982Fb1818c22744f5d7D36D0C4c9f61937b33a": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x5B0Da2FB08754a5dDf32e28887D2F5437485f085": [
      "constructor()",
      "error DaoUnauthorized(address dao, address where, address who, bytes32 permissionId)",
      "error DurationOutOfBounds(uint64 limit, uint64 actual)",
      "error EmptyAddress()",
      "error MinDurationOutOfBounds(uint64 limit, uint64 actual)",
      "error NoVotingPower()",
      "error ProposalExecutionForbidden(uint256 proposalId)",
      "error ProposalVetoingForbidden(uint256 proposalId, address account)",
      "error RatioOutOfBounds(uint256 limit, uint256 actual)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event MembersAdded(address[] members)",
      "event MembersRemoved(address[] members)",
      "event MembershipContractAnnounced(address indexed definingContract)",
      "event OptimisticGovernanceSettingsUpdated(uint32 minVetoRatio, uint64 minDuration, uint64 l2AggregationGracePeriod, uint64 l2InactivityPeriod, bool skipL2)",
      "event ProposalCreated(uint256 indexed proposalId, address indexed creator, uint64 startDate, uint64 endDate, bytes metadata, tuple(address to, uint256 value, bytes data)[] actions, uint256 allowFailureMap)",
      "event ProposalExecuted(uint256 indexed proposalId)",
      "event Upgraded(address indexed implementation)",
      "event VetoCast(uint256 indexed proposalId, address indexed voter, uint256 votingPower)",
      "function PROPOSER_PERMISSION_ID() view returns (bytes32)",
      "function UPDATE_OPTIMISTIC_GOVERNANCE_SETTINGS_PERMISSION_ID() view returns (bytes32)",
      "function UPGRADE_PLUGIN_PERMISSION_ID() view returns (bytes32)",
      "function bridgedVotingPower(uint256 _timestamp) view returns (uint256)",
      "function canExecute(uint256 _proposalId) view returns (bool)",
      "function canVeto(uint256 _proposalId, address _voter) view returns (bool)",
      "function createProposal(bytes _metadata, tuple(address to, uint256 value, bytes data)[] _actions, uint256 _allowFailureMap, uint64 _duration) returns (uint256 proposalId)",
      "function dao() view returns (address)",
      "function effectiveVotingPower(uint256 _timestamp, bool _includeL2VotingPower) view returns (uint256)",
      "function execute(uint256 _proposalId)",
      "function getProposal(uint256 _proposalId) view returns (bool open, bool executed, tuple(uint64 vetoEndDate, uint64 snapshotTimestamp, uint32 minVetoRatio, bool unavailableL2) parameters, uint256 vetoTally, bytes metadataURI, tuple(address to, uint256 value, bytes data)[] actions, uint256 allowFailureMap)",
      "function governanceSettings() view returns (uint32 minVetoRatio, uint32 minDuration, uint32 timelockPeriod, uint32 l2InactivityPeriod, uint32 l2AggregationGracePeriod, bool skipL2)",
      "function hasVetoed(uint256 _proposalId, address _voter) view returns (bool)",
      "function implementation() view returns (address)",
      "function initialize(address _dao, tuple(uint32 minVetoRatio, uint32 minDuration, uint32 timelockPeriod, uint32 l2InactivityPeriod, uint32 l2AggregationGracePeriod, bool skipL2) _governanceSettings, address _token, address _taikoL1, address _taikoBridge)",
      "function isL2Available() view returns (bool)",
      "function isMember(address _account) view returns (bool)",
      "function isMinVetoRatioReached(uint256 _proposalId) view returns (bool)",
      "function minVetoRatio() view returns (uint32)",
      "function parseProposalId(uint256 _proposalId) pure returns (uint256 counter, uint64 startDate, uint64 endDate)",
      "function pluginType() pure returns (uint8)",
      "function proposalCount() view returns (uint256)",
      "function proposalIds(uint256) view returns (uint256)",
      "function proxiableUUID() view returns (bytes32)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function taikoBridge() view returns (address)",
      "function taikoL1() view returns (address)",
      "function totalVotingPower(uint256 _timestamp) view returns (uint256)",
      "function updateOptimisticGovernanceSettings(tuple(uint32 minVetoRatio, uint32 minDuration, uint32 timelockPeriod, uint32 l2InactivityPeriod, uint32 l2AggregationGracePeriod, bool skipL2) _governanceSettings)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function veto(uint256 _proposalId)",
      "function votingToken() view returns (address)"
    ],
    "0x5C96Ff5B7F61b9E3436Ef04DA1377C8388dfC106": [
      "constructor()",
      "error ACCESS_DENIED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error TT_INVALID_PARAM()",
      "error TT_NON_VOTING_ACCOUNT()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BeaconUpgraded(address indexed beacon)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function CLOCK_MODE() pure returns (string)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function TAIKO_DAO_CONTROLLER() view returns (address)",
      "function TAIKO_ERC20_VAULT() view returns (address)",
      "function TAIKO_FOUNDATION_TREASURY() view returns (address)",
      "function acceptOwnership()",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function checkpoints(address account, uint32 pos) view returns (tuple(uint32 fromBlock, uint224 votes))",
      "function clock() view returns (uint48)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function delegate(address _account)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address account) view returns (address)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function getNonVotingAccounts() pure returns (address[] accounts_)",
      "function getPastTotalSupply(uint256 _timepoint) view returns (uint256)",
      "function getPastVotes(address _account, uint256 _timepoint) view returns (uint256)",
      "function getVotes(address account) view returns (uint256)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function init(address _owner, address _recipient)",
      "function init2()",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function numCheckpoints(address account) view returns (uint32)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function symbol() pure returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x5e46443bd131eB6d4c6Fb4849bAD29af9596dd72": [
      "constructor()",
      "error ACCESS_DENIED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error RESOLVER_NOT_FOUND()",
      "error V3PARSER_INVALID_CERTIFICATION_CHAIN_DATA()",
      "error V3PARSER_INVALID_CERTIFICATION_CHAIN_SIZE()",
      "error V3PARSER_INVALID_ECDSA_SIGNATURE()",
      "error V3PARSER_INVALID_QEAUTHDATA_SIZE()",
      "error V3PARSER_INVALID_QEREPORT_LENGTN()",
      "error V3PARSER_INVALID_QUOTE_LENGTN()",
      "error V3PARSER_INVALID_QUOTE_MEMBER_LENGTN()",
      "error V3PARSER_UNSUPPORT_CERTIFICATION_TYPE()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event LocalReportCheckToggled(bool checkLocalEnclaveReport)",
      "event MrEnclaveUpdated(bytes32 indexed mrEnclave, bool trusted)",
      "event MrSignerUpdated(bytes32 indexed mrSigner, bool trusted)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event QeIdentityConfigured(tuple(bytes4 miscselect, bytes4 miscselectMask, uint16 isvprodid, bytes16 attributes, bytes16 attributesMask, bytes32 mrsigner, tuple(tuple(uint16 isvsvn) tcb, uint8 tcbStatus)[] tcbLevels) qeIdentityInput)",
      "event RevokedCertSerialNumAdded(uint256 indexed index, bytes serialNum)",
      "event RevokedCertSerialNumRemoved(uint256 indexed index, bytes serialNum)",
      "event TcbInfoJsonConfigured(string indexed fmspc, tuple(string pceid, string fmspc, tuple(uint256 pcesvn, uint8[] sgxTcbCompSvnArr, uint8 status)[] tcbLevels) tcbInfoInput)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function addRevokedCertSerialNum(uint256 index, bytes[] serialNumBatch)",
      "function checkLocalEnclaveReport() view returns (bool)",
      "function configureQeIdentityJson(tuple(bytes4 miscselect, bytes4 miscselectMask, uint16 isvprodid, bytes16 attributes, bytes16 attributesMask, bytes32 mrsigner, tuple(tuple(uint16 isvsvn) tcb, uint8 tcbStatus)[] tcbLevels) qeIdentityInput)",
      "function configureTcbInfoJson(string fmspc, tuple(string pceid, string fmspc, tuple(uint256 pcesvn, uint8[] sgxTcbCompSvnArr, uint8 status)[] tcbLevels) tcbInfoInput)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address owner, address sigVerifyLibAddr, address pemCertLibAddr)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pemCertLib() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function qeIdentity() view returns (bytes4 miscselect, bytes4 miscselectMask, uint16 isvprodid, bytes16 attributes, bytes16 attributesMask, bytes32 mrsigner)",
      "function removeRevokedCertSerialNum(uint256 index, bytes[] serialNumBatch)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function serialNumIsRevoked(uint256 idx, bytes serialNum) view returns (bool revoked)",
      "function setMrEnclave(bytes32 _mrEnclave, bool _trusted)",
      "function setMrSigner(bytes32 _mrSigner, bool _trusted)",
      "function sigVerifyLib() view returns (address)",
      "function tcbInfo(string fmspc) view returns (string pceid, string fmspc)",
      "function toggleLocalReportCheck()",
      "function transferOwnership(address newOwner)",
      "function trustedUserMrEnclave(bytes32 enclave) view returns (bool trusted)",
      "function trustedUserMrSigner(bytes32 signer) view returns (bool trusted)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function verifyAttestation(bytes data) view returns (bool success)",
      "function verifyParsedQuote(tuple(tuple(bytes2 version, bytes2 attestationKeyType, bytes4 teeType, bytes2 qeSvn, bytes2 pceSvn, bytes16 qeVendorId, bytes20 userData) header, tuple(bytes16 cpuSvn, bytes4 miscSelect, bytes28 reserved1, bytes16 attributes, bytes32 mrEnclave, bytes32 reserved2, bytes32 mrSigner, bytes reserved3, uint16 isvProdId, uint16 isvSvn, bytes reserved4, bytes reportData) localEnclaveReport, tuple(bytes ecdsa256BitSignature, bytes ecdsaAttestationKey, tuple(bytes16 cpuSvn, bytes4 miscSelect, bytes28 reserved1, bytes16 attributes, bytes32 mrEnclave, bytes32 reserved2, bytes32 mrSigner, bytes reserved3, uint16 isvProdId, uint16 isvSvn, bytes reserved4, bytes reportData) pckSignedQeReport, bytes qeReportSignature, tuple(uint16 parsedDataSize, bytes data) qeAuthData, tuple(uint16 certType, uint32 certDataSize, bytes[3] decodedCertDataArray) certification) v3AuthData) v3quote) view returns (bool, bytes)"
    ],
    "0x5f73f0AdC7dAA6134Fe751C4a78d524f9384e0B5": [
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error RESOLVER_DENIED()",
      "error RESOLVER_INVALID_MANAGER()",
      "error RESOLVER_UNEXPECTED_CHAINID()",
      "error RESOLVER_ZERO_ADDR(uint64 chainId, bytes32 name)",
      "error V3PARSER_INVALID_CERTIFICATION_CHAIN_DATA()",
      "error V3PARSER_INVALID_CERTIFICATION_CHAIN_SIZE()",
      "error V3PARSER_INVALID_ECDSA_SIGNATURE()",
      "error V3PARSER_INVALID_QEAUTHDATA_SIZE()",
      "error V3PARSER_INVALID_QEREPORT_LENGTN()",
      "error V3PARSER_INVALID_QUOTE_LENGTN()",
      "error V3PARSER_INVALID_QUOTE_MEMBER_LENGTN()",
      "error V3PARSER_UNSUPPORT_CERTIFICATION_TYPE()",
      "error ZERO_ADDR_MANAGER()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event LocalReportCheckToggled(bool checkLocalEnclaveReport)",
      "event MrEnclaveUpdated(bytes32 indexed mrEnclave, bool trusted)",
      "event MrSignerUpdated(bytes32 indexed mrSigner, bool trusted)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event QeIdentityConfigured(tuple(bytes4 miscselect, bytes4 miscselectMask, uint16 isvprodid, bytes16 attributes, bytes16 attributesMask, bytes32 mrsigner, tuple(tuple(uint16 isvsvn) tcb, uint8 tcbStatus)[] tcbLevels) qeIdentityInput)",
      "event RevokedCertSerialNumAdded(uint256 indexed index, bytes serialNum)",
      "event RevokedCertSerialNumRemoved(uint256 indexed index, bytes serialNum)",
      "event TcbInfoJsonConfigured(string indexed fmspc, tuple(string pceid, string fmspc, tuple(uint256 pcesvn, uint8[] sgxTcbCompSvnArr, uint8 status)[] tcbLevels) tcbInfoInput)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function addRevokedCertSerialNum(uint256 index, bytes[] serialNumBatch)",
      "function addressManager() view returns (address)",
      "function checkLocalEnclaveReport() view returns (bool)",
      "function configureQeIdentityJson(tuple(bytes4 miscselect, bytes4 miscselectMask, uint16 isvprodid, bytes16 attributes, bytes16 attributesMask, bytes32 mrsigner, tuple(tuple(uint16 isvsvn) tcb, uint8 tcbStatus)[] tcbLevels) qeIdentityInput)",
      "function configureTcbInfoJson(string fmspc, tuple(string pceid, string fmspc, tuple(uint256 pcesvn, uint8[] sgxTcbCompSvnArr, uint8 status)[] tcbLevels) tcbInfoInput)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address owner, address sigVerifyLibAddr, address pemCertLibAddr)",
      "function lastUnpausedAt() view returns (uint64)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pemCertLib() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function qeIdentity() view returns (bytes4 miscselect, bytes4 miscselectMask, uint16 isvprodid, bytes16 attributes, bytes16 attributesMask, bytes32 mrsigner)",
      "function removeRevokedCertSerialNum(uint256 index, bytes[] serialNumBatch)",
      "function renounceOwnership()",
      "function resolve(uint64 _chainId, bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function serialNumIsRevoked(uint256 idx, bytes serialNum) view returns (bool revoked)",
      "function setMrEnclave(bytes32 _mrEnclave, bool _trusted)",
      "function setMrSigner(bytes32 _mrSigner, bool _trusted)",
      "function sigVerifyLib() view returns (address)",
      "function tcbInfo(string fmspc) view returns (string pceid, string fmspc)",
      "function toggleLocalReportCheck()",
      "function transferOwnership(address newOwner)",
      "function trustedUserMrEnclave(bytes32 enclave) view returns (bool trusted)",
      "function trustedUserMrSigner(bytes32 signer) view returns (bool trusted)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function verifyAttestation(bytes data) view returns (bool success)",
      "function verifyParsedQuote(tuple(tuple(bytes2 version, bytes2 attestationKeyType, bytes4 teeType, bytes2 qeSvn, bytes2 pceSvn, bytes16 qeVendorId, bytes20 userData) header, tuple(bytes16 cpuSvn, bytes4 miscSelect, bytes28 reserved1, bytes16 attributes, bytes32 mrEnclave, bytes32 reserved2, bytes32 mrSigner, bytes reserved3, uint16 isvProdId, uint16 isvSvn, bytes reserved4, bytes reportData) localEnclaveReport, tuple(bytes ecdsa256BitSignature, bytes ecdsaAttestationKey, tuple(bytes16 cpuSvn, bytes4 miscSelect, bytes28 reserved1, bytes16 attributes, bytes32 mrEnclave, bytes32 reserved2, bytes32 mrSigner, bytes reserved3, uint16 isvProdId, uint16 isvSvn, bytes reserved4, bytes reportData) pckSignedQeReport, bytes qeReportSignature, tuple(uint16 parsedDataSize, bytes data) qeAuthData, tuple(uint16 certType, uint32 certDataSize, bytes[3] decodedCertDataArray) certification) v3AuthData) v3quote) view returns (bool, bytes)"
    ],
    "0x68d30f47F19c07bCCEf4Ac7FAE2Dc12FCa3e0dC9": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x73Ee496dA20e5C65340c040B0D8c3C891C1f74AE": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x75Ba76403b13b26AD1beC70D6eE937314eeaCD0a": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x7e6409e9b6c5e2064064a6cC994f9a2e95680782": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x8510d389236d7213eE9B9C38CAaBc0aD24853C25": [
      "constructor()",
      "error ApprovalCastForbidden(uint256 proposalId, address sender)",
      "error DaoUnauthorized(address dao, address where, address who, bytes32 permissionId)",
      "error InvalidSignerList(address signerList)",
      "error MinApprovalsOutOfBounds(uint16 limit, uint16 actual)",
      "error ProposalCreationForbidden(address sender)",
      "error ProposalExecutionForbidden(uint256 proposalId)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Approved(uint256 indexed proposalId, address indexed approver)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Executed(uint256 indexed proposalId)",
      "event Initialized(uint8 version)",
      "event MultisigSettingsUpdated(bool onlyListed, uint16 indexed minApprovals, uint32 destinationProposalDuration, address signerList, uint32 proposalExpirationPeriod)",
      "event ProposalCreated(uint256 indexed proposalId, address indexed creator, uint64 startDate, uint64 endDate, bytes metadata, tuple(address to, uint256 value, bytes data)[] actions, uint256 allowFailureMap)",
      "event ProposalExecuted(uint256 indexed proposalId)",
      "event Upgraded(address indexed implementation)",
      "function UPDATE_MULTISIG_SETTINGS_PERMISSION_ID() view returns (bytes32)",
      "function UPGRADE_PLUGIN_PERMISSION_ID() view returns (bytes32)",
      "function approve(uint256 _proposalId, bool _tryExecution)",
      "function canApprove(uint256 _proposalId, address _account) view returns (bool)",
      "function canExecute(uint256 _proposalId) view returns (bool)",
      "function createProposal(bytes _metadataURI, tuple(address to, uint256 value, bytes data)[] _destinationActions, address _destinationPlugin, bool _approveProposal) returns (uint256 proposalId)",
      "function dao() view returns (address)",
      "function execute(uint256 _proposalId)",
      "function getProposal(uint256 _proposalId) view returns (bool executed, uint16 approvals, tuple(uint16 minApprovals, uint64 snapshotBlock, uint64 expirationDate) parameters, bytes metadataURI, tuple(address to, uint256 value, bytes data)[] destinationActions, address destinationPlugin)",
      "function hasApproved(uint256 _proposalId, address _account) view returns (bool)",
      "function implementation() view returns (address)",
      "function initialize(address _dao, tuple(bool onlyListed, uint16 minApprovals, uint32 destinationProposalDuration, address signerList, uint32 proposalExpirationPeriod) _multisigSettings)",
      "function lastMultisigSettingsChange() view returns (uint64)",
      "function multisigSettings() view returns (bool onlyListed, uint16 minApprovals, uint32 destinationProposalDuration, address signerList, uint32 proposalExpirationPeriod)",
      "function pluginType() pure returns (uint8)",
      "function proposalCount() view returns (uint256)",
      "function proxiableUUID() view returns (bytes32)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function updateMultisigSettings(tuple(bool onlyListed, uint16 minApprovals, uint32 destinationProposalDuration, address signerList, uint32 proposalExpirationPeriod) _multisigSettings)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8ADDcf5d4CD7BD9dA1CE62eF84AeE22c9E2BfbA5": [
      "constructor(uint64 _taikoChainId, address _taikoInbox, address _taikoProofVerifier, address _automataDcapAttestation)",
      "error ACCESS_DENIED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error RESOLVER_NOT_FOUND()",
      "error SGX_ALREADY_ATTESTED()",
      "error SGX_INVALID_ATTESTATION()",
      "error SGX_INVALID_INSTANCE()",
      "error SGX_INVALID_PROOF()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event InstanceAdded(uint256 indexed id, address indexed instance, address indexed replaced, uint256 validSince)",
      "event InstanceDeleted(uint256 indexed id, address indexed instance)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function INSTANCE_EXPIRY() view returns (uint64)",
      "function INSTANCE_VALIDITY_DELAY() view returns (uint64)",
      "function acceptOwnership()",
      "function addInstances(address[] _instances) returns (uint256[])",
      "function addressRegistered(address instanceAddress) view returns (bool alreadyAttested)",
      "function automataDcapAttestation() view returns (address)",
      "function deleteInstances(uint256[] _ids)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner)",
      "function instances(uint256 instanceId) view returns (address addr, uint64 validSince)",
      "function nextInstanceId() view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function registerInstance(tuple(tuple(bytes2 version, bytes2 attestationKeyType, bytes4 teeType, bytes2 qeSvn, bytes2 pceSvn, bytes16 qeVendorId, bytes20 userData) header, tuple(bytes16 cpuSvn, bytes4 miscSelect, bytes28 reserved1, bytes16 attributes, bytes32 mrEnclave, bytes32 reserved2, bytes32 mrSigner, bytes reserved3, uint16 isvProdId, uint16 isvSvn, bytes reserved4, bytes reportData) localEnclaveReport, tuple(bytes ecdsa256BitSignature, bytes ecdsaAttestationKey, tuple(bytes16 cpuSvn, bytes4 miscSelect, bytes28 reserved1, bytes16 attributes, bytes32 mrEnclave, bytes32 reserved2, bytes32 mrSigner, bytes reserved3, uint16 isvProdId, uint16 isvSvn, bytes reserved4, bytes reportData) pckSignedQeReport, bytes qeReportSignature, tuple(uint16 parsedDataSize, bytes data) qeAuthData, tuple(uint16 certType, uint32 certDataSize, bytes[3] decodedCertDataArray) certification) v3AuthData) _attestation) returns (uint256)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function taikoChainId() view returns (uint64)",
      "function taikoInbox() view returns (address)",
      "function taikoProofVerifier() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function verifyProof(tuple(uint64 batchId, bytes32 metaHash, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot) transition)[] _ctxs, bytes _proof)"
    ],
    "0x8C520BB75590deaBC30c4fcaFD8778A43E5481b9": [
      "constructor(address _taikoInbox, address _sgxGethVerifier, address _sgxRethVerifier, address _risc0RethVerifier, address _sp1RethVerifier)",
      "error ACCESS_DENIED()",
      "error CV_INVALID_SUB_VERIFIER()",
      "error CV_INVALID_SUB_VERIFIER_ORDER()",
      "error CV_VERIFIERS_INSUFFICIENT()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error InvalidVerifier()",
      "error REENTRANT_CALL()",
      "error RESOLVER_NOT_FOUND()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner)",
      "function opVerifier() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function risc0RethVerifier() view returns (address)",
      "function sgxGethVerifier() view returns (address)",
      "function sgxRethVerifier() view returns (address)",
      "function sp1RethVerifier() view returns (address)",
      "function taikoInbox() view returns (address)",
      "function tdxGethVerifier() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function verifyProof(tuple(uint64 batchId, bytes32 metaHash, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot) transition)[] _ctxs, bytes _proof)"
    ],
    "0x8d7C954960a36a7596d7eA4945dDf891967ca8A3": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x8Efa01564425692d0a0838DC10E300BD310Cb43e": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x904Da4C5bD76f932fE09fF32Ae5D7E3d2A5D2264": [
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error L1_BLOB_NOT_AVAILABLE()",
      "error L1_BLOB_NOT_FOUND()",
      "error L1_BLOCK_MISMATCH()",
      "error L1_ETH_NOT_PAID_AS_BOND()",
      "error L1_FORK_HEIGHT_ERROR()",
      "error L1_FORK_HEIGHT_ERROR()",
      "error L1_INVALID_ANCHOR_BLOCK()",
      "error L1_INVALID_BLOCK_ID()",
      "error L1_INVALID_CUSTOM_PROPOSER()",
      "error L1_INVALID_MSG_VALUE()",
      "error L1_INVALID_PARAMS()",
      "error L1_INVALID_PROPOSER()",
      "error L1_INVALID_TIMESTAMP()",
      "error L1_PROVING_PAUSED()",
      "error L1_TOO_MANY_BLOCKS()",
      "error L1_TRANSITION_ID_ZERO()",
      "error L1_TRANSITION_NOT_FOUND()",
      "error L1_UNEXPECTED_PARENT()",
      "error L1_UNEXPECTED_TRANSITION_ID()",
      "error REENTRANT_CALL()",
      "error RESOLVER_DENIED()",
      "error RESOLVER_INVALID_MANAGER()",
      "error RESOLVER_UNEXPECTED_CHAINID()",
      "error RESOLVER_ZERO_ADDR(uint64 chainId, bytes32 name)",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event BlockProposed(uint256 indexed blockId, address indexed assignedProver, uint96 livenessBond, tuple(bytes32 l1Hash, bytes32 difficulty, bytes32 blobHash, bytes32 extraData, bytes32 depositsHash, address coinbase, uint64 id, uint32 gasLimit, uint64 timestamp, uint64 l1Height, uint16 minTier, bool blobUsed, bytes32 parentMetaHash, address sender) meta, tuple(address recipient, uint96 amount, uint64 id)[] depositsProcessed)",
      "event BlockProposedV2(uint256 indexed blockId, tuple(bytes32 anchorBlockHash, bytes32 difficulty, bytes32 blobHash, bytes32 extraData, address coinbase, uint64 id, uint32 gasLimit, uint64 timestamp, uint64 anchorBlockId, uint16 minTier, bool blobUsed, bytes32 parentMetaHash, address proposer, uint96 livenessBond, uint64 proposedAt, uint64 proposedIn, uint32 blobTxListOffset, uint32 blobTxListLength, uint8 blobIndex, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig) meta)",
      "event BlockProposedV2(uint256 indexed blockId, tuple(bytes32 anchorBlockHash, bytes32 difficulty, bytes32 blobHash, bytes32 extraData, address coinbase, uint64 id, uint32 gasLimit, uint64 timestamp, uint64 anchorBlockId, uint16 minTier, bool blobUsed, bytes32 parentMetaHash, address proposer, uint96 livenessBond, uint64 proposedAt, uint64 proposedIn, uint32 blobTxListOffset, uint32 blobTxListLength, uint8 blobIndex, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig) meta)",
      "event BlockVerified(uint256 indexed blockId, address indexed prover, bytes32 blockHash, bytes32 stateRoot, uint16 tier)",
      "event BlockVerifiedV2(uint256 indexed blockId, address indexed prover, bytes32 blockHash, uint16 tier)",
      "event BlockVerifiedV2(uint256 indexed blockId, address indexed prover, bytes32 blockHash, uint16 tier)",
      "event BondCredited(address indexed user, uint256 blockId, uint256 amount)",
      "event BondCredited(address indexed user, uint256 blockId, uint256 amount)",
      "event BondDebited(address indexed user, uint256 blockId, uint256 amount)",
      "event BondDebited(address indexed user, uint256 blockId, uint256 amount)",
      "event BondDeposited(address indexed user, uint256 amount)",
      "event BondDeposited(address indexed user, uint256 amount)",
      "event BondWithdrawn(address indexed user, uint256 amount)",
      "event CalldataTxList(uint256 indexed blockId, bytes txList)",
      "event CalldataTxList(uint256 indexed blockId, bytes txList)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event ProvingPaused(bool paused)",
      "event StateVariablesUpdated(tuple(uint64 numBlocks, uint64 lastVerifiedBlockId, bool provingPaused, uint56 lastProposedIn, uint64 lastUnpausedAt) slotB)",
      "event TransitionContested(uint256 indexed blockId, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot, bytes32 graffiti) tran, address contester, uint96 contestBond, uint16 tier)",
      "event TransitionContestedV2(uint256 indexed blockId, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot, bytes32 graffiti) tran, address contester, uint96 contestBond, uint16 tier, uint64 proposedIn)",
      "event TransitionProved(uint256 indexed blockId, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot, bytes32 graffiti) tran, address prover, uint96 validityBond, uint16 tier)",
      "event TransitionProvedV2(uint256 indexed blockId, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot, bytes32 graffiti) tran, address prover, uint96 validityBond, uint16 tier, uint64 proposedIn)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function addressManager() view returns (address)",
      "function bondBalanceOf(address _user) view returns (uint256)",
      "function depositBond(uint256 _amount) payable",
      "function getBlock(uint64 _blockId) view returns (tuple(bytes32 metaHash, address assignedProver, uint96 livenessBond, uint64 blockId, uint64 proposedAt, uint64 proposedIn, uint32 nextTransitionId, uint32 verifiedTransitionId) blk_)",
      "function getBlockV2(uint64 _blockId) view returns (tuple(bytes32 metaHash, address assignedProver, uint96 livenessBond, uint64 blockId, uint64 proposedAt, uint64 proposedIn, uint24 nextTransitionId, bool livenessBondReturned, uint24 verifiedTransitionId) blk_)",
      "function getConfig() pure returns (tuple(uint64 chainId, uint64 blockMaxProposals, uint64 blockRingBufferSize, uint64 maxBlocksToVerify, uint32 blockMaxGasLimit, uint96 livenessBond, uint8 stateRootSyncInternal, uint64 maxAnchorHeightOffset, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig, uint64 ontakeForkHeight))",
      "function getLastSyncedBlock() view returns (uint64 blockId_, bytes32 blockHash_, bytes32 stateRoot_, uint64 verifiedAt_)",
      "function getLastVerifiedBlock() view returns (uint64 blockId_, bytes32 blockHash_, bytes32 stateRoot_, uint64 verifiedAt_)",
      "function getStateVariables() view returns (tuple(uint64 genesisHeight, uint64 genesisTimestamp, uint64 lastSyncedBlockId, uint64 lastSynecdAt), tuple(uint64 numBlocks, uint64 lastVerifiedBlockId, bool provingPaused, uint56 lastProposedIn, uint64 lastUnpausedAt))",
      "function getTransition(uint64 _blockId, uint32 _tid) view returns (tuple(bytes32 key, bytes32 blockHash, bytes32 stateRoot, address prover, uint96 validityBond, address contester, uint96 contestBond, uint64 timestamp, uint16 tier, uint8 __reserved1))",
      "function getTransition(uint64 _blockId, bytes32 _parentHash) view returns (tuple(bytes32 key, bytes32 blockHash, bytes32 stateRoot, address prover, uint96 validityBond, address contester, uint96 contestBond, uint64 timestamp, uint16 tier, uint8 __reserved1))",
      "function getTransitions(uint64[] _blockIds, bytes32[] _parentHashes) view returns (tuple(bytes32 key, bytes32 blockHash, bytes32 stateRoot, address prover, uint96 validityBond, address contester, uint96 contestBond, uint64 timestamp, uint16 tier, uint8 __reserved1)[])",
      "function getVerifiedBlockProver(uint64 _blockId) view returns (address prover_)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner, address _rollupAddressManager, bytes32 _genesisBlockHash, bool _toPause)",
      "function init2()",
      "function init3()",
      "function lastProposedIn() view returns (uint56)",
      "function lastUnpausedAt() view returns (uint64)",
      "function owner() view returns (address)",
      "function pause()",
      "function pauseProving(bool _pause)",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proposeBlockV2(bytes _params, bytes _txList) returns (tuple(bytes32 anchorBlockHash, bytes32 difficulty, bytes32 blobHash, bytes32 extraData, address coinbase, uint64 id, uint32 gasLimit, uint64 timestamp, uint64 anchorBlockId, uint16 minTier, bool blobUsed, bytes32 parentMetaHash, address proposer, uint96 livenessBond, uint64 proposedAt, uint64 proposedIn, uint32 blobTxListOffset, uint32 blobTxListLength, uint8 blobIndex, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig) meta_)",
      "function proposeBlocksV2(bytes[] _paramsArr, bytes[] _txListArr) returns (tuple(bytes32 anchorBlockHash, bytes32 difficulty, bytes32 blobHash, bytes32 extraData, address coinbase, uint64 id, uint32 gasLimit, uint64 timestamp, uint64 anchorBlockId, uint16 minTier, bool blobUsed, bytes32 parentMetaHash, address proposer, uint96 livenessBond, uint64 proposedAt, uint64 proposedIn, uint32 blobTxListOffset, uint32 blobTxListLength, uint8 blobIndex, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig)[] metaArr_)",
      "function proveBlock(uint64 _blockId, bytes _input)",
      "function proveBlocks(uint64[] _blockIds, bytes[] _inputs, bytes _batchProof)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolve(uint64 _chainId, bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function state() view returns (bytes32 __reserve1, tuple(uint64 genesisHeight, uint64 genesisTimestamp, uint64 lastSyncedBlockId, uint64 lastSynecdAt) slotA, tuple(uint64 numBlocks, uint64 lastVerifiedBlockId, bool provingPaused, uint56 lastProposedIn, uint64 lastUnpausedAt) slotB)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function verifyBlocks(uint64 _maxBlocksToVerify)",
      "function withdrawBond(uint256 _amount)"
    ],
    "0x91f67118DD47d502B1f0C354D0611997B022f29E": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x989E348275b659d36f8751ea1c10D146211650BE": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x996282cA11E5DEb6B5D122CC3B9A1FcAAD4415Ab": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x9CBeE534B5D8a6280e01a14844Ee8aF350399C7F": [
      "constructor(address _singleton)"
    ],
    "0x9CDf589C941ee81D75F34d3755671d614f7cf261": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x9e0a24964e5397B566c1ed39258e21aB5E35C77C": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x9e322fC59b8f4A29e6b25c3a166ac1892AA30136": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x9F9D2fC7abe74C79f86F0D1212107692430eef72": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xa384E224A3F3D664F43eBE33395eF0DCcE67e894": [
      "constructor(address _singleton)"
    ],
    "0xAdBa78120E85Add0dBD2050dBA0548CEDA81A31b": [
      "constructor(address _inbox, address _forcedInclusionStore, address _preconfRouter)",
      "error ACCESS_DENIED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error InvalidBlobByteOffset()",
      "error InvalidBlobByteSize()",
      "error InvalidBlobCreatedIn()",
      "error InvalidBlobCreatedIn()",
      "error InvalidBlobHash()",
      "error InvalidBlobHashesSize()",
      "error InvalidBlobParams()",
      "error InvalidBlockSize()",
      "error InvalidBlockTxs()",
      "error InvalidSignalSlots()",
      "error InvalidTimeShift()",
      "error OldestForcedInclusionDue()",
      "error REENTRANT_CALL()",
      "error RESOLVER_NOT_FOUND()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ForcedInclusionProcessed(tuple(bytes32 blobHash, uint64 feeInGwei, uint64 createdAtBatchId, uint32 blobByteOffset, uint32 blobByteSize, uint64 blobCreatedIn))",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function MIN_TXS_PER_FORCED_INCLUSION() view returns (uint16)",
      "function acceptOwnership()",
      "function forcedInclusionStore() view returns (address)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function inbox() view returns (address)",
      "function init(address _owner)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function preconfRouter() view returns (address)",
      "function proposeBatch(bytes _params, bytes _txList) returns (tuple(bytes32 txsHash, tuple(uint16 numTransactions, uint8 timeShift, bytes32[] signalSlots)[] blocks, bytes32[] blobHashes, bytes32 extraData, address coinbase, uint64 proposedIn, uint64 blobCreatedIn, uint32 blobByteOffset, uint32 blobByteSize, uint32 gasLimit, uint64 lastBlockId, uint64 lastBlockTimestamp, uint64 anchorBlockId, bytes32 anchorBlockHash, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig), tuple(bytes32 infoHash, address proposer, uint64 batchId, uint64 proposedAt))",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xB16931e78d0cE3c9298bbEEf3b5e2276D34b8da1": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xB1c6fF8dCbED16FE412291E7BDA0d611405944Be": [
      "constructor(uint64 _taikoChainId, address _riscoGroth16Verifier)",
      "error ACCESS_DENIED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error RISC_ZERO_INVALID_AGGREGATION_IMAGE_ID()",
      "error RISC_ZERO_INVALID_BLOCK_PROOF_IMAGE_ID()",
      "error RISC_ZERO_INVALID_PROOF()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ImageTrusted(bytes32 imageId, bool trusted)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner)",
      "function isImageTrusted(bytes32 imageId) view returns (bool trusted)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function riscoGroth16Verifier() view returns (address)",
      "function setImageIdTrusted(bytes32 _imageId, bool _trusted)",
      "function taikoChainId() view returns (uint64)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function verifyProof(tuple(uint64 batchId, bytes32 metaHash, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot) transition)[] _ctxs, bytes _proof) view"
    ],
    "0xb20C8Ffc2dD49596508d262b6E8B6817e9790E63": [
      "error ETH_TRANSFER_FAILED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error RESOLVER_DENIED()",
      "error RESOLVER_INVALID_MANAGER()",
      "error RESOLVER_UNEXPECTED_CHAINID()",
      "error RESOLVER_ZERO_ADDR(uint64 chainId, bytes32 name)",
      "error VAULT_BTOKEN_BLACKLISTED()",
      "error VAULT_CTOKEN_MISMATCH()",
      "error VAULT_INSUFFICIENT_FEE()",
      "error VAULT_INVALID_AMOUNT()",
      "error VAULT_INVALID_CTOKEN()",
      "error VAULT_INVALID_NEW_BTOKEN()",
      "error VAULT_INVALID_TOKEN()",
      "error VAULT_INVALID_TO_ADDR()",
      "error VAULT_LAST_MIGRATION_TOO_CLOSE()",
      "error VAULT_PERMISSION_DENIED()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event BridgedTokenChanged(uint256 indexed srcChainId, address indexed ctoken, address btokenOld, address btokenNew, string ctokenSymbol, string ctokenName, uint8 ctokenDecimal)",
      "event BridgedTokenDeployed(uint256 indexed srcChainId, address indexed ctoken, address indexed btoken, string ctokenSymbol, string ctokenName, uint8 ctokenDecimal)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event TokenReceived(bytes32 indexed msgHash, address indexed from, address indexed to, uint64 srcChainId, address ctoken, address token, uint256 amount)",
      "event TokenReleased(bytes32 indexed msgHash, address indexed from, address ctoken, address token, uint256 amount)",
      "event TokenSent(bytes32 indexed msgHash, address indexed from, address indexed to, uint64 canonicalChainId, uint64 destChainId, address ctoken, address token, uint256 amount)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function MIN_MIGRATION_DELAY() view returns (uint256)",
      "function acceptOwnership()",
      "function addressManager() view returns (address)",
      "function bridgedToCanonical(address btoken) view returns (uint64 chainId, address addr, uint8 decimals, string symbol, string name)",
      "function btokenDenylist(address btoken) view returns (bool denied)",
      "function canonicalToBridged(uint256 chainId, address ctoken) view returns (address btoken)",
      "function changeBridgedToken(tuple(uint64 chainId, address addr, uint8 decimals, string symbol, string name) _ctoken, address _btokenNew) returns (address btokenOld_)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner, address _sharedAddressManager)",
      "function lastMigrationStart(uint256 chainId, address ctoken) view returns (uint256 timestamp)",
      "function lastUnpausedAt() view returns (uint64)",
      "function name() pure returns (bytes32)",
      "function onMessageInvocation(bytes _data) payable",
      "function onMessageRecalled(tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) _message, bytes32 _msgHash) payable",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolve(uint64 _chainId, bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function sendToken(tuple(uint64 destChainId, address destOwner, address to, uint64 fee, address token, uint32 gasLimit, uint256 amount) _op) payable returns (tuple(uint64 id, uint64 fee, uint32 gasLimit, address from, uint64 srcChainId, address srcOwner, uint64 destChainId, address destOwner, address to, uint256 value, bytes data) message_)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xb284810536C0dAB6A8e48153B58588A9B9e0F701": [
      "constructor(address _singleton)"
    ],
    "0xb47fE76aC588101BFBdA9E68F66433bA51E8029a": [
      "constructor(address _singleton)"
    ],
    "0xB8826B144eB895eFE2923b61b3b117B1298A9526": [
      "constructor(address _resolver, address _inbox, address _bondToken, address _entrypoint)",
      "error ACCESS_DENIED()",
      "error ETH_TRANSFER_FAILED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error ForcedInclusionParamsNotAllowed()",
      "error INVALID_PAUSE_STATUS()",
      "error INVALID_STATUS()",
      "error NOT_FIRST_PROPOSAL()",
      "error PERMISSION_DENIED()",
      "error REENTRANT_CALL()",
      "error RESOLVER_NOT_FOUND()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event ProverEnabled(address indexed prover, bool indexed enabled)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function admin() view returns (address)",
      "function approveAllowance(address _address, uint256 _allowance)",
      "function bondToken() view returns (address)",
      "function delegate(address _delegatee)",
      "function depositBond(uint256 _amount)",
      "function enableProver(address _prover, bool _isProver)",
      "function entrypoint() view returns (address)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function inbox() view returns (address)",
      "function init(address _owner, address _admin)",
      "function isProver(address prover) view returns (bool isProver)",
      "function isValidSignature(bytes32 _hash, bytes _signature) view returns (bytes4 magicValue_)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proposeBatch(bytes _params, bytes _txList) returns (tuple(bytes32 txsHash, tuple(uint16 numTransactions, uint8 timeShift, bytes32[] signalSlots)[] blocks, bytes32[] blobHashes, bytes32 extraData, address coinbase, uint64 proposedIn, uint64 blobCreatedIn, uint32 blobByteOffset, uint32 blobByteSize, uint32 gasLimit, uint64 lastBlockId, uint64 lastBlockTimestamp, uint64 anchorBlockId, bytes32 anchorBlockHash, tuple(uint8 adjustmentQuotient, uint8 sharingPctg, uint32 gasIssuancePerSecond, uint64 minGasExcess, uint32 maxGasIssuancePerBlock) baseFeeConfig), tuple(bytes32 infoHash, address proposer, uint64 batchId, uint64 proposedAt))",
      "function proposeBlockV2(bytes _params, bytes _txList)",
      "function proposeBlocksV2(bytes[] _paramsArr, bytes[] _txListArr)",
      "function proposeBlocksV2Conditionally(bytes[] _params, bytes[] _txList)",
      "function proveBatches(bytes _params, bytes _proof)",
      "function proveBlock(uint64 _blockId, bytes _input)",
      "function proveBlocks(uint64[] _blockId, bytes[] _input, bytes _batchProof)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function withdrawBond(uint256 _amount)",
      "function withdrawEtherToAdmin(uint256 _amount)",
      "function withdrawToAdmin(uint256 _amount)"
    ],
    "0xbee1040D0Aab17AE19454384904525aE4A3602B9": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xcdb25e201Ad3fdcFe16730A6CA2cC0B1Ce2137a2": [
      "constructor(uint8 _inclusionDelay, uint64 _feeInGwei, address _inbox, address _inboxWrapper)",
      "error ACCESS_DENIED()",
      "error BlobNotFound()",
      "error ETH_TRANSFER_FAILED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error IncorrectFee()",
      "error InvalidIndex()",
      "error InvalidParams()",
      "error MultipleCallsInOneTx()",
      "error NoForcedInclusionFound()",
      "error REENTRANT_CALL()",
      "error RESOLVER_NOT_FOUND()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ForcedInclusionConsumed(tuple(bytes32 blobHash, uint64 feeInGwei, uint64 createdAtBatchId, uint32 blobByteOffset, uint32 blobByteSize, uint64 blobCreatedIn) forcedInclusion)",
      "event ForcedInclusionStored(tuple(bytes32 blobHash, uint64 feeInGwei, uint64 createdAtBatchId, uint32 blobByteOffset, uint32 blobByteSize, uint64 blobCreatedIn) forcedInclusion)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function consumeOldestForcedInclusion(address _feeRecipient) returns (tuple(bytes32 blobHash, uint64 feeInGwei, uint64 createdAtBatchId, uint32 blobByteOffset, uint32 blobByteSize, uint64 blobCreatedIn) inclusion_)",
      "function feeInGwei() view returns (uint64)",
      "function getForcedInclusion(uint256 index) view returns (tuple(bytes32 blobHash, uint64 feeInGwei, uint64 createdAtBatchId, uint32 blobByteOffset, uint32 blobByteSize, uint64 blobCreatedIn))",
      "function getOldestForcedInclusionDeadline() view returns (uint256)",
      "function head() view returns (uint64)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function inbox() view returns (address)",
      "function inboxWrapper() view returns (address)",
      "function inclusionDelay() view returns (uint8)",
      "function init(address _owner)",
      "function isOldestForcedInclusionDue() view returns (bool)",
      "function lastProcessedAtBatchId() view returns (uint64)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function queue(uint256 id) view returns (bytes32 blobHash, uint64 feeInGwei, uint64 createdAtBatchId, uint32 blobByteOffset, uint32 blobByteSize, uint64 blobCreatedIn)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function storeForcedInclusion(uint8 blobIndex, uint32 blobByteOffset, uint32 blobByteSize) payable",
      "function tail() view returns (uint64)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd1934807041B168f383870A0d8F565aDe2DF9D7D": [
      "constructor()",
      "error ACCESS_DENIED()",
      "error CallFailed()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error InvalidTarget()",
      "error NoCallToExecute()",
      "error REENTRANT_CALL()",
      "error RESOLVER_NOT_FOUND()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function acceptOwnershipOf(address _contractToOwn)",
      "function execute(tuple(address target, uint256 value, bytes data)[] _calls) returns (bytes[] results_)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _taikoDAO)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xD5cF6A34Ba5fb9289510dC93c03F1f9084798487": [
      "constructor(address _singleton)"
    ],
    "0xd60247c6848B7Ca29eDdF63AA924E53dB6Ddd8EC": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xD7dA1C25E915438720692bC55eb3a7170cA90321": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdb627bfD79e81fE42138Eb875287F94FAd5BBc64": [
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error QM_INVALID_PARAM()",
      "error QM_OUT_OF_QUOTA()",
      "error REENTRANT_CALL()",
      "error RESOLVER_DENIED()",
      "error RESOLVER_INVALID_MANAGER()",
      "error RESOLVER_UNEXPECTED_CHAINID()",
      "error RESOLVER_ZERO_ADDR(uint64 chainId, bytes32 name)",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event QuotaPeriodUpdated(uint256 quotaPeriod)",
      "event QuotaUpdated(address indexed token, uint256 oldQuota, uint256 newQuota)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function addressManager() view returns (address)",
      "function availableQuota(address _token, uint256 _leap) view returns (uint256)",
      "function consumeQuota(address _token, uint256 _amount)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner, address _addressManager, uint24 _quotaPeriod)",
      "function lastUnpausedAt() view returns (uint64)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function quotaPeriod() view returns (uint24)",
      "function renounceOwnership()",
      "function resolve(uint64 _chainId, bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function setQuotaPeriod(uint24 _quotaPeriod)",
      "function tokenQuota(address token) view returns (uint48 updatedAt, uint104 quota, uint104 available)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function updateQuota(address _token, uint104 _quota)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xDb7AEe4fA967C2aB0eC28f63C8675224E59340A5": [
      "constructor(uint64 _taikoChainId, address _taikoInbox, address _taikoProofVerifier, address _automataDcapAttestation)",
      "error ACCESS_DENIED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error RESOLVER_NOT_FOUND()",
      "error SGX_ALREADY_ATTESTED()",
      "error SGX_INVALID_ATTESTATION()",
      "error SGX_INVALID_INSTANCE()",
      "error SGX_INVALID_PROOF()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event InstanceAdded(uint256 indexed id, address indexed instance, address indexed replaced, uint256 validSince)",
      "event InstanceDeleted(uint256 indexed id, address indexed instance)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function INSTANCE_EXPIRY() view returns (uint64)",
      "function INSTANCE_VALIDITY_DELAY() view returns (uint64)",
      "function acceptOwnership()",
      "function addInstances(address[] _instances) returns (uint256[])",
      "function addressRegistered(address instanceAddress) view returns (bool alreadyAttested)",
      "function automataDcapAttestation() view returns (address)",
      "function deleteInstances(uint256[] _ids)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner)",
      "function instances(uint256 instanceId) view returns (address addr, uint64 validSince)",
      "function nextInstanceId() view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function registerInstance(tuple(tuple(bytes2 version, bytes2 attestationKeyType, bytes4 teeType, bytes2 qeSvn, bytes2 pceSvn, bytes16 qeVendorId, bytes20 userData) header, tuple(bytes16 cpuSvn, bytes4 miscSelect, bytes28 reserved1, bytes16 attributes, bytes32 mrEnclave, bytes32 reserved2, bytes32 mrSigner, bytes reserved3, uint16 isvProdId, uint16 isvSvn, bytes reserved4, bytes reportData) localEnclaveReport, tuple(bytes ecdsa256BitSignature, bytes ecdsaAttestationKey, tuple(bytes16 cpuSvn, bytes4 miscSelect, bytes28 reserved1, bytes16 attributes, bytes32 mrEnclave, bytes32 reserved2, bytes32 mrSigner, bytes reserved3, uint16 isvProdId, uint16 isvSvn, bytes reserved4, bytes reportData) pckSignedQeReport, bytes qeReportSignature, tuple(uint16 parsedDataSize, bytes data) qeAuthData, tuple(uint16 certType, uint32 certDataSize, bytes[3] decodedCertDataArray) certification) v3AuthData) _attestation) returns (uint256)",
      "function renounceOwnership()",
      "function resolver() view returns (address)",
      "function taikoChainId() view returns (uint64)",
      "function taikoInbox() view returns (address)",
      "function taikoProofVerifier() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function verifyProof(tuple(uint64 batchId, bytes32 metaHash, tuple(bytes32 parentHash, bytes32 blockHash, bytes32 stateRoot) transition)[] _ctxs, bytes _proof)"
    ],
    "0xE78659fbF234c84C909Cf317D84edc2f6C0D8413": [
      "constructor()",
      "error ACCESS_DENIED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error RESOLVED_TO_ZERO_ADDRESS()",
      "error RESOLVER_NOT_FOUND()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AddressRegistered(uint256 indexed chainId, bytes32 indexed name, address newAddress, address oldAddress)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function registerAddress(uint256 _chainId, bytes32 _name, address _newAddress)",
      "function renounceOwnership()",
      "function resolve(uint256 _chainId, bytes32 _name, bool _allowZeroAddress) view returns (address addr_)",
      "function resolver() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xEC1a9aa1C648F047752fe4eeDb2C21ceab0c6449": [
      "error AM_ADDRESS_ALREADY_SET()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error RESOLVER_DENIED()",
      "error RESOLVER_INVALID_MANAGER()",
      "error RESOLVER_UNEXPECTED_CHAINID()",
      "error RESOLVER_ZERO_ADDR(uint64 chainId, bytes32 name)",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AddressSet(uint64 indexed chainId, bytes32 indexed name, address newAddress, address oldAddress)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function addressManager() view returns (address)",
      "function getAddress(uint64 _chainId, bytes32 _name) view returns (address)",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner)",
      "function init2()",
      "function lastUnpausedAt() view returns (uint64)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function resolve(uint64 _chainId, bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function resolve(bytes32 _name, bool _allowZeroAddress) view returns (address)",
      "function setAddress(uint64 _chainId, bytes32 _name, address _newAddress)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xEf9EaA1dd30a9AA1df01c36411b5F082aA65fBaa": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xf1cF63589A1e012F9124182c9eAa36B5333e5f06": [
      "constructor(address _singleton)"
    ],
    "0xfB3Ca570A5348FD101e65303eECdB5Bf43C5548a": [
      "constructor(bytes32 control_root, bytes32 bn254_control_id)",
      "error SelectorMismatch(bytes4 received, bytes4 expected)",
      "error VerificationFailed()",
      "function BN254_CONTROL_ID() view returns (bytes32)",
      "function CONTROL_ROOT_0() view returns (bytes16)",
      "function CONTROL_ROOT_1() view returns (bytes16)",
      "function SELECTOR() view returns (bytes4)",
      "function VERSION() view returns (string)",
      "function verify(bytes seal, bytes32 imageId, bytes32 journalDigest) view",
      "function verifyIntegrity(tuple(bytes seal, bytes32 claimDigest) receipt) view",
      "function verifyProof(uint256[2] _pA, uint256[2][2] _pB, uint256[2] _pC, uint256[5] _pubSignals) view returns (bool)"
    ],
    "0xfC3C4ca95a8C4e5a587373f1718CD91301d6b2D3": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xFca4F0Ab7B95EEf2e3A60EF2Bc0c42DdAA62E66D": [
      "constructor()",
      "error ACCESS_DENIED()",
      "error FUNC_NOT_IMPLEMENTED()",
      "error INVALID_PAUSE_STATUS()",
      "error REENTRANT_CALL()",
      "error RESOLVED_TO_ZERO_ADDRESS()",
      "error RESOLVER_NOT_FOUND()",
      "error ZERO_ADDRESS()",
      "error ZERO_VALUE()",
      "event AddressRegistered(uint256 indexed chainId, bytes32 indexed name, address newAddress, address oldAddress)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function acceptOwnership()",
      "function impl() view returns (address)",
      "function inNonReentrant() view returns (bool)",
      "function init(address _owner)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function registerAddress(uint256 _chainId, bytes32 _name, address _newAddress)",
      "function renounceOwnership()",
      "function resolve(uint256 _chainId, bytes32 _name, bool _allowZeroAddress) view returns (address addr_)",
      "function resolver() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xFF5Adab685362DC4C33536a65aF5873738D1216B": [
      "error InvalidProof()",
      "error WrongVerifierSelector(bytes4 received, bytes4 expected)",
      "function VERIFIER_HASH() pure returns (bytes32)",
      "function VERSION() pure returns (string)",
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)",
      "function hashPublicValues(bytes publicValues) pure returns (bytes32)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "succinct/SP1Verifier": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "taiko/AutomataDcapV3Attestation": "0xc94a2c7d4ef9c322e01a6da5facff05a1b6389e69360c642587aa3c98d59677d",
    "taiko/DAO": "0xc15ea5bd900a03d035d09672927e12bca9de34dc257c8754a23c4b30be8757ea",
    "taiko/DefaultResolver": "0x53b32b1e255a1a1bdf21125cbb22170988a66cec3102548b5283ec54eaedf25e",
    "taiko/EmergencyMultisig": "0x36b976b7e7ae2e39b6dbca16db2b65fa0a7cec1456f559a3a21cca1013c436ae",
    "taiko/EncryptionRegistry": "0x6e1f93fb50489c81ab2040ecb707c6e04171660edc52b35d0f255365e2c6da84",
    "taiko/ForcedInclusionStore": "0xe4a5ab65e9492a918778491a3551eb6d5788e45a0c040f4da6f6f53269925c97",
    "taiko/L1SharedAddressManager": "0x53e383d79bc5a05364962d3a986723394e3f04e839085710857c1b3a050bef18",
    "taiko/Multisig": "0x49a0b215fa16081fbf9c9d57b0632f3c40ca9576ed2f18a7ed5229a2411be66d",
    "taiko/OptimisticTokenVotingPlugin": "0x6a672d2ccf7819bd3003e4e2f21047fbad74dcfc72fcf6c89283ac0106156ec5",
    "taiko/PEMCertChainLib": "0x5a8e570685c41094b4b892489bb6a8f0f7509e1e71111612b374075e6bc5e562",
    "taiko/ProverSet": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c",
    "taiko/QuotaManager": "0x050ea145bf48fda4a12016c962d9df58643d999f99a23e03eb1233786e25162f",
    "taiko/Risc0VerifierGateway": "0x9c68a574bd07dcca487012dfc4123186f03a607d8b3036a8b31b28f4b19c3779",
    "taiko/RiscZeroGroth16Verifier": "0x5a8e570685c41094b4b892489bb6a8f0f7509e1e71111612b374075e6bc5e562",
    "taiko/SgxVerifier": "0x76591e4af9aa17fa8b64070623f9f2599e0161de42b8c518384374ca652c644e",
    "taiko/SharedERC20Vault": "0xc15ea5bd900a03d035d09672927e12bca9de34dc257c8754a23c4b30be8757ea",
    "taiko/SignalService": "0xc15ea5bd900a03d035d09672927e12bca9de34dc257c8754a23c4b30be8757ea",
    "taiko/SignerList": "0x09efeff976f7ad4f78dcc3bfa1d6c9116b57ba24a2db0f2ddeb17aee1f2cf2e9",
    "taiko/SigVerifyLib": "0x5a8e570685c41094b4b892489bb6a8f0f7509e1e71111612b374075e6bc5e562",
    "taiko/SP1VerifierGateway": "0x9c68a574bd07dcca487012dfc4123186f03a607d8b3036a8b31b28f4b19c3779",
    "taiko/TaikoBridge": "0x793959f21bd65aea7848aa1d1da5f48fafcc1a117591254ed528e654c30a8094",
    "taiko/TaikoDAOController": "0xc15ea5bd900a03d035d09672927e12bca9de34dc257c8754a23c4b30be8757ea",
    "taiko/TaikoL1PostPacaya": "0x3efa4c94aba85afda79b284b7a199a699d0357f151e3e697e249f6c924543fe6",
    "taiko/TaikoTokenPostPacaya": "0x715f0fe61aa0d583fd8574521dfa81827a944339f94c46c74a6a058c47089804",
    "taiko/TaikoWrapper": "0x5a8e570685c41094b4b892489bb6a8f0f7509e1e71111612b374075e6bc5e562",
    "taiko/VerifierGateway": "0x5a8e570685c41094b4b892489bb6a8f0f7509e1e71111612b374075e6bc5e562"
  },
  "permissionsConfigHash": "0xa72cf765281b93b4fe035b6353ccf21c2150be70a26fbb0cdaaa8e858564d83d"
}
