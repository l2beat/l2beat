{
  "name": "mog",
  "timestamp": 1756285476,
  "configHash": "0x781e7c4428e87c22100ab7dd57f1d32ca0c73ffc95a1a5acc0f10f6251fc24b6",
  "entries": [
    {
      "name": "OptimismMintableERC20",
      "address": "base:0x2Da56AcB9Ea78330f947bD57C54119Debda7AF71",
      "type": "Contract",
      "template": "tokens/OptimismMintableERC20",
      "sourceHashes": [
        "0x7fb0fa7ed8efe5a3d2ff23b35029a32e2f7426f5f27bd5eef52ec128bb07a0e1"
      ],
      "proxyType": "immutable",
      "description": "Standard OP stack's canonically bridged L2 token implementation with upgrade capabilities.",
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1711647579,
      "sinceBlock": 12429116,
      "values": {
        "$immutable": true,
        "$tokenData": {
          "name": "Mog Coin",
          "coingeckoId": "mog-coin",
          "address": "base:0x2Da56AcB9Ea78330f947bD57C54119Debda7AF71",
          "symbol": "Mog",
          "decimals": 18,
          "deploymentTimestamp": 1711647579,
          "coingeckoListingTimestamp": 1689897600,
          "category": "other",
          "iconUrl": "https://coin-images.coingecko.com/coins/images/31059/large/MOG_LOGO_200x200.png?1696529893",
          "chainId": 8453,
          "supply": "zero",
          "source": "canonical"
        },
        "$underlyingToken": "eth:0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a",
        "$wasCanonicallyBridged": true,
        "bridge": "base:0x4200000000000000000000000000000000000010",
        "BRIDGE": "base:0x4200000000000000000000000000000000000010",
        "decimals": 18,
        "l1Token": "base:0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a",
        "l2Bridge": "base:0x4200000000000000000000000000000000000010",
        "name": "Mog Coin",
        "REMOTE_TOKEN": "base:0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a",
        "remoteToken": "base:0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a",
        "symbol": "Mog",
        "totalSupply": "69555795309877088234894590991327",
        "version": "1.0.3"
      },
      "implementationNames": {
        "base:0x2Da56AcB9Ea78330f947bD57C54119Debda7AF71": "OptimismMintableERC20"
      },
      "usedTypes": [
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "eth" } },
        { "typeCaster": "ChainPrefix", "arg": { "prefix": "oeth" } }
      ]
    },
    {
      "name": "MOG",
      "address": "eth:0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a",
      "type": "Contract",
      "sourceHashes": [
        "0x4555f9c967edaed432d4b63f21fa90662252eb8abdcb6ac5a5771bf07b10a655"
      ],
      "proxyType": "immutable",
      "sinceTimestamp": 1689822407,
      "sinceBlock": 17731591,
      "values": {
        "_maxTxAmount": "390570159911439123354797210149241",
        "_maxWalletToken": "390570159911439123354797210149241",
        "_owner": "eth:0x0000000000000000000000000000000000000000",
        "$immutable": true,
        "$tokenData": {
          "name": "Mog Coin",
          "coingeckoId": "mog-coin",
          "address": "eth:0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a",
          "symbol": "Mog",
          "decimals": 18,
          "deploymentTimestamp": 1689822407,
          "coingeckoListingTimestamp": 1689897600,
          "category": "other",
          "iconUrl": "https://coin-images.coingecko.com/coins/images/31059/large/MOG_LOGO_200x200.png?1696529893",
          "chainId": 1,
          "supply": "zero",
          "source": "canonical"
        },
        "decimals": 18,
        "getOwner": "eth:0x0000000000000000000000000000000000000000",
        "name": "Mog Coin",
        "owner": "eth:0x0000000000000000000000000000000000000000",
        "pair": "eth:0xc2eaB7d33d3cB97692eCB231A5D0e4A649Cb539d",
        "router": "eth:0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D",
        "showSupply": "360447601430949687966814425289995",
        "swapEnabled": true,
        "swapThreshold": "2944830000000000000000000000000",
        "symbol": "Mog",
        "totalFee": 4,
        "totalSupply": "390570159911439123354797210149241",
        "TradingOpen": true
      },
      "implementationNames": {
        "eth:0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a": "MOG"
      }
    }
  ],
  "abis": {
    "base:0x2Da56AcB9Ea78330f947bD57C54119Debda7AF71": [
      "constructor(address _bridge, address _remoteToken, string _name, string _symbol)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Burn(address indexed account, uint256 amount)",
      "event Mint(address indexed account, uint256 amount)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function BRIDGE() view returns (address)",
      "function REMOTE_TOKEN() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function bridge() view returns (address)",
      "function burn(address _from, uint256 _amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function l1Token() view returns (address)",
      "function l2Bridge() view returns (address)",
      "function mint(address _to, uint256 _amount)",
      "function name() view returns (string)",
      "function remoteToken() view returns (address)",
      "function supportsInterface(bytes4 _interfaceId) pure returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function version() view returns (string)"
    ],
    "eth:0xaaeE1A9723aaDB7afA2810263653A34bA2C21C7a": [
      "constructor()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AutoLiquify(uint256 amountETH, uint256 amountTokens)",
      "event ClearStuck(uint256 amount)",
      "event ClearToken(address TokenAddressCleared, uint256 Amount)",
      "event EditTax(uint8 Buy, uint8 Sell, uint8 Transfer)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event set_MaxTX(uint256 maxTX)",
      "event set_MaxWallet(uint256 maxWallet)",
      "event set_Receivers(address marketingFeeReceiver, address buybackFeeReceiver, address burnFeeReceiver, address devFeeReceiver)",
      "event set_SwapBack(uint256 Amount, bool Enabled)",
      "event user_TxExempt(address Wallet, bool Exempt)",
      "event user_exemptfromfees(address Wallet, bool Exempt)",
      "function TradingOpen() view returns (bool)",
      "function _maxTxAmount() view returns (uint256)",
      "function _maxWalletToken() view returns (uint256)",
      "function _owner() view returns (address)",
      "function allowance(address holder, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function approveMax(address spender) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function checkRatio(uint256 ratio, uint256 accuracy) view returns (bool)",
      "function clearStuckToken(address tokenAddress, uint256 tokens) returns (bool success)",
      "function decimals() pure returns (uint8)",
      "function getOwner() view returns (address)",
      "function manualSend()",
      "function maxWalletRule(uint256 maxWallPercent)",
      "function name() pure returns (string)",
      "function owner() view returns (address)",
      "function pair() view returns (address)",
      "function reduceFee()",
      "function removeLimits()",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function setParameters(uint256 _liquidityFee, uint256 _buybackFee, uint256 _marketingFee, uint256 _devFee, uint256 _burnFee, uint256 _feeDenominator)",
      "function setStructure(uint256 _percentonbuy, uint256 _percentonsell, uint256 _wallettransfer)",
      "function setSwapBackSettings(bool _enabled, uint256 _amount)",
      "function setWallets(address _autoLiquidityReceiver, address _marketingFeeReceiver, address _devFeeReceiver, address _burnFeeReceiver, address _buybackFeeReceiver)",
      "function showBacking(uint256 accuracy) view returns (uint256)",
      "function showSupply() view returns (uint256)",
      "function startTrading()",
      "function swapEnabled() view returns (bool)",
      "function swapThreshold() view returns (uint256)",
      "function symbol() pure returns (string)",
      "function totalFee() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ]
  },
  "usedTemplates": {
    "tokens/OptimismMintableERC20": "0xc3a07d61ea3f87a7c6f83d6e66e3e9dcee7812e0677383410b20fc9c6832b80c"
  },
  "usedBlockNumbers": { "ethereum": 23231445, "base": 34748064 },
  "permissionsConfigHash": "0x79c44089114727f9f2d9a1fb01321ca326ca08d9104f51356d657eb7edbe38cd"
}
