{
  "name": "st-azur",
  "chain": "ethereum",
  "timestamp": 1753693931,
  "configHash": "0x5c9be412fcc91f3de9509c8293d0580a97627c842c00ea1257b0955163d68ddd",
  "entries": [
    {
      "name": "RewardPoolV2",
      "address": "eth:0x67f3228fD58f5A26D93a5dd0c6989b69c95618eB",
      "type": "Contract",
      "sourceHashes": [
        "0x8c407edc4ac1fa1cea2c45903e2cf0158906a2ff39fc2eb92aca3ca9f0d43ed8",
        "0xa9291fc66798387bc6d07d6a47cc5d1573c07d5fa0464919eba895291a9a995a"
      ],
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": [
        "clock",
        "totalIssued",
        "totalSupply",
        "totalRequestedAmount",
        "nextWithdrawalRequestId",
        "exchangeRate"
      ],
      "sinceTimestamp": 1723579643,
      "sinceBlock": 20521985,
      "values": {
        "$admin": "eth:0x3AC19C48662729b30F3BC3cf66364070F8b26424",
        "$implementation": "eth:0xB9321FA9b769E14c76F6c67B09ffA126BDD23ea9",
        "$pastUpgrades": [
          [
            "2024-08-13T20:07:23.000Z",
            "0xa82fc3537e52fc19eb796ab6b7063d1b7b1b74c2a4c982cad4c9b4f5120f7b1d",
            ["eth:0xe63237F2dCa683B56f8466DF3A7db16414D514D9"]
          ],
          [
            "2024-12-10T08:58:35.000Z",
            "0x73e80e5d6f38624e32ecd38b646b82b28a8460cede408af3db31e42a17d1040d",
            ["eth:0xB9321FA9b769E14c76F6c67B09ffA126BDD23ea9"]
          ]
        ],
        "$tokenData": {
          "name": "Staked $AZUR",
          "coingeckoId": "azuro-protocol",
          "address": "eth:0x67f3228fD58f5A26D93a5dd0c6989b69c95618eB",
          "symbol": "stAZUR",
          "decimals": 18,
          "deploymentTimestamp": 1723579643,
          "coingeckoListingTimestamp": 1718755200,
          "category": "other",
          "iconUrl": "https://coin-images.coingecko.com/coins/images/38499/large/azuro.jpeg?1717727357",
          "chainId": 1,
          "supply": "zero",
          "source": "canonical"
        },
        "$upgradeCount": 2,
        "decimals": 18,
        "exchangeRate": "1077494498221775027",
        "incentiveEndsAt": 1752844811,
        "incentiveStartedAt": 1750252811,
        "name": "Staked $AZUR",
        "nextWithdrawalRequestId": 492,
        "owner": "eth:0x80cB7c007D448aF0822E7b7b2459012cdfb5A200",
        "reward": "241004000000000000000000",
        "rewardRate": "92979938271604938271604938271604938",
        "symbol": "stAZUR",
        "totalRequestedAmount": "3615177277931764806373607",
        "totalSupply": "24987023175066452793625054",
        "underlying": "eth:0x9E6be44cC1236eEf7e1f197418592D363BedCd5A",
        "withdrawalDelay": 1209600
      },
      "implementationNames": {
        "eth:0x67f3228fD58f5A26D93a5dd0c6989b69c95618eB": "TransparentUpgradeableProxy",
        "eth:0xB9321FA9b769E14c76F6c67B09ffA126BDD23ea9": "RewardPoolV2"
      }
    }
  ],
  "abis": {
    "eth:0x67f3228fD58f5A26D93a5dd0c6989b69c95618eB": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "eth:0xB9321FA9b769E14c76F6c67B09ffA126BDD23ea9": [
      "constructor()",
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error ERC20InvalidUnderlying(address token)",
      "error InsufficientDeposit(uint256 amount)",
      "error InvalidIncentiveDuration(uint32 minDuration, uint32 maxDuration)",
      "error InvalidInitialization()",
      "error NoReward()",
      "error NotInitializing()",
      "error OnlyRequesterCanWithdrawToAnotherAddress(address requester)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error RequestDoesNotExist(uint256 requestId)",
      "error WithdrawalLocked(uint32 withdrawAfter)",
      "error ZeroAmount()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint64 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event StakingIncentiveUpdated(uint128 reward, uint32 incentiveEndsAt)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event WithdrawalDelayChanged(uint256 newWithdrawalDelay)",
      "event WithdrawalRequestProcessed(uint256 indexed requestId, address indexed to)",
      "event WithdrawalRequested(address indexed requester, uint256 indexed requestId, uint128 redeemAmount, uint128 withdrawalAmount, uint32 withdrawAfter)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function batchWithdrawTo(address account, uint256[] requestIds)",
      "function calculateWithdrawalAmount(uint256 redeemAmount) view returns (uint128)",
      "function changeWithdrawalDelay(uint32 newWithdrawalDelay)",
      "function decimals() view returns (uint8)",
      "function depositFor(address account, uint256 amount) returns (bool)",
      "function exchangeRate() view returns (uint128)",
      "function incentiveEndsAt() view returns (uint32)",
      "function incentiveStartedAt() view returns (uint32)",
      "function initialize(address underlyingToken_, string name_, string symbol_, uint32 withdrawalDelay_)",
      "function name() view returns (string)",
      "function nextWithdrawalRequestId() view returns (uint256)",
      "function owner() view returns (address)",
      "function recover(address account) returns (uint256 recoveredAmount)",
      "function renounceOwnership()",
      "function requestWithdrawal(uint128 redeemAmount) returns (uint256 requestId)",
      "function reward() view returns (uint128)",
      "function rewardRate() view returns (uint256)",
      "function symbol() view returns (string)",
      "function totalRequestedAmount() view returns (uint128)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function underlying() view returns (address)",
      "function underlyingBalanceOf(address account) view returns (uint256)",
      "function updateStakingIncentive(uint128 extraReward, uint32 incentiveDuration)",
      "function withdrawTo(address account, uint256 requestId) returns (bool)",
      "function withdrawalDelay() view returns (uint32)",
      "function withdrawalRequests(uint256) view returns (uint128 value, address requester, uint32 withdrawAfter)"
    ]
  },
  "usedTemplates": {},
  "usedBlockNumbers": { "ethereum": 23016672 },
  "permissionsConfigHash": "0xc4c127362212229a3cce7abdb28af548bbd6f3953967f5dd9b25af4324f21020"
}
