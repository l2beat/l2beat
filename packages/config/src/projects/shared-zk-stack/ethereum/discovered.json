{
  "name": "shared-zk-stack",
  "chain": "ethereum",
  "blockNumber": 22594206,
  "configHash": "0x07362f23e4fdfb3e27f69a86b2d10091486c940acc9f88ac9ffe25b40a73f78f",
  "entries": [
    {
      "name": "GnosisSafe",
      "address": "0x015318c16AE443a20DE0A776dB06a59F0D279057",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814567,
      "sinceBlock": 20292687,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0xb799FF3DeF706045B5061B22d748E8F52737415d"],
        "$threshold": 1,
        "domainSeparator": "0x33ddaaa186e6ac34fdaaefb13c36d7adab7eb749a53a8416668318a55983e73a",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 1,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x015318c16AE443a20DE0A776dB06a59F0D279057": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x0298512Bf8e7AC383c0A353354E3Ff66216654Ac",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ProtocolTimelockController(L2->L1)",
      "address": "0x085b8B6407f150D62adB1EF926F7f304600ec714",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
          "description": "start (queue) upgrades.",
          "role": ".L2_PROTOCOL_GOVERNOR"
        }
      ]
    },
    {
      "address": "0x0B2E7ffbcD1E3e6f5034555Fb638889FE7564709",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x0e621b0A275A207211e161Ee997aA80661Bc1bcf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x0F3F84b0aaaA6f577468F6708e7A5E09e59dbfA1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x13f07d9BF17615f6a17F272fe1A913168C275A66",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1721774711,
      "sinceBlock": 20372302,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x2A71F929fC583Db245B1563996de76Ab9d9A3DAf"],
        "$threshold": 1,
        "domainSeparator": "0x137d80acd37e6f99adb2ae75c778cc6a1703622be1426b67579475db8a184b86",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x13f07d9BF17615f6a17F272fe1A913168C275A66": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x160669864cDe95c190364ad01eDfbAA32E9DA430",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x178D8Eb1A1fb81B5102808A83318Bb04C6a9fC6D",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814495,
      "sinceBlock": 20292681,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0xa376AaF645dbd9b4f501B2A8a97bc21DcA15B001"],
        "$threshold": 1,
        "domainSeparator": "0xda5e7f191d2c793c2d812f2ff096bfa495a3af5b448ca04d5cadef2797efe1b9",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 1,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x178D8Eb1A1fb81B5102808A83318Bb04C6a9fC6D": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x1e4c534e7ce1FF5621Ea506D99b367D7d8EFbE3e",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x8fd8f837bb320bd2a7463c103bea2ff207b0969b5795f320a6c868858aa92074"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1738855967,
      "sinceBlock": 21788382,
      "values": {
        "$immutable": true,
        "owner": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "UPGRADE_INTERFACE_VERSION": "5.0.0"
      },
      "implementationNames": {
        "0x1e4c534e7ce1FF5621Ea506D99b367D7d8EFbE3e": "ProxyAdmin"
      }
    },
    {
      "address": "0x227230CD05e89f41E67df3E5fC61B18411d147A9",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x239cCb0a6Fc59fc6A53584613707F815503a6aAF",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x23aaaD48A6409d98Fcc2e9061CD2F437ff4E5839",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x2A71F929fC583Db245B1563996de76Ab9d9A3DAf",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x2A90830083C5Ca1f18d7AA7fCDC2998f93475384",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720813955,
      "sinceBlock": 20292637,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x160669864cDe95c190364ad01eDfbAA32E9DA430"],
        "$threshold": 1,
        "domainSeparator": "0x49133ce38a2610a79aa20b3c525f8411960ecbdf340387df8ad2b3f782551a34",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x2A90830083C5Ca1f18d7AA7fCDC2998f93475384": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "EraAdminProxy",
      "address": "0x2cf3bD6a9056b39999F3883955E183F655345063",
      "type": "Contract",
      "template": "shared-zk-stack/ChainAdmin",
      "sourceHashes": [
        "0x3423f941c413d4f07703ba62723b05600f2a33f8725e8d89a53194efb05f4086"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "interact",
          "from": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
          "description": "create new zk chains (based on the current version), register tokens (ZK cluster Admin role).",
          "role": ".admin"
        },
        {
          "permission": "interact",
          "from": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
          "description": "revert batches for any connected chain (ZK cluster Admin role).",
          "role": ".admin"
        }
      ],
      "sinceTimestamp": 1722434735,
      "sinceBlock": 20427018,
      "values": {
        "$immutable": true,
        "owner": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "tokenMultiplierSetter": "0x0000000000000000000000000000000000000000",
        "upgradeTimestamps": [
          { "_protocolVersion": 103079215106, "_upgradeTimestamp": 1722521507 },
          { "_protocolVersion": 107374182400, "_upgradeTimestamp": 1736517600 },
          { "_protocolVersion": 111669149696, "_upgradeTimestamp": 1741773600 },
          { "_protocolVersion": 115964116992, "_upgradeTimestamp": 1746435600 }
        ]
      },
      "fieldMeta": {
        "upgradeTimestamps": {
          "description": "Timestamps for new protocol version upgrades can be registered here (NOT enforced)"
        }
      },
      "implementationNames": {
        "0x2cf3bD6a9056b39999F3883955E183F655345063": "ChainAdmin"
      },
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "address": "0x2F73918C0F92FA9aD3Cfa87611677345a98CEa6f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x2Fd57fdFba5aABbFdc43Fd450c2817D1401E72F2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "BridgeHub",
      "address": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
      "type": "Contract",
      "template": "shared-zk-stack/v26/BridgeHub",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x85a0337c9b2db31a1b7e623ed99509d22ead32ce301ae832247ee1240f43eccb"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main registry (hub) for all the contracts in the ZK stack cluster and central entrypoint for bridge transactions. Stores important mappings like from chainId to diamond address, from chainId to parent CTM, from chainId to base token etc. A clone of Bridgehub is also deployed on each L2 chain, but this clone is only used on settlement layers.",
      "sinceTimestamp": 1717520639,
      "sinceBlock": 20019828,
      "values": {
        "$admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
        "$implementation": "0xcdd748d4A80CE6831080f1dA2CA9084CDa87Cc87",
        "$pastUpgrades": [
          [
            "2024-06-04T17:03:59.000Z",
            "0xdbb03a14ea223de3db4ac0916e78123bd0a1dde68e98952326d8382d29ac4d61",
            ["0x12f893689f9603991a8c22C249FFd0509Be95661"]
          ],
          [
            "2024-09-09T13:09:23.000Z",
            "0x21aec24a9df97ce4886d699314be627b0818da4d1987349421fb3df102c43f2b",
            ["0x509dA1BE24432F8804C4A9FF4a3c3f80284CDd13"]
          ],
          [
            "2025-01-08T16:00:35.000Z",
            "0xc90d135e4b8ab58304853f3be34b2fefd18c2a817d3d250e7b669e024d5277c5",
            ["0x0029e562c0b54C0b88cB22adF4346DbfEC87400c"]
          ],
          [
            "2025-03-31T08:00:47.000Z",
            "0x96a2f14c85022136ab3d4e568e9f1fe8f4611a4a2597f979332840259378f6b3",
            ["0xb720523EC3c615b069453bF4B0584CEbF034706f"]
          ],
          [
            "2025-04-28T12:33:11.000Z",
            "0x1fbaad1ac4bffb295da999881a37c1a52751ccad9b1533c0d2400fdca3631132",
            ["0xcdd748d4A80CE6831080f1dA2CA9084CDa87Cc87"]
          ]
        ],
        "$upgradeCount": 5,
        "admin": "0x2cf3bD6a9056b39999F3883955E183F655345063",
        "assetRouter": "0x8829AD80E425C646DAB305381ff105169FeEcE56",
        "chainsCreated": [
          {
            "chainId": 324,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x71d84c3404a6ae258E6471d4934B96a2033F9438"
          },
          {
            "chainId": 388,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x143524d0ac8D7f35a2133b6B0a7567e0E3393137"
          },
          {
            "chainId": 50104,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0xE1eeA4D6443b19D373Fe99De838b930Ef0ac2Ad3"
          },
          {
            "chainId": 543210,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0xCA8faaF5BA885fEC8C2c8CD49bADAa7589D173b3"
          },
          {
            "chainId": 2741,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0xA1f75f491f630037C4Ccaa2bFA22363CEC05a661"
          },
          {
            "chainId": 325,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x6308ee1Ebdb8D5E60bB88D3EA3b56CE326193e7D"
          },
          {
            "chainId": 61166,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x97440Bf040f0dfA402cf5D4F1e0f574309Ace871"
          },
          {
            "chainId": 1345,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x49664fFe2c2335c28631629606E26a6971aEf261"
          },
          {
            "chainId": 9637,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x9381D943BcC1254723F85E9A85FFcc4Bb3C8deF6"
          },
          {
            "chainId": 320,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x309EfA797ec5cd324Cb473F141F95214F3a25ab2"
          },
          {
            "chainId": 232,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x0000000000000000000000000000000000000000"
          },
          {
            "chainId": 1217,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x86F4487949Ac2fb0d5735870f1731e879e1d9680"
          },
          {
            "chainId": 2904,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0xc4F79BAb04664229eAEf3dBbc528Dd982df81EdD"
          },
          {
            "chainId": 375,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x6ec9117dCFBe2E8Dd747c9D45034E2DF9C7d2da0"
          },
          {
            "chainId": 51888,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x21bFaD8F0f781F367ACCb5276199B0c0E819CbD9"
          },
          {
            "chainId": 9075,
            "chainTypeManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0xFe94B8AEB7950a26C276EA615a6d3C7289Fd2ac3"
          }
        ],
        "getAllZKChainChainIDs": [
          324, 388, 50104, 543210, 2741, 325, 61166, 1345, 9637, 320, 232, 1217,
          2904, 375, 51888, 9075
        ],
        "getAllZKChains": [
          "0x32400084C286CF3E17e7B677ea9583e60a000324",
          "0x7b2DA4e77BAE0e0d23c53C3BE6650497d0576CFc",
          "0x05eDE6aD1f39B7A16C949d5C33a0658c9C7241e3",
          "0xdbD849acC6bA61F461CB8A41BBaeE2D673CA02d9",
          "0x2EDc71E9991A962c7FE172212d1aA9E50480fBb9",
          "0xe3e310cd8EE0C808794810AB50FE4BcCC5c7D89E",
          "0x5e64D248Eab336AB3Fd0BeC0CFe31D4AAE32E879",
          "0x89f90748A9a36C30A324481133fa198f4E16A824",
          "0xC8C4cB5AF7c723c7EfD360898B47920679f92C92",
          "0xF2704433d11842d15aa76BBF0E00407267a99C92",
          "0xc29d04A93F893700015138E3E334eB828dAC3cef",
          "0x410D7e4Ea1093A532eF9A7a2D5df84084B05ec24",
          "0x742A28e22277945BBAAa34810393bf6e8512576C",
          "0x270bF3978FeA60719Dd25A400EbE6969bF451493",
          "0xD231E2fD0DeC5993fCeae3E504930631876e8C63",
          "0x6E96D1172a6593D5027Af3c2664C5112Ca75F2B9"
        ],
        "L1_CHAIN_ID": 1,
        "l1CtmDeployer": "0x6078F6B379f103de1Aa912dc46bb8Df0c8809860",
        "MAX_NUMBER_OF_ZK_CHAINS": 100,
        "messageRoot": "0x5Ce9257755391D1509cD4eC1899d3F88A57BB4aD",
        "migrationPaused": false,
        "migrations": [],
        "owner": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "settlementLayers": {},
        "sharedBridge": "0x8829AD80E425C646DAB305381ff105169FeEcE56"
      },
      "fieldMeta": {
        "migrationPaused": {
          "severity": "HIGH",
          "description": "If false, chains can migrate to whitelisted settlement layers."
        },
        "chainsCreated": {
          "description": "All new chains created go thorugh the central bridgehub and are stored here with their respective STMs."
        },
        "settlementLayers": {
          "severity": "HIGH",
          "description": "New settlement layers and their whitelist status. Chains can be migrated to whitelisted settlement layers by their chain admin."
        },
        "migrations": {
          "severity": "HIGH",
          "description": "zk chain migrations that were started"
        }
      },
      "implementationNames": {
        "0x303a465B659cBB0ab36eE643eA362c509EEb5213": "TransparentUpgradeableProxy",
        "0xcdd748d4A80CE6831080f1dA2CA9084CDa87Cc87": "Bridgehub"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "address": "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x310E84b3063bBC5C86ED4Bf4D25E2fc3DF1B9735",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x3133781381bC58564D5e9888c208ED0b7BD7721F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x34Ea62D4b9bBB8AD927eFB6ab31E3Ab3474aC93a",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1721989115,
      "sinceBlock": 20390079,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xd20a09d16964aefc8c8c5355C5141f54274521c7",
          "0xDF1aa0495C815A1b9156796a741885a4834EC012"
        ],
        "$threshold": 1,
        "domainSeparator": "0xeafbffc5c2350affc74a6c19b507e4a7df5631d4cc66f44e650bfc37f10c33a1",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 2 (50%)",
        "nonce": 5,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x34Ea62D4b9bBB8AD927eFB6ab31E3Ab3474aC93a": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "GnosisSafe",
      "address": "0x35eA56fd9eAd2567F339Eb9564B6940b9DD5653F",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1722377435,
      "sinceBlock": 20422264,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x78834238C8F4CA04c73256D221cd6a1d29b9A81c",
          "0x6DA259FD6b42D6bAB9D22C01418F87c13a271478",
          "0xa5D0084A766203b463b3164DFc49D91509C12daB",
          "0x53A26f48ED901336D7C165B85E6F43d9F8dBeAA7",
          "0x3846c3A30E62075Fa916216b35EF04B8F53931f6"
        ],
        "$threshold": 2,
        "domainSeparator": "0x04836bd2dbdcbf68aef3b82e83babee1e988fb3c6fe1e9319d77a125e02a66cd",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 5 (40%)",
        "nonce": 7,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x35eA56fd9eAd2567F339Eb9564B6940b9DD5653F": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x3620B9e7c75E09cCC37458c7B6EE6c23D8Ee4f0f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x371F6E45784E7DFBEA2dc18Edb68cD90aD530E6c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x3766Ae19984f845bb149E05b6F7E14FFB4f85a1A",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x3846c3A30E62075Fa916216b35EF04B8F53931f6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x3888777686F0b0d8c3108fc22ad8DE9E049bE26F",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1722184895,
      "sinceBlock": 20406309,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xB1072fD3a5EA72B42e063e5A61963d00eeF655DF",
          "0xEE8fAC9051243379dAAA02c24e07D29F22d73b4E"
        ],
        "$threshold": 1,
        "domainSeparator": "0xd496775f892bc2f3850436422dcf9f0fadf93882c5a23e5da215381f7cad0fa4",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 2 (50%)",
        "nonce": 1,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x3888777686F0b0d8c3108fc22ad8DE9E049bE26F": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x3F0009D00cc78979d00Eb635490F23E8d6aCc481",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x438Df339934B6Fb9dA8E0DC6f0Ba0bca22B8A7b5",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x441e5c8910Ef39996B2D01499509861228cbc2d1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x4A333c167Ce76C46149c6B0197977ae02aaeC929",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Matter Labs Multisig",
      "address": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
          "description": "create new zk chains (based on the current version), register tokens (ZK cluster Admin role).",
          "role": ".admin",
          "via": [{ "address": "0x2cf3bD6a9056b39999F3883955E183F655345063" }]
        },
        {
          "permission": "interact",
          "from": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
          "description": "revert batches for any connected chain (ZK cluster Admin role).",
          "role": ".admin",
          "via": [{ "address": "0x2cf3bD6a9056b39999F3883955E183F655345063" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x2cf3bD6a9056b39999F3883955E183F655345063",
          "role": ".owner"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1666872275,
      "sinceBlock": 15839298,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x4A333c167Ce76C46149c6B0197977ae02aaeC929",
          "0x3F0009D00cc78979d00Eb635490F23E8d6aCc481",
          "0x8A23548a640De1137e58e2D9600e1c5913E3D674",
          "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
          "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
          "0xFAdb20191Ab38362C50f52909817B74214CA79AE",
          "0xfd03dA3aeb6807a98db96C1704Ea4CFf031BaEd2",
          "0x700DA14328eC2F81053E5B6aAE4803E16BEdF1df"
        ],
        "$threshold": 5,
        "domainSeparator": "0xd3e32b4e9e95656dc35c609ae0fbcc0cea466ebecc8227025a2d3edc728b79fb",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "5 of 8 (63%)",
        "nonce": 200,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x4e4943346848c4867F81dFb37c4cA9C5715A7828": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x538612F6eba6ff80FBD95D60dCDee16b8FfF2c0f",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814339,
      "sinceBlock": 20292668,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x227230CD05e89f41E67df3E5fC61B18411d147A9"],
        "$threshold": 1,
        "domainSeparator": "0x63127490e98ceb540db8dca78eb231476f5b4061dc5139e45031491bae94addf",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x538612F6eba6ff80FBD95D60dCDee16b8FfF2c0f": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x53A26f48ED901336D7C165B85E6F43d9F8dBeAA7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x55c671BcE13120387Ded710A1d1b80C0e3d8E857",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814399,
      "sinceBlock": 20292673,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x9f708301AA8CB86A06D23152fE67F2bFaa094cA1"],
        "$threshold": 1,
        "domainSeparator": "0x567c3af0158b9327873cbee71998af25aff119723a8693a6fcdba100bf3024e2",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 5,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x55c671BcE13120387Ded710A1d1b80C0e3d8E857": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x56B3120c32AE9C3188fafc5Cc542F9c53B0b2222",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x590926dBCDfD19627c3BbD2A6Eb96DeC7a3AbF69",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814195,
      "sinceBlock": 20292656,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x0e621b0A275A207211e161Ee997aA80661Bc1bcf"],
        "$threshold": 1,
        "domainSeparator": "0xbb8cfa8774ee78c158a0b696258e52598f6a18e51eeb8e88670c7f80ade08f8c",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x590926dBCDfD19627c3BbD2A6Eb96DeC7a3AbF69": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "MessageRoot",
      "address": "0x5Ce9257755391D1509cD4eC1899d3F88A57BB4aD",
      "type": "Contract",
      "template": "shared-zk-stack/v26/MessageRoot",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x9fe7372b4f7ead74634ad13ce858c9a6242995f2a40facaa212e524a02b506a2"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Aggregates remote bridge message roots from all ZK stack chains. To be used with the Gateway when deployed.",
      "ignoreInWatchMode": ["sharedTree"],
      "sinceTimestamp": 1739109035,
      "sinceBlock": 21809367,
      "values": {
        "$admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
        "$implementation": "0x19347Fb8eD3E8e35eb4a01c8B18Bd330194Cf0ad",
        "$pastUpgrades": [
          [
            "2025-02-09T13:50:35.000Z",
            "0xc47e24e8cc6c7a493bbb1a46b74f1ff113fad2e35d7596aa688df5bf0402fc65",
            ["0x19347Fb8eD3E8e35eb4a01c8B18Bd330194Cf0ad"]
          ]
        ],
        "$upgradeCount": 1,
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "chainCount": 17,
        "getAggregatedRoot": "0x3915543a6d021896bf955b7f4eb63ef57a27b8b1412eb83de831d169ff0db864",
        "getChainRoot": [
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "sharedTree": { "_height": 5, "_leafNumber": 17 }
      },
      "implementationNames": {
        "0x5Ce9257755391D1509cD4eC1899d3F88A57BB4aD": "TransparentUpgradeableProxy",
        "0x19347Fb8eD3E8e35eb4a01c8B18Bd330194Cf0ad": "MessageRoot"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "address": "0x5F18752518d81E4AFbB28341EDFba9Aa0E16707C",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "Guardians",
      "address": "0x600dA620Ab29F41ABC6596a15981e14cE58c86b8",
      "type": "Contract",
      "template": "shared-zk-stack/Guardians",
      "sourceHashes": [
        "0xe702d26fd65786b2e88bd0998f300af1fa11cd1a733a78e5da7ec0699a60e5ce"
      ],
      "proxyType": "immutable",
      "description": "Custom Multisig implementation that has a general threshold of 5 and a specific threshold for extending the legal voting period of 2.",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
          "description": "extend the legal veto period, approve a protocol upgrade.",
          "role": ".guardians"
        },
        {
          "permission": "interact",
          "from": "0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6",
          "description": "one of its 3/3 signers.",
          "role": ".GUARDIANS"
        }
      ],
      "sinceTimestamp": 1738855979,
      "sinceBlock": 21788383,
      "values": {
        "$immutable": true,
        "$members": [
          "0x015318c16AE443a20DE0A776dB06a59F0D279057",
          "0x178D8Eb1A1fb81B5102808A83318Bb04C6a9fC6D",
          "0x2A90830083C5Ca1f18d7AA7fCDC2998f93475384",
          "0x538612F6eba6ff80FBD95D60dCDee16b8FfF2c0f",
          "0x55c671BcE13120387Ded710A1d1b80C0e3d8E857",
          "0x590926dBCDfD19627c3BbD2A6Eb96DeC7a3AbF69",
          "0x6D26874130A174839b9cd8CB87Ed4E09D0c1a5f0",
          "0xCe7a3dFcc35602155809920Ff65e093aa726f6cf"
        ],
        "$threshold": 5,
        "APPROVE_UPGRADE_GUARDIANS_THRESHOLD": 5,
        "CANCEL_L2_GOVERNOR_PROPOSAL_THRESHOLD": 5,
        "EIP1271_THRESHOLD": 5,
        "eip712Domain": {
          "fields": "0x0f",
          "name": "Guardians",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x600dA620Ab29F41ABC6596a15981e14cE58c86b8",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "EXTEND_LEGAL_VETO_THRESHOLD": 2,
        "nonce": 0,
        "PROPOSE_L2_GOVERNOR_PROPOSAL_THRESHOLD": 5,
        "PROTOCOL_UPGRADE_HANDLER": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "ZKSYNC_ERA": "0x32400084C286CF3E17e7B677ea9583e60a000324"
      },
      "implementationNames": {
        "0x600dA620Ab29F41ABC6596a15981e14cE58c86b8": "Guardians"
      },
      "references": [
        {
          "text": "Guardians - ZK Nation docs",
          "href": "https://docs.zknation.io/zksync-governance/schedule-4-zksync-guardians"
        }
      ],
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "name": "CTMDeploymentTracker",
      "address": "0x6078F6B379f103de1Aa912dc46bb8Df0c8809860",
      "type": "Contract",
      "template": "shared-zk-stack/v26/CTMDeploymentTracker",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xb55fe571d010f5a5fa7f06d0aa6602a1a6b406ed8c3163fb400b0f6a947a4bba"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Asset deployment tracker where the 'asset' is a ChainTypeManager. The registering of asset IDs for ChainTypeManagers is necessary to be able to migrate them to a given settlement layer, for example the Gateway.",
      "ignoreInWatchMode": ["sharedTree"],
      "sinceTimestamp": 1739109203,
      "sinceBlock": 21809380,
      "values": {
        "$admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
        "$implementation": "0x1E405E5cdF127Dc98Eb490AB0e97345f892Ff7E1",
        "$pastUpgrades": [
          [
            "2025-02-09T13:53:23.000Z",
            "0x8b5a21b3473a638022e84097a99c4668bb0a454686b737e87957729c4822741b",
            ["0x1E405E5cdF127Dc98Eb490AB0e97345f892Ff7E1"]
          ]
        ],
        "$upgradeCount": 1,
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "L1_ASSET_ROUTER": "0x8829AD80E425C646DAB305381ff105169FeEcE56",
        "owner": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0x6078F6B379f103de1Aa912dc46bb8Df0c8809860": "TransparentUpgradeableProxy",
        "0x1E405E5cdF127Dc98Eb490AB0e97345f892Ff7E1": "CTMDeploymentTracker"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "address": "0x610e45F112e0c8a9aA7137677C83E7A198A1b991",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x64E2AfcFE648201b2F4a749aF0B7229ecfa44281",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x663ec2BfB273447DC236A646d6dAAA333aAB08f7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "SecurityCouncil",
      "address": "0x66E4431266DC7E04E7d8b7FE9d2181253df7F410",
      "type": "Contract",
      "template": "shared-zk-stack/SecurityCouncil",
      "sourceHashes": [
        "0x153a01097ad00f13ce2cb9f0178a19858cb44dd75a40132d64d7fb1450cc0bf5"
      ],
      "proxyType": "immutable",
      "description": "Custom Multisig implementation that has a general threshold of 9 but also specific thresholds for upgrade approvals (6) or soft freezes (3).",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
          "description": "soft freeze, hard freeze, approve a protocol upgrade.",
          "role": ".securityCouncil"
        },
        {
          "permission": "interact",
          "from": "0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6",
          "description": "one of its 3/3 signers.",
          "role": ".SECURITY_COUNCIL"
        }
      ],
      "sinceTimestamp": 1738855991,
      "sinceBlock": 21788384,
      "values": {
        "$immutable": true,
        "$members": [
          "0x13f07d9BF17615f6a17F272fe1A913168C275A66",
          "0x34Ea62D4b9bBB8AD927eFB6ab31E3Ab3474aC93a",
          "0x35eA56fd9eAd2567F339Eb9564B6940b9DD5653F",
          "0x3888777686F0b0d8c3108fc22ad8DE9E049bE26F",
          "0x69462a81ba94D64c404575f1899a464F123497A2",
          "0x725065b4eB99294BaaE57AdDA9c32e42F453FA8A",
          "0x84BF0Ac41Eeb74373Ddddae8b7055Bf2bD3CE6E0",
          "0x9B39Ea22e838B316Ea7D74e7C4B07d91D51ccA88",
          "0x9B8Be3278B7F0168D82059eb6BAc5991DcdfA803",
          "0xB7aC3A79A23B148c85fba259712c5A1e7ad0ca44",
          "0xc3Abc9f9AA75Be8341E831482cdA0125a7B1A23e",
          "0xFB90Da9DC45378A1B50775Beb03aD10C7E8DC231"
        ],
        "$threshold": 9,
        "APPROVE_UPGRADE_SECURITY_COUNCIL_THRESHOLD": 6,
        "EIP1271_THRESHOLD": 9,
        "eip712Domain": {
          "fields": "0x0f",
          "name": "SecurityCouncil",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x66E4431266DC7E04E7d8b7FE9d2181253df7F410",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "HARD_FREEZE_THRESHOLD": 9,
        "hardFreezeNonce": 0,
        "PROTOCOL_UPGRADE_HANDLER": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "RECOMMENDED_SOFT_FREEZE_THRESHOLD": 3,
        "SOFT_FREEZE_CONSERVATIVE_THRESHOLD": 9,
        "softFreezeNonce": 0,
        "softFreezeThreshold": 3,
        "softFreezeThresholdSettingNonce": 0,
        "UNFREEZE_THRESHOLD": 9,
        "unfreezeNonce": 0
      },
      "fieldMeta": {
        "softFreezeNonce": {
          "severity": "HIGH",
          "description": "Increments with each softFreeze (freezes ALL Hyperchains (blocks Mailbox and Executor facets) connected to the main STM for SOFT_FREEZE_PERIOD"
        },
        "hardFreezeNonce": {
          "severity": "HIGH",
          "description": "Increments with each hardFreeze (freezes ALL Hyperchains (blocks Mailbox and Executor facets) connected to the main STM for HARD_FREEZE_PERIOD"
        }
      },
      "implementationNames": {
        "0x66E4431266DC7E04E7d8b7FE9d2181253df7F410": "SecurityCouncil"
      },
      "references": [
        {
          "text": "Security Council members - ZK Nation docs",
          "href": "https://docs.zknation.io/zksync-governance/schedule-3-zksync-security-council"
        }
      ],
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "address": "0x670B24610DF99b1685aEAC0dfD5307B92e0cF4d7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x6754CaFCe32a1bD1A8c88ABc19a113365b85917F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x69462a81ba94D64c404575f1899a464F123497A2",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1722412487,
      "sinceBlock": 20425173,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x3766Ae19984f845bb149E05b6F7E14FFB4f85a1A",
          "0xaaAdAa000867fb883089B7e528d7eA96937b777f",
          "0x5F18752518d81E4AFbB28341EDFba9Aa0E16707C",
          "0xF3d913D11dd577DDe5da4f2AA9611Aa799185C46",
          "0x371F6E45784E7DFBEA2dc18Edb68cD90aD530E6c",
          "0x23aaaD48A6409d98Fcc2e9061CD2F437ff4E5839",
          "0x6754CaFCe32a1bD1A8c88ABc19a113365b85917F",
          "0xe968FB773e54f77350A427B057FDB44e6592E338",
          "0x7be0FF978bB8C96F78fb1B1fC6c04b5b572a80B8",
          "0x670B24610DF99b1685aEAC0dfD5307B92e0cF4d7",
          "0x663ec2BfB273447DC236A646d6dAAA333aAB08f7"
        ],
        "$threshold": 1,
        "domainSeparator": "0x621efdc1151f249d5b9c743046fb22f2d68677322af6ab4ff5f75e97c246c303",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 11 (9%)",
        "nonce": 15,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x69462a81ba94D64c404575f1899a464F123497A2": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "GnosisSafe",
      "address": "0x6D26874130A174839b9cd8CB87Ed4E09D0c1a5f0",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814051,
      "sinceBlock": 20292645,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x3620B9e7c75E09cCC37458c7B6EE6c23D8Ee4f0f"],
        "$threshold": 1,
        "domainSeparator": "0x34cfad626b7297f5a86f1c6dc31bc8bf00160b739ac22f8c3d3cb092dfb10e8e",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x6D26874130A174839b9cd8CB87Ed4E09D0c1a5f0": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x6DA259FD6b42D6bAB9D22C01418F87c13a271478",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x6F2A8Ee9452ba7d336b3fba03caC27f7818AeAD6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x700DA14328eC2F81053E5B6aAE4803E16BEdF1df",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "RollupL1DAValidator",
      "address": "0x72213dfe8CA61B0A782970dCFebFb877778f9119",
      "type": "Contract",
      "template": "shared-zk-stack/v26/RollupL1DAValidator",
      "sourceHashes": [
        "0x0c7b1ef84ead12e6b034e6e4eb7cc9e51dba7272fe1d182749a43980da7a3932"
      ],
      "proxyType": "immutable",
      "description": "Contract that verifies the data availability of ethereum calldata and blobs. Can be used by ZK stack rollups as the L1 part of a DAValidator pair.",
      "sinceTimestamp": 1739108915,
      "sinceBlock": 21809357,
      "values": { "$immutable": true },
      "implementationNames": {
        "0x72213dfe8CA61B0A782970dCFebFb877778f9119": "RollupL1DAValidator"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "name": "GnosisSafe",
      "address": "0x725065b4eB99294BaaE57AdDA9c32e42F453FA8A",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1721854115,
      "sinceBlock": 20378889,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x6F2A8Ee9452ba7d336b3fba03caC27f7818AeAD6"],
        "$threshold": 1,
        "domainSeparator": "0x0ced660004f5095df7762f0dbefcbf5716e6c3bac0d6b138f3184debb19a425a",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 3,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x725065b4eB99294BaaE57AdDA9c32e42F453FA8A": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x78834238C8F4CA04c73256D221cd6a1d29b9A81c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x7be0FF978bB8C96F78fb1B1fC6c04b5b572a80B8",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x7DcA405b791CdE56aA60f036C95ec2Efe283647e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x84BF0Ac41Eeb74373Ddddae8b7055Bf2bD3CE6E0",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1721755031,
      "sinceBlock": 20370671,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x2Fd57fdFba5aABbFdc43Fd450c2817D1401E72F2",
          "0x0F3F84b0aaaA6f577468F6708e7A5E09e59dbfA1",
          "0xB2Be7F1957Fe3C3Be912e8C736d7e6e8459d386c",
          "0xDFbD13B78010BF2110a168FA59b682c8a6D96564",
          "0x3133781381bC58564D5e9888c208ED0b7BD7721F"
        ],
        "$threshold": 2,
        "domainSeparator": "0xa9f70aaa6c7cfdaa67fafe694ff2b98166fca2a9f73c398e38e4041294a82692",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 5 (40%)",
        "nonce": 6,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x84BF0Ac41Eeb74373Ddddae8b7055Bf2bD3CE6E0": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "L1AssetRouter",
      "address": "0x8829AD80E425C646DAB305381ff105169FeEcE56",
      "type": "Contract",
      "template": "shared-zk-stack/v26/L1AssetRouter",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xba83b7c168ffa78d2e714cfb804ca1cd4f33807f6e9b2abb2820457d6d2bf77a"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Part of the v26 upgrade: Canonical central asset router for all ZK stack chains (not escrowing funds).",
      "sinceTimestamp": 1739109071,
      "sinceBlock": 21809370,
      "values": {
        "$admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
        "$implementation": "0xcaD49896F3d54d9A93eDdBFd370c8A4a1b239315",
        "$pastUpgrades": [
          [
            "2025-02-09T13:51:11.000Z",
            "0x2c945c00f7a9f08b1a0bc749a08d76ca4cd5ee6f8890011ab43898e9fa1fcdf2",
            ["0x20E17D0280DeaBb78f7c193E3Ef05F62adC0936E"]
          ],
          [
            "2025-04-28T12:33:11.000Z",
            "0x1fbaad1ac4bffb295da999881a37c1a52751ccad9b1533c0d2400fdca3631132",
            ["0xcaD49896F3d54d9A93eDdBFd370c8A4a1b239315"]
          ]
        ],
        "$upgradeCount": 2,
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "ERA_CHAIN_ID": 324,
        "ETH_TOKEN_ASSET_ID": "0x05e1c3ae4b9732444ae25217ac7666e46fa365fee1768de00c9fcb65532b7609",
        "L1_CHAIN_ID": 1,
        "L1_NULLIFIER": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
        "L1_WETH_TOKEN": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "legacyBridge": "0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063",
        "nativeTokenVault": "0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6",
        "owner": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0x8829AD80E425C646DAB305381ff105169FeEcE56": "TransparentUpgradeableProxy",
        "0xcaD49896F3d54d9A93eDdBFd370c8A4a1b239315": "L1AssetRouter"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x8A23548a640De1137e58e2D9600e1c5913E3D674",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x8b0c64CcaB94d4618Ef834F396F622f61F2b013D",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0x98E24e308c4B7cdADcf4d116B2B8939a21420bA1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0x9B39Ea22e838B316Ea7D74e7C4B07d91D51ccA88",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1721748419,
      "sinceBlock": 20370122,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x438Df339934B6Fb9dA8E0DC6f0Ba0bca22B8A7b5",
          "0xd9f8460f3081dC29dF1e3b6e5404B245B96F4A30",
          "0xcD6998D20876155D37aEC0dB4C19d63EEAEf058F"
        ],
        "$threshold": 1,
        "domainSeparator": "0xf9b2e53195bad3bbaff6d49c13c65400176ea7f034402528250b7875f990ea27",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 3 (33%)",
        "nonce": 4,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x9B39Ea22e838B316Ea7D74e7C4B07d91D51ccA88": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "GnosisSafe",
      "address": "0x9B8Be3278B7F0168D82059eb6BAc5991DcdfA803",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1721951675,
      "sinceBlock": 20386973,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xe2eB80C72Fa12Ba50B3bD6545709DC153D5b26D2",
          "0x98E24e308c4B7cdADcf4d116B2B8939a21420bA1",
          "0xc8E2806A97413b5496A1ba6050b517CC98D0EfCA",
          "0x7DcA405b791CdE56aA60f036C95ec2Efe283647e",
          "0x239cCb0a6Fc59fc6A53584613707F815503a6aAF",
          "0xC2Cd2330A575af7f124E07820E7c4AbfaeD02392",
          "0xcb218CD15fAa4dbAc294b15C7cE99482783d7ad6",
          "0xd757D6A02cD5af9AEF163D7eB8034f75ac22B553",
          "0xBab69188f07F2569A41C5B875e147216D974eB3e"
        ],
        "$threshold": 1,
        "domainSeparator": "0x8990652fa175690b7ef4cf7f1ae85971a55c587ff8e565372999ea62269e9742",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 9 (11%)",
        "nonce": 15,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0x9B8Be3278B7F0168D82059eb6BAc5991DcdfA803": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0x9f708301AA8CB86A06D23152fE67F2bFaa094cA1",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xA10fcD4B012467FAC48ce63838B7bE56AB16bE52",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xa376AaF645dbd9b4f501B2A8a97bc21DcA15B001",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xa5D0084A766203b463b3164DFc49D91509C12daB",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xaaAdAa000867fb883089B7e528d7eA96937b777f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xafc7805c640C4A9E5D28f6A5Eae23b50e59B831c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xB1072fD3a5EA72B42e063e5A61963d00eeF655DF",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xB2Be7F1957Fe3C3Be912e8C736d7e6e8459d386c",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xB5676D771b538D8E184EaCB1Cc7a963a4bF99252",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xb799FF3DeF706045B5061B22d748E8F52737415d",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0xB7aC3A79A23B148c85fba259712c5A1e7ad0ca44",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1721772071,
      "sinceBlock": 20372086,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xdF28907A6A272fa06333a197d7F0379A0f8f00aa",
          "0xafc7805c640C4A9E5D28f6A5Eae23b50e59B831c",
          "0xCe20135Ac0253650E28Ea14911c69F1fADD8b06f"
        ],
        "$threshold": 1,
        "domainSeparator": "0x23783d9d5ae0c0d12c7218ba04c50305272dd83f04c5813e3da6706fca6286c1",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 3 (33%)",
        "nonce": 13,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xB7aC3A79A23B148c85fba259712c5A1e7ad0ca44": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0xb9e3C7BbC0677dD018254C74B5ed2Ad90a0dba9F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xBab69188f07F2569A41C5B875e147216D974eB3e",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ZK Foundation Multisig",
      "address": "0xbC1653bd3829dfEc575AfC3816D4899cd103B51c",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6",
          "description": "one of its 3/3 signers.",
          "role": ".ZK_FOUNDATION_SAFE"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1721665487,
      "sinceBlock": 20363246,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xA10fcD4B012467FAC48ce63838B7bE56AB16bE52",
          "0x56B3120c32AE9C3188fafc5Cc542F9c53B0b2222",
          "0x441e5c8910Ef39996B2D01499509861228cbc2d1",
          "0x0B2E7ffbcD1E3e6f5034555Fb638889FE7564709",
          "0x610e45F112e0c8a9aA7137677C83E7A198A1b991"
        ],
        "$threshold": 3,
        "domainSeparator": "0xc1ce7878e80d133721dfd6dabac04460cfb8e96b0f8a46b772c445cb13550400",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 4,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xbC1653bd3829dfEc575AfC3816D4899cd103B51c": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      }
    },
    {
      "name": "L1NativeTokenVault",
      "address": "0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6",
      "type": "Contract",
      "template": "shared-zk-stack/v26/L1NativeTokenVault",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xb5c84cdd8085d4ad38124e19b8be87360c9401f9621534284de4ed5fa69c3b63"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Part of the v26 upgrade: Canonical central asset escrow for all ZK stack chains.",
      "sinceTimestamp": 1739109131,
      "sinceBlock": 21809375,
      "values": {
        "$admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
        "$implementation": "0xDf3a3E51aEABB5da548F854B608E3C9De1ae2947",
        "$pastUpgrades": [
          [
            "2025-02-09T13:52:11.000Z",
            "0x50619c1506e8e93cc28017847b5690b6a0784bc2b08c1dbb8555b71525b72351",
            ["0x40B1060a114380f40faC6869c5B383f47e61530c"]
          ],
          [
            "2025-04-28T12:33:11.000Z",
            "0x1fbaad1ac4bffb295da999881a37c1a52751ccad9b1533c0d2400fdca3631132",
            ["0xDf3a3E51aEABB5da548F854B608E3C9De1ae2947"]
          ]
        ],
        "$upgradeCount": 2,
        "ASSET_ROUTER": "0x8829AD80E425C646DAB305381ff105169FeEcE56",
        "BASE_TOKEN_ASSET_ID": "0x05e1c3ae4b9732444ae25217ac7666e46fa365fee1768de00c9fcb65532b7609",
        "bridgedTokenBeacon": "0xb3618AbcbA795588C43eA602dD0Cd6E952A85a6A",
        "L1_CHAIN_ID": 1,
        "L1_NULLIFIER": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
        "owner": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "WETH_TOKEN": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "implementationNames": {
        "0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6": "TransparentUpgradeableProxy",
        "0xDf3a3E51aEABB5da548F854B608E3C9De1ae2947": "L1NativeTokenVault"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
      "type": "Contract",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x04a556db1ea1a651e1174247090ad4c7105b455feab1a9672d5c4cd113b9ff0b"
      ],
      "proxyType": "immutable",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0x5Ce9257755391D1509cD4eC1899d3F88A57BB4aD",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0x6078F6B379f103de1Aa912dc46bb8Df0c8809860",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0x8829AD80E425C646DAB305381ff105169FeEcE56",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
          "role": "admin"
        },
        {
          "permission": "upgrade",
          "from": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
          "role": "admin"
        }
      ],
      "sinceTimestamp": 1717520627,
      "sinceBlock": 20019827,
      "values": {
        "$immutable": true,
        "owner": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3"
      },
      "implementationNames": {
        "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1": "ProxyAdmin"
      }
    },
    {
      "address": "0xC2Cd2330A575af7f124E07820E7c4AbfaeD02392",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ChainTypeManager",
      "address": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
      "type": "Contract",
      "template": "shared-zk-stack/v26/ChainTypeManager",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x5462a6c55c6e9f2d98c21f2588b2b9a4de1dc41ba0c10906f8965e21849a3a52"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Defines L2 diamond contract versions, creation and upgrade data and the proof system for all ZK stack chains connected to it. ZK chains are children of this central contract and can only upgrade to versions that were previously registered here. The current protocol version is 0,27,0.",
      "sinceTimestamp": 1717520663,
      "sinceBlock": 20019830,
      "values": {
        "$admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
        "$implementation": "0x6D598c77AF57Bfa17201483400615c61819dD45A",
        "$pastUpgrades": [
          [
            "2024-06-04T17:04:23.000Z",
            "0x514bbf46d227eee8567825bf5c8ee1855aa8a1916f7fee7b191e2e3d5ecba849",
            ["0x8279B7E48fA074f966385d87AEf29Bd031e54fD5"]
          ],
          [
            "2024-08-06T08:56:59.000Z",
            "0xc1e73b06359759201b76ab7654e0bd49011f33c0230dfc24423985fbf36ea817",
            ["0xed1Dc7F0Be2B19cb02a2476150C8ea24A37c5274"]
          ],
          [
            "2025-01-08T16:00:35.000Z",
            "0xc90d135e4b8ab58304853f3be34b2fefd18c2a817d3d250e7b669e024d5277c5",
            ["0xb39B175a5E0945F2FB6A7F31764c0e31D9cF5b75"]
          ],
          [
            "2025-03-31T08:00:47.000Z",
            "0x96a2f14c85022136ab3d4e568e9f1fe8f4611a4a2597f979332840259378f6b3",
            ["0xA3bCcAEe38cb0273A979118a0DE483E47D50F6Cb"]
          ],
          [
            "2025-04-28T12:33:11.000Z",
            "0x1fbaad1ac4bffb295da999881a37c1a52751ccad9b1533c0d2400fdca3631132",
            ["0x6D598c77AF57Bfa17201483400615c61819dD45A"]
          ]
        ],
        "$upgradeCount": 5,
        "admin": "0x2cf3bD6a9056b39999F3883955E183F655345063",
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "getSemverProtocolVersion": [0, 27, 0],
        "initialCutHash": "0xd20b12f6c5152e7197db37e19b177d22a369c32230fbbc2bfeec5b39788afd8c",
        "initialForceDeploymentHash": "0x48dac090fa2f13afa11b2ea3f456fb424cef704d997bd137575a5fe9c5c3241a",
        "l1GenesisUpgrade": "0xC5bBb8bA0302215Da343D47EC617649E59c7d61C",
        "owner": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "protocolVersion": 115964116992,
        "serverNotifierAddress": "0x0000000000000000000000000000000000000000",
        "storedBatchZero": "0xe3199bb31e1acf8a1667692d8536edcce799c58cfebe85e3e0adeb0ae788b291",
        "validatorTimelock": "0x8c0Bfc04AdA21fd496c55B8C50331f904306F564"
      },
      "implementationNames": {
        "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C": "TransparentUpgradeableProxy",
        "0x6D598c77AF57Bfa17201483400615c61819dD45A": "ChainTypeManager"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "name": "GnosisSafe",
      "address": "0xc3Abc9f9AA75Be8341E831482cdA0125a7B1A23e",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1722034463,
      "sinceBlock": 20393837,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xB5676D771b538D8E184EaCB1Cc7a963a4bF99252",
          "0x310E84b3063bBC5C86ED4Bf4D25E2fc3DF1B9735",
          "0xb9e3C7BbC0677dD018254C74B5ed2Ad90a0dba9F",
          "0x0298512Bf8e7AC383c0A353354E3Ff66216654Ac"
        ],
        "$threshold": 1,
        "domainSeparator": "0x8a595a96d77e992bb9ff8b20fc59215c86b17154838b5386d6b264728a1f4462",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 4 (25%)",
        "nonce": 10,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xc3Abc9f9AA75Be8341E831482cdA0125a7B1A23e": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "name": "L1GenesisUpgrade",
      "address": "0xC5bBb8bA0302215Da343D47EC617649E59c7d61C",
      "type": "Contract",
      "template": "shared-zk-stack/v26/L1GenesisUpgrade",
      "sourceHashes": [
        "0xb026196cfab337e1604a0cb6f378b0598841b3bf3e05d8d82403801eff55a3b6"
      ],
      "proxyType": "immutable",
      "description": "Diamond implementation code to initialize new ZK chains. Used to set their chainID.",
      "ignoreInWatchMode": ["sharedTree"],
      "sinceTimestamp": 1743440243,
      "sinceBlock": 22168232,
      "values": { "$immutable": true },
      "implementationNames": {
        "0xC5bBb8bA0302215Da343D47EC617649E59c7d61C": "L1GenesisUpgrade"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0xc8E2806A97413b5496A1ba6050b517CC98D0EfCA",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xcb218CD15fAa4dbAc294b15C7cE99482783d7ad6",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xcD6998D20876155D37aEC0dB4C19d63EEAEf058F",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xCe20135Ac0253650E28Ea14911c69F1fADD8b06f",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0xCe7a3dFcc35602155809920Ff65e093aa726f6cf",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814279,
      "sinceBlock": 20292663,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x8b0c64CcaB94d4618Ef834F396F622f61F2b013D"],
        "$threshold": 1,
        "domainSeparator": "0x5c8369ad7fcba86448de116769e02200c80a424011c14ba09952def6873dbef7",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xCe7a3dFcc35602155809920Ff65e093aa726f6cf": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0xd20a09d16964aefc8c8c5355C5141f54274521c7",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xd757D6A02cD5af9AEF163D7eB8034f75ac22B553",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "L1Nullifier",
      "address": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
      "type": "Contract",
      "template": "shared-zk-stack/v26/L1Nullifier",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x56a8f9e2feec75535d897e8159a8cdf1546d81df34f77964c66bc908820e8687"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract responsible for bookkeeping L1 bridging transactions. Used to finalize withdrawals and reclaim failed deposits. Does not escrow funds.",
      "sinceTimestamp": 1717521479,
      "sinceBlock": 20019898,
      "values": {
        "$admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
        "$implementation": "0x3B4FD84B27fE7B9247d5B8C6d1A29B2889C81518",
        "$pastUpgrades": [
          [
            "2024-06-04T17:17:59.000Z",
            "0xce3d72f23297a281cb58502dcc6a6c029489316a2faf9c4ef83141b1b254017c",
            ["0xCba1aF8f0bB223b2544F8eB8f69d1c7960f788dB"]
          ],
          [
            "2024-08-26T07:51:11.000Z",
            "0xaec33529b74f8f9d56d7aa568c6358be299228a85e49ea85cb106eca5af7367c",
            ["0xb56A8225A745756DD215faf22E4796f373561AcD"]
          ],
          [
            "2025-01-08T16:00:35.000Z",
            "0xc90d135e4b8ab58304853f3be34b2fefd18c2a817d3d250e7b669e024d5277c5",
            ["0xF5A14DCdde1143443f06033200D345c2a2828A99"]
          ],
          [
            "2025-03-31T08:00:47.000Z",
            "0x96a2f14c85022136ab3d4e568e9f1fe8f4611a4a2597f979332840259378f6b3",
            ["0xda2866AF0e170d0867a3F3bB52Db10D6E09Df78A"]
          ],
          [
            "2025-04-28T12:33:11.000Z",
            "0x1fbaad1ac4bffb295da999881a37c1a52751ccad9b1533c0d2400fdca3631132",
            ["0x3B4FD84B27fE7B9247d5B8C6d1A29B2889C81518"]
          ]
        ],
        "$upgradeCount": 5,
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "l1AssetRouter": "0x8829AD80E425C646DAB305381ff105169FeEcE56",
        "l1NativeTokenVault": "0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6",
        "legacyBridge": "0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063",
        "owner": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      },
      "implementationNames": {
        "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB": "TransparentUpgradeableProxy",
        "0x3B4FD84B27fE7B9247d5B8C6d1A29B2889C81518": "L1Nullifier"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "address": "0xd9f8460f3081dC29dF1e3b6e5404B245B96F4A30",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xDF1aa0495C815A1b9156796a741885a4834EC012",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xdF28907A6A272fa06333a197d7F0379A0f8f00aa",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xDFbD13B78010BF2110a168FA59b682c8a6D96564",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xe2eB80C72Fa12Ba50B3bD6545709DC153D5b26D2",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "ProtocolUpgradeHandler",
      "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
      "type": "Contract",
      "template": "shared-zk-stack/v26/ProtocolUpgradeHandler",
      "sourceHashes": [
        "0x8c407edc4ac1fa1cea2c45903e2cf0158906a2ff39fc2eb92aca3ca9f0d43ed8",
        "0x12958ca399cc6a20305ec705a35cae0ee77a75afd66ee1eb5f09d3a811ca4457"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The central upgrade contract and Governance proxy for all ZK stack contracts. Accepts successful DAO proposals from L2 and emergency proposals from the EmergencyUpgradeBoard. The three members of the EmergencyUpgradeBoard also have special roles and permissions in this contract.",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x1e4c534e7ce1FF5621Ea506D99b367D7d8EFbE3e",
          "role": ".owner"
        },
        {
          "permission": "act",
          "from": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
          "description": "set critical system contract addresses, register settlement layers, pause and unpause and manage zk chain registration.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
          "description": "manage the shared ValidatorTimelock contract address and the admin role, register and execute upgrades (and set their deadlines), freeze, revert batches and set permissioned validators and fee params for all connected chains.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
          "description": "pause, unpause and set critical escrow address references.",
          "role": ".owner"
        },
        {
          "permission": "interact",
          "from": "0xE689e79a06D3D09f99C21E534cCF6a8b7C9b3C45",
          "description": "manage allowed rollup DA pairs (allowed to be used by rollups in permanent rollup mode).",
          "role": ".owner"
        }
      ],
      "sinceTimestamp": 1738855967,
      "sinceBlock": 21788382,
      "values": {
        "$admin": "0x1e4c534e7ce1FF5621Ea506D99b367D7d8EFbE3e",
        "$implementation": "0x0A67f0Fd2f7523057039F14969Fe23a5f620f19A",
        "$pastUpgrades": [
          [
            "2025-02-06T15:32:47.000Z",
            "0xa3d1fa107e6dc4ce67d92a5af74aa7dc34602c2a1d46727790819c1f974bed95",
            ["0xD5e9D3d483a93d03D8d604CC79dC9f2F4B78C604"]
          ],
          [
            "2025-03-31T08:00:47.000Z",
            "0x96a2f14c85022136ab3d4e568e9f1fe8f4611a4a2597f979332840259378f6b3",
            ["0x0A67f0Fd2f7523057039F14969Fe23a5f620f19A"]
          ]
        ],
        "$upgradeCount": 2,
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "CHAIN_TYPE_MANAGER": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
        "emergencyUpgradeBoard": "0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6",
        "emergencyUpgradesExecuted": [
          "0xa34bdc028de549c0fbd0374e64eb5977e78f62331f6a55f4f2211348c4902d13",
          "0x09a5358047d9d0898d14c31823e9ea544f5f33c280441d1f34d5cc6dafe7a055"
        ],
        "EXTENDED_LEGAL_VETO_PERIOD": 604800,
        "guardians": "0x600dA620Ab29F41ABC6596a15981e14cE58c86b8",
        "HARD_FREEZE_PERIOD": 604800,
        "L1_ASSET_ROUTER": "0x8829AD80E425C646DAB305381ff105169FeEcE56",
        "L1_NATIVE_TOKEN_VAULT": "0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6",
        "L1_NULLIFIER": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
        "L2_PROTOCOL_GOVERNOR": "0x085b8B6407f150D62adB1EF926F7f304600ec714",
        "lastFreezeStatusInUpgradeCycle": 0,
        "protocolFrozenUntil": 0,
        "securityCouncil": "0x66E4431266DC7E04E7d8b7FE9d2181253df7F410",
        "SOFT_FREEZE_PERIOD": 43200,
        "STANDARD_LEGAL_VETO_PERIOD": 259200,
        "UPGRADE_DELAY_PERIOD": 86400,
        "UPGRADE_WAIT_OR_EXPIRE_PERIOD": 2592000,
        "ZKSYNC_ERA": "0x32400084C286CF3E17e7B677ea9583e60a000324"
      },
      "fieldMeta": {
        "protocolFrozenUntil": {
          "severity": "HIGH",
          "description": "Timestamp until which ALL Hyperchains connected to the main STM are frozen. (Mailbox and Executor facets blocked)"
        },
        "emergencyUpgradesExecuted": { "severity": "HIGH" }
      },
      "implementationNames": {
        "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3": "TransparentUpgradeableProxy",
        "0x0A67f0Fd2f7523057039F14969Fe23a5f620f19A": "ProtocolUpgradeHandler"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "name": "RollupDAManager",
      "address": "0xE689e79a06D3D09f99C21E534cCF6a8b7C9b3C45",
      "type": "Contract",
      "template": "shared-zk-stack/v26/RollupDAManager",
      "sourceHashes": [
        "0xbd5b15992550831cc4d42e8d61f6af41787fa1f28e4f0fe69848e1f6bc72700f"
      ],
      "proxyType": "immutable",
      "description": "Simple registry for allowed DA address pairs for the 'rollup' data availability mode (can be permanently enforced with isPermanentRollup=true). Rollup DA address pairs (especially the L1 part) usually point to contracts that validate if data was made available on Ethereum.",
      "sinceTimestamp": 1739108879,
      "sinceBlock": 21809354,
      "values": {
        "$immutable": true,
        "daPairs": [
          {
            "l1DAValidator": "0x72213dfe8CA61B0A782970dCFebFb877778f9119",
            "l2DAValidator": "0xfa96A3Da88f201433911bEFf3Ecc434CB1222731",
            "status": true
          },
          {
            "l1DAValidator": "0x72213dfe8CA61B0A782970dCFebFb877778f9119",
            "l2DAValidator": "0x64E2AfcFE648201b2F4a749aF0B7229ecfa44281",
            "status": true
          }
        ],
        "owner": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      },
      "fieldMeta": {
        "daPairs": { "severity": "HIGH" },
        "owner": { "severity": "HIGH" }
      },
      "implementationNames": {
        "0xE689e79a06D3D09f99C21E534cCF6a8b7C9b3C45": "RollupDAManager"
      },
      "category": { "name": "Shared Infrastructure", "priority": 4 }
    },
    {
      "address": "0xe968FB773e54f77350A427B057FDB44e6592E338",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "EmergencyUpgradeBoard",
      "address": "0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6",
      "type": "Contract",
      "template": "shared-zk-stack/EmergencyUpgradeBoard",
      "sourceHashes": [
        "0x15445918f67256c3edb446079c491b396c922a20fb0dc931fa7aaa6095f19aa6"
      ],
      "proxyType": "immutable",
      "description": "A custom contract allowing a 3/3 of 0x66E4431266DC7E04E7d8b7FE9d2181253df7F410, 0xbC1653bd3829dfEc575AfC3816D4899cd103B51c and 0x600dA620Ab29F41ABC6596a15981e14cE58c86b8 to `executeEmergencyUpgrade()` via the 0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3.",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
          "description": "set critical system contract addresses, register settlement layers, pause and unpause and manage zk chain registration.",
          "role": ".owner",
          "via": [{ "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }]
        },
        {
          "permission": "interact",
          "from": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
          "description": "manage the shared ValidatorTimelock contract address and the admin role, register and execute upgrades (and set their deadlines), freeze, revert batches and set permissioned validators and fee params for all connected chains.",
          "role": ".owner",
          "via": [{ "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }]
        },
        {
          "permission": "interact",
          "from": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
          "description": "pause, unpause and set critical escrow address references.",
          "role": ".owner",
          "via": [{ "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }]
        },
        {
          "permission": "interact",
          "from": "0xE689e79a06D3D09f99C21E534cCF6a8b7C9b3C45",
          "description": "manage allowed rollup DA pairs (allowed to be used by rollups in permanent rollup mode).",
          "role": ".owner",
          "via": [{ "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }]
        },
        {
          "permission": "upgrade",
          "from": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
          "role": "admin",
          "via": [
            { "address": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1" },
            { "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "0x5Ce9257755391D1509cD4eC1899d3F88A57BB4aD",
          "role": "admin",
          "via": [
            { "address": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1" },
            { "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "0x6078F6B379f103de1Aa912dc46bb8Df0c8809860",
          "role": "admin",
          "via": [
            { "address": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1" },
            { "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "0x8829AD80E425C646DAB305381ff105169FeEcE56",
          "role": "admin",
          "via": [
            { "address": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1" },
            { "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6",
          "role": "admin",
          "via": [
            { "address": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1" },
            { "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
          "role": "admin",
          "via": [
            { "address": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1" },
            { "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
          "role": "admin",
          "via": [
            { "address": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1" },
            { "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }
          ]
        },
        {
          "permission": "upgrade",
          "from": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
          "role": "admin",
          "via": [
            { "address": "0x1e4c534e7ce1FF5621Ea506D99b367D7d8EFbE3e" },
            { "address": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3" }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
          "role": ".emergencyUpgradeBoard"
        }
      ],
      "sinceTimestamp": 1738856003,
      "sinceBlock": 21788385,
      "values": {
        "$immutable": true,
        "eip712Domain": {
          "fields": "0x0f",
          "name": "EmergencyUpgradeBoard",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "GUARDIANS": "0x600dA620Ab29F41ABC6596a15981e14cE58c86b8",
        "PROTOCOL_UPGRADE_HANDLER": "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3",
        "SECURITY_COUNCIL": "0x66E4431266DC7E04E7d8b7FE9d2181253df7F410",
        "ZK_FOUNDATION_SAFE": "0xbC1653bd3829dfEc575AfC3816D4899cd103B51c"
      },
      "implementationNames": {
        "0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6": "EmergencyUpgradeBoard"
      },
      "category": { "name": "Governance", "priority": 3 }
    },
    {
      "address": "0xEE8fAC9051243379dAAA02c24e07D29F22d73b4E",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xF3d913D11dd577DDe5da4f2AA9611Aa799185C46",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xfa96A3Da88f201433911bEFf3Ecc434CB1222731",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "address": "0xFAdb20191Ab38362C50f52909817B74214CA79AE",
      "type": "EOA",
      "proxyType": "EOA"
    },
    {
      "name": "GnosisSafe",
      "address": "0xFB90Da9DC45378A1B50775Beb03aD10C7E8DC231",
      "type": "Contract",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1721992847,
      "sinceBlock": 20390387,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x2F73918C0F92FA9aD3Cfa87611677345a98CEa6f"],
        "$threshold": 1,
        "domainSeparator": "0x8e381b2666c3c7b1f0287ee4f112c5d982826f10fc93f5327ebe854b09380ca1",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 1,
        "VERSION": "1.3.0"
      },
      "implementationNames": {
        "0xFB90Da9DC45378A1B50775Beb03aD10C7E8DC231": "GnosisSafeProxy",
        "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": "GnosisSafe"
      },
      "category": { "name": "Spam", "priority": -1 }
    },
    {
      "address": "0xfd03dA3aeb6807a98db96C1704Ea4CFf031BaEd2",
      "type": "EOA",
      "proxyType": "EOA"
    }
  ],
  "abis": {
    "0x015318c16AE443a20DE0A776dB06a59F0D279057": [
      "constructor(address _singleton)"
    ],
    "0x0A67f0Fd2f7523057039F14969Fe23a5f620f19A": [
      "constructor(address _l2ProtocolGovernor, address _ZKsyncEra, address _chainTypeManager, address _bridgeHub, address _l1Nullifier, address _l1AssetRouter, address _l1NativeTokenVault)",
      "error InvalidInitialization()",
      "error NotInitializing()",
      "event ChangeEmergencyUpgradeBoard(address indexed _emergencyUpgradeBoardBefore, address indexed _emergencyUpgradeBoardAfter)",
      "event ChangeGuardians(address indexed _guardiansBefore, address indexed _guardiansAfter)",
      "event ChangeSecurityCouncil(address indexed _securityCouncilBefore, address indexed _securityCouncilAfter)",
      "event EmergencyUpgradeExecuted(bytes32 indexed _id)",
      "event HardFreeze(uint256 _protocolFrozenUntil)",
      "event Initialized(uint64 version)",
      "event ReinforceFreeze()",
      "event ReinforceFreezeOneChain(uint256 _chainId)",
      "event ReinforceUnfreeze()",
      "event ReinforceUnfreezeOneChain(uint256 _chainId)",
      "event SoftFreeze(uint256 _protocolFrozenUntil)",
      "event Unfreeze()",
      "event UpgradeApprovedByGuardians(bytes32 indexed _id)",
      "event UpgradeApprovedBySecurityCouncil(bytes32 indexed _id)",
      "event UpgradeExecuted(bytes32 indexed _id)",
      "event UpgradeLegalVetoExtended(bytes32 indexed _id)",
      "event UpgradeStarted(bytes32 indexed _id, tuple(tuple(address target, uint256 value, bytes data)[] calls, address executor, bytes32 salt) _proposal)",
      "function BRIDGE_HUB() view returns (address)",
      "function CHAIN_TYPE_MANAGER() view returns (address)",
      "function L1_ASSET_ROUTER() view returns (address)",
      "function L1_NATIVE_TOKEN_VAULT() view returns (address)",
      "function L1_NULLIFIER() view returns (address)",
      "function L2_PROTOCOL_GOVERNOR() view returns (address)",
      "function ZKSYNC_ERA() view returns (address)",
      "function approveUpgradeGuardians(bytes32 _id)",
      "function approveUpgradeSecurityCouncil(bytes32 _id)",
      "function emergencyUpgradeBoard() view returns (address)",
      "function execute(tuple(tuple(address target, uint256 value, bytes data)[] calls, address executor, bytes32 salt) _proposal) payable",
      "function executeEmergencyUpgrade(tuple(tuple(address target, uint256 value, bytes data)[] calls, address executor, bytes32 salt) _proposal) payable",
      "function extendLegalVeto(bytes32 _id)",
      "function guardians() view returns (address)",
      "function hardFreeze()",
      "function initialize(address _securityCouncil, address _guardians, address _emergencyUpgradeBoard)",
      "function lastFreezeStatusInUpgradeCycle() view returns (uint8)",
      "function protocolFrozenUntil() view returns (uint256)",
      "function reinforceFreeze()",
      "function reinforceFreezeOneChain(uint256 _chainId)",
      "function reinforceUnfreeze()",
      "function reinforceUnfreezeOneChain(uint256 _chainId)",
      "function securityCouncil() view returns (address)",
      "function softFreeze()",
      "function startUpgrade(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _proof, tuple(tuple(address target, uint256 value, bytes data)[] calls, address executor, bytes32 salt) _proposal)",
      "function unfreeze()",
      "function updateEmergencyUpgradeBoard(address _newEmergencyUpgradeBoard)",
      "function updateGuardians(address _newGuardians)",
      "function updateSecurityCouncil(address _newSecurityCouncil)",
      "function upgradeState(bytes32 _id) view returns (uint8)",
      "function upgradeStatus(bytes32 upgradeId) view returns (uint48 creationTimestamp, uint48 securityCouncilApprovalTimestamp, bool guardiansApproval, bool guardiansExtendedLegalVeto, bool executed)"
    ],
    "0x13f07d9BF17615f6a17F272fe1A913168C275A66": [
      "constructor(address _singleton)"
    ],
    "0x178D8Eb1A1fb81B5102808A83318Bb04C6a9fC6D": [
      "constructor(address _singleton)"
    ],
    "0x19347Fb8eD3E8e35eb4a01c8B18Bd330194Cf0ad": [
      "constructor(address _bridgehub)",
      "error ChainExists()",
      "error MerkleWrongIndex(uint256 index, uint256 maxNodeNumber)",
      "error MerkleWrongLength(uint256 newLeavesLength, uint256 leafNumber)",
      "error MessageRootNotRegistered()",
      "error OnlyBridgehub(address msgSender, address bridgehub)",
      "error OnlyChain(address msgSender, address zkChainAddress)",
      "event AddedChain(uint256 indexed chainId, uint256 indexed chainIndex)",
      "event AppendedChainBatchRoot(uint256 indexed chainId, uint256 indexed batchNumber, bytes32 batchRoot)",
      "event Initialized(uint8 version)",
      "event Preimage(bytes32 one, bytes32 two)",
      "function BRIDGE_HUB() view returns (address)",
      "function addChainBatchRoot(uint256 _chainId, uint256 _batchNumber, bytes32 _chainBatchRoot)",
      "function addNewChain(uint256 _chainId)",
      "function chainCount() view returns (uint256)",
      "function chainIndex(uint256 chainId) view returns (uint256 chainIndex)",
      "function chainIndexToId(uint256 chainIndex) view returns (uint256 chainId)",
      "function chainRegistered(uint256 _chainId) view returns (bool)",
      "function getAggregatedRoot() view returns (bytes32)",
      "function getChainRoot(uint256 _chainId) view returns (bytes32)",
      "function initialize()",
      "function sharedTree() view returns (uint256 _height, uint256 _leafNumber)",
      "function updateFullTree()"
    ],
    "0x1E405E5cdF127Dc98Eb490AB0e97345f892Ff7E1": [
      "constructor(address _bridgehub, address _l1AssetRouter)",
      "error CTMNotRegistered()",
      "error NoEthAllowed()",
      "error NotOwner(address sender, address owner)",
      "error NotOwnerViaRouter(address msgSender, address originalCaller)",
      "error OnlyBridgehub(address msgSender, address bridgehub)",
      "error UnsupportedEncodingVersion()",
      "error WrongCounterPart(address addressOnCounterPart, address l2BridgehubAddress)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function BRIDGE_HUB() view returns (address)",
      "function L1_ASSET_ROUTER() view returns (address)",
      "function acceptOwnership()",
      "function bridgeCheckCounterpartAddress(uint256, bytes32, address _originalCaller, address _assetHandlerAddressOnCounterpart) view",
      "function bridgehubConfirmL2Transaction(uint256 _chainId, bytes32 _txDataHash, bytes32 _txHash)",
      "function bridgehubDeposit(uint256 _chainId, address _originalCaller, uint256, bytes _data) payable returns (tuple(bytes32 magicValue, address l2Contract, bytes l2Calldata, bytes[] factoryDeps, bytes32 txDataHash) request)",
      "function calculateAssetId(address _l1CTM) view returns (bytes32)",
      "function initialize(address _owner)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function registerCTMAssetOnL1(address _ctmAddress)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)"
    ],
    "0x1e4c534e7ce1FF5621Ea506D99b367D7d8EFbE3e": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x2A90830083C5Ca1f18d7AA7fCDC2998f93475384": [
      "constructor(address _singleton)"
    ],
    "0x2cf3bD6a9056b39999F3883955E183F655345063": [
      "constructor(address _initialOwner, address _initialTokenMultiplierSetter)",
      "event CallExecuted(tuple(address target, uint256 value, bytes data) _call, bool _success, bytes _returnData)",
      "event NewTokenMultiplierSetter(address _oldTokenMultiplierSetter, address _newTokenMultiplierSetter)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event UpdateUpgradeTimestamp(uint256 indexed _protocolVersion, uint256 _upgradeTimestamp)",
      "function acceptOwnership()",
      "function multicall(tuple(address target, uint256 value, bytes data)[] _calls, bool _requireSuccess) payable",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function protocolVersionToUpgradeTimestamp(uint256 protocolVersion) view returns (uint256 upgradeTimestamp)",
      "function renounceOwnership()",
      "function setTokenMultiplier(address _chainContract, uint128 _nominator, uint128 _denominator)",
      "function setTokenMultiplierSetter(address _tokenMultiplierSetter)",
      "function setUpgradeTimestamp(uint256 _protocolVersion, uint256 _upgradeTimestamp)",
      "function tokenMultiplierSetter() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0x303a465B659cBB0ab36eE643eA362c509EEb5213": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x34Ea62D4b9bBB8AD927eFB6ab31E3Ab3474aC93a": [
      "constructor(address _singleton)"
    ],
    "0x35eA56fd9eAd2567F339Eb9564B6940b9DD5653F": [
      "constructor(address _singleton)"
    ],
    "0x3888777686F0b0d8c3108fc22ad8DE9E049bE26F": [
      "constructor(address _singleton)"
    ],
    "0x3B4FD84B27fE7B9247d5B8C6d1A29B2889C81518": [
      "constructor(address _bridgehub, uint256 _eraChainId, address _eraDiamondProxy)",
      "error AddressAlreadySet(address addr)",
      "error DepositDoesNotExist()",
      "error DepositExists()",
      "error EthTransferFailed()",
      "error IncorrectTokenAddressFromNTV(bytes32 assetId, address tokenAddress)",
      "error InvalidNTVBurnData()",
      "error InvalidProof()",
      "error InvalidSelector(bytes4 func)",
      "error L2WithdrawalMessageWrongLength(uint256 messageLen)",
      "error LegacyBridgeNotSet()",
      "error LegacyMethodForNonL1Token()",
      "error NativeTokenVaultAlreadySet()",
      "error NotInitializedReentrancyGuard()",
      "error Reentrancy()",
      "error SharedBridgeValueNotSet(uint8)",
      "error SlotOccupied()",
      "error TokenNotLegacy()",
      "error Unauthorized(address caller)",
      "error UnsupportedEncodingVersion()",
      "error WithdrawalAlreadyFinalized()",
      "error WrongL2Sender(address providedL2Sender)",
      "error WrongMsgLength(uint256 expected, uint256 length)",
      "error ZeroAddress()",
      "event BridgehubDepositFinalized(uint256 indexed chainId, bytes32 indexed txDataHash, bytes32 indexed l2DepositTxHash)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "function BRIDGE_HUB() view returns (address)",
      "function __DEPRECATED_admin() view returns (address)",
      "function __DEPRECATED_chainBalance(uint256 chainId, address l1Token) view returns (uint256 balance)",
      "function __DEPRECATED_l2BridgeAddress(uint256 chainId) view returns (address l2Bridge)",
      "function __DEPRECATED_pendingAdmin() view returns (address)",
      "function acceptOwnership()",
      "function bridgeRecoverFailedTransfer(uint256 _chainId, address _depositSender, bytes32 _assetId, bytes _assetData, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function bridgehubConfirmL2TransactionForwarded(uint256 _chainId, bytes32 _txDataHash, bytes32 _txHash)",
      "function chainBalance(uint256 _chainId, address _token) view returns (uint256)",
      "function claimFailedDeposit(uint256 _chainId, address _depositSender, address _l1Token, uint256 _amount, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function claimFailedDepositLegacyErc20Bridge(address _depositSender, address _l1Token, uint256 _amount, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function depositHappened(uint256 chainId, bytes32 l2DepositTxHash) view returns (bytes32 depositDataHash)",
      "function encodeTxDataHash(bytes1 _encodingVersion, address _originalCaller, bytes32 _assetId, bytes _transferData) view returns (bytes32 txDataHash)",
      "function finalizeDeposit(tuple(uint256 chainId, uint256 l2BatchNumber, uint256 l2MessageIndex, address l2Sender, uint16 l2TxNumberInBatch, bytes message, bytes32[] merkleProof) _finalizeWithdrawalParams)",
      "function finalizeWithdrawal(uint256 _chainId, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function initialize(address _owner, uint256 _eraPostDiamondUpgradeFirstBatch, uint256 _eraPostLegacyBridgeUpgradeFirstBatch, uint256 _eraLegacyBridgeLastDepositBatch, uint256 _eraLegacyBridgeLastDepositTxNumber)",
      "function isWithdrawalFinalized(uint256 chainId, uint256 l2BatchNumber, uint256 l2ToL1MessageNumber) view returns (bool isFinalized)",
      "function l1AssetRouter() view returns (address)",
      "function l1NativeTokenVault() view returns (address)",
      "function l2BridgeAddress(uint256 _chainId) view returns (address)",
      "function legacyBridge() view returns (address)",
      "function nullifyChainBalanceByNTV(uint256 _chainId, address _token)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setL1AssetRouter(address _l1AssetRouter)",
      "function setL1Erc20Bridge(address _legacyBridge)",
      "function setL1NativeTokenVault(address _l1NativeTokenVault)",
      "function transferOwnership(address newOwner)",
      "function transferTokenToNTV(address _token)",
      "function unpause()"
    ],
    "0x4e4943346848c4867F81dFb37c4cA9C5715A7828": [
      "constructor(address _singleton)"
    ],
    "0x538612F6eba6ff80FBD95D60dCDee16b8FfF2c0f": [
      "constructor(address _singleton)"
    ],
    "0x55c671BcE13120387Ded710A1d1b80C0e3d8E857": [
      "constructor(address _singleton)"
    ],
    "0x590926dBCDfD19627c3BbD2A6Eb96DeC7a3AbF69": [
      "constructor(address _singleton)"
    ],
    "0x5Ce9257755391D1509cD4eC1899d3F88A57BB4aD": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x600dA620Ab29F41ABC6596a15981e14cE58c86b8": [
      "constructor(address _protocolUpgradeHandler, address _ZKsyncEra, address[] _members)",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "event EIP712DomainChanged()",
      "function APPROVE_UPGRADE_GUARDIANS_THRESHOLD() view returns (uint256)",
      "function CANCEL_L2_GOVERNOR_PROPOSAL_THRESHOLD() view returns (uint256)",
      "function EIP1271_THRESHOLD() view returns (uint256)",
      "function EXTEND_LEGAL_VETO_THRESHOLD() view returns (uint256)",
      "function PROPOSE_L2_GOVERNOR_PROPOSAL_THRESHOLD() view returns (uint256)",
      "function PROTOCOL_UPGRADE_HANDLER() view returns (address)",
      "function ZKSYNC_ERA() view returns (address)",
      "function approveUpgradeGuardians(bytes32 _id, address[] _signers, bytes[] _signatures)",
      "function cancelL2GovernorProposal(tuple(address[] targets, uint256[] values, bytes[] calldatas, string description) _l2Proposal, tuple(address to, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, address refundRecipient, uint256 txMintValue) _txRequest, address[] _signers, bytes[] _signatures) payable",
      "function checkSignatures(bytes32 _digest, address[] _signers, bytes[] _signatures, uint256 _threshold) view",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function extendLegalVeto(bytes32 _id, address[] _signers, bytes[] _signatures)",
      "function hashL2Proposal(tuple(address[] targets, uint256[] values, bytes[] calldatas, string description) _l2Proposal) pure returns (uint256 proposalId)",
      "function isValidSignature(bytes32 _digest, bytes _signature) view returns (bytes4)",
      "function members(uint256) view returns (address)",
      "function nonce() view returns (uint256)",
      "function proposeL2GovernorProposal(tuple(address[] targets, uint256[] values, bytes[] calldatas, string description) _l2Proposal, tuple(address to, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, address refundRecipient, uint256 txMintValue) _txRequest, address[] _signers, bytes[] _signatures) payable"
    ],
    "0x6078F6B379f103de1Aa912dc46bb8Df0c8809860": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x66E4431266DC7E04E7d8b7FE9d2181253df7F410": [
      "constructor(address _protocolUpgradeHandler, address[] _members)",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "event EIP712DomainChanged()",
      "function APPROVE_UPGRADE_SECURITY_COUNCIL_THRESHOLD() view returns (uint256)",
      "function EIP1271_THRESHOLD() view returns (uint256)",
      "function HARD_FREEZE_THRESHOLD() view returns (uint256)",
      "function PROTOCOL_UPGRADE_HANDLER() view returns (address)",
      "function RECOMMENDED_SOFT_FREEZE_THRESHOLD() view returns (uint256)",
      "function SOFT_FREEZE_CONSERVATIVE_THRESHOLD() view returns (uint256)",
      "function UNFREEZE_THRESHOLD() view returns (uint256)",
      "function approveUpgradeSecurityCouncil(bytes32 _id, address[] _signers, bytes[] _signatures)",
      "function checkSignatures(bytes32 _digest, address[] _signers, bytes[] _signatures, uint256 _threshold) view",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function hardFreeze(uint256 _validUntil, address[] _signers, bytes[] _signatures)",
      "function hardFreezeNonce() view returns (uint256)",
      "function isValidSignature(bytes32 _digest, bytes _signature) view returns (bytes4)",
      "function members(uint256) view returns (address)",
      "function setSoftFreezeThreshold(uint256 _threshold, uint256 _validUntil, address[] _signers, bytes[] _signatures)",
      "function softFreeze(uint256 _validUntil, address[] _signers, bytes[] _signatures)",
      "function softFreezeNonce() view returns (uint256)",
      "function softFreezeThreshold() view returns (uint256)",
      "function softFreezeThresholdSettingNonce() view returns (uint256)",
      "function unfreeze(uint256 _validUntil, address[] _signers, bytes[] _signatures)",
      "function unfreezeNonce() view returns (uint256)"
    ],
    "0x69462a81ba94D64c404575f1899a464F123497A2": [
      "constructor(address _singleton)"
    ],
    "0x6D26874130A174839b9cd8CB87Ed4E09D0c1a5f0": [
      "constructor(address _singleton)"
    ],
    "0x6D598c77AF57Bfa17201483400615c61819dD45A": [
      "constructor(address _bridgehub)",
      "error AdminZero()",
      "error ChainAlreadyLive()",
      "error GenesisBatchCommitmentZero()",
      "error GenesisBatchHashZero()",
      "error GenesisIndexStorageZero()",
      "error GenesisUpgradeZero()",
      "error HashMismatch(bytes32 expected, bytes32 actual)",
      "error InitialForceDeploymentMismatch(bytes32 forceDeploymentHash, bytes32 initialForceDeploymentHash)",
      "error MigrationsNotPaused()",
      "error OutdatedProtocolVersion(uint256 protocolVersion, uint256 currentProtocolVersion)",
      "error SlotOccupied()",
      "error Unauthorized(address caller)",
      "error ZeroAddress()",
      "event GenesisUpgrade(address indexed _zkChain, tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) _l2Transaction, uint256 indexed _protocolVersion)",
      "event Initialized(uint8 version)",
      "event NewAdmin(address indexed oldAdmin, address indexed newAdmin)",
      "event NewChainCreationParams(address genesisUpgrade, bytes32 genesisBatchHash, uint64 genesisIndexRepeatedStorageChanges, bytes32 genesisBatchCommitment, bytes32 newInitialCutHash, bytes32 forceDeploymentHash)",
      "event NewPendingAdmin(address indexed oldPendingAdmin, address indexed newPendingAdmin)",
      "event NewProtocolVersion(uint256 indexed oldProtocolVersion, uint256 indexed newProtocolVersion)",
      "event NewServerNotifier(address indexed oldServerNotifier, address indexed newServerNotifier)",
      "event NewUpgradeCutData(uint256 indexed protocolVersion, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCutData)",
      "event NewUpgradeCutHash(uint256 indexed protocolVersion, bytes32 indexed upgradeCutHash)",
      "event NewValidatorTimelock(address indexed oldValidatorTimelock, address indexed newValidatorTimelock)",
      "event NewZKChain(uint256 indexed _chainId, address indexed _zkChainContract)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event UpdateProtocolVersionDeadline(uint256 indexed protocolVersion, uint256 deadline)",
      "function BRIDGE_HUB() view returns (address)",
      "function acceptAdmin()",
      "function acceptOwnership()",
      "function admin() view returns (address)",
      "function changeFeeParams(uint256 _chainId, tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) _newFeeParams)",
      "function createNewChain(uint256 _chainId, bytes32 _baseTokenAssetId, address _admin, bytes _initData, bytes[] _factoryDeps) returns (address zkChainAddress)",
      "function executeUpgrade(uint256 _chainId, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)",
      "function forwardedBridgeBurn(uint256 _chainId, bytes _data) view returns (bytes ctmForwardedBridgeMintData)",
      "function forwardedBridgeMint(uint256 _chainId, bytes _ctmData) returns (address chainAddress)",
      "function forwardedBridgeRecoverFailedTransfer(uint256, bytes32, address, bytes)",
      "function freezeChain(uint256 _chainId)",
      "function getChainAdmin(uint256 _chainId) view returns (address)",
      "function getHyperchain(uint256 _chainId) view returns (address)",
      "function getProtocolVersion(uint256 _chainId) view returns (uint256)",
      "function getSemverProtocolVersion() view returns (uint32, uint32, uint32)",
      "function getZKChain(uint256 _chainId) view returns (address)",
      "function getZKChainLegacy(uint256 _chainId) view returns (address chainAddress)",
      "function initialCutHash() view returns (bytes32)",
      "function initialForceDeploymentHash() view returns (bytes32)",
      "function initialize(tuple(address owner, address validatorTimelock, tuple(address genesisUpgrade, bytes32 genesisBatchHash, uint64 genesisIndexRepeatedStorageChanges, bytes32 genesisBatchCommitment, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCut, bytes forceDeploymentsData) chainCreationParams, uint256 protocolVersion, address serverNotifier) _initializeData)",
      "function l1GenesisUpgrade() view returns (address)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function protocolVersion() view returns (uint256)",
      "function protocolVersionDeadline(uint256 _protocolVersion) view returns (uint256)",
      "function protocolVersionIsActive(uint256 _protocolVersion) view returns (bool)",
      "function renounceOwnership()",
      "function revertBatches(uint256 _chainId, uint256 _newLastBatch)",
      "function serverNotifierAddress() view returns (address)",
      "function setChainCreationParams(tuple(address genesisUpgrade, bytes32 genesisBatchHash, uint64 genesisIndexRepeatedStorageChanges, bytes32 genesisBatchCommitment, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCut, bytes forceDeploymentsData) _chainCreationParams)",
      "function setNewVersionUpgrade(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _cutData, uint256 _oldProtocolVersion, uint256 _oldProtocolVersionDeadline, uint256 _newProtocolVersion)",
      "function setPendingAdmin(address _newPendingAdmin)",
      "function setPorterAvailability(uint256 _chainId, bool _zkPorterIsAvailable)",
      "function setPriorityTxMaxGasLimit(uint256 _chainId, uint256 _maxGasLimit)",
      "function setProtocolVersionDeadline(uint256 _protocolVersion, uint256 _timestamp)",
      "function setServerNotifier(address _serverNotifier)",
      "function setTokenMultiplier(uint256 _chainId, uint128 _nominator, uint128 _denominator)",
      "function setUpgradeDiamondCut(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _cutData, uint256 _oldProtocolVersion)",
      "function setValidator(uint256 _chainId, address _validator, bool _active)",
      "function setValidatorTimelock(address _validatorTimelock)",
      "function storedBatchZero() view returns (bytes32)",
      "function transferOwnership(address newOwner)",
      "function unfreezeChain(uint256 _chainId)",
      "function upgradeChainFromVersion(uint256 _chainId, uint256 _oldProtocolVersion, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)",
      "function upgradeCutHash(uint256 protocolVersion) view returns (bytes32 cutHash)",
      "function validatorTimelock() view returns (address)"
    ],
    "0x72213dfe8CA61B0A782970dCFebFb877778f9119": [
      "error BlobCommitmentNotPublished()",
      "error BlobHashCommitmentError(uint256 index, bool blobHashEmpty, bool blobCommitmentEmpty)",
      "error EmptyBlobVersionHash(uint256 index)",
      "error InvalidL2DAOutputHash(bytes32 l2DAValidatorOutputHash)",
      "error InvalidNumberOfBlobs(uint256 blobsProvided, uint256 maxBlobsSupported)",
      "error InvalidPubdataCommitmentsSize()",
      "error InvalidPubdataHash(bytes32 fullPubdataHash, bytes32 providedPubdataHash)",
      "error InvalidPubdataSource(uint8 pubdataSource)",
      "error NonEmptyBlobVersionHash(uint256 index)",
      "error OnlyOneBlobWithCalldataAllowed()",
      "error OperatorDAInputTooSmall(uint256 operatorDAInputLength, uint256 minAllowedLength)",
      "error PointEvalCallFailed(bytes)",
      "error PointEvalFailed(bytes)",
      "error PubdataCommitmentsEmpty()",
      "error PubdataInputTooSmall(uint256 pubdataInputLength, uint256 totalBlobsCommitmentSize)",
      "error PubdataLengthTooBig(uint256 pubdataLength, uint256 totalBlobSizeBytes)",
      "function checkDA(uint256, uint256, bytes32 _l2DAValidatorOutputHash, bytes _operatorDAInput, uint256 _maxBlobsSupported) view returns (tuple(bytes32 stateDiffHash, bytes32[] blobsLinearHashes, bytes32[] blobsOpeningCommitments) output)",
      "function isBlobAvailable(bytes32 _blobCommitment) view returns (bool)",
      "function publishBlobs(bytes _pubdataCommitments)",
      "function publishedBlobCommitments(bytes32 blobCommitment) view returns (uint256 blockOfPublishing)"
    ],
    "0x725065b4eB99294BaaE57AdDA9c32e42F453FA8A": [
      "constructor(address _singleton)"
    ],
    "0x84BF0Ac41Eeb74373Ddddae8b7055Bf2bD3CE6E0": [
      "constructor(address _singleton)"
    ],
    "0x8829AD80E425C646DAB305381ff105169FeEcE56": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x9B39Ea22e838B316Ea7D74e7C4B07d91D51ccA88": [
      "constructor(address _singleton)"
    ],
    "0x9B8Be3278B7F0168D82059eb6BAc5991DcdfA803": [
      "constructor(address _singleton)"
    ],
    "0xB7aC3A79A23B148c85fba259712c5A1e7ad0ca44": [
      "constructor(address _singleton)"
    ],
    "0xbC1653bd3829dfEc575AfC3816D4899cd103B51c": [
      "constructor(address _singleton)"
    ],
    "0xbeD1EB542f9a5aA6419Ff3deb921A372681111f6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xc3Abc9f9AA75Be8341E831482cdA0125a7B1A23e": [
      "constructor(address _singleton)"
    ],
    "0xC5bBb8bA0302215Da343D47EC617649E59c7d61C": [
      "error AddressHasNoCode(address)",
      "error DelegateCallFailed(bytes returnData)",
      "error FacetExists(bytes4 selector, address)",
      "error InvalidTxType(uint256 txType)",
      "error InvalidUpgradeTxn(uint8)",
      "error L2UpgradeNonceNotEqualToNewProtocolVersion(uint256 nonce, uint256 protocolVersion)",
      "error LengthIsNotDivisibleBy32(uint256 length)",
      "error MalformedBytecode(uint8)",
      "error NoFunctionsForDiamondCut()",
      "error NonEmptyCalldata()",
      "error PatchCantSetUpgradeTxn()",
      "error PatchUpgradeCantSetBootloader()",
      "error PatchUpgradeCantSetDefaultAccount()",
      "error PatchUpgradeCantSetEvmEmulator()",
      "error PreviousUpgradeBatchNotCleared()",
      "error PreviousUpgradeNotFinalized(bytes32 txHash)",
      "error ProtocolMajorVersionNotZero()",
      "error ProtocolVersionDeltaTooLarge(uint256 _proposedDelta, uint256 _maxDelta)",
      "error ProtocolVersionTooSmall()",
      "error PubdataGreaterThanLimit(uint256 limit, uint256 length)",
      "error RemoveFunctionFacetAddressNotZero(address facet)",
      "error RemoveFunctionFacetAddressZero()",
      "error ReplaceFunctionFacetAddressZero()",
      "error SelectorsMustAllHaveSameFreezability()",
      "error TimeNotReached(uint256 expectedTimestamp, uint256 actualTimestamp)",
      "error TooManyFactoryDeps()",
      "error TooMuchGas()",
      "error TxnBodyGasLimitNotEnoughGas()",
      "error UndefinedDiamondCutAction()",
      "error ValidateTxnNotEnoughGas()",
      "event DiamondCut(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata)",
      "event GenesisUpgrade(address indexed _zkChain, tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) _l2Transaction, uint256 indexed _protocolVersion, bytes[] _factoryDeps)",
      "event NewL2BootloaderBytecodeHash(bytes32 indexed previousBytecodeHash, bytes32 indexed newBytecodeHash)",
      "event NewL2DefaultAccountBytecodeHash(bytes32 indexed previousBytecodeHash, bytes32 indexed newBytecodeHash)",
      "event NewL2EvmEmulatorBytecodeHash(bytes32 indexed previousBytecodeHash, bytes32 indexed newBytecodeHash)",
      "event NewProtocolVersion(uint256 indexed previousProtocolVersion, uint256 indexed newProtocolVersion)",
      "event NewVerifier(address indexed oldVerifier, address indexed newVerifier)",
      "event NewVerifierParams(tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) oldVerifierParams, tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) newVerifierParams)",
      "event UpgradeComplete(uint256 indexed newProtocolVersion, bytes32 indexed l2UpgradeTxHash, tuple(tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) l2ProtocolUpgradeTx, bytes32 bootloaderHash, bytes32 defaultAccountHash, bytes32 evmEmulatorHash, address verifier, tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) verifierParams, bytes l1ContractsUpgradeCalldata, bytes postUpgradeCalldata, uint256 upgradeTimestamp, uint256 newProtocolVersion) upgrade)",
      "function genesisUpgrade(address _l1GenesisUpgrade, uint256 _chainId, uint256 _protocolVersion, address _l1CtmDeployerAddress, bytes _fixedForceDeploymentsData, bytes[] _factoryDeps) returns (bytes32)",
      "function upgrade(tuple(tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) l2ProtocolUpgradeTx, bytes32 bootloaderHash, bytes32 defaultAccountHash, bytes32 evmEmulatorHash, address verifier, tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) verifierParams, bytes l1ContractsUpgradeCalldata, bytes postUpgradeCalldata, uint256 upgradeTimestamp, uint256 newProtocolVersion) _proposedUpgrade) returns (bytes32)"
    ],
    "0xcaD49896F3d54d9A93eDdBFd370c8A4a1b239315": [
      "constructor(address _l1WethAddress, address _bridgehub, address _l1Nullifier, uint256 _eraChainId, address _eraDiamondProxy)",
      "error AddressAlreadySet(address addr)",
      "error AssetHandlerDoesNotExist(bytes32 assetId)",
      "error AssetIdNotSupported(bytes32 assetId)",
      "error IncorrectTokenAddressFromNTV(bytes32 assetId, address tokenAddress)",
      "error InvalidNTVBurnData()",
      "error LegacyBridgeUsesNonNativeToken()",
      "error LegacyEncodingUsedForNonL1Token()",
      "error NativeTokenVaultAlreadySet()",
      "error NonEmptyMsgValue()",
      "error NotInitializedReentrancyGuard()",
      "error Reentrancy()",
      "error SlotOccupied()",
      "error TokenNotSupported(address token)",
      "error TokensWithFeesNotSupported()",
      "error Unauthorized(address caller)",
      "error UnsupportedEncodingVersion()",
      "error ZeroAddress()",
      "event AssetDeploymentTrackerRegistered(bytes32 indexed assetId, bytes32 indexed additionalData, address assetDeploymentTracker)",
      "event AssetDeploymentTrackerSet(bytes32 indexed assetId, address indexed assetDeploymentTracker, bytes32 indexed additionalData)",
      "event AssetHandlerRegistered(bytes32 indexed assetId, address indexed _assetHandlerAddress)",
      "event BridgehubDepositBaseTokenInitiated(uint256 indexed chainId, address indexed from, bytes32 assetId, uint256 amount)",
      "event BridgehubDepositFinalized(uint256 indexed chainId, bytes32 indexed txDataHash, bytes32 indexed l2DepositTxHash)",
      "event BridgehubDepositInitiated(uint256 indexed chainId, bytes32 indexed txDataHash, address indexed from, bytes32 assetId, bytes bridgeMintCalldata)",
      "event BridgehubMintData(bytes bridgeMintData)",
      "event BridgehubWithdrawalInitiated(uint256 chainId, address indexed sender, bytes32 indexed assetId, bytes32 assetDataHash)",
      "event ClaimedFailedDepositAssetRouter(uint256 indexed chainId, bytes32 indexed assetId, bytes assetData)",
      "event DepositFinalizedAssetRouter(uint256 indexed chainId, bytes32 indexed assetId, bytes assetData)",
      "event Initialized(uint8 version)",
      "event LegacyDepositInitiated(uint256 indexed chainId, bytes32 indexed l2DepositTxHash, address indexed from, address to, address l1Token, uint256 amount)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "function BRIDGE_HUB() view returns (address)",
      "function ERA_CHAIN_ID() view returns (uint256)",
      "function ETH_TOKEN_ASSET_ID() view returns (bytes32)",
      "function L1_CHAIN_ID() view returns (uint256)",
      "function L1_NULLIFIER() view returns (address)",
      "function L1_WETH_TOKEN() view returns (address)",
      "function acceptOwnership()",
      "function assetDeploymentTracker(bytes32 assetId) view returns (address assetDeploymentTracker)",
      "function assetHandlerAddress(bytes32 assetId) view returns (address assetHandlerAddress)",
      "function bridgeRecoverFailedTransfer(uint256 _chainId, address _depositSender, bytes32 _assetId, bytes _assetData)",
      "function bridgeRecoverFailedTransfer(uint256 _chainId, address _depositSender, bytes32 _assetId, bytes _assetData, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function bridgehubConfirmL2Transaction(uint256 _chainId, bytes32 _txDataHash, bytes32 _txHash)",
      "function bridgehubDeposit(uint256 _chainId, address _originalCaller, uint256 _value, bytes _data) payable returns (tuple(bytes32 magicValue, address l2Contract, bytes l2Calldata, bytes[] factoryDeps, bytes32 txDataHash) request)",
      "function bridgehubDepositBaseToken(uint256 _chainId, bytes32 _assetId, address _originalCaller, uint256 _amount) payable",
      "function claimFailedDeposit(uint256 _chainId, address _depositSender, address _l1Token, uint256 _amount, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function depositLegacyErc20Bridge(address _originalCaller, address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte, address _refundRecipient) payable returns (bytes32 txHash)",
      "function finalizeDeposit(uint256 _chainId, bytes32 _assetId, bytes _transferData) payable",
      "function finalizeWithdrawal(uint256 _chainId, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function getDepositCalldata(address _sender, bytes32 _assetId, bytes _assetData) view returns (bytes)",
      "function initialize(address _owner)",
      "function isWithdrawalFinalized(uint256 _chainId, uint256 _l2BatchNumber, uint256 _l2MessageIndex) view returns (bool)",
      "function l2BridgeAddress(uint256 _chainId) view returns (address)",
      "function legacyBridge() view returns (address)",
      "function nativeTokenVault() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setAssetDeploymentTracker(bytes32 _assetRegistrationData, address _assetDeploymentTracker)",
      "function setAssetHandlerAddressThisChain(bytes32 _assetRegistrationData, address _assetHandlerAddress)",
      "function setL1Erc20Bridge(address _legacyBridge)",
      "function setNativeTokenVault(address _nativeTokenVault)",
      "function transferFundsToNTV(bytes32 _assetId, uint256 _amount, address _originalCaller) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause()"
    ],
    "0xcdd748d4A80CE6831080f1dA2CA9084CDa87Cc87": [
      "constructor(uint256 _l1ChainId, address _owner, uint256 _maxNumberOfZKChains)",
      "error AlreadyCurrentSL(uint256 blockChainId)",
      "error AssetHandlerNotRegistered(bytes32 assetId)",
      "error AssetIdAlreadyRegistered()",
      "error AssetIdNotSupported(bytes32 assetId)",
      "error BridgeHubAlreadyRegistered()",
      "error CTMAlreadyRegistered()",
      "error CTMNotRegistered()",
      "error ChainIdAlreadyExists()",
      "error ChainIdAlreadyPresent()",
      "error ChainIdCantBeCurrentChain()",
      "error ChainIdMismatch()",
      "error ChainIdNotRegistered(uint256 chainId)",
      "error ChainIdTooBig()",
      "error ChainNotLegacy()",
      "error ChainNotPresentInCTM()",
      "error EmptyAssetId()",
      "error HyperchainNotRegistered()",
      "error IncorrectBridgeHubAddress(address bridgehub)",
      "error IncorrectChainAssetId(bytes32 assetId, bytes32 assetIdFromChainId)",
      "error IncorrectSender(address prevMsgSender, address chainAdmin)",
      "error MigrationPaused()",
      "error MsgValueMismatch(uint256 expectedMsgValue, uint256 providedMsgValue)",
      "error NoCTMForAssetId(bytes32 assetId)",
      "error NonEmptyMsgValue()",
      "error NotAssetRouter(address msgSender, address sharedBridge)",
      "error NotCurrentSL(uint256 settlementLayerChainId, uint256 blockChainId)",
      "error NotInGatewayMode()",
      "error NotInitializedReentrancyGuard()",
      "error NotL1(uint256 l1ChainId, uint256 blockChainId)",
      "error NotRelayedSender(address msgSender, address settlementLayerRelaySender)",
      "error Reentrancy()",
      "error SLNotWhitelisted()",
      "error SecondBridgeAddressTooLow(address secondBridgeAddress, address minSecondBridgeAddress)",
      "error SettlementLayersMustSettleOnL1()",
      "error SharedBridgeNotSet()",
      "error SlotOccupied()",
      "error Unauthorized(address caller)",
      "error WrongMagicValue(uint256 expectedMagicValue, uint256 providedMagicValue)",
      "error ZKChainLimitReached()",
      "error ZeroAddress()",
      "error ZeroChainId()",
      "event AssetRegistered(bytes32 indexed assetInfo, address indexed _assetAddress, bytes32 indexed additionalData, address sender)",
      "event BaseTokenAssetIdRegistered(bytes32 indexed assetId)",
      "event BridgeBurn(uint256 indexed chainId, bytes32 indexed assetId, address indexed sender, address receiver, uint256 amount)",
      "event BridgeMint(uint256 indexed chainId, bytes32 indexed assetId, address receiver, uint256 amount)",
      "event ChainTypeManagerAdded(address indexed chainTypeManager)",
      "event ChainTypeManagerRemoved(address indexed chainTypeManager)",
      "event Initialized(uint8 version)",
      "event MigrationFinalized(uint256 indexed chainId, bytes32 indexed assetId, address indexed zkChain)",
      "event MigrationStarted(uint256 indexed chainId, bytes32 indexed assetId, uint256 indexed settlementLayerChainId)",
      "event NewAdmin(address indexed oldAdmin, address indexed newAdmin)",
      "event NewChain(uint256 indexed chainId, address chainTypeManager, address indexed chainGovernance)",
      "event NewPendingAdmin(address indexed oldPendingAdmin, address indexed newPendingAdmin)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event SettlementLayerRegistered(uint256 indexed chainId, bool indexed isWhitelisted)",
      "event Unpaused(address account)",
      "function L1_CHAIN_ID() view returns (uint256)",
      "function MAX_NUMBER_OF_ZK_CHAINS() view returns (uint256)",
      "function __DEPRECATED_baseToken(uint256 chainId) view returns (address)",
      "function __DEPRECATED_tokenIsRegistered(address baseToken) view returns (bool)",
      "function acceptAdmin()",
      "function acceptOwnership()",
      "function addChainTypeManager(address _chainTypeManager)",
      "function addTokenAssetId(bytes32 _baseTokenAssetId)",
      "function admin() view returns (address)",
      "function assetIdIsRegistered(bytes32 baseTokenAssetId) view returns (bool)",
      "function assetRouter() view returns (address)",
      "function baseToken(uint256 _chainId) view returns (address)",
      "function baseTokenAssetId(uint256 chainId) view returns (bytes32)",
      "function bridgeBurn(uint256 _settlementChainId, uint256 _l2MsgValue, bytes32 _assetId, address _originalCaller, bytes _data) payable returns (bytes bridgehubMintData)",
      "function bridgeMint(uint256, bytes32 _assetId, bytes _bridgehubMintData) payable",
      "function bridgeRecoverFailedTransfer(uint256, bytes32 _assetId, address _depositSender, bytes _data) payable",
      "function chainTypeManager(uint256 chainId) view returns (address)",
      "function chainTypeManagerIsRegistered(address chainTypeManager) view returns (bool)",
      "function createNewChain(uint256 _chainId, address _chainTypeManager, bytes32 _baseTokenAssetId, uint256 _salt, address _admin, bytes _initData, bytes[] _factoryDeps) returns (uint256)",
      "function ctmAssetIdFromAddress(address ctmAddress) view returns (bytes32 ctmAssetId)",
      "function ctmAssetIdFromChainId(uint256 _chainId) view returns (bytes32)",
      "function ctmAssetIdToAddress(bytes32 ctmAssetId) view returns (address ctmAddress)",
      "function forwardTransactionOnGateway(uint256 _chainId, bytes32 _canonicalTxHash, uint64 _expirationTimestamp)",
      "function getAllZKChainChainIDs() view returns (uint256[])",
      "function getAllZKChains() view returns (address[] chainAddresses)",
      "function getHyperchain(uint256 _chainId) view returns (address)",
      "function getZKChain(uint256 _chainId) view returns (address chainAddress)",
      "function initialize(address _owner)",
      "function initializeV2()",
      "function l1CtmDeployer() view returns (address)",
      "function l2TransactionBaseCost(uint256 _chainId, uint256 _gasPrice, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit) view returns (uint256)",
      "function messageRoot() view returns (address)",
      "function migrationPaused() view returns (bool)",
      "function owner() view returns (address)",
      "function pause()",
      "function pauseMigration()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proveL1ToL2TransactionStatus(uint256 _chainId, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof, uint8 _status) view returns (bool)",
      "function proveL2LogInclusion(uint256 _chainId, uint256 _batchNumber, uint256 _index, tuple(uint8 l2ShardId, bool isService, uint16 txNumberInBatch, address sender, bytes32 key, bytes32 value) _log, bytes32[] _proof) view returns (bool)",
      "function proveL2MessageInclusion(uint256 _chainId, uint256 _batchNumber, uint256 _index, tuple(uint16 txNumberInBatch, address sender, bytes data) _message, bytes32[] _proof) view returns (bool)",
      "function registerAlreadyDeployedZKChain(uint256 _chainId, address _zkChain)",
      "function registerLegacyChain(uint256 _chainId)",
      "function registerSettlementLayer(uint256 _newSettlementLayerChainId, bool _isWhitelisted)",
      "function removeChainTypeManager(address _chainTypeManager)",
      "function renounceOwnership()",
      "function requestL2TransactionDirect(tuple(uint256 chainId, uint256 mintValue, address l2Contract, uint256 l2Value, bytes l2Calldata, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, bytes[] factoryDeps, address refundRecipient) _request) payable returns (bytes32 canonicalTxHash)",
      "function requestL2TransactionTwoBridges(tuple(uint256 chainId, uint256 mintValue, uint256 l2Value, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, address refundRecipient, address secondBridgeAddress, uint256 secondBridgeValue, bytes secondBridgeCalldata) _request) payable returns (bytes32 canonicalTxHash)",
      "function setAddresses(address _assetRouter, address _l1CtmDeployer, address _messageRoot)",
      "function setCTMAssetAddress(bytes32 _additionalData, address _assetAddress)",
      "function setPendingAdmin(address _newPendingAdmin)",
      "function settlementLayer(uint256 chainId) view returns (uint256 activeSettlementLayerChainId)",
      "function sharedBridge() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function unpauseMigration()",
      "function whitelistedSettlementLayers(uint256 chainId) view returns (bool isWhitelistedSettlementLayer)"
    ],
    "0xCe7a3dFcc35602155809920Ff65e093aa726f6cf": [
      "constructor(address _singleton)"
    ],
    "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xDf3a3E51aEABB5da548F854B608E3C9De1ae2947": [
      "constructor(address _l1WethAddress, address _l1AssetRouter, address _l1Nullifier)",
      "error AddressMismatch(address expected, address supplied)",
      "error AmountMustBeGreaterThanZero()",
      "error AssetIdAlreadyRegistered()",
      "error AssetIdMismatch(bytes32 expected, bytes32 supplied)",
      "error BurningNativeWETHNotSupported()",
      "error ClaimFailedDepositFailed()",
      "error DeployingBridgedTokenForNativeToken()",
      "error EmptyDeposit()",
      "error EmptyToken()",
      "error InsufficientChainBalance()",
      "error InvalidNTVBurnData()",
      "error NoFundsTransferred()",
      "error NonEmptyMsgValue()",
      "error OriginChainIdNotFound()",
      "error TokenNotSupported(address token)",
      "error TokensWithFeesNotSupported()",
      "error Unauthorized(address caller)",
      "error UnsupportedEncodingVersion()",
      "error ValueMismatch(uint256 expected, uint256 actual)",
      "error WithdrawFailed()",
      "error WrongAmountTransferred(uint256 balance, uint256 nullifierChainBalance)",
      "error WrongCounterpart()",
      "error ZeroAddress()",
      "error ZeroAmountToTransfer()",
      "event BridgeBurn(uint256 indexed chainId, bytes32 indexed assetId, address indexed sender, address receiver, uint256 amount)",
      "event BridgeMint(uint256 indexed chainId, bytes32 indexed assetId, address receiver, uint256 amount)",
      "event BridgedTokenBeaconUpdated(address bridgedTokenBeacon, bytes32 bridgedTokenProxyBytecodeHash)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event TokenBeaconUpdated(address indexed l2TokenBeacon)",
      "event Unpaused(address account)",
      "function ASSET_ROUTER() view returns (address)",
      "function BASE_TOKEN_ASSET_ID() view returns (bytes32)",
      "function L1_CHAIN_ID() view returns (uint256)",
      "function L1_NULLIFIER() view returns (address)",
      "function WETH_TOKEN() view returns (address)",
      "function acceptOwnership()",
      "function assetId(address tokenAddress) view returns (bytes32 assetId)",
      "function bridgeBurn(uint256 _chainId, uint256 _l2MsgValue, bytes32 _assetId, address _originalCaller, bytes _data) payable returns (bytes _bridgeMintData)",
      "function bridgeCheckCounterpartAddress(uint256, bytes32, address, address _assetHandlerAddressOnCounterpart) view",
      "function bridgeMint(uint256 _chainId, bytes32 _assetId, bytes _data) payable",
      "function bridgeRecoverFailedTransfer(uint256 _chainId, bytes32 _assetId, address _depositSender, bytes _data) payable",
      "function bridgedTokenBeacon() view returns (address)",
      "function calculateCreate2TokenAddress(uint256 _originChainId, address _nonNativeToken) view returns (address)",
      "function chainBalance(uint256 chainId, bytes32 assetId) view returns (uint256 balance)",
      "function ensureTokenIsRegistered(address _nativeToken) returns (bytes32 tokenAssetId)",
      "function getERC20Getters(address _token, uint256 _originChainId) view returns (bytes)",
      "function initialize(address _owner, address _bridgedTokenBeacon)",
      "function originChainId(bytes32 assetId) view returns (uint256 originChainId)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function registerEthToken()",
      "function registerToken(address _nativeToken)",
      "function renounceOwnership()",
      "function tokenAddress(bytes32 assetId) view returns (address tokenAddress)",
      "function tokenDataOriginChainId(bytes _erc20Data) view returns (uint256 tokenOriginChainId)",
      "function transferFundsFromSharedBridge(address _token)",
      "function transferOwnership(address newOwner)",
      "function tryRegisterTokenFromBurnData(bytes _burnData, bytes32 _expectedAssetId)",
      "function unpause()",
      "function updateChainBalancesFromSharedBridge(address _token, uint256 _targetChainId)"
    ],
    "0xE30Dca3047B37dc7d88849dE4A4Dc07937ad5Ab3": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xE689e79a06D3D09f99C21E534cCF6a8b7C9b3C45": [
      "error ZeroAddress()",
      "event DAPairUpdated(address indexed l1DAValidator, address indexed l2DAValidator, bool status)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function acceptOwnership()",
      "function allowedDAPairs(address l1DAValidator, address l2DAValidator) view returns (bool)",
      "function isPairAllowed(address _l1DAValidator, address _l2DAValidator) view returns (bool)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function updateDAPair(address _l1DAValidator, address _l2DAValidator, bool _status)"
    ],
    "0xECE8e30bFc92c2A8e11e6cb2e17B70868572E3f6": [
      "constructor(address _protocolUpgradeHandler, address _securityCouncil, address _guardians, address _zkFoundation)",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "event EIP712DomainChanged()",
      "function GUARDIANS() view returns (address)",
      "function PROTOCOL_UPGRADE_HANDLER() view returns (address)",
      "function SECURITY_COUNCIL() view returns (address)",
      "function ZK_FOUNDATION_SAFE() view returns (address)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function executeEmergencyUpgrade(tuple(address target, uint256 value, bytes data)[] _calls, bytes32 _salt, bytes _guardiansSignatures, bytes _securityCouncilSignatures, bytes _zkFoundationSignatures)"
    ],
    "0xFB90Da9DC45378A1B50775Beb03aD10C7E8DC231": [
      "constructor(address _singleton)"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x7d24ef68050bed263f4cfd0471631d16b2f33814fbbd4e9aadf666c81bbf0c2d",
    "GnosisSafe": "0x12db59bec64fa8de67bbeb6a6e913f6c5ff1598c0a5fba90282afaf08e2a748c",
    "shared-zk-stack/ChainAdmin": "0x8be9e939e27d818ead1d430f9f603f4143a5f3d809e6f287aa3d463e5a8f5b8b",
    "shared-zk-stack/EmergencyUpgradeBoard": "0xacd4df56d946492afa03616aa316816a98708b5748146311403dee1b08202d21",
    "shared-zk-stack/Guardians": "0x930c8157109c56bfeaf429f0178d7025d6b21175c4f0c9d57ad594991cc7076d",
    "shared-zk-stack/SecurityCouncil": "0x0b8804832bc8dce16a070579f3ae7bd8a88ec36c613ed48e2ffc2d8fae340180",
    "shared-zk-stack/v26/BridgeHub": "0xf014e4d30ee25cd14594d8255fb3576318fbe9b5eba6bbbec917528cdd8c07fc",
    "shared-zk-stack/v26/ChainTypeManager": "0xbe2d88a172590cb3a629ad843086d648ed322c86eb23d4da6a7f43dfe04b8f0c",
    "shared-zk-stack/v26/CTMDeploymentTracker": "0xeb9db9a349a757fe90088c401a5cf10b7da6a7dbd22abd4e0c21ad9a95292ef1",
    "shared-zk-stack/v26/L1AssetRouter": "0x4530b565b0dd64d0a259a829b0966d9bad2fa221c992d87478f69a5d1b62fb76",
    "shared-zk-stack/v26/L1GenesisUpgrade": "0xeb9db9a349a757fe90088c401a5cf10b7da6a7dbd22abd4e0c21ad9a95292ef1",
    "shared-zk-stack/v26/L1NativeTokenVault": "0x7bd47f45f2baddec3c33a5404c10844207f831a2d96e1465df80445d277f32d1",
    "shared-zk-stack/v26/L1Nullifier": "0xffad2aec15a6d3fed0ca55cc600f9ee54a1148708bbb360b9b82a1a4c7c05416",
    "shared-zk-stack/v26/MessageRoot": "0xeb9db9a349a757fe90088c401a5cf10b7da6a7dbd22abd4e0c21ad9a95292ef1",
    "shared-zk-stack/v26/ProtocolUpgradeHandler": "0x8aea3a24bbb610625e47a3a4b122ab03edc5836adb2cfec7e7d726f872498925",
    "shared-zk-stack/v26/RollupDAManager": "0x22b0bd78735c1c2fcbfd46f139a45581a44353b1025dfe3a7fe0ef88699bfde2",
    "shared-zk-stack/v26/RollupL1DAValidator": "0x6fbb45d11251921c07e800160fe95b7bb7e81f6f3b7d0c02107126e904d8cd9c"
  },
  "permissionsConfigHash": "0x2935c555bd9a1ec8441e688488acdba69abdf99782a7a1de272da4b7a9bb7994"
}
