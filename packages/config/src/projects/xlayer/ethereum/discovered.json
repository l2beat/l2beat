{
  "name": "xlayer",
  "chain": "ethereum",
  "timestamp": 1754482928,
  "configHash": "0xb2a8f06bc4ad242652df86a52cd6c78d891afd1662bfd1a7fab2d67924c26835",
  "sharedModules": ["shared-polygon-cdk"],
  "entries": [
    {
      "name": "PolygonPessimisticConsensus",
      "address": "eth:0x2B0ee28D4D51bC9aDde5E58E295873F61F4a0507",
      "type": "Contract",
      "template": "polygon-cdk/PolygonPessimisticConsensus",
      "sourceHashes": [
        "0xa25e4c87882527d75fa2198c374939dd0c3b3fd509be89ee51c9b206bc62bdc4",
        "0x555aef5e938f2211fc99363d15a2fcb7a9dc24ee5154f0d6be32a136d7dfbdf7"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "System contract defining the X Layer logic. It only enforces bridge accounting (pessimistic) proofs and is otherwise kept minimal as the layer 2 state transitions are not proven.",
      "ignoreInWatchMode": ["lastAccInputHash"],
      "sinceTimestamp": 1711785755,
      "sinceBlock": 19545462,
      "values": {
        "$admin": "eth:0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2",
        "$implementation": "eth:0x18C45DD422f6587357a6d3b23307E75D42b2bc5B",
        "$pastUpgrades": [
          [
            "2024-03-30T08:02:35.000Z",
            "0x35215d1a6f4ad41bedfbfc481d53b9d508864a6ace025f243264978e1a755f81",
            ["eth:0x10D296e8aDd0535be71639E5D1d1c30ae1C6bD4C"]
          ],
          [
            "2025-01-07T13:41:23.000Z",
            "0x9d23f56225d22a2a1b82c2aa6122b1a29896686b30bb1f3def0189043699d46f",
            ["eth:0x427113ae6F319BfFb4459bfF96eb8B6BDe1A127F"]
          ],
          [
            "2025-08-05T12:41:47.000Z",
            "0xab579dbf426db0badfaef925504105088f3300b51f1362a4084c57d7e13c0fb1",
            ["eth:0x18C45DD422f6587357a6d3b23307E75D42b2bc5B"]
          ]
        ],
        "$upgradeCount": 3,
        "admin": "eth:0xa90B4C8B8807569980F6cC958c8905383136B5eA",
        "bridgeAddress": "eth:0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe",
        "CONSENSUS_TYPE": 0,
        "forceBatchAddress": "eth:0x491619874b866c3cDB7C8553877da223525ead01",
        "forceBatchTimeout": 432000,
        "gasTokenAddress": "eth:0x75231F58b43240C9718Dd58B4967c5114342a86c",
        "gasTokenNetwork": 0,
        "getConsensusHash": "0x98293538c941dc104cfe32cbcbb62446815cbaf38feebc35af553113b8499aee",
        "globalExitRootManager": "eth:0x580bda1e7A0CFAe92Fa7F6c20A3794F169CE3CFb",
        "lastAccInputHash": "0xdc916848626fb811c983791d17ff768954d2a92ba983d65d28df398a1543e7f2",
        "lastForceBatch": 0,
        "lastForceBatchSequenced": 0,
        "networkName": "X Layer",
        "pendingAdmin": "eth:0xa90B4C8B8807569980F6cC958c8905383136B5eA",
        "pol": "eth:0x455e53CBB86018Ac2B8092FdCd39d8444aFFC3F6",
        "rollupManager": "eth:0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2",
        "trustedSequencer": "eth:0x610DE9141a2c51A9A9624278AA97fbE54b27c102",
        "trustedSequencerURL": "https://rpc.xlayer.tech"
      },
      "fieldMeta": {
        "CONSENSUS_TYPE": {
          "description": "0 - ECDSA sig verification, 1 - aggchainVkey verification (read by the pessimistic program)"
        },
        "forceBatchAddress": {
          "severity": "HIGH",
          "description": "If this changes to the ZERO address, an update to the risk rosette is probably needed, since forcing batches is open to everyone."
        }
      },
      "implementationNames": {
        "eth:0x2B0ee28D4D51bC9aDde5E58E295873F61F4a0507": "PolygonTransparentProxy",
        "eth:0x18C45DD422f6587357a6d3b23307E75D42b2bc5B": "PolygonPessimisticConsensus"
      },
      "category": { "name": "Local Infrastructure", "priority": 5 }
    },
    {
      "address": "eth:0x491619874b866c3cDB7C8553877da223525ead01",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0x2B0ee28D4D51bC9aDde5E58E295873F61F4a0507",
          "description": "sole address that can force batches.",
          "role": ".forceBatchAddress"
        }
      ]
    },
    {
      "address": "eth:0x610DE9141a2c51A9A9624278AA97fbE54b27c102",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0x2B0ee28D4D51bC9aDde5E58E295873F61F4a0507",
          "description": "must provide a signature for each pessimistic proof, attesting to a valid state transition.",
          "role": ".trustedSequencer"
        }
      ]
    },
    {
      "address": "eth:0xa90B4C8B8807569980F6cC958c8905383136B5eA",
      "type": "EOA",
      "proxyType": "EOA",
      "receivedPermissions": [
        {
          "permission": "interact",
          "from": "eth:0x2B0ee28D4D51bC9aDde5E58E295873F61F4a0507",
          "description": "set the trusted sequencer address.",
          "role": ".admin"
        }
      ]
    }
  ],
  "abis": {
    "eth:0x18C45DD422f6587357a6d3b23307E75D42b2bc5B": [
      "constructor(address _globalExitRootManager, address _pol, address _bridgeAddress, address _rollupManager)",
      "error BatchAlreadyVerified()",
      "error BatchNotSequencedOrNotSequenceEnd()",
      "error ExceedMaxVerifyBatches()",
      "error FinalAccInputHashDoesNotMatch()",
      "error FinalNumBatchBelowLastVerifiedBatch()",
      "error FinalNumBatchDoesNotMatchPendingState()",
      "error FinalPendingStateNumInvalid()",
      "error ForceBatchNotAllowed()",
      "error ForceBatchTimeoutNotExpired()",
      "error ForceBatchesAlreadyActive()",
      "error ForceBatchesDecentralized()",
      "error ForceBatchesNotAllowedOnEmergencyState()",
      "error ForceBatchesOverflow()",
      "error ForcedDataDoesNotMatch()",
      "error GasTokenNetworkMustBeZeroOnEther()",
      "error GlobalExitRootNotExist()",
      "error HaltTimeoutNotExpired()",
      "error HaltTimeoutNotExpiredAfterEmergencyState()",
      "error HugeTokenMetadataNotSupported()",
      "error InitNumBatchAboveLastVerifiedBatch()",
      "error InitNumBatchDoesNotMatchPendingState()",
      "error InitSequencedBatchDoesNotMatch()",
      "error InvalidInitializeTransaction()",
      "error InvalidProof()",
      "error InvalidRangeBatchTimeTarget()",
      "error InvalidRangeForceBatchTimeout()",
      "error InvalidRangeMultiplierBatchFee()",
      "error L1InfoTreeLeafCountInvalid()",
      "error MaxTimestampSequenceInvalid()",
      "error NewAccInputHashDoesNotExist()",
      "error NewPendingStateTimeoutMustBeLower()",
      "error NewStateRootNotInsidePrime()",
      "error NewTrustedAggregatorTimeoutMustBeLower()",
      "error NotEnoughMaticAmount()",
      "error NotEnoughPOLAmount()",
      "error OldAccInputHashDoesNotExist()",
      "error OldStateRootDoesNotExist()",
      "error OnlyAdmin()",
      "error OnlyPendingAdmin()",
      "error OnlyRollupManager()",
      "error OnlyTrustedAggregator()",
      "error OnlyTrustedSequencer()",
      "error PendingStateDoesNotExist()",
      "error PendingStateInvalid()",
      "error PendingStateNotConsolidable()",
      "error PendingStateTimeoutExceedHaltAggregationTimeout()",
      "error SequenceZeroBatches()",
      "error SequencedTimestampBelowForcedTimestamp()",
      "error SequencedTimestampInvalid()",
      "error StoredRootMustBeDifferentThanNewRoot()",
      "error TransactionsLengthAboveMax()",
      "error TrustedAggregatorTimeoutExceedHaltAggregationTimeout()",
      "error TrustedAggregatorTimeoutNotExpired()",
      "event AcceptAdminRole(address newAdmin)",
      "event Initialized(uint8 version)",
      "event SetTrustedSequencer(address newTrustedSequencer)",
      "event SetTrustedSequencerURL(string newTrustedSequencerURL)",
      "event TransferAdminRole(address newPendingAdmin)",
      "function CONSENSUS_TYPE() view returns (uint32)",
      "function acceptAdminRole()",
      "function admin() view returns (address)",
      "function bridgeAddress() view returns (address)",
      "function forceBatchAddress() view returns (address)",
      "function forceBatchTimeout() view returns (uint64)",
      "function forcedBatches(uint64) view returns (bytes32)",
      "function gasTokenAddress() view returns (address)",
      "function gasTokenNetwork() view returns (uint32)",
      "function getConsensusHash() view returns (bytes32)",
      "function globalExitRootManager() view returns (address)",
      "function initialize(address _admin, address sequencer, uint32, address _gasTokenAddress, string sequencerURL, string _networkName)",
      "function lastAccInputHash() view returns (bytes32)",
      "function lastForceBatch() view returns (uint64)",
      "function lastForceBatchSequenced() view returns (uint64)",
      "function networkName() view returns (string)",
      "function pendingAdmin() view returns (address)",
      "function pol() view returns (address)",
      "function rollupManager() view returns (address)",
      "function setTrustedSequencer(address newTrustedSequencer)",
      "function setTrustedSequencerURL(string newTrustedSequencerURL)",
      "function transferAdminRole(address newPendingAdmin)",
      "function trustedSequencer() view returns (address)",
      "function trustedSequencerURL() view returns (string)"
    ],
    "eth:0x2B0ee28D4D51bC9aDde5E58E295873F61F4a0507": [
      "constructor(address _logic, address admin, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ]
  },
  "usedTemplates": {
    "polygon-cdk/PolygonPessimisticConsensus": "0xe243e1961d0062de8984cb8f88f047117bb8998497751cfd58b4dcf414cd66b5"
  },
  "usedBlockNumbers": { "ethereum": 23081993 },
  "permissionsConfigHash": "0x9e9d974f6fcc9707e2c69b704a5f1f50f5b78c18816eb17ffbc833d35ad8b058"
}
