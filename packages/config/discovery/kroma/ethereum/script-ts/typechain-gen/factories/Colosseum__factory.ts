/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { Colosseum, ColosseumInterface } from '../Colosseum'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract L2OutputOracle',
        name: '_l2Oracle',
        type: 'address',
      },
      {
        internalType: 'contract ZKVerifier',
        name: '_zkVerifier',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_submissionInterval',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_creationPeriodSeconds',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_bisectionTimeout',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_provingTimeout',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_dummyHash',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: '_maxTxs',
        type: 'uint256',
      },
      {
        internalType: 'uint256[]',
        name: '_segmentsLengths',
        type: 'uint256[]',
      },
      {
        internalType: 'address',
        name: '_securityCouncil',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_zkMerkleTrie',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'outputIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint8',
        name: 'turn',
        type: 'uint8',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'Bisected',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'outputIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'ChallengeCanceled',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'outputIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'asserter',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'ChallengeCreated',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'outputIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'ChallengeDismissed',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'outputIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'ChallengerTimedOut',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'outputIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'Proven',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'outputIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
    ],
    name: 'ReadyToProve',
    type: 'event',
  },
  {
    inputs: [],
    name: 'BISECTION_TIMEOUT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'CREATION_PERIOD_SECONDS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DUMMY_HASH',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_ORACLE',
    outputs: [
      {
        internalType: 'contract L2OutputOracle',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_ORACLE_SUBMISSION_INTERVAL',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'MAX_TXS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'PROVING_TIMEOUT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SECURITY_COUNCIL',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ZK_MERKLE_TRIE',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'ZK_VERIFIER',
    outputs: [
      {
        internalType: 'contract ZKVerifier',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_challenger',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_pos',
        type: 'uint256',
      },
      {
        internalType: 'bytes32[]',
        name: '_segments',
        type: 'bytes32[]',
      },
    ],
    name: 'bisect',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
    ],
    name: 'cancelChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_challenger',
        type: 'address',
      },
    ],
    name: 'challengerTimeout',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'challenges',
    outputs: [
      {
        internalType: 'uint8',
        name: 'turn',
        type: 'uint8',
      },
      {
        internalType: 'uint64',
        name: 'timeoutAt',
        type: 'uint64',
      },
      {
        internalType: 'address',
        name: 'asserter',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'challenger',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'segSize',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'segStart',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_l1BlockHash',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: '_l1BlockNumber',
        type: 'uint256',
      },
      {
        internalType: 'bytes32[]',
        name: '_segments',
        type: 'bytes32[]',
      },
    ],
    name: 'createChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_challenger',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_asserter',
        type: 'address',
      },
      {
        internalType: 'bytes32',
        name: '_outputRoot',
        type: 'bytes32',
      },
      {
        internalType: 'bytes32',
        name: '_publicInputHash',
        type: 'bytes32',
      },
    ],
    name: 'dismissChallenge',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
    ],
    name: 'forceDeleteOutput',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_challenger',
        type: 'address',
      },
    ],
    name: 'getChallenge',
    outputs: [
      {
        components: [
          {
            internalType: 'uint8',
            name: 'turn',
            type: 'uint8',
          },
          {
            internalType: 'uint64',
            name: 'timeoutAt',
            type: 'uint64',
          },
          {
            internalType: 'address',
            name: 'asserter',
            type: 'address',
          },
          {
            internalType: 'address',
            name: 'challenger',
            type: 'address',
          },
          {
            internalType: 'bytes32[]',
            name: 'segments',
            type: 'bytes32[]',
          },
          {
            internalType: 'uint256',
            name: 'segSize',
            type: 'uint256',
          },
          {
            internalType: 'uint256',
            name: 'segStart',
            type: 'uint256',
          },
        ],
        internalType: 'struct Types.Challenge',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: '_turn',
        type: 'uint8',
      },
    ],
    name: 'getSegmentsLength',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_challenger',
        type: 'address',
      },
    ],
    name: 'getStatus',
    outputs: [
      {
        internalType: 'enum Colosseum.ChallengeStatus',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256[]',
        name: '_segmentsLengths',
        type: 'uint256[]',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: '_challenger',
        type: 'address',
      },
    ],
    name: 'isAbleToBisect',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
    ],
    name: 'isInCreationPeriod',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_pos',
        type: 'uint256',
      },
      {
        components: [
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'version',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'stateRoot',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'messagePasserStorageRoot',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'blockHash',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'nextBlockHash',
                type: 'bytes32',
              },
            ],
            internalType: 'struct Types.OutputRootProof',
            name: 'srcOutputRootProof',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'version',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'stateRoot',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'messagePasserStorageRoot',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'blockHash',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'nextBlockHash',
                type: 'bytes32',
              },
            ],
            internalType: 'struct Types.OutputRootProof',
            name: 'dstOutputRootProof',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'bytes32',
                name: 'blockHash',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'parentHash',
                type: 'bytes32',
              },
              {
                internalType: 'uint64',
                name: 'timestamp',
                type: 'uint64',
              },
              {
                internalType: 'uint64',
                name: 'number',
                type: 'uint64',
              },
              {
                internalType: 'uint64',
                name: 'gasLimit',
                type: 'uint64',
              },
              {
                internalType: 'uint256',
                name: 'baseFee',
                type: 'uint256',
              },
              {
                internalType: 'bytes32',
                name: 'transactionsRoot',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'stateRoot',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32',
                name: 'withdrawalsRoot',
                type: 'bytes32',
              },
              {
                internalType: 'bytes32[]',
                name: 'txHashes',
                type: 'bytes32[]',
              },
            ],
            internalType: 'struct Types.PublicInput',
            name: 'publicInput',
            type: 'tuple',
          },
          {
            components: [
              {
                internalType: 'bytes',
                name: 'uncleHash',
                type: 'bytes',
              },
              {
                internalType: 'bytes',
                name: 'coinbase',
                type: 'bytes',
              },
              {
                internalType: 'bytes',
                name: 'receiptsRoot',
                type: 'bytes',
              },
              {
                internalType: 'bytes',
                name: 'logsBloom',
                type: 'bytes',
              },
              {
                internalType: 'bytes',
                name: 'difficulty',
                type: 'bytes',
              },
              {
                internalType: 'bytes',
                name: 'gasUsed',
                type: 'bytes',
              },
              {
                internalType: 'bytes',
                name: 'extraData',
                type: 'bytes',
              },
              {
                internalType: 'bytes',
                name: 'mixHash',
                type: 'bytes',
              },
              {
                internalType: 'bytes',
                name: 'nonce',
                type: 'bytes',
              },
            ],
            internalType: 'struct Types.BlockHeaderRLP',
            name: 'rlps',
            type: 'tuple',
          },
          {
            internalType: 'bytes32',
            name: 'l2ToL1MessagePasserBalance',
            type: 'bytes32',
          },
          {
            internalType: 'bytes32',
            name: 'l2ToL1MessagePasserCodeHash',
            type: 'bytes32',
          },
          {
            internalType: 'bytes[]',
            name: 'merkleProof',
            type: 'bytes[]',
          },
        ],
        internalType: 'struct Types.PublicInputProof',
        name: '_proof',
        type: 'tuple',
      },
      {
        internalType: 'uint256[]',
        name: '_zkproof',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[]',
        name: '_pair',
        type: 'uint256[]',
      },
    ],
    name: 'proveFault',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'verifiedPublicInputs',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'version',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x6102206040523480156200001257600080fd5b50604051620056f5380380620056f5833981016040819052620000359162000439565b6001608052600060a081905260c0526001600160a01b03808c1660e0528a8116610100526101208990526101408890526101608790526101808a90526101a08690526101c08590528281166101e0528116610200526200009583620000a6565b505050505050505050505062000592565b600054610100900460ff1615808015620000c75750600054600160ff909116105b80620000f75750620000e430620001da60201b6200245c1760201c565b158015620000f7575060005460ff166001145b620001605760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801562000184576000805461ff0019166101001790555b6200018f82620001e9565b8015620001d6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6001600160a01b03163b151590565b60028151620001f9919062000507565b156200026e5760405162461bcd60e51b815260206004820152603a60248201527f436f6c6f737365756d3a206c656e677468206f66207365676d656e7473206c6560448201527f6e677468732063616e6e6f74206265206f6464206e756d626572000000000000606482015260840162000157565b600160005b8251811015620002f3578281815181106200029257620002926200052a565b602002602001015160016000838152602001908152602001600020819055506001838281518110620002c857620002c86200052a565b6020026020010151620002dc919062000556565b620002e8908362000570565b915060010162000273565b50610180518114620001d65760405162461bcd60e51b815260206004820152602360248201527f436f6c6f737365756d3a20696e76616c6964207365676d656e7473206c656e6760448201526274687360e81b606482015260840162000157565b6001600160a01b03811681146200036a57600080fd5b50565b80516200037a8162000354565b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620003a757600080fd5b815160206001600160401b0380831115620003c657620003c66200037f565b8260051b604051601f19603f83011681018181108482111715620003ee57620003ee6200037f565b6040529384528581018301938381019250878511156200040d57600080fd5b83870191505b848210156200042e5781518352918301919083019062000413565b979650505050505050565b60008060008060008060008060008060006101608c8e0312156200045c57600080fd5b8b51620004698162000354565b60208d0151909b506200047c8162000354565b809a505060408c0151985060608c0151975060808c0151965060a08c0151955060c08c0151945060e08c015193506101008c015160018060401b03811115620004c457600080fd5b620004d28e828f0162000395565b935050620004e46101208d016200036d565b9150620004f56101408d016200036d565b90509295989b509295989b9093969950565b6000826200052557634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156200056b576200056b62000540565b500390565b60008160001904831182151516156200058d576200058d62000540565b500290565b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051614fbc620007396000396000818161037901526130cb0152600081816102ce01528181610794015281816110890152818161188d0152611a8e01526000818161033d015281816131cc015261323a0152600081816104c1015261320601526000818161047301528181612370015281816123a00152612a3a01526000818161049a015281816124cb01526134610152600081816102f501526134b10152600081816103ec015281816106a60152611ec70152600081816104130152610e3d015260008181610197015281816106360152818161084e0152818161097b01528181610b4d01528181610f5f0152818161120301528181611261015281816114b2015281816118e20152818161198b01528181611ab601528181611c6101528181611e4f015281816121050152818161224c01528181612602015281816126930152818161270a015281816127cb01528181612ad60152612cd60152600061073f01526000610716015260006106ed0152614fbc6000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063887c560f116100de578063cfb4474d11610097578063e39a219c11610071578063e39a219c146104e3578063e58932b3146104f6578063e9371a2c14610516578063fc9d84df1461053657600080fd5b8063cfb4474d1461046e578063d2ee307514610495578063d5145ebc146104bc57600080fd5b8063887c560f146103d45780638f3a6c88146103e75780639ded39521461040e578063a41483e314610435578063a6ade11f14610448578063b8b1a27c1461045b57600080fd5b8063461569b81161014b5780635865b607116101255780635865b6071461037457806362fc00db1461039b5780636fe0e559146103ae57806379c2575a146103c157600080fd5b8063461569b8146103255780635375b8911461033857806354fd4d501461035f57600080fd5b80621c2ff6146101925780631be4e27e146101d65780631db1b672146102095780632df27fa51461021e57806336086417146102c95780634394c584146102f0575b600080fd5b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6101f96101e4366004613f95565b60036020526000908152604090205460ff1681565b60405190151581526020016101cd565b61021c610217366004613fc3565b610549565b005b61028361022c366004613fc3565b6002602090815260009283526040808420909152908252902080546001820154600383015460049093015460ff8316936001600160401b03610100850416936001600160a01b03600160481b909104811693169186565b6040805160ff90971687526001600160401b0390951660208701526001600160a01b039384169486019490945291166060840152608083015260a082015260c0016101cd565b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b6103177f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016101cd565b6101f9610333366004613f95565b610613565b6103177f000000000000000000000000000000000000000000000000000000000000000081565b6103676106e6565b6040516101cd919061404b565b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b61021c6103a936600461405e565b610789565b61021c6103bc366004614165565b610a22565b61021c6103cf366004614245565b610b35565b6101f96103e2366004613fc3565b611353565b6103177f000000000000000000000000000000000000000000000000000000000000000081565b6101b97f000000000000000000000000000000000000000000000000000000000000000081565b61021c610443366004613f95565b611388565b61021c6104563660046142f5565b61149a565b61031761046936600461435e565b611805565b6103177f000000000000000000000000000000000000000000000000000000000000000081565b6103177f000000000000000000000000000000000000000000000000000000000000000081565b6103177f000000000000000000000000000000000000000000000000000000000000000081565b61021c6104f1366004613f95565b611882565b610509610504366004613fc3565b611b18565b6040516101cd9190614381565b610529610524366004613fc3565b611c1e565b6040516101cd9190614445565b61021c61054436600461446d565b611c49565b60008281526002602090815260408083206001600160a01b03851684529091528120906105758261246b565b9050600381600581111561058b5761058b61442f565b146106035760405162461bcd60e51b815260206004820152603c60248201527f436f6c6f737365756d3a2063616e206f6e6c792062652063616c6c656420696660448201527f20746865206368616c6c656e67657220697320696e2074696d6f75740000000060648201526084015b60405180910390fd5b61060d8484612546565b50505050565b60405163a25ae55760e01b81526004810182905260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a25ae55790602401608060405180830381865afa15801561067d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a191906144c7565b9050427f000000000000000000000000000000000000000000000000000000000000000082604001516001600160801b03166106dd9190614554565b10159392505050565b60606107117f00000000000000000000000000000000000000000000000000000000000000006128ab565b61073a7f00000000000000000000000000000000000000000000000000000000000000006128ab565b6107637f00000000000000000000000000000000000000000000000000000000000000006128ab565b6040516020016107759392919061456c565b604051602081830303815290604052905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107d15760405162461bcd60e51b81526004016105fa906145c6565b816108355760405162461bcd60e51b815260206004820152602e60248201527f436f6c6f737365756d3a2063616e6e6f7420726f6c6c6261636b206f7574707560448201526d0e840e8de40f4cae4de40d0c2e6d60931b60648201526084016105fa565b60405163a25ae55760e01b8152600481018690526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a25ae55790602401608060405180830381865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c191906144c7565b60200151146109385760405162461bcd60e51b815260206004820152603b60248201527f436f6c6f737365756d3a206f6e6c792063616e20726f6c6c6261636b2069662060448201527f746865206f757470757420686173206265656e2064656c65746564000000000060648201526084016105fa565b60008181526003602052604090819020805460ff191690555163e664672360e01b815260048101869052602481018390526001600160a01b0384811660448301527f0000000000000000000000000000000000000000000000000000000000000000169063e664672390606401600060405180830381600087803b1580156109bf57600080fd5b505af11580156109d3573d6000803e3d6000fd5b50505050836001600160a01b0316857fdca9fa9b51a5ba03938c6a0cd5489011630370fc481ef2b0cb771ad904a7305342604051610a1391815260200190565b60405180910390a35050505050565b600054610100900460ff1615808015610a425750600054600160ff909116105b80610a5c5750303b158015610a5c575060005460ff166001145b610abf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105fa565b6000805460ff191660011790558015610ae2576000805461ff0019166101001790555b610aeb8261293d565b8015610b31576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6040516333727c4d60e01b81526004810188905287907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906333727c4d90602401602060405180830381865afa158015610b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc09190614613565b15610bdd5760405162461bcd60e51b81526004016105fa90614635565b6000888152600260209081526040808320338452909152812090610c008261246b565b6001830154909150610c1d908b906001600160a01b031683612ab3565b15610c29575050611349565b6005816005811115610c3d57610c3d61442f565b1480610c5a57506004816005811115610c5857610c5861442f565b145b610ccc5760405162461bcd60e51b815260206004820152603a60248201527f436f6c6f737365756d3a20696d706f737369626c6520746f2070726f7665207460448201527f6865206661756c7420696e2063757272656e742073746174757300000000000060648201526084016105fa565b6000610ce5610ce0368b90038b018b6146a6565b612dca565b90506000610cfe610ce0368c90038c0160a08d016146a6565b9050610d118b8584848e60a08101612e8c565b610d3a8a60a08101610d27610140830183614715565b610d356101608f018f614736565b612fdb565b610d6c610d4b6101c08c018c61474d565b8c61018001358d6101a001358e60a001604001358f60a0016020013561308c565b6000610d8960208c0135610d846101408e018e614715565b6131c6565b60008181526003602052604090205490915060ff1615610e265760405162461bcd60e51b815260206004820152604c60248201527f436f6c6f737365756d3a207075626c696320696e70757420746861742068617360448201527f20616c7265616479206265656e2076616c6964617465642063616e6e6f74206260648201526b32903ab9b2b21030b3b0b4b760a11b608482015260a4016105fa565b6040516321496e1f60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690634292dc3e90610e7a908d908d908d908d9088906004016147cc565b602060405180830381865afa158015610e97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebb9190614613565b610f075760405162461bcd60e51b815260206004820152601860248201527f436f6c6f737365756d3a20696e76616c69642070726f6f66000000000000000060448201526064016105fa565b60405142815233908e907f0431864ed2609170587bbc7c198abd8caee4c55943dfb16fd42ec6f59c91c5f79060200160405180910390a360405163a25ae55760e01b8152600481018e90526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a25ae55790602401608060405180830381865afa158015610fa6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fca91906144c7565b905060006362fc00db60e01b8f338960000160099054906101000a90046001600160a01b03168560200151876040516024016110349594939291909485526001600160a01b0393841660208601529190921660408401526060830191909152608082015260a00190565b60408051601f19818403018152918152602080830180516001600160e01b03166001600160e01b0319909516949094179093529184015160608501519251630405c8f760e11b81529193506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169263080b91ee926110c09291908690600401614806565b600060405180830381600087803b1580156110da57600080fd5b505af11580156110ee573d6000803e3d6000fd5b50505050505060016003600083815260200190815260200160002060006101000a81548160ff021916908315150217905550600260008e81526020019081526020016000206000336001600160a01b03166001600160a01b03168152602001908152602001600020600080820160006101000a81549060ff02191690556000820160016101000a8154906001600160401b0302191690556000820160096101000a8154906001600160a01b0302191690556001820160006101000a8154906001600160a01b0302191690556002820160006111c99190613f17565b50600060038201819055600491820181905560405163e664672360e01b81529182018f905260248201523360448201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e664672390606401600060405180830381600087803b15801561124757600080fd5b505af115801561125b573d6000803e3d6000fd5b505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b98debbf6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e19190614837565b60405163dd215c5d60e01b8152600481018f90523360248201526001600160a01b03919091169063dd215c5d90604401600060405180830381600087803b15801561132b57600080fd5b505af115801561133f573d6000803e3d6000fd5b5050505050505050505b5050505050505050565b60008281526002602090815260408083206001600160a01b0385168452909152812061137e81613279565b9150505b92915050565b60008181526002602090815260408083203384529091528120906113ab8261246b565b905060008160058111156113c1576113c161442f565b0361141e5760405162461bcd60e51b815260206004820152602760248201527f436f6c6f737365756d3a20746865206368616c6c656e676520646f6573206e6f6044820152661d08195e1a5cdd60ca1b60648201526084016105fa565b60018201546114389084906001600160a01b031683612ab3565b6114955760405162461bcd60e51b815260206004820152602860248201527f436f6c6f737365756d3a206368616c6c656e67652063616e6e6f742062652063604482015267185b98d95b1b195960c21b60648201526084016105fa565b505050565b6040516333727c4d60e01b81526004810186905285907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906333727c4d90602401602060405180830381865afa158015611501573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115259190614613565b156115425760405162461bcd60e51b81526004016105fa90614635565b60008681526002602090815260408083206001600160a01b038916845290915281209061156e8261246b565b600183015490915061158b9089906001600160a01b031683612ab3565b156115975750506117fd565b600060018260058111156115ad576115ad61442f565b036115c6575060018201546001600160a01b03166115f3565b60028260058111156115da576115da61442f565b036115f357508154600160481b90046001600160a01b03165b336001600160a01b0382161461164b5760405162461bcd60e51b815260206004820152601860248201527f436f6c6f737365756d3a206e6f7420796f7572207475726e000000000000000060448201526064016105fa565b825460009061165e9060ff166001614854565b90506116e981856002018a8154811061167957611679614879565b9060005260206000200154866002018b60016116959190614554565b815481106116a5576116a5614879565b90600052602060002001548a8a8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061328d92505050565b60006116f4856133f9565b90506000611702828b61488f565b86600401546117119190614554565b9050611754868a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508692508791506134259050565b855460ff191660ff841617865561176a8661344f565b6040805160ff851681524260208201526001600160a01b038d16918e917fcadef6622777415b0589e491bdbf6baf11242f676f77055fd03bf1658c17a145910160405180910390a36117bb86613279565b6117f6576040516001600160a01b038c16908d907f5c4528cbb38a169d24837617d3fd3d5c70a47769a4e9af6f384720b359b716c890600090a35b5050505050505b505050505050565b6000600160ff8316101561185b5760405162461bcd60e51b815260206004820152601760248201527f436f6c6f737365756d3a20696e76616c6964207475726e00000000000000000060448201526064016105fa565b6001600061186982856148ae565b60ff168152602001908152602001600020549050919050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118ca5760405162461bcd60e51b81526004016105fa906145c6565b6040516333727c4d60e01b81526004810182905281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906333727c4d90602401602060405180830381865afa158015611931573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119559190614613565b156119725760405162461bcd60e51b81526004016105fa90614635565b60405163a25ae55760e01b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a25ae55790602401608060405180830381865afa1580156119da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119fe91906144c7565b6020810151909150611a695760405162461bcd60e51b815260206004820152602e60248201527f436f6c6f737365756d3a20746865206f75747075742068617320616c7265616460448201526d1e481899595b8819195b195d195960921b60648201526084016105fa565b60405163e664672360e01b815260048101849052600060248201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660448301527f0000000000000000000000000000000000000000000000000000000000000000169063e6646723906064015b600060405180830381600087803b158015611afb57600080fd5b505af1158015611b0f573d6000803e3d6000fd5b50505050505050565b6040805160e0810182526000808252602082018190529181018290526060808201839052608082015260a0810182905260c081019190915260008381526002602081815260408084206001600160a01b03808816865290835293819020815160e081018352815460ff811682526001600160401b0361010082041682860152600160481b90048616818401526001820154909516606086015292830180548251818502810185019093528083526080860193830182828015611bf957602002820191906000526020600020905b815481526020019060010190808311611be5575b5050505050815260200160038201548152602001600482015481525050905092915050565b60008281526002602090815260408083206001600160a01b0385168452909152812061137e8161246b565b6040516333727c4d60e01b81526004810186905285907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906333727c4d90602401602060405180830381865afa158015611cb0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd49190614613565b15611cf15760405162461bcd60e51b81526004016105fa90614635565b60008611611d605760405162461bcd60e51b815260206004820152603660248201527f436f6c6f737365756d3a206368616c6c656e676520666f722067656e65736973604482015275081bdd5d1c1d5d081a5cc81b9bdd08185b1b1bddd95960521b60648201526084016105fa565b600086815260026020908152604080832033845290915290208054600160ff90911610611e36576000611d928261246b565b90506003816005811115611da857611da861442f565b14611e2a5760405162461bcd60e51b815260206004820152604660248201527f436f6c6f737365756d3a20746865206368616c6c656e676520666f722067697660448201527f656e206f757470757420696e64657820697320616c726561647920696e2070726064820152656f677265737360d01b608482015260a4016105fa565b611e348833612546565b505b60405163a25ae55760e01b8152600481018890526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a25ae55790602401608060405180830381865afa158015611e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec291906144c7565b9050427f000000000000000000000000000000000000000000000000000000000000000082604001516001600160801b0316611efe9190614554565b1015611f725760405162461bcd60e51b815260206004820152603e60248201527f436f6c6f737365756d3a2063616e6e6f74206372656174652061206368616c6c60448201527f656e676520616674657220746865206372656174696f6e20706572696f64000060648201526084016105fa565b6020810151611fe25760405162461bcd60e51b815260206004820152603660248201527f436f6c6f737365756d3a206368616c6c656e676520666f722064656c65746564604482015275081bdd5d1c1d5d081a5cc81b9bdd08185b1b1bddd95960521b60648201526084016105fa565b80516001600160a01b031633036120615760405162461bcd60e51b815260206004820152603860248201527f436f6c6f737365756d3a2074686520617373657274657220616e64206368616c60448201527f6c656e676572206d75737420626520646966666572656e74000000000000000060648201526084016105fa565b86158015906120705750854015155b156120f957868640146120f95760405162461bcd60e51b8152602060048201526044602482018190527f436f6c6f737365756d3a20626c6f636b206861736820646f6573206e6f74206d908201527f61746368207468652068617368206174207468652065787065637465642068656064820152631a59da1d60e21b608482015260a4016105fa565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663a25ae55761213560018c6148d1565b6040518263ffffffff1660e01b815260040161215391815260200190565b608060405180830381865afa158015612170573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061219491906144c7565b6020810151909150612202576121fd6001878760008181106121b8576121b8614879565b90506020020135846020015189898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061328d92505050565b61224a565b61224a60018260200151846020015189898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061328d92505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b98debbf6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122cc9190614837565b604051632d2a23a160e11b8152600481018b90523360248201526001600160a01b039190911690635a54474290604401600060405180830381600087803b15801561231657600080fd5b505af115801561232a573d6000803e3d6000fd5b505050506123c4838787808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152505050606086015161239e91507f0000000000000000000000000000000000000000000000000000000000000000906001600160801b03166148d1565b7f0000000000000000000000000000000000000000000000000000000000000000613425565b825482516001600160a01b0316600160481b0268ffffffffffffffff01600160e81b03199091161760019081178455830180546001600160a01b0319163317905561240e8361344f565b815160405142815233916001600160a01b0316908b907fd2f7931a802085b3d0234d4c320ce7ee0041da96678ce2bf5c93e8d3d7e65f529060200160405180910390a4505050505050505050565b6001600160a01b03163b151590565b8054600090600160ff909116101561248557506000919050565b81546000906124969060ff166134d9565b835490915061010090046001600160401b031642111561251a5780156124bf5750600392915050565b8254612503906124fe907f00000000000000000000000000000000000000000000000000000000000000009061010090046001600160401b0316614554565b421190565b156125115750600392915050565b50600492915050565b61252383613279565b6125305750600592915050565b8061253c57600261253f565b60015b9392505050565b60008281526002602081815260408084206001600160a01b0386168552909152822080546001600160e81b03191681556001810180546001600160a01b0319169055919061259690830182613f17565b600382016000905560048201600090555050806001600160a01b0316827fbf4506ef5d06ecb6168f37bc9e69dd473089eb9e3f2675322d01b4d466cff051426040516125e491815260200190565b60405180910390a36040516333727c4d60e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906333727c4d90602401602060405180830381865afa158015612651573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126759190614613565b156127c95760405163a25ae55760e01b8152600481018390526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a25ae55790602401608060405180830381865afa1580156126e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061270691906144c7565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b98debbf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612766573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061278a9190614837565b81516040516336b8346960e01b8152600481018690526001600160a01b03858116602483015291821660448201529116906336b8346990606401611ae1565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b98debbf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061284b9190614837565b60405163dd215c5d60e01b8152600481018490526001600160a01b038381166024830152919091169063dd215c5d90604401600060405180830381600087803b15801561289757600080fd5b505af11580156117fd573d6000803e3d6000fd5b606060006128b8836134f0565b60010190506000816001600160401b038111156128d7576128d76140b0565b6040519080825280601f01601f191660200182016040528015612901576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461290b57509392505050565b6002815161294b91906148fe565b156129be5760405162461bcd60e51b815260206004820152603a60248201527f436f6c6f737365756d3a206c656e677468206f66207365676d656e7473206c6560448201527f6e677468732063616e6e6f74206265206f6464206e756d62657200000000000060648201526084016105fa565b600160005b8251811015612a37578281815181106129de576129de614879565b602002602001015160016000838152602001908152602001600020819055506001838281518110612a1157612a11614879565b6020026020010151612a2391906148d1565b612a2d908361488f565b91506001016129c3565b507f00000000000000000000000000000000000000000000000000000000000000008114610b315760405162461bcd60e51b815260206004820152602360248201527f436f6c6f737365756d3a20696e76616c6964207365676d656e7473206c656e6760448201526274687360e81b60648201526084016105fa565b60405163a25ae55760e01b81526004810184905260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a25ae55790602401608060405180830381865afa158015612b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b4191906144c7565b6020015190508015612b5757600091505061253f565b336001600160a01b03851614612bbd5760405162461bcd60e51b815260206004820152602560248201527f436f6c6f737365756d3a2073656e646572206973206e6f742061206368616c6c60448201526432b733b2b960d91b60648201526084016105fa565b6003836005811115612bd157612bd161442f565b03612c46576040805162461bcd60e51b81526020600482015260248101919091527f436f6c6f737365756d3a206368616c6c656e67652063616e6e6f74206265206360448201527f616e63656c6c6564206966206368616c6c656e6765722074696d6564206f757460648201526084016105fa565b6000858152600260208181526040808420338552909152822080546001600160e81b03191681556001810180546001600160a01b03191690559190612c8d90830182613f17565b50600060038201819055600490910155604051428152339086907f6f3468a095154788e69ed719ee418416c1e338ac2348ccb3531bb97a0ed6ed9d9060200160405180910390a37f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663b98debbf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d32573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d569190614837565b6040516336b8346960e01b815260048101879052336024820181905260448201526001600160a01b0391909116906336b8346990606401600060405180830381600087803b158015612da757600080fd5b505af1158015612dbb573d6000803e3d6000fd5b50600198975050505050505050565b8051600090612e2c5781516020808401516040808601516060808801516080808a0151855180890199909952888601969096529187019290925285015260a0808501929092528051808503909201825260c09093019092528151910120611382565b60405162461bcd60e51b815260206004820152602a60248201527f48617368696e673a20756e6b6e6f776e206f757470757420726f6f742070726f60448201526937b3103b32b939b4b7b760b11b60648201526084016105fa565b919050565b83856002018781548110612ea257612ea2614879565b906000526020600020015414612f105760405162461bcd60e51b815260206004820152602d60248201527f436f6c6f737365756d3a2074686520736f75726365207365676d656e74206d7560448201526c1cdd081899481b585d18da1959609a1b60648201526084016105fa565b612f1985613279565b612fb4578260028601612f2d886001614554565b81548110612f3d57612f3d614879565b906000526020600020015403612fb45760405162461bcd60e51b815260206004820152603660248201527f436f6c6f737365756d3a207468652064657374696e6174696f6e207365676d656044820152751b9d081b5d5cdd081b9bdd081899481b585d18da195960521b60648201526084016105fa565b80606001358260800135146117fd5760405162461bcd60e51b81526004016105fa90614912565b82602001358260e00135146130445760405162461bcd60e51b815260206004820152602960248201527f436f6c6f737365756d3a2074686520737461746520726f6f74206d757374206260448201526819481b585d18da195960ba1b60648201526084016105fa565b6000613060613052846149d8565b61305b84614b02565b6135c8565b9050808560800135146130855760405162461bcd60e51b81526004016105fa90614912565b5050505050565b60408051600060208201528082018690526060810185905260808082018590528251808303909101815260a0820192839052630973253960e11b9092527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906312e64a729061311a90600360601b602160f91b019085908c908c90899060a401614ca0565b602060405180830381865afa158015613137573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061315b9190614613565b611b0f5760405162461bcd60e51b815260206004820152603660248201527f436f6c6f737365756d3a20696e76616c6964204c32546f4c314d6573736167656044820152752830b9b9b2b91034b731b63ab9b4b7b710383937b7b360511b60648201526084016105fa565b600060607f00000000000000000000000000000000000000000000000000000000000000006131f961012085018561474d565b90501015613266576132637f000000000000000000000000000000000000000000000000000000000000000061323361012086018661474d565b61325e91507f00000000000000000000000000000000000000000000000000000000000000006148d1565b61361f565b90505b61137e84613273856149d8565b836136aa565b60006001613286836133f9565b1192915050565b80518061329986611805565b146132f15760405162461bcd60e51b815260206004820152602260248201527f436f6c6f737365756d3a20696e76616c6964207365676d656e7473206c656e676044820152610e8d60f31b60648201526084016105fa565b8160008151811061330457613304614879565b6020026020010151841461336f5760405162461bcd60e51b815260206004820152602c60248201527f436f6c6f737365756d3a20746865206669727374207365676d656e74206d757360448201526b1d081899481b585d18da195960a21b60648201526084016105fa565b8161337b6001836148d1565b8151811061338b5761338b614879565b602002602001015183036130855760405162461bcd60e51b815260206004820152602f60248201527f436f6c6f737365756d3a20746865206c617374207365676d656e74206d75737460448201526e081b9bdd081899481b585d18da1959608a1b60648201526084016105fa565b805460009060ff16600161340c82611805565b61341691906148d1565b836003015461253f9190614d5d565b825161343a9060028601906020860190613f35565b50600484019190915560039092019190915550565b61345881613279565b6134ac576134867f000000000000000000000000000000000000000000000000000000000000000042614554565b81546001600160401b03919091166101000268ffffffffffffffff001990911617815550565b6134867f000000000000000000000000000000000000000000000000000000000000000042614554565b50565b60006134e6600283614d71565b60ff161592915050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b831061352f5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061355b576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061357957662386f26fc10000830492506010015b6305f5e1008310613591576305f5e100830492506008015b61271083106135a557612710830492506004015b606483106135b7576064830492506002015b600a83106113825760010192915050565b6040805160108082526102208201909252600091829190816020015b60608152602001906001900390816135e457905050905061360684848361371e565b61360f816139e2565b8051906020012091505092915050565b60606000826001600160401b0381111561363b5761363b6140b0565b604051908082528060200260200182016040528015613664578160200160208202803683370190505b50905060005b838110156136a2578482828151811061368557613685614879565b60209081029190910101528061369a81614d93565b91505061366a565b509392505050565b6000838360e0015184610100015185600001518660200151876060015188604001518960a001518a608001518b6101200151518c61012001518c6040516020016136ff9c9b9a99989796959493929190614ddf565b6040516020818303038152906040528051906020012090509392505050565b61374c836020015160405160200161373891815260200190565b604051602081830303815290604052613a26565b8160008151811061375f5761375f614879565b602002602001018190525081600001518160018151811061378257613782614879565b60200260200101819052508160200151816002815181106137a5576137a5614879565b60200260200101819052506137ca8360e0015160405160200161373891815260200190565b816003815181106137dd576137dd614879565b60200260200101819052506138028360c0015160405160200161373891815260200190565b8160048151811061381557613815614879565b602002602001018190525081604001518160058151811061383857613838614879565b602002602001018190525081606001518160068151811061385b5761385b614879565b602002602001018190525081608001518160078151811061387e5761387e614879565b602002602001018190525061389f83606001516001600160401b0316613a95565b816008815181106138b2576138b2614879565b60200260200101819052506138d383608001516001600160401b0316613a95565b816009815181106138e6576138e6614879565b60200260200101819052508160a0015181600a8151811061390957613909614879565b602002602001018190525061392a83604001516001600160401b0316613a95565b81600b8151811061393d5761393d614879565b60200260200101819052508160c0015181600c8151811061396057613960614879565b60200260200101819052508160e0015181600d8151811061398357613983614879565b602002602001018190525081610100015181600e815181106139a7576139a7614879565b60200260200101819052506139bf8360a00151613a95565b81600f815181106139d2576139d2614879565b6020026020010181905250505050565b606060006139ef83613aa8565b90506139fd815160c0613bdf565b81604051602001613a0f929190614e67565b604051602081830303815290604052915050919050565b60608082516001148015613a545750608083600081518110613a4a57613a4a614879565b016020015160f81c105b15613a60575081611382565b613a6c83516080613bdf565b83604051602001613a7e929190614e67565b604051602081830303815290604052905092915050565b6060611382613aa383613d8c565b613a26565b60608151600003613ac757505060408051600081526020810190915290565b6000805b8351811015613b0e57838181518110613ae657613ae6614879565b60200260200101515182613afa9190614554565b915080613b0681614d93565b915050613acb565b6000826001600160401b03811115613b2857613b286140b0565b6040519080825280601f01601f191660200182016040528015613b52576020820181803683370190505b50600092509050602081015b8551831015613bd6576000868481518110613b7b57613b7b614879565b602002602001015190506000602082019050613b9983828451613eba565b878581518110613bab57613bab614879565b60200260200101515183613bbf9190614554565b925050508280613bce90614d93565b935050613b5e565b50949350505050565b6060806038841015613c465760408051600180825281830190925290602082018180368337019050509050613c148385614854565b60f81b81600081518110613c2a57613c2a614879565b60200101906001600160f81b031916908160001a90535061253f565b600060015b613c558187614d5d565b15613c7b5781613c6481614d93565b9250613c7490506101008261488f565b9050613c4b565b613c86826001614554565b6001600160401b03811115613c9d57613c9d6140b0565b6040519080825280601f01601f191660200182016040528015613cc7576020820181803683370190505b509250613cd48583614854565b613cdf906037614854565b60f81b83600081518110613cf557613cf5614879565b60200101906001600160f81b031916908160001a905350600190505b818111613d8357610100613d2582846148d1565b613d3190610100614f7a565b613d3b9088614d5d565b613d4591906148fe565b60f81b838281518110613d5a57613d5a614879565b60200101906001600160f81b031916908160001a90535080613d7b81614d93565b915050613d11565b50509392505050565b6060600082604051602001613da391815260200190565b604051602081830303815290604052905060005b6020811015613dfa57818181518110613dd257613dd2614879565b01602001516001600160f81b031916600003613dfa5780613df281614d93565b915050613db7565b6000613e078260206148d1565b6001600160401b03811115613e1e57613e1e6140b0565b6040519080825280601f01601f191660200182016040528015613e48576020820181803683370190505b50905060005b8151811015613bd6578383613e6281614d93565b945081518110613e7457613e74614879565b602001015160f81c60f81b828281518110613e9157613e91614879565b60200101906001600160f81b031916908160001a90535080613eb281614d93565b915050613e4e565b8282825b60208110613ef65781518352613ed5602084614554565b9250613ee2602083614554565b9150613eef6020826148d1565b9050613ebe565b905182516020929092036101000a6000190180199091169116179052505050565b50805460008255906000526020600020908101906134d69190613f80565b828054828255906000526020600020908101928215613f70579160200282015b82811115613f70578251825591602001919060010190613f55565b50613f7c929150613f80565b5090565b5b80821115613f7c5760008155600101613f81565b600060208284031215613fa757600080fd5b5035919050565b6001600160a01b03811681146134d657600080fd5b60008060408385031215613fd657600080fd5b823591506020830135613fe881613fae565b809150509250929050565b60005b8381101561400e578181015183820152602001613ff6565b8381111561060d5750506000910152565b60008151808452614037816020860160208601613ff3565b601f01601f19169290920160200192915050565b60208152600061253f602083018461401f565b600080600080600060a0868803121561407657600080fd5b85359450602086013561408881613fae565b9350604086013561409881613fae565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052604160045260246000fd5b60405161014081016001600160401b03811182821017156140e9576140e96140b0565b60405290565b60405161012081016001600160401b03811182821017156140e9576140e96140b0565b604051601f8201601f191681016001600160401b038111828210171561413a5761413a6140b0565b604052919050565b60006001600160401b0382111561415b5761415b6140b0565b5060051b60200190565b6000602080838503121561417857600080fd5b82356001600160401b0381111561418e57600080fd5b8301601f8101851361419f57600080fd5b80356141b26141ad82614142565b614112565b81815260059190911b820183019083810190878311156141d157600080fd5b928401925b828410156141ef578335825292840192908401906141d6565b979650505050505050565b60008083601f84011261420c57600080fd5b5081356001600160401b0381111561422357600080fd5b6020830191508360208260051b850101111561423e57600080fd5b9250929050565b600080600080600080600060a0888a03121561426057600080fd5b873596506020880135955060408801356001600160401b038082111561428557600080fd5b908901906101e0828c03121561429a57600080fd5b909550606089013590808211156142b057600080fd5b6142bc8b838c016141fa565b909650945060808a01359150808211156142d557600080fd5b506142e28a828b016141fa565b989b979a50959850939692959293505050565b60008060008060006080868803121561430d57600080fd5b85359450602086013561431f81613fae565b93506040860135925060608601356001600160401b0381111561434157600080fd5b61434d888289016141fa565b969995985093965092949392505050565b60006020828403121561437057600080fd5b813560ff8116811461253f57600080fd5b6020808252825160ff1682820152828101516001600160401b03166040808401919091528301516001600160a01b039081166060808501919091528401511660808084019190915283015160e060a0840152805161010084018190526000929182019083906101208601905b8083101561440d57835182529284019260019290920191908401906143ed565b5060a087015160c087015260c087015160e08701528094505050505092915050565b634e487b7160e01b600052602160045260246000fd5b602081016006831061446757634e487b7160e01b600052602160045260246000fd5b91905290565b60008060008060006080868803121561448557600080fd5b85359450602086013593506040860135925060608601356001600160401b0381111561434157600080fd5b80516001600160801b0381168114612e8757600080fd5b6000608082840312156144d957600080fd5b604051608081018181106001600160401b03821117156144fb576144fb6140b0565b604052825161450981613fae565b815260208381015190820152614521604084016144b0565b6040820152614532606084016144b0565b60608201529392505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156145675761456761453e565b500190565b6000845161457e818460208901613ff3565b8083019050601760f91b808252855161459e816001850160208a01613ff3565b600192019182015283516145b9816002840160208801613ff3565b0160020195945050505050565b6020808252602d908201527f436f6c6f737365756d3a2073656e646572206973206e6f74207468652073656360408201526c1d5c9a5d1e4818dbdd5b98da5b609a1b606082015260800190565b60006020828403121561462557600080fd5b8151801515811461253f57600080fd5b6020808252604b908201527f436f6c6f737365756d3a2063616e6e6f742070726f6772657373206368616c6c60408201527f656e67652070726f636573732061626f757420616c72656164792066696e616c60608201526a1a5e9959081bdd5d1c1d5d60aa1b608082015260a00190565b600060a082840312156146b857600080fd5b60405160a081018181106001600160401b03821117156146da576146da6140b0565b806040525082358152602083013560208201526040830135604082015260608301356060820152608083013560808201528091505092915050565b6000823561013e1983360301811261472c57600080fd5b9190910192915050565b6000823561011e1983360301811261472c57600080fd5b6000808335601e1984360301811261476457600080fd5b8301803591506001600160401b0382111561477e57600080fd5b6020019150600581901b360382131561423e57600080fd5b81835260006001600160fb1b038311156147af57600080fd5b8260051b8083602087013760009401602001938452509192915050565b6060815260006147e0606083018789614796565b82810360208401526147f3818688614796565b9150508260408301529695505050505050565b8381526001600160801b038316602082015260606040820152600061482e606083018461401f565b95945050505050565b60006020828403121561484957600080fd5b815161253f81613fae565b600060ff821660ff84168060ff038211156148715761487161453e565b019392505050565b634e487b7160e01b600052603260045260246000fd5b60008160001904831182151516156148a9576148a961453e565b500290565b600060ff821660ff8416808210156148c8576148c861453e565b90039392505050565b6000828210156148e3576148e361453e565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261490d5761490d6148e8565b500690565b60208082526029908201527f436f6c6f737365756d3a2074686520626c6f636b2068617368206d757374206260408201526819481b585d18da195960ba1b606082015260800190565b80356001600160401b0381168114612e8757600080fd5b600082601f83011261498357600080fd5b813560206149936141ad83614142565b82815260059290921b840181019181810190868411156149b257600080fd5b8286015b848110156149cd57803583529183019183016149b6565b509695505050505050565b600061014082360312156149eb57600080fd5b6149f36140c6565b8235815260208301356020820152614a0d6040840161495b565b6040820152614a1e6060840161495b565b6060820152614a2f6080840161495b565b608082015260a083013560a082015260c083013560c082015260e083013560e0820152610100808401358183015250610120808401356001600160401b03811115614a7957600080fd5b614a8536828701614972565b918301919091525092915050565b600082601f830112614aa457600080fd5b81356001600160401b03811115614abd57614abd6140b0565b614ad0601f8201601f1916602001614112565b818152846020838601011115614ae557600080fd5b816020850160208301376000918101602001919091529392505050565b60006101208236031215614b1557600080fd5b614b1d6140ef565b82356001600160401b0380821115614b3457600080fd5b614b4036838701614a93565b83526020850135915080821115614b5657600080fd5b614b6236838701614a93565b60208401526040850135915080821115614b7b57600080fd5b614b8736838701614a93565b60408401526060850135915080821115614ba057600080fd5b614bac36838701614a93565b60608401526080850135915080821115614bc557600080fd5b614bd136838701614a93565b608084015260a0850135915080821115614bea57600080fd5b614bf636838701614a93565b60a084015260c0850135915080821115614c0f57600080fd5b614c1b36838701614a93565b60c084015260e0850135915080821115614c3457600080fd5b614c4036838701614a93565b60e084015261010091508185013581811115614c5b57600080fd5b614c6736828801614a93565b8385015250505080915050919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b85815260006020608081840152614cba608084018861401f565b8381036040850152858152818101600587901b820183018860005b89811015614d4457848303601f190184528135368c9003601e19018112614cfb57600080fd5b8b0186810190356001600160401b03811115614d1657600080fd5b803603821315614d2557600080fd5b614d30858284614c77565b958801959450505090850190600101614cd5565b5050809450505050508260608301529695505050505050565b600082614d6c57614d6c6148e8565b500490565b600060ff831680614d8457614d846148e8565b8060ff84160691505092915050565b600060018201614da557614da561453e565b5060010190565b60008151602080840160005b83811015614dd457815187529582019590820190600101614db8565b509495945050505050565b8c81528b60208201528a604082015289606082015288608082015260006001600160401b0360c01b808a60c01b1660a0840152808960c01b1660a88401528760b0840152808760c01b1660d08401525061ffff60f01b8560f01b1660d8830152614e55614e4f60da840186614dac565b84614dac565b9e9d5050505050505050505050505050565b60008351614e79818460208801613ff3565b835190830190614e8d818360208801613ff3565b01949350505050565b600181815b80851115614ed1578160001904821115614eb757614eb761453e565b80851615614ec457918102915b93841c9390800290614e9b565b509250929050565b600082614ee857506001611382565b81614ef557506000611382565b8160018114614f0b5760028114614f1557614f31565b6001915050611382565b60ff841115614f2657614f2661453e565b50506001821b611382565b5060208310610133831016604e8410600b8410161715614f54575081810a611382565b614f5e8383614e96565b8060001904821115614f7257614f7261453e565b029392505050565b600061253f8383614ed956fea264697066735822122054bd02ca5c9e9ebefe5c6a6a7f49c8acfabe8e3e32de4fcf084d3d0eb71448a664736f6c634300080f0033'

type ColosseumConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: ColosseumConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class Colosseum__factory extends ContractFactory {
  constructor(...args: ColosseumConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _l2Oracle: string,
    _zkVerifier: string,
    _submissionInterval: BigNumberish,
    _creationPeriodSeconds: BigNumberish,
    _bisectionTimeout: BigNumberish,
    _provingTimeout: BigNumberish,
    _dummyHash: BytesLike,
    _maxTxs: BigNumberish,
    _segmentsLengths: BigNumberish[],
    _securityCouncil: string,
    _zkMerkleTrie: string,
    overrides?: Overrides & { from?: string },
  ): Promise<Colosseum> {
    return super.deploy(
      _l2Oracle,
      _zkVerifier,
      _submissionInterval,
      _creationPeriodSeconds,
      _bisectionTimeout,
      _provingTimeout,
      _dummyHash,
      _maxTxs,
      _segmentsLengths,
      _securityCouncil,
      _zkMerkleTrie,
      overrides || {},
    ) as Promise<Colosseum>
  }
  override getDeployTransaction(
    _l2Oracle: string,
    _zkVerifier: string,
    _submissionInterval: BigNumberish,
    _creationPeriodSeconds: BigNumberish,
    _bisectionTimeout: BigNumberish,
    _provingTimeout: BigNumberish,
    _dummyHash: BytesLike,
    _maxTxs: BigNumberish,
    _segmentsLengths: BigNumberish[],
    _securityCouncil: string,
    _zkMerkleTrie: string,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _l2Oracle,
      _zkVerifier,
      _submissionInterval,
      _creationPeriodSeconds,
      _bisectionTimeout,
      _provingTimeout,
      _dummyHash,
      _maxTxs,
      _segmentsLengths,
      _securityCouncil,
      _zkMerkleTrie,
      overrides || {},
    )
  }
  override attach(address: string): Colosseum {
    return super.attach(address) as Colosseum
  }
  override connect(signer: Signer): Colosseum__factory {
    return super.connect(signer) as Colosseum__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): ColosseumInterface {
    return new utils.Interface(_abi) as ColosseumInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): Colosseum {
    return new Contract(address, _abi, signerOrProvider) as Colosseum
  }
}
