{
  "$schema": "../../../../../discovery/schemas/contract.v2.schema.json",
  "description": "StarkGate canonical bridge escrow for ETH. Withdrawals can be throttled to {{withdrawLimitPct}} of the locked funds per 24 hours.", // The withdrawal limit is {{withdrawalLimitStatus}}.
  "ignoreRelatives": ["l2TokenContract", "bridgedToken"],
  // "types": {
  //   "WithdrawalActivationString": {
  //     "typeCaster": "Mapping",
  //     "arg": {
  //       "": "not active",
  //       "0x0000000000000000000000000000000000455448": "active"
  //     }
  //   }
  // },
  "fields": {
    "$admin": {
      "description": "Same as the `GOVERNANCE_ADMIN` access control role.",
      "severity": "HIGH",
      "target": {
        "permissions": [
          {
            "type": "upgrade",
            "delay": "{{getUpgradeActivationDelay}}"
          }
        ]
      }
    },
    "withdrawalLimitStatus": {
      "description": "empty: withdrawals are not limited, `0x0000000000000000000000000000000000455448` (or respective `bridgedToken` address): withdrawals are limited.",
      "severity": "HIGH",
      "handler": {
        "type": "event",
        "select": "token",
        "add": {
          "event": "WithdrawalLimitEnabled"
        },
        "remove": {
          "event": "WithdrawalLimitDisabled"
        }
      }
      // "returnType": "(WithdrawalActivationString)" // BUG
    },
    "maxTotalBalance": {
      "description": "The maximum total balance that can be locked in the bridge.",
      "handler": {
        "type": "call",
        "method": "function getMaxTotalBalance(address token) view returns (uint256)",
        "args": ["{{bridgedToken}}"]
      }
    },
    "withdrawLimitPct": {
      "description": "The withdrawal limit in percent of locked funds per 24 hours. This value is immutable and needs an implementation upgrade to be changed.",
      "handler": {
        "type": "starkWareNamedStorage",
        "tag": "WITHDRAWL_LIMIT_WITHDRAW_LIMIT_PCT_SLOT_TAG",
        "returnType": "number"
      }
    },
    "manager": {
      "handler": {
        "type": "starkWareNamedStorage",
        "tag": "STARKNET_TOKEN_BRIDGE_MANAGER_SLOT_TAG",
        "returnType": "address"
      }
    },
    "bridgedToken": {
      "handler": {
        "type": "starkWareNamedStorage",
        "tag": "STARKNET_ERC20_TOKEN_BRIDGE_TOKEN_ADDRESS",
        "returnType": "address"
      }
    },
    "l2TokenContract": {
      "handler": {
        "type": "starkWareNamedStorage",
        "tag": "STARKNET_TOKEN_BRIDGE_L2_TOKEN_CONTRACT",
        "returnType": "address"
      }
    },
    "messagingContract": {
      "handler": {
        "type": "starkWareNamedStorage",
        "tag": "STARKNET_TOKEN_BRIDGE_MESSAGING_CONTRACT",
        "returnType": "address"
      }
    },
    "depositorAddress": {
      "handler": {
        "type": "starkWareNamedStorage",
        "tag": "STARKNET_TOKEN_BRIDGE_DEPOSITOR_ADDRESSES",
        "returnType": "address"
      }
    },
    "accessControl": {
      "description": "Access control map of the contract. The individual (pickRoleMembers) permissions need to be added if a new role becomes active.",
      "severity": "HIGH",
      "handler": {
        "type": "accessControl",
        "roleNames": {
          "0x00d2ead78c620e94b02d0a996e99298c59ddccfa1d8a0149080ac3a20de06068": "APP_GOVERNOR",
          "0x03e615638e0b79444a70f8c695bf8f2a47033bf1cf95691ec3130f64939cee99": "APP_ROLE_ADMIN",
          "0x03711c9d994faf6055172091cb841fd4831aa743e6f3315163b06a122c841846": "GOVERNANCE_ADMIN",
          "0x023edb77f7c8cc9e38e8afe78954f703aeeda7fffe014eeb6e56ea84e62f6da7": "OPERATOR",
          "0x026bd110619d11cfdfc28e281df893bc24828e89177318e9dbd860cdaedeb6b3": "SECURITY_ADMIN",
          "0x037693ba312785932d430dccf0f56ffedd0aa7c0f8b6da2cc4530c2717689b96": "SECURITY_AGENT",
          "0x0128d63adbf6b09002c26caf55c47e2f26635807e3ef1b027218aa74c8d61a3e": "TOKEN_ADMIN",
          "0x0251e864ca2a080f55bce5da2452e8cfcafdbc951a3e7fff5023d558452ec228": "UPGRADE_GOVERNOR"
        }
      }
    },
    "govAdminAC": {
      "description": "This role is actually the proxy upgrade admin role, but we already resolve it to $admin.",
      "handler": {
        "type": "accessControl",
        "roleNames": {
          "0x03711c9d994faf6055172091cb841fd4831aa743e6f3315163b06a122c841846": "GOVERNANCE_ADMIN"
        },
        "pickRoleMembers": "GOVERNANCE_ADMIN"
      },
      "target": {
        "permissions": [
          {
            "type": "interact",
            "description": "manage critical access control roles related to upgrades (GOVERNANCE_ADMIN, APP_ROLE_ADMIN)."
          }
        ]
      }
    },
    "secAdminAC": {
      "handler": {
        "type": "accessControl",
        "roleNames": {
          "0x03711c9d994faf6055172091cb841fd4831aa743e6f3315163b06a122c841846": "SECURITY_ADMIN"
        },
        "pickRoleMembers": "SECURITY_ADMIN"
      },
      "target": {
        "permissions": [
          {
            "type": "interact",
            "description": "disable the withdrawal limit."
          }
        ]
      }
    },
    "secAgentAC": {
      "handler": {
        "type": "accessControl",
        "roleNames": {
          "0x03711c9d994faf6055172091cb841fd4831aa743e6f3315163b06a122c841846": "SECURITY_AGENT"
        },
        "pickRoleMembers": "SECURITY_AGENT"
      },
      "target": {
        "permissions": [
          {
            "type": "interact",
            "description": "enable the withdrawal limit."
          }
        ]
      }
    }
  }
}
