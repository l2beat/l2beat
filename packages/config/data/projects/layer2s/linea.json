{"type":"layer2","id":"linea","display":{"name":"Linea","slug":"linea","warning":"The circuit of the program being proven is not public.","description":"Linea is a ZK Rollup powered by Consensys zkEVM, designed to scale the Ethereum network.","purposes":["Universal"],"category":"ZK Rollup","links":{"websites":["https://linea.build/"],"apps":["https://bridge.linea.build/"],"documentation":["https://docs.linea.build/"],"explorers":["https://lineascan.build/","https://explorer.linea.build/","https://linea.l2scan.co/"],"repositories":["https://github.com/Consensys?q=linea&type=all&language=&sort=stargazers"],"socialMedia":["https://twitter.com/LineaBuild","https://discord.gg/linea","https://linea.mirror.xyz/","https://community.linea.build/"],"rollupCodes":"https://rollup.codes/linea"},"activityDataSource":"Blockchain RPC","liveness":{"explanation":"Linea is a ZK rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted on L1. Tx data, proofs and state roots are currently posted in the same transaction. Blocks can also be finalized by the operator without the need to provide a proof."},"finality":{"finalizationPeriod":0}},"config":{"escrows":[{"address":"0xd19d4B5d358258f05D7B411E21A1460D11B0876F","newVersion":true,"sinceTimestamp":1689159923,"tokens":["ETH"],"contract":{"address":"0xd19d4B5d358258f05D7B411E21A1460D11B0876F","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xF5058616517C068C7b8c7EbC69FF636Ade9066d6"],"implementations":["0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true},{"address":"0x504A330327A089d8364C4ab3811Ee26976d388ce","newVersion":true,"sinceTimestamp":1691079071,"tokens":["USDC"],"contract":{"address":"0x504A330327A089d8364C4ab3811Ee26976d388ce","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x41fAD3Df1B07B647D120D055259E474fE8046eb5"],"implementations":["0x0eC393209674090368C592A591B25811e490BF36"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true},{"address":"0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319","newVersion":true,"sinceTimestamp":1691060675,"tokens":"*","contract":{"address":"0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xF5058616517C068C7b8c7EbC69FF636Ade9066d6"],"implementations":["0xd52c09E67aF3BE0977B52b4817366e9BaB5dCFA2"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true}],"transactionApi":{"type":"rpc","defaultUrl":"https://linea-mainnet.infura.io/v3","startBlock":1},"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xd19d4B5d358258f05D7B411E21A1460D11B0876F","selector":"0x7a776315","functionSignature":"function submitData((bytes32,bytes32,bytes32,uint256,uint256,bytes32,bytes))","sinceTimestamp":1707831168}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xd19d4B5d358258f05D7B411E21A1460D11B0876F","selector":"0x2d3c12e5","functionSignature":"function submitBlobData(tuple(bytes32,bytes32,bytes32,uint256,uint256,bytes32),uint256,bytes,bytes)","sinceTimestamp":1711449407,"untilTimestamp":1717588271}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xd19d4B5d358258f05D7B411E21A1460D11B0876F","selector":"0x42fbe842","functionSignature":"function submitBlobs(((bytes32,uint256,uint256,bytes32),uint256,bytes,bytes)[], bytes32, bytes32)","sinceTimestamp":1717588271}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xd19d4B5d358258f05D7B411E21A1460D11B0876F","selector":"0x4165d6dd","functionSignature":"function finalizeBlocks((bytes32, uint32, bytes[], bytes32[], bytes, uint16[])[] _blocksData,bytes _proof,uint256 _proofType,bytes32 _parentStateRootHash)","sinceTimestamp":1689159923,"untilTimestamp":1707831168}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xd19d4B5d358258f05D7B411E21A1460D11B0876F","selector":"0xd630280f","functionSignature":"function finalizeCompressedBlocksWithProof(bytes,uint256,(bytes32,bytes32[],bytes32,uint256,uint256,uint256,bytes32,uint256,bytes32[],uint256,bytes))","sinceTimestamp":1707831168,"untilTimestamp":1717508999}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xd19d4B5d358258f05D7B411E21A1460D11B0876F","selector":"0xabffac32","functionSignature":"function finalizeBlocksWithProof(bytes,uint256,(bytes32,bytes32,uint256,(bytes32,bytes32,bytes32,bytes32,bytes32),uint256,uint256,bytes32,bytes32,uint256,uint256,uint256,bytes32[],bytes))","sinceTimestamp":1717508999}}],"liveness":{"duplicateData":{"from":"stateUpdates","to":"proofSubmissions"}},"finality":{"type":"Linea","lag":0,"minTimestamp":1717588271,"stateUpdate":"disabled"}},"chainConfig":{"name":"linea","chainId":59144,"explorerUrl":"https://lineascan.build","explorerApi":{"url":"https://api.lineascan.build/api","type":"etherscan"},"minTimestampForTvl":1689775200,"multicallContracts":[{"address":"0xcA11bde05977b3631167028862bE2a173976CA11","batchSize":150,"sinceBlock":42,"version":"3"}],"coingeckoPlatform":"linea"},"dataAvailability":{"layer":{"value":"Ethereum (blobs or calldata)","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs."},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted on chain."},"mode":"Transaction data (compressed)"},"riskView":{"stateValidation":{"value":"ZK proofs (SN)","description":"SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup.","sentiment":"good","definingMetric":null,"sources":[{"contract":"zkEVM","references":["https://etherscan.io/address/0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562#code"]}]},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1. Unlike most ZK rollups, transaction data is posted instead of state diffs.","sentiment":"good","definingMetric":null,"sources":[{"contract":"zkEVM","references":["https://etherscan.io/address/0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562#code"]}]},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","definingMetric":0},"sequencerFailure":{"value":"No mechanism","description":"There is no mechanism to have transactions be included if the sequencer is down or censoring.","sentiment":"bad"},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","definingMetric":null},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring.","Security Council members are not publicly known."]},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":false,"description":"No source-available node exists that can recreate the state from L1 data."}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."},{"satisfied":false,"description":"Security Council members are not publicly known."}]},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to on-chain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to on-chain provable bugs."}]}],"message":{"type":"warning","text":"There is no available node software that can reconstruct the state from L1 data, hence there is no way to verify that this system is a rollup."}},"technology":{"newCryptography":{"name":"Zero knowledge SNARK cryptography is used","description":"Despite their production use zkSNARKs are still new and experimental cryptography. Cryptography has made a lot of advancements in the recent years but all cryptographic solutions rely on time to prove their security. In addition zkSNARKs require a trusted setup to operate.","risks":[{"category":"Funds can be stolen if","text":"the cryptography is broken or implemented incorrectly."}],"references":[]},"stateCorrectness":{"name":"Validity proofs ensure state correctness","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract. Operator can finalize L2 state root without proof.","risks":[{"category":"Funds can be stolen if","text":"the operator forces and finalizes L2 state root without proof."}],"references":[{"text":"ZkEvmV2.sol - Etherscan source code, _verifyProof() function","href":"https://etherscan.io/address/0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562#code"}]},"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap blobs or calldata. This ensures that it will be available for enough time.","risks":[],"references":[{"text":"LineaRollup.sol - Etherscan source code, submitData() function","href":"https://etherscan.io/address/0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562#code"}]},"operator":{"name":"The system has a centralized sequencer","description":"Only a trusted sequencer is allowed to submit transaction batches. A mechanism for users to submit their own batches is currently disabled.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."},{"category":"Funds can be frozen if","text":"the sequencer refuses to include an exit transaction.","isCritical":true}],"references":[{"text":"LineaRollup.sol - Etherscan source code, onlyRole(OPERATOR_ROLE) modifier","href":"https://etherscan.io/address/0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562#code"}]},"forceTransactions":{"name":"Users can't force any transaction","description":"There is no general mechanism to force the sequencer to include the transaction.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions."}],"references":[]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is proven the funds become available for withdrawal on L1. Finally the user submits an L1 transaction to claim the funds. This transaction does not require a merkle proof. Note that withdrawal requests can be censored by the Sequencer. Currently, there is a general limit of 18750.0 ETH that can be withdrawn within each 1d time window.","risks":[{"category":"Funds can be frozen if","text":"the operator censors withdrawal transaction."}],"references":[{"text":"L1MessageService.sol - Etherscan source code, claimMessageWithProof() function","href":"https://etherscan.io/address/0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562#code"}]}]},"permissions":[{"name":"AdminMultisig","description":"This is a Gnosis Safe with 4 / 8 threshold. It uses the following modules: Roles. Admin of the Linea rollup. It can upgrade core contracts, bridges, update permissioned actors, and publish blocks by effectively overriding the proof system.","accounts":[{"address":"0x892bb7EeD71efB060ab90140e7825d8127991DD3","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x497515578b0BE54d2f0f32cF3F08B85Bf8cEB6aB","type":"EOA"},{"address":"0x239d9B860399366F8d25F6e2962Fb2B9D070aEFE","type":"EOA"},{"address":"0x12d674b7eCc0302977E956Cd2d5AC8D030fdbea9","type":"EOA"},{"address":"0x5822D8457c00FB82203918ED92907b935B9D40AE","type":"EOA"},{"address":"0x9376c137AF5124FFc39bD8940A3D88D1cd508992","type":"EOA"},{"address":"0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4","type":"EOA"},{"address":"0xab23f8E6c3288952fdf193A17ad49b15F5EE55A1","type":"EOA"},{"address":"0xB4dAebe4D01f467701F95f0196fc29033c54dBcb","type":"EOA"}]},{"name":"Roles","accounts":[{"address":"0xF24f1DC519d88246809B660eb56D94048575d083","type":"Contract"}],"chain":"ethereum","description":"Module to the AdminMultisig. Allows to add additional members to the multisig via permissions to call functions specified by roles."},{"accounts":[{"address":"0x9228624C3185FCBcf24c1c9dB76D8Bef5f5DAd64","type":"EOA"},{"address":"0xa9268341831eFa4937537bc3e9EB36DbecE83C7e","type":"EOA"}],"name":"Operators","description":"The operators are allowed to prove blocks and post the corresponding transaction data."},{"accounts":[{"address":"0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8","type":"EOA"}],"name":"Pauser","description":"Address allowed to pause the ERC20Bridge, the USDCBridge and the core functionalities of the project."},{"accounts":[{"address":"0xd6B95c960779c72B8C6752119849318E5d550574","type":"Contract"}],"name":"Verifier Setters","description":"The verifier setters are allowed to change the verifier address."}],"contracts":{"addresses":[{"name":"zkEVM","address":"0xd19d4B5d358258f05D7B411E21A1460D11B0876F","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xF5058616517C068C7b8c7EbC69FF636Ade9066d6"],"implementations":["0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562"]},"chain":"ethereum","description":"The main contract of the Linea zkEVM rollup. Contains state roots, the verifier addresses and manages messages between L1 and the L2. The contract is pausable by AdminMultisig.","upgradableBy":["AdminMultisig"],"upgradeDelay":"No delay","pausable":{"pausableBy":["AdminMultisig"],"paused":false},"references":[{"text":"LineaRollup.sol - Etherscan source code, state injections: stateRoot and l2MerkleRoot are part of the validity proof input.","href":"https://etherscan.io/address/0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562#code"}]},{"name":"Timelock","address":"0xd6B95c960779c72B8C6752119849318E5d550574","chain":"ethereum","description":"Owner of the ProxyAdmin and Verifier Setter. The current delay is 0s."},{"name":"VerifierProofType3","address":"0xBfF4a03A355eEF7dA720bBC7878F9BdBBE81fe6F","chain":"ethereum","description":"Currently used smart contract verifying the proofs for the Linea zkEVM."},{"name":"ERC20Bridge","address":"0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xF5058616517C068C7b8c7EbC69FF636Ade9066d6"],"implementations":["0xd52c09E67aF3BE0977B52b4817366e9BaB5dCFA2"]},"chain":"ethereum","description":"Contract used to bridge ERC20 tokens.","upgradableBy":["AdminMultisig"],"upgradeDelay":"No delay"},{"name":"USDCBridge","address":"0x504A330327A089d8364C4ab3811Ee26976d388ce","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x41fAD3Df1B07B647D120D055259E474fE8046eb5"],"implementations":["0x0eC393209674090368C592A591B25811e490BF36"]},"chain":"ethereum","description":"Contract used to bridge USDC tokens.","upgradableBy":["AdminMultisig"],"upgradeDelay":"No delay"}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is a 0s delay on code upgrades."}]},"stateValidation":{"description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","categories":[{"title":"Prover Architecture","description":"The source code of the prover is currently not public."},{"title":"ZK Circuits","description":"The source code of the circuits is currently not public.","risks":[{"category":"Funds can be lost if","text":"the proof system is implemented incorrectly."},{"category":"Funds can be stolen if","text":"the prover is able to generate false proofs."}]},{"title":"Verification Keys Generation","description":"Given that the circuit is not public, the generation of the verification keys is not public either."}],"proofVerification":{"shortDescription":"Linea is a universal ZK-EVM rollup on Ethereum.","aggregation":false,"requiredTools":[],"verifiers":[{"name":"LineaVerifier (ProofType 1)","description":"The smart contract verifying the computational integrity of the Linea zkEVM. Since the circuit behind it is not public, we are not able to verify any claim about the proof system.","verified":"failed","performedBy":{"name":"L2BEAT","link":"https://l2beat.com"},"contractAddress":"0x8AB455030E1Ea718e445f423Bb8D993dcAd24Cc4","chainId":1,"subVerifiers":[{"name":"Main circuit","proofSystem":"?","mainArithmetization":"?","mainPCS":"?"}]},{"name":"LineaVerifier (ProofType 3)","description":"The smart contract verifying the computational integrity of the Linea zkEVM. Since the circuit behind it is not public, we are not able to verify any claim about the proof system.","verified":"no","contractAddress":"0xBfF4a03A355eEF7dA720bBC7878F9BdBBE81fe6F","chainId":1,"subVerifiers":[{"name":"Main circuit","proofSystem":"?","mainArithmetization":"?","mainPCS":"?"}]}]}},"milestones":[{"name":"Linea starts using blobs","link":"https://twitter.com/LineaBuild/status/1772711269159567483","date":"2024-03-26T00:00:00Z","description":"Linea starts publishing data to blobs.","type":"general"},{"name":"Alpha v2 is released","date":"2024-02-13","description":"This release reduces L1 costs and fees for users.","link":"https://docs.linea.build/build-on-linea/linea-version#alpha-v2-release-notes","type":"general"},{"name":"Open Testnet is Live","date":"2023-03-28","description":"Linea has launched on the Goerli testnet, allowing users and developers to test the platform.","link":"https://linea.mirror.xyz/6G30hwV2wPs_wPv0VEgHYaIdghMkIQaad-OI_0br1hM","type":"general"},{"name":"Mainnet Alpha Launch","date":"2023-07-12","description":"Linea has launched on the Ethereum mainnet.","link":"https://linea.mirror.xyz/7l9gKzYzKVOxEOnReavov467Ss_fsrkGzABvbRISPMY","type":"general"}],"badges":["EVM","EthereumBlobs","L3HostChain"]}