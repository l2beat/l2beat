{"type":"layer2","id":"zksync","badges":["AppChain","EthereumCalldata"],"display":{"name":"ZKsync Lite","slug":"zksync-lite","description":"ZKsync Lite (formerly ZKsync) is a ZK Rollup platform that supports payments, token swaps and NFT minting.","purposes":["Payments"],"provider":"ZKsync Lite","category":"ZK Rollup","links":{"websites":["https://zksync.io/"],"apps":["https://lite.zksync.io/"],"documentation":["https://docs.lite.zksync.io/dev/"],"explorers":["https://zkscan.io/"],"repositories":["https://github.com/matter-labs/zksync"],"socialMedia":["https://zksync.mirror.xyz/","https://join.zksync.dev/","https://t.me/zksync","https://twitter.com/zksync","https://twitter.com/zkSyncDevs"]},"activityDataSource":"Explorer API","liveness":{"explanation":"ZKsync Lite is a ZK rollup that posts state diffs to the L1. Transactions within a state diff can be considered final when proven on L1 using a ZK proof, except that an operator can revert them if not executed yet."},"finality":{"finalizationPeriod":0}},"config":{"escrows":[{"address":"0xaBEA9132b05A70803a4E85094fD0e1800777fBEF","newVersion":true,"sinceTimestamp":1592218707,"tokens":"*","contract":{"address":"0xaBEA9132b05A70803a4E85094fD0e1800777fBEF","upgradeability":{"proxyType":"zkSync Lite proxy","admins":["0x38A43F4330f24fe920F943409709fc9A6084C939"],"implementations":["0x8e972b354E6933275513C355Ee14D44A832aD2d9","0x2eaa1377e0fC95dE998B9fA7611E9D67ebA534fD"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true}],"transactionApi":{"type":"zksync","defaultUrl":"https://api.zksync.io/api/v0.2","defaultCallsPerMinute":3000},"trackedTxs":[{"uses":[{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xaBEA9132b05A70803a4E85094fD0e1800777fBEF","selector":"0x45269298","functionSignature":"function commitBlocks((uint32,uint64,bytes32,uint256,bytes32,bytes32), (bytes32,bytes,uint256,(bytes,uint32)[],uint32,uint32)[])","sinceTimestamp":1612885558}},{"uses":[{"type":"liveness","subtype":"proofSubmissions"},{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"functionCall","address":"0xaBEA9132b05A70803a4E85094fD0e1800777fBEF","selector":"0x83981808","functionSignature":"function proveBlocks((uint32,uint64,bytes32,uint256,bytes32,bytes32)[] calldata _committedBlocks, (uint256[],uint256[],uint256[],uint8[],uint256[16]) memory _proof)","sinceTimestamp":1592218707}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xaBEA9132b05A70803a4E85094fD0e1800777fBEF","selector":"0xb0705b42","functionSignature":"function executeBlocks(((uint32,uint64,bytes32,uint256,bytes32,bytes32),bytes[])[] calldata _blocksData)","sinceTimestamp":1592218707}}],"finality":{"lag":0,"type":"zkSyncLite","minTimestamp":1592218708,"stateUpdate":"disabled"}},"dataAvailability":{"layer":{"value":"Ethereum (calldata)","sentiment":"good","description":"The data is posted to Ethereum as calldata."},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted on chain."},"mode":"State diffs"},"riskView":{"stateValidation":{"value":"ZK proofs (SN)","description":"zkSNARKS are zero knowledge proofs that ensure state correctness, but require trusted setup.","sentiment":"good","definingMetric":null,"sources":[{"contract":"ZkSync","references":["https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L549","https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L575","https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F16#L22","https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F16#L36","https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F21#L1193"]}]},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","definingMetric":null,"sources":[{"contract":"ZkSync","references":["https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L422","https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L44"]}]},"exitWindow":{"value":"7d","description":"Users have 7d to exit funds in case of an unwanted upgrade. There is a 21d delay before an upgrade is applied, and withdrawals can take up to 14d to be processed.","sentiment":"warning","definingMetric":-1209600,"warning":{"value":"The Security Council can upgrade with no delay.","sentiment":"bad"},"sources":[{"contract":"Governance","references":["https://etherscan.io/address/0x3FBc7C6c2437dE24F91b2Ca61Fc7AD3D2D62F4c8#code#F1#L93","https://etherscan.io/address/0x3FBc7C6c2437dE24F91b2Ca61Fc7AD3D2D62F4c8#code#F1#L205"]}]},"sequencerFailure":{"value":"Force via L1","description":"Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for  for more than 14d, users can use the exit hatch to withdraw their funds.","sentiment":"good","definingMetric":1209600,"sources":[{"contract":"ZkSync","references":["https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L325","https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L360","https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L977","https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L600"]}]},"proposerFailure":{"value":"Use escape hatch","description":"Users are able to trustlessly exit by submitting a zero knowledge proof of funds.","sentiment":"good","definingMetric":null,"sources":[{"contract":"ZkSync","references":["https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L600","https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L622"]}]},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"}},"stage":{"stage":"Stage 1","missing":{"nextStage":"Stage 2","requirements":["Upgrades unrelated to on-chain provable bugs provide less than 30d to exit.","The Security Council's actions are not confined to on-chain provable bugs."]},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://github.com/matter-labs/zksync)"}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":true,"description":"Users are able to exit without the help of the permissioned operators."},{"satisfied":true,"description":"In case of an unwanted upgrade by actors more centralized than a Security Council, users have at least 7d to exit."},{"satisfied":true,"description":"The Security Council, even though it has a threshold below the recommended 75% (currently 9/15), is considered properly set up since it has been created before the Stages requirement specification and the protocol is extremely ossified. Moreover, the threshold and list of members are hardcoded and not updateable without a contract upgrade."}]},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to on-chain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to on-chain provable bugs."}]}]},"technology":{"stateCorrectness":{"name":"Validity proofs ensure state correctness","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","risks":[],"references":[{"text":"Validity proofs - ZKsync FAQ","href":"https://zksync.io/faq/security.html#validity-proofs"},{"text":"ZkSync.sol#L549 - Etherscan source code, proveBlocks function","href":"https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L549"}]},"newCryptography":{"name":"Zero knowledge SNARK cryptography is used","description":"Despite their production use zkSNARKs are still new and experimental cryptography. Cryptography has made a lot of advancements in the recent years but all cryptographic solutions rely on time to prove their security. In addition zkSNARKs require a trusted setup to operate.","risks":[{"category":"Funds can be stolen if","text":"the cryptography is broken or implemented incorrectly."}],"references":[{"text":"Cryptography used - ZKsync FAQ","href":"https://zksync.io/faq/security.html#cryptography-used"},{"text":"PlonkCore.sol#L1193 - Etherscan source code","href":"https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F21#L1193"}]},"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap calldata. This ensures that it will always be available when needed.","risks":[],"references":[{"text":"Overview - ZKsync documentation","href":"https://zksync.io/dev/#overview"},{"text":"ZkSync.sol#L44 - Etherscan source code, commitBlockInfo struct","href":"https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L44"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"text":"How decentralized is ZKsync - ZKsync FAQ","href":"https://zksync.io/faq/decentralization.html#how-decentralized-is-zksync"},{"text":"ZkSync.sol#L422 - Etherscan source code, requireActiveValidator in commitBlock function","href":"https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L427"}]},"forceTransactions":{"name":"Users can force exit the system","description":"Force exit allows the users to escape censorship by withdrawing their funds. The system allows users to force the withdrawal of funds by submitting a request directly to the contract on-chain.  The request must be served within a defined time period. If this does not happen, the system will halt regular operation and permit trustless withdrawal of funds.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions. However, there exists a mechanism to independently exit the system."}],"references":[{"text":"Priority queue - ZKsync FAQ","href":"https://zksync.io/faq/security.html#priority-queue"},{"text":"ZkSync.sol#L977 - Etherscan source code, addPriorityRequest function","href":"https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L977"},{"text":"ZkSync.sol#L600 - Etherscan source code, activateExodusMode function","href":"https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L600"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is proven the funds become available for withdrawal on L1. Finally the user submits an L1 transaction to claim the funds. This transaction does not require a merkle proof.","risks":[],"references":[{"text":"Withdrawing funds - ZKsync documentation","href":"https://docs.lite.zksync.io/dev/payments/basic/#withdrawing-funds"}]},{"name":"Forced exit","description":"If the user experiences censorship from the operator with regular exit they can submit their withdrawal requests directly on L1. The system is then obliged to service this request. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular exit.","risks":[],"references":[{"text":"Withdrawing funds - ZKsync documentation","href":"https://docs.lite.zksync.io/dev/payments/basic/#withdrawing-funds"},{"text":"ZkSync.sol#L325 - Etherscan source code, requestFullExit function","href":"https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L325"},{"text":"ZkSync.sol#L360 - Etherscan source code, requestFullExitNFT function","href":"https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L360"}]},{"name":"Emergency exit","description":"If the enough time deadline passes and the forced exit is still ignored the user can put the system into Exodus Mode, disallowing further state updates. In that case everybody can withdraw by submitting a zero knowledge proof of their funds with their L1 transaction.","risks":[{"category":"Funds can be lost if","text":"the user is unable to generate the non-trivial ZK proof for exodus withdraw."}],"references":[{"text":"Withdrawing funds - ZKsync documentation","href":"https://docs.lite.zksync.io/dev/payments/basic/#withdrawing-funds"},{"text":"README.md - ZKsync Exit Tool","href":"https://github.com/matter-labs/zksync/tree/master/infrastructure/exit-tool"},{"text":"ZkSync.sol#L622 - Etherscan source code, performExodus function","href":"https://etherscan.io/address/0x8e972b354e6933275513c355ee14d44a832ad2d9#code#F1#L622"}]}]},"contracts":{"addresses":[{"name":"ZkSync","address":"0xaBEA9132b05A70803a4E85094fD0e1800777fBEF","upgradeability":{"proxyType":"zkSync Lite proxy","admins":["0x38A43F4330f24fe920F943409709fc9A6084C939"],"implementations":["0x8e972b354E6933275513C355Ee14D44A832aD2d9","0x2eaa1377e0fC95dE998B9fA7611E9D67ebA534fD"]},"chain":"ethereum","description":"The main Rollup contract. Allows the operator to commit blocks, provide ZK proofs (validated by the Verifier) and processes withdrawals by executing blocks. Users can deposit ETH and ERC20 tokens. This contract also defines the upgrade process for all the other contracts by enforcing an upgrade delay and employing the Security Council which can shorten upgrade times.","upgradableBy":["ZkSync Multisig"],"upgradeDelay":"21d or 0 if overridden by 9 of 15 Security Council","upgradeConsiderations":"When the upgrade process starts only the address of the new implementation is given. The actual upgrade also requires implementation specific calldata which is only provided after the delay has elapsed. Changing the default upgrade delay or the Security Council requires a ZkSync contract upgrade."},{"name":"Verifier","address":"0x5290E9582B4FB706EaDf87BB1c129e897e04d06D","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x38A43F4330f24fe920F943409709fc9A6084C939"],"implementations":["0x6e95812C432F293b8045811F4B1758285EBDB206"]},"chain":"ethereum","description":"Implements ZK proof verification logic.","upgradableBy":["ZkSync Multisig"],"upgradeDelay":"21d or 0 if overridden by 9 of 15 Security Council","upgradeConsiderations":"When the upgrade process starts only the address of the new implementation is given. The actual upgrade also requires implementation specific calldata which is only provided after the delay has elapsed. Changing the default upgrade delay or the Security Council requires a ZkSync contract upgrade."},{"name":"Governance","address":"0x34460C0EB5074C29A9F6FE13b8e7E23A0D08aF01","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x38A43F4330f24fe920F943409709fc9A6084C939"],"implementations":["0x3FBc7C6c2437dE24F91b2Ca61Fc7AD3D2D62F4c8"]},"chain":"ethereum","description":"Keeps a list of block producers, NFT factories and whitelisted tokens.","upgradableBy":["ZkSync Multisig"],"upgradeDelay":"21d or 0 if overridden by 9 of 15 Security Council","upgradeConsiderations":"When the upgrade process starts only the address of the new implementation is given. The actual upgrade also requires implementation specific calldata which is only provided after the delay has elapsed. Changing the default upgrade delay or the Security Council requires a ZkSync contract upgrade."},{"name":"UpgradeGatekeeper","address":"0x38A43F4330f24fe920F943409709fc9A6084C939","chain":"ethereum","description":"This is the contract that owns Governance, Verifier and ZkSync and facilitates their upgrades. The upgrade constraints are defined by the ZkSync contract."},{"name":"TokenGovernance","address":"0x35cc31f63deef017c38d51B038891bAE7d614e86","chain":"ethereum","description":"Allows anyone to add new ERC20 tokens to ZKsync Lite given sufficient payment.","upgradableBy":["ZkSync Multisig"],"upgradeDelay":"No delay","references":[{"text":"Governance.sol#L93 - Etherscan source code","href":"https://etherscan.io/address/0x3FBc7C6c2437dE24F91b2Ca61Fc7AD3D2D62F4c8#code#F1#L93"}]},{"name":"NftFactory","address":"0x7C770595a2Be9A87CF49B35eA9bC534f1a59552D","chain":"ethereum","description":"Allows for withdrawing NFTs minted on L2 to L1.","upgradableBy":["ZkSync Multisig"],"upgradeDelay":"No delay","references":[{"text":"Governance.sol#L205 - Etherscan source code","href":"https://etherscan.io/address/0x3FBc7C6c2437dE24F91b2Ca61Fc7AD3D2D62F4c8#code#F1#L"}]}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"stateDerivation":{"nodeSoftware":"The node software is open-sourced and the source can be found [here](https://github.com/matter-labs/zksync).","compressionScheme":"No compression, transactions are always the same size.","genesisState":"There is no genesis file nor regenesis for ZKsync Lite. By default, all accounts were empty at the beginning.","dataFormat":"The data format documentations can be found [here](https://github.com/matter-labs/zksync/blob/master/docs/protocol.md#data-format)."},"permissions":[{"name":"ZkSync Multisig","description":"This is a Gnosis Safe with 4 / 7 threshold.  This Multisig is the owner of Upgrade Gatekeeper contract and therefore is allowed to perform upgrades for Governance, Verifier and ZkSync contracts. It can also change the list of active validators and appoint the security council (by upgrading the ZkSync contract).","accounts":[{"address":"0xE24f4870Ab85DE8E356C5fC56138587206c70d99","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x050b37a12451F188c7bA53D48b8A1adE6D138E71","type":"EOA"},{"address":"0x37A71E0C1A5808343D893Db40e12A74e0A387908","type":"EOA"},{"address":"0x733F602bB867c643542cc807a3D32AD1A86cacc1","type":"EOA"},{"address":"0xfB42eb487835B01cbF266f66750a7a89a7247F06","type":"EOA"},{"address":"0x702caCafA54B88e9c54449563Fb2e496e85c78b7","type":"EOA"},{"address":"0xD613b3a3924D0dE9B4a352ca0669e743cBC3C4AA","type":"EOA"},{"address":"0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc","type":"EOA"}]},{"name":"Security Council","accounts":[{"address":"0xa2602ea835E03fb39CeD30B43d6b6EAf6aDe1769","type":"EOA"},{"address":"0x9D5d6D4BaCCEDf6ECE1883456AA785dc996df607","type":"EOA"},{"address":"0x002A5dc50bbB8d5808e418Aeeb9F060a2Ca17346","type":"MultiSig"},{"address":"0x71E805aB236c945165b9Cd0bf95B9f2F0A0488c3","type":"EOA"},{"address":"0x76C6cE74EAb57254E785d1DcC3f812D274bCcB11","type":"EOA"},{"address":"0xFBfF3FF69D65A9103Bf4fdBf988f5271D12B3190","type":"EOA"},{"address":"0xAfC2F2D803479A2AF3A72022D54cc0901a0ec0d6","type":"Contract"},{"address":"0x4d1E3089042Ab3A93E03CA88B566b99Bd22438C6","type":"EOA"},{"address":"0x19eD6cc20D44e5cF4Bb4894F50162F72402d8567","type":"MultiSig"},{"address":"0x39415255619783A2E71fcF7d8f708A951d92e1b6","type":"EOA"},{"address":"0x399a6a13D298CF3F41a562966C1a450136Ea52C2","type":"EOA"},{"address":"0xee8AE1F1B4B1E1956C8Bda27eeBCE54Cf0bb5eaB","type":"EOA"},{"address":"0xe7CCD4F3feA7df88Cf9B59B30f738ec1E049231f","type":"EOA"},{"address":"0xA093284c707e207C36E3FEf9e0B6325fd9d0e33B","type":"EOA"},{"address":"0x225d3822De44E58eE935440E0c0B829C4232086e","type":"MultiSig"}],"description":"The Security Council's only role is to reduce the upgrade delay to zero if 9 of its members decide to do so. The council has 15 members which are hardcoded into the ZkSync contract. Changing the council requires a ZkSync contract upgrade.","references":[{"text":"Security Council Members - Etherscan source code","href":"https://etherscan.io/address/0x2eaa1377e0fc95de998b9fa7611e9d67eba534fd#code#F1#L128"},{"text":"Security Council 2.0 - Matter Labs blog post","href":"https://blog.matter-labs.io/security-council-2-0-2337a555f17a"}]},{"name":"Active validators","accounts":[{"address":"0x01c3A1a6890A146aC187A019F9863B3Ab2BfF91e","type":"EOA"}],"description":"Those actors are allowed to propose, revert and execute L2 blocks on L1."},{"name":"Token listing beneficiary","accounts":[{"address":"0x2A0a81e257a2f5D6eD4F07b81DbDa09F107bd027","type":"EOA"}],"description":"Account receiving fees for listing tokens. Can be updated by ZkSync Multisig."}],"milestones":[{"name":"ZKsync 1.0 launch","link":"https://blog.matter-labs.io/zksync-is-live-bringing-trustless-scalable-payments-to-ethereum-9c634b3e6823","date":"2020-06-18T00:00:00Z","description":"ZKsync is live, bringing scalable payments to Ethereum using ZK Rollup technology.","type":"general"},{"name":"Rebranding","link":"https://blog.matter-labs.io/all-aboard-zksync-era-mainnet-8b8964ba7c59#:~:text=ZKsync%201.0%20is%20now%20zkSync%20Lite","date":"2023-02-16T00:00:00Z","description":"ZKsync becomes ZKsync Lite.","type":"general"}]}