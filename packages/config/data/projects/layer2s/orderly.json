{"type":"layer2","id":"orderly","isUnderReview":false,"technology":{"stateCorrectness":{"name":"Fraud proofs are in development","description":"Ultimately, OP stack chains will use interactive fraud proofs to enforce state correctness. This feature is currently in development and the system permits invalid state roots.","risks":[{"category":"Funds can be stolen if","text":"an invalid state root is submitted to the system.","isCritical":true}],"references":[{"text":"L2OutputOracle.sol - Etherscan source code, deleteL2Outputs function","href":"https://etherscan.io/address/0x334251f91a3795c043663172CB59a963a9029aed#code"}]},"dataAvailability":{"name":"Data is stored on Celestia","description":"Transactions roots are posted onchain and the full data is posted on Celestia.  Since the Blobstream bridge is not used, availability of the data is not verified against Celestia validators, meaning that the Sequencer can single-handedly publish unavailable roots.","risks":[{"category":"Funds can be lost if","text":"the sequencer posts an unavailable transaction root.","isCritical":true},{"category":"Funds can be lost if","text":"the data is not available on the external provider.","isCritical":true}],"references":[{"text":"Introducing Blobstream: streaming modular DA to Ethereum","href":"https://blog.celestia.org/introducing-blobstream/"},{"text":"Derivation: Batch submission - OP Mainnet specs","href":"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/derivation.md#batch-submission"},{"text":"BatchInbox - Etherscan address","href":"https://etherscan.io/address/0x08aA34cC843CeEBcC88A627F18430294aA9780be"},{"text":"OptimismPortal.sol - Etherscan source code, depositTransaction function","href":"https://etherscan.io/address/0x7A163eb6Df3EEBbf817A7A9769F53FB2a441D47E#code"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"text":"L2OutputOracle.sol - Etherscan source code, CHALLENGER address","href":"https://etherscan.io/address/0x334251f91a3795c043663172CB59a963a9029aed#code"},{"text":"L2OutputOracle.sol - Etherscan source code, PROPOSER address","href":"https://etherscan.io/address/0x334251f91a3795c043663172CB59a963a9029aed#code"}]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly.","risks":[],"references":[{"text":"Sequencing Window - OP Mainnet Specs","href":"https://github.com/ethereum-optimism/optimism/blob/51eeb76efeb32b3df3e978f311188aa29f5e3e94/specs/glossary.md#sequencing-window"},{"text":"OptimismPortal.sol - Etherscan source code, depositTransaction function","href":"https://etherscan.io/address/0x7A163eb6Df3EEBbf817A7A9769F53FB2a441D47E#code"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is finalized the funds become available for withdrawal on L1. The process of block finalization takes a challenge period of 7d to complete. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[{"category":"Funds can be frozen if","text":"the centralized validator goes down. Users cannot produce blocks themselves and exiting the system requires new block production.","isCritical":true}],"references":[{"text":"OptimismPortal.sol - Etherscan source code, proveWithdrawalTransaction function","href":"https://etherscan.io/address/0x7A163eb6Df3EEBbf817A7A9769F53FB2a441D47E#code"},{"text":"OptimismPortal.sol - Etherscan source code, finalizeWithdrawalTransaction function","href":"https://etherscan.io/address/0x7A163eb6Df3EEBbf817A7A9769F53FB2a441D47E#code"},{"text":"L2OutputOracle.sol - Etherscan source code, PROPOSER check","href":"https://etherscan.io/address/0x334251f91a3795c043663172CB59a963a9029aed#code"}]},{"name":"Forced exit","description":"If the user experiences censorship from the operator with regular exit they can submit their withdrawal requests directly on L1. The system is then obliged to service this request or halt all withdrawals, including forced withdrawals from L1 and regular withdrawals initiated on L2. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular exit.","risks":[],"references":[{"text":"Forced withdrawal from an OP Stack blockchain","href":"https://stack.optimism.io/docs/security/forced-withdrawal/"}]}],"otherConsiderations":[{"name":"EVM compatible smart contracts are supported","description":"OP stack chains are pursuing the EVM Equivalence model. No changes to smart contracts are required regardless of the language they are written in, i.e. anything deployed on L1 can be deployed on L2.","risks":[],"references":[{"text":"Introducing EVM Equivalence","href":"https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306"}]}]},"permissions":[{"name":"Challenger","accounts":[{"address":"0xcE10372313Ca39Fbf75A09e7f4c0E57F070259f4","type":"MultiSig"}],"description":"Challenger is an actor allowed to delete state roots proposed by a Proposer.","chain":"ethereum"},{"name":"Guardian","accounts":[{"address":"0xcE10372313Ca39Fbf75A09e7f4c0E57F070259f4","type":"MultiSig"}],"description":"Guardian is an actor allowed to pause deposits and withdrawals.","chain":"ethereum"},{"name":"Proposer","accounts":[{"address":"0x74BaD482a7f73C8286F50D8Aa03e53b7d24A5f3B","type":"EOA"}],"description":"Proposer is an actor allowed to post new state roots of current layer to the host chain.","chain":"ethereum"},{"name":"Sequencer","accounts":[{"address":"0xf8dB8Aba597fF36cCD16fECfbb1B816B3236E9b8","type":"EOA"}],"description":"Sequencer is an actor allowed to commit transactions from current layer to the host chain.","chain":"ethereum"},{"name":"ConduitMultisig","description":"* This is a Gnosis Safe with 4 / 7 threshold. \n* Can act on behalf of ProxyAdmin.\n* Can change configuration of AddressManager (acting via ProxyAdmin) - set and change address mappings.\n* Can change configuration of SystemConfig - it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system.\n* Can upgrade implementation of L2OutputOracle, SystemConfig, OptimismPortal, L1ERC721Bridge (acting via ProxyAdmin).\n* Can upgrade implementation of L1StandardBridge (acting via ProxyAdmin) - upgrading bridge implementation allows to access all funds and change every system component.\n","accounts":[{"address":"0x4a4962275DF8C60a80d3a25faEc5AA7De116A746","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xF3313C48BD8E17b823d5498D62F37019dFEA647D","type":"EOA"},{"address":"0xF0B77EaE7F2dabCC2571c7418406A0dCA3afA4f0","type":"EOA"},{"address":"0xa4000bDD2bB92ce6750b31F1eeda47Bd1cB8e6e4","type":"EOA"},{"address":"0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f","type":"EOA"},{"address":"0xa0C600a6e85bf225958FFAcC70B5FDDF9A059038","type":"EOA"},{"address":"0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C","type":"EOA"},{"address":"0x4D8007a0E9f293e62E2b0F43C6Cf4C4B9e135BAe","type":"EOA"}]},{"name":"OrderlyMultisig","description":"* This is a Gnosis Safe with 4 / 6 threshold. \n* Challenger, Guardian.\n","accounts":[{"address":"0xcE10372313Ca39Fbf75A09e7f4c0E57F070259f4","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C","type":"EOA"},{"address":"0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f","type":"EOA"},{"address":"0xa0C600a6e85bf225958FFAcC70B5FDDF9A059038","type":"EOA"},{"address":"0x71884086Cfacc370cf5EC34363Bf3938C6c6d888","type":"EOA"},{"address":"0xC11D658978FF288da8bda4004CB93C6C99D791b1","type":"EOA"},{"address":"0x985Fa8958Aa3dcE89a83E519e6FAAeCAa4930b32","type":"EOA"}]}],"contracts":{"addresses":[{"name":"L2OutputOracle","address":"0x5e76821C3c1AbB9fD6E310224804556C61D860e0","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb570F4aD27e7De879A2E4F2F3DE27dBaBc20E9B9"],"implementations":["0x334251f91a3795c043663172CB59a963a9029aed"]},"chain":"ethereum","description":"Contains a list of proposed state roots which Proposers assert to be a result of block execution. Currently only the PROPOSER address can submit new state roots.","upgradableBy":["ConduitMultisig"],"upgradeDelay":"No delay"},{"name":"AddressManager","address":"0x87630a802a3789463eC4b00f89b27b1e9f6b92e9","chain":"ethereum","description":"Legacy contract used to manage a mapping of string names to addresses. Modern OP stack uses a different standard proxy system instead, but this contract is still necessary for backwards compatibility with several older contracts."},{"name":"SystemConfig","address":"0x886B187C3D293B1449A3A0F23Ca9e2269E0f2664","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb570F4aD27e7De879A2E4F2F3DE27dBaBc20E9B9"],"implementations":["0x240B3bd6b95cE40497Aafd71aD4705d0345A33CD"]},"chain":"ethereum","description":"Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.","upgradableBy":["ConduitMultisig"],"upgradeDelay":"No delay"},{"name":"OptimismPortal","address":"0x91493a61ab83b62943E6dCAa5475Dd330704Cc84","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb570F4aD27e7De879A2E4F2F3DE27dBaBc20E9B9"],"implementations":["0x7A163eb6Df3EEBbf817A7A9769F53FB2a441D47E"]},"chain":"ethereum","description":"The main entry point to deposit funds from host chain to this chain. It also allows to prove and finalize withdrawals.","upgradableBy":["ConduitMultisig"],"upgradeDelay":"No delay"},{"name":"L1ERC721Bridge","address":"0x934Ab59Ef14b638653b1C0FEf7aB9a72186393DC","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb570F4aD27e7De879A2E4F2F3DE27dBaBc20E9B9"],"implementations":["0x701E95156dfD378d1985C6CC405D0Ee3d2af8503"]},"chain":"ethereum","description":"Used to bridge ERC-721 tokens from host chain to this chain.","upgradableBy":["ConduitMultisig"],"upgradeDelay":"No delay"},{"name":"ProxyAdmin","address":"0xb570F4aD27e7De879A2E4F2F3DE27dBaBc20E9B9","chain":"ethereum","description":"* Can be used to configure AddressManager - set and change address mappings.\n* Can be used to upgrade implementation of L2OutputOracle, SystemConfig, OptimismPortal, L1ERC721Bridge.\n* Can be used to upgrade implementation of L1StandardBridge - upgrading bridge implementation allows to access all funds and change every system component.\n"},{"name":"L1CrossDomainMessenger","address":"0xc76543A64666d9a073FaEF4e75F651c88e7DBC08","upgradeability":{"proxyType":"resolved delegate proxy","admins":[],"implementations":["0xB6767fA038e8fbe3B60d42866dbeF0fca3B1a7d6"],"immutable":false},"chain":"ethereum","description":"Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function."},{"name":"L1StandardBridge","address":"0xe07eA0436100918F157DF35D01dCE5c11b16D1F1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb570F4aD27e7De879A2E4F2F3DE27dBaBc20E9B9"],"implementations":["0xc1D40DbA2505E43c5834DA7Ec03953397C2f3087"]},"chain":"ethereum","description":"The main entry point to deposit ERC20 tokens from host chain to this chain. This contract can store any token.","upgradableBy":["ConduitMultisig"],"upgradeDelay":"No delay"}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"milestones":[{"name":"Orderly Network Mainnet Launch","link":"https://twitter.com/OrderlyNetwork/status/1749419001913237526","date":"2024-01-22T00:00:00Z","description":"Orderly Network is live on mainnet.","type":"general"}],"knowledgeNuggets":[{"title":"How Optimism compresses data","url":"https://twitter.com/bkiepuszewski/status/1508740414492323840?s=20&t=vMgR4jW1ssap-A-MBsO4Jw","thumbnail":"l2beat-03.jpg"},{"title":"Superchain Explainer","url":"https://docs.optimism.io/stack/explainer","thumbnail":"optimism-03.jpg"},{"title":"Modular Rollup Theory","url":"https://www.youtube.com/watch?v=jnVjhp41pcc","thumbnail":"modular-rollup.jpg"}],"badges":["Celestia","Superchain","Conduit","OPStack","EVM"],"discoveryDrivenData":true,"display":{"architectureImage":"opstack","name":"Orderly Network","slug":"orderly","warning":"Fraud proof system is currently under development. Users need to trust the block proposer to submit correct L1 state roots.","description":"Orderly is an OP stack Optimium on Ethereum using Celestia for data availability. It has a unified ledger for assets from multiple chains and an orderbook that can be used by apps that build on top of it.","detailedDescription":"While ETH deposited to Orderly is using an OP Stack canonical bridge, the multichain USDC escrows are sending / receiving their deposit / withdrawal messages through the external LayerZero v1 AMB.","purposes":["DeFi","Exchange"],"links":{"websites":["https://orderly.network/"],"apps":["https://app.orderly.network/"],"documentation":["https://orderly.network/docs/build-on-evm/building-on-evm"],"explorers":["https://explorer.orderly.network/"],"repositories":[],"socialMedia":["https://twitter.com/OrderlyNetwork","https://discord.gg/orderlynetwork","https://medium.com/@orderlynetwork","https://t.me/OrderlyNetworkAnnouncements"]},"activityDataSource":"Blockchain RPC","provider":"OP Stack","category":"Optimium"},"config":{"escrows":[{"address":"0x91493a61ab83b62943E6dCAa5475Dd330704Cc84","newVersion":true,"sinceTimestamp":1696608311,"tokens":["ETH"],"contract":{"address":"0x91493a61ab83b62943E6dCAa5475Dd330704Cc84","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb570F4aD27e7De879A2E4F2F3DE27dBaBc20E9B9"],"implementations":["0x7A163eb6Df3EEBbf817A7A9769F53FB2a441D47E"]},"chain":"ethereum","description":"Main entry point for users depositing ETH.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true},{"address":"0xe07eA0436100918F157DF35D01dCE5c11b16D1F1","newVersion":true,"sinceTimestamp":1696608347,"tokens":"*","contract":{"address":"0xe07eA0436100918F157DF35D01dCE5c11b16D1F1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb570F4aD27e7De879A2E4F2F3DE27dBaBc20E9B9"],"implementations":["0xc1D40DbA2505E43c5834DA7Ec03953397C2f3087"]},"chain":"ethereum","description":"Main entry point for users depositing ERC20 token that do not require custom gateway.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true},{"chain":"arbitrum","includeInTotal":false,"address":"0x816f722424B49Cf1275cc86DA9840Fbd5a6167e9","sinceTimestamp":1697682598,"tokens":["USDC"],"source":"external","bridgedUsing":{"bridges":[{"name":"Arbitrum escrow -> LayerZero AMB"}]}},{"chain":"optimism","includeInTotal":false,"address":"0x816f722424B49Cf1275cc86DA9840Fbd5a6167e9","sinceTimestamp":1701153879,"tokens":["USDC"],"source":"external","bridgedUsing":{"bridges":[{"name":"Optimism escrow -> LayerZero AMB"}]}},{"chain":"base","includeInTotal":false,"address":"0x816f722424B49Cf1275cc86DA9840Fbd5a6167e9","sinceTimestamp":1712584295,"tokens":["USDC"],"source":"external","bridgedUsing":{"bridges":[{"name":"Base escrow -> LayerZero AMB"}]}},{"chain":"mantle","includeInTotal":false,"address":"0x816f722424B49Cf1275cc86DA9840Fbd5a6167e9","sinceTimestamp":1705831672,"tokens":["USDC"],"source":"external","bridgedUsing":{"bridges":[{"name":"Mantle escrow -> LayerZero AMB"}]}},{"chain":"ethereum","address":"0x816f722424B49Cf1275cc86DA9840Fbd5a6167e9","sinceTimestamp":1705702751,"tokens":["USDC"],"source":"external","bridgedUsing":{"bridges":[{"name":"Ethereum escrow -> LayerZero AMB"}]}}],"transactionApi":{"type":"rpc","startBlock":1,"defaultUrl":"https://rpc.orderly.network","defaultCallsPerMinute":1500}},"dataAvailability":{"layer":{"value":"Celestia","sentiment":"warning","description":"The data is posted to Celestia."},"bridge":{"value":"None","sentiment":"bad","description":"There is no bridge that can attest if the data has been made available."},"mode":"Transaction data (compressed)"},"riskView":{"stateValidation":{"value":"None","description":"Currently the system permits invalid state roots. More details in project overview.","sentiment":"bad","definingMetric":null,"secondLine":"7d challenge period"},"dataAvailability":{"value":"External","description":"Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client.","sentiment":"bad","sources":[{"contract":"OptimismPortal","references":[]}]},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","definingMetric":-604800,"sources":[{"contract":"OptimismPortal","references":[]}]},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There is a 12h delay on this operation.","sentiment":"good","definingMetric":43200,"sources":[{"contract":"OptimismPortal","references":[]}]},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","definingMetric":null,"sources":[{"contract":"L2OutputOracle","references":[]}]},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"}},"stage":{"stage":"NotApplicable"}}