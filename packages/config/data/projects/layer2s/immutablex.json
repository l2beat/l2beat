{"type":"layer2","id":"immutablex","badges":["AppChain","DAC","StarkEx","SHARP"],"display":{"name":"Immutable X","slug":"immutablex","description":"Immutable X is a NFT-focused Validium providing zero gas fees, instant trades and scalability for applications.","purposes":["NFT","Exchange"],"provider":"StarkEx","category":"Validium","links":{"websites":["https://immutablex.xyz/"],"apps":["https://app.immutable.com/"],"documentation":["https://docs.immutablex.xyz/"],"explorers":["https://explorer.immutable.com/"],"repositories":["https://github.com/Immutable"],"socialMedia":["https://medium.com/@immutablex","https://twitter.com/Immutable"]},"activityDataSource":"Closed API"},"stage":{"stage":"NotApplicable"},"config":{"associatedTokens":["IMX"],"escrows":[{"address":"0x5FDCCA53617f4d2b9134B29090C87D01058e27e9","newVersion":true,"sinceTimestamp":1615389188,"tokens":["ETH","IMX","USDC","OMI"],"contract":{"address":"0x5FDCCA53617f4d2b9134B29090C87D01058e27e9","upgradeability":{"proxyType":"StarkWare diamond","admins":["0x9C41deab42Bae7c0ec4DB3cECc0faD86F4D6EC91"],"implementations":["0x4EDD62189732e9fF476ABa880b48c29432A7AC9B","0x62BCA4DB742A99c834e2c24b609656A70EA25379","0x8536850750956c2FEebeCAB786d82271a5467687","0x1c3A4EfF75a287Fe6249CAb49606FA25659929A2","0x3799ad2a4Eb4E882219B02C036656d4ECbD437A1","0x1688abB0B5c72F34B7f78e857Aa317deD5B5D339","0xB3788a88F063B217227E27ae16Ba550db3132bE6"],"immutable":false},"chain":"ethereum","description":"Main StarkEx contract, used also as an escrow."},"chain":"ethereum","includeInTotal":true}],"transactionApi":{"type":"starkex","product":["immutable"],"sinceTimestamp":1615389188,"resyncLastDays":7}},"dataAvailability":{"layer":{"value":"DAC","sentiment":"warning","description":"The data is posted off chain and a Data Availability Committee (DAC) is responsible for protecting and supplying it."},"bridge":{"value":"5/7 DAC Members","sentiment":"bad","description":"There is a threshold of 5/7 members that must sign and attest that the data is correct and available."},"mode":"State diffs"},"riskView":{"stateValidation":{"value":"ZK proofs (ST)","description":"zkSTARKS are zero knowledge proofs that ensure state correctness.","sentiment":"good","definingMetric":null},"dataAvailability":{"value":"External (DAC)","description":"Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 5/7 that is tasked with protecting and supplying the data.","sentiment":"bad","definingMetric":0.7142857142857143,"sources":[{"contract":"StarkExchange","references":["https://etherscan.io/address/0x1c3A4EfF75a287Fe6249CAb49606FA25659929A2#code#F34#L123"]},{"contract":"Committee","references":["https://etherscan.io/address/0x16BA0f221664A5189cf2C1a7AF0d3AbFc70aA295#code#F1#L63"]}]},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","definingMetric":-604800},"sequencerFailure":{"value":"Force via L1","description":"Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for  for more than 7d, users can use the exit hatch to withdraw their funds.","sentiment":"good","definingMetric":604800},"proposerFailure":{"value":"Use escape hatch","description":"Users are able to trustlessly exit by submitting a Merkle proof of funds. NFTs will be minted on L1 to exit.","sentiment":"good","definingMetric":null},"destinationToken":{"value":"Canonical","description":"Tokens transferred are considered canonical on the destination chain.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"}},"technology":{"stateCorrectness":{"name":"Validity proofs ensure state correctness","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract. The system state is represented using Merkle roots.","risks":[],"references":[{"text":"Enforcing Consistency on the On-Chain State - StarkEx documentation","href":"https://docs.starkware.co/starkex/spot/shared/README-off-chain-state.html#enforcing_consistency_in_the_on_chain_state_spot"}]},"newCryptography":{"name":"Zero knowledge STARK cryptography is used","description":"Despite their production use zkSTARKs proof systems are still relatively new, complex and they rely on the proper implementation of the polynomial constraints used to check validity of the Execution Trace.","risks":[{"category":"Funds can be lost if","text":"the proof system is implemented incorrectly."}],"references":[{"text":"STARK Core Engine Deep Dive","href":"https://medium.com/starkware/starkdex-deep-dive-the-stark-core-engine-497942d0f0ab"}]},"dataAvailability":{"name":"Data is not stored on chain","description":"The balances of the users are not published on-chain, but rather sent to external trusted parties, also known as committee members. A state update is valid and accepted on-chain only if at least a quorum of the committee members sign a state update.","risks":[{"category":"Funds can be lost if","text":"the external data becomes unavailable.","isCritical":true},{"category":"Users can be censored if","text":"the committee restricts their access to the external data."}],"references":[{"text":"Data Availability Modes - StarkEx documentation","href":"https://docs.starkware.co/starkex/con_data_availability.html#data_availability_modes"},{"text":"Validium - StarkEx documentation","href":"https://docs.starkware.co/starkex/con_data_availability.html#validium_starkex"},{"text":"Availability Verifiers - StarkEx documentation","href":"https://docs.starkware.co/starkex/spot/shared/contract-management.html#availability_verifiers_spot"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system. Typically, the Operator is the hot wallet of the StarkEx service submitting state updates for which proofs have been already submitted and verified.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"text":"Operator - StarkEx documentation","href":"https://docs.starkware.co/starkex/perpetual/shared/contract-management.html#operator_perpetual"}]},"forceTransactions":{"name":"Users can force exit the system","description":"Force exit allows the users to escape censorship by withdrawing their funds. The system allows users to force the withdrawal of funds by submitting a request directly to the contract on-chain.  The request must be served within a defined time period. If this does not happen, the system will halt regular operation and permit trustless withdrawal of funds.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions. However, there exists a mechanism to independently exit the system."}],"references":[{"text":"Censorship Prevention - StarkEx documentation","href":"https://docs.starkware.co/starkex/architecture/solution-architecture.html#8-censorship-prevention"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is proven the funds become available for withdrawal on L1. Finally the user submits an L1 transaction to claim the funds. This transaction does not require a merkle proof. When withdrawing NFTs they are minted on L1.","risks":[],"references":[{"text":"Withdrawal - StarkEx documentation","href":"https://docs.starkware.co/starkex/spot/withdrawal.html"}]},{"name":"Forced exit","description":"If the user experiences censorship from the operator with regular exit they can submit their withdrawal requests directly on L1. The system is then obliged to service this request. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular exit.","risks":[],"references":[{"text":"Forced Operations - StarkEx documentation","href":"https://docs.starkware.co/starkex/spot/shared/README-forced-operations.html"},{"text":"Full Withdrawal - StarkEx documentation","href":"https://docs.starkware.co/starkex/spot/spot-trading-full-withdrawals.html"}]},{"name":"Emergency exit","description":"If the enough time deadline passes and the forced exit is still ignored the user can put the system into a frozen state, disallowing further state updates. In that case everybody can withdraw by submitting a merkle proof of their funds with their L1 transaction.","risks":[],"references":[{"text":"Forced Operations - StarkEx documentation","href":"https://docs.starkware.co/starkex/spot/shared/README-forced-operations.html"},{"text":"Full Withdrawal - StarkEx documentation","href":"https://docs.starkware.co/starkex/spot/spot-trading-full-withdrawals.html"}]}]},"contracts":{"addresses":[{"name":"StarkExchange","address":"0x5FDCCA53617f4d2b9134B29090C87D01058e27e9","upgradeability":{"proxyType":"StarkWare diamond","admins":["0x9C41deab42Bae7c0ec4DB3cECc0faD86F4D6EC91"],"implementations":["0x4EDD62189732e9fF476ABa880b48c29432A7AC9B","0x62BCA4DB742A99c834e2c24b609656A70EA25379","0x8536850750956c2FEebeCAB786d82271a5467687","0x1c3A4EfF75a287Fe6249CAb49606FA25659929A2","0x3799ad2a4Eb4E882219B02C036656d4ECbD437A1","0x1688abB0B5c72F34B7f78e857Aa317deD5B5D339","0xB3788a88F063B217227E27ae16Ba550db3132bE6"],"immutable":false},"chain":"ethereum"},{"name":"Committee","address":"0x16BA0f221664A5189cf2C1a7AF0d3AbFc70aA295","chain":"ethereum","description":"Data Availability Committee (DAC) contract verifying data availability claim from DAC Members (via multisig check)."},{"name":"SHARPVerifierProxy","address":"0x47312450B3Ac8b5b8e247a6bB6d523e7605bDb60","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x3DE55343499f59CEB3f1dE47F2Cd7Eab28F2F5C6","0x21F9eC47b19d95b5C2DDFB6Ae5D4F92fAdacAEc4"],"implementations":["0xD4C4044ACa68ebBcB81B13cC2699e1Bca2d3F458"],"immutable":false},"chain":"ethereum","description":"CallProxy for GpsStatementVerifier."},{"name":"SHARPVerifier","address":"0x9fb7F48dCB26b7bFA4e580b2dEFf637B13751942","chain":"ethereum","description":"Starkware SHARP verifier used collectively by Starknet, Sorare, ImmutableX, Apex, Myria, rhino.fi and Canvas Connect. It receives STARK proofs from the Prover attesting to the integrity of the Execution Trace of these Programs including correctly computed state root which is part of the Program Output."},{"name":"FriStatementContract","address":"0x30EfaAA99f8eFe310D9FdC83072e2a04c093d400","chain":"ethereum","description":"Part of STARK Verifier."},{"name":"MerkleStatementContract","address":"0x32a91Ff604AB2aDCd832e91D68b2f3f25358FdAd","chain":"ethereum","description":"Part of STARK Verifier."},{"name":"CairoBootloaderProgram","address":"0x58600A1Dc51dcF7D4F541a8f1F5C6c6AA86cc515","chain":"ethereum","description":"Part of STARK Verifier."},{"name":"MemoryPageFactRegistry","address":"0xe583BcDE0160b637330b27a3ea1F3c02ba2eC460","chain":"ethereum","description":"MemoryPageFactRegistry is one of the many contracts used by SHARP verifier. This one is important as it registers all necessary on-chain data."},{"name":"OldMemoryPageFactRegistry","address":"0xFD14567eaf9ba941cB8c8a94eEC14831ca7fD1b4","chain":"ethereum","description":"Same as MemoryPageFactRegistry but stores facts proved by the old SHARP Verifier, used as a fallback."}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"permissions":[{"name":"Governor","accounts":[{"address":"0x9C41deab42Bae7c0ec4DB3cECc0faD86F4D6EC91","type":"MultiSig"}],"description":"Can upgrade implementation of the system, potentially gaining access to all funds stored in the bridge. Currently there is 14d delay before the upgrade."},{"name":"Data Availability Committee","accounts":[{"address":"0x1FfBDb8061B586A6D29fb608d025e5D8744f58d1","type":"EOA"},{"address":"0x24EeFFC269bB8E540F5B2C8f45750489abf8D54b","type":"EOA"},{"address":"0x48AF849535DDFa560A0EB0FbDEf436688169B949","type":"EOA"},{"address":"0x51AbdE72a4542500a7b1Cb32B18b13fbe1F9ff2E","type":"EOA"},{"address":"0xAfC4589aF46C72CBF550F2eEAE38c97AeDE15d17","type":"EOA"},{"address":"0xB71FC111D7BA82D5955BaDdD7717f3467184FF61","type":"EOA"},{"address":"0xfF506616E8C53EE5e513b906AC00B5D76664C537","type":"EOA"}],"minSigners":5,"minAssumedHonestMembers":3,"description":"Validity proof must be signed by at least 5 of these addresses to approve state update."},{"name":"SHARP Verifier Governors","accounts":[{"address":"0x3DE55343499f59CEB3f1dE47F2Cd7Eab28F2F5C6","type":"EOA"},{"address":"0x21F9eC47b19d95b5C2DDFB6Ae5D4F92fAdacAEc4","type":"MultiSig"}],"description":"Can upgrade implementation of SHARP Verifier, potentially with code approving fraudulent state. Currently there is 0s delay before the upgrade."},{"name":"SHARPVerifierGovernorMultisig","description":"This is a Gnosis Safe with 2 / 4 threshold.  SHARP Verifier Governor.","accounts":[{"address":"0x21F9eC47b19d95b5C2DDFB6Ae5D4F92fAdacAEc4","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x0405107a60391Eb51821be373ff978115Ee58488","type":"EOA"},{"address":"0x59232aC80E6d403b6381393e52f4665ECA328558","type":"EOA"},{"address":"0xebc8416179fE90854fe8B3f774801165572cfD7F","type":"EOA"},{"address":"0x955B978F3ee7818dA71fA25c676062E6BC462Fec","type":"EOA"}]},{"name":"Operators","accounts":[{"address":"0x9B7f7d0d23d4CAce5A3157752D0D4e4bf25E927e","type":"EOA"}],"description":"Allowed to update the state. When the Operator is down the state cannot be updated."}],"milestones":[{"name":"Trading is live on Immutable X Marketplace","link":"https://twitter.com/immutable/status/1380269810525872131?s=21&t=kyMdE6ORI9f76e8aqizlpg","date":"2021-04-08T00:00:00Z","description":"Immutable has launched the first phase of its Layer 2 scaling protocol.","type":"general"},{"name":"IMX Token introduced","link":"https://www.immutable.com/blog/introducing-imx-to-power-ethereums-first-layer-2-for-nfts","date":"2022-06-29T00:00:00Z","description":"Immutable announce IMX, the native ERC-20 utility token of Immutable X.","type":"general"}],"knowledgeNuggets":[{"title":"Understand StarkWare #1","url":"https://twitter.com/bkiepuszewski/status/1480473352213041152","thumbnail":"starkware-01.jpg"},{"title":"Understand StarkWare #2","url":"https://twitter.com/bkiepuszewski/status/1480804584926949377","thumbnail":"starkware-02.jpg"},{"title":"Understand StarkWare #3","url":"https://twitter.com/bkiepuszewski/status/1481173682219270146","thumbnail":"starkware-03.jpg"},{"title":"Understand StarkWare #4","url":"https://twitter.com/bkiepuszewski/status/1481521079562784769","thumbnail":"starkware-04.jpg"}]}