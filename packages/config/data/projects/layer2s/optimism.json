{"type":"layer2","id":"optimism","badges":["EVM","EthereumBlobs","OPStack","Superchain","L3HostChain","Governance"],"display":{"name":"OP Mainnet","slug":"optimism","category":"Optimistic Rollup","provider":"OP Stack","description":"OP Mainnet is an EVM-equivalent Optimistic Rollup. It aims to be fast, simple, and secure.","purposes":["Universal"],"links":{"websites":["https://optimism.io/"],"apps":["https://app.optimism.io"],"documentation":["https://community.optimism.io"],"explorers":["https://optimistic.etherscan.io","https://optimism.blockscout.com/","https://mainnet.superscan.network"],"repositories":["https://github.com/ethereum-optimism/optimism"],"socialMedia":["https://x.com/Optimism","https://optimism.mirror.xyz/","https://twitter.com/OPLabsPBC","https://youtube.com/playlist?list=PLX_rXoLYCf5HqTWygUfoMfzRirGz5lekH","https://twitch.tv/optimismpbc","https://discord.gg/optimism"],"rollupCodes":"https://rollup.codes/optimism"},"activityDataSource":"Blockchain RPC","liveness":{"warnings":{"stateUpdates":"Please note, for Optimistic rollups the state is not finalized until the challenge period passes."},"explanation":"OP Mainnet is an Optimistic rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted within a tx batch on L1 that links to a previous finalized batch. If the previous batch is missing, transaction finalization can be delayed up to 12h or until it gets published. The state root gets confirmed 3d 12h after it has been posted."},"finality":{"finalizationPeriod":302400}},"config":{"associatedTokens":["OP"],"escrows":[{"address":"0xbEb5Fc579115071764c7423A4f12eDde41f106Ed","newVersion":true,"sinceTimestamp":1685377379,"tokens":["ETH"],"contract":{"address":"0xbEb5Fc579115071764c7423A4f12eDde41f106Ed","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0xe2F826324b2faf99E513D16D266c3F80aE87832B"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true},{"address":"0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1","newVersion":true,"sinceTimestamp":1624401464,"tokens":"*","contract":{"address":"0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0x64B5a5Ed26DCb17370Ff4d33a8D503f0fbD06CfF"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true},{"address":"0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65","newVersion":true,"sinceTimestamp":1625675779,"tokens":["DAI"],"contract":{"address":"0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65","chain":"ethereum","description":"DAI Vault for custom DAI Gateway managed by MakerDAO."},"chain":"ethereum","includeInTotal":true},{"address":"0x5Fd79D46EBA7F351fe49BFF9E87cdeA6c821eF9f","newVersion":true,"sinceTimestamp":1620680982,"tokens":["SNX"],"contract":{"address":"0x5Fd79D46EBA7F351fe49BFF9E87cdeA6c821eF9f","chain":"ethereum","description":"SNX Vault for custom SNX Gateway managed by Synthetix."},"chain":"ethereum","includeInTotal":true},{"address":"0x045e507925d2e05D114534D0810a1abD94aca8d6","sinceTimestamp":1610668212,"tokens":["SNX"],"isHistorical":true,"chain":"ethereum"},{"address":"0xCd9D4988C0AE61887B075bA77f08cbFAd2b65068","sinceTimestamp":1620680934,"tokens":["SNX"],"isHistorical":true,"chain":"ethereum"},{"address":"0x76943C0D61395d8F2edF9060e1533529cAe05dE6","newVersion":true,"sinceTimestamp":1659687799,"tokens":["wstETH"],"contract":{"address":"0x76943C0D61395d8F2edF9060e1533529cAe05dE6","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"],"implementations":["0x29C5c51A031165CE62F964966A6399b81165EFA4"]},"chain":"ethereum","description":"wstETH Vault for custom wstETH Gateway. Fully controlled by Lido governance."},"chain":"ethereum","includeInTotal":true}],"transactionApi":{"type":"rpc","defaultUrl":"https://mainnet.optimism.io/","startBlock":1},"finality":{"type":"OPStack-blob","minTimestamp":1710375155,"l2BlockTimeSeconds":2,"genesisTimestamp":1686068903,"lag":0,"stateUpdate":"disabled"},"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"transfer","from":"0x6887246668a3b87F54DeB3b94Ba47a6f63F32985","to":"0xFF00000000000000000000000000000000000010","sinceTimestamp":1686074603}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xdfe97868233d1aa22e815a266982f2cf17685a27","selector":"0x9aaab648","functionSignature":"function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1Blockhash, uint256 _l1BlockNumber)","sinceTimestamp":1660662182,"untilTimestamp":1718039363}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xe5965Ab5962eDc7477C8520243A95517CD252fA9","selector":"0x82ecf2f6","functionSignature":"function create(uint32 _gameType, bytes32 _rootClaim, bytes _extraData) payable returns (address proxy_)","sinceTimestamp":1718039363}}]},"chainConfig":{"name":"optimism","chainId":10,"explorerUrl":"https://optimistic.etherscan.io","explorerApi":{"url":"https://api-optimistic.etherscan.io/api","type":"etherscan"},"blockscoutV2ApiUrl":"https://optimism.blockscout.com/api/v2","minTimestampForTvl":1636668000,"multicallContracts":[{"address":"0xcA11bde05977b3631167028862bE2a173976CA11","batchSize":150,"sinceBlock":4286263,"version":"3"},{"sinceBlock":0,"batchSize":150,"address":"0xE295aD71242373C37C5FdA7B57F26f9eA1088AFe","version":"optimism"}],"coingeckoPlatform":"optimistic-ethereum"},"dataAvailability":{"layer":{"value":"Ethereum (blobs or calldata)","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs."},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted on chain."},"mode":"Transaction data (compressed)"},"riskView":{"stateValidation":{"value":"Fraud proofs (INT)","description":"Fraud proofs allow actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve.","sentiment":"good","definingMetric":null,"sources":[{"contract":"DisputeGameFactory","references":["https://etherscan.io/address/0xc641a33cab81c559f2bd4b21ea34c290e2440c2b#code"]}],"secondLine":"3d 12h challenge period"},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","definingMetric":null},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","definingMetric":-604800},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There is a 12h delay on this operation.","sentiment":"good","definingMetric":43200},"proposerFailure":{"value":"Self propose","description":"Anyone can be a Proposer and propose new roots to the L1 bridge.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"}},"technology":{"stateCorrectness":{"name":"Fraud proofs ensure state correctness","description":"After some period of time, the published state root is assumed to be correct. For a certain time period, one of the whitelisted actors can submit a fraud proof that shows that the state was incorrect.","risks":[{"category":"Funds can be stolen if","text":"no validator checks the published state. Fraud proofs assume at least one honest and able validator."}],"references":[{"text":"DisputeGameFactory.sol - Etherscan source code, create() function","href":"https://etherscan.io/address/0xc641a33cab81c559f2bd4b21ea34c290e2440c2b#code"},{"text":"FaultDisputeGame.sol - Etherscan source code, attack() function","href":"https://etherscan.io/address/0xA6f3DFdbf4855a43c529bc42EDE96797252879af#code"}]},"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap blobs or calldata. This ensures that it will be available for enough time.","risks":[],"references":[{"text":"Derivation: Batch submission - OP Mainnet specs","href":"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/derivation.md#batch-submission"},{"text":"BatchInbox - Etherscan address","href":"https://etherscan.io/address/0xFF00000000000000000000000000000000000010"},{"text":"OptimismPortal.sol - Etherscan source code, depositTransaction function","href":"https://etherscan.io/address/0xe2F826324b2faf99E513D16D266c3F80aE87832B#code"}]},"operator":{"name":"The system has a centralized sequencer","description":"While forcing transaction is open to anyone the system employs a privileged sequencer that has priority for submitting transaction batches and ordering transactions.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly.","risks":[],"references":[{"text":"Sequencing Window - OP Mainnet Specs","href":"https://github.com/ethereum-optimism/optimism/blob/51eeb76efeb32b3df3e978f311188aa29f5e3e94/specs/glossary.md#sequencing-window"},{"text":"OptimismPortal.sol - Etherscan source code, depositTransaction function","href":"https://etherscan.io/address/0xe2F826324b2faf99E513D16D266c3F80aE87832B#code"}]},"exitMechanisms":[{"name":"Regular exits","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When a state root containing such transaction is settled, the funds become available for withdrawal on L1 after 3d 12h. Withdrawal inclusion can be proven before state root settlement, but a 7d period has to pass before it becomes actionable. The process of state root settlement takes a challenge period of at least 3d 12h to complete. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[],"references":[{"text":"OptimismPortal.sol - Etherscan source code, proveWithdrawalTransaction function","href":"https://etherscan.io/address/0xe2F826324b2faf99E513D16D266c3F80aE87832B#code"},{"text":"OptimismPortal.sol - Etherscan source code, finalizeWithdrawalTransaction function","href":"https://etherscan.io/address/0xe2F826324b2faf99E513D16D266c3F80aE87832B#code"}]},{"name":"Forced exit","description":"If the user experiences censorship from the operator with regular exit they can submit their withdrawal requests directly on L1. The system is then obliged to service this request or halt all withdrawals, including forced withdrawals from L1 and regular withdrawals initiated on L2. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular exit.","risks":[],"references":[{"text":"Forced withdrawal from an OP Stack blockchain","href":"https://stack.optimism.io/docs/security/forced-withdrawal/"}]}],"otherConsiderations":[{"name":"EVM compatible smart contracts are supported","description":"OP stack chains are pursuing the EVM Equivalence model. No changes to smart contracts are required regardless of the language they are written in, i.e. anything deployed on L1 can be deployed on L2.","risks":[],"references":[{"text":"Introducing EVM Equivalence","href":"https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306"}]}]},"stateDerivation":{"nodeSoftware":"The rollup node is composed of two software components: [op-node](https://github.com/ethereum-optimism/optimism/tree/develop/op-node), implementing consensus related logic, and [op-geth](https://github.com/ethereum-optimism/op-geth), implementing execution logic. The configuration file can be found [here](https://github.com/ethereum-optimism/superchain-registry/blob/main/superchain/configs/mainnet/op.toml).","compressionScheme":"Data batches are compressed using the [zlib](https://github.com/madler/zlib) algorithm with best compression level.","genesisState":"Since OP Mainnet has migrated from the OVM to Bedrock, a node must be synced using a data directory that can be found [here](https://docs.optimism.io/builders/node-operators/management/snapshots). To reproduce the migration itself, see this [guide](https://blog.oplabs.co/reproduce-bedrock-migration/).","dataFormat":"The format specification of Sequencer's data batches can be found [here](https://blog.oplabs.co/reproduce-bedrock-migration/)."},"stateValidation":{"description":"Updates to the system state can be proposed and challenged by anyone who has sufficient funds. If a state root passes the challenge period, it is optimistically considered correct and made actionable for withdrawals.","categories":[{"title":"State root proposals","description":"Proposers submit state roots as children of the latest confirmed state root (called anchor state), by calling the `create` function in the DisputeGameFactory. A state root can have multiple conflicting children. Each proposal requires a stake, currently set to 0.08 ETH, that can be slashed if the proposal is proven incorrect via a fraud proof. Stakes can be withdrawn only after the proposal has been confirmed. A state root gets confirmed if the challenge period has passed and it is not countered.","references":[{"text":"OP stack specification: Fault Dispute Game","href":"https://specs.optimism.io/fault-proof/stage-one/fault-dispute-game.html#fault-dispute-game"}]},{"title":"Challenges","description":"Challenges are opened to disprove invalid state roots using bisection games. Each bisection move requires a stake that increases expontentially with the depth of the bisection, with a factor of 1.09493. The maximum depth is 73, and reaching it therefore requires a cumulative stake of 691.43 ETH from depth 0. Actors can participate in any challenge by calling the `defend` or `attack` functions, depending whether they agree or disagree with the latest claim and want to move the bisection game forward. Actors that disagree with the top-level claim are called challengers, and actors that agree are called defenders. Each actor might be involved in multiple (sub-)challenges at the same time, meaning that the protocol operates with [full concurrency](https://medium.com/l2beat/fraud-proof-wars-b0cb4d0f452a). Challengers and defenders alternate in the bisection game, and they pass each other a clock that starts with 3d 12h. If a clock expires, the claim is considered defeated if it was countered, or it gets confirmed if uncountered. Since honest parties can inherit clocks from malicious parties that play both as challengers and defenders (see [freeloader claims](https://specs.optimism.io/fault-proof/stage-one/fault-dispute-game.html#freeloader-claims)), if a clock gets inherited with less than 3h, it generally gets extended by 3h with the exception of 6h right before depth 30, and 1d right before the last depth. The maximum clock extension that a top level claim can get is therefore 10d. Since unconfirmed state roots are independent of one another, users can decide to exit with a subsequent confirmed state root if the previous one is delayed. Winners get the entire losers' stake, meaning that sybils can potentially play against each other at no cost. The final instruction found via the bisection game is then executed onchain in the MIPS one step prover contract who determines the winner. The protocol does not enforce valid bisections, meaning that actors can propose correct initial claims and then provide incorrect midpoints. The protocol can be subject to resource exhaustion attacks ([Spearbit 5.1.3](https://github.com/ethereum-optimism/optimism/blob/develop/docs/security-reviews/2024_08_report-cb-fault-proofs-non-mips.pdf)).","references":[{"text":"Fraud Proof Wars: OPFP","href":"https://medium.com/l2beat/fraud-proof-wars-b0cb4d0f452a"}]}]},"stage":{"stage":"Stage 1","missing":{"nextStage":"Stage 2","requirements":["Upgrades unrelated to on-chain provable bugs provide less than 30d to exit.","The Security Council's actions are not confined to on-chain provable bugs."]},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://github.com/ethereum-optimism/optimism/tree/develop/op-node)"}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":true,"description":"There are at least 5 external actors who can submit fraud proofs."},{"satisfied":true,"description":"Users are able to exit without the help of the permissioned operators."},{"satisfied":true,"description":"In case of an unwanted upgrade by actors more centralized than a Security Council, users have at least 7d to exit."},{"satisfied":true,"description":"The Security Council is properly set up."}]},{"stage":"Stage 2","requirements":[{"satisfied":true,"description":"Fraud proof submission is open to everyone."},{"satisfied":false,"description":"Upgrades unrelated to on-chain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to on-chain provable bugs."}]}]},"permissions":[{"name":"Sequencer","accounts":[{"address":"0x6887246668a3b87F54DeB3b94Ba47a6f63F32985","type":"EOA"}],"description":"Central actor allowed to submit transaction batches to L1."},{"name":"SuperchainProxyAdmin","accounts":[{"address":"0x543bA4AADBAb8f9025686Bd03993043599c6fB04","type":"Contract"}],"chain":"ethereum","description":"Admin of OptimismPortal, L1StandardBridge, L1ERC721Bridge, OptimismMintableERC20Factory, SuperchainConfig, DelayedWETH, DisputeGameFactory, AnchorStateRegistry and SystemConfig contracts."},{"name":"SuperchainProxyAdminOwner","description":"This is a Gnosis Safe with 2 / 2 threshold.  Owner of the SuperchainProxyAdmin. It can upgrade the bridge implementation potentially gaining access to all funds, and change any system component. It also controls the L2ProxyAdmin, meaning it can upgrade L2 system components.","accounts":[{"address":"0x5a0Aae59D09fccBdDb6C6CcEB07B7279367C3d2A","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x847B5c174615B1B7fDF770882256e2D3E95b9D92","type":"MultiSig"},{"address":"0xc2819DC788505Aac350142A7A707BF9D03E3Bd03","type":"MultiSig"}]},{"name":"GuardianMultisig","description":"This is a Gnosis Safe with 1 / 1 threshold. It uses the following modules: DeputyGuardianModule (allows the FoundationMultisig_2, called the deputy guardian, to act on behalf of the Gnosis Safe). Address allowed to pause withdrawals or blacklist dispute games in case of an emergency. It is controlled by the Security Council multisig, but a module allows the Foundation to act through it. The Security Council can disable the module if the Foundation acts maliciously.","accounts":[{"address":"0x09f7150D8c019BeF34450d6920f6B3608ceFdAf2","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xc2819DC788505Aac350142A7A707BF9D03E3Bd03","type":"MultiSig"}]},{"name":"FoundationMultisig_1","description":"This is a Gnosis Safe with 5 / 7 threshold.  Member of the SuperchainProxyAdminOwner.","accounts":[{"address":"0x847B5c174615B1B7fDF770882256e2D3E95b9D92","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64","type":"MultiSig"},{"address":"0x3041BA32f451F5850c147805F5521AC206421623","type":"EOA"},{"address":"0xE7dEA1306D9F829bA469d1904c50903b46ebd02e","type":"EOA"},{"address":"0xBF93D4d727F7Ba1F753E1124C3e532dCb04Ea2c8","type":"EOA"},{"address":"0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15","type":"EOA"},{"address":"0x7cB07FE039a92B3D784f284D919503A381BEC54f","type":"EOA"},{"address":"0x9bbFB9919062C29a5eE15aCD93c9D7c3b14d31aa","type":"EOA"}]},{"name":"SecurityCouncilMultisig","description":"This is a Gnosis Safe with 10 / 13 threshold. It uses the following modules: LivenessModule (used to remove members inactive for 98d while making sure that the threshold remains above 75%. If the number of members falls below 8, the FoundationMultisig_1 takes ownership of the multisig). Member of the SuperchainProxyAdminOwner. It implements a LivenessModule used to remove inactive (98d) members while making sure that the threshold remains above 75%. If the number of members falls below 8, the Foundation takes ownership of the Security Council.","accounts":[{"address":"0xc2819DC788505Aac350142A7A707BF9D03E3Bd03","type":"MultiSig"}],"chain":"ethereum","references":[{"text":"Security Council members - Optimism Collective forum","href":"https://gov.optimism.io/t/security-council-vote-2-initial-member-ratification/7118"}],"participants":[{"address":"0x07dC0893cAfbF810e3E72505041f2865726Fd073","type":"EOA"},{"address":"0x0a122d8aA40758FBAFf0360BFB391EdFfD9758b8","type":"EOA"},{"address":"0x1822b35B09f5ce1C78ecbC06AC0A4e17885b925e","type":"EOA"},{"address":"0x4A7322258c9E690e4CB8Cea6e5251443E956e61E","type":"EOA"},{"address":"0x51aCb8e1205De850D1b512584FeE9C29C3813dDa","type":"EOA"},{"address":"0x5C0F529d5B025540c54f71d2BcbB4c78F368C47e","type":"EOA"},{"address":"0x6323ef2b80030f3fBc508bFc321Fc71fDB95c865","type":"EOA"},{"address":"0x74FAE9a9fbe31d1F69b95f59CaF12736a8b6B310","type":"EOA"},{"address":"0x7ed8d9Af9eaA194D1A75C67c1475579E42289E39","type":"EOA"},{"address":"0x8Afe777B5A4D1e156435ab44Ad4b73A318cE0EA4","type":"EOA"},{"address":"0x9Eb11A55132c851b9991F148b3Af791ca498fD7A","type":"EOA"},{"address":"0xbfA046B0bc5cEa1596be62B8b3f79f9f41f1E0d9","type":"EOA"},{"address":"0xE895076cD050F1f042d1040E47b5929bE989E514","type":"EOA"}]},{"name":"FoundationMultisig_2","description":"This is a Gnosis Safe with 5 / 7 threshold.  This address is the owner of the following contracts: SystemConfig.","accounts":[{"address":"0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64","type":"MultiSig"},{"address":"0x3041BA32f451F5850c147805F5521AC206421623","type":"EOA"},{"address":"0xE7dEA1306D9F829bA469d1904c50903b46ebd02e","type":"EOA"},{"address":"0xBF93D4d727F7Ba1F753E1124C3e532dCb04Ea2c8","type":"EOA"},{"address":"0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15","type":"EOA"},{"address":"0x7cB07FE039a92B3D784f284D919503A381BEC54f","type":"EOA"},{"address":"0x9bbFB9919062C29a5eE15aCD93c9D7c3b14d31aa","type":"EOA"}]},{"name":"FeesCollector","accounts":[{"address":"0xa3d596EAfaB6B13Ab18D40FaE1A962700C84ADEa","type":"Contract"}],"chain":"ethereum","description":"Address collecting sequencer, base and L1 fees from L2."}],"nativePermissions":{"optimism":[{"name":"L2ProxyAdmin","accounts":[{"address":"0x4200000000000000000000000000000000000018","type":"Contract"}],"chain":"optimism","description":"Admin of L2CrossDomainMessenger, GasPriceOracle, L2StandardBridge, SequencerFeeVault, OptimismMintableERC20Factory, L1BlockNumber, L2ERC721Bridge, L1Block, L1ToL2MessagePasser, OptimismMintableERC721Factory, BaseFeeVault, L1FeeVault, SchemaRegistry and EAS contracts."},{"name":"L2ProxyAdminOwner","chain":"optimism","description":"Owner of the L2ProxyAdmin. It can update the L2 bridge implementation potentially gaining access to all funds, and change any L2 system component. Assigned as the (aliased) L1 ProxyAdminOwner, meaning that upgrades has to be done through the L1 -> L2 bridge.","accounts":[{"address":"0x6B1BAE59D09fCcbdDB6C6cceb07B7279367C4E3b","type":"EOA"}]},{"name":"MintManagerOwner","description":"This is a Gnosis Safe with 3 / 5 threshold.  Owner of the MintManager. It can change the OP token owner to a different MintManager and therefore change the inflation policy.","accounts":[{"address":"0x2A82Ae142b2e62Cb7D10b55E323ACB1Cab663a26","type":"MultiSig"}],"chain":"optimism","participants":[{"address":"0x3041BA32f451F5850c147805F5521AC206421623","type":"EOA"},{"address":"0x7cB07FE039a92B3D784f284D919503A381BEC54f","type":"EOA"},{"address":"0xdb203D7f00fF435dA107543B33495f9cA2c484C6","type":"EOA"},{"address":"0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15","type":"EOA"},{"address":"0xA902A27a7631D502E3Ec17fc5d4c3e0861752c94","type":"EOA"}]}]},"contracts":{"addresses":[{"name":"OptimismPortal","address":"0xbEb5Fc579115071764c7423A4f12eDde41f106Ed","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0xe2F826324b2faf99E513D16D266c3F80aE87832B"]},"chain":"ethereum","description":"The OptimismPortal contract is the main entry point to deposit funds from L1 to L2. It also allows to prove and finalize withdrawals. It specifies which game type can be used for withdrawals. The current game type is FaultDisputeGame.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1CrossDomainMessenger","address":"0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1","upgradeability":{"proxyType":"resolved delegate proxy","admins":[],"implementations":["0xD3494713A5cfaD3F5359379DfA074E2Ac8C6Fd65"],"immutable":false},"chain":"ethereum","description":"The L1CrossDomainMessenger (L1xDM) contract sends messages from L1 to L2, and relays messages from L2 onto L1. In the event that a message sent from L1 to L2 is rejected for exceeding the L2 epoch gas limit, it can be resubmitted via this contract’s replay function.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1StandardBridge","address":"0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0x64B5a5Ed26DCb17370Ff4d33a8D503f0fbD06CfF"]},"chain":"ethereum","description":"The L1StandardBridge contract is the main entry point to deposit ERC20 tokens from L1 to L2. This contract can store any token.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1ERC721Bridge","address":"0x5a7749f83b81B301cAb5f48EB8516B986DAef23D","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0xAE2AF01232a6c4a4d3012C5eC5b1b35059caF10d"]},"chain":"ethereum","description":"The L1ERC721Bridge contract is used to bridge ERC-721 tokens from L1 to L2.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"SystemConfig","address":"0x229047fed2591dbec1eF1118d64F7aF3dB9EB290","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0xF56D96B2535B932656d3c04Ebf51baBff241D886"]},"chain":"ethereum","description":"It contains configuration parameters such as the Sequencer address, the L2 gas limit and the unsafe block signer address.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"DisputeGameFactory","address":"0xe5965Ab5962eDc7477C8520243A95517CD252fA9","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0xc641A33cab81C559F2bd4b21EA34C290E2440C2B"]},"chain":"ethereum","description":"The dispute game factory allows the creation of dispute games, used to propose state roots and eventually challenge them.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"FaultDisputeGame","address":"0xA6f3DFdbf4855a43c529bc42EDE96797252879af","chain":"ethereum","description":"Logic of the dispute game. When a state root is proposed, a dispute game contract is deployed. Challengers can use such contracts to challenge the proposed state root."},{"name":"PermissionedDisputeGame","address":"0x050ed6F6273c7D836a111E42153BC00D0380b87d","chain":"ethereum","description":"Same as FaultDisputeGame, but only two permissioned addresses are designated as proposer and challenger."},{"name":"MIPS","address":"0x16e83cE5Ce29BF90AD9Da06D2fE6a15d5f344ce4","chain":"ethereum","description":"The MIPS contract is used to execute the final step of the dispute game which objectively determines the winner of the dispute."},{"name":"AnchorStateRegistry","address":"0x18DAc71c228D1C32c99489B7323d441E1175e443","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0x1B5CC028A4276597C607907F24E1AC05d3852cFC"]},"chain":"ethereum","description":"Contains the latest confirmed state root that can be used as a starting point in a dispute game.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"PreimageOracle","address":"0x9c065e11870B891D214Bc2Da7EF1f9DDFA1BE277","chain":"ethereum","description":"The PreimageOracle contract is used to load the required data from L1 for a dispute game."},{"name":"DelayedWETH_PermissionlessGames","address":"0x82511d494B5C942BE57498a70Fdd7184Ee33B975","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0x71e966Ae981d1ce531a7b6d23DC0f27B38409087"]},"chain":"ethereum","description":"Contract designed to hold the bonded ETH for each permissionless dispute game. It is designed as a wrapper around WETH to allow an owner to function as a backstop if a game would incorrectly distribute funds. It is owned by the SuperchainProxyAdminOwner multisig.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"DelayedWETH_PermissionedGames","address":"0x9F9b897e37de5052cD70Db6D08474550DDb07f39","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0x71e966Ae981d1ce531a7b6d23DC0f27B38409087"]},"chain":"ethereum","description":"Contract designed to hold the bonded ETH for each permissioned dispute game. It is designed as a wrapper around WETH to allow an owner to function as a backstop if a game would incorrectly distribute funds. It is owned by the SuperchainProxyAdminOwner multisig.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"SuperchainConfig","address":"0x95703e0982140D16f8ebA6d158FccEde42f04a4C","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x543bA4AADBAb8f9025686Bd03993043599c6fB04"],"implementations":["0x53c165169401764778F780a69701385eb0FF19B7"]},"chain":"ethereum","description":"The SuperchainConfig contract is used to manage global configuration values for multiple OP Chains within a single Superchain network. The SuperchainConfig contract manages the `PAUSED_SLOT`, a boolean value indicating whether the Superchain is paused, and `GUARDIAN_SLOT`, the address of the guardian which can pause and unpause the system.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"DeputyGuardianModule","address":"0xc6901F65369FC59fC1B4D6D6bE7A2318Ff38dB5B","chain":"ethereum","description":"The DeputyGuardianModule is a Gnosis Safe module that allows the OP Foundation to act through the GuardianMultisig, which is owned by the Security Council. It is used to pause withdrawals in case of an emergency, blacklist games, disable the proof system, and update the anchor state. The Security Council can disable the module if the Foundation acts maliciously.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"},{"name":"LivenessModule","address":"0x0454092516c9A4d636d3CAfA1e82161376C8a748","chain":"ethereum","description":"The LivenessModule is a Gnosis Safe nodule used to remove Security Council members that have been inactive for 98d while making sure that the threshold remains above 75%. If the number of members falls below 8, the FoundationMultisig_1 takes ownership of the multisig.","upgradableBy":["SuperchainProxyAdmin"],"upgradeDelay":"No delay"}],"nativeAddresses":{"optimism":[{"name":"OPToken","address":"0x4200000000000000000000000000000000000042","chain":"optimism","description":"The OP token contract. It is owned by the MintManager and can inflate the token supply by 2% annually."},{"name":"MintManager","address":"0x5C4e7Ba1E219E47948e6e3F55019A647bA501005","chain":"optimism","description":"Controls the OP inflation rate, which is currently hardcoded to 2% annually. It is controlled by the MintManagerOwner multisig, which can also change the OP token owner and therefore the inflation rate."},{"name":"L2CrossDomainMessenger","address":"0x4200000000000000000000000000000000000007","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xC0d3c0d3c0D3c0D3C0d3C0D3C0D3c0d3c0d30007"]},"chain":"optimism","description":"The L2CrossDomainMessenger (L2xDM) contract sends messages from L2 to L1, and relays messages from L1 onto L2 with a system tx. In the event that a message sent from L2 to L1 is rejected for exceeding the L1 gas limit, it can be resubmitted via this contract’s replay function.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"GasPriceOracle","address":"0x420000000000000000000000000000000000000F","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xa919894851548179A0750865e7974DA599C0Fac7"]},"chain":"optimism","description":"Contracts that provide L1 and L2 gas price information, which is derived permissionlessly from the L1 chain.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L2StandardBridge","address":"0x4200000000000000000000000000000000000010","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xC0d3c0d3c0D3c0d3C0D3c0D3C0d3C0D3C0D30010"]},"chain":"optimism","description":"The L2StandardBridge contract is the main entry point to deposit or withdraw ERC20 tokens from L2 to L1. This contract can store any token.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"OptimismMintableERC20Factory","address":"0x4200000000000000000000000000000000000012","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xc0D3c0d3C0d3c0d3c0D3c0d3c0D3c0D3c0D30012"]},"chain":"optimism","description":"Factory contract to create bridge compliant ERC20 IOU token representations of bridged L1 ERC20 tokens.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"OptimismMintableERC721Factory","address":"0x4200000000000000000000000000000000000017","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xc0d3C0d3C0d3C0d3C0d3c0d3C0D3C0d3C0D30017"]},"chain":"optimism","description":"Factory contract to create bridge compliant ERC721 IOU token representations of bridged L1 ERC721 tokens.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1BlockNumber","address":"0x4200000000000000000000000000000000000013","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xC0D3C0d3C0D3c0D3C0d3c0D3C0d3c0d3C0d30013"]},"chain":"optimism","description":"Simple contract that returns the latest L1 block number.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L2ERC721Bridge","address":"0x4200000000000000000000000000000000000014","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xC0D3c0d3c0d3c0d3c0D3C0d3C0D3C0D3c0d30014"]},"chain":"optimism","description":"The L2ERC721Bridge contract is the main entry point to deposit or withdraw ERC721 tokens from L2 to L1. This contract can store any token.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1Block","address":"0x4200000000000000000000000000000000000015","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0x07dbe8500fc591d1852B76feE44d5a05e13097Ff"]},"chain":"optimism","description":"Simple contract that returns information about the latest L1 block, which is derived permissionlessly from the L1 chain.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L2ToL1MessagePasser","address":"0x4200000000000000000000000000000000000016","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xC0D3C0d3C0d3c0d3C0d3C0D3c0D3c0d3c0D30016"]},"chain":"optimism","description":"Contract used internally by the L2CrossDomainMessenger to send messages to L1, including withdrawals. It can also be used directly as a low-level interface.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"BaseFeeVault","address":"0x4200000000000000000000000000000000000019","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xC0d3c0D3c0d3C0D3C0D3C0d3c0D3C0D3c0d30019"]},"chain":"optimism","description":"Contract collecting base fees, which are withdrawable to the FeesCollector on L1.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1FeeVault","address":"0x420000000000000000000000000000000000001A","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xc0D3c0D3C0d3c0d3c0d3C0d3c0d3C0d3C0D3001A"]},"chain":"optimism","description":"Contract collecting L1 fees, which are withdrawable to the FeesCollector on L1.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"SequencerFeeVault","address":"0x4200000000000000000000000000000000000011","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0xC0D3C0d3c0d3c0d3C0D3c0d3C0D3c0d3c0D30011"]},"chain":"optimism","description":"Contract collecting sequencer fees, which are withdrawable to the FeesCollector on L1.","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"SchemaRegistry","address":"0x4200000000000000000000000000000000000020","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0x6232208d66bAc2305b46b4Cb6BCB3857B298DF13"]},"chain":"optimism","description":"Contracts to register schemas for the Ethereum Attestation Service (EAS).","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"EAS","address":"0x4200000000000000000000000000000000000021","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x4200000000000000000000000000000000000018"],"implementations":["0x4E0275Ea5a89e7a3c1B58411379D1a0eDdc5b088"]},"chain":"optimism","description":"Contract containing the main logic for the Ethereum Attestation Service (EAS).","upgradableBy":["L2ProxyAdmin"],"upgradeDelay":"No delay"}]},"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. Both regular and emergency upgrades must be approved by both the Security Council and the Foundation. There is no delay on regular upgrades."}]},"upgradesAndGovernance":"All contracts are upgradable by the `SuperchainProxyAdmin` which is controlled by a 2/2 multisig composed by the Optimism Foundation and a Security Council. The Guardian role is assigned to the Security Council multisig, with a Safe Module that allows the Foundation to act through it to stop withdrawals in the whole Superchain, blacklist dispute games, or deactivate the fault proof system entirely in case of emergencies. The Security Council can remove the module if the Foundation becomes malicious. The single Sequencer actor can be modified by the `FoundationMultisig_2` via the `SystemConfig` contract. The SuperchainProxyAdminOwner can recover dispute bonds in case of bugs that would distribute them incorrectly. \n\nAt the moment, for regular upgrades, the DAO signals its intent by voting on upgrade proposals, but has no direct control over the upgrade process.","milestones":[{"name":"Fallback to permissioned proposals for 26 days.","link":"https://x.com/Optimism/status/1824560759747256596","date":"2024-08-16T00:00:00Z","description":"OP Mainnet preventively disables the fraud proof system due to a bug for 26 days.","type":"incident"},{"name":"OP Mainnet becomes Stage 1","link":"https://x.com/Optimism/status/1800256837088145799","date":"2024-06-10T00:00:00Z","description":"OP Mainnet introduces fraud proofs and updates permissions.","type":"general"},{"name":"OP Mainnet starts using blobs","link":"https://twitter.com/Optimism/status/1768235284494450922","date":"2024-03-14T00:00:00Z","description":"OP Mainnet starts publishing data to blobs.","type":"general"},{"name":"Network Upgrade #5: Ecotone","link":"https://vote.optimism.io/proposals/95119698597711750186734377984697814101707190887694311194110013874163880701970","date":"2024-03-14T00:00:00Z","description":"Optimism adopts EIP-4844.","type":"general"},{"name":"Fault Proof System is live on OP Goerli","link":"https://blog.oplabs.co/op-stack-fault-proof-alpha/","date":"2023-10-03T00:00:00Z","description":"Fraud Proof system is live on Goerli.","type":"general"},{"name":"Mainnet migration to Bedrock","link":"https://oplabs.notion.site/Bedrock-Mission-Control-EXTERNAL-fca344b1f799447cb1bcf3aae62157c5","date":"2023-06-06T00:00:00Z","description":"OP Mainnet, since Jun 2023 is running Bedrock.","type":"general"},{"name":"OP Stack Introduced","link":"https://optimism.mirror.xyz/fLk5UGjZDiXFuvQh6R_HscMQuuY9ABYNF7PI76-qJYs","date":"2022-10-17T00:00:00Z","description":"OP Stack, modular, open-sourced blueprint on how to build scalable blockchains.","type":"general"},{"name":"Mainnet for everyone","description":"Whitelist got removed, there are no restrictions on who can transact with the network.","link":"https://medium.com/ethereum-optimism/all-gas-no-brakes-8b0f32afd466","date":"2021-12-16T00:00:00Z","type":"general"},{"name":"OP token airdrop","link":"https://optimism.mirror.xyz/qvd0WfuLKnePm1Gxb9dpGchPf5uDz5NSMEFdgirDS4c","date":"2022-05-31T00:00:00Z","description":"The first round of OP token airdrop.","type":"general"},{"name":"Optimism removes OVM fraud proofs","link":"https://twitter.com/optimismfnd/status/1458953238867165192?s=21&t=cQ0NPREYt-u1rP7OiPFKUg","date":"2021-11-12T00:00:00Z","description":"Network upgrade to OVM 2.0 and removal of fraud-proof system.","type":"incident"},{"name":"Mainnet Soft Launch","link":"https://medium.com/ethereum-optimism/mainnet-soft-launch-7cacc0143cd5","date":"2021-01-16T00:00:00Z","description":"Only selected contracts like Synthetix and Uniswap are available.","type":"general"},{"name":"Community Launch","link":"https://medium.com/ethereum-optimism/community-launch-7c9a2a9d3e84","date":"2021-08-19T00:00:00Z","description":"All smart contracts allowed after prior approval.","type":"general"}],"knowledgeNuggets":[{"title":"The Optimistic Vision","url":"https://www.optimism.io/vision","thumbnail":"optimism-vision.png"}]}