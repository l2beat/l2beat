{"type":"layer2","badges":["EVM","DAC","PolygonCDK"],"id":"zkfair","display":{"name":"ZKFair","slug":"zkfair","warning":"The forced transaction mechanism is currently disabled. The project claims to use CelestiaDA but smart contracts on L1 use DAC. Arbitrary messaging passing is removed from the bridge.","description":"ZKFair is a Validium based on Polygon CDK and Celestia DA.","purposes":["Universal"],"category":"Validium","provider":"Polygon","links":{"websites":["https://zkfair.io/"],"apps":["https://wallet.zkfair.io/"],"documentation":["https://docs.zkfair.io/"],"explorers":["https://scan.zkfair.io/"],"repositories":["https://github.com/ZKFair"],"socialMedia":["https://twitter.com/ZKFCommunity"]},"activityDataSource":"Blockchain RPC"},"config":{"escrows":[{"address":"0x9cb4706e20A18E59a48ffa7616d700A3891e1861","newVersion":true,"sinceTimestamp":1702879283,"tokens":"*","contract":{"address":"0x9cb4706e20A18E59a48ffa7616d700A3891e1861","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3"],"implementations":["0xEb80283EBc508CF6AaC5E054118954a2BD7fA006"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true}],"associatedTokens":["ZKF"],"transactionApi":{"type":"rpc","defaultUrl":"https://rpc.zkfair.io","defaultCallsPerMinute":1500,"startBlock":1}},"chainConfig":{"name":"zkfair","chainId":42766,"explorerUrl":"https://scan.zkfair.io/","explorerApi":{"url":"https://scan.zkfair.io/api/","type":"blockscout"},"minTimestampForTvl":1703016000,"multicallContracts":[{"sinceBlock":6330383,"batchSize":150,"address":"0xcA11bde05977b3631167028862bE2a173976CA11","version":"3"}],"coingeckoPlatform":"zkfair"},"dataAvailability":{"layer":{"value":"DAC","sentiment":"warning","description":"The data is posted off chain and a Data Availability Committee (DAC) is responsible for protecting and supplying it."},"bridge":{"value":"3/5 DAC Members","sentiment":"bad","description":"There is a threshold of 3/5 members that must sign and attest that the data is correct and available."},"mode":"State diffs"},"riskView":{"stateValidation":{"value":"ZK proofs (SN)","description":"SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup.","sentiment":"good","definingMetric":null,"sources":[{"contract":"ZKFairValidium","references":["https://etherscan.io/address/0x668965757127549f8755D2eEd10494B06420213b#code#F8#L820"]}]},"dataAvailability":{"value":"External (DAC)","description":"Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 3/5 that is tasked with protecting and supplying the data.","sentiment":"bad","definingMetric":0.6,"sources":[{"contract":"ZKFairValidium","references":["https://etherscan.io/address/0x668965757127549f8755D2eEd10494B06420213b#code#F8#L587"]}]},"exitWindow":{"value":"None","description":"Even though there is a 1d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d.","sentiment":"bad","definingMetric":-1209600,"warning":{"value":"The ZkFair Owner can upgrade with no delay.","sentiment":"bad"}},"sequencerFailure":{"value":"No mechanism","description":"There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled.","sentiment":"bad","sources":[{"contract":"ZKFairValidium","references":["https://etherscan.io/address/0x668965757127549f8755D2eEd10494B06420213b#code#F8#L247"]}]},"proposerFailure":{"value":"Self propose","description":"If the Proposer fails, users can leverage the source available prover to submit proofs to the L1 bridge. There is a 5d delay for proving and a 5d delay for finalizing state proven in this way. These delays can only be lowered except during the emergency state.","sentiment":"good","sources":[{"contract":"ZKFairValidium","references":["https://etherscan.io/address/0x668965757127549f8755D2eEd10494B06420213b#code#F8#L639","https://etherscan.io/address/0x668965757127549f8755D2eEd10494B06420213b#code#F8#L862"]}]},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"}},"stage":{"stage":"NotApplicable"},"technology":{"stateCorrectness":{"name":"Validity proofs ensure state correctness","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","risks":[],"references":[{"text":"ZKFairValidium.sol#L758 - Etherscan source code, _verifyAndRewardBatches function","href":"https://etherscan.io/address/0x668965757127549f8755D2eEd10494B06420213b#code#F8#L758"}]},"dataAvailability":{"name":"Data is not stored on chain","description":"The transaction data is not recorded on the Ethereum main chain.","risks":[{"category":"Funds can be lost if","text":"the external data becomes unavailable.","isCritical":true}],"references":[{"text":"ZKFairValidium.sol#L494 - Etherscan source code, sequencedBatches mapping","href":"https://etherscan.io/address/0x668965757127549f8755D2eEd10494B06420213b#code#F8#L494"}]},"operator":{"name":"The system has a centralized sequencer","description":"Only a trusted sequencer is allowed to submit transaction batches. A mechanism for users to submit their own batches is currently disabled.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."},{"category":"Funds can be frozen if","text":"the sequencer refuses to include an exit transaction.","isCritical":true}],"references":[{"text":"ZKFairValidium.sol#L61 - Etherscan source code, onlyTrustedSequencer modifier","href":"https://etherscan.io/address/0x668965757127549f8755D2eEd10494B06420213b#code#F8#L461"}]},"forceTransactions":{"name":"Users can't force any transaction","description":"The mechanism for allowing users to submit their own transactions is currently disabled.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions."}],"references":[{"text":"ZKFairValidium.sol#L475 - Etherscan source code, isForceBatchAllowed modifier","href":"https://etherscan.io/address/0x668965757127549f8755D2eEd10494B06420213b#code#F8#L475"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is proven the funds become available for withdrawal on L1. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[],"references":[{"text":"PolygonZkEvmBridge.sol#L311 - Etherscan source code, claimAsset function","href":"https://etherscan.io/address/0xEb80283EBc508CF6AaC5E054118954a2BD7fA006#code#F19#L315"}]}]},"permissions":[{"name":"ZKFairAdmin","description":"This is a Gnosis Safe with 3 / 4 threshold.  Admin of the ZKFairValidium, can set core system parameters like timeouts, sequencer and aggregator as well as deactivate emergency state. They can also upgrade the ZKFairValidium contracts, but are restricted by a 10d delay unless rollup is put in the Emergency State.","accounts":[{"address":"0xcd14BE1959928BB8c160D11817E2BE2129e2F25F","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x4Ea1f0f05E7484Ee85a97303DC88c2dF4288df3e","type":"EOA"},{"address":"0x44fb52EB2bdDAf1c8b6D441e0b5DCa123A345292","type":"EOA"},{"address":"0x689752C198f0cEbe9993ee3E13AF0e565C068c25","type":"EOA"},{"address":"0xa57c2B747193fe3F9CC8bea89103B7d76B8A0c70","type":"EOA"}]},{"name":"Sequencer","accounts":[{"address":"0x9eed06d1566F0cAfdA3df624E2376864cA84Db6c","type":"EOA"}],"description":"Its sole purpose and ability is to submit transaction batches. In case they are unavailable users cannot rely on the force batch mechanism because it is currently disabled."},{"name":"Proposer","accounts":[{"address":"0xd6888c41EeAcc94f4A1CEe7A99E1557aa41FA027","type":"EOA"}],"description":"The trusted proposer (called Aggregator) provides the ZKFairValidium contract with ZK proofs of the new system state. In case they are unavailable a mechanism for users to submit proofs on their own exists, but is behind a 5d delay for proving and a 5d delay for finalizing state proven in this way. These delays can only be lowered except during the emergency state."},{"name":"ZKFairOwner","description":"This is a Gnosis Safe with 3 / 4 threshold.  The ZkFair Owner is a multisig that can be used to trigger the emergency state which pauses bridge functionality, restricts advancing system state and removes the upgradeability delay.","accounts":[{"address":"0x8933Fa0A97f39cd38f56b1887d5cc56cF04F3A88","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x9fAe81C21be8D1Ad91c3617A7b0140dfe0DCe6C7","type":"EOA"},{"address":"0x540C913ad8b197152EB041bC56f9c6Ab314D25Ba","type":"EOA"},{"address":"0xcf6226d0264496abB69eF8BC1DF366c9E00f5b87","type":"EOA"},{"address":"0x4B7f09f4D658638d81Bb2023674B80a9Dd7e9976","type":"EOA"}]},{"name":"BridgeAdminMultiSig","description":"This is a Gnosis Safe with 3 / 4 threshold.  The Bridge Admin is a multisig that can be used to set bridge fees and an address into which fees are transferred.","accounts":[{"address":"0x0110B1B231aA3b96a94c900eb3056297526AB725","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x39FcAEb9870cB015f2165e93c51f4663AE970953","type":"EOA"},{"address":"0x3226ECf79dc7007063599A334832d015B48aBDBc","type":"EOA"},{"address":"0x4dba6F06597Ea29A330C06806FA284610c810295","type":"EOA"},{"address":"0xe1229a2716D19eC9aF74017418Fc9E165b80c7aF","type":"EOA"}]},{"name":"DAC members","accounts":[{"address":"0x033A75B6B0fc26eDf60e99c4172eB5f87E733ca2","type":"EOA"},{"address":"0x061D273bEf947BD0ef2B828526e710eEa0f297ae","type":"EOA"},{"address":"0x9231622437bD57349cC9a15CDEc5383627DEbA17","type":"EOA"},{"address":"0x9d8616545C9941138832EebC58Cb498E0ef21a13","type":"EOA"},{"address":"0xFe1da7CAd939805d4A889822357c348177a5118d","type":"EOA"}],"description":"Members of the Data Availability Committee. The setup is equivalent to a 3/5 multisig."},{"name":"DAC Owner","accounts":[{"address":"0xa57c2B747193fe3F9CC8bea89103B7d76B8A0c70","type":"EOA"}],"description":"The owner of the Data Availability Committee, can update the member set at any time."}],"contracts":{"addresses":[{"name":"ZKFairValidium","address":"0x1CbC08bf0D48b18F9f97796c61352b192d1850A5","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3"],"implementations":["0x668965757127549f8755D2eEd10494B06420213b"]},"chain":"ethereum","description":"The main contract of the Polygon CDK Validium. It defines the rules of the system including core system parameters, permissioned actors as well as emergency procedures. The emergency state can be activated either by the ZkFair Owner, by proving a soundness error or by presenting a sequenced batch that has not been aggregated before a 7d timeout. This contract receives transaction roots, L2 state roots as well as ZK proofs. It also holds the address of ZKFairValidiumDAC.","upgradableBy":["ZKFairAdmin"],"upgradeDelay":"None","upgradeConsiderations":"Even though there is a 1d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d."},{"name":"Bridge","address":"0x9cb4706e20A18E59a48ffa7616d700A3891e1861","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3"],"implementations":["0xEb80283EBc508CF6AaC5E054118954a2BD7fA006"]},"chain":"ethereum","description":"The escrow contract for user funds. It is mirrored on the L2 side and can be used to transfer ERC20 assets. To transfer funds a user initiated transaction on both sides is required.","upgradableBy":["ZKFairAdmin"],"upgradeDelay":"None","upgradeConsiderations":"Even though there is a 1d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d."},{"name":"GlobalExitRoot","address":"0x72abD6416Ea2d99ad30C86B90e7409Dc2d1ba40b","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3"],"implementations":["0xC4CD3D0b31904969a397A98AcE8bDF2A94ba8615"]},"chain":"ethereum","description":"Synchronizes deposit and withdraw merkle trees across L1 and L2. The global root from this contract is injected into the L2 contract.","upgradableBy":["ZKFairAdmin"],"upgradeDelay":"None","upgradeConsiderations":"Even though there is a 1d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d."},{"name":"FflonkVerifier","address":"0x769E285d2120472c3400A09684B82A842012F46d","chain":"ethereum","description":"An autogenerated contract that verifies ZK proofs in the ZKFairValidium system."},{"name":"ZKFairValidiumDAC","address":"0x997CfB0838544f68E59f877EDc905001456F125b","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3"],"implementations":["0x63150fA72c1c9fF8Fe4438f8355927D3415b0FDc"]},"chain":"ethereum","description":"Committee attesting that data for a given dataRoot has been published. The DAC Owner can update the member set at any time.","upgradableBy":["ZKFairAdmin"],"upgradeDelay":"None","upgradeConsiderations":"Even though there is a 1d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d."}],"references":[{"text":"State injections - stateRoot and exitRoot are part of the validity proof input.","href":"https://etherscan.io/address/0x668965757127549f8755D2eEd10494B06420213b#code#F8#L809"}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is a 1d delay on code upgrades."}]},"milestones":[{"name":"ZKFair Mainnet is Live","link":"https://twitter.com/ZKFCommunity/status/1737307444181869017","date":"2023-12-20T00:00:00Z","description":"ZKFair launched.","type":"general"}]}