{"type":"layer2","id":"scroll","badges":["EVM","EthereumBlobs"],"display":{"name":"Scroll","slug":"scroll","description":"Scroll is ZK Rollup that extends Ethereumâ€™s capabilities through ZK tech and EVM compatibility.","purposes":["Universal"],"category":"ZK Rollup","links":{"websites":["https://scroll.io"],"apps":["https://scroll.io/bridge"],"documentation":["https://docs.scroll.io/en/home/"],"explorers":["https://scrollscan.com/","https://ondora.xyz/network/scroll","https://scroll.l2scan.co/","https://okx.com/web3/explorer/scroll","https://scroll.nftscan.com/"],"repositories":["https://github.com/scroll-tech/scroll","https://github.com/scroll-tech/scroll-prover","https://github.com/scroll-tech/zkevm-circuits","https://github.com/scroll-tech/zkevm-specs","https://github.com/scroll-tech/scroll-zkevm","https://github.com/scroll-tech/go-ethereum","https://github.com/scroll-tech/frontends","https://github.com/scroll-tech/scroll-contract-deploy-demo","https://github.com/scroll-tech"],"socialMedia":["https://discord.gg/scroll","https://twitter.com/Scroll_ZKP","https://youtube.com/@Scroll_ZKP"],"rollupCodes":"https://rollup.codes/scroll"},"activityDataSource":"Blockchain RPC","liveness":{"warnings":{"batchSubmissions":"Transaction data batches that have not yet been proven can be reverted."},"explanation":"Scroll is a ZK rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted on L1, but the owner can revert them if the corresponding root has not yet be confirmed."},"finality":{"warnings":{"timeToInclusion":{"sentiment":"warning","value":"Transaction data batches that have not yet been proven can be reverted."}},"finalizationPeriod":0}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring.","The Security Council is not properly set up."]},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":false,"description":"No source-available node exists that can recreate the state from L1 data."}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."},{"satisfied":false,"description":"The Security Council is not properly set up."}]},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to on-chain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to on-chain provable bugs."}]}],"message":{"type":"warning","text":"There is no available node software that can reconstruct the state from L1 data, hence there is no way to verify that this system is a rollup."}},"chainConfig":{"name":"scroll","chainId":534352,"explorerUrl":"https://scrollscan.com/","explorerApi":{"url":"https://api.scrollscan.com/api","type":"etherscan"},"minTimestampForTvl":1696917600,"multicallContracts":[{"address":"0xcA11bde05977b3631167028862bE2a173976CA11","batchSize":150,"sinceBlock":14,"version":"3"}],"coingeckoPlatform":"scroll"},"config":{"escrows":[{"address":"0xD8A791fE2bE73eb6E6cF1eb0cb3F36adC9B3F8f9","newVersion":true,"sinceTimestamp":1696782323,"tokens":"*","contract":{"address":"0xD8A791fE2bE73eb6E6cF1eb0cb3F36adC9B3F8f9","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x4015Fc868C06689ABEba4a9dC8FA43B804F6239c"]},"chain":"ethereum","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true},{"address":"0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367","newVersion":true,"sinceTimestamp":1696782323,"tokens":["ETH"],"contract":{"address":"0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x72981fD00087fF4F60aBFdE9f353cB1912A37fb6"]},"chain":"ethereum","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true},{"address":"0xb2b10a289A229415a124EFDeF310C10cb004B6ff","newVersion":true,"sinceTimestamp":1696782323,"tokens":"*","contract":{"address":"0xb2b10a289A229415a124EFDeF310C10cb004B6ff","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x7F512E2E9dfC4552941D99A5b2405BBcF5781C2c"]},"chain":"ethereum","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true},{"address":"0xf1AF3b23DE0A5Ca3CAb7261cb0061C0D779A5c7B","newVersion":true,"sinceTimestamp":1696919351,"tokens":["USDC"],"contract":{"address":"0xf1AF3b23DE0A5Ca3CAb7261cb0061C0D779A5c7B","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x56ce8A8E8399f6cD5e7e4f549E8BfD673f2AfF5e"]},"chain":"ethereum","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true},{"address":"0x67260A8B73C5B77B55c1805218A42A7A6F98F515","newVersion":true,"sinceTimestamp":1696920095,"tokens":["DAI"],"contract":{"address":"0x67260A8B73C5B77B55c1805218A42A7A6F98F515","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0xBAd002fB13adFfcbCba57a4d4a43886f3F4C56cb"]},"chain":"ethereum","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true},{"address":"0x6625C6332c9F91F2D27c304E729B86db87A3f504","newVersion":true,"sinceTimestamp":1696920503,"tokens":["wstETH"],"contract":{"address":"0x6625C6332c9F91F2D27c304E729B86db87A3f504","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xCC2C53556Bc75217cf698721b29071d6f12628A9"],"implementations":["0xF4f2066EE72D62e3caF9678459149BA7FCf2262F"]},"chain":"ethereum","description":"Custom token escrow with third-party governance, using the canonical bridge only for messaging."},"chain":"ethereum","includeInTotal":true},{"address":"0xA033Ff09f2da45f0e9ae495f525363722Df42b2a","newVersion":true,"sinceTimestamp":1713173507,"tokens":["pufETH"],"contract":{"address":"0xA033Ff09f2da45f0e9ae495f525363722Df42b2a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x9eBf2f33526CD571f8b2ad312492cb650870CFd6"],"implementations":["0x08D77Ea90DB9BF6c0d3f66E6b8394DA2E81B9a03"]},"chain":"ethereum","description":"Custom token escrow with third-party governance, using the canonical bridge only for messaging."},"chain":"ethereum","includeInTotal":true}],"transactionApi":{"type":"rpc","defaultUrl":"https://rpc.scroll.io","defaultCallsPerMinute":120,"startBlock":1},"trackedTxs":[{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xa13BAF47339d63B743e7Da8741db5456DAc1E556","selector":"0x31fa742d","functionSignature":"function finalizeBatchWithProof(bytes _batchHeader,bytes32 _prevStateRoot,bytes32 _postStateRoot,bytes32 _withdrawRoot,bytes _aggrProof)","sinceTimestamp":1696782323,"untilTimestamp":1724227415}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xa13BAF47339d63B743e7Da8741db5456DAc1E556","selector":"0x00b0f4d7","functionSignature":"function finalizeBatchWithProof4844(bytes _batchHeader, bytes32 _prevStateRoot, bytes32 _postStateRoot, bytes32 _withdrawRoot, bytes _blobDataProof, bytes _aggrProof)","sinceTimestamp":1714362335}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xa13BAF47339d63B743e7Da8741db5456DAc1E556","selector":"0x4f099e3d","functionSignature":"function finalizeBundleWithProof(bytes,bytes32,bytes32,bytes)","sinceTimestamp":1724227415}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xa13BAF47339d63B743e7Da8741db5456DAc1E556","selector":"0x1325aca0","functionSignature":"function commitBatch(uint8 _version,bytes _parentBatchHeader,bytes[] _chunks,bytes _skippedL1MessageBitmap)","sinceTimestamp":1696782323,"untilTimestamp":1724227247}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xa13BAF47339d63B743e7Da8741db5456DAc1E556","selector":"0x86b053a9","functionSignature":"function commitBatchWithBlobProof(uint8,bytes,bytes[],bytes,bytes)","sinceTimestamp":1724227415}}],"liveness":{"duplicateData":{"from":"stateUpdates","to":"proofSubmissions"}},"finality":{"lag":0,"type":"Scroll","minTimestamp":1696775129,"stateUpdate":"disabled"}},"dataAvailability":{"layer":{"value":"Ethereum (blobs or calldata)","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs."},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted on chain."},"mode":"Transaction data (compressed)"},"riskView":{"stateValidation":{"value":"ZK proofs (SN)","description":"SNARKs are zero knowledge proofs that ensure state correctness, but require trusted setup.","sentiment":"good","definingMetric":null,"sources":[{"contract":"ScrollChain","references":["https://etherscan.io/address/0x9bB163401E8C72573854c4Cd968aFA7A7b02D25f#code"]}]},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","definingMetric":null,"sources":[{"contract":"ScrollChain","references":["https://etherscan.io/address/0x9bB163401E8C72573854c4Cd968aFA7A7b02D25f#code"]}]},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","definingMetric":0,"sources":[{"contract":"ScrollChain","references":["https://etherscan.io/address/0xa13BAF47339d63B743e7Da8741db5456DAc1E556#code#F1#L154"]}]},"sequencerFailure":{"value":"No mechanism","description":"There is no mechanism to have transactions be included if the sequencer is down or censoring.","sentiment":"bad","sources":[{"contract":"L1MessageQueue","references":["https://etherscan.io/address/0x137CC585F607EDeBBc3CA6360AffCFeab507B374#code"]},{"contract":"EnforcedTxGateway","references":["https://etherscan.io/address/0x642af405bF64660665B37977449C9C536B806318#code"]}]},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","definingMetric":null,"sources":[{"contract":"ScrollChain","references":["https://etherscan.io/address/0x9bB163401E8C72573854c4Cd968aFA7A7b02D25f#code"]}]},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"}},"technology":{"newCryptography":{"name":"Zero knowledge SNARK cryptography is used","description":"Despite their production use zkSNARKs are still new and experimental cryptography. Cryptography has made a lot of advancements in the recent years but all cryptographic solutions rely on time to prove their security. In addition zkSNARKs require a trusted setup to operate.","risks":[{"category":"Funds can be stolen if","text":"the cryptography is broken or implemented incorrectly."}],"references":[]},"stateCorrectness":{"name":"Validity proofs ensure state correctness","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","risks":[],"references":[{"text":"ScrollChain.sol - Etherscan source code, verifyAggregateProof() and verifyBundleProof() calls","href":"https://etherscan.io/address/0x9bB163401E8C72573854c4Cd968aFA7A7b02D25f#code"}]},"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap blobs or calldata. This ensures that it will be available for enough time.","risks":[],"references":[{"text":"ScrollChain.sol - Etherscan source code commitBatch() and commitBatchWithBlobProof() functions","href":"https://etherscan.io/address/0x9bB163401E8C72573854c4Cd968aFA7A7b02D25f#code"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"text":"ScrollChain.sol - Etherscan source code, finalizeBundleWithProof() function modifier","href":"https://etherscan.io/address/0x9bB163401E8C72573854c4Cd968aFA7A7b02D25f#code"}]},"forceTransactions":{"name":"Users can't force any transaction","description":"There is no general mechanism to force the sequencer to include the transaction.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions."}],"references":[{"text":"EnforcedTxGateway.sol - Etherscan source code","href":"https://etherscan.io/address/0x642af405bF64660665B37977449C9C536B806318#code"},{"text":"EnforcedTxGateway is paused - Etherscan proxy contract","href":"https://etherscan.io/address/0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d#readProxyContract#F7"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is proven the funds become available for withdrawal on L1. Finally the user submits an L1 transaction to claim the funds. This transaction does not require a merkle proof.","risks":[{"category":"Funds can be frozen if","text":"the operator censors withdrawal transaction."}],"references":[{"text":"L1ETHGateway.sol - Etherscan source code, finalizeWithdrawETH function","href":"https://etherscan.io/address/0x546E0bF31FB6e7babD493452e4e6999191367B42#code"}]}]},"stateDerivation":{"nodeSoftware":"The node software to reconstruct the state is available [here](https://github.com/scroll-tech/go-ethereum). Note that it uses the L2 p2p network to fetch blocks, and not the L1 network. The consistency with L1 data can be checked by running the [scroll-geth node](https://github.com/scroll-tech/go-ethereum) with the `--rollup.verify` flag.","compressionScheme":"Data batches are compressed using the [zlib](https://github.com/madler/zlib) algorithm with best compression level.","genesisState":"The genesis file can be found [here](https://scrollzkp.notion.site/genesis-json-f89ca24b123f462f98c8844d17bdbb74), which contains two prefunded addresses and five predeployed contracts.","dataFormat":"Blocks are grouped into chunks and chunks are grouped into batches. Chunk encoding format can be found [here](https://github.com/scroll-tech/scroll-contracts/blob/main/src/libraries/codec/ChunkCodecV0.sol#L5), and batch encoding format can be found [here](https://github.com/scroll-tech/scroll-contracts/blob/main/src/libraries/codec/BatchHeaderV0Codec.sol#L7)."},"stateValidation":{"description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","categories":[{"title":"Prover Architecture","description":"The prover code can be found [here](https://github.com/scroll-tech/zkevm-circuits/tree/develop/prover)."},{"title":"ZK Circuits","description":"Scroll circuits are based on the Halo2 proof system and are designed to replicate the behavior of the EVM. The source code of the base circuits can be found [here](https://github.com/scroll-tech/zkevm-circuits/tree/v0.10.5/zkevm-circuits) while the code for the aggregation circuits can be found [here](https://github.com/scroll-tech/zkevm-circuits/tree/v0.10.5/aggregator)."},{"title":"Verification Keys Generation","description":"SNARK verification keys can be generated and checked against Ethereum verifier contract using [this guide](https://github.com/scroll-tech/scroll-prover#verifier-contract). The system requires a trusted setup."}],"proofVerification":{"shortDescription":"Scroll is a ZK-EVM rollup on Ethereum.","aggregation":true,"requiredTools":[{"name":"Custom tool","version":"v0.10.3","link":"https://github.com/scroll-tech/scroll-prover/tree/v0.10.3?tab=readme-ov-file#verifier-contract"}],"verifiers":[{"name":"PlonkVerifierV0","description":"Scroll verifier using calldata for DA. Corresponds to version v0.9.5 of the circuits.","verified":"no","contractAddress":"0x4B8Aa8A96078689384DAb49691E9bA51F9d2F9E1","chainId":1,"subVerifiers":[{"name":"Aggregation circuit","proofSystem":"Halo2","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Powers of Tau 26","link":"https://github.com/scroll-tech/zkevm-circuits/tree/v0.9.5/aggregator"},{"name":"Main circuit","proofSystem":"Halo2","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Powers of Tau 26","link":"https://github.com/scroll-tech/zkevm-circuits/tree/v0.9.5/zkevm-circuits"}]},{"name":"PlonkVerifierV1","description":"Scroll verifier using blobs for DA. Corresponds to version v0.10.3 of the circuits.","verified":"no","contractAddress":"0x2293cd12e8564e8219d314b075867c2f66ac6941","chainId":1,"subVerifiers":[{"name":"Aggregation circuit","proofSystem":"Halo2","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Powers of Tau 26","link":"https://github.com/scroll-tech/zkevm-circuits/tree/v0.10.3/aggregator"},{"name":"Main circuit","proofSystem":"Halo2","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Powers of Tau 26","link":"https://github.com/scroll-tech/zkevm-circuits/tree/v0.10.3/zkevm-circuits"}]},{"name":"PlonkVerifierV1-1","description":"Scroll verifier using blobs for DA. Corresponds to version v0.11.4 of the circuits (Curie upgrade).","verified":"no","contractAddress":"0x03a72B00D036C479105fF98A1953b15d9c510110","chainId":1,"subVerifiers":[{"name":"Aggregation circuit","proofSystem":"Halo2","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Powers of Tau 26","link":"https://github.com/scroll-tech/zkevm-circuits/tree/v0.11.4/aggregator"},{"name":"Main verifier","proofSystem":"Halo2","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Powers of Tau 26","link":"https://github.com/scroll-tech/zkevm-circuits/tree/v0.11.4/zkevm-circuits"}]},{"name":"PlonkVerifierV2","description":"Scroll verifier proving bundles (group of batches). Corresponds to version v0.12.0 of the circuits (Darwin upgrade).","verified":"no","contractAddress":"0x8759E83b6570A0bA46c3CE7eB359F354F816c9a9","chainId":1,"subVerifiers":[{"name":"Aggregation circuit","proofSystem":"Halo2","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Powers of Tau 26","link":"https://github.com/scroll-tech/zkevm-circuits/tree/v0.12.0/aggregator"},{"name":"Main verifier","proofSystem":"Halo2","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Powers of Tau 26","link":"https://github.com/scroll-tech/zkevm-circuits/tree/v0.12.0/zkevm-circuits"}]},{"name":"PlonkVerifierV2-1","description":"Scroll verifier proving bundles (group of batches). Corresponds to version v0.13.0 of the circuits (Darwin v2 upgrade).","verified":"no","contractAddress":"0x8c1b52757b5c571ADcB5572E992679d4D48e30f7","chainId":1,"subVerifiers":[{"name":"Aggregation circuit","proofSystem":"Halo2","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Powers of Tau 26","link":"https://github.com/scroll-tech/zkevm-circuits/tree/v0.13.0/aggregator"},{"name":"Main verifier","proofSystem":"Halo2","mainArithmetization":"Plonkish","mainPCS":"KZG","trustedSetup":"Powers of Tau 26","link":"https://github.com/scroll-tech/zkevm-circuits/tree/v0.13.0/zkevm-circuits"}]}]}},"contracts":{"addresses":[{"name":"ScrollChain","address":"0xa13BAF47339d63B743e7Da8741db5456DAc1E556","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x9bB163401E8C72573854c4Cd968aFA7A7b02D25f"]},"chain":"ethereum","description":"The main contract of the Scroll chain. Allows to post transaction data and state roots, along with proofs. Sequencing and proposing are behind a whitelist. L1 -> L2 message processing on L2 is not enforced.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"L1ScrollMessenger","address":"0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x72981fD00087fF4F60aBFdE9f353cB1912A37fb6"]},"chain":"ethereum","description":"Contract used to send L1 -> L2 and relay messages from L2. It allows to replay failed messages and to drop skipped messages. L1 -> L2 messages sent using this contract pay for L2 gas on L1 and will have the aliased address of this contract as the sender.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"L1MessageQueue","address":"0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x137CC585F607EDeBBc3CA6360AffCFeab507B374"]},"chain":"ethereum","description":"Contains the array of queued L1 -> L2 messages, either appended using the L1ScrollMessenger or the EnforcedTxGateway. The latter contract, which would allow users to send L2 messages from L1 with their own address as the sender, is not enabled yet."},{"name":"Whitelist","address":"0x259204DDd2bA29bD9b1B9A5c9B093f73d7EAcf37","chain":"ethereum","description":"Contract implementing a generic whitelist. Currently used to define the actor that can relay the L2 basefee on L1."},{"name":"ScrollOwner","address":"0x798576400F7D662961BA15C6b3F3d813447a26a6","chain":"ethereum","description":"Owner of all contracts in the system. It implements an extension of AccessControl that manages roles and functions allowed to be called by each role."},{"name":"TimelockSlow","address":"0x1A658B88fD0a3c82fa1a0609fCDbD32e7dd4aB9C","chain":"ethereum","description":"14d timelock. Admin of the ScrollOwner contract, meaning it can assign and revoke roles. The ScrollMultisig can propose and cancel transactions, and the ExecutorMultisig can execute them."},{"name":"TimelockMid","address":"0xDC1d1189Da69Ae2016E4976A43De20972D349B1b","chain":"ethereum","description":"7d timelock. Can manage the USDC gateway bridge. The ScrollMultisig can propose and cancel transactions, and the ExecutorMultisig can execute them."},{"name":"TimelockFast","address":"0x0e58939204eEDa84F796FBc86840A50af10eC4F4","chain":"ethereum","description":"1d timelock. Can add new sequencers and provers, update the gas oracle and permissions to update its values, the max gas limit, and gateways token mappings. The ScrollMultisig can propose and cancel transactions, and the ExecutorMultisig can execute them."},{"name":"MultipleVersionRollupVerifier","address":"0x4CEA3E866e7c57fD75CB0CA3E9F5f1151D4Ead3F","chain":"ethereum","description":"Contract used to update the verifier and keep track of current and old versions."},{"name":"ZkEvmVerifierV0","address":"0x585DfaD7bF4099E011D185E266907A8ab60DAD2D","chain":"ethereum","description":"Current verifier using calldata for DA, used to prepare data for the PlonkVerifierV0."},{"name":"PlonkVerifierV0","address":"0x4B8Aa8A96078689384DAb49691E9bA51F9d2F9E1","chain":"ethereum","description":"Plonk verifier used to verify ZK proofs using calldata for DA."},{"name":"ZkEvmVerifierV1","address":"0x4b289E4A5331bAFBc6cCb2F10C39B8EDceCDb247","chain":"ethereum","description":"Verifier using blobs for DA, used to prepare data for the PlonkVerifierV1."},{"name":"PlonkVerifierV1","address":"0x2293cd12e8564e8219d314b075867c2f66ac6941","chain":"ethereum","description":"Plonk verifier used to verify ZK proofs using blobs for DA."},{"name":"ZkEvmVerifierV1-1","address":"0x63FB51C55d9605a75F8872C80De260a00fACfaA2","chain":"ethereum","description":"Verifier using blobs for DA, used to prepare data for the PlonkVerifierV1-1. Added in the Curie upgrade."},{"name":"PlonkVerifierV1-1","address":"0x03a72B00D036C479105fF98A1953b15d9c510110","chain":"ethereum","description":"Plonk verifier used to verify ZK proofs using blobs for DA."},{"name":"ZkEvmVerifierV2","address":"0x2d6e16d8e8a0C3Bc7750E774B108Ec39Ab0C18fB","chain":"ethereum","description":"Verifier proving bundles (group of batches), used to prepare data for the PlonkVerifierV2. Added in the Darwin upgrade."},{"name":"PlonkVerifierV2","address":"0x8759E83b6570A0bA46c3CE7eB359F354F816c9a9","chain":"ethereum","description":"Plonk verifier used to verify ZK proofs for bundles."},{"name":"ZkEvmVerifierV2-1","address":"0xCAECeE2E815e7f758c2477f900AFA14bDDce54B3","chain":"ethereum","description":"Verifier proving bundles (group of batches), used to prepare data for the PlonkVerifierV2-1. Added in the Darwin v2 upgrade."},{"name":"PlonkVerifierV2-1","address":"0x8c1b52757b5c571ADcB5572E992679d4D48e30f7","chain":"ethereum","description":"Plonk verifier used to verify ZK proofs for bundles."},{"name":"L1ETHGateway","address":"0x7F2b8C31F88B6006c382775eea88297Ec1e3E905","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x546E0bF31FB6e7babD493452e4e6999191367B42"]},"chain":"ethereum","description":"Contract used to bridge ETH from L1 to L2.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"L1WETHGateway","address":"0x7AC440cAe8EB6328de4fA621163a792c1EA9D4fE","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0xa4F400593DFfc0ae02F940ab58f6e3Cc6fb9FB49"]},"chain":"ethereum","description":"Contract used to bridge WETH from L1 to L2.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"L1BatchBridgeGateway","address":"0x5Bcfd99c34cf7E06fc756f6f5aE7400504852bc4","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x7999cdD5E2893475D89211A2E3FdA67a841E3233"]},"chain":"ethereum","description":"Contract used to efficiently bridge ETH (in batches) from L1 to L2.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"L1StandardERC20Gateway","address":"0xD8A791fE2bE73eb6E6cF1eb0cb3F36adC9B3F8f9","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x4015Fc868C06689ABEba4a9dC8FA43B804F6239c"]},"chain":"ethereum","description":"Contract used to bridge ERC20 tokens from L1 to L2. It uses a fixed token list.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"L1CustomERC20Gateway","address":"0xb2b10a289A229415a124EFDeF310C10cb004B6ff","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x7F512E2E9dfC4552941D99A5b2405BBcF5781C2c"]},"chain":"ethereum","description":"Contract used to bridge ERC20 tokens from L1 to L2. It allows to change the token mappings.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"L1USDCGateway","address":"0xf1AF3b23DE0A5Ca3CAb7261cb0061C0D779A5c7B","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x56ce8A8E8399f6cD5e7e4f549E8BfD673f2AfF5e"]},"chain":"ethereum","description":"Contract used to bridge USDC tokens from L1 to L2.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"L1ERC721Gateway","address":"0x6260aF48e8948617b8FA17F4e5CEa2d21D21554B","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0xd1841c5756428812233eEA78afC17cb2D3e392bb"]},"chain":"ethereum","description":"Contract used to bridge ERC721 tokens from L1 to L2.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"L1ERC1155Gateway","address":"0xb94f7F6ABcb811c5Ac709dE14E37590fcCd975B6","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x244BF7aEf29F03916569470a51fA0794B62F8cd7"]},"chain":"ethereum","description":"Contract used to bridge ERC1155 tokens from L1 to L2.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"L1GatewayRouter","address":"0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0xb93Ac04010Bd61F45BF492022A5b49a902F798F3"]},"chain":"ethereum","description":"Main entry point for depositing ETH and ERC20 tokens, which are then forwarded to the correct gateway.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"},{"name":"FeeVaultMultisig","address":"0x8FA3b4570B4C96f8036C13b64971BA65867eEB48","upgradeability":{"proxyType":"gnosis safe","admins":[],"implementations":["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],"immutable":false},"chain":"ethereum","description":"Multisig used to store fees collected from gateways to pay for L1 -> L2 message execution."},{"name":"EnforcedTxGateway","address":"0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0x642af405bF64660665B37977449C9C536B806318"]},"chain":"ethereum","description":"Contracts to force L1 -> L2 messages with the proper sender. The contract is pausable by ScrollOwner. The contract is currently paused.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay","pausable":{"paused":true,"pausableBy":["ScrollOwner"]}},{"name":"OLD_L2GasPriceOracle","address":"0x987e300fDfb06093859358522a79098848C33852","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xEB803eb3F501998126bf37bB823646Ed3D59d072"],"implementations":["0xfDF1eE0098168eaa61BF87Db68C39c85151a4E9E"]},"chain":"ethereum","description":"Deprecated: the functionality of this contract has been moved to the L1MessageQueue contract. It was used to relay the L2 basefee on L1 in a trusted way using a whitelist. It was also used to store and update values related to intrinsic gas cost calculations.","upgradableBy":["ScrollMultisig"],"upgradeDelay":"No delay"}],"risks":[]},"permissions":[{"name":"ScrollMultisig","description":"This is a Gnosis Safe with 4 / 5 threshold.  Currently also designated as the Security Council. Can upgrade proxies and the verifier without delay and propose transactions within Timelocks. It can also revert non finalized batches, remove sequencers and provers and pause contracts.","accounts":[{"address":"0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xFCf6364F5157901f533DD3615A5d8c375F13c072","type":"EOA"},{"address":"0xE2e6345baAD18f779167443Dc4886495507b3249","type":"EOA"},{"address":"0xEbbeeAA424AE904508465a41c927Be594C43Dc68","type":"EOA"},{"address":"0xfc31892C5500AbE00974280b28907BaA9190E384","type":"EOA"},{"address":"0x9337B41709c1C2B938Cb460ea3fA9DB586B172E0","type":"EOA"}]},{"name":"ExecutorMultisig","description":"This is a Gnosis Safe with 1 / 5 threshold.  Can execute timelock transactions.","accounts":[{"address":"0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xEe9bb388d320F4305af6a4a1a70c862D3F4d0D5B","type":"EOA"},{"address":"0xFcf1f182FC79047d99e5db0d7113c0EfE2EC9402","type":"EOA"},{"address":"0x0c5cc5155b346453154059aD9d2Ff695dB92f774","type":"EOA"},{"address":"0xd7bC70ecf344C279eB78C8899Ba5538e2e3A0632","type":"EOA"},{"address":"0x568993632c34604098e35a184C52aD390c70f754","type":"EOA"}]},{"name":"EmergencyMultisig","description":"This is a Gnosis Safe with 2 / 5 threshold.  Can revert batches, remove sequencers and provers, and pause contracts.","accounts":[{"address":"0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x0c5cc5155b346453154059aD9d2Ff695dB92f774","type":"EOA"},{"address":"0xEe9bb388d320F4305af6a4a1a70c862D3F4d0D5B","type":"EOA"},{"address":"0xFcf1f182FC79047d99e5db0d7113c0EfE2EC9402","type":"EOA"},{"address":"0xd7bC70ecf344C279eB78C8899Ba5538e2e3A0632","type":"EOA"},{"address":"0x568993632c34604098e35a184C52aD390c70f754","type":"EOA"}]},{"name":"Sequencers","accounts":[{"address":"0xcF2898225ED05Be911D3709d9417e86E0b4Cfc8f","type":"EOA"},{"address":"0x2ce8B4A516ebBc8B425764a867B742F76C2244c7","type":"EOA"}],"description":"Actors allowed to commit transaction batches."},{"name":"Proposers","accounts":[{"address":"0x356483dC32B004f32Ea0Ce58F7F88879886e9074","type":"EOA"},{"address":"0x69d79Fc4Ae89E4DA80D719e26a435621F75B7f06","type":"EOA"}],"description":"Actors allowed to prove transaction batches and publish state root updates."}],"milestones":[{"name":"Batches reverted","link":"https://status.scroll.io/incidents/44k6s4qg6kcs","date":"2024-07-05T00:00:00Z","description":"To fix a bug in the compression for batches 55 previously committed batches are reverted.","type":"incident"},{"name":"Darwin upgrade","link":"https://scroll.io/blog/proof-recursion-scrolls-darwin-upgrade","date":"2024-08-21T00:00:00.00Z","description":"Introduces a reduction in gas fees through bundling multiple batches into a single validity proof.","type":"general"},{"name":"Curie upgrade","link":"https://scroll.io/blog/compressing-the-gas-scrolls-curie-upgrade","date":"2024-07-03T00:00:00.00Z","description":"Introduces data compression, new opcodes, dynamic block time, and new transaction types.","type":"general"},{"name":"Bernoulli upgrade","link":"https://scroll.io/blog/blobs-are-here-scrolls-bernoulli-upgrade","date":"2024-04-29T00:00:00.00Z","description":"Introduces EIP-4844 data blobs for L1 data availability, and the SHA2-256 precompile on L2.","type":"general"},{"name":"Scroll official launch","link":"https://x.com/Scroll_ZKP/status/1714286874020528554","date":"2023-10-17T00:00:00.00Z","description":"Scroll announces its official launch.","type":"general"},{"name":"Scroll Alpha testnet launch","link":"https://scroll.io/blog/alphaTestnet","date":"2023-02-27T00:00:00.00Z","description":"Scroll launches its Alpha testnet on Goerli.","type":"general"}]}