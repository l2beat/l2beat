{"type":"layer2","id":"kinto","contracts":{"addresses":[{"name":"RollupProxy","address":"0x5073dA9cA4810f3E0aA01c20c7d9d02C3f522e11","upgradeability":{"proxyType":"Arbitrum proxy","admins":["0x59B851c8b1643e0735Ec3F2f0e528f3d89c3408a"],"implementations":["0x0aE4dD666748bF0F6dB5c149Eab1D8aD27820A6A","0x660ea1675F7323dC3Ba0c8dDFB593225Eb01E3C1"]},"chain":"ethereum","description":"Main contract implementing Arbitrum One Rollup. Manages other Rollup components, list of Stakers and Validators. Entry point for Validators creating new Rollup Nodes (state commits) and Challengers submitting fraud proofs."},{"name":"Bridge","address":"0x859a53Fe2C8DA961387030E7CB498D6D20d0B2DB","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["0x1c6ACCd9d66f3B993928E7439c9A2d67b94a445F"]},"chain":"ethereum","description":"Contract managing Inboxes and Outboxes. It escrows the native token used for gas on the chain."},{"name":"SequencerInbox","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["0x57411f5BA52531e8199066bC8EC650470A744883"]},"chain":"ethereum","description":"Main entry point for the Sequencer submitting transaction batches."},{"name":"Inbox","address":"0xBFfaA85c1756472fFC37e6D172A7eC0538C14474","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["0xc235c5194f2404234fc7C99b4dd15289BB735Cf5"]},"chain":"ethereum","description":"Entry point for users depositing ETH and sending L1 -> L2 messages."},{"name":"Outbox","address":"0x655761AD5FC251F414D6993A73184B0669F278c8","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["0x2a6DD4433ffa96dc1755814FC0d9cc83A5F68DeC"]},"chain":"ethereum","description":"Contract that allows L2->L1 calls, i.e. messages initiated on L2 which eventually resolve in execution on L1."},{"name":"UpgradeExecutor","address":"0x59B851c8b1643e0735Ec3F2f0e528f3d89c3408a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["0x6c21303F5986180B1394d2C89f3e883890E2867b"]},"chain":"ethereum","description":"Contract allowed to upgrade the system."},{"name":"ChallengeManager","address":"0x6228e2FB8C561f1a5A963039Bc38Eb6D539A1A7F","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["0x122B88885F1f365B69CAd38B167B039fEd0Ba096"]},"chain":"ethereum","description":"Contract that allows challenging invalid state roots. Can be called through the RollupProxy."},{"name":"OneStepProofEntry","address":"0x8B02a8B985a81f96e49B8289FF60847FC6020e51","chain":"ethereum","description":"Contract used to perform the last step of a fraud proof."},{"name":"OneStepProverMemory","address":"0xf09Bc0285055BEA82165cA3F54054aa88BB3C169","chain":"ethereum","description":"Contract used to perform the last step of a fraud proof."},{"name":"OneStepProverMath","address":"0xba9D43FA3576bc40f13cb0731D770d1e510EdE46","chain":"ethereum","description":"Contract used to perform the last step of a fraud proof."},{"name":"OneStepProverHostIo","address":"0x6c4322e9A0478CA7aDd30e561f96af379D3A22Bb","chain":"ethereum","description":"Contract used to perform the last step of a fraud proof."},{"name":"OneStepProver0","address":"0x76f72B8eFDA2DCDD3fB5A8c16d576c25eD43D645","chain":"ethereum","description":"Contract used to perform the last step of a fraud proof."}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"chainConfig":{"name":"kinto","chainId":7887,"explorerUrl":"https://explorer.kinto.xyz","explorerApi":{"url":"https://explorer.kinto.xyz/api","type":"blockscout"},"minTimestampForTvl":1716249601},"technology":{"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap blobs or calldata. This ensures that it will be available for enough time.","risks":[],"references":[{"text":"Sequencing followed by deterministic execution - Arbitrum documentation","href":"https://developer.offchainlabs.com/inside-arbitrum-nitro/#sequencing-followed-by-deterministic-execution"},{"text":"SequencerInbox.sol - Etherscan source code, addSequencerL2BatchFromOrigin function","href":"https://etherscan.io/address/0x57411f5BA52531e8199066bC8EC650470A744883#code"}]},"operator":{"name":"The system has a centralized sequencer","description":"While forcing transaction is open to anyone the system employs a privileged sequencer that has priority for submitting transaction batches and ordering transactions.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"text":"Sequencer - Arbitrum documentation","href":"https://docs.arbitrum.io/how-arbitrum-works/inside-arbitrum-nitro#the-sequencer"}]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly. After a delay of 1d in which a Sequencer has failed to include a transaction that was directly posted to the smart contract, it can be forcefully included by anyone on the host chain, which finalizes its ordering.","risks":[],"references":[{"text":"SequencerInbox.sol - Etherscan source code, forceInclusion function","href":"https://etherscan.io/address/0x57411f5BA52531e8199066bC8EC650470A744883#code"},{"text":"Sequencer Isnâ€™t Doing Its Job - Arbitrum documentation","href":"https://docs.arbitrum.io/how-arbitrum-works/sequencer#unhappyuncommon-case-sequencer-isnt-doing-its-job"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is finalized the funds become available for withdrawal on L1. The process of block finalization usually takes several days to complete. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[],"references":[{"text":"Transaction lifecycle - Arbitrum documentation","href":"https://developer.offchainlabs.com/tx-lifecycle"},{"text":"L2 to L1 Messages - Arbitrum documentation","href":"https://developer.offchainlabs.com/arbos/l2-to-l1-messaging"},{"text":"Mainnet for everyone - Arbitrum Blog","href":"https://offchain.medium.com/mainnet-for-everyone-27ce0f67c85e"}]},{"name":"Tradeable Bridge Exit","description":"When a user initiates a regular withdrawal a third party verifying the chain can offer to buy this withdrawal by paying the user on L1. The user will get the funds immediately, however the third party has to wait for the block to be finalized. This is implemented as a first party functionality inside Arbitrum's token bridge.","risks":[],"references":[{"text":"Tradeable Bridge Exits - Arbitrum documentation","href":"https://developer.offchainlabs.com/docs/withdrawals#tradeable-bridge-exits"}]},{"name":"Autonomous exit","description":"Users can (eventually) exit the system by pushing the transaction on L1 and providing the corresponding state root. The only way to prevent such withdrawal is via an upgrade.","risks":[],"references":[]}],"otherConsiderations":[{"name":"EVM compatible smart contracts are supported","description":"Arbitrum One uses Nitro technology that allows running fraud proofs by executing EVM code on top of WASM.","risks":[{"category":"Funds can be lost if","text":"there are mistakes in the highly complex Nitro and WASM one-step prover implementation."}],"references":[{"text":"Inside Arbitrum Nitro","href":"https://developer.offchainlabs.com/inside-arbitrum-nitro/"}]}]},"permissions":[{"name":"Sequencers","accounts":[{"address":"0xe27f3f6db6824def1738b2aACe2672aC59046a39","type":"EOA"}],"description":"Central actors allowed to submit transaction batches to L1.","chain":"ethereum"},{"name":"Validators/Proposers","accounts":[{"address":"0x64Cf65036a76E3827e448cadbc53D31EefDCE04a","type":"EOA"},{"address":"0x944eB0a2829A859959586b10D54229278534a696","type":"EOA"}],"description":"They can submit new state roots and challenge state roots. Some of the operators perform their duties through special purpose smart contracts.","chain":"ethereum"},{"name":"ExecutorMultisig","description":"This is a Gnosis Safe with 3 / 5 threshold.  Multisig that can execute upgrades via the UpgradeExecutor.","accounts":[{"address":"0x17Eb10e12a78f986C78F973Fc70eD88072B33B7d","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x08E674c4538caE03B6c05405881dDCd95DcaF5a8","type":"EOA"},{"address":"0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B","type":"EOA"},{"address":"0x12ee26aD74d50a1f6BDD90811387d1e0f3e7C76A","type":"EOA"},{"address":"0x356000Cec4fC967f8FC372381D983426760A0391","type":"EOA"},{"address":"0x94561e98DD5E55271f91A103e4979aa6C493745E","type":"EOA"}]},{"name":"BridgerOwnerMultisig","description":"This is a Gnosis Safe with 3 / 5 threshold.  Multisig that can upgrade the Bridger gateway contract. It also owns the Socket contracts used as escrows for bridged assets.","accounts":[{"address":"0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x5D973Ea995d14799E528B14472346bfDE21eAe2e","type":"EOA"},{"address":"0x08E674c4538caE03B6c05405881dDCd95DcaF5a8","type":"EOA"},{"address":"0xc1f4D15C16A1f3555E0a5F7AeFD1e17AD4aaf40B","type":"EOA"},{"address":"0x94561e98DD5E55271f91A103e4979aa6C493745E","type":"EOA"},{"address":"0xc31C4549356d46c37021393EeEb6f704B38061eC","type":"EOA"}]},{"name":"Bridger Sender Account","description":"EOA privileged to call `depositBySig()` on the Bridger gateway to deposit assets to the L2 using pre-signed transactions from users.","accounts":[{"address":"0x89A01e3B2C3A16c3960EADc2ceFcCf2D3AA3F82e","type":"EOA"}]}],"stateValidation":{"description":"Updates to the system state can be proposed and challenged by a set of whitelisted validators. If a state root passes the challenge period, it is optimistically considered correct and made actionable for withdrawals.","categories":[{"title":"State root proposals","description":"Whitelisted validators propose state roots as children of a previous state root. A state root can have multiple conflicting children. This structure forms a graph, and therefore, in the contracts, state roots are referred to as nodes. Each proposal requires a stake, currently set to 0.1 ETH, that can be slashed if the proposal is proven incorrect via a fraud proof. Stakes can be moved from one node to one of its children, either by calling `stakeOnExistingNode` or `stakeOnNewNode`. New nodes cannot be created faster than the minimum assertion period by the same validator, currently set to 15m. The oldest unconfirmed node can be confirmed if the challenge period has passed and there are no siblings, and rejected if the parent is not a confirmed node or if the challenge period has passed and no one is staked on it.","risks":[{"category":"Funds can be stolen if","text":"none of the whitelisted verifiers checks the published state. Fraud proofs assume at least one honest and able validator.","isCritical":true}],"references":[{"text":"How is fraud proven - Arbitrum documentation FAQ","href":"https://docs.arbitrum.io/welcome/arbitrum-gentle-introduction#q-and-how-exactly-is-fraud-proven-sounds-complicated"}]},{"title":"Challenges","description":"A challenge can be started between two siblings, i.e. two different state roots that share the same parent, by calling the `startChallenge` function. Validators cannot be in more than one challenge at the same time, meaning that the protocol operates with [partial concurrency](https://medium.com/l2beat/fraud-proof-wars-b0cb4d0f452a). Since each challenge lasts 6d 8h, this implies that the protocol can be subject to [delay attacks](https://medium.com/offchainlabs/solutions-to-delay-attacks-on-rollups-434f9d05a07a), where a malicious actor can delay withdrawals as long as they are willing to pay the cost of losing their stakes. If the protocol is delayed attacked, the new stake requirement increases exponentially for each challenge period of delay. Challenges are played via a bisection game, where asserter and challenger play together to find the first instruction of disagreement. Such instruction is then executed onchain in the WASM OneStepProver contract to determine the winner, who then gets half of the stake of the loser. As said before, a state root is rejected only when no one left is staked on it. The protocol does not enforces valid bisections, meaning that actors can propose correct initial claim and then provide incorrect midpoints.","references":[{"text":"Fraud Proof Wars: Arbitrum Classic","href":"https://medium.com/l2beat/fraud-proof-wars-b0cb4d0f452a"}]}]},"milestones":[{"name":"Mainnet full launch","link":"https://medium.com/mamori-finance/%EF%B8%8F-engen-is-over-kinto-is-launching-d9f2dd49fb2e","date":"2024-05-22T00:00:00Z","description":"Engen mining is completed and locked funds are bridged to the Kinto L2.","type":"general"},{"name":"Kinto Mainnet Genesis","link":"https://medium.com/mamori-finance/%EF%B8%8F-kintos-launch-the-set-up-7eddfbb4bc38","date":"2023-12-15T00:00:00Z","description":"Kinto mainnet is launched. Deposits by users are disabled.","type":"general"}],"badges":["Caldera","Orbit","EthereumBlobs","EVM"],"display":{"stateValidationImage":"orbit","warning":"Fraud proof system is fully deployed but is not yet permissionless as it requires Validators to be whitelisted.","name":"Kinto","slug":"kinto","headerWarning":"","description":"Kinto is an Orbit stack L2 with account abstraction and KYC enabled for all users, supporting both modern financial institutions and decentralized protocols.","purposes":["DeFi","RWA"],"links":{"websites":["https://kinto.xyz"],"apps":["https://engen.kinto.xyz"],"documentation":["https://docs.kinto.xyz"],"explorers":["https://explorer.kinto.xyz/","https://kintoscan.io/","https://searchkinto.com/"],"repositories":["https://github.com/kintoxyz"],"socialMedia":["https://twitter.com/kintoxyz","https://discord.com/invite/kinto","https://mirror.xyz/kintoxyz.eth","https://medium.com/mamori-finance"]},"activityDataSource":"Blockchain RPC","provider":"Arbitrum","category":"Optimistic Rollup","finality":{"finalizationPeriod":549816},"liveness":{"warnings":{"stateUpdates":"Please note, for Optimistic rollups the state is not finalized until the challenge period passes."},"explanation":"Kinto is an Optimistic Rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted to the L1. Forced txs can be delayed up to 1d. The state root gets finalized 6d 8h after it has been posted."}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Fraud proof submission is not sufficiently decentralized.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring.","The Security Council is not properly set up."]},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":false,"description":"No source-available node exists that can recreate the state from L1 data."}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":false,"description":"Fraud proof submission is not sufficiently decentralized."},{"satisfied":true,"description":"Users are able to exit without the help of the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."},{"satisfied":false,"description":"The Security Council is not properly set up."}]},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Fraud proof submission is open only to whitelisted actors."},{"satisfied":false,"description":"Upgrades unrelated to on-chain provable bugs provide less than 30d to exit."},{"satisfied":false,"description":"The Security Council's actions are not confined to on-chain provable bugs."}]}],"message":{"type":"warning","text":"There is no available node software that can reconstruct the state from L1 data, hence there is no way to verify that this system is a rollup."}},"dataAvailability":{"layer":{"value":"Ethereum (blobs or calldata)","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs."},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted on chain."},"mode":"Transaction data (compressed)"},"riskView":{"stateValidation":{"value":"Fraud proofs (INT)","description":"Fraud proofs only allow 2 WHITELISTED actors watching the chain to prove that the state is incorrect. Interactive proofs (INT) require multiple transactions over time to resolve. The challenge protocol can be subject to delay attacks. There is a 6d 8h challenge period.","sentiment":"bad","definingMetric":2,"secondLine":"6d 8h challenge period"},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","definingMetric":null},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","definingMetric":-86400},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There is a 1d delay on this operation.","sentiment":"good","definingMetric":86400},"proposerFailure":{"value":"Self propose","description":"Anyone can become a Proposer after 12d 17h of inactivity from the currently whitelisted Proposers.","sentiment":"good","definingMetric":1099632},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"}},"config":{"escrows":[{"address":"0x859a53Fe2C8DA961387030E7CB498D6D20d0B2DB","newVersion":true,"sinceTimestamp":1702607855,"tokens":["ETH"],"contract":{"address":"0x859a53Fe2C8DA961387030E7CB498D6D20d0B2DB","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x74C717C01425eb475A5fC55d2A4a9045fC9800df"],"implementations":["0x1c6ACCd9d66f3B993928E7439c9A2d67b94a445F"]},"chain":"ethereum","description":"Contract managing Inboxes and Outboxes. It escrows ETH sent to L2.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true},{"address":"0x0f1b7bd7762662B23486320AA91F30312184f70C","newVersion":true,"sinceTimestamp":1710248135,"tokens":"*","contract":{"address":"0x0f1b7bd7762662B23486320AA91F30312184f70C","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0xf152Abda9E4ce8b134eF22Dc3C6aCe19C4895D82"],"implementations":["0x21D3921B50617BDef223207118950B0b577e4007"]},"chain":"ethereum","description":"Bridger gateway that can swap assets to 'L2 final assets' before bridging them to the L2."},"chain":"ethereum","includeInTotal":true},{"address":"0x00A0c9d82B95a17Cdf2D46703F2DcA13EB0E8A94","sinceTimestamp":1716142367,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["WETH"],"chain":"ethereum"},{"address":"0xc5d01939Af7Ce9Ffc505F0bb36eFeDde7920f2dc","sinceTimestamp":1716128303,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["wstETH"],"chain":"ethereum"},{"address":"0x755cD5d147036E11c76F1EeffDd94794fC265f0d","sinceTimestamp":1716142595,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["USDC"],"chain":"ethereum"},{"address":"0x12Cf431BdF7F143338cC09A0629EDcCEDCBCEcB5","sinceTimestamp":1715972567,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["DAI"],"chain":"ethereum"},{"address":"0x351d8894fB8bfa1b0eFF77bFD9Aab18eA2da8fDd","sinceTimestamp":1716142919,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["ENA"],"chain":"ethereum"},{"address":"0xdf34E61B6e7B9e348713d528fEB019d504d38c1e","sinceTimestamp":1716143207,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["USDe"],"chain":"ethereum"},{"address":"0xdb161cdc9c11892922F7121a409b196f3b00e640","sinceTimestamp":1716143711,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["EIGEN"],"chain":"ethereum"},{"address":"0xc7a542f73049C11f9719Be6Ff701fCA882D60020","sinceTimestamp":1716143759,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["eETH"],"chain":"ethereum"},{"address":"0x5B8Ae1C9c5970e2637Cf3Af431acAAebEf7aFb85","sinceTimestamp":1716143807,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["sDAI"],"chain":"ethereum"},{"address":"0x43b718Aa5e678b08615CA984cbe25f690B085b32","sinceTimestamp":1716143855,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["sUSDe"],"chain":"ethereum"},{"address":"0xD357F7Ec4826Bd1234CDA2277B623F6dE7dA56Dc","sinceTimestamp":1716143903,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["wUSDM"],"chain":"ethereum"},{"address":"0xeB66259d2eBC3ed1d3a98148f6298927d8A36397","sinceTimestamp":1716143951,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["weETH"],"chain":"ethereum"},{"address":"0x95d60E34aB2E626407d98dF8C240e6174e5D37E5","sinceTimestamp":1716216227,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["ETHFI"],"chain":"ethereum"},{"address":"0xfDF267c43c0C868046c66695c1a85c973418CBFb","sinceTimestamp":1716142417,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["WETH"],"chain":"base"},{"address":"0xE194f2B41A5dc6Be311aD7811eF391a0ac84687d","sinceTimestamp":1716128411,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["wstETH"],"chain":"base"},{"address":"0xc7744d1A93c56a6eE12CCF1F2264641F219528fE","sinceTimestamp":1716142647,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["USDC"],"chain":"base"},{"address":"0x9354E3822CE6BF77B2761f8922972BB767D771d8","sinceTimestamp":1715972109,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["DAI"],"chain":"base"},{"address":"0x8de880ecA6B95214C1ECd1556BF1DB4d23f212B5","sinceTimestamp":1716143999,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["weETH"],"chain":"base"},{"address":"0x4D585D346DFB27b297C37F480a82d4cAB39491Bb","sinceTimestamp":1716142397,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["WETH"],"chain":"arbitrum"},{"address":"0x6F855dE562CC9d019757f5F68a15Cd392FF52962","sinceTimestamp":1716128387,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["wstETH"],"chain":"arbitrum"},{"address":"0xC88A469B96A62d4DA14Dc5e23BDBC495D2b15C6B","sinceTimestamp":1716142624,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["USDC"],"chain":"arbitrum"},{"address":"0x36E2DBe085eE4d028fD60f70670f662365d0E978","sinceTimestamp":1715972440,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["DAI"],"chain":"arbitrum"},{"address":"0x7C852c2a3e367453Ce3a68A4D12c313BaD0565e3","sinceTimestamp":1716143237,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["USDe"],"chain":"arbitrum"},{"address":"0x8bD30d8c5d5cBb5e41Af7B9A4bD654b34772e890","sinceTimestamp":1716143980,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["weETH"],"chain":"arbitrum"},{"address":"0x500c8337782a9f82C5376Ea71b66A749cE42b507","sinceTimestamp":1717616624,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["wUSDM"],"chain":"arbitrum"},{"address":"0x25a1baC7314Ff40Ee8CD549251924D066D7d5bC6","sinceTimestamp":1718367579,"includeInTotal":false,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["SolvBTC"],"chain":"arbitrum"},{"address":"0x25f0D71Da51A77Ca231484eBbAD1f588A0230ef2","sinceTimestamp":1721253827,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["PAXG"],"chain":"ethereum"},{"address":"0xd04Bc056BE36a6127267E4F71d3b43D1BEEfE8bF","sinceTimestamp":1721253935,"source":"external","bridgedUsing":{"bridges":[{"name":"Socket bridge","slug":"socket"}]},"tokens":["XAUt"],"chain":"ethereum"}],"transactionApi":{"type":"rpc","defaultUrl":"https://rpc.kinto-rpc.com","defaultCallsPerMinute":600,"startBlock":1},"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0x8f111f3c","functionSignature":"function addSequencerL2BatchFromOrigin(uint256 sequenceNumber,bytes data,uint256 afterDelayedMessagesRead,address gasRefunder,uint256 prevMessageCount,uint256 newMessageCount)","sinceTimestamp":1702607855,"untilTimestamp":1721705699}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0x6f12b0c9","functionSignature":"function addSequencerL2BatchFromOrigin(uint256 sequenceNumber,bytes calldata data,uint256 afterDelayedMessagesRead,address gasRefunder)","sinceTimestamp":1702607855,"untilTimestamp":1721705699}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0xe0bc9729","functionSignature":"function addSequencerL2Batch(uint256 sequenceNumber,bytes calldata data,uint256 afterDelayedMessagesRead,address gasRefunder,uint256 prevMessageCount,uint256 newMessageCount)","sinceTimestamp":1702607855,"untilTimestamp":1721705699}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0xe0bc9729","functionSignature":"function addSequencerL2Batch(uint256 sequenceNumber,bytes calldata data,uint256 afterDelayedMessagesRead,address gasRefunder,uint256 prevMessageCount,uint256 newMessageCount)","sinceTimestamp":1721705699}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0x8f111f3c","functionSignature":"function addSequencerL2BatchFromOrigin(uint256 sequenceNumber,bytes data,uint256 afterDelayedMessagesRead,address gasRefunder,uint256 prevMessageCount,uint256 newMessageCount)","sinceTimestamp":1721705699}},{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xF4Ef823D57819AC7202a081A5B49376BD28E7b3a","selector":"0x3e5aa082","functionSignature":"function addSequencerL2BatchFromBlobs(uint256 sequenceNumber,uint256 afterDelayedMessagesRead,address gasRefunder,uint256 prevMessageCount,uint256 newMessageCount)","sinceTimestamp":1721705699}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x655761AD5FC251F414D6993A73184B0669F278c8","selector":"0xa04cee60","functionSignature":"function updateSendRoot(bytes32 root, bytes32 l2BlockHash) external","sinceTimestamp":1702607855}}],"finality":"coming soon"}}