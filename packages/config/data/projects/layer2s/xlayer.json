{"type":"layer2","id":"xlayer","display":{"name":"X Layer","slug":"xlayer","description":"X Layer is Validium by OKX with seamless integration with OKX products. It is powered by the Polygon CDK.","purposes":["Universal"],"links":{"websites":["https://okx.com/xlayer"],"apps":[],"documentation":["https://okx.com/xlayer/docs/users/welcome/about-x-layer"],"explorers":["https://okx.com/explorer/xlayer"],"repositories":[],"socialMedia":["https://twitter.com/XLayerOfficial"]},"activityDataSource":"Blockchain RPC","category":"Validium","provider":"Polygon","finality":{"finalizationPeriod":0,"warnings":{"timeToInclusion":{"sentiment":"neutral","value":"Uniform block distribution is assumed for calculations."}}}},"config":{"associatedTokens":["OKB"],"escrows":[{"address":"0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe","newVersion":true,"sinceTimestamp":1712620800,"tokens":"*","contract":{"address":"0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["0x0FeB850B183C57534b56b7d56520133C8f9BDB65"]},"chain":"ethereum"},"chain":"ethereum","includeInTotal":true,"sharedEscrow":{"type":"AggLayer","nativeAsset":"etherWrapped","wethAddress":"0x5A77f1443D16ee5761d310e38b62f77f726bC71c","includeAllOKBFromL1":true}}],"transactionApi":{"type":"rpc","startBlock":1,"defaultUrl":"https://rpc.xlayer.tech","defaultCallsPerMinute":500},"liveness":{"duplicateData":{"from":"stateUpdates","to":"proofSubmissions"}}},"chainConfig":{"name":"xlayer","chainId":196,"explorerUrl":"https://rpc.xlayer.tech","minTimestampForTvl":1711782180,"multicallContracts":[{"address":"0xcA11bde05977b3631167028862bE2a173976CA11","batchSize":150,"sinceBlock":47416,"version":"3"}]},"dataAvailability":{"layer":{"value":"DAC","sentiment":"warning","description":"The data is posted off chain and a Data Availability Committee (DAC) is responsible for protecting and supplying it."},"bridge":{"value":"2/2 DAC Members","sentiment":"bad","description":"There is a threshold of 2/2 members that must sign and attest that the data is correct and available."},"mode":"Transaction data"},"riskView":{"stateValidation":{"value":"ZK proofs (SN)","description":"zkSNARKS are zero knowledge proofs that ensure state correctness, but require trusted setup.","sentiment":"good","definingMetric":null,"sources":[{"contract":"PolygonRollupManager","references":["https://etherscan.io/address/0x3b82Da772c825283d85d5d6717A77C6Ff582053b"]}]},"dataAvailability":{"value":"External (DAC)","description":"Proof construction relies fully on data that is NOT published onchain. There exists a Data Availability Committee (DAC) with a threshold of 2/2 that is tasked with protecting and supplying the data.","sentiment":"bad","definingMetric":1,"sources":[{"contract":"XLayerValidium","references":[]}]},"exitWindow":{"value":"None","description":"Even though there is a 10d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d.","sentiment":"bad","definingMetric":-432000,"warning":{"value":"The Security Council can remove the delay on upgrades.","sentiment":"bad"}},"sequencerFailure":{"value":"No mechanism","description":"There is no mechanism to have transactions be included if the sequencer is down or censoring. Although the functionality exists in the code, it is currently disabled.","sentiment":"bad","sources":[{"contract":"XLayerValidium","references":[]}]},"proposerFailure":{"value":"Self propose","description":"If the Proposer fails, users can leverage the source available prover to submit proofs to the L1 bridge. There is a 5d delay for proving and a 5d delay for finalizing state proven in this way. These delays can only be lowered except during the emergency state.","sentiment":"good","sources":[{"contract":"PolygonRollupManager","references":["https://etherscan.io/address/0x3b82Da772c825283d85d5d6717A77C6Ff582053b","https://etherscan.io/address/0x3b82Da772c825283d85d5d6717A77C6Ff582053b"]}]},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"}},"stage":{"stage":"NotApplicable"},"technology":{"newCryptography":{"name":"Zero knowledge STARK and SNARK cryptography is used","description":"Despite their production use zkSTARKs and zkSNARKs proof systems are still relatively new, complex and they rely on the proper implementation of the polynomial constraints used to check validity of the Execution Trace. In addition zkSNARKs require a trusted setup to operate.","risks":[{"category":"Funds can be lost if","text":"the proof system is implemented incorrectly."}],"references":[]},"stateCorrectness":{"name":"Validity proofs ensure state correctness","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","risks":[],"references":[{"text":"PolygonRollupManager.sol - Etherscan source code, _verifyAndRewardBatches function","href":"https://etherscan.io/address/0x3b82Da772c825283d85d5d6717A77C6Ff582053b"}]},"dataAvailability":{"name":"Data is not stored on chain","description":"The transaction data is not recorded on the Ethereum main chain. Transaction data is stored off-chain and only the hashes are posted on-chain by the Sequencer, after being signed by the DAC members.","risks":[{"category":"Funds can be lost if","text":"the external data becomes unavailable.","isCritical":true}],"references":[{"text":"PolygonValidiumStorageMigration.sol - Etherscan source code, sequenceBatchesValidium function","href":"https://etherscan.io/address/0x10D296e8aDd0535be71639E5D1d1c30ae1C6bD4C#code#F1#L126"}]},"operator":{"name":"The system has a centralized sequencer","description":"Only a trusted sequencer is allowed to submit transaction batches. A mechanism for users to submit their own batches is currently disabled.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."},{"category":"Funds can be frozen if","text":"the sequencer refuses to include an exit transaction.","isCritical":true}],"references":[{"text":"XLayerValidium.sol - Etherscan source code, onlyTrustedSequencer modifier","href":"https://etherscan.io/address/0x10D296e8aDd0535be71639E5D1d1c30ae1C6bD4C"}]},"forceTransactions":{"name":"Users can't force any transaction","description":"The mechanism for allowing users to submit their own transactions is currently disabled.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions."}],"references":[{"text":"XLayerValidium.sol - Etherscan source code, forceBatchAddress address","href":"https://etherscan.io/address/0x10D296e8aDd0535be71639E5D1d1c30ae1C6bD4C"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is proven the funds become available for withdrawal on L1. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[],"references":[{"text":"PolygonZkEvmBridgeV2.sol - Etherscan source code, claimAsset function","href":"https://etherscan.io/address/0x0FeB850B183C57534b56b7d56520133C8f9BDB65"}]}]},"permissions":[{"name":"Sequencer","accounts":[{"address":"0xAF9d27ffe4d51eD54AC8eEc78f2785D7E11E5ab1","type":"EOA"}],"description":"Its sole purpose and ability is to submit transaction batches. In case they are unavailable users cannot rely on the force batch mechanism because it is currently disabled."},{"name":"Proposer (Trusted Aggregator)","accounts":[{"address":"0x6329Fe417621925C81c16F9F9a18c203C21Af7ab","type":"EOA"},{"address":"0x20A53dCb196cD2bcc14Ece01F358f1C849aA51dE","type":"EOA"}],"description":"The trusted proposer (called Aggregator) provides ZK proofs for all the supported systems. In case they are unavailable a mechanism for users to submit proofs on their own exists, but is behind a 5d delay for proving and a 5d delay for finalizing state proven in this way. These delays can only be lowered except during the emergency state."},{"name":"SecurityCouncil","description":"This is a Gnosis Safe with 6 / 8 threshold.  The Security Council is a multisig that can be used to trigger the emergency state which pauses bridge functionality, restricts advancing system state and removes the upgradeability delay.","accounts":[{"address":"0x37c58Dfa7BF0A165C5AAEdDf3e2EdB475ac6Dcb6","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xFe45baf0F18c207152A807c1b05926583CFE2e4b","type":"EOA"},{"address":"0xaF46a0ddf80DFFB49C87656625E65A37499B261D","type":"EOA"},{"address":"0xBDc235cC9d6Baa641c5ae306bc83962475A5FEFf","type":"EOA"},{"address":"0x4c1665d6651ecEfa59B9B3041951608468b18891","type":"EOA"},{"address":"0x3ab9f4b964eE665F7CDf1d65f1cEEc6196B0D622","type":"EOA"},{"address":"0x49c15936864690bCd6af0ecaca8E874adFF30E86","type":"EOA"},{"address":"0x9F7dfAb2222A473284205cdDF08a677726d786A0","type":"EOA"},{"address":"0x21887c89368bf918346c62460e0c339113801C28","type":"EOA"}]},{"name":"Forced Batcher","accounts":[{"address":"0x491619874b866c3cDB7C8553877da223525ead01","type":"EOA"}],"description":"Sole account allowed to submit forced transactions. If this address is the zero address, anyone can submit forced transactions."},{"name":"RollupManagerAdminMultisig","description":"This is a Gnosis Safe with 2 / 3 threshold.  Admin of the PolygonRollupManager contract, can set core system parameters like timeouts and aggregator as well as deactivate emergency state. They can also upgrade the XLayerValidium contracts, but are restricted by a 10d delay unless rollup is put in the Emergency State.","accounts":[{"address":"0x242daE44F5d8fb54B198D03a94dA45B5a4413e21","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x4c1665d6651ecEfa59B9B3041951608468b18891","type":"EOA"},{"address":"0xA0B02B28920812324f1cC3255bd8840867d3f227","type":"EOA"},{"address":"0xEad77b01ea770839F7f576Cd1516Ff6A298d9dB2","type":"EOA"}]},{"name":"LocalAdmin","accounts":[{"address":"0x491619874b866c3cDB7C8553877da223525ead01","type":"EOA"}],"description":"Admin of the XLayerValidium contract, can set core system parameters like timeouts, sequencer, activate forced transactions and update the DA mode."},{"name":"DACProxyAdminOwner","accounts":[{"address":"0xE4c5BFaddbf21a1F35AE66F180F78822078FBfDE","type":"EOA"}],"description":"Owner of the XLayerValidiumDAC's ProxyAdmin. Can upgrade the contract."}],"contracts":{"addresses":[{"name":"XLayerValidiumDAC","address":"0x05652Ec92366F3C2255991a265c499E01Ba58e6a","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x1e37EA18e9515db29b3E94A00eD31484A3130204"],"implementations":["0xd620Ca1ad5c3888e4521c3374cE4088Cb78079b8"]},"chain":"ethereum","description":"Validium committee contract that allows the admin to setup the members of the committee and stores the required amount of signatures threshold.","upgradableBy":["DACProxyAdminOwner"],"upgradeDelay":"No delay"},{"name":"XLayerValidium","address":"0x2B0ee28D4D51bC9aDde5E58E295873F61F4a0507","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2"],"implementations":["0x10D296e8aDd0535be71639E5D1d1c30ae1C6bD4C"]},"chain":"ethereum","description":"The main contract of the X Layer. Contains sequenced transaction batch hashes and forced transaction logic.","upgradableBy":["RollupManagerAdminMultisig"],"upgradeDelay":"None","upgradeConsiderations":"Even though there is a 10d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d."},{"name":"XLayerVerifier","address":"0x0775e11309d75aA6b0967917fB0213C5673eDf81","chain":"ethereum","description":"An autogenerated contract that verifies ZK proofs in the PolygonRollupManager system."},{"name":"PolygonRollupManager","address":"0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["0x3b82Da772c825283d85d5d6717A77C6Ff582053b"]},"chain":"ethereum","description":"It defines the rules of the system including core system parameters, permissioned actors as well as emergency procedures. The emergency state can be activated either by the Security Council, by proving a soundness error or by presenting a sequenced batch that has not been aggregated before a 7d timeout. This contract receives L2 state roots as well as ZK proofs.","upgradableBy":["RollupManagerAdminMultisig"],"upgradeDelay":"None","upgradeConsiderations":"Even though there is a 10d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d."},{"name":"Bridge","address":"0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["0x0FeB850B183C57534b56b7d56520133C8f9BDB65"]},"chain":"ethereum","description":"The escrow contract for user funds. It is mirrored on the L2 side and can be used to transfer both ERC20 assets and arbitrary messages. To transfer funds a user initiated transaction on both sides is required.","upgradableBy":["RollupManagerAdminMultisig"],"upgradeDelay":"None","upgradeConsiderations":"Even though there is a 10d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d."},{"name":"GlobalExitRootV2","address":"0x580bda1e7A0CFAe92Fa7F6c20A3794F169CE3CFb","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x0F99738B2Fc14D77308337f3e2596b63aE7BCC4A"],"implementations":["0x2E38cD55163137483E30580Cb468C2dFf1d85077"]},"chain":"ethereum","description":"Synchronizes deposit and withdraw merkle trees across L1 and the L2s. The global root from this contract is injected into the L2 contracts.","upgradableBy":["RollupManagerAdminMultisig"],"upgradeDelay":"None","upgradeConsiderations":"Even though there is a 10d Timelock for upgrades, forced transactions are disabled. Even if they were to be enabled, user withdrawals can be censored up to 15d."},{"name":"Timelock","address":"0xEf1462451C30Ea7aD8555386226059Fe837CA4EF","chain":"ethereum","description":"Contract upgrades have to go through a 10d timelock unless the Emergency State is activated. It can also add rollup types that can be used to upgrade verifier contracts of existing systems. It is controlled by the ProxyAdminOwner."}],"references":[{"text":"State injections - stateRoot and exitRoot are part of the validity proof input.","href":"https://etherscan.io/address/0x3b82Da772c825283d85d5d6717A77C6Ff582053b"}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is a 10d delay on code upgrades."}]},"milestones":[{"name":"X Layer Public Launch","link":"https://x.com/XLayerOfficial/status/1780056275898048562","date":"2024-04-16","description":"X Layer is now accessible to everyone.","type":"general"}],"knowledgeNuggets":[],"badges":["DAC","AggLayer","PolygonCDK","EVM"]}