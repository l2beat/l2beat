{"type":"layer2","id":"starknet","display":{"name":"Starknet","slug":"starknet","provider":"Starknet","description":"Starknet is a general purpose ZK Rollup based on STARKs and the Cairo VM.","purposes":["Universal"],"category":"ZK Rollup","links":{"apps":["https://starkgate.starknet.io/"],"websites":["https://starknet.io/","https://starkware.co/starknet/","https://starkware.co/ecosystem/","https://community.starknet.io/"],"documentation":["https://starknet.io/learn/what-is-starknet"],"explorers":["https://voyager.online/","https://starkscan.co/"],"repositories":["https://github.com/starkware-libs"],"socialMedia":["https://discord.com/invite/qypnmzkhbc","https://twitter.com/StarkWareLtd","https://medium.com/starkware","https://starkware.co/","https://youtube.com/channel/UCnDWguR8mE2oDBsjhQkgbvg"]},"activityDataSource":"Blockchain RPC","liveness":{"explanation":"Starknet is a ZK rollup that posts state diffs to the L1. For a transaction to be considered final, the state diffs have to be submitted and validity proof should be generated, submitted, and verified. Proofs are aggregated with other projects using SHARP and state updates have to refer to proved claims."},"finality":{"finalizationPeriod":0},"costsWarning":{"sentiment":"warning","content":"The proof verification costs are shared among all projects that use the Starkware SHARP verifier. Therefore, Starknet’s costs represent a rough estimate, and we are working to provide more accurate values."}},"config":{"associatedTokens":["STRK"],"escrows":[{"address":"0xae0Ee0A63A2cE6BaeEFFE56e7714FB4EFE48D419","newVersion":true,"sinceTimestamp":1647857148,"tokens":["ETH"],"contract":{"address":"0xae0Ee0A63A2cE6BaeEFFE56e7714FB4EFE48D419","upgradeability":{"proxyType":"StarkWare proxy","admins":["0xC91EC49Ad0843E5Cca55b4c4e5f68de54F6cB2Ae","0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec"],"implementations":["0x95ff25A59Dc9c5A41cF0709dc916041E5dC7fd95"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for ETH. There is no bridge cap.","upgradableBy":["StarkGate ETH owner","BridgeMultisig"],"upgradeDelay":"3d"},"chain":"ethereum","includeInTotal":true},{"address":"0x0437465dfb5B79726e35F08559B0cBea55bb585C","newVersion":true,"sinceTimestamp":1652101033,"tokens":["DAI"],"contract":{"address":"0x0437465dfb5B79726e35F08559B0cBea55bb585C","chain":"ethereum","description":"DAI Vault for custom DAI Gateway managed by MakerDAO. The current bridge cap is 5.00 M DAI."},"chain":"ethereum","includeInTotal":true},{"address":"0x283751A21eafBFcD52297820D27C1f1963D9b5b4","newVersion":true,"sinceTimestamp":1657137600,"tokens":["WBTC"],"contract":{"address":"0x283751A21eafBFcD52297820D27C1f1963D9b5b4","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for WBTC. There is no bridge cap.","upgradableBy":["BridgeMultisig"],"upgradeDelay":"3d"},"chain":"ethereum","includeInTotal":true},{"address":"0xF6080D9fbEEbcd44D89aFfBFd42F098cbFf92816","newVersion":true,"sinceTimestamp":1657137639,"tokens":["USDC"],"contract":{"address":"0xF6080D9fbEEbcd44D89aFfBFd42F098cbFf92816","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for USDC. There is no bridge cap.","upgradableBy":["BridgeMultisig"]},"chain":"ethereum","includeInTotal":true},{"address":"0xbb3400F107804DFB482565FF1Ec8D8aE66747605","newVersion":true,"sinceTimestamp":1657137615,"tokens":["USDT"],"contract":{"address":"0xbb3400F107804DFB482565FF1Ec8D8aE66747605","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for USDT. There is no bridge cap.","upgradableBy":["BridgeMultisig"],"upgradeDelay":"3d"},"chain":"ethereum","includeInTotal":true},{"address":"0xBf67F59D2988A46FBFF7ed79A621778a3Cd3985B","newVersion":true,"sinceTimestamp":1657137623,"tokens":["wstETH"],"contract":{"address":"0xBf67F59D2988A46FBFF7ed79A621778a3Cd3985B","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for wstETH. There is no bridge cap.","upgradableBy":["BridgeMultisig"],"upgradeDelay":"3d"},"chain":"ethereum","includeInTotal":true},{"address":"0xcf58536D6Fab5E59B654228a5a4ed89b13A876C2","newVersion":true,"sinceTimestamp":1657137623,"tokens":["rETH"],"contract":{"address":"0xcf58536D6Fab5E59B654228a5a4ed89b13A876C2","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for rETH. There is no bridge cap.","upgradableBy":["BridgeMultisig"],"upgradeDelay":"3d"},"chain":"ethereum","includeInTotal":true},{"address":"0xf76e6bF9e2df09D0f854F045A3B724074dA1236B","newVersion":true,"sinceTimestamp":1698061847,"tokens":["UNI"],"contract":{"address":"0xf76e6bF9e2df09D0f854F045A3B724074dA1236B","upgradeability":{"proxyType":"StarkWare proxy","admins":["0xF689688640E88160c07C6FC5cc63039F29EDe86b"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for UNI. There is no bridge cap.","upgradableBy":["StarkGate UNI owner"],"upgradeDelay":"0s"},"chain":"ethereum","includeInTotal":true},{"address":"0xDc687e1E0B85CB589b2da3C47c933De9Db3d1ebb","newVersion":true,"sinceTimestamp":1692689255,"tokens":["FRAX"],"contract":{"address":"0xDc687e1E0B85CB589b2da3C47c933De9Db3d1ebb","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for FRAX. There is no bridge cap.","upgradableBy":["StarkGate FRAX owner"],"upgradeDelay":"0s"},"chain":"ethereum","includeInTotal":true},{"address":"0x66ba83ba3D3AD296424a2258145d9910E9E40B7C","newVersion":true,"sinceTimestamp":1692689267,"tokens":["FXS"],"contract":{"address":"0x66ba83ba3D3AD296424a2258145d9910E9E40B7C","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for FXS. There is no bridge cap.","upgradableBy":["StarkGate FXS owner"],"upgradeDelay":"0s"},"chain":"ethereum","includeInTotal":true},{"address":"0xd8E8531fdD446DF5298819d3Bc9189a5D8948Ee8","newVersion":true,"sinceTimestamp":1692689279,"tokens":["sfrxETH"],"contract":{"address":"0xd8E8531fdD446DF5298819d3Bc9189a5D8948Ee8","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for sfrxETH. There is no bridge cap.","upgradableBy":["StarkGate sfrxETH owner"],"upgradeDelay":"0s"},"chain":"ethereum","includeInTotal":true},{"address":"0xF3F62F23dF9C1D2C7C63D9ea6B90E8d24c7E3DF5","newVersion":true,"sinceTimestamp":1688046071,"tokens":["LUSD"],"contract":{"address":"0xF3F62F23dF9C1D2C7C63D9ea6B90E8d24c7E3DF5","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x5751a83170BeA11fE7CdA5D599B04153C021f21A"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for LUSD. There is no bridge cap.","upgradableBy":["StarkGate LUSD owner"],"upgradeDelay":"0s"},"chain":"ethereum","includeInTotal":true},{"address":"0x023A2aAc5d0fa69E3243994672822BA43E34E5C9","newVersion":true,"sinceTimestamp":1687524587,"tokens":["LORDS"],"contract":{"address":"0x023A2aAc5d0fa69E3243994672822BA43E34E5C9","chain":"ethereum","description":"StarkGate bridge for LORDS."},"chain":"ethereum","includeInTotal":true},{"address":"0xcE5485Cfb26914C5dcE00B9BAF0580364daFC7a4","newVersion":true,"sinceTimestamp":1704905879,"tokens":["STRK"],"contract":{"address":"0xcE5485Cfb26914C5dcE00B9BAF0580364daFC7a4","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec"],"implementations":["0x179FA59e4D19ac7C7b4e3daa0Cd6557a553656A0"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for STRK. There is no bridge cap.","upgradableBy":["BridgeMultisig"],"upgradeDelay":"3d"},"chain":"ethereum","includeInTotal":true},{"address":"0xF5b6Ee2CAEb6769659f6C091D209DfdCaF3F69Eb","newVersion":true,"sinceTimestamp":1707322643,"tokens":["EKUBO","ZEND","NSTR"],"contract":{"address":"0xF5b6Ee2CAEb6769659f6C091D209DfdCaF3F69Eb","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x5751a83170BeA11fE7CdA5D599B04153C021f21A"],"implementations":["0x594cCaDF93F860dc42Cf9fd7bCea47Ff4d135D7A"],"immutable":false},"chain":"ethereum","description":"StarkGate bridge for EKUBO, ZEND, NSTR (and potentially other tokens listed via StarkgateManager). There is no bridge cap.","upgradableBy":["StarkGate MultiBridge Admin"],"upgradeDelay":"0s"},"chain":"ethereum","includeInTotal":true}],"transactionApi":{"type":"starknet","defaultUrl":"https://starknet-mainnet.public.blastapi.io","defaultCallsPerMinute":120},"finality":{"lag":0,"type":"Starknet","minTimestamp":1724856347,"stateUpdate":"disabled"},"trackedTxs":[{"uses":[{"type":"liveness","subtype":"proofSubmissions"},{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1636978914,"untilTimestamp":1702921247,"programHashes":["1865367024509426979036104162713508294334262484507712987283009063059134893433"]},"_hackCostMultiplier":0.7},{"uses":[{"type":"liveness","subtype":"proofSubmissions"},{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1702921247,"untilTimestamp":1704855731,"programHashes":["54878256403880350656938046611252303365750679698042371543935159963667935317"]},"_hackCostMultiplier":0.7},{"uses":[{"type":"liveness","subtype":"proofSubmissions"},{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1704855731,"untilTimestamp":1710252995,"programHashes":["2479841346739966073527450029179698923866252973805981504232089731754042431018"]},"_hackCostMultiplier":0.7},{"uses":[{"type":"liveness","subtype":"proofSubmissions"},{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1710252995,"untilTimestamp":1710625271,"programHashes":["109586309220455887239200613090920758778188956576212125550190099009305121410"]},"_hackCostMultiplier":0.65},{"uses":[{"type":"liveness","subtype":"proofSubmissions"},{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1710625271,"untilTimestamp":1724856227,"programHashes":["3383082961563516565935611087683915026448707331436034043529592588079494402084"]},"_hackCostMultiplier":0.65},{"uses":[{"type":"liveness","subtype":"proofSubmissions"},{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1724856227,"programHashes":["853638403225561750106379562222782223909906501242604214771127703946595519856"]},"_hackCostMultiplier":0.65},{"uses":[{"type":"liveness","subtype":"proofSubmissions"},{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"sharpSubmission","sinceTimestamp":1724856227,"programHashes":["1161178844461337253856226043908368523817098764221830529880464854589141231910"]},"_hackCostMultiplier":0.65},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4","selector":"0x77552641","functionSignature":"function updateState(uint256[] programOutput, uint256 onchainDataHash, uint256 onchainDataSize)","sinceTimestamp":1636978914}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4","selector":"0xb72d42a1","functionSignature":"function updateStateKzgDA(uint256[] programOutput, bytes kzgProof)","sinceTimestamp":1710252995,"untilTimestamp":1724856227}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4","selector":"0x507ee528","functionSignature":"function updateStateKzgDA(uint256[] programOutput, bytes[] kzgProofs)","sinceTimestamp":1724856227}},{"uses":[{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xFD14567eaf9ba941cB8c8a94eEC14831ca7fD1b4","selector":"0x5578ceae","functionSignature":"function registerContinuousMemoryPage(uint256 startAddr,uint256[] values,uint256 z,uint256 alpha,uint256 prime)","sinceTimestamp":1678095635,"untilTimestamp":1706789063},"_hackCostMultiplier":0.9},{"uses":[{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x40864568f679c10aC9e72211500096a5130770fA","selector":"0x5578ceae","functionSignature":"function registerContinuousMemoryPage(uint256 startAddr,uint256[] values,uint256 z,uint256 alpha,uint256 prime)","sinceTimestamp":1706789063,"untilTimestamp":1710342000},"_hackCostMultiplier":0.9},{"uses":[{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0x40864568f679c10aC9e72211500096a5130770fA","selector":"0x5578ceae","functionSignature":"function registerContinuousMemoryPage(uint256 startAddr,uint256[] values,uint256 z,uint256 alpha,uint256 prime)","sinceTimestamp":1710342000,"untilTimestamp":1722197315},"_hackCostMultiplier":0.5},{"uses":[{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xe583BcDE0160b637330b27a3ea1F3c02ba2eC460","selector":"0x5578ceae","functionSignature":"function registerContinuousMemoryPage(uint256 startAddr,uint256[] values,uint256 z,uint256 alpha,uint256 prime)","sinceTimestamp":1722197315},"_hackCostMultiplier":0.5},{"uses":[{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"functionCall","address":"0xe583BcDE0160b637330b27a3ea1F3c02ba2eC460","selector":"0x739ef303","functionSignature":"function registerContinuousPageBatch((uint256 startAddr, uint256[] values, uint256 z, uint256 alpha, uint256 prime)[] memoryPageEntries)","sinceTimestamp":1722197315},"_hackCostMultiplier":0.5},{"uses":[{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"functionCall","address":"0xDEf8A3b280A54eE7Ed4f72E1c7d6098ad8df44fb","selector":"0xe85a6a28","functionSignature":"function verifyFRI(uint256[] proof,uint256[] friQueue,uint256 evaluationPoint,uint256 friStepSize,uint256 expectedRoot)","sinceTimestamp":1706772791,"untilTimestamp":1710342000},"_hackCostMultiplier":0.7},{"uses":[{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"functionCall","address":"0xDEf8A3b280A54eE7Ed4f72E1c7d6098ad8df44fb","selector":"0xe85a6a28","functionSignature":"function verifyFRI(uint256[] proof,uint256[] friQueue,uint256 evaluationPoint,uint256 friStepSize,uint256 expectedRoot)","sinceTimestamp":1710342000,"untilTimestamp":1722197315},"_hackCostMultiplier":0.65},{"uses":[{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"functionCall","address":"0x30EfaAA99f8eFe310D9FdC83072e2a04c093d400","selector":"0xe85a6a28","functionSignature":"function verifyFRI(uint256[] proof,uint256[] friQueue,uint256 evaluationPoint,uint256 friStepSize,uint256 expectedRoot)","sinceTimestamp":1722197315},"_hackCostMultiplier":0.65},{"uses":[{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"functionCall","address":"0x634DCf4f1421Fc4D95A968A559a450ad0245804c","selector":"0x3fe317a6","functionSignature":"function verifyMerkle(uint256[] merkleView,uint256[] initialMerkleQueue,uint256 height,uint256 expectedRoot)","sinceTimestamp":1706767355,"untilTimestamp":1710342000},"_hackCostMultiplier":0.7},{"uses":[{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"functionCall","address":"0x634DCf4f1421Fc4D95A968A559a450ad0245804c","selector":"0x3fe317a6","functionSignature":"function verifyMerkle(uint256[] merkleView,uint256[] initialMerkleQueue,uint256 height,uint256 expectedRoot)","sinceTimestamp":1710342000,"untilTimestamp":1722197315},"_hackCostMultiplier":0.65},{"uses":[{"type":"l2costs","subtype":"proofSubmissions"}],"query":{"formula":"functionCall","address":"0x32a91Ff604AB2aDCd832e91D68b2f3f25358FdAd","selector":"0x3fe317a6","functionSignature":"function verifyMerkle(uint256[] merkleView,uint256[] initialMerkleQueue,uint256 height,uint256 expectedRoot)","sinceTimestamp":1722197315},"_hackCostMultiplier":0.65}]},"dataAvailability":{"layer":{"value":"Ethereum (blobs or calldata)","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs."},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted on chain."},"mode":"State diffs"},"riskView":{"stateValidation":{"value":"ZK proofs (ST)","description":"zkSTARKS are zero knowledge proofs that ensure state correctness.","sentiment":"good","definingMetric":null,"sources":[{"contract":"Starknet","references":["https://etherscan.io/address/0x47103A9b801eB6a63555897d399e4b7c1c8Eb5bC#code"]}]},"dataAvailability":{"value":"Onchain (SD)","description":"All of the data (SD = state diffs) needed for proof construction is published onchain.","sentiment":"good","definingMetric":null,"sources":[{"contract":"Starknet","references":["https://etherscan.io/address/0x47103A9b801eB6a63555897d399e4b7c1c8Eb5bC#code"]}]},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","definingMetric":0},"sequencerFailure":{"value":"No mechanism","description":"There is no mechanism to have transactions be included if the sequencer is down or censoring.","sentiment":"bad","sources":[{"contract":"Starknet","references":["https://etherscan.io/address/0x47103A9b801eB6a63555897d399e4b7c1c8Eb5bC#code"]}]},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","definingMetric":null},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."]},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":true,"description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code. [View code](https://github.com/NethermindEth/juno)"}]},{"stage":"Stage 1","requirements":[{"satisfied":true,"description":"A complete and functional proof system is deployed."},{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."}]},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to on-chain provable bugs provide less than 30d to exit."}]}]},"technology":{"stateCorrectness":{"name":"Validity proofs ensure state correctness","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","risks":[],"references":[{"text":"What is Starknet","href":"https://starkware.co/starknet/"}]},"newCryptography":{"name":"Zero knowledge STARK cryptography is used","description":"Despite their production use zkSTARKs proof systems are still relatively new, complex and they rely on the proper implementation of the polynomial constraints used to check validity of the Execution Trace.","risks":[{"category":"Funds can be lost if","text":"the proof system is implemented incorrectly."}],"references":[{"text":"STARK Core Engine Deep Dive","href":"https://medium.com/starkware/starkdex-deep-dive-the-stark-core-engine-497942d0f0ab"}]},"dataAvailability":{"name":"All data required to reconstruct rollup state is published on chain","description":"State diffs are publish on-chain as blob or calldata on every state update. The state diffs contain information on every contact whose storage was updated, and additional information on contract deployments. From diffs full system state can be recovered. Contracts' code is not published on L1, but can be trustlessly verified if available elsewhere.","risks":[],"references":[{"text":"On-Chain Data - Starknet documentation","href":"https://docs.starknet.io/documentation/architecture_and_concepts/Network_Architecture/on-chain-data/"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system. Typically, the Operator is the hot wallet of the Starknet service submitting state updates for which proofs have been already submitted and verified.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[]},"forceTransactions":{"name":"Users can't force any transaction","description":"There is no general mechanism to force the sequencer to include the transaction.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions."}],"references":[{"text":"Censorship resistance of Starknet - Forum Discussion","href":"https://community.starknet.io/t/censorship-resistance/196"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is proven the funds become available for withdrawal on L1. Finally the user submits an L1 transaction to claim the funds. This transaction does not require a merkle proof. Note that the withdrawal request can be censored by the Sequencer.","risks":[{"category":"Funds can be frozen if","text":"the operator censors withdrawal transaction."}],"references":[{"text":"Withdrawing is based on l2 to l1 messages - Starknet documentation","href":"https://book.cairo-lang.org/ch16-04-L1-L2-messaging.html#sending-messages-from-starknet-to-ethereum"}]},{"name":"Emergency exit","risks":[],"description":"There is no generic escape hatch mechanism as Starknet cannot be forced by users into a frozen state. Note that a freezing mechanism on L2, to be secure, requires anti-censorship protection.","references":[]}]},"stateDerivation":{"nodeSoftware":"The [Juno](https://github.com/NethermindEth/juno) node software can be used to reconstruct the L2 state entirely from L1. The feature has not been released yet, but can be found in this [PR](https://github.com/NethermindEth/juno/pull/1335).","compressionScheme":"Starknet doesn't use any compression scheme.","genesisState":"There is no non-empty genesis state.","dataFormat":"The data format has been updated with different versions, and the full specification can be found [here](https://docs.starknet.io/documentation/architecture_and_concepts/Network_Architecture/on-chain-data/)."},"stateValidation":{"description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","categories":[{"title":"Proven Program","description":"The source code of the Starknet OS can be found [here](https://github.com/starkware-libs/cairo-lang/tree/v0.13.1/src/starkware/starknet/core/os). The source code of the bootloader can be found [here](https://github.com/starkware-libs/cairo-lang/blob/v0.13.1/src/starkware/cairo/bootloaders/bootloader/bootloader.cairo).","risks":[{"category":"Funds can be lost if","text":"the proof system is implemented incorrectly."}]}],"proofVerification":{"shortDescription":"Starknet is a ZK-CairoVM rollup on Ethereum.","aggregation":true,"requiredTools":[],"verifiers":[{"name":"SHARPVerifier","description":"Starknet utilizes STARKs for their system. The protocol makes use of recursive aggregation across multiple projects that share the same onchain verifier. SHARP stands for SHARed Prover. Different programs are represented onchain with different program hashes.","verified":"no","contractAddress":"0x9fb7F48dCB26b7bFA4e580b2dEFf637B13751942","chainId":1,"subVerifiers":[{"name":"Main bootloader","proofSystem":"-","mainArithmetization":"-","mainPCS":"-","trustedSetup":"-","link":"https://github.com/starkware-libs/cairo-lang/blob/v0.13.1/src/starkware/cairo/bootloaders/bootloader/bootloader.cairo"},{"name":"Simple bootloader","proofSystem":"-","mainArithmetization":"-","mainPCS":"-","trustedSetup":"-","link":"https://github.com/starkware-libs/cairo-lang/blob/v0.13.1/src/starkware/cairo/bootloaders/simple_bootloader/simple_bootloader.cairo"},{"name":"Applicative bootloader","proofSystem":"-","mainArithmetization":"-","mainPCS":"-","trustedSetup":"-","link":"https://github.com/starkware-libs/cairo-lang/blob/v0.13.2a0/src/starkware/cairo/bootloaders/applicative_bootloader/applicative_bootloader.cairo"},{"name":"Recursive Cairo verifier","proofSystem":"STARK","mainArithmetization":"AIR","mainPCS":"FRI","trustedSetup":"None","link":"https://github.com/starkware-libs/cairo-lang/tree/v0.13.1/src/starkware/cairo/cairo_verifier/layouts/all_cairo"},{"name":"StarknetOS","proofSystem":"-","mainArithmetization":"-","mainPCS":"-","trustedSetup":"-","link":"https://github.com/starkware-libs/cairo-lang/tree/v0.13.1/src/starkware/starknet/core/os"}]}]}},"contracts":{"addresses":[{"name":"Starknet","address":"0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4","upgradeability":{"proxyType":"StarkWare proxy","admins":["0xD5fB66CaEE881367Df4409B17Fd53a2Ef0D9B263","0x83C0A700114101D1283D1405E2c8f21D3F03e988"],"implementations":["0x47103A9b801eB6a63555897d399e4b7c1c8Eb5bC"],"immutable":false},"chain":"ethereum","description":"Starknet contract receives (verified) state roots from the Sequencer, allows users to read L2 -> L1 messages and send L1 -> L2 message.","upgradeDelay":"No delay","upgradableBy":["Starknet Proxy Governors"]},{"name":"SHARPVerifierProxy","address":"0x47312450B3Ac8b5b8e247a6bB6d523e7605bDb60","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x3DE55343499f59CEB3f1dE47F2Cd7Eab28F2F5C6","0x21F9eC47b19d95b5C2DDFB6Ae5D4F92fAdacAEc4"],"implementations":["0xD4C4044ACa68ebBcB81B13cC2699e1Bca2d3F458"],"immutable":false},"chain":"ethereum","description":"CallProxy for GpsStatementVerifier."},{"name":"SHARPVerifier","address":"0x9fb7F48dCB26b7bFA4e580b2dEFf637B13751942","chain":"ethereum","description":"Starkware SHARP verifier used collectively by Starknet, Sorare, ImmutableX, Apex, Myria, rhino.fi and Canvas Connect. It receives STARK proofs from the Prover attesting to the integrity of the Execution Trace of these Programs including correctly computed state root which is part of the Program Output."},{"name":"FriStatementContract","address":"0x30EfaAA99f8eFe310D9FdC83072e2a04c093d400","chain":"ethereum","description":"Part of STARK Verifier."},{"name":"MerkleStatementContract","address":"0x32a91Ff604AB2aDCd832e91D68b2f3f25358FdAd","chain":"ethereum","description":"Part of STARK Verifier."},{"name":"CairoBootloaderProgram","address":"0x58600A1Dc51dcF7D4F541a8f1F5C6c6AA86cc515","chain":"ethereum","description":"Part of STARK Verifier."},{"name":"MemoryPageFactRegistry","address":"0xe583BcDE0160b637330b27a3ea1F3c02ba2eC460","chain":"ethereum","description":"MemoryPageFactRegistry is one of the many contracts used by SHARP verifier. This one is important as it registers all necessary on-chain data."},{"name":"OldMemoryPageFactRegistry","address":"0xFD14567eaf9ba941cB8c8a94eEC14831ca7fD1b4","chain":"ethereum","description":"Same as MemoryPageFactRegistry but stores facts proved by the old SHARP Verifier, used as a fallback."},{"name":"L1DaiGateway","address":"0x9F96fE0633eE838D0298E8b8980E6716bE81388d","chain":"ethereum","description":"Custom DAI Gateway, main entry point for users depositing DAI to L2 where \"canonical\" L2 DAI token managed by MakerDAO will be minted. Managed by MakerDAO."},{"name":"StarkgateManager","address":"0x0c5aE94f8939182F2D06097025324D1E537d5B60","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x5751a83170BeA11fE7CdA5D599B04153C021f21A"],"implementations":["0x64608BDF1867110f622391196989bF4cE37BBb33"],"immutable":false},"chain":"ethereum","description":"This contract allows the permissionless creation and configuration of StarkGate token escrows. Tokens can also be blacklisted for creation, and already actively bridged tokens can be deactivated from depositing by a designated TokenAdmin.","upgradableBy":["StarkGate MultiBridge Admin"],"upgradeDelay":"0s"},{"name":"StarkgateRegistry","address":"0x1268cc171c54F2000402DfF20E93E60DF4c96812","upgradeability":{"proxyType":"StarkWare proxy","admins":["0x5751a83170BeA11fE7CdA5D599B04153C021f21A"],"implementations":["0x642F04899B6cA155c2a5eAdD4e4ed634f1B07Dd7"],"immutable":false},"chain":"ethereum","description":"A central registry contract to map token addresses to their StarkGate bridge contract.","upgradableBy":["StarkGate MultiBridge Admin"],"upgradeDelay":"0s"}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"upgradesAndGovernance":"\nThe Upgrading mechanism of Starknet follows a similar scheme for all of their smart contracts. A contract initializes with the creator of the contract as a Governor, who can then nominate or remove other Governors allowing them to call restricted governor functions.\n\nThe Starknet core contract is upgradable by 2 appointed `Starknet Proxy Governors`: A Proxy multisig with a 2 / 5 threshold and an EOA. Implementations can be upgraded without delay, thus users are not provided with an exit window in case of unwanted upgrades.\n\n`Starknet Implementation Governors` have the authority to execute governed functions that modify contract parameters without delay. These actions encompass registering/removing Operators, specifying the program and config hash, or setting the Message Cancellation Delay between L1 and L2. Currently it is governed by a Multisig with a 2 / 5 threshold and an EOA. The verifier address is set upon initialization of the Starknet Implementation contract.\n\nVia the proxy contracts, the `SHARP Verifier Governors` can upgrade the GPSStatement Verifier implementation. It is important to note that the state is also maintained in the implementation contract, rather than in the proxy itself. An upgrade to the Verifier could potentially introduce code that approves fraudulent states. Currently, there is no delay before any upgrade takes effect.\n\nThe StarkGate bridge escrows are mostly governed and upgraded by a Bridge Multisig, others by different owners. (see Permissions section)\n\nAt present, the StarkNet Foundation hosts voting for STRK token holders (or their delegates) regarding protocol updates to reflect community intent, however, there is no direct authority to implement the execution of these upgrades.\n","permissions":[{"name":"Starknet Proxy Governors","accounts":[{"address":"0xD5fB66CaEE881367Df4409B17Fd53a2Ef0D9B263","type":"EOA"},{"address":"0x83C0A700114101D1283D1405E2c8f21D3F03e988","type":"MultiSig"}],"description":"Can upgrade implementation of the system, potentially gaining access to all funds stored in the bridge. Can also upgrade implementation of the StarknetCore contract, potentially allowing fraudulent state to be posted. Currently there is 0s delay before the upgrade."},{"name":"ProxyMultisig","description":"This is a Gnosis Safe with 2 / 5 threshold.  One of Proxy Governors.","accounts":[{"address":"0x83C0A700114101D1283D1405E2c8f21D3F03e988","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x804d60CB1ade94511f7915A2062948685Ca8C81f","type":"EOA"},{"address":"0x2871B956bC19D25961E9a7519f32D7fDaA21B403","type":"EOA"},{"address":"0x64F4396bb0669C72858Cc50C779b48EB25F45770","type":"EOA"},{"address":"0x59232aC80E6d403b6381393e52f4665ECA328558","type":"EOA"},{"address":"0xCe958D997F4a5824D4d503A128216322C6C223a0","type":"EOA"}]},{"name":"Starknet Implementation Governors","accounts":[{"address":"0x16C8B90390468c1AA81f68B2Fb9fcc3d46e0eA3E","type":"EOA"},{"address":"0x86fD9cA64014b465d17f1bFBBBCFBEC7ebD8b1Bd","type":"MultiSig"}],"description":"The governors are responsible for: appointing operators, changing program hash, changing config hash, changing message cancellation delay. There is no delay on governor actions."},{"name":"SHARP Verifier Governors","accounts":[{"address":"0x3DE55343499f59CEB3f1dE47F2Cd7Eab28F2F5C6","type":"EOA"},{"address":"0x21F9eC47b19d95b5C2DDFB6Ae5D4F92fAdacAEc4","type":"MultiSig"}],"description":"Can upgrade implementation of SHARP Verifier, potentially with code approving fraudulent state. Currently there is 0s delay before the upgrade."},{"name":"SHARPVerifierGovernorMultisig","description":"This is a Gnosis Safe with 2 / 4 threshold.  SHARP Verifier Governor.","accounts":[{"address":"0x21F9eC47b19d95b5C2DDFB6Ae5D4F92fAdacAEc4","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x0405107a60391Eb51821be373ff978115Ee58488","type":"EOA"},{"address":"0x59232aC80E6d403b6381393e52f4665ECA328558","type":"EOA"},{"address":"0xebc8416179fE90854fe8B3f774801165572cfD7F","type":"EOA"},{"address":"0x955B978F3ee7818dA71fA25c676062E6BC462Fec","type":"EOA"}]},{"name":"Operators","accounts":[{"address":"0xFf6B2185E357b6e9136A1b2ca5d7C45765D5c591","type":"EOA"},{"address":"0x2C169DFe5fBbA12957Bdd0Ba47d9CEDbFE260CA7","type":"EOA"}],"description":"Allowed to post state updates. When the operator is down the state cannot be updated."},{"name":"MakerDAO Governance","accounts":[{"address":"0x0a3f6849f78076aefaDf113F5BED87720274dDC0","type":"Contract"}],"description":"In DAI bridge it can set max deposit per bridge and per user. In DAI escrow it can approve token transfers."},{"name":"StarkGate ETH owner","accounts":[{"address":"0xC91EC49Ad0843E5Cca55b4c4e5f68de54F6cB2Ae","type":"EOA"},{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"description":"Can upgrade implementation of the ETH escrow, potentially gaining access to all funds stored in the bridge. Currently there is 3d delay before the upgrade."},{"name":"StarkgateETHSecurityAgentMultisig","description":"This is a Gnosis Safe with 2 / 3 threshold.  Can enable the token withdrawal limit of the Starkgate escrow for ETH.","accounts":[{"address":"0x77Dd0cf03e1cCbDC750c9E5FDc34b8A3671f88c5","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x030ceEE5D4CBc304287234720B11E00f47695755","type":"EOA"},{"address":"0x59232aC80E6d403b6381393e52f4665ECA328558","type":"EOA"},{"address":"0x35FD2dD14D96Ed455356B892cd4b2fCdc7F44a7b","type":"EOA"}]},{"name":"StarkGate WBTC owner","accounts":[{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"description":"Can upgrade implementation of the WBTC escrow, potentially gaining access to all funds stored in the bridge. Currently there is 3d delay before the upgrade."},{"name":"StarkGate USDC owner","accounts":[{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"description":"Can upgrade implementation of the USDC escrow, potentially gaining access to all funds stored in the bridge. Currently there is 3d delay before the upgrade."},{"name":"StarkGate USDT owner","accounts":[{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"description":"Can upgrade implementation of the USDT escrow, potentially gaining access to all funds stored in the bridge. Currently there is 3d delay before the upgrade."},{"name":"StarkGate wstETH owner","accounts":[{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"description":"Can upgrade implementation of the wstETH escrow, potentially gaining access to all funds stored in the bridge. Currently there is 3d delay before the upgrade."},{"name":"StarkGate rETH owner","accounts":[{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"description":"Can upgrade implementation of the rETH escrow, potentially gaining access to all funds stored in the bridge. Currently there is 3d delay before the upgrade."},{"name":"StarkGate UNI owner","accounts":[{"address":"0xF689688640E88160c07C6FC5cc63039F29EDe86b","type":"EOA"}],"description":"Can upgrade implementation of the UNI escrow, potentially gaining access to all funds stored in the bridge. Currently there is 0s delay before the upgrade."},{"name":"StarkGate FRAX owner","accounts":[{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"description":"Can upgrade implementation of the FRAX escrow, potentially gaining access to all funds stored in the bridge. Currently there is 0s delay before the upgrade."},{"name":"StarkGate FXS owner","accounts":[{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"description":"Can upgrade implementation of the FXS escrow, potentially gaining access to all funds stored in the bridge. Currently there is 0s delay before the upgrade."},{"name":"StarkGate sfrxETH owner","accounts":[{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"description":"Can upgrade implementation of the sfrxETH escrow, potentially gaining access to all funds stored in the bridge. Currently there is 0s delay before the upgrade."},{"name":"StarkGate LUSD owner","accounts":[{"address":"0x5751a83170BeA11fE7CdA5D599B04153C021f21A","type":"EOA"}],"description":"Can upgrade implementation of the LUSD escrow, potentially gaining access to all funds stored in the bridge. Currently there is 0s delay before the upgrade."},{"name":"StarkGate MultiBridge Admin","accounts":[{"address":"0x5751a83170BeA11fE7CdA5D599B04153C021f21A","type":"EOA"}],"description":"Can upgrade implementation of the StarkGate MultiBridge escrow, potentially gaining access to all funds stored in the bridge. Is also the TokenAdmin of the StarkgateManager contract, permissioned to blacklist tokens from enrollment, pause deposits on the MultiBridge, and add existing bridges to the Registry contract. Additionally, the StarkgateManager and StarkgateRegistry contracts can be upgraded by this address."},{"name":"BridgeMultisig","description":"This is a Gnosis Safe with 2 / 4 threshold.  Can upgrade the following bridges: FRAX, FXS, sfrxETH, USDT, WBTC, ETH, USDT, and additional permissions on other bridges, like setting the max total balance or activate withdrawal limits.","accounts":[{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xd38831Bcb40bdEE0577Ee064112Fa77a38cAd3F8","type":"EOA"},{"address":"0x59232aC80E6d403b6381393e52f4665ECA328558","type":"EOA"},{"address":"0xCe958D997F4a5824D4d503A128216322C6C223a0","type":"EOA"},{"address":"0x64F4396bb0669C72858Cc50C779b48EB25F45770","type":"EOA"}]},{"name":"StarkGate STRK owner","accounts":[{"address":"0x015277f49d5dD035A5F3Ce34aD5eBfDBaCA0C6Ec","type":"MultiSig"}],"description":"Can upgrade implementation of the STRK escrow, potentially gaining access to all funds stored in the bridge. Currently there is 3d delay before the upgrade."}],"milestones":[{"name":"Starknet starts using blobs","link":"https://twitter.com/Starknet/status/1767915153700290839","date":"2024-03-13T00:00:00Z","description":"Starknet starts publishing data to blobs.","type":"general"},{"name":"Starknet Provisions","link":"https://www.starknet.io/en/content/starknet-provisions-program","date":"2024-02-14T00:00:00Z","description":"Starknet begins allocating $STRK to early contributors and users.","type":"general"},{"name":"Starknet Alpha","link":"https://medium.com/starkware/starknet-alpha-now-on-mainnet-4cf35efd1669","date":"2021-11-29T00:00:00Z","description":"Rollup is live on mainnet, enabling general computation using ZK Rollup technology.","type":"general"},{"name":"StarkGate Alpha","link":"https://medium.com/starkware/starkgate-alpha-35d01d21e3af","date":"2022-05-09T00:00:00Z","description":"Bridge is live on mainnet, serving as gateway between Ethereum and Starknet.","type":"general"}],"badges":["CairoVM","EthereumBlobs","SHARP","Governance"],"knowledgeNuggets":[{"title":"Understand StarkWare #1","url":"https://twitter.com/bkiepuszewski/status/1480473352213041152","thumbnail":"starkware-01.jpg"},{"title":"Understand StarkWare #2","url":"https://twitter.com/bkiepuszewski/status/1480804584926949377","thumbnail":"starkware-02.jpg"},{"title":"Understand StarkWare #3","url":"https://twitter.com/bkiepuszewski/status/1481173682219270146","thumbnail":"starkware-03.jpg"},{"title":"Understand StarkWare #4","url":"https://twitter.com/bkiepuszewski/status/1481521079562784769","thumbnail":"starkware-04.jpg"}]}