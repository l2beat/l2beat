{"type":"layer2","id":"zircuit","isUnderReview":false,"technology":{"stateCorrectness":{"name":"Validity proofs (when available) ensure state correctness, but not DA","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract. Currently proofs are optional and state (by default) is considered optimistically to be valid. Moreover, the system doesnâ€™t check that the transactions applied to the state are the ones published by the sequencer.","risks":[{"category":"Funds can be stolen if","text":"the published state is invalid and the Challenger does not react during the 5h finalization window."}],"references":[{"text":"Verifier.sol - Etherscan source code","href":"https://etherscan.io/address/0x13A06FF21E46BCCd4B03E5Cb04372bB7aE7f2168#code#F1#L9"}]},"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap blobs or calldata. This ensures that it will be available for enough time.","risks":[],"references":[{"text":"Derivation: Batch submission - OP Mainnet specs","href":"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/derivation.md#batch-submission"},{"text":"BatchInbox - Etherscan address","href":"https://etherscan.io/address/0xFF00000000000000000000000000000000048900"},{"text":"OptimismPortal.sol - Etherscan source code, depositTransaction function","href":"https://etherscan.io/address/0xde8B916B972cE3c27C21157Fc2b107c413062b9d#code"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"text":"L2OutputOracle.sol - Etherscan source code, CHALLENGER address","href":"https://etherscan.io/address/0xaaF7FCc7252eb739E0001D8727800deAE04A84f1#code"},{"text":"L2OutputOracle.sol - Etherscan source code, PROPOSER address","href":"https://etherscan.io/address/0xaaF7FCc7252eb739E0001D8727800deAE04A84f1#code"}]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly.","risks":[],"references":[{"text":"Sequencing Window - OP Mainnet Specs","href":"https://github.com/ethereum-optimism/optimism/blob/51eeb76efeb32b3df3e978f311188aa29f5e3e94/specs/glossary.md#sequencing-window"},{"text":"OptimismPortal.sol - Etherscan source code, depositTransaction function","href":"https://etherscan.io/address/0xde8B916B972cE3c27C21157Fc2b107c413062b9d#code"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is finalized the funds become available for withdrawal on L1. The process of block finalization takes a challenge period of 5h to complete. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[{"category":"Funds can be frozen if","text":"the centralized validator goes down. Users cannot produce blocks themselves and exiting the system requires new block production.","isCritical":true}],"references":[{"text":"OptimismPortal.sol - Etherscan source code, proveWithdrawalTransaction function","href":"https://etherscan.io/address/0xde8B916B972cE3c27C21157Fc2b107c413062b9d#code"},{"text":"OptimismPortal.sol - Etherscan source code, finalizeWithdrawalTransaction function","href":"https://etherscan.io/address/0xde8B916B972cE3c27C21157Fc2b107c413062b9d#code"},{"text":"L2OutputOracle.sol - Etherscan source code, PROPOSER check","href":"https://etherscan.io/address/0xaaF7FCc7252eb739E0001D8727800deAE04A84f1#code"}]},{"name":"Forced exit","description":"If the user experiences censorship from the operator with regular exit they can submit their withdrawal requests directly on L1. The system is then obliged to service this request or halt all withdrawals, including forced withdrawals from L1 and regular withdrawals initiated on L2. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular exit.","risks":[],"references":[{"text":"Forced withdrawal from an OP Stack blockchain","href":"https://stack.optimism.io/docs/security/forced-withdrawal/"}]}],"otherConsiderations":[{"name":"EVM compatible smart contracts are supported","description":"OP stack chains are pursuing the EVM Equivalence model. No changes to smart contracts are required regardless of the language they are written in, i.e. anything deployed on L1 can be deployed on L2.","risks":[],"references":[{"text":"Introducing EVM Equivalence","href":"https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306"}]}]},"permissions":[{"name":"ProxyAdmin","accounts":[{"address":"0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257","type":"Contract"}],"description":"Admin of OptimismPortal, SystemConfig, L2OutputOracle, L1ERC721Bridge, OptimismMintableERC20Factory, L1StandardBridge.","chain":"ethereum"},{"name":"Sequencer","accounts":[{"address":"0xAF1E4f6a47af647F87C0Ec814d8032C4a4bFF145","type":"EOA"}],"description":"Central actor allowed to commit L2 transactions to L1.","chain":"ethereum"},{"name":"Proposer","accounts":[{"address":"0xE8C20EA8eF100d7aa3846616E5D07A5aBb067C65","type":"EOA"}],"description":"Central actor allowed to post new L2 state roots to L1.","chain":"ethereum"},{"name":"Challenger","accounts":[{"address":"0xC463EaC02572CC964D43D2414023E2c6B62bAF38","type":"MultiSig"}],"description":"Central actor allowed to delete L2 state roots proposed by a Proposer.","chain":"ethereum"},{"name":"Admins of SuperchainConfig","accounts":[{"address":"0x2c0B27F7C8F083B539557a0bA787041BF22DB276","type":"MultiSig"}],"description":"Admin of the SuperChainConfig, can configure other roles."},{"name":"Monitors of SuperchainConfig","accounts":[{"address":"0xf9Fda17D91383120D59a7c60eAEA8Bd7319B5AE5","type":"EOA"}],"description":"Role set up in SuperChainConfig contract that can lower the withdrawal limit for a user."},{"name":"ZircuitMultiSig","description":"This is a Gnosis Safe with 6 / 8 threshold.  This address is the owner of the following contracts: ProxyAdmin, SystemConfig.       It is also designated as a Challenger and SystemOwner of the L2OutputOracle, meaning it can remove L2 state roots and reconfigure       L2OutputOracle, including changing the Verifier contract.       It can upgrade the bridge implementation potentially gaining access to all funds, and change the sequencer, state root proposer or any other system component (unlimited upgrade power).","accounts":[{"address":"0xC463EaC02572CC964D43D2414023E2c6B62bAF38","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xD8399320cF3a6C7068DaC0C35ea5e74ddd650BD4","type":"EOA"},{"address":"0xC1Ea584f696ABF39044c18D510067f0Ce2cC8966","type":"EOA"},{"address":"0x63cbB9fA540F6249AE4A3576f48BF07609b3a355","type":"EOA"},{"address":"0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4","type":"EOA"},{"address":"0x2F9072d5A8118a60ce41611AEe3e393D107f8Cec","type":"EOA"},{"address":"0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb","type":"EOA"},{"address":"0x62C688FCa995e07632D64A9586896BB7EcD68567","type":"EOA"},{"address":"0x38809210f69ed6204E276d2Be6b15cd530698679","type":"EOA"}]},{"name":"ZircuitGuardianMultiSig","description":"This is a Gnosis Safe with 2 / 5 threshold.  This address is the permissioned guardian of the system, meaning it can pause all withdrawals.       It is also an Admin of the ZircuitSuperchainConfig meaning that it can set roles and permissions for the SuperchainConfig contract.","accounts":[{"address":"0x2c0B27F7C8F083B539557a0bA787041BF22DB276","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0x5E2a81d611e973C2ab1A4cAa71DD4E4Cdb2617d4","type":"EOA"},{"address":"0x63cbB9fA540F6249AE4A3576f48BF07609b3a355","type":"EOA"},{"address":"0x62C688FCa995e07632D64A9586896BB7EcD68567","type":"EOA"},{"address":"0x0D5edFC67Ae336eddC91031FD6402EeAD6350CAb","type":"EOA"},{"address":"0x38809210f69ed6204E276d2Be6b15cd530698679","type":"EOA"}]}],"contracts":{"addresses":[{"name":"L2OutputOracle","address":"0x92Ef6Af472b39F1b363da45E35530c24619245A4","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["0xaaF7FCc7252eb739E0001D8727800deAE04A84f1"]},"chain":"ethereum","description":"The L2OutputOracle contract contains a list of proposed state roots which Proposers assert to be a result of block execution. Currently only the PROPOSER address can submit new state roots.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"OptimismPortal","address":"0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["0xde8B916B972cE3c27C21157Fc2b107c413062b9d"]},"chain":"ethereum","description":"The OptimismPortal contract is the main entry point to deposit funds from L1 to L2. It also allows to prove and finalize withdrawals.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"SystemConfig","address":"0x30F82a1Ca89226E8b8815d6EbB728e3b18a428ff","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["0xA03E2f3Ee6dBa20411A2326D7FA9CCCc6a9A53de"]},"chain":"ethereum","description":"It contains configuration parameters such as the Sequencer address, the L2 gas limit and the unsafe block signer address.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1CrossDomainMessenger","address":"0x2a721cBE81a128be0F01040e3353c3805A5EA091","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["0x6c01D349d3010Cc2953fFA0A5e8d176fc273B834"]},"chain":"ethereum","description":"The L1CrossDomainMessenger (L1xDM) contract sends messages from L1 to L2, and relays messages from L2 onto L1. In the event that a message sent from L1 to L2 is rejected for exceeding the L2 epoch gas limit, it can be resubmitted via this contract's replay function.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1StandardBridge","address":"0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["0xA4ba8bd753695B6121722CBB7cd81c71BCFBCA28"]},"chain":"ethereum","description":"The L1StandardBridge contract is the main entry point to deposit ERC20 tokens from L1 to L2.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1ERC721Bridge","address":"0x994eEb321F9cD79B077a5455fC248c77f30Dd244","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["0x3B21dC86c412aC34fF4c679497b274509D73cDcC"]},"chain":"ethereum","description":"The L1ERC721Bridge contract is used to bridge ERC-721 tokens from L1 to L2.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"Verifier","address":"0x6BCe7408c0781dcE7b71494274302D4b75a1447c","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["0x13A06FF21E46BCCd4B03E5Cb04372bB7aE7f2168"]},"chain":"ethereum","description":"This contract verifies zk proof (if provided). There is a temporary backdoor allowing to call this contract without the proof.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"ZircuitSuperchainConfig","address":"0x745393Cc03b5fE668ECd52c0E625f59aAD6D3Da0","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["0xA47314C96ab9572af656788e15143B459F99AE0f"]},"chain":"ethereum","description":"The SuperchainConfig contract is normally used to manage configuration values for multiple OP Chains,         however this is a separate instance of the SuperChain contract. It manages the PAUSED_SLOT, a boolean value         indicating whether the chain is paused, and GUARDIAN_SLOT, the address of the guardian which can pause and unpause the system. It also defines OPERATOR and MONITOR roles        which are used to manage throttling (withdrawal limits) on OptimismPortal.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"milestones":[{"name":"Zircuit Mainnet Launch","link":"https://www.zircuit.com/blog/mainnet-phase-1-is-live","date":"2024-08-05T00:00:00.00Z","description":"Zircuit is live on mainnet.","type":"general"}],"knowledgeNuggets":[{"title":"How Optimism compresses data","url":"https://twitter.com/bkiepuszewski/status/1508740414492323840?s=20&t=vMgR4jW1ssap-A-MBsO4Jw","thumbnail":"l2beat-03.jpg"},{"title":"Superchain Explainer","url":"https://docs.optimism.io/stack/explainer","thumbnail":"optimism-03.jpg"},{"title":"Modular Rollup Theory","url":"https://www.youtube.com/watch?v=jnVjhp41pcc","thumbnail":"modular-rollup.jpg"}],"badges":["OPStack","EthereumBlobs","EVM"],"display":{"architectureImage":"zircuit","name":"Zircuit","slug":"zircuit","description":"Zircuit is a universal Rollup that aims to use zk proofs in the future. It is based on the Optimism Bedrock architecture, employing AI to identify and stop malicious transactions at the sequencer level.","purposes":["Universal"],"links":{"websites":["https://zircuit.com/"],"apps":["https://bridge.zircuit.com/"],"documentation":["https://docs.zircuit.com/"],"explorers":["https://explorer.zircuit.com/"],"repositories":[],"socialMedia":["https://x.com/ZircuitL2","https://discord.com/invite/zircuit","https://zircuit.com/blog"]},"activityDataSource":"Blockchain RPC","warning":"Proof system is currently under development. Users need to trust the block proposer to submit correct L1 state roots.","provider":"OP Stack","category":"Optimistic Rollup","liveness":{"warnings":{"stateUpdates":"Please note, for Optimistic rollups the state is not finalized until the challenge period passes."},"explanation":"Zircuit is an Optimistic rollup that posts transaction data to the L1. For a transaction to be considered final, it has to be posted within a tx batch on L1 that links to a previous finalized batch. If the previous batch is missing, transaction finalization can be delayed up to 12h or until it gets published. The state root gets finalized 5h after it has been posted."},"finality":{"warnings":{"timeToInclusion":{"sentiment":"neutral","value":"It's assumed that transaction data batches are submitted sequentially."}},"finalizationPeriod":18000}},"config":{"escrows":[{"address":"0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1","newVersion":true,"sinceTimestamp":1719936491,"tokens":["ETH"],"contract":{"address":"0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["0xde8B916B972cE3c27C21157Fc2b107c413062b9d"]},"chain":"ethereum","description":"Main entry point for users depositing ETH.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true},{"address":"0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8","newVersion":true,"sinceTimestamp":1719936539,"tokens":"*","contract":{"address":"0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x5B1Ef673d9c316b3eE9Ed3B4E3cC84952bfC5257"],"implementations":["0xA4ba8bd753695B6121722CBB7cd81c71BCFBCA28"]},"chain":"ethereum","description":"Main entry point for users depositing ERC20 token that do not require custom gateway.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true}],"transactionApi":{"type":"rpc","startBlock":1,"defaultUrl":"https://zircuit1-mainnet.p2pify.com/","defaultCallsPerMinute":1500},"trackedTxs":[{"uses":[{"type":"liveness","subtype":"batchSubmissions"},{"type":"l2costs","subtype":"batchSubmissions"}],"query":{"formula":"transfer","from":"0xAF1E4f6a47af647F87C0Ec814d8032C4a4bFF145","to":"0xFF00000000000000000000000000000000048900","sinceTimestamp":1719936217}},{"uses":[{"type":"liveness","subtype":"stateUpdates"},{"type":"l2costs","subtype":"stateUpdates"}],"query":{"formula":"functionCall","address":"0x92Ef6Af472b39F1b363da45E35530c24619245A4","selector":"0x9aaab648","functionSignature":"function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1Blockhash, uint256 _l1BlockNumber)","sinceTimestamp":1719936515}}]},"dataAvailability":{"layer":{"value":"Ethereum (blobs or calldata)","sentiment":"good","description":"The data is posted to Ethereum as calldata or blobs."},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted on chain."},"mode":"Transaction data (compressed)"},"riskView":{"stateValidation":{"value":"None","description":"Currently the system permits invalid state roots. More details in project overview.","sentiment":"bad","definingMetric":null,"secondLine":"5h challenge period"},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","definingMetric":null,"sources":[{"contract":"OptimismPortal","references":[]}]},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","definingMetric":-18000,"sources":[{"contract":"OptimismPortal","references":[]}]},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There is a 12h delay on this operation.","sentiment":"good","definingMetric":43200,"sources":[{"contract":"OptimismPortal","references":[]}]},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","definingMetric":null,"sources":[{"contract":"L2OutputOracle","references":[]}]},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"}},"stage":{"stage":"Stage 0","missing":{"nextStage":"Stage 1","requirements":["The proof system is still under development.","Users' withdrawals can be censored by the permissioned operators.","Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."]},"summary":[{"stage":"Stage 0","requirements":[{"satisfied":true,"description":"The project calls itself a rollup."},{"satisfied":true,"description":"State roots are posted to Ethereum L1."},{"satisfied":true,"description":"Inputs for the state transition function are posted to Ethereum L1."},{"satisfied":"UnderReview","description":"A source-available node exists that can recreate the state from Ethereum L1 data. Please note that the L2BEAT team has not verified the validity of the node source code."}]},{"stage":"Stage 1","requirements":[{"satisfied":false,"description":"The proof system is still under development."},{"satisfied":false,"description":"Users' withdrawals can be censored by the permissioned operators."},{"satisfied":false,"description":"Upgrades executed by actors with more centralized control than a Security Council provide less than 7d for users to exit if the permissioned operator is down or censoring."}]},{"stage":"Stage 2","requirements":[{"satisfied":false,"description":"Upgrades unrelated to on-chain provable bugs provide less than 30d to exit."}]}],"message":{"type":"underReview","text":"The requirement for available node software is under review"}}}