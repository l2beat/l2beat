{"type":"layer2","id":"zkswap","isArchived":true,"display":{"name":"ZKSwap 1.0","slug":"zkswap","warning":"Version 3 of the protocol called ZkSpace is available and users are encouraged to move their assets there.","description":"ZKSwap is a fork of ZKsync with added AMM functionality. Based on ZK Rollup technology, ZKSwap aims to execute the full functionality of Uniswap on Layer 2, but increase the TPS, and make transaction processing cheaper.","purposes":["Payments","AMM"],"provider":"ZKsync Lite","category":"ZK Rollup","links":{"websites":["https://zks.org/"],"apps":["https://zks.app"],"documentation":["https://en.wiki.zks.org/"],"explorers":["https://zkswap.info"],"repositories":["https://github.com/l2labs/zkswap-contracts"],"socialMedia":["https://medium.com/@zkswapofficial","https://twitter.com/ZKSwapOfficial","https://discord.gg/rpjpeq4Y47","https://t.me/zkswapofficial","https://reddit.com/r/ZKSwap_Official/"]}},"stage":{"stage":"NotApplicable"},"config":{"associatedTokens":["ZKS"],"escrows":[{"address":"0x8ECa806Aecc86CE90Da803b080Ca4E3A9b8097ad","sinceTimestamp":1613135194,"tokens":"*","chain":"ethereum"}]},"dataAvailability":{"layer":{"value":"Ethereum (calldata)","sentiment":"good","description":"The data is posted to Ethereum as calldata."},"bridge":{"value":"Enshrined","sentiment":"good","description":"The validating bridge has access to all the data, as it is posted on chain."},"mode":"State diffs"},"riskView":{"stateValidation":{"value":"ZK proofs (SN)","description":"zkSNARKS are zero knowledge proofs that ensure state correctness, but require trusted setup.","sentiment":"good","definingMetric":null},"dataAvailability":{"value":"Onchain","description":"All of the data needed for proof construction is published on Ethereum L1.","sentiment":"good","definingMetric":null},"exitWindow":{"value":"Unknown","description":"Some contracts are not verified, so there is no way to assess the exit window.","sentiment":"bad","definingMetric":null},"sequencerFailure":{"value":"Force via L1","description":"Users can force the sequencer to include a withdrawal transaction by submitting a request through L1. If the sequencer censors or is down for , users can use the exit hatch to withdraw their funds.","sentiment":"good"},"proposerFailure":{"value":"Use escape hatch","description":"Users are able to trustlessly exit by submitting a zero knowledge proof of funds.","sentiment":"good","definingMetric":null},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"}},"technology":{"stateCorrectness":{"name":"Validity proofs ensure state correctness","description":"Each update to the system state must be accompanied by a ZK proof that ensures that the new state was derived by correctly applying a series of valid user transactions to the previous state. These proofs are then verified on Ethereum by a smart contract.","risks":[],"references":[{"text":"ZKSwap Introduces Practical ZK Rollups - Medium blog","href":"https://medium.com/zkswap/zkswap-introduces-practical-zk-rollups-zkspeed-achieving-high-tps-and-low-gas-fees-in-real-6effe4e789e0"}]},"newCryptography":{"name":"Zero knowledge SNARK cryptography is used","description":"Despite their production use zkSNARKs are still new and experimental cryptography. Cryptography has made a lot of advancements in the recent years but all cryptographic solutions rely on time to prove their security. In addition zkSNARKs require a trusted setup to operate.","risks":[{"category":"Funds can be stolen if","text":"the cryptography is broken or implemented incorrectly."}],"references":[{"text":"ZKSwap Whitepaper - Medium blog","href":"https://medium.com/zkswap/zkswap-whitepaper-a-layer-2-token-swap-protocol-based-on-zk-rollup-113671ef3e6d"}]},"dataAvailability":{"name":"All data required for proofs is published on chain","description":"All the data that is used to construct the system state is published on chain in the form of cheap calldata. This ensures that it will always be available when needed.","risks":[],"references":[{"text":"ZKSwap Introduces Practical ZK Rollups - Medium blog","href":"https://medium.com/zkswap/zkswap-introduces-practical-zk-rollups-zkspeed-achieving-high-tps-and-low-gas-fees-in-real-6effe4e789e0"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"text":"ZKSwap Validator - ZKSwap wiki","href":"https://en.wiki.zks.org/techonology#3-validator"}]},"forceTransactions":{"name":"Users can force exit the system","description":"Force exit allows the users to escape censorship by withdrawing their funds. The system allows users to force the withdrawal of funds by submitting a request directly to the contract on-chain.  The request must be served within a defined time period. If this does not happen, the system will halt regular operation and permit trustless withdrawal of funds.","risks":[{"category":"Users can be censored if","text":"the operator refuses to include their transactions. However, there exists a mechanism to independently exit the system."}],"references":[{"text":"ZkSync.sol#L404 - ZKSwap source code","href":"https://github.com/l2labs/zkswap-contracts-v2/blob/master/contracts/ZkSync.sol#L404"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is proven the funds become available for withdrawal on L1. Finally the user submits an L1 transaction to claim the funds. This transaction does not require a merkle proof.","risks":[],"references":[{"text":"Make Transaction","href":"https://en.wiki.zks.org/interact-with-zkswap/make-transaction#withdraw"}]},{"name":"Forced exit","description":"If the user experiences censorship from the operator with regular exit they can submit their withdrawal requests directly on L1. The system is then obliged to service this request. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular exit.","risks":[],"references":[{"text":"ZkSync.sol#L404 - ZKSwap source code","href":"https://github.com/l2labs/zkswap-contracts-v2/blob/master/contracts/ZkSync.sol#L404"}]},{"name":"Emergency exit","description":"If the enough time deadline passes and the forced exit is still ignored the user can put the system into Exodus Mode, disallowing further state updates. In that case everybody can withdraw by submitting a zero knowledge proof of their funds with their L1 transaction.","risks":[{"category":"Funds can be lost if","text":"the user is unable to generate the non-trivial ZK proof for exodus withdraw."}],"references":[{"text":"ZkSyncCommitBlock.sol#L230-L246 - ZKSwap source code","href":"https://github.com/l2labs/zkswap-contracts-v2/blob/3f650d28a266a56d49a3b3d2049cde34112efb14/contracts/ZkSyncCommitBlock.sol#L230-L246"}]}]},"contracts":{"addresses":[{"name":"ZkSync","address":"0x8ECa806Aecc86CE90Da803b080Ca4E3A9b8097ad","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x714B2D10210f2A3a7AA614F949259C87613689aB"],"implementations":["0x2F70F6D864F8F597a0ef57aDDf24323DFAb5797f"]},"chain":"ethereum","description":"The main Rollup contract. Operator commits blocks, provides ZK proof which is validated by the Verifier contract and process withdrawals (executes blocks). Users deposit ETH and ERC20 tokens. This contract defines the upgrade delay in the UPGRADE_NOTICE_PERIOD constant that is currently set to 8 days."},{"name":"ZkSyncCommitBlock","address":"0x2c543eBd91DAB7Be40eDB671D48CeDF35A75e157","chain":"ethereum","description":"Additional contract to store implementation details of the main ZkSync contract."},{"name":"ZkSyncExit","address":"0x8A1DBf1C32A4f5AfBD70D778F25FBEed7Cc881e5","chain":"ethereum"},{"name":"Governance","address":"0x02ecef526f806f06357659fFD14834fe82Ef4B04","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x714B2D10210f2A3a7AA614F949259C87613689aB"],"implementations":["0x9d3fdf9b4782753d12f6262bf22B6322608962b8"]},"chain":"ethereum","description":"Keeps a list of block producers and whitelisted tokens."},{"name":"PairManager","address":"0x661121AE41edE3f6FECDed922c59acC19A3ea9B3","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x714B2D10210f2A3a7AA614F949259C87613689aB"],"implementations":["0x65Fab217f1948af2D7A8eEB11fF111B0993C5Df8"]},"chain":"ethereum"},{"name":"Verifier","address":"0x27C229937745d697d28FC7853d1bFEA7331Edf56","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x714B2D10210f2A3a7AA614F949259C87613689aB"],"implementations":["0x165dFA76DFD3F6ad6Ad614aE4566C2E9262E532F"]},"chain":"ethereum"},{"name":"VerifierExit","address":"0x961369d347EF7A6896BDD39cBE2B89e3911f521f","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x714B2D10210f2A3a7AA614F949259C87613689aB"],"implementations":["0xd12F4D8329584F36aEd67f807F42D9a02bEb9534"]},"chain":"ethereum"},{"name":"UpgradeGatekeeper","address":"0x714B2D10210f2A3a7AA614F949259C87613689aB","chain":"ethereum","description":"This is the contract that implements the upgrade mechanism for Governance, Verifier and ZkSync. It relies on the ZkSync contract to enforce upgrade delays."}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is a 8 days delay on code upgrades."}]},"permissions":[{"name":"zkSwap 1.0 Admin","accounts":[{"address":"0x7D1a14eeD7af8e26f24bf08BA6eD7A339AbcF037","type":"EOA"}],"description":"This address is the master of Upgrade Gatekeeper contract, which is allowed to perform upgrades for Governance, Verifier, VerifierExit, PairManager and ZkSync contracts."},{"name":"Active validator","accounts":[{"address":"0x042147Bd43d3f59B3133eE08322B67E4e9f2fDb3","type":"EOA"}],"description":"This actor is allowed to propose, revert and execute L2 blocks on L1. A list of active validators is kept inside Governance contract and can be updated by zkSwap 1.0 Admin."}]}