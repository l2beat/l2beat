{"type":"layer2","id":"ancient","isUnderReview":false,"technology":{"stateCorrectness":{"name":"Fraud proofs are in development","description":"Ultimately, OP stack chains will use interactive fraud proofs to enforce state correctness. This feature is currently in development and the system permits invalid state roots.","risks":[{"category":"Funds can be stolen if","text":"an invalid state root is submitted to the system.","isCritical":true}],"references":[{"text":"L2OutputOracle.sol - Etherscan source code, deleteL2Outputs function","href":"https://etherscan.io/address/0x1F61619E8c228fb67204cD157A3e50Aa6690FbF6#code"}]},"dataAvailability":{"name":"Data is stored on Celestia","description":"Transactions roots are posted onchain and the full data is posted on Celestia.  Since the Blobstream bridge is not used, availability of the data is not verified against Celestia validators, meaning that the Sequencer can single-handedly publish unavailable roots.","risks":[{"category":"Funds can be lost if","text":"the sequencer posts an unavailable transaction root.","isCritical":true},{"category":"Funds can be lost if","text":"the data is not available on the external provider.","isCritical":true}],"references":[{"text":"Introducing Blobstream: streaming modular DA to Ethereum","href":"https://blog.celestia.org/introducing-blobstream/"},{"text":"Derivation: Batch submission - OP Mainnet specs","href":"https://github.com/ethereum-optimism/specs/blob/main/specs/protocol/derivation.md#batch-submission"},{"text":"BatchInbox - Etherscan address","href":"https://etherscan.io/address/0xd5df46c580fD2FBdaEE751dc535E14295C0336F3"},{"text":"OptimismPortal.sol - Etherscan source code, depositTransaction function","href":"https://etherscan.io/address/0x9FC6A608B45c6F129650c26a34bbe5d26959E75e#code"}]},"operator":{"name":"The system has a centralized operator","description":"The operator is the only entity that can propose blocks. A live and trustworthy operator is vital to the health of the system.","risks":[{"category":"MEV can be extracted if","text":"the operator exploits their centralized position and frontruns user transactions."}],"references":[{"text":"L2OutputOracle.sol - Etherscan source code, CHALLENGER address","href":"https://etherscan.io/address/0x1F61619E8c228fb67204cD157A3e50Aa6690FbF6#code"},{"text":"L2OutputOracle.sol - Etherscan source code, PROPOSER address","href":"https://etherscan.io/address/0x1F61619E8c228fb67204cD157A3e50Aa6690FbF6#code"}]},"forceTransactions":{"name":"Users can force any transaction","description":"Because the state of the system is based on transactions submitted on the underlying host chain and anyone can submit their transactions there it allows the users to circumvent censorship by interacting with the smart contract on the host chain directly.","risks":[],"references":[{"text":"Sequencing Window - OP Mainnet Specs","href":"https://github.com/ethereum-optimism/optimism/blob/51eeb76efeb32b3df3e978f311188aa29f5e3e94/specs/glossary.md#sequencing-window"},{"text":"OptimismPortal.sol - Etherscan source code, depositTransaction function","href":"https://etherscan.io/address/0x9FC6A608B45c6F129650c26a34bbe5d26959E75e#code"}]},"exitMechanisms":[{"name":"Regular exit","description":"The user initiates the withdrawal by submitting a regular transaction on this chain. When the block containing that transaction is finalized the funds become available for withdrawal on L1. The process of block finalization takes a challenge period of 7d to complete. Finally the user submits an L1 transaction to claim the funds. This transaction requires a merkle proof.","risks":[{"category":"Funds can be frozen if","text":"the centralized validator goes down. Users cannot produce blocks themselves and exiting the system requires new block production.","isCritical":true}],"references":[{"text":"OptimismPortal.sol - Etherscan source code, proveWithdrawalTransaction function","href":"https://etherscan.io/address/0x9FC6A608B45c6F129650c26a34bbe5d26959E75e#code"},{"text":"OptimismPortal.sol - Etherscan source code, finalizeWithdrawalTransaction function","href":"https://etherscan.io/address/0x9FC6A608B45c6F129650c26a34bbe5d26959E75e#code"},{"text":"L2OutputOracle.sol - Etherscan source code, PROPOSER check","href":"https://etherscan.io/address/0x1F61619E8c228fb67204cD157A3e50Aa6690FbF6#code"}]},{"name":"Forced exit","description":"If the user experiences censorship from the operator with regular exit they can submit their withdrawal requests directly on L1. The system is then obliged to service this request or halt all withdrawals, including forced withdrawals from L1 and regular withdrawals initiated on L2. Once the force operation is submitted and if the request is serviced, the operation follows the flow of a regular exit.","risks":[],"references":[{"text":"Forced withdrawal from an OP Stack blockchain","href":"https://stack.optimism.io/docs/security/forced-withdrawal/"}]}],"otherConsiderations":[{"name":"EVM compatible smart contracts are supported","description":"OP stack chains are pursuing the EVM Equivalence model. No changes to smart contracts are required regardless of the language they are written in, i.e. anything deployed on L1 can be deployed on L2.","risks":[],"references":[{"text":"Introducing EVM Equivalence","href":"https://medium.com/ethereum-optimism/introducing-evm-equivalence-5c2021deb306"}]}]},"permissions":[{"name":"ProxyAdmin","accounts":[{"address":"0x75a223Fb459461B9Fa61dd25109EA05522b4b492","type":"Contract"}],"description":"Owner of AddressManager. Admin of OptimismPortal, SystemConfig, L2OutputOracle, L1ERC721Bridge, L1StandardBridge.","chain":"ethereum"},{"name":"Sequencer","accounts":[{"address":"0x6079e9c37b87fE06D0bDe2431a0fa309826c9b67","type":"EOA"}],"description":"Central actor allowed to commit L2 transactions to L1.","chain":"ethereum"},{"name":"Proposer","accounts":[{"address":"0xAF24199C29D5cc3fd298356137913A42847eA690","type":"EOA"}],"description":"Central actor allowed to post new L2 state roots to L1.","chain":"ethereum"},{"name":"Challenger","accounts":[{"address":"0x1B1ecDdbd5F9601b34262Aa3Ca346209E61aA68f","type":"MultiSig"}],"description":"Central actor allowed to delete L2 state roots proposed by a Proposer.","chain":"ethereum"},{"name":"Guardian","accounts":[{"address":"0x1B1ecDdbd5F9601b34262Aa3Ca346209E61aA68f","type":"MultiSig"}],"description":"Central actor allowed to pause deposits and withdrawals.","chain":"ethereum"},{"name":"ConduitMultisig","description":"This is a Gnosis Safe with 4 / 7 threshold.  This address is the owner of the following contracts: ProxyAdmin, SystemConfig. It is also designated as a Guardian of the OptimismPortal, meaning it can halt withdrawals. It can upgrade the bridge implementation potentially gaining access to all funds, and change the sequencer, state root proposer or any other system component (unlimited upgrade power).","accounts":[{"address":"0x4a4962275DF8C60a80d3a25faEc5AA7De116A746","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xF3313C48BD8E17b823d5498D62F37019dFEA647D","type":"EOA"},{"address":"0xF0B77EaE7F2dabCC2571c7418406A0dCA3afA4f0","type":"EOA"},{"address":"0xa4000bDD2bB92ce6750b31F1eeda47Bd1cB8e6e4","type":"EOA"},{"address":"0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f","type":"EOA"},{"address":"0xa0C600a6e85bf225958FFAcC70B5FDDF9A059038","type":"EOA"},{"address":"0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C","type":"EOA"},{"address":"0x4D8007a0E9f293e62E2b0F43C6Cf4C4B9e135BAe","type":"EOA"}]},{"name":"ChallengerMultisig","description":"This is a Gnosis Safe with 4 / 6 threshold.  This address is the permissioned challenger of the system. It can delete non finalized roots without going through the fault proof process.","accounts":[{"address":"0x1B1ecDdbd5F9601b34262Aa3Ca346209E61aA68f","type":"MultiSig"}],"chain":"ethereum","participants":[{"address":"0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C","type":"EOA"},{"address":"0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f","type":"EOA"},{"address":"0xa0C600a6e85bf225958FFAcC70B5FDDF9A059038","type":"EOA"},{"address":"0x05F0c4e31e2ab24f5CF20b1B9d2FCe2c3d48BB9C","type":"EOA"},{"address":"0xcdD7FE91F5e2dCf8a0B30C4127c8D54e3F2a469c","type":"EOA"},{"address":"0xE3a87D0eE19c66d0d22F2AEf50c78d4C4FEeA5FB","type":"EOA"}]}],"contracts":{"addresses":[{"name":"L2OutputOracle","address":"0xB09DC08428C8b4EFB4ff9C0827386CDF34277996","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x75a223Fb459461B9Fa61dd25109EA05522b4b492"],"implementations":["0x1F61619E8c228fb67204cD157A3e50Aa6690FbF6"]},"chain":"ethereum","description":"The L2OutputOracle contract contains a list of proposed state roots which Proposers assert to be a result of block execution. Currently only the PROPOSER address can submit new state roots.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"OptimismPortal","address":"0x639F2AECE398Aa76b07e59eF6abe2cFe32bacb68","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x75a223Fb459461B9Fa61dd25109EA05522b4b492"],"implementations":["0x9FC6A608B45c6F129650c26a34bbe5d26959E75e"]},"chain":"ethereum","description":"The OptimismPortal contract is the main entry point to deposit funds from L1 to L2. It also allows to prove and finalize withdrawals.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"SystemConfig","address":"0x0b4cfc49aCc656CE6D03CB0794860Da92bE3E8ec","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x75a223Fb459461B9Fa61dd25109EA05522b4b492"],"implementations":["0x188370729584052260214A6e0847B9810e3a120d"]},"chain":"ethereum","description":"It contains configuration parameters such as the Sequencer address, the L2 gas limit and the unsafe block signer address.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1CrossDomainMessenger","address":"0x012c341506ee1939e56084F43Ae5dbCe224Ce2af","upgradeability":{"proxyType":"resolved delegate proxy","admins":[],"implementations":["0x09A25EB69b0d2858800A769Da90934371C7174A9"],"immutable":false},"chain":"ethereum","description":"The L1CrossDomainMessenger (L1xDM) contract sends messages from L1 to L2, and relays messages from L2 onto L1. In the event that a message sent from L1 to L2 is rejected for exceeding the L2 epoch gas limit, it can be resubmitted via this contract's replay function.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1StandardBridge","address":"0x12d4E64E1B46d27A00fe392653A894C1dd36fb80","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x75a223Fb459461B9Fa61dd25109EA05522b4b492"],"implementations":["0x2362ff553A9E66bf378E971b2AAa631A4570b53d"]},"chain":"ethereum","description":"The L1StandardBridge contract is the main entry point to deposit ERC20 tokens from L1 to L2.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},{"name":"L1ERC721Bridge","address":"0xd5e3eDf5b68135D559D572E26bF863FBC1950033","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x75a223Fb459461B9Fa61dd25109EA05522b4b492"],"implementations":["0x132b3456300332d488f946B818eB9512931eBCAa"]},"chain":"ethereum","description":"The L1ERC721Bridge contract is used to bridge ERC-721 tokens from L1 to L2.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"}],"risks":[{"category":"Funds can be stolen if","text":"a contract receives a malicious code upgrade. There is no delay on code upgrades.","isCritical":true}]},"milestones":[{"name":"Ancient8 Network Launch","link":"https://twitter.com/Ancient8_gg/status/1760666331764961479","date":"2024-02-22T00:00:00Z","description":"Ancient8 Chain is live on mainnet.","type":"general"}],"knowledgeNuggets":[{"title":"How Optimism compresses data","url":"https://twitter.com/bkiepuszewski/status/1508740414492323840?s=20&t=vMgR4jW1ssap-A-MBsO4Jw","thumbnail":"l2beat-03.jpg"},{"title":"Superchain Explainer","url":"https://docs.optimism.io/stack/explainer","thumbnail":"optimism-03.jpg"},{"title":"Modular Rollup Theory","url":"https://www.youtube.com/watch?v=jnVjhp41pcc","thumbnail":"modular-rollup.jpg"}],"badges":["Celestia","Conduit","OPStack","EVM"],"display":{"architectureImage":"opstack","name":"Ancient8","slug":"ancient8","warning":"Fraud proof system is currently under development. Users need to trust the block proposer to submit correct L1 state roots.","description":"Ancient8 Chain is a gaming-focused community-driven Ethereum Layer 2 built using OP Stack.","purposes":["Gaming"],"links":{"websites":["https://ancient8.gg/"],"apps":["https://bridge.ancient8.gg/","https://space3.gg/A8Layer2"],"documentation":["https://docs.ancient8.gg/"],"explorers":["https://scan.ancient8.gg/"],"repositories":[],"socialMedia":["https://twitter.com/Ancient8_gg","https://discord.gg/ancient8","https://blog.ancient8.gg/","https://t.me/ancient8_gg","https://youtube.com/@Ancient8_gg","https://linkedin.com/company/ancient8"]},"activityDataSource":"Blockchain RPC","provider":"OP Stack","category":"Optimium"},"config":{"associatedTokens":["A8"],"escrows":[{"address":"0x639F2AECE398Aa76b07e59eF6abe2cFe32bacb68","newVersion":true,"sinceTimestamp":1706027447,"tokens":["ETH"],"contract":{"address":"0x639F2AECE398Aa76b07e59eF6abe2cFe32bacb68","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x75a223Fb459461B9Fa61dd25109EA05522b4b492"],"implementations":["0x9FC6A608B45c6F129650c26a34bbe5d26959E75e"]},"chain":"ethereum","description":"Main entry point for users depositing ETH.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true},{"address":"0x12d4E64E1B46d27A00fe392653A894C1dd36fb80","newVersion":true,"sinceTimestamp":1706027447,"tokens":"*","contract":{"address":"0x12d4E64E1B46d27A00fe392653A894C1dd36fb80","upgradeability":{"proxyType":"EIP1967 proxy","admins":["0x75a223Fb459461B9Fa61dd25109EA05522b4b492"],"implementations":["0x2362ff553A9E66bf378E971b2AAa631A4570b53d"]},"chain":"ethereum","description":"Main entry point for users depositing ERC20 token that do not require custom gateway.","upgradableBy":["ProxyAdmin"],"upgradeDelay":"No delay"},"chain":"ethereum","includeInTotal":true}],"transactionApi":{"type":"rpc","startBlock":1,"defaultUrl":"https://rpc.ancient8.gg/","defaultCallsPerMinute":1500}},"dataAvailability":{"layer":{"value":"Celestia","sentiment":"warning","description":"The data is posted to Celestia."},"bridge":{"value":"None","sentiment":"bad","description":"There is no bridge that can attest if the data has been made available."},"mode":"Transaction data (compressed)"},"riskView":{"stateValidation":{"value":"None","description":"Currently the system permits invalid state roots. More details in project overview.","sentiment":"bad","definingMetric":null,"secondLine":"7d challenge period"},"dataAvailability":{"value":"External","description":"Proof construction and state derivation fully rely on data that is posted on Celestia. Sequencer tx roots are not checked against the Blobstream bridge data roots onchain, but L2 nodes can verify data availability by running a Celestia light client.","sentiment":"bad","sources":[{"contract":"OptimismPortal","references":[]}]},"exitWindow":{"value":"None","description":"There is no window for users to exit in case of an unwanted regular upgrade since contracts are instantly upgradable.","sentiment":"bad","definingMetric":-604800,"sources":[{"contract":"OptimismPortal","references":[]}]},"sequencerFailure":{"value":"Self sequence","description":"In the event of a sequencer failure, users can force transactions to be included in the project's chain by sending them to L1. There is a 12h delay on this operation.","sentiment":"good","definingMetric":43200,"sources":[{"contract":"OptimismPortal","references":[]}]},"proposerFailure":{"value":"Cannot withdraw","description":"Only the whitelisted proposers can publish state roots on L1, so in the event of failure the withdrawals are frozen.","sentiment":"bad","definingMetric":null,"sources":[{"contract":"L2OutputOracle","references":[]}]},"destinationToken":{"value":"Native & Canonical","description":"ETH transferred via this bridge is used to pay for gas and other tokens transferred are considered canonical on the destination chain.","sentiment":"good"},"validatedBy":{"value":"Ethereum","description":"Smart contracts on Ethereum validate all bridge transfers.","sentiment":"good"}},"stage":{"stage":"NotApplicable"}}