import { assert } from '@l2beat/shared'
import { ethers } from 'ethers'
import { Interface } from 'ethers/lib/utils'

function decodeConstructorArgs(iface: Interface, txData: string) {
  const constructor = iface.fragments.find((f) => f.type === 'constructor')
  assert(constructor, 'Constructor doesnt exist in abi')

  const offset = 64

  for (let i = txData.length - offset; i >= 0; i -= offset) {
    const slice = txData.slice(i)

    try {
      const offsetEncoded = ((i - 2) / 2).toString(16)
      if (!txData.includes(offsetEncoded)) {
        continue
      }
      const decoded = ethers.utils.defaultAbiCoder.decode(
        constructor.inputs,
        '0x' + slice,
      )
      console.log(`Decoded with offset: ${i}: `, decoded)
    } catch (error) {
      continue
    }
  }

  throw new Error('Could not decode constructor args')
}

describe('ConstructorArgsHandler', () => {
  it.only('works', () => {
    const iface = new Interface(abi)

    const decoded = decodeConstructorArgs(iface, txData)
    console.log('Decoded: ', decoded)
  })
})

const txData =
  '0x6060604052341561000f57600080fd5b6040516109c63803806109c683398101604052808051820191906020018051820191906020018051919060200180519190602001805191506000905085805161005c9291602001906100ed565b5060018480516100709291602001906100ed565b506002805460ff191660ff8516179055600482905560008111156100e357600160a060020a03331660008181526005602052604080822084905560038490557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9084905190815260200160405180910390a35b5050505050610188565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061012e57805160ff191683800117855561015b565b8280016001018555821561015b579182015b8281111561015b578251825591602001919060010190610140565b5061016792915061016b565b5090565b61018591905b808211156101675760008155600101610171565b90565b61082f806101976000396000f3006060604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100b3578063095ea7b31461013d57806318160ddd1461017357806323b872dd14610198578063313ce567146101c05780633289e004146101e957806370a08231146102515780637ed0f1c11461027057806395d89b4114610286578063a9059cbb14610299578063dd62ed3e146102bb575b600080fd5b34156100be57600080fd5b6100c66102e0565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101025780820151838201526020016100ea565b50505050905090810190601f16801561012f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561014857600080fd5b61015f600160a060020a0360043516602435610388565b604051901515815260200160405180910390f35b341561017e57600080fd5b6101866103f5565b60405190815260200160405180910390f35b34156101a357600080fd5b61015f600160a060020a03600435811690602435166044356103fb565b34156101cb57600080fd5b6101d36104e4565b60405160ff909116815260200160405180910390f35b34156101f457600080fd5b61024f600480359060248035600160a060020a0316916044359160849060643590810190830135806020808202016040519081016040528093929190818152602001838360200280828437509496506104ed95505050505050565b005b341561025c57600080fd5b610186600160a060020a036004351661067f565b341561027b57600080fd5b61015f60043561069a565b341561029157600080fd5b6100c66106bc565b34156102a457600080fd5b61015f600160a060020a036004351660243561072f565b34156102c657600080fd5b610186600160a060020a03600435811690602435166107c6565b6102e86107f1565b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b600160a060020a03338116600081815260066020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a35060015b92915050565b60035490565b600160a060020a038084166000908152600660209081526040808320339094168352929052908120548290108061044a5750600160a060020a0384166000908152600560205260409020548290105b15610457575060006104dd565b600160a060020a0380851660008181526005602081815260408084208054899003905560068252808420338716855282528084208054899003905594881680845291905290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060015b9392505050565b60025460ff1690565b61010084046000908152600760205260408120549060ff861660020a9080808385161561051957600080fd5b610100890460009081526007602052604090819020858717905589908990899051928352600160a060020a03919091166c01000000000000000000000000026020830152603482015260540160405180910390209250889150600090505b85518161ffff16101561060c5781600116600114156105c957858161ffff16815181106105a057fe5b9060200190602002015183604051918252602082015260409081019051809103902092506105fe565b82868261ffff16815181106105da57fe5b90602001906020020151604051918252602082015260409081019051809103902092505b600282049150600101610577565b600454831461061a57600080fd5b600160a060020a03881660008181526005602052604080822080548b019055600380548b0190557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908a905190815260200160405180910390a3505050505050505050565b600160a060020a031660009081526005602052604090205490565b610100810460009081526007602052604090205460ff90911660020a16151590565b6106c46107f1565b60018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561037e5780601f106103535761010080835404028352916020019161037e565b600160a060020a03331660009081526005602052604081205482901015610758575060006103ef565b600160a060020a033381166000818152600560205260408082208054879003905592861680825290839020805486019055917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260066020908152604080832093909416825291909152205490565b602060405190810160405260008152905600a165627a7a7230582024bc33c3b6a7849beac05e6431c62a81a1c6ffa851a90da75f8e3b071b33c88b002900000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000012dc03b7993bad736ad595eb9e3ba51877ac17ecc31d2355f8f270125b9427ece700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011506920446179204e30306220546f6b656e00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000035049450000000000000000000000000000000000000000000000000000000000'

const abi = [
  {
    constant: true,
    inputs: [],
    name: 'name',
    outputs: [{ name: 'name', type: 'string' }],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: 'success', type: 'bool' }],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: 'totalSupply', type: 'uint256' }],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      { name: 'from', type: 'address' },
      { name: 'to', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: 'success', type: 'bool' }],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'decimals',
    outputs: [{ name: 'decimals', type: 'uint8' }],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      { name: 'index', type: 'uint256' },
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
      { name: 'merkleProof', type: 'bytes32[]' },
    ],
    name: 'redeemPackage',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{ name: 'tokenOwner', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: 'balance', type: 'uint256' }],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [{ name: 'index', type: 'uint256' }],
    name: 'redeemed',
    outputs: [{ name: 'redeemed', type: 'bool' }],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: true,
    inputs: [],
    name: 'symbol',
    outputs: [{ name: 'symbol', type: 'string' }],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    constant: false,
    inputs: [
      { name: 'to', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: 'success', type: 'bool' }],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    constant: true,
    inputs: [
      { name: 'tokenOwner', type: 'address' },
      { name: 'spender', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: 'remaining', type: 'uint256' }],
    payable: false,
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { name: 'name', type: 'string' },
      { name: 'symbol', type: 'string' },
      { name: 'decimals', type: 'uint8' },
      { name: 'rootHash', type: 'bytes32' },
      { name: 'premine', type: 'uint256' },
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, name: 'from', type: 'address' },
      { indexed: true, name: 'to', type: 'address' },
      { indexed: false, name: 'tokens', type: 'uint256' },
    ],
    name: 'Transfer',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, name: 'tokenOwner', type: 'address' },
      { indexed: true, name: 'spender', type: 'address' },
      { indexed: false, name: 'tokens', type: 'uint256' },
    ],
    name: 'Approval',
    type: 'event',
  },
]
