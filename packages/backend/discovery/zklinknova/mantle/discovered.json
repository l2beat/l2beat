{
  "name": "zklinknova",
  "chain": "mantle",
  "blockNumber": 68652420,
  "configHash": "0xba99224e212c7eb632ba06c519a466724d98fb22fad4fc880458e49a59f4dbad",
  "contracts": [
    {
      "name": "MantleOwner",
      "address": "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0x59fe14e95a8aa7f52213f18bae5c9329cf583a7ba31194698b15eddb97d5e825"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xD784d7128B46B60Ca7d8BdC17dCEC94917455657"
        },
        {
          "permission": "upgrade",
          "target": "0xe946aBB40928326ce5bFF303E7B8f0f253EA39D0"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1710253012,
      "values": {
        "$immutable": false,
        "$implementation": "0xfb1bffC9d739B8D520DaF37dF666da4C687191EA",
        "$members": [
          "0xd30898ECdc21C72250a5fd1dbD37FF7D63237Db5",
          "0x7785bccF9110C188Dad39bE49D4Cdf6c6CC03F10",
          "0x4D9b22B92Ff9faFAc013f82faCA88BDa8E778cb5",
          "0xF801886AE2e127A269B0F11892edb54F692d02dF",
          "0xd8F26118505417Ef6468Ac8A2AE1E5117245Db92",
          "0x824C9364A6CF8f5EB542ad2ca8F5705561C8b1db",
          "0x24a257B7D975E7ec6219C4cFCbcF6E504253c7A9",
          "0xcC1A2bd1a459be0C7fAd3B7F9Fa9a6CBBFE9BFa5"
        ],
        "$threshold": 5,
        "domainSeparator": "0x8ebc72747d383ee6fea9342b35202682cad3166f782cebee00f825155d20b2e4",
        "getChainId": 5000,
        "GnosisSafe_modules": [],
        "multisigThreshold": "5 of 8 (63%)",
        "nonce": 11,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafeL2"
    },
    {
      "name": "L1ERC20Bridge",
      "address": "0x62351b47e060c61868Ab7E05920Cb42bD9A5f2B2",
      "sourceHashes": [
        "0x8c407edc4ac1fa1cea2c45903e2cf0158906a2ff39fc2eb92aca3ca9f0d43ed8",
        "0xcabc91ee17e9a771bb999a95f4705966cf206325fc82ac15d440c8b6086f9679"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xeAe8e5180EAE503E4Ffef2F5D48E20164eD41b82",
          "via": []
        }
      ],
      "sinceTimestamp": 1709296907,
      "values": {
        "$admin": "0xeAe8e5180EAE503E4Ffef2F5D48E20164eD41b82",
        "$implementation": "0x7769C18828569692Dfb65affa0856533613ea458",
        "$pastUpgrades": [
          [
            "2024-03-01T12:41:47.000Z",
            "0xaf05aafd35db4063ec7549aeed61f0a2ced59a80c34aefe1a2f7e0de6a1ac7c8",
            ["0xbfa352a683D82a04233Cc45AC1308621BA63283f"]
          ],
          [
            "2024-04-04T06:27:28.000Z",
            "0xed9f3f5842ead3da2348d8edfbcacf5bf0572cc53ec3443c5229c23845d63f9c",
            ["0x7769C18828569692Dfb65affa0856533613ea458"]
          ]
        ],
        "$upgradeCount": 2,
        "l2Bridge": "0x321Ce902eDFC6466B224ce5D9A7Bc16858855272",
        "l2TokenBeacon": "0x21194Efd1D913Bc8D62F1ED9467aA0cA2a257FCe",
        "l2TokenProxyBytecodeHash": "0x010001211b0c33353cdf7a320f768e3dc40bce1326d639fcac099bba9ecd8e34"
      },
      "derivedName": "L1ERC20Bridge"
    },
    {
      "name": "zkLink",
      "address": "0xD784d7128B46B60Ca7d8BdC17dCEC94917455657",
      "template": "zklinknova/secondaryZkLink",
      "sourceHashes": [
        "0xbbe53a68c0042f4050bdf21e8d16eee4688dd35d24e49740915f0a0cf994f0d6",
        "0xce3f5eaddd62b6c043d92c0ff2cc4eed6369114f68e9d57c1b76f3d26dd29fa2"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60",
          "via": []
        }
      ],
      "ignoreInWatchMode": [
        "getTotalBatchesExecuted",
        "getTotalPriorityTxs",
        "totalBatchesExecuted",
        "totalPriorityTxs",
        "totalSyncedPriorityTxs",
        "totalValidatorForwardFee"
      ],
      "sinceTimestamp": 1709279309,
      "values": {
        "$admin": "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60",
        "$implementation": "0x0C04046546C46652969Aa9eB4BFB758cFDf1e821",
        "$pastUpgrades": [
          [
            "2024-03-01T07:48:29.000Z",
            "0x6a00d05f32d4cad32533eacc6bfe09f424002d60b1474ec6d9615d7ad7f86abe",
            ["0x5715Dec4cd747675E47b969D3a15aab909b8ce05"]
          ],
          [
            "2024-03-09T10:15:53.000Z",
            "0x0f8754436aa05997946fd34f1a0573cb22a6c27181af505cb4d4121723bdd1cd",
            ["0x85079cb83B6cadba34e64bc0f24493F49D8b1F4e"]
          ],
          [
            "2024-04-22T02:31:22.000Z",
            "0xecf1785a348ae45261abf6f4bc82163701840e4740a5c104f036305677d800e8",
            ["0xa8486096C719024D4eB2262A45AAc5cA8A256Cd6"]
          ],
          [
            "2024-05-03T09:09:50.000Z",
            "0x10bb5a3d57fc38cfc2e56d9046c00aba1a47fe4ad38162ba0a5ec19c6b2cc6e7",
            ["0x0C04046546C46652969Aa9eB4BFB758cFDf1e821"]
          ]
        ],
        "$upgradeCount": 4,
        "feeParams": {
          "pubdataPricingMode": 0,
          "batchOverheadL1Gas": 1000000,
          "maxPubdataPerBatch": 120000,
          "maxL2GasPerBatch": 80000000,
          "priorityTxMaxPubdata": 99000,
          "minimalL2GasPrice": 250000000
        },
        "FORWARD_REQUEST_TYPE_HASH": "0xe0aaca1722ef50bb0c9b032e5b16ce2b79fa9f23638835456b27fd6894f8292c",
        "forwardFeeAllocator": "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60",
        "gateway": "0xe946aBB40928326ce5bFF303E7B8f0f253EA39D0",
        "getGateway": "0xe946aBB40928326ce5bFF303E7B8f0f253EA39D0",
        "getGovernor": "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60",
        "getPriorityTxMaxGasLimit": 72000000,
        "getTotalBatchesExecuted": 24163,
        "getTotalPriorityTxs": 861,
        "owner": "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60",
        "paused": false,
        "totalBatchesExecuted": 24163,
        "totalPriorityTxs": 861,
        "totalSyncedPriorityTxs": 861,
        "totalValidatorForwardFee": "1105664800685749588412",
        "totalValidatorForwardFeeWithdrawn": "1105664800685749588412",
        "txGasPrice": 140000000000000
      },
      "derivedName": "ZkLink"
    },
    {
      "name": "MantleL2Gateway",
      "address": "0xe946aBB40928326ce5bFF303E7B8f0f253EA39D0",
      "template": "zklinknova/secondaryGateway",
      "sourceHashes": [
        "0xbbe53a68c0042f4050bdf21e8d16eee4688dd35d24e49740915f0a0cf994f0d6",
        "0xf74567f04dfc1337e1295ac8ee70891c3e1543ec852c2205630c0bcc4e0b6a19"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60",
          "via": []
        }
      ],
      "sinceTimestamp": 1709279398,
      "values": {
        "$admin": "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60",
        "$implementation": "0xCdcDF691aF3e3717A35A2352aB7e34fd2980613D",
        "$pastUpgrades": [
          [
            "2024-03-01T07:49:58.000Z",
            "0xdb5d3920a2bbd9c5a3d97b54c227aa56d0f555060a03d7212a0d05b4239ec0f9",
            ["0x55fa5276c44c1B465196898b144524C9c852235E"]
          ],
          [
            "2024-03-09T10:51:51.000Z",
            "0xd264b50869bc4bd7d2c3ad80541399bc5a1963aa4ef010ea40e699ab0a56a9a7",
            ["0x09CB6C5A235939258e3F6Ae2989cf6f26EeE1c72"]
          ],
          [
            "2024-05-03T09:09:50.000Z",
            "0x10bb5a3d57fc38cfc2e56d9046c00aba1a47fe4ad38162ba0a5ec19c6b2cc6e7",
            ["0xCdcDF691aF3e3717A35A2352aB7e34fd2980613D"]
          ]
        ],
        "$upgradeCount": 3,
        "ethToken": "0xdEAddEaDdeadDEadDEADDEAddEADDEAddead1111",
        "getRemoteGateway": "0xdE1Ce751405Fe6D836349226EEdCDFFE1C3BE269",
        "isEthGasToken": false,
        "MESSAGE_SERVICE": "0x4200000000000000000000000000000000000007",
        "owner": "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60",
        "ZKLINK": "0xD784d7128B46B60Ca7d8BdC17dCEC94917455657"
      },
      "derivedName": "MantleL2Gateway"
    },
    {
      "name": "MantleProxyAdmin",
      "address": "0xeAe8e5180EAE503E4Ffef2F5D48E20164eD41b82",
      "sourceHashes": [
        "0x8fd8f837bb320bd2a7463c103bea2ff207b0969b5795f320a6c868858aa92074"
      ],
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x62351b47e060c61868Ab7E05920Cb42bD9A5f2B2"
        }
      ],
      "sinceTimestamp": 1709296907,
      "values": {
        "$immutable": true,
        "owner": "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60",
        "UPGRADE_INTERFACE_VERSION": "5.0.0"
      },
      "derivedName": "ProxyAdmin"
    }
  ],
  "eoas": [
    { "address": "0x21194Efd1D913Bc8D62F1ED9467aA0cA2a257FCe" },
    { "address": "0x24a257B7D975E7ec6219C4cFCbcF6E504253c7A9" },
    { "address": "0x321Ce902eDFC6466B224ce5D9A7Bc16858855272" },
    { "address": "0x4D9b22B92Ff9faFAc013f82faCA88BDa8E778cb5" },
    { "address": "0x7785bccF9110C188Dad39bE49D4Cdf6c6CC03F10" },
    { "address": "0x824C9364A6CF8f5EB542ad2ca8F5705561C8b1db" },
    { "address": "0xcC1A2bd1a459be0C7fAd3B7F9Fa9a6CBBFE9BFa5" },
    { "address": "0xd30898ECdc21C72250a5fd1dbD37FF7D63237Db5" },
    { "address": "0xd8F26118505417Ef6468Ac8A2AE1E5117245Db92" },
    { "address": "0xF801886AE2e127A269B0F11892edb54F692d02dF" }
  ],
  "abis": {
    "0x0C04046546C46652969Aa9eB4BFB758cFDf1e821": [
      "constructor()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ContractAllowStatusUpdate(address indexed contractAddress, bool isPermit)",
      "event EthWithdrawalFinalized(address indexed to, uint256 amount)",
      "event ForwardFeeAllocatorUpdate(address oldAllocator, address newAllocator)",
      "event InitGateway(address indexed gateway)",
      "event Initialized(uint8 version)",
      "event NewFeeParams(tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) oldFeeParams, tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) newFeeParams)",
      "event NewPriorityRequest(uint256 priorityOpId, tuple(address gateway, bool isContractCall, address sender, uint256 txId, address contractAddressL2, uint256 l2Value, bytes l2CallData, uint256 l2GasLimit, uint256 l2GasPricePerPubdata, bytes[] factoryDeps, address refundRecipient) l2Request)",
      "event OpenRangeBatchRoot(uint256 fromBatchNumber, uint256 toBatchNumber)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event SyncBatchRoot(uint256 batchNumber, bytes32 l2LogsRootHash, uint256 forwardEthAmount)",
      "event SyncL2Requests(uint256 totalSyncedPriorityTxs, bytes32 syncHash, uint256 forwardEthAmount)",
      "event SyncL2TxHash(bytes32 l2TxHash, bytes32 primaryChainL2TxHash)",
      "event SyncRangeBatchRoot(uint256 fromBatchNumber, uint256 toBatchNumber, bytes32 rangeBatchRootHash, uint256 forwardEthAmount)",
      "event TxGasPriceUpdate(uint256 oldTxGasPrice, uint256 newTxGasPrice)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "event ValidatorStatusUpdate(address indexed validatorAddress, bool isActive)",
      "event WithdrawForwardFee(address indexed receiver, uint256 amount)",
      "function FORWARD_REQUEST_TYPE_HASH() view returns (bytes32)",
      "function allowLists(address contractAddress) view returns (bool isPermitToSendL2Request)",
      "function changeFeeParams(tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) _newFeeParams)",
      "function feeParams() view returns (uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice)",
      "function finalizeEthWithdrawal(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function forwardFeeAllocator() view returns (address)",
      "function gateway() view returns (address)",
      "function getGateway() view returns (address)",
      "function getGovernor() view returns (address)",
      "function getPriorityTxMaxGasLimit() pure returns (uint256)",
      "function getTotalBatchesExecuted() view returns (uint256)",
      "function getTotalPriorityTxs() view returns (uint256)",
      "function initialize()",
      "function isEthWithdrawalFinalized(uint256 l2BatchNumber, uint256 l2ToL1MessageNumber) view returns (bool isFinalized)",
      "function isValidator(address _address) view returns (bool)",
      "function l2LogsRootHash(uint256 _batchNumber) view returns (bytes32 merkleRoot)",
      "function l2LogsRootHashes(uint256 batchNumber) view returns (bytes32 l2LogsRootHash)",
      "function l2TransactionBaseCost(uint256 _gasPrice, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit) view returns (uint256)",
      "function l2TxHashMap(bytes32 l2TxHash) view returns (bytes32 primaryChainL2TxHash)",
      "function openRangeBatchRootHash(uint256 _fromBatchNumber, uint256 _toBatchNumber, bytes32[] _l2LogsRootHashes)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function priorityOpSyncStatus(uint256 priorityOpId) view returns (bytes32 hash, uint256 amount)",
      "function proveL1ToL2TransactionStatus(bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof, uint8 _status) view returns (bool)",
      "function proveL2MessageInclusion(uint256 _batchNumber, uint256 _index, tuple(uint16 txNumberInBatch, address sender, bytes data) _message, bytes32[] _proof) view returns (bool)",
      "function proxiableUUID() view returns (bytes32)",
      "function rangeBatchRootHashes(bytes32 range) view returns (bytes32 rangeBatchRootHash)",
      "function renounceOwnership()",
      "function requestL2Transaction(address _contractL2, uint256 _l2Value, bytes _calldata, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit, bytes[] _factoryDeps, address _refundRecipient) payable returns (bytes32 canonicalTxHash)",
      "function setAllowList(address _contractAddress, bool _permitted)",
      "function setForwardFeeAllocator(address _newForwardFeeAllocator)",
      "function setGateway(address _gateway)",
      "function setTxGasPrice(uint256 _newTxGasPrice)",
      "function setValidator(address _validator, bool _active)",
      "function syncBatchRoot(uint256 _batchNumber, bytes32 _l2LogsRootHash, uint256 _forwardEthAmount) payable",
      "function syncL2Requests(uint256 _newTotalSyncedPriorityTxs) payable",
      "function syncL2TxHash(bytes32 _l2TxHash, bytes32 _primaryChainL2TxHash)",
      "function syncRangeBatchRoot(uint256 _fromBatchNumber, uint256 _toBatchNumber, bytes32 _rangeBatchRootHash, uint256 _forwardEthAmount) payable",
      "function totalBatchesExecuted() view returns (uint256)",
      "function totalPriorityTxs() view returns (uint256)",
      "function totalSyncedPriorityTxs() view returns (uint256)",
      "function totalValidatorForwardFee() view returns (uint256)",
      "function totalValidatorForwardFeeWithdrawn() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function txGasPrice() view returns (uint256)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function validators(address validatorAddress) view returns (bool isValidator)",
      "function withdrawForwardFee(address _receiver, uint256 _amount)"
    ],
    "0x1aB4D3cfcCCB28DBc8993454f461f3565281BB60": [
      "constructor(address _singleton)"
    ],
    "0x62351b47e060c61868Ab7E05920Cb42bD9A5f2B2": [
      "constructor(address _logic, address initialOwner, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "error ProxyDeniedAdminAccess()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x7769C18828569692Dfb65affa0856533613ea458": [
      "constructor(address _zkSync)",
      "event ClaimedFailedDeposit(address indexed to, address indexed l1Token, uint256 amount)",
      "event DepositInitiated(bytes32 indexed l2DepositTxHash, address indexed from, address indexed to, address l1Token, uint256 amount)",
      "event DepositToMergeInitiated(bytes32 indexed l2DepositTxHash, address indexed from, address indexed to, address l1Token, uint256 amount, bool toMerge)",
      "event WithdrawalFinalized(address indexed to, address indexed l1Token, uint256 amount)",
      "function claimFailedDeposit(address _depositSender, address _l1Token, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte) payable returns (bytes32 l2TxHash)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte, address _refundRecipient) payable returns (bytes32 l2TxHash)",
      "function depositToMerge(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte, address _refundRecipient) payable returns (bytes32 l2TxHash)",
      "function finalizeWithdrawal(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function initialize(bytes[] _factoryDeps, bytes32[] _factoryDepByteCodeHashes, address _l2TokenBeacon, address _governor, uint256 _deployBridgeImplementationFee, uint256 _deployBridgeProxyFee) payable",
      "function isWithdrawalFinalized(uint256 l2BatchNumber, uint256 l2ToL1MessageNumber) view returns (bool isFinalized)",
      "function l2Bridge() view returns (address)",
      "function l2TokenAddress(address _l1Token) view returns (address)",
      "function l2TokenBeacon() view returns (address)",
      "function l2TokenProxyBytecodeHash() view returns (bytes32)"
    ],
    "0xCdcDF691aF3e3717A35A2352aB7e34fd2980613D": [
      "constructor(address _zkLink)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Initialized(uint8 version)",
      "event L2GatewayMessageSent(uint256 value, bytes callData)",
      "event NewRemoteGateway(address remoteGateWay)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function MESSAGE_SERVICE() view returns (address)",
      "function ZKLINK() view returns (address)",
      "function claimMessageCallback(uint256 _ethValue, bytes _callData) payable",
      "function ethToken() pure returns (address)",
      "function getRemoteGateway() view returns (address)",
      "function initialize()",
      "function isEthGasToken() pure returns (bool)",
      "function owner() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function sendMessage(uint256 _value, bytes _callData) payable",
      "function setRemoteGateway(address _remoteGateway)",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xD784d7128B46B60Ca7d8BdC17dCEC94917455657": [
      "constructor(address implementation, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "event Upgraded(address indexed implementation)"
    ],
    "0xe946aBB40928326ce5bFF303E7B8f0f253EA39D0": [
      "constructor(address implementation, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "event Upgraded(address indexed implementation)"
    ],
    "0xeAe8e5180EAE503E4Ffef2F5D48E20164eD41b82": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UPGRADE_INTERFACE_VERSION() view returns (string)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xfb1bffC9d739B8D520DaF37dF666da4C687191EA": [
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeModuleTransaction(address module, address to, uint256 value, bytes data, uint8 operation)",
      "event SafeMultiSigTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures, bytes additionalInfo)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x18527e82c3800311291da7323caa876f588cde67692c1c84d5ecb5161da61359",
    "zklinknova/secondaryGateway": "0xb8fdb3c993db014b3b0c1cdd56f21ecb1aac5dd63185bc3f87a6c0e45e9168c6",
    "zklinknova/secondaryZkLink": "0x3038879967ecfd740f8377d1280264034b6959ad28bea99ebcedd97c6127a904"
  }
}
