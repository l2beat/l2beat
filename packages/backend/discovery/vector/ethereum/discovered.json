{
  "name": "vector",
  "chain": "ethereum",
  "blockNumber": 20812440,
  "configHash": "0x4d2db40fb06d17ad8c917a661b77dd8194358db87ed1173c1173da4433ab5cc5",
  "version": 15,
  "contracts": [
    {
      "name": "SP1Vector",
      "address": "0x02993cdC11213985b9B13224f3aF289F03bf298d",
      "template": "succinct/SP1Vector",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x0000000000000000000000000000000000000000",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["latestBlock", "latestAuthoritySetId"],
      "sinceTimestamp": 1720128227,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0xc6217f1549Cab6f22ac4AC56d42e6C248731a33D",
        "$pastUpgrades": [
          [
            "2024-07-04T21:23:47.000Z",
            ["0x2434564f3524b44258B11643729343Ef57D60989"]
          ],
          [
            "2024-07-20T01:29:35.000Z",
            ["0xc6217f1549Cab6f22ac4AC56d42e6C248731a33D"]
          ]
        ],
        "$upgradeCount": 2,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "0xDEd0000E32f8F40414d3ab3a830f735a3553E18e",
              "0x7F2f87B0Efc66Fea0b7c30C61654E53C37993666"
            ]
          },
          "TIMELOCK_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x7F2f87B0Efc66Fea0b7c30C61654E53C37993666"]
          },
          "GUARDIAN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x7F2f87B0Efc66Fea0b7c30C61654E53C37993666"]
          }
        },
        "checkRelayer": true,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "frozen": false,
        "gateway_deprecated": "0x0000000000000000000000000000000000000000",
        "GUARDIAN_ROLE": "0x55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a5041",
        "headerRangeCommitmentTreeSize": 2048,
        "headerRangeFunctionId_deprecated": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "isRelayerApproved": true,
        "latestAuthoritySetId": 85,
        "latestBlock": 349853,
        "relayers": ["0x44eb418a966ff47f5af6f48aea6afde0bf193a8d"],
        "rotateFunctionId_deprecated": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "TIMELOCK_ROLE": "0xf66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f05",
        "vectorXProgramVkey": "0x0003c5cf9260fcef3df6c79870952e1ce2f57595ac042ea868c9cbbcab548cf8",
        "verifier": "0x3B6041173B80E77f038f3F2C0f9744f04837185e",
        "VERSION": "2.0.0"
      },
      "derivedName": "SP1Vector"
    },
    {
      "name": "SP1Verifier",
      "address": "0x1764C29FBd94865198588f10FC75D4f6636d158d",
      "sinceTimestamp": 1726276235,
      "values": {
        "$immutable": true,
        "VERIFIER_HASH": "0x4aca240a3e5296e6a565f98dc728c6f48f8de4792a8fa365038c3b86952176f5",
        "VERSION": "v2.0.0"
      }
    },
    {
      "name": "SuccinctGatewaySP1",
      "address": "0x3B6041173B80E77f038f3F2C0f9744f04837185e",
      "template": "succinct/SP1SuccinctGateway",
      "sinceTimestamp": 1720099223,
      "values": {
        "$immutable": true,
        "oldVerifier": ["0xc350F063C13a3Ca21331610fe159E697a5c9c2FB", true],
        "oldVerifier2": ["0x6B6A7Ded061567d8A56279801DEA5cFB79be5bFc", true],
        "owner": "0xCafEf00d348Adbd57c37d1B77e0619C6244C6878",
        "verifier": ["0x1764C29FBd94865198588f10FC75D4f6636d158d", false]
      },
      "fieldMeta": {
        "oldVerifier": {
          "description": "The verifier contract address for SP1, and whether it is frozen (true if frozen). This verifier route was frozen on 2024-09-04."
        },
        "oldVerifier2": {
          "description": "The verifier contract address for SP1, and whether it is frozen (true if frozen)."
        },
        "verifier": {
          "description": "The prover contract address for SP1, and whether it is frozen (true if frozen). This prover route was frozen on 2024-09-04."
        }
      },
      "derivedName": "SP1VerifierGateway"
    },
    {
      "name": "SP1Verifier",
      "address": "0x6B6A7Ded061567d8A56279801DEA5cFB79be5bFc",
      "sinceTimestamp": 1725472175,
      "values": {
        "$immutable": true,
        "VERIFIER_HASH": "0xc865c1b60c05baa44075f37d6d88f2e18c64effb9113740b47cdf12b711b8aa4",
        "VERSION": "v1.2.0"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x7F2f87B0Efc66Fea0b7c30C61654E53C37993666",
      "template": "GnosisSafe",
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1714943123,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xE458b870F2F59a49915591282f1Bb688901767AD",
          "0x340e77D5e114A9D4891d3a1EbC7419CC85Ca8E4A",
          "0xAD379D3275a18bd4BB741C3b291a3778D51c3304",
          "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
          "0x1fbABAbDcFE0b40a9B5D2aDB054fB74F8fE985f5",
          "0xBe1D614F13662Aff0a2Ec1e76f9c82D332Ae78A2",
          "0xb9274De2305B377b437a9297D6c84eBD69f7aaCE"
        ],
        "$threshold": 4,
        "domainSeparator": "0x0a3a4ca49dc98b965e6bed30f0e8c99ee93572432964da204089e65025760611",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "4 of 7 (57%)",
        "nonce": 1,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "SP1Verifier_OLD",
      "address": "0xc350F063C13a3Ca21331610fe159E697a5c9c2FB",
      "sinceTimestamp": 1722645791,
      "values": {
        "$immutable": true,
        "VERIFIER_HASH": "0xc430ff7f31a22c5f7607f3ed2a2f5621af340bc45a44179319cba5761664e1f0",
        "VERSION": "v1.1.0"
      },
      "derivedName": "SP1Verifier"
    },
    {
      "name": "SuccinctGatewaySP1Multisig",
      "address": "0xCafEf00d348Adbd57c37d1B77e0619C6244C6878",
      "template": "GnosisSafe",
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1724204135,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126",
          "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
          "0x9395e83720bf2D8ac6435f9c520b48E289Cb8885"
        ],
        "$threshold": 2,
        "domainSeparator": "0x9ce9716cc3ee4040796acdd48cea971343ff05b11468ce9e8d815c2ce3fc8b9e",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 5,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    }
  ],
  "eoas": [
    {
      "address": "0x0000000000000000000000000000000000000000",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x02993cdC11213985b9B13224f3aF289F03bf298d"
        }
      ]
    },
    { "address": "0x1fbABAbDcFE0b40a9B5D2aDB054fB74F8fE985f5" },
    { "address": "0x340e77D5e114A9D4891d3a1EbC7419CC85Ca8E4A" },
    { "address": "0x44eB418A966ff47f5AF6f48AEa6Afde0bf193a8d" },
    { "address": "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54" },
    { "address": "0x9395e83720bf2D8ac6435f9c520b48E289Cb8885" },
    { "address": "0xAD379D3275a18bd4BB741C3b291a3778D51c3304" },
    { "address": "0xb9274De2305B377b437a9297D6c84eBD69f7aaCE" },
    { "address": "0xBaB2c2aF5b91695e65955DA60d63aD1b2aE81126" },
    { "address": "0xBe1D614F13662Aff0a2Ec1e76f9c82D332Ae78A2" },
    { "address": "0xDEd0000E32f8F40414d3ab3a830f735a3553E18e" },
    { "address": "0xE458b870F2F59a49915591282f1Bb688901767AD" }
  ],
  "abis": {
    "0x02993cdC11213985b9B13224f3aF289F03bf298d": [
      "constructor(address implementation, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedCall()",
      "event Upgraded(address indexed implementation)"
    ],
    "0x1764C29FBd94865198588f10FC75D4f6636d158d": [
      "error InvalidProof()",
      "error WrongVerifierSelector(bytes4 received, bytes4 expected)",
      "function VERIFIER_HASH() pure returns (bytes32)",
      "function VERSION() pure returns (string)",
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)",
      "function hashPublicValues(bytes publicValues) pure returns (bytes32)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "0x3B6041173B80E77f038f3F2C0f9744f04837185e": [
      "constructor(address initialOwner)",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error RouteAlreadyExists(address verifier)",
      "error RouteIsFrozen(bytes4 selector)",
      "error RouteNotFound(bytes4 selector)",
      "error SelectorCannotBeZero()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RouteAdded(bytes4 selector, address verifier)",
      "event RouteFrozen(bytes4 selector, address verifier)",
      "function addRoute(address verifier)",
      "function freezeRoute(bytes4 selector)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function routes(bytes4) view returns (address verifier, bool frozen)",
      "function transferOwnership(address newOwner)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "0x6B6A7Ded061567d8A56279801DEA5cFB79be5bFc": [
      "error InvalidProof()",
      "error WrongVerifierSelector(bytes4 received, bytes4 expected)",
      "function VERIFIER_HASH() pure returns (bytes32)",
      "function VERSION() pure returns (string)",
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)",
      "function hashPublicValues(bytes publicValues) pure returns (bytes32)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "0x7F2f87B0Efc66Fea0b7c30C61654E53C37993666": [
      "constructor(address _singleton)"
    ],
    "0xc350F063C13a3Ca21331610fe159E697a5c9c2FB": [
      "error InvalidProof()",
      "error WrongVerifierSelector(bytes4 received, bytes4 expected)",
      "function VERIFIER_HASH() pure returns (bytes32)",
      "function VERSION() pure returns (string)",
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)",
      "function hashPublicValues(bytes publicValues) pure returns (bytes32)",
      "function verifyProof(bytes32 programVKey, bytes publicValues, bytes proofBytes) view"
    ],
    "0xc6217f1549Cab6f22ac4AC56d42e6C248731a33D": [
      "error AuthoritySetMismatch()",
      "error AuthoritySetNotFound()",
      "error BlockHeightMismatch()",
      "error ContractFrozen()",
      "error InvalidMerkleTreeSize()",
      "error InvalidProofType()",
      "error InvalidTargetBlock()",
      "error NextAuthoritySetExists()",
      "error OldAuthoritySetId()",
      "error OnlyGuardian(address sender)",
      "error OnlyTimelock(address sender)",
      "error RelayerNotApproved()",
      "error TrustedHeaderMismatch()",
      "error TrustedHeaderNotFound()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event AuthoritySetStored(uint64 authoritySetId, bytes32 authoritySetHash)",
      "event BeaconUpgraded(address indexed beacon)",
      "event HeadUpdate(uint32 blockNumber, bytes32 headerHash)",
      "event HeaderRangeCommitmentStored(uint32 startBlock, uint32 endBlock, bytes32 dataCommitment, bytes32 stateCommitment, uint32 headerRangeCommitmentTreeSize)",
      "event HeaderRangeRequested(uint32 trustedBlock, bytes32 trustedHeader, uint64 authoritySetId, bytes32 authoritySetHash, uint32 targetBlock)",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RotateRequested(uint64 currentAuthoritySetId, bytes32 currentAuthoritySetHash)",
      "event Upgraded(address indexed implementation)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function GUARDIAN_ROLE() view returns (bytes32)",
      "function TIMELOCK_ROLE() view returns (bytes32)",
      "function VERSION() pure returns (string)",
      "function approvedRelayers(address) view returns (bool)",
      "function authoritySetIdToHash(uint64) view returns (bytes32)",
      "function blockHeightToHeaderHash(uint32) view returns (bytes32)",
      "function checkRelayer() view returns (bool)",
      "function commitHeaderRange(bytes proof, bytes publicValues)",
      "function dataRootCommitments(bytes32) view returns (bytes32)",
      "function frozen() view returns (bool)",
      "function gateway_deprecated() view returns (address)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function headerRangeCommitmentTreeSize() view returns (uint32)",
      "function headerRangeFunctionId_deprecated() view returns (bytes32)",
      "function initialize(tuple(address guardian, uint32 height, bytes32 header, uint64 authoritySetId, bytes32 authoritySetHash, uint32 headerRangeCommitmentTreeSize, bytes32 vectorProgramVkey, address verifier) _params)",
      "function latestAuthoritySetId() view returns (uint64)",
      "function latestBlock() view returns (uint32)",
      "function proxiableUUID() view returns (bytes32)",
      "function rangeStartBlocks(bytes32) view returns (uint32)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function rotate(bytes proof, bytes publicValues)",
      "function rotateFunctionId_deprecated() view returns (bytes32)",
      "function setCheckRelayer(bool _checkRelayer)",
      "function setRelayerApproval(address _relayer, bool _approved)",
      "function stateRootCommitments(bytes32) view returns (bytes32)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateBlockRangeData(uint32[] _startBlocks, uint32[] _endBlocks, bytes32[] _headerHashes, bytes32[] _dataRootCommitments, bytes32[] _stateRootCommitments, uint64 _endAuthoritySetId, bytes32 _endAuthoritySetHash)",
      "function updateCommitmentTreeSize(uint32 _headerRangeCommitmentTreeSize)",
      "function updateFreeze(bool _freeze)",
      "function updateGenesisState(uint32 _height, bytes32 _header, uint64 _authoritySetId, bytes32 _authoritySetHash)",
      "function updateVectorXProgramVkey(bytes32 _vectorXProgramVkey)",
      "function updateVerifier(address _verifier)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function vectorXProgramVkey() view returns (bytes32)",
      "function verifier() view returns (address)"
    ],
    "0xCafEf00d348Adbd57c37d1B77e0619C6244C6878": [
      "constructor(address _singleton)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x55dd1039f19d840b39ef504eac8a631b912d707343588aed9ac96bd4e874f837",
    "succinct/SP1SuccinctGateway": "0x469434d0a8618a0831610020a584f9b833db48951a4e6605e45baff5b764ee77",
    "succinct/SP1Vector": "0xe1b6515d881fe5c6bf2819550b85bc508c9adf9df527c4be5cf4e0ed65cd4533"
  },
  "shapeFilesHash": "0x1b71e6de9b37e27fa623d351c775f0b1129ddf53c2082f7042461e94e2b52e34"
}
