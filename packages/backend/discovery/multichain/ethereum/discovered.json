{
  "name": "multichain",
  "chain": "ethereum",
  "blockNumber": 21322825,
  "configHash": "0xb1511afb107a8a4c9a01c4937f4ab291d0998dea9646d3996e59c94033ebc4ff",
  "contracts": [
    {
      "name": "AnyswapV4Router",
      "address": "0x6b7a87899490EcE95443e979cA9485CBE7E71522",
      "sourceHashes": [
        "0xb0a988b45b574080d5e8d605dfd609faf6df08d7e16a57eb2f754e278224f66f"
      ],
      "sinceTimestamp": 1624013046,
      "values": {
        "$immutable": true,
        "cID": 1,
        "factory": "0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac",
        "mpc": "0x2A038e100F8B85DF21e4d44121bdBfE0c288A869",
        "wNATIVE": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "derivedName": "AnyswapV4Router"
    },
    {
      "name": "AnyswapV6Router",
      "address": "0xBa8Da9dcF11B50B03fd5284f164Ef5cdEF910705",
      "sourceHashes": [
        "0xa42a1ba17ff7ccbd5f17722cec7254e3a5f29a6b808de5fab73eeb7d7696a756"
      ],
      "sinceTimestamp": 1644996796,
      "values": {
        "$immutable": true,
        "cID": 1,
        "enableSwapTrade": false,
        "factory": "0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac",
        "mpc": "0x2A038e100F8B85DF21e4d44121bdBfE0c288A869",
        "wNATIVE": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "derivedName": "AnyswapV6Router"
    }
  ],
  "eoas": [{ "address": "0x2A038e100F8B85DF21e4d44121bdBfE0c288A869" }],
  "abis": {
    "0x6b7a87899490EcE95443e979cA9485CBE7E71522": [
      "constructor(address _factory, address _wNATIVE, address _mpc)",
      "event LogAnySwapIn(bytes32 indexed txhash, address indexed token, address indexed to, uint256 amount, uint256 fromChainID, uint256 toChainID)",
      "event LogAnySwapOut(address indexed token, address indexed from, address indexed to, uint256 amount, uint256 fromChainID, uint256 toChainID)",
      "event LogAnySwapTradeTokensForNative(address[] path, address indexed from, address indexed to, uint256 amountIn, uint256 amountOutMin, uint256 fromChainID, uint256 toChainID)",
      "event LogAnySwapTradeTokensForTokens(address[] path, address indexed from, address indexed to, uint256 amountIn, uint256 amountOutMin, uint256 fromChainID, uint256 toChainID)",
      "event LogChangeMPC(address indexed oldMPC, address indexed newMPC, uint256 indexed effectiveTime, uint256 chainID)",
      "event LogChangeRouter(address indexed oldRouter, address indexed newRouter, uint256 chainID)",
      "function anySwapFeeTo(address token, uint256 amount)",
      "function anySwapIn(bytes32[] txs, address[] tokens, address[] to, uint256[] amounts, uint256[] fromChainIDs)",
      "function anySwapIn(bytes32 txs, address token, address to, uint256 amount, uint256 fromChainID)",
      "function anySwapInAuto(bytes32 txs, address token, address to, uint256 amount, uint256 fromChainID)",
      "function anySwapInExactTokensForNative(bytes32 txs, uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 fromChainID) returns (uint256[] amounts)",
      "function anySwapInExactTokensForTokens(bytes32 txs, uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 fromChainID) returns (uint256[] amounts)",
      "function anySwapInUnderlying(bytes32 txs, address token, address to, uint256 amount, uint256 fromChainID)",
      "function anySwapOut(address token, address to, uint256 amount, uint256 toChainID)",
      "function anySwapOut(address[] tokens, address[] to, uint256[] amounts, uint256[] toChainIDs)",
      "function anySwapOutExactTokensForNative(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 toChainID)",
      "function anySwapOutExactTokensForNativeUnderlying(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 toChainID)",
      "function anySwapOutExactTokensForNativeUnderlyingWithPermit(address from, uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint8 v, bytes32 r, bytes32 s, uint256 toChainID)",
      "function anySwapOutExactTokensForNativeUnderlyingWithTransferPermit(address from, uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint8 v, bytes32 r, bytes32 s, uint256 toChainID)",
      "function anySwapOutExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 toChainID)",
      "function anySwapOutExactTokensForTokensUnderlying(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 toChainID)",
      "function anySwapOutExactTokensForTokensUnderlyingWithPermit(address from, uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint8 v, bytes32 r, bytes32 s, uint256 toChainID)",
      "function anySwapOutExactTokensForTokensUnderlyingWithTransferPermit(address from, uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint8 v, bytes32 r, bytes32 s, uint256 toChainID)",
      "function anySwapOutUnderlying(address token, address to, uint256 amount, uint256 toChainID)",
      "function anySwapOutUnderlyingWithPermit(address from, address token, address to, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s, uint256 toChainID)",
      "function anySwapOutUnderlyingWithTransferPermit(address from, address token, address to, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s, uint256 toChainID)",
      "function cID() view returns (uint256 id)",
      "function changeMPC(address newMPC) returns (bool)",
      "function changeVault(address token, address newVault) returns (bool)",
      "function factory() view returns (address)",
      "function getAmountIn(uint256 amountOut, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountIn)",
      "function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountOut)",
      "function getAmountsIn(uint256 amountOut, address[] path) view returns (uint256[] amounts)",
      "function getAmountsOut(uint256 amountIn, address[] path) view returns (uint256[] amounts)",
      "function mpc() view returns (address)",
      "function quote(uint256 amountA, uint256 reserveA, uint256 reserveB) pure returns (uint256 amountB)",
      "function wNATIVE() view returns (address)"
    ],
    "0xBa8Da9dcF11B50B03fd5284f164Ef5cdEF910705": [
      "constructor(address _factory, address _wNATIVE, address _mpc)",
      "event LogAnySwapIn(bytes32 indexed txhash, address indexed token, address indexed to, uint256 amount, uint256 fromChainID, uint256 toChainID)",
      "event LogAnySwapOut(address indexed token, address indexed from, address indexed to, uint256 amount, uint256 fromChainID, uint256 toChainID)",
      "event LogAnySwapOut(address indexed token, address indexed from, string to, uint256 amount, uint256 fromChainID, uint256 toChainID)",
      "event LogAnySwapTradeTokensForNative(address[] path, address indexed from, address indexed to, uint256 amountIn, uint256 amountOutMin, uint256 fromChainID, uint256 toChainID)",
      "event LogAnySwapTradeTokensForTokens(address[] path, address indexed from, address indexed to, uint256 amountIn, uint256 amountOutMin, uint256 fromChainID, uint256 toChainID)",
      "event LogChangeMPC(address indexed oldMPC, address indexed newMPC, uint256 indexed effectiveTime, uint256 chainID)",
      "event LogChangeRouter(address indexed oldRouter, address indexed newRouter, uint256 chainID)",
      "function anySwapFeeTo(address token, uint256 amount)",
      "function anySwapIn(bytes32[] txs, address[] tokens, address[] to, uint256[] amounts, uint256[] fromChainIDs)",
      "function anySwapIn(bytes32 txs, address token, address to, uint256 amount, uint256 fromChainID)",
      "function anySwapInAuto(bytes32 txs, address token, address to, uint256 amount, uint256 fromChainID)",
      "function anySwapInExactTokensForNative(bytes32 txs, uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 fromChainID) returns (uint256[] amounts)",
      "function anySwapInExactTokensForTokens(bytes32 txs, uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 fromChainID) returns (uint256[] amounts)",
      "function anySwapInUnderlying(bytes32 txs, address token, address to, uint256 amount, uint256 fromChainID)",
      "function anySwapOut(address token, address to, uint256 amount, uint256 toChainID)",
      "function anySwapOut(address token, string to, uint256 amount, uint256 toChainID)",
      "function anySwapOut(address[] tokens, address[] to, uint256[] amounts, uint256[] toChainIDs)",
      "function anySwapOutExactTokensForNative(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 toChainID)",
      "function anySwapOutExactTokensForNativeUnderlying(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 toChainID)",
      "function anySwapOutExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 toChainID)",
      "function anySwapOutExactTokensForTokensUnderlying(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline, uint256 toChainID)",
      "function anySwapOutNative(address token, string to, uint256 toChainID) payable",
      "function anySwapOutNative(address token, address to, uint256 toChainID) payable",
      "function anySwapOutUnderlying(address token, string to, uint256 amount, uint256 toChainID)",
      "function anySwapOutUnderlying(address token, address to, uint256 amount, uint256 toChainID)",
      "function applyMinter(address token)",
      "function cID() view returns (uint256 id)",
      "function changeMPC(address newMPC) returns (bool)",
      "function changeVault(address token, address newVault) returns (bool)",
      "function depositNative(address token, address to) payable returns (uint256)",
      "function enableSwapTrade() view returns (bool)",
      "function factory() view returns (address)",
      "function getAmountIn(uint256 amountOut, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountIn)",
      "function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountOut)",
      "function getAmountsIn(uint256 amountOut, address[] path) view returns (uint256[] amounts)",
      "function getAmountsOut(uint256 amountIn, address[] path) view returns (uint256[] amounts)",
      "function mpc() view returns (address)",
      "function quote(uint256 amountA, uint256 reserveA, uint256 reserveB) pure returns (uint256 amountB)",
      "function revokeMinter(address token, address _auth)",
      "function setEnableSwapTrade(bool enable)",
      "function setMinter(address token, address _auth)",
      "function wNATIVE() view returns (address)",
      "function withdrawNative(address token, uint256 amount, address to) returns (uint256)"
    ]
  },
  "usedTemplates": {}
}
