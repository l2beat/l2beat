{
  "$schema": "../../../../discovery/schemas/config.v2.schema.json",
  "chain": "ethereum",
  "name": "kroma",
  "initialAddresses": [
    "0x31F648572b67e60Ec6eb8E197E1848CC5F5558de",
    "0x827962404D7104202C5aaa6b929115C8211d9596",
    "0x46d07221dfC313afe1BF104F4bB1f185301D65B9",
    "0xb3c415c2Aad428D5570208e1772cb68e7D06a537",
    "0x7e1Bdb9ee75B6ef1BCAAE3B1De1c616C7B11ef6e",
    "0x88b6bBb148748C18B377A57c9d4E6c714AF28078"
  ],
  "names": {
    "0x31F648572b67e60Ec6eb8E197E1848CC5F5558de": "KromaPortal",
    "0x827962404D7104202C5aaa6b929115C8211d9596": "L1StandardBridge",
    "0x180c77aE51a9c505a43A2C7D81f8CE70cacb93A6": "L2OutputOracle",
    "0x3de211088dF516da72efe68D386b561BEE256Ec4": "SecurityCouncil",
    "0x46B8bB4C5dd27bB42807Db477af4d1a7C8A5B746": "L1CrossDomainMessenger",
    "0x713C2BEd44eB45D490afB8D4d1aA6F12290B829a": "Colosseum",
    "0xFdFF462845953D90719A78Fd12a2d103541d2103": "ValidatorPool",
    "0x46d07221dfC313afe1BF104F4bB1f185301D65B9": "L1ERC721Bridge",
    "0xb3c415c2Aad428D5570208e1772cb68e7D06a537": "UpgradeGovernor",
    "0xe4D08346609055c091D3DEECdAAd3Bf83119B08c": "SecurityCouncilToken",
    "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd": "ProxyAdmin",
    "0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1": "Timelock",
    "0x3aa00bb915A8e78b0523E4c365e3E70A19d329e6": "KromaOperator",
    "0x3971EB866AA9b2b8aFEa8a7C816F3b7e8b195a35": "SystemConfig",
    "0xFd234971881a7c72965175fA8E438c97B2Dcd273": "Poseidon2",
    "0x7e1Bdb9ee75B6ef1BCAAE3B1De1c616C7B11ef6e": "USDCBridge",
    "0x88b6bBb148748C18B377A57c9d4E6c714AF28078": "SpectrumCore", // weETH Escrow
    "0xd26F4195B147b988E7497779f7DED22ba130204d": "SC_ProxyAdmin",
    "0x7fe71D0Dde2f6Bbc8474c41dc39bDFd6bCd9Eca5": "SpectrumHub", // spETH custom GW
    "0x9841bC06C8284095824e9397AC818aD1114C444C": "SH_ProxyAdmin",
    "0xf96d4B1e0a0B129e1471e88dF6f1281b933Bc474": "spETH",
    "0xa50f2b3d55fb311c81f6FB75998B48A67505c6F4": "spETH_ProxyAdmin"
  },
  "overrides": {
    "spETH": {
      "ignoreInWatchMode": ["totalSupply"],
      "fields": {
        "accessControl": {
          "handler": {
            "type": "accessControl"
          }
        }
      }
    },
    "SpectrumHub": {
      "fields": {
        "accessControl": {
          "handler": {
            "type": "accessControl"
          }
        }
      },
      "ignoreRelatives": ["getHubStakeAssetLists", "getHubUnstakeAssetLists"]
    },
    "SpectrumCore": {
      "ignoreInWatchMode": ["getGlobalSnap"],
      "fields": {
        "accessControl": {
          "handler": {
            "type": "accessControl"
          }
        }
      },
      "ignoreMethods": ["evalSpectrum", "getSpectrumFromETH"],
      "ignoreRelatives": ["getCoreSupportAssetLists", "getGlobalSnap"]
    },
    "L2OutputOracle": {
      "ignoreMethods": [
        "computeL2Timestamp",
        "finalizedAt",
        "getL2Output",
        "getL2OutputAfter",
        "getL2OutputIndexAfter",
        "getSubmitter",
        "isFinalized"
      ],
      "ignoreInWatchMode": [
        "latestBlockNumber",
        "latestOutputIndex",
        "nextBlockNumber",
        "nextOutputIndex"
      ],
      "fields": {
        "COLOSSEUM": {
          "description": "Contract used to challenge state roots and prove fraud.",
          "severity": "HIGH",
          "type": "CODE_CHANGE"
        }
      }
    },
    "KromaPortal": {
      "ignoreMethods": ["isOutputFinalized"],
      "ignoreInWatchMode": ["params"]
    },
    "SecurityCouncil": {
      "ignoreMethods": [
        "getConfirmationCount",
        "getConfirmations",
        "confirmations",
        "isConfirmed",
        "outputsDeleteRequested",
        "transactions",
        "getOwners", // already read from owners array,
        "clock"
      ],
      "fields": {
        "COLOSSEUM": {
          "description": "Contract used to challenge state roots and prove fraud.",
          "severity": "HIGH",
          "type": "CODE_CHANGE"
        },
        "transactionCount": {
          "description": "Increases with each Security Council action.",
          "severity": "HIGH",
          "type": "L2"
        }
      }
    },
    "L1CrossDomainMessenger": {
      "ignoreMethods": ["xDomainMessageSender"],
      "ignoreInWatchMode": ["messageNonce"]
    },
    "Colosseum": {
      "ignoreMethods": ["isInCreationPeriod"],
      "fields": {
        "challengedRoots": {
          "description": "State roots that have been challenged by the validators. Challenges are created when, according to the validators, the roots commit to an incorrect L2 state.",
          "severity": "MEDIUM",
          "handler": {
            "type": "arrayFromOneEvent",
            "event": "ChallengeCreated",
            "valueKey": "outputIndex",
            "ignoreRelative": true
          }
        },
        "accessControl": {
          "handler": {
            "type": "accessControl"
          }
        }
      }
    },
    "ValidatorPool": {
      "ignoreMethods": ["getBond"],
      "ignoreInWatchMode": ["nextValidator", "validatorCount"]
      // discovers all 300+ validator addresses:
      // "fields": {
      //   "validators": {
      //     "handler": {
      //       "type": "dynamicArray",
      //       "slot": 54,
      //       "returnType": "address",
      //       "ignoreRelative": true
      //     }
      //   }
      // }
    },
    "UpgradeGovernor": {
      "ignoreMethods": [
        "proposalDeadline",
        "proposalEta",
        "proposalProposer",
        "proposalSnapshot",
        "proposalVotes",
        "quorum"
      ],
      "ignoreInWatchMode": ["clock"]
    },
    "SecurityCouncilToken": {
      "ignoreMethods": ["getPastTotalSupply", "tokenByIndex"],
      "ignoreInWatchMode": ["clock", "ownerOf"],
      "fields": {
        "tokens": {
          "handler": {
            "type": "array",
            "method": "tokenByIndex"
          }
        },
        "tokenOwners": {
          "handler": {
            "type": "array",
            "method": "ownerOf",
            "indices": "{{ tokens }}"
          }
        }
      }
    },
    "Timelock": {
      "fields": {
        "accessControl": {
          "handler": {
            "type": "accessControl"
          }
        }
      }
    },
    "SystemConfig": {
      "fields": {
        // this overrides the batcherHash method return type (bytes32 -> address) so our discovery detects it as an address
        "batcherHash": {
          "handler": {
            "type": "call",
            "method": "function batcherHash() view returns (address)",
            "args": []
          }
        },
        "opStackDA": {
          "handler": {
            "type": "opStackDA",
            "sequencerAddress": "{{ batcherHash }}"
          }
        },
        "sequencerInbox": {
          "handler": {
            "type": "opStackSequencerInbox",
            "sequencerAddress": "{{ batcherHash }}"
          }
        },
        "gasLimit": {
          "description": "Gas limit for blocks on L2.",
          "severity": "LOW"
        }
      },
      "ignoreInWatchMode": ["scalar"]
    },
    "USDCBridge": {
      "ignoreMethods": ["OTHER_BRIDGE"]
    }
  }
}
