/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from 'ethers'
import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  L2OutputOracle,
  L2OutputOracleInterface,
} from '../../../contracts/L1/L2OutputOracle'

const _abi = [
  {
    inputs: [
      {
        internalType: 'contract ValidatorPool',
        name: '_validatorPool',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_colosseum',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: '_submissionInterval',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_l2BlockTime',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_startingBlockNumber',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_startingTimestamp',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_finalizationPeriodSeconds',
        type: 'uint256',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'uint8',
        name: 'version',
        type: 'uint8',
      },
    ],
    name: 'Initialized',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'outputIndex',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'newOutputRoot',
        type: 'bytes32',
      },
    ],
    name: 'OutputReplaced',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'outputRoot',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'l2OutputIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'l2BlockNumber',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'l1Timestamp',
        type: 'uint256',
      },
    ],
    name: 'OutputSubmitted',
    type: 'event',
  },
  {
    inputs: [],
    name: 'COLOSSEUM',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'FINALIZATION_PERIOD_SECONDS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'L2_BLOCK_TIME',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'SUBMISSION_INTERVAL',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'VALIDATOR_POOL',
    outputs: [
      {
        internalType: 'contract ValidatorPool',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_l2BlockNumber',
        type: 'uint256',
      },
    ],
    name: 'computeL2Timestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
    ],
    name: 'finalizedAt',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_l2OutputIndex',
        type: 'uint256',
      },
    ],
    name: 'getL2Output',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'submitter',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'outputRoot',
            type: 'bytes32',
          },
          {
            internalType: 'uint128',
            name: 'timestamp',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'l2BlockNumber',
            type: 'uint128',
          },
        ],
        internalType: 'struct Types.CheckpointOutput',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_l2BlockNumber',
        type: 'uint256',
      },
    ],
    name: 'getL2OutputAfter',
    outputs: [
      {
        components: [
          {
            internalType: 'address',
            name: 'submitter',
            type: 'address',
          },
          {
            internalType: 'bytes32',
            name: 'outputRoot',
            type: 'bytes32',
          },
          {
            internalType: 'uint128',
            name: 'timestamp',
            type: 'uint128',
          },
          {
            internalType: 'uint128',
            name: 'l2BlockNumber',
            type: 'uint128',
          },
        ],
        internalType: 'struct Types.CheckpointOutput',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_l2BlockNumber',
        type: 'uint256',
      },
    ],
    name: 'getL2OutputIndexAfter',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
    ],
    name: 'getSubmitter',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_startingBlockNumber',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: '_startingTimestamp',
        type: 'uint256',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_outputIndex',
        type: 'uint256',
      },
    ],
    name: 'isFinalized',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'latestBlockNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'latestOutputIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nextBlockNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'nextOutputIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_l2OutputIndex',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_newOutputRoot',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: '_submitter',
        type: 'address',
      },
    ],
    name: 'replaceL2Output',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'startingBlockNumber',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'startingTimestamp',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '_outputRoot',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: '_l2BlockNumber',
        type: 'uint256',
      },
      {
        internalType: 'bytes32',
        name: '_l1BlockHash',
        type: 'bytes32',
      },
      {
        internalType: 'uint256',
        name: '_l1BlockNumber',
        type: 'uint256',
      },
    ],
    name: 'submitL2Output',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'version',
    outputs: [
      {
        internalType: 'string',
        name: '',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
] as const

const _bytecode =
  '0x6101806040523480156200001257600080fd5b5060405162001bb438038062001bb4833981016040819052620000359162000352565b6001608052600060a081905260c05283620000bd5760405162461bcd60e51b815260206004820152603460248201527f4c324f75747075744f7261636c653a204c3220626c6f636b2074696d65206d7560448201527f73742062652067726561746572207468616e203000000000000000000000000060648201526084015b60405180910390fd5b60008511620001355760405162461bcd60e51b815260206004820152603a60248201527f4c324f75747075744f7261636c653a207375626d697373696f6e20696e74657260448201527f76616c206d7573742062652067726561746572207468616e20300000000000006064820152608401620000b4565b6001600160a01b0380881660e05286166101005261012085905261014084905261016081905262000167838362000174565b50505050505050620003be565b600054610100900460ff1615808015620001955750600054600160ff909116105b80620001c55750620001b2306200032a60201b620013501760201c565b158015620001c5575060005460ff166001145b6200022a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401620000b4565b6000805460ff1916600117905580156200024e576000805461ff0019166101001790555b42821115620002d45760405162461bcd60e51b8152602060048201526044602482018190527f4c324f75747075744f7261636c653a207374617274696e67204c322074696d65908201527f7374616d70206d757374206265206c657373207468616e2063757272656e742060648201526374696d6560e01b608482015260a401620000b4565b60028290556001839055801562000325576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b6001600160a01b03163b151590565b6001600160a01b03811681146200034f57600080fd5b50565b600080600080600080600060e0888a0312156200036e57600080fd5b87516200037b8162000339565b60208901519097506200038e8162000339565b604089015160608a015160808b015160a08c015160c0909c01519a9d939c50919a90999198509650945092505050565b60805160a05160c05160e0516101005161012051610140516101605161175162000463600039600081816104760152818161049d01528181610a9c01528181610d78015261123e01526000818161014b0152610e4f0152600081816101d70152610ea00152600081816102b8015261107d0152600081816103ad015281816106010152610a71015260006105b30152600061058a0152600061056101526117516000f3fe6080604052600436106101345760003560e01c80639e45e8f4116100ab578063cf8e5cf01161006f578063cf8e5cf0146103cf578063d1de856c146103ef578063dcec33481461040f578063e4a3011614610424578063e664672314610444578063f4daa2911461046457600080fd5b80639e45e8f4146102a6578063a25ae557146102f2578063a48ea6de1461035b578063b0ea09a81461037b578063b98debbf1461039b57600080fd5b80635a045f78116100fd5780635a045f781461021b57806369f16eec146102305780636abcf5631461024557806370872aa51461025a5780637f00642014610270578063887862721461029057600080fd5b80622134cc1461013957806333727c4d146101805780634599c788146101b0578063529933df146101c557806354fd4d50146101f9575b600080fd5b34801561014557600080fd5b5061016d7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b34801561018c57600080fd5b506101a061019b3660046114ca565b610498565b6040519015158152602001610177565b3480156101bc57600080fd5b5061016d6104fd565b3480156101d157600080fd5b5061016d7f000000000000000000000000000000000000000000000000000000000000000081565b34801561020557600080fd5b5061020e61055a565b6040516101779190611513565b61022e610229366004611546565b6105fd565b005b34801561023c57600080fd5b5061016d610b28565b34801561025157600080fd5b5060035461016d565b34801561026657600080fd5b5061016d60015481565b34801561027c57600080fd5b5061016d61028b3660046114ca565b610b3a565b34801561029c57600080fd5b5061016d60025481565b3480156102b257600080fd5b506102da7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610177565b3480156102fe57600080fd5b5061031261030d3660046114ca565b610cda565b6040805182516001600160a01b0316815260208084015190820152828201516001600160801b039081169282019290925260609283015190911691810191909152608001610177565b34801561036757600080fd5b5061016d6103763660046114ca565b610d74565b34801561038757600080fd5b506102da6103963660046114ca565b610dd7565b3480156103a757600080fd5b506102da7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103db57600080fd5b506103126103ea3660046114ca565b610e0c565b3480156103fb57600080fd5b5061016d61040a3660046114ca565b610e4b565b34801561041b57600080fd5b5061016d610e93565b34801561043057600080fd5b5061022e61043f366004611578565b610ed9565b34801561045057600080fd5b5061022e61045f3660046115b2565b611072565b34801561047057600080fd5b5061016d7f000000000000000000000000000000000000000000000000000000000000000081565b6000427f0000000000000000000000000000000000000000000000000000000000000000600384815481106104cf576104cf6115eb565b60009182526020909120600260039092020101546104f691906001600160801b0316611617565b1092915050565b6003546000901561055157600380546105189060019061162f565b81548110610528576105286115eb565b6000918252602090912060039091020160020154600160801b90046001600160801b0316919050565b6001545b905090565b60606105857f000000000000000000000000000000000000000000000000000000000000000061135f565b6105ae7f000000000000000000000000000000000000000000000000000000000000000061135f565b6105d77f000000000000000000000000000000000000000000000000000000000000000061135f565b6040516020016105e993929190611646565b604051602081830303815290604052905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633a5490466040518163ffffffff1660e01b8152600401602060405180830381865afa15801561065d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068191906116a0565b90506001600160a01b038082161461072157336001600160a01b038216146107215760405162461bcd60e51b815260206004820152604260248201527f4c324f75747075744f7261636c653a206f6e6c7920746865206e65787420736560448201527f6c65637465642076616c696461746f722063616e207375626d6974206f7574706064820152611d5d60f21b608482015260a4015b60405180910390fd5b610729610e93565b84146107ae5760405162461bcd60e51b815260206004820152604860248201527f4c324f75747075744f7261636c653a20626c6f636b206e756d626572206d757360448201527f7420626520657175616c20746f206e65787420657870656374656420626c6f636064820152673590373ab6b132b960c11b608482015260a401610718565b426107b885610e4b565b106108235760405162461bcd60e51b815260206004820152603560248201527f4c324f75747075744f7261636c653a2063616e6e6f74207375626d6974204c32604482015274206f757470757420696e207468652066757475726560581b6064820152608401610718565b846108965760405162461bcd60e51b815260206004820152603c60248201527f4c324f75747075744f7261636c653a204c3220636865636b706f696e74206f7560448201527f747075742063616e6e6f7420626520746865207a65726f2068617368000000006064820152608401610718565b82158015906108a55750814015155b1561093257828240146109325760405162461bcd60e51b815260206004820152604960248201527f4c324f75747075744f7261636c653a20626c6f636b206861736820646f65732060448201527f6e6f74206d6174636820746865206861736820617420746865206578706563746064820152681959081a195a59da1d60ba1b608482015260a401610718565b600061093d60035490565b60408051608081018252338152602081018981526001600160801b03428181168486019081528b831660608601908152600380546001810182556000829052965196027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b810180546001600160a01b03989098166001600160a01b03199098169790971790965593517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c8601555192518216600160801b0292909116919091177fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d9092019190915590519192508691839189917f457b4388026260019ae0b0b4f16c98235d74fe7359be469bdcba16e6d0d4968991610a5f9190815260200190565b60405180910390a46001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d38dc7ee82610ac17f000000000000000000000000000000000000000000000000000000000000000042611617565b6040516001600160e01b031960e085901b16815260048101929092526001600160801b03166024820152604401600060405180830381600087803b158015610b0857600080fd5b505af1158015610b1c573d6000803e3d6000fd5b50505050505050505050565b6003546000906105559060019061162f565b6000610b446104fd565b821115610bcb5760405162461bcd60e51b815260206004820152604960248201527f4c324f75747075744f7261636c653a2063616e6e6f7420676574206f7574707560448201527f7420666f72206120626c6f636b207468617420686173206e6f74206265656e206064820152681cdd589b5a5d1d195960ba1b608482015260a401610718565b600354610c505760405162461bcd60e51b815260206004820152604760248201527f4c324f75747075744f7261636c653a2063616e6e6f7420676574206f7574707560448201527f74206173206e6f206f7574707574732068617665206265656e207375626d69746064820152661d1959081e595d60ca1b608482015260a401610718565b6003546000905b80821015610cd35760006002610c6d8385611617565b610c7791906116c4565b90508460038281548110610c8d57610c8d6115eb565b6000918252602090912060039091020160020154600160801b90046001600160801b03161015610cc957610cc2816001611617565b9250610ccd565b8091505b50610c57565b5092915050565b60408051608081018252600080825260208201819052918101829052606081019190915260038281548110610d1157610d116115eb565b600091825260209182902060408051608081018252600390930290910180546001600160a01b031683526001810154938301939093526002909201546001600160801b0380821693830193909352600160801b9004909116606082015292915050565b60007f000000000000000000000000000000000000000000000000000000000000000060038381548110610daa57610daa6115eb565b6000918252602090912060026003909202010154610dd191906001600160801b0316611617565b92915050565b600060038281548110610dec57610dec6115eb565b60009182526020909120600390910201546001600160a01b031692915050565b6040805160808101825260008082526020820181905291810182905260608101919091526003610e3b83610b3a565b81548110610d1157610d116115eb565b60007f000000000000000000000000000000000000000000000000000000000000000060015483610e7c919061162f565b610e8691906116e6565b600254610dd19190611617565b60035460009015610ed1577f0000000000000000000000000000000000000000000000000000000000000000610ec76104fd565b6105559190611617565b6105556104fd565b600054610100900460ff1615808015610ef95750600054600160ff909116105b80610f135750303b158015610f13575060005460ff166001145b610f765760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610718565b6000805460ff191660011790558015610f99576000805461ff0019166101001790555b4282111561101d5760405162461bcd60e51b8152602060048201526044602482018190527f4c324f75747075744f7261636c653a207374617274696e67204c322074696d65908201527f7374616d70206d757374206265206c657373207468616e2063757272656e742060648201526374696d6560e01b608482015260a401610718565b60028290556001839055801561106d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461111a5760405162461bcd60e51b815260206004820152604160248201527f4c324f75747075744f7261636c653a206f6e6c792074686520636f6c6f73736560448201527f756d20636f6e74726163742063616e207265706c61636520616e206f757470756064820152601d60fa1b608482015260a401610718565b6001600160a01b0381166111895760405162461bcd60e51b815260206004820152603060248201527f4c324f75747075744f7261636c653a207375626d69747465722061646472657360448201526f732063616e6e6f74206265207a65726f60801b6064820152608401610718565b600354831061120f5760405162461bcd60e51b815260206004820152604660248201527f4c324f75747075744f7261636c653a2063616e6e6f74207265706c616365206160448201527f6e206f757470757420616674657220746865206c6174657374206f7574707574606482015265040d2dcc8caf60d31b608482015260a401610718565b600060038481548110611224576112246115eb565b6000918252602090912060039091020160028101549091507f000000000000000000000000000000000000000000000000000000000000000090611271906001600160801b03164261162f565b106112f55760405162461bcd60e51b815260206004820152604860248201527f4c324f75747075744f7261636c653a2063616e6e6f74207265706c616365206160448201527f6e206f757470757420746861742068617320616c7265616479206265656e20666064820152671a5b985b1a5e995960c21b608482015260a401610718565b6001810183905580546001600160a01b0319166001600160a01b03831617815560405183815284907fa1b831bb8b6b242db6d0988a6d21f869c610de9f703a5e45e1b7d3dc3137b9069060200160405180910390a250505050565b6001600160a01b03163b151590565b6060600061136c836113f2565b600101905060008167ffffffffffffffff81111561138c5761138c611705565b6040519080825280601f01601f1916602001820160405280156113b6576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846113c057509392505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106114315772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061145d576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061147b57662386f26fc10000830492506010015b6305f5e1008310611493576305f5e100830492506008015b61271083106114a757612710830492506004015b606483106114b9576064830492506002015b600a8310610dd15760010192915050565b6000602082840312156114dc57600080fd5b5035919050565b60005b838110156114fe5781810151838201526020016114e6565b8381111561150d576000848401525b50505050565b60208152600082518060208401526115328160408501602087016114e3565b601f01601f19169190910160400192915050565b6000806000806080858703121561155c57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806040838503121561158b57600080fd5b50508035926020909101359150565b6001600160a01b03811681146115af57600080fd5b50565b6000806000606084860312156115c757600080fd5b833592506020840135915060408401356115e08161159a565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561162a5761162a611601565b500190565b60008282101561164157611641611601565b500390565b600084516116588184602089016114e3565b8083019050601760f91b8082528551611678816001850160208a016114e3565b600192019182015283516116938160028401602088016114e3565b0160020195945050505050565b6000602082840312156116b257600080fd5b81516116bd8161159a565b9392505050565b6000826116e157634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561170057611700611601565b500290565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220c75db49ddcbff401125ce614e4d558d5513081193689e139a0ab7b74cb9abd3364736f6c634300080f0033'

type L2OutputOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: L2OutputOracleConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class L2OutputOracle__factory extends ContractFactory {
  constructor(...args: L2OutputOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _validatorPool: string,
    _colosseum: string,
    _submissionInterval: BigNumberish,
    _l2BlockTime: BigNumberish,
    _startingBlockNumber: BigNumberish,
    _startingTimestamp: BigNumberish,
    _finalizationPeriodSeconds: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): Promise<L2OutputOracle> {
    return super.deploy(
      _validatorPool,
      _colosseum,
      _submissionInterval,
      _l2BlockTime,
      _startingBlockNumber,
      _startingTimestamp,
      _finalizationPeriodSeconds,
      overrides || {},
    ) as Promise<L2OutputOracle>
  }
  override getDeployTransaction(
    _validatorPool: string,
    _colosseum: string,
    _submissionInterval: BigNumberish,
    _l2BlockTime: BigNumberish,
    _startingBlockNumber: BigNumberish,
    _startingTimestamp: BigNumberish,
    _finalizationPeriodSeconds: BigNumberish,
    overrides?: Overrides & { from?: string },
  ): TransactionRequest {
    return super.getDeployTransaction(
      _validatorPool,
      _colosseum,
      _submissionInterval,
      _l2BlockTime,
      _startingBlockNumber,
      _startingTimestamp,
      _finalizationPeriodSeconds,
      overrides || {},
    )
  }
  override attach(address: string): L2OutputOracle {
    return super.attach(address) as L2OutputOracle
  }
  override connect(signer: Signer): L2OutputOracle__factory {
    return super.connect(signer) as L2OutputOracle__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): L2OutputOracleInterface {
    return new utils.Interface(_abi) as L2OutputOracleInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): L2OutputOracle {
    return new Contract(address, _abi, signerOrProvider) as L2OutputOracle
  }
}
