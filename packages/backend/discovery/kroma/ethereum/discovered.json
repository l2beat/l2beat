{
  "name": "kroma",
  "chain": "ethereum",
  "blockNumber": 19182633,
  "configHash": "0x8b12679d97bd51878d6adafc0b05c1fb402cd0dc93fff9a4434f0555c9e74d8e",
  "version": 3,
  "contracts": [
    {
      "name": "L2OutputOracle",
      "address": "0x180c77aE51a9c505a43A2C7D81f8CE70cacb93A6",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x14126FFa3889a026A79F0f99FaE80B3dc9E38095",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x14126FFa3889a026A79F0f99FaE80B3dc9E38095"],
      "sinceTimestamp": 1693880579,
      "values": {
        "COLOSSEUM": "0x713C2BEd44eB45D490afB8D4d1aA6F12290B829a",
        "FINALIZATION_PERIOD_SECONDS": 604800,
        "L2_BLOCK_TIME": 2,
        "latestBlockNumber": 6751800,
        "latestOutputIndex": 3751,
        "nextBlockNumber": 6753600,
        "nextOutputIndex": 3752,
        "startingBlockNumber": 0,
        "startingTimestamp": 1693880387,
        "SUBMISSION_INTERVAL": 1800,
        "VALIDATOR_POOL": "0xFdFF462845953D90719A78Fd12a2d103541d2103",
        "version": "1.0.0"
      },
      "derivedName": "L2OutputOracle"
    },
    {
      "name": "Timelock",
      "address": "0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xe44da6e9fA92E3FD897Da84d38fa6B9322Dd22c3",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0xe44da6e9fA92E3FD897Da84d38fa6B9322Dd22c3"],
      "sinceTimestamp": 1693880651,
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1",
              "0xb3c415c2Aad428D5570208e1772cb68e7D06a537"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xb3c415c2Aad428D5570208e1772cb68e7D06a537"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xb3c415c2Aad428D5570208e1772cb68e7D06a537"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xb3c415c2Aad428D5570208e1772cb68e7D06a537"]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 604800,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5",
        "version": "1.0.0"
      },
      "derivedName": "TimeLock"
    },
    {
      "name": "KromaPortal",
      "address": "0x31F648572b67e60Ec6eb8E197E1848CC5F5558de",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x381F53695230BAF83a39D1a08304D233A35730Fa",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x381F53695230BAF83a39D1a08304D233A35730Fa"],
      "sinceTimestamp": 1693880555,
      "values": {
        "GUARDIAN": "0x3de211088dF516da72efe68D386b561BEE256Ec4",
        "L2_ORACLE": "0x180c77aE51a9c505a43A2C7D81f8CE70cacb93A6",
        "l2Sender": "0x000000000000000000000000000000000000dEaD",
        "params": [1000000000, 200000, 19180986],
        "paused": false,
        "SYSTEM_CONFIG": "0x3971EB866AA9b2b8aFEa8a7C816F3b7e8b195a35",
        "VALIDATOR_POOL": "0xFdFF462845953D90719A78Fd12a2d103541d2103",
        "version": "1.0.0",
        "ZK_MERKLE_TRIE": "0x339208824010425cBE73201ceD4372308ACD610B"
      },
      "derivedName": "KromaPortal"
    },
    {
      "name": "ZKMerkleTrie",
      "address": "0x339208824010425cBE73201ceD4372308ACD610B",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1693288019,
      "values": {
        "POSEIDON2": "0xFd234971881a7c72965175fA8E438c97B2Dcd273"
      }
    },
    {
      "name": "SystemConfig",
      "address": "0x3971EB866AA9b2b8aFEa8a7C816F3b7e8b195a35",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x2af8a383C395EBa6551E674EeD02344936fE36f5",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x2af8a383C395EBa6551E674EeD02344936fE36f5"],
      "sinceTimestamp": 1693880543,
      "values": {
        "batcherHash": "0x41b8cD6791De4D8f9E0eaF7861aC506822AdcE12",
        "gasLimit": 30000000,
        "minimumGasLimit": 21000000,
        "opStackDA": {
          "isSomeTxsLengthEqualToCelestiaDAExample": false
        },
        "overhead": 188,
        "owner": "0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1",
        "resourceConfig": [
          20000000,
          10,
          8,
          1000000000,
          1000000,
          "340282366920938463463374607431768211455"
        ],
        "scalar": 684000,
        "sequencerInbox": "0xfF00000000000000000000000000000000000255",
        "UNSAFE_BLOCK_SIGNER_SLOT": "0x65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
        "unsafeBlockSigner": "0x994C074BD9503e4f01CB834e2c409FA16b41E587",
        "validatorRewardScalar": 5000,
        "version": "1.0.0",
        "VERSION": 0
      },
      "derivedName": "SystemConfig"
    },
    {
      "name": "SecurityCouncil",
      "address": "0x3de211088dF516da72efe68D386b561BEE256Ec4",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x61c7C854Dcdf8393230B1242a4c1107f4d023c28",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x61c7C854Dcdf8393230B1242a4c1107f4d023c28"],
      "sinceTimestamp": 1693880627,
      "values": {
        "COLOSSEUM": "0x713C2BEd44eB45D490afB8D4d1aA6F12290B829a",
        "GOVERNOR": "0xb3c415c2Aad428D5570208e1772cb68e7D06a537",
        "quorum": 7,
        "transactionCount": 0,
        "version": "1.1.0"
      },
      "derivedName": "SecurityCouncil"
    },
    {
      "name": "L1CrossDomainMessenger",
      "address": "0x46B8bB4C5dd27bB42807Db477af4d1a7C8A5B746",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x675924D68200F2C967Ba12349d5d510676C7214c",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x675924D68200F2C967Ba12349d5d510676C7214c"],
      "sinceTimestamp": 1693880591,
      "values": {
        "MESSAGE_VERSION": 0,
        "messageNonce": 494,
        "MIN_GAS_CALLDATA_OVERHEAD": 16,
        "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR": 63,
        "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR": 64,
        "OTHER_MESSENGER": "0x4200000000000000000000000000000000000004",
        "paused": false,
        "PORTAL": "0x31F648572b67e60Ec6eb8E197E1848CC5F5558de",
        "RELAY_CALL_OVERHEAD": 40000,
        "RELAY_CONSTANT_OVERHEAD": 200000,
        "RELAY_GAS_CHECK_BUFFER": 5000,
        "RELAY_RESERVED_GAS": 40000,
        "version": "1.0.0"
      },
      "derivedName": "L1CrossDomainMessenger"
    },
    {
      "name": "L1ERC721Bridge",
      "address": "0x46d07221dfC313afe1BF104F4bB1f185301D65B9",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xbB1cDB5Cc35B1c9801DA8772aCBcDbd323A912D9",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0xbB1cDB5Cc35B1c9801DA8772aCBcDbd323A912D9"],
      "sinceTimestamp": 1693287695,
      "values": {
        "MESSENGER": "0x46B8bB4C5dd27bB42807Db477af4d1a7C8A5B746",
        "OTHER_BRIDGE": "0x420000000000000000000000000000000000000A",
        "version": "1.0.0"
      },
      "derivedName": "L1ERC721Bridge"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1693287587,
      "values": {
        "owner": "0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "name": "ZKVerifier",
      "address": "0x6deb6a630D7b486c1C08d4016AEe3835a2F52Fa7",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x7E79726560B140fd6e089547bD049509F5423BFf",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x7E79726560B140fd6e089547bD049509F5423BFf"],
      "sinceTimestamp": 1693287719,
      "values": {
        "version": "0.1.4"
      }
    },
    {
      "name": "Colosseum",
      "address": "0x713C2BEd44eB45D490afB8D4d1aA6F12290B829a",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x7526F997ea040B3949415c3a44e708273863AA2b",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x7526F997ea040B3949415c3a44e708273863AA2b"],
      "sinceTimestamp": 1693880615,
      "values": {
        "BISECTION_TIMEOUT": 3600,
        "challengedRoots": [],
        "CREATION_PERIOD_SECONDS": 518400,
        "DUMMY_HASH": "0xedf1ae3da135c124658e215a9bf53477facb442a1dcd5a92388332cb6193237f",
        "L2_ORACLE": "0x180c77aE51a9c505a43A2C7D81f8CE70cacb93A6",
        "L2_ORACLE_SUBMISSION_INTERVAL": 1800,
        "MAX_TXS": 100,
        "PROVING_TIMEOUT": 28800,
        "SECURITY_COUNCIL": "0x3de211088dF516da72efe68D386b561BEE256Ec4",
        "version": "1.0.0",
        "ZK_MERKLE_TRIE": "0x339208824010425cBE73201ceD4372308ACD610B",
        "ZK_VERIFIER": "0x6deb6a630D7b486c1C08d4016AEe3835a2F52Fa7"
      },
      "derivedName": "Colosseum"
    },
    {
      "name": "L1StandardBridge",
      "address": "0x827962404D7104202C5aaa6b929115C8211d9596",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x404133EdF24F56b7dD9c6d89Fb56bb35244461B4",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x404133EdF24F56b7dD9c6d89Fb56bb35244461B4"],
      "sinceTimestamp": 1693880603,
      "values": {
        "MESSENGER": "0x46B8bB4C5dd27bB42807Db477af4d1a7C8A5B746",
        "OTHER_BRIDGE": "0x4200000000000000000000000000000000000009",
        "version": "1.0.0"
      },
      "derivedName": "L1StandardBridge"
    },
    {
      "name": "UpgradeGovernor",
      "address": "0xb3c415c2Aad428D5570208e1772cb68e7D06a537",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x64F8F4EB207D51F74caf6db644Bf710Ad86989b3",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x64F8F4EB207D51F74caf6db644Bf710Ad86989b3"],
      "sinceTimestamp": 1693880663,
      "values": {
        "BALLOT_TYPEHASH": "0x150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f",
        "clock": 19182633,
        "CLOCK_MODE": "mode=blocknumber&from=default",
        "COUNTING_MODE": "support=bravo&quorum=for,abstain",
        "eip712Domain": [
          "0x0f",
          "UpgradeGovernor",
          "1.0.0",
          1,
          "0xb3c415c2Aad428D5570208e1772cb68e7D06a537",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          []
        ],
        "EXTENDED_BALLOT_TYPEHASH": "0xb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af88",
        "name": "UpgradeGovernor",
        "proposalThreshold": 1,
        "quorumDenominator": 100,
        "quorumNumerator": 82,
        "state": [],
        "timelock": "0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1",
        "token": "0xe4D08346609055c091D3DEECdAAd3Bf83119B08c",
        "version": "1.0.0",
        "votingDelay": 0,
        "votingPeriod": 21600
      },
      "derivedName": "UpgradeGovernor"
    },
    {
      "name": "SecurityCouncilToken",
      "address": "0xe4D08346609055c091D3DEECdAAd3Bf83119B08c",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x108eDc4Df0b9B04dcE9f6FFBD65Dd9895562c14C",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x108eDc4Df0b9B04dcE9f6FFBD65Dd9895562c14C"],
      "sinceTimestamp": 1693880639,
      "values": {
        "clock": 19182633,
        "CLOCK_MODE": "mode=blocknumber&from=default",
        "DOMAIN_SEPARATOR": "0x1630586f33defc933258f4512df143dd6bf7adb1b4d039178e748d4cac4813b8",
        "eip712Domain": [
          "0x0f",
          "KromaSecurityCouncil",
          "1",
          1,
          "0xe4D08346609055c091D3DEECdAAd3Bf83119B08c",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          []
        ],
        "getApproved": ["0x0000000000000000000000000000000000000000"],
        "locked": [true],
        "name": "KromaSecurityCouncil",
        "owner": "0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1",
        "ownerOf": ["0x3aa00bb915A8e78b0523E4c365e3E70A19d329e6"],
        "paused": false,
        "symbol": "KSC",
        "tokenOwners": [
          "0x3aa00bb915A8e78b0523E4c365e3E70A19d329e6",
          "0xe1b712e16Be1Eb098D0b2B846e2f547F9E292851",
          "0x8ECF028Cd647379E580DaA6701A11154750fcd3c",
          "0xbDeE962137373A755a71C716E01B9946B1a27686",
          "0x7B3225ADc5D908668FaA050246680CBE4e75A93f",
          "0x5ddcf494A8b6EeE4904934E829109cCF584EAF80",
          "0xECe4AAf6A41aa81A164363Ec6C420510617Fc998",
          "0x3a4F65D1ACFb2A3F5AD93ef7b240bfa1079052e0",
          "0x42a4f1958A5d99A62C50eb24a80d1D8b142ea3A1"
        ],
        "tokens": [0, 3, 4, 5, 6, 7, 8, 9, 10],
        "tokenURI": ["https://nft.kroma.network/sc/1.png"],
        "totalSupply": 9,
        "version": "1.0.1"
      },
      "derivedName": "SecurityCouncilToken"
    },
    {
      "name": "Poseidon2",
      "address": "0xFd234971881a7c72965175fA8E438c97B2Dcd273",
      "unverified": true,
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1693288007,
      "derivedName": ""
    },
    {
      "name": "ValidatorPool",
      "address": "0xFdFF462845953D90719A78Fd12a2d103541d2103",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x3eb033BAc5c449bDcb6D082c4f728eDAfC8D75fa",
        "admin": "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd"
      },
      "implementations": ["0x3eb033BAc5c449bDcb6D082c4f728eDAfC8D75fa"],
      "sinceTimestamp": 1693880567,
      "values": {
        "L2_ORACLE": "0x180c77aE51a9c505a43A2C7D81f8CE70cacb93A6",
        "MAX_UNBOND": 10,
        "nextValidator": "0x8F1c3626686D9BCbc1C1Cd589Ef7161B01D52b70",
        "PORTAL": "0x31F648572b67e60Ec6eb8E197E1848CC5F5558de",
        "REQUIRED_BOND_AMOUNT": "200000000000000000",
        "ROUND_DURATION": 1800,
        "SECURITY_COUNCIL": "0x3de211088dF516da72efe68D386b561BEE256Ec4",
        "TAX_DENOMINATOR": 100,
        "TAX_NUMERATOR": 20,
        "TRUSTED_VALIDATOR": "0x3aa00bb915A8e78b0523E4c365e3E70A19d329e6",
        "validatorCount": 194,
        "validators": [
          "0x3aa00bb915A8e78b0523E4c365e3E70A19d329e6",
          "0xE540C94F2F32DF07160f7fdb6A6AE0Bc7B9920f7",
          "0x0379ba2B5f5b894a98D41090893662b7aB8fC8A5",
          "0xEfC56f2f474e689dE3A1F62656BbAe5111A22a9a",
          "0xECe4AAf6A41aa81A164363Ec6C420510617Fc998",
          "0x691b96Cb652eEdd9C09ED92013db651640746c00",
          "0x7B3225ADc5D908668FaA050246680CBE4e75A93f",
          "0xc931c3C4feBa2b91127bEC5c64c11d78221eD7B7",
          "0x41852D4F060b7a209FDc073E48fB26eea3D19ca3",
          "0xCad4acC8e9dCf550CDf7Bb0a2d8d2Ea526210C87",
          "0x5ddcf494A8b6EeE4904934E829109cCF584EAF80",
          "0x3a4F65D1ACFb2A3F5AD93ef7b240bfa1079052e0",
          "0xbDeE962137373A755a71C716E01B9946B1a27686",
          "0x7F390C65116A29edEb1663F14aE3947877CbB1aB",
          "0x73E1c971260B3f9740Fb6E0884b236eb35356191",
          "0x42a4f1958A5d99A62C50eb24a80d1D8b142ea3A1",
          "0x5B545B2DB372158a22F53ED980E99116d1685C08",
          "0x2779a1591b73c0E69dE57D1Ee262C3f9e3d1635f",
          "0x2333E4442E9b05a9857e9Cbf89f937b8a60C95Af",
          "0xe1b712e16Be1Eb098D0b2B846e2f547F9E292851",
          "0x55B5603072Cc1652f5c4B9dcD573631115f402DE",
          "0x063BC3ee1b548509DBA15b9C5a0e49725D24aaaC",
          "0x44b626d97E17AbdE90C0922357A669490172867c",
          "0xcC2351dEB494557b10c5BC5593022f4b8dE121AE",
          "0x6fE99a7073F03258146527f1ceAeF45a0d8E58a4",
          "0xD120939310330106443BA4088CD68026b42E04bf",
          "0xF218A2Ce07dF6b2eC89e87fC0050dF656d1D0052",
          "0xAb80196733beB4594c000b9527ad9D03AE5cEfb5",
          "0x7429357fb2125743d32625Cd0E9757a9e50A6aAC",
          "0xeFe674F55d86468b69EA2Fe40DE8C3b09C378548",
          "0x3F870Fe9504218BC58B71674349beAc058dC2BDe",
          "0xC63Cc019Bb47A948131891407d1371849B757714",
          "0xfB090D5c0A2d2CD4A038E1f6e87d83fCca1Be9b4",
          "0x8E36Dad1040993820BE0885feE75a721C14EA872",
          "0x9F678265d6c69DC3036E2877b6C60499b1125DBA",
          "0xC983F676141A6784dd345D235A639B3381B4db82",
          "0xfC3867F19161b8981d8B9c9fa3D7360c9Cee9733",
          "0xA3A81c16C85f2B118ceF7Fe9f034fAC72882c517",
          "0x2E8a03820c77312FE1B189a78963e94553f11b6F",
          "0xEA87A83B032B3Ac8a96CAEE2A42eC516b1bAeB74",
          "0xeE0E292408BC4eA614c866311c8C6D87b5Bc8693",
          "0xF3507DB640493bE370e44a68638125F4F6981043",
          "0x35B7D2D6dCFdfD937973Ce685C73ED7F3Fc45A70",
          "0xAf44576135D1Af2466FB4a027322A356F21D3182",
          "0xB657e7e7082D799c670bb585feE145678a0CBE61",
          "0xb7c941fEa57Ab47d3508D30f143E9145d2B82eD7",
          "0x11BFA0158ecf3cBE11cC05019B454d97280E09d9",
          "0x34FcBE2eEA688e55Db5Ac9aD66373743911dB601",
          "0x7Fb00286be9C3A893D9EF89fB3269eBb057bc04b",
          "0x286598ebF05fdFC1177161ec2dFfD469D4d23f55",
          "0xFF48E03C97e353B5623a9B84c967A843Bb6fE326",
          "0xc8E3928E2f3D88ef3426aA90E5FFA249345D7d77",
          "0x1F4f1450Cb0e8BF8cB792e37a2Cc41d990dB081D",
          "0xd2261925c992ccB881F30d1206D5382358ba54c7",
          "0x5b523043Fd361f3B5DD0876C2D50A9e933aD7E90",
          "0x6bd1DC8D10bc1988078535A1f5a30B1e1525e761",
          "0xF390D6B6316985DfD3eC403e5B35B55b316Fbf8C",
          "0x866eFaD8e1B5E5294aB5107DD3fafaaeDFab90e3",
          "0x328fbE99cC9A05f9e6f956847EDF8075661eb5fF",
          "0xc1FE32F8127Fd2f198Aa643f748848958a7FF925",
          "0x3Bf24cFD4208f7301295D73AC224977F9f56b23f",
          "0x2B74F75c069a80eB2595E2AbE5C79803Bb5adad0",
          "0x4F537f9b9f23df77EEC35BccAC149eaBe9b5F618",
          "0xD53b5B82936cD6d6E89D5f5250F681874c223b8C",
          "0x568C44943e2034Dd86B9c9d237672ebBdbE959E3",
          "0x0048B1937C87Bc66C69301f2ea72aB4a42d44681",
          "0xa7584c69EFCE8bFA88765f99306aa701be2B9171",
          "0xb0B1103B488aB5281EE02CafeEF382845A89b444",
          "0xB842088f301B25F3cf0fFb19AE7FC7F70F01903b",
          "0xCA374949e00536CBC6c95912a15643ff1afD11BE",
          "0x6fbD17ce339A8153AB459dE946951c51DDFBDB48",
          "0x58029098E47A952a07cafcA1D0A216A8c0fAde56",
          "0xed5696bE6b2E74a47F5AE775D2126af4aF94b701",
          "0x74F66e40Ccf771Bf1bD7321B92251F89952530F6",
          "0x6Ee7426e7c95BDE071eDf1C8c1c478499552f5D7",
          "0xDbD2f59462261D6000827B5cb4C011e77A88d779",
          "0xdBBDF1991C64f6493Cdc202fb04eC7D5775278b9",
          "0xC512Bb0553156fF14EA45782668583F102bEcd5D",
          "0x595663Cb2b5Ab8535227cAE975766D46184c8e88",
          "0x6079195f115A428058B1F4bdd2F990e3e131eF73",
          "0x1af5C7aD88b953117073991d8a45046Cac5f5DA5",
          "0x13073f1A19969D04Ea6060D8eFE6A7391C73a29D",
          "0x6227cAe28745989c8C5e29C5bcee1eD3D7A5cDC0",
          "0x5D0dbcEBF6EB4a117e09aE4b16cc6576785A038c",
          "0x70FBa8B8C23e97BE0DAe995AD239697225e98652",
          "0x04BDa0bD3022715D00FB8717696418e8963e1cfd",
          "0x5B514ACc0857e9902476e2ed686148EEf041Fd93",
          "0x5756eD22b0630B59e4bAb01e5ceaaAC68f1BAd24",
          "0xe18486aA64F04C38449A7a7B462d17a87e47cEa2",
          "0xbAC64Cbc0915E1f39bdE620fBDFaB0A06D48664A",
          "0x1D8a3DF674993cA7851AED15a318BC0151424164",
          "0x6ba9E13BEC9a44055B4Fa3f1B656EF72573CA5f2",
          "0x1cCCB15378D897aeE65BDD8f92182F90e217b967",
          "0x0B467455E28d40Ef49B1EDD64f8657CF9B6A4358",
          "0x91b6178188ccDD1e735F54ba135cd5EcabECdB15",
          "0x881B5289790bF431b38bcC752FF6A4184Bf4A7EC",
          "0x14A63749e57A273187ac229F22249683a4F6B83b",
          "0xb3ddE93c4B9AE41F5e8751a37D586cD71787DA60",
          "0xF29E2BD1164b91EEe85Ec81c5b88Aba7B79ACBF3",
          "0x3A68B16303AF7969aE0E84DEd82dbF865D725547",
          "0x9D493D9d3eFEE49F6FA90fEBc6ef6d284B161A2c",
          "0x655fED6846693da4A7223A07652BF12E66414581",
          "0xBB62f18515De9BC747669C4e38A89429267BaB9e",
          "0xF7b515EEFF54a247cFD3d5292AeFE38605B1237B",
          "0x7a1D00e07eEF5707D522C3409e0fb58229c604A3",
          "0x049810A2A58a93e8A511A69214C5250667dDc4d3",
          "0x7231826E2504365248C75106553Fa4Ee044208AE",
          "0xEf41997e0ED63250Ba6846729f8078f7ad171A40",
          "0x9beaafbC5948cC02f85e1016E4A8bc5622768e4d",
          "0xFab557d2c471983541709968AC7EEF398fE6133A",
          "0x14dD4cCe169FAe0862FAf1EFd1160356b0D9Fb47",
          "0x146124d752B5A93D0E5BE93AFeAcad4c980a9637",
          "0x941F031D455912D1482B22c54efceDeFb5146AAF",
          "0x65D4b6Ec7289e94b49A02b6B2654c4Ed9fE50CFB",
          "0xcfBA39c653cae1C2d8271Ca17752a557335eba3B",
          "0x3d98e7E45a7dca3Fdf6CAA8369A077aA96a45265",
          "0x4fF82452A8D0F94A3B52f6a891e5b794d7A2FD52",
          "0xF2aDaDd8B006D6317dE7E440Db067b14180101D4",
          "0xcB8B4a4E6D720cAA07f67158696c6526051390B4",
          "0xC8c05DFE6721571F1D91e81B2469e214F9306170",
          "0x80335e2BB7ff34369E373e6aeb0b9a2857428866",
          "0x3123Df5C6166f59BaaFbbb021d1F32Baab272318",
          "0xCbcFB49676e04e6F4C14673EB1C0375D07577856",
          "0xD5dCab0bd89657322c0D1f4d98f806f98AB4808c",
          "0xC8C32E106a75819839d14dF77aEbda0A9dB1E113",
          "0x5045E61746BA204A0200C8321832A95833b42FBd",
          "0xFb2d2BCA59dF62DFb3cE7215121ed90f6B17727B",
          "0x06eAcd795b9171D186b8dd14178A2D1F0Df2b7E8",
          "0xb68C2E299d6736cE79061f1fed2acA8366BD9D91",
          "0xB98f27E0e2958f24778c3677731D892B37184ccf",
          "0x8A506468814600859663Af4eee3C260BdCa30BcA",
          "0x468C5B98D6A3fA746694c4a38D0aEc576BaC9bd4",
          "0x87D62f0338fa0A17B68D77005aE84015aaA76d93",
          "0xC3f044e25630C8eC292b876f90DF13e83283d471",
          "0x7d06b6eA10cCb824d12FEd7c934B89866ab26C33",
          "0x62805414dfe76c52cD9B80636E03d3C957844594",
          "0xa560e492FE5F3fBf0af29E9A943870298da0B757",
          "0x34e97d4A25A35e1F8594d6FDcff30917640a46eA",
          "0x2B48290B911e3c7D1F49BfB2f85f156c06824976",
          "0x191a161953D001e53B7fa5862e032fB0CBFD6C09",
          "0xfCca5b5132A7AC520eE61e41A48d187Dbd2e942b",
          "0xc5F28EEb0A954ed9595b52e94f8Ac0B386eb0b53",
          "0x9D231BD744A7965E81E219Fcdf5fb091062020AB",
          "0xfeaC3EAeE9C509cBbff72F701174c7D6253069F1",
          "0x66e9433C61382d0cE9cE879f0b1598b84e895fc9",
          "0xB647D46C8378F6Ce8Df325263204Ce962961F804",
          "0x976EffE91651CF0d3c78343f5205B22DFDe34597",
          "0x510E315047cEEF91675fEcE17cC5e0297962a33A",
          "0x435663829b595621a3a1c0BA2a7622193A7B5b21",
          "0x52A81362E4858A1B6776131B008C7dF8eB106fE5",
          "0x9dff812c78a41b4d6c0801a2C37d520AdbAE1184",
          "0x884aa1b2db923dccfe912fC4FbFe2d6E1254a37D",
          "0xC001052B0bC1Bb7b15C2d5858bf79c5ef9eAd09e",
          "0x9Da32451d8ace758f3f65F4AE786992C8ed71fEb",
          "0x8ECF028Cd647379E580DaA6701A11154750fcd3c",
          "0xc590f99D17c1c795c4F3E7492EAd9147764515bb",
          "0x9B6B7fd6CD5deE2d41C6E16da39847B94C0ab096",
          "0x5e1Da8111DBC0c372404251e73a5F8d6b7362997",
          "0xB22d46fB8B38600fd2c2E8BB8bcD49F7D4dC6931",
          "0x9d7f99CF35BA7Ee987911E0925E4DD05AB8f7acb",
          "0xb7eAe19d40ee23DC8bccE15d3Eb63d2a13C59383",
          "0xB6841Eb53eB5053f14a84C9f979776973Ebae23A",
          "0x70E43Adef3236371205254e4e9DcEC8E3478A02E",
          "0x4D705F1A6cAeA5623389E3527B41c133Fe119bd4",
          "0x5C0c4fe54F846da2bAC9C694E810F8CE0735d9a6",
          "0x5d3a0eB74Fd2937F4D292b043FBcDF117D6b05a7",
          "0xC2B82e6f92F26f73a29d06A80dee513Ef4160929",
          "0xeB85e095dbcf0Ae5E43E0283D4E5D1DC04855b31",
          "0xCf7Fde55A0Dd4Ee454731557757b47e2340b4570",
          "0x1D8B6559D7c698ACF6033B278DA3eC8F240F7301",
          "0x10545002c0c58c1148Ca96d7E4342BeC809CB4c5",
          "0x9E728Dfe00D6e43f67C5A46e420d655053A7cb5F",
          "0xBD5f6648872702505547dDcF7c51fB0b1A23e843",
          "0x7180650FE131F2c4ADcDE9D6339D360074e9a501",
          "0x14a353140a6D237CdF4e737457cb1B1D3217cCC9",
          "0xccC50AA774511a6EDAA1055580Ac6Bd490C9ef56",
          "0xA951596d878B17Ce4DA9085543197Fcc03802c5D",
          "0xb9d920b0bCA644fD1332351b9136BB04d6F8Aa0f",
          "0x3416e93887E8a94167A2bA1c2683146eaEd1b691",
          "0x5f12A882A44ccb837F07091eE8A30D8eB0E1ED09",
          "0xBce9B0898aC0D0a4Bc9DCc71544B8e56e29a7B00",
          "0x4660cf1d89C31C07C2b405b05a1024ad44c4Aca0",
          "0xC4F8d02c0d711c0a7B7ED12759329D93a4938810",
          "0x75891caf8A2399010f8e67F550a0116A404E398E",
          "0x8F1c3626686D9BCbc1C1Cd589Ef7161B01D52b70",
          "0xdb44e34e69e38c5be292b53Dd244FA6de9bd5554",
          "0x5040437C924b58b239b0E49d85582b94401ff99d",
          "0xbcbafDBe5ee7983C05425826C89E80C405325082",
          "0x2B24035B1Aa70eFe7F5AeA73bd1Bbf390154F0A4",
          "0xbB6492dD09B77662983c063a1939F07fEa85Dceb",
          "0x9b6B9EB3f769768Ec8bE8e021fA17aeD0Dc8A2c3",
          "0x44Ba3AE0bfd7E3ecBBCD8A14b97dE3724FCb5E15",
          "0x6b8403aaba1B9bF8C082307d625222F148873e1f",
          "0xA0ce6Bd9867D8A729455Cf79983bD947dC095C79"
        ],
        "VAULT_REWARD_GAS_LIMIT": 100000,
        "version": "1.0.1"
      },
      "derivedName": "ValidatorPool"
    }
  ],
  "eoas": [
    "0x000000000000000000000000000000000000dEaD",
    "0x3a4F65D1ACFb2A3F5AD93ef7b240bfa1079052e0",
    "0x3aa00bb915A8e78b0523E4c365e3E70A19d329e6",
    "0x41b8cD6791De4D8f9E0eaF7861aC506822AdcE12",
    "0x4200000000000000000000000000000000000004",
    "0x4200000000000000000000000000000000000009",
    "0x420000000000000000000000000000000000000A",
    "0x42a4f1958A5d99A62C50eb24a80d1D8b142ea3A1",
    "0x5ddcf494A8b6EeE4904934E829109cCF584EAF80",
    "0x7B3225ADc5D908668FaA050246680CBE4e75A93f",
    "0x8ECF028Cd647379E580DaA6701A11154750fcd3c",
    "0x8F1c3626686D9BCbc1C1Cd589Ef7161B01D52b70",
    "0x994C074BD9503e4f01CB834e2c409FA16b41E587",
    "0xbDeE962137373A755a71C716E01B9946B1a27686",
    "0xe1b712e16Be1Eb098D0b2B846e2f547F9E292851",
    "0xECe4AAf6A41aa81A164363Ec6C420510617Fc998",
    "0xfF00000000000000000000000000000000000255"
  ],
  "abis": {
    "0x108eDc4Df0b9B04dcE9f6FFBD65Dd9895562c14C": [
      "constructor()",
      "error ErrLocked()",
      "error ErrNotFound()",
      "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
      "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
      "event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event Locked(uint256 tokenId)",
      "event MetadataUpdate(uint256 _tokenId)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
      "event Unlocked(uint256 tokenId)",
      "event Unpaused(address account)",
      "function CLOCK_MODE() view returns (string)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function approve(address approved, uint256 tokenId)",
      "function balanceOf(address owner) view returns (uint256)",
      "function burn(uint256 tokenId)",
      "function clock() view returns (uint48)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address account) view returns (address)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function getApproved(uint256 tokenId) view returns (address)",
      "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
      "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
      "function getVotes(address account) view returns (uint256)",
      "function initialize(address _owner)",
      "function isApprovedForAll(address owner, address operator) view returns (bool)",
      "function locked(uint256 tokenId) view returns (bool)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function ownerOf(uint256 tokenId) view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function renounceOwnership()",
      "function safeMint(address to, string uri)",
      "function safeTransferFrom(address from, address to, uint256 tokenId)",
      "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
      "function setApprovalForAll(address operator, bool approved)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function tokenByIndex(uint256 index) view returns (uint256)",
      "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
      "function tokenURI(uint256 tokenId) view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address from, address to, uint256 tokenId)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function version() view returns (string)"
    ],
    "0x14126FFa3889a026A79F0f99FaE80B3dc9E38095": [
      "constructor(address _validatorPool, address _colosseum, uint256 _submissionInterval, uint256 _l2BlockTime, uint256 _startingBlockNumber, uint256 _startingTimestamp, uint256 _finalizationPeriodSeconds)",
      "event Initialized(uint8 version)",
      "event OutputReplaced(uint256 indexed outputIndex, bytes32 newOutputRoot)",
      "event OutputSubmitted(bytes32 indexed outputRoot, uint256 indexed l2OutputIndex, uint256 indexed l2BlockNumber, uint256 l1Timestamp)",
      "function COLOSSEUM() view returns (address)",
      "function FINALIZATION_PERIOD_SECONDS() view returns (uint256)",
      "function L2_BLOCK_TIME() view returns (uint256)",
      "function SUBMISSION_INTERVAL() view returns (uint256)",
      "function VALIDATOR_POOL() view returns (address)",
      "function computeL2Timestamp(uint256 _l2BlockNumber) view returns (uint256)",
      "function finalizedAt(uint256 _outputIndex) view returns (uint256)",
      "function getL2Output(uint256 _l2OutputIndex) view returns (tuple(address submitter, bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputAfter(uint256 _l2BlockNumber) view returns (tuple(address submitter, bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputIndexAfter(uint256 _l2BlockNumber) view returns (uint256)",
      "function getSubmitter(uint256 _outputIndex) view returns (address)",
      "function initialize(uint256 _startingBlockNumber, uint256 _startingTimestamp)",
      "function isFinalized(uint256 _outputIndex) view returns (bool)",
      "function latestBlockNumber() view returns (uint256)",
      "function latestOutputIndex() view returns (uint256)",
      "function nextBlockNumber() view returns (uint256)",
      "function nextOutputIndex() view returns (uint256)",
      "function replaceL2Output(uint256 _l2OutputIndex, bytes32 _newOutputRoot, address _submitter)",
      "function startingBlockNumber() view returns (uint256)",
      "function startingTimestamp() view returns (uint256)",
      "function submitL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1BlockHash, uint256 _l1BlockNumber) payable",
      "function version() view returns (string)"
    ],
    "0x180c77aE51a9c505a43A2C7D81f8CE70cacb93A6": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x22605A12cB77Fe420B0cC1263cEb58a77352FDc1": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x2af8a383C395EBa6551E674EeD02344936fE36f5": [
      "constructor(address _owner, uint256 _overhead, uint256 _scalar, bytes32 _batcherHash, uint64 _gasLimit, address _unsafeBlockSigner, tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config, uint256 _validatorRewardScalar)",
      "event ConfigUpdate(uint256 indexed version, uint8 indexed updateType, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UNSAFE_BLOCK_SIGNER_SLOT() view returns (bytes32)",
      "function VERSION() view returns (uint256)",
      "function batcherHash() view returns (bytes32)",
      "function gasLimit() view returns (uint64)",
      "function initialize(address _owner, uint256 _overhead, uint256 _scalar, bytes32 _batcherHash, uint64 _gasLimit, address _unsafeBlockSigner, tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config, uint256 _validatorRewardScalar)",
      "function minimumGasLimit() view returns (uint64)",
      "function overhead() view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function resourceConfig() view returns (tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee))",
      "function scalar() view returns (uint256)",
      "function setBatcherHash(bytes32 _batcherHash)",
      "function setGasConfig(uint256 _overhead, uint256 _scalar)",
      "function setGasLimit(uint64 _gasLimit)",
      "function setResourceConfig(tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config)",
      "function setUnsafeBlockSigner(address _unsafeBlockSigner)",
      "function setValidatorRewardScalar(uint256 _validatorRewardScalar)",
      "function transferOwnership(address newOwner)",
      "function unsafeBlockSigner() view returns (address)",
      "function validatorRewardScalar() view returns (uint256)",
      "function version() view returns (string)"
    ],
    "0x31F648572b67e60Ec6eb8E197E1848CC5F5558de": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x339208824010425cBE73201ceD4372308ACD610B": [
      "constructor(address _poseidon2)",
      "function POSEIDON2() view returns (address)",
      "function get(bytes32 _key, bytes[] _proofs, bytes32 _root) view returns (bool, bytes)",
      "function verifyInclusionProof(bytes32 _key, bytes _value, bytes[] _proofs, bytes32 _root) view returns (bool)"
    ],
    "0x381F53695230BAF83a39D1a08304D233A35730Fa": [
      "constructor(address _l2Oracle, address _validatorPool, address _guardian, bool _paused, address _config, address _zkMerkleTrie)",
      "event Initialized(uint8 version)",
      "event Paused(address account)",
      "event TransactionDeposited(address indexed from, address indexed to, uint256 indexed version, bytes opaqueData)",
      "event Unpaused(address account)",
      "event WithdrawalFinalized(bytes32 indexed withdrawalHash, bool success)",
      "event WithdrawalProven(bytes32 indexed withdrawalHash, address indexed from, address indexed to)",
      "function GUARDIAN() view returns (address)",
      "function L2_ORACLE() view returns (address)",
      "function SYSTEM_CONFIG() view returns (address)",
      "function VALIDATOR_POOL() view returns (address)",
      "function ZK_MERKLE_TRIE() view returns (address)",
      "function depositTransaction(address _to, uint256 _value, uint64 _gasLimit, bool _isCreation, bytes _data) payable",
      "function depositTransactionByValidatorPool(address _to, uint64 _gasLimit, bytes _data)",
      "function finalizeWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx)",
      "function finalizedWithdrawals(bytes32) view returns (bool)",
      "function initialize(bool _paused)",
      "function isOutputFinalized(uint256 _l2OutputIndex) view returns (bool)",
      "function l2Sender() view returns (address)",
      "function params() view returns (uint128 prevBaseFee, uint64 prevBoughtGas, uint64 prevBlockNum)",
      "function pause()",
      "function paused() view returns (bool)",
      "function proveWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 value, uint256 gasLimit, bytes data) _tx, uint256 _l2OutputIndex, tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 blockHash, bytes32 nextBlockHash) _outputRootProof, bytes[] _withdrawalProof)",
      "function provenWithdrawals(bytes32) view returns (bytes32 outputRoot, uint128 timestamp, uint128 l2OutputIndex)",
      "function unpause()",
      "function version() view returns (string)"
    ],
    "0x3971EB866AA9b2b8aFEa8a7C816F3b7e8b195a35": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x3de211088dF516da72efe68D386b561BEE256Ec4": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x3eb033BAc5c449bDcb6D082c4f728eDAfC8D75fa": [
      "constructor(address _l2OutputOracle, address _portal, address _securityCouncil, address _trustedValidator, uint256 _requiredBondAmount, uint256 _maxUnbond, uint256 _roundDuration)",
      "event BondIncreased(uint256 indexed outputIndex, address indexed challenger, uint128 amount)",
      "event Bonded(address indexed submitter, uint256 indexed outputIndex, uint128 amount, uint128 expiresAt)",
      "event Initialized(uint8 version)",
      "event PendingBondAdded(uint256 indexed outputIndex, address indexed challenger, uint128 amount)",
      "event PendingBondReleased(uint256 indexed outputIndex, address indexed challenger, address indexed recipient, uint128 amount)",
      "event Unbonded(uint256 indexed outputIndex, address indexed recipient, uint128 amount)",
      "function L2_ORACLE() view returns (address)",
      "function MAX_UNBOND() view returns (uint256)",
      "function PORTAL() view returns (address)",
      "function REQUIRED_BOND_AMOUNT() view returns (uint128)",
      "function ROUND_DURATION() view returns (uint256)",
      "function SECURITY_COUNCIL() view returns (address)",
      "function TAX_DENOMINATOR() view returns (uint128)",
      "function TAX_NUMERATOR() view returns (uint128)",
      "function TRUSTED_VALIDATOR() view returns (address)",
      "function VAULT_REWARD_GAS_LIMIT() view returns (uint64)",
      "function addPendingBond(uint256 _outputIndex, address _challenger)",
      "function balanceOf(address _addr) view returns (uint256)",
      "function createBond(uint256 _outputIndex, uint128 _expiresAt)",
      "function deposit() payable",
      "function getBond(uint256 _outputIndex) view returns (tuple(uint128 amount, uint128 expiresAt))",
      "function getPendingBond(uint256 _outputIndex, address _challenger) view returns (uint128)",
      "function increaseBond(uint256 _outputIndex, address _challenger)",
      "function initialize()",
      "function isValidator(address _addr) view returns (bool)",
      "function nextValidator() view returns (address)",
      "function releasePendingBond(uint256 _outputIndex, address _challenger, address _recipient)",
      "function unbond()",
      "function validatorCount() view returns (uint256)",
      "function version() view returns (string)",
      "function withdraw(uint256 _amount)"
    ],
    "0x404133EdF24F56b7dD9c6d89Fb56bb35244461B4": [
      "constructor(address _messenger)",
      "event ERC20BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ETHBridgeFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHBridgeInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC20(address _localToken, address _remoteToken, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC20To(address _localToken, address _remoteToken, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function deposits(address, address) view returns (uint256)",
      "function finalizeBridgeERC20(address _localToken, address _remoteToken, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeBridgeETH(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function version() view returns (string)"
    ],
    "0x46B8bB4C5dd27bB42807Db477af4d1a7C8A5B746": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x46d07221dfC313afe1BF104F4bB1f185301D65B9": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x61c7C854Dcdf8393230B1242a4c1107f4d023c28": [
      "constructor(address _colosseum, address _governor)",
      "event ConfirmationRevoked(address indexed sender, uint256 indexed transactionId)",
      "event DeletionRequested(uint256 indexed transactionId, uint256 indexed outputIndex)",
      "event Initialized(uint8 version)",
      "event TransactionConfirmed(address indexed sender, uint256 indexed transactionId)",
      "event TransactionExecuted(address indexed sender, uint256 indexed transactionId)",
      "event TransactionSubmitted(address indexed sender, uint256 indexed transactionId)",
      "event ValidationRequested(uint256 indexed transactionId, bytes32 outputRoot, uint256 l2BlockNumber)",
      "function COLOSSEUM() view returns (address)",
      "function GOVERNOR() view returns (address)",
      "function clock() view returns (uint48)",
      "function confirmTransaction(uint256 _transactionId)",
      "function confirmations(uint256) view returns (uint256 confirmationCount)",
      "function executeTransaction(uint256 _transactionId)",
      "function generateTransactionId(address _target, uint256 _value, bytes _data) view returns (uint256)",
      "function getConfirmationCount(uint256 _transactionId) view returns (uint256)",
      "function getVotes(address account) view returns (uint256)",
      "function isConfirmed(uint256 _transactionId) view returns (bool)",
      "function isConfirmedBy(uint256 _transactionId, address _account) view returns (bool)",
      "function outputsDeleteRequested(uint256) view returns (bool)",
      "function quorum() view returns (uint256)",
      "function requestDeletion(uint256 _outputIndex, bool _force)",
      "function requestValidation(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes _data)",
      "function revokeConfirmation(uint256 _transactionId)",
      "function submitTransaction(address _target, uint256 _value, bytes _data) returns (uint256)",
      "function transactionCount() view returns (uint256)",
      "function transactions(uint256) view returns (address target, bool executed, uint256 value, bytes data)",
      "function version() view returns (string)"
    ],
    "0x64F8F4EB207D51F74caf6db644Bf710Ad86989b3": [
      "constructor()",
      "error Empty()",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event ProposalCanceled(uint256 proposalId)",
      "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
      "event ProposalExecuted(uint256 proposalId)",
      "event ProposalQueued(uint256 proposalId, uint256 eta)",
      "event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold)",
      "event QuorumNumeratorUpdated(uint256 oldQuorumNumerator, uint256 newQuorumNumerator)",
      "event TimelockChange(address oldTimelock, address newTimelock)",
      "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
      "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
      "event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay)",
      "event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod)",
      "function BALLOT_TYPEHASH() view returns (bytes32)",
      "function CLOCK_MODE() view returns (string)",
      "function COUNTING_MODE() pure returns (string)",
      "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
      "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
      "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
      "function castVoteBySig(uint256 proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) returns (uint256)",
      "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
      "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
      "function castVoteWithReasonAndParamsBySig(uint256 proposalId, uint8 support, string reason, bytes params, uint8 v, bytes32 r, bytes32 s) returns (uint256)",
      "function clock() view returns (uint48)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
      "function getVotes(address account, uint256 timepoint) view returns (uint256)",
      "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
      "function hasVoted(uint256 proposalId, address account) view returns (bool)",
      "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
      "function initialize(address _token, address _timelock, uint256 _initialVotingDelay, uint256 _initialVotingPeriod, uint256 _initialProposalThreshold, uint256 _votesQuorumFraction)",
      "function name() view returns (string)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function proposalDeadline(uint256 proposalId) view returns (uint256)",
      "function proposalEta(uint256 proposalId) view returns (uint256)",
      "function proposalProposer(uint256 proposalId) view returns (address)",
      "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
      "function proposalThreshold() view returns (uint256)",
      "function proposalVotes(uint256 proposalId) view returns (uint256 againstVotes, uint256 forVotes, uint256 abstainVotes)",
      "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
      "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
      "function quorum(uint256 blockNumber) view returns (uint256)",
      "function quorumDenominator() view returns (uint256)",
      "function quorumNumerator(uint256 timepoint) view returns (uint256)",
      "function quorumNumerator() view returns (uint256)",
      "function relay(address target, uint256 value, bytes data) payable",
      "function setProposalThreshold(uint256 newProposalThreshold)",
      "function setVotingDelay(uint256 newVotingDelay)",
      "function setVotingPeriod(uint256 newVotingPeriod)",
      "function state(uint256 proposalId) view returns (uint8)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function timelock() view returns (address)",
      "function token() view returns (address)",
      "function updateQuorumNumerator(uint256 newQuorumNumerator)",
      "function updateTimelock(address newTimelock)",
      "function version() view returns (string)",
      "function votingDelay() view returns (uint256)",
      "function votingPeriod() view returns (uint256)"
    ],
    "0x665c23A5722B6A237fa6Be2B49c0A94504db1edd": [
      "constructor(address _owner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address _proxy, address _newAdmin)",
      "function getProxyAdmin(address _proxy) view returns (address)",
      "function getProxyImplementation(address _proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address _proxy, address _implementation)",
      "function upgradeAndCall(address _proxy, address _implementation, bytes _data) payable"
    ],
    "0x675924D68200F2C967Ba12349d5d510676C7214c": [
      "constructor(address _portal)",
      "event FailedRelayedMessage(bytes32 indexed msgHash)",
      "event Initialized(uint8 version)",
      "event Paused(address account)",
      "event RelayedMessage(bytes32 indexed msgHash)",
      "event SentMessage(address indexed target, address indexed sender, uint256 value, bytes message, uint256 messageNonce, uint256 gasLimit)",
      "event Unpaused(address account)",
      "function MESSAGE_VERSION() view returns (uint16)",
      "function MIN_GAS_CALLDATA_OVERHEAD() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR() view returns (uint64)",
      "function OTHER_MESSENGER() view returns (address)",
      "function PORTAL() view returns (address)",
      "function RELAY_CALL_OVERHEAD() view returns (uint64)",
      "function RELAY_CONSTANT_OVERHEAD() view returns (uint64)",
      "function RELAY_GAS_CHECK_BUFFER() view returns (uint64)",
      "function RELAY_RESERVED_GAS() view returns (uint64)",
      "function baseGas(bytes _message, uint32 _minGasLimit) pure returns (uint64)",
      "function failedMessages(bytes32) view returns (bool)",
      "function initialize()",
      "function messageNonce() view returns (uint256)",
      "function paused() view returns (bool)",
      "function relayMessage(uint256 _nonce, address _sender, address _target, uint256 _value, uint256 _minGasLimit, bytes _message) payable",
      "function sendMessage(address _target, bytes _message, uint32 _minGasLimit) payable",
      "function successfulMessages(bytes32) view returns (bool)",
      "function version() view returns (string)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0x6deb6a630D7b486c1C08d4016AEe3835a2F52Fa7": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x713C2BEd44eB45D490afB8D4d1aA6F12290B829a": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x7526F997ea040B3949415c3a44e708273863AA2b": [
      "constructor(address _l2Oracle, address _zkVerifier, uint256 _submissionInterval, uint256 _creationPeriodSeconds, uint256 _bisectionTimeout, uint256 _provingTimeout, bytes32 _dummyHash, uint256 _maxTxs, uint256[] _segmentsLengths, address _securityCouncil, address _zkMerkleTrie)",
      "event Bisected(uint256 indexed outputIndex, address indexed challenger, uint8 turn, uint256 timestamp)",
      "event ChallengeCanceled(uint256 indexed outputIndex, address indexed challenger, uint256 timestamp)",
      "event ChallengeCreated(uint256 indexed outputIndex, address indexed asserter, address indexed challenger, uint256 timestamp)",
      "event ChallengeDismissed(uint256 indexed outputIndex, address indexed challenger, uint256 timestamp)",
      "event ChallengerTimedOut(uint256 indexed outputIndex, address indexed challenger, uint256 timestamp)",
      "event Initialized(uint8 version)",
      "event Proven(uint256 indexed outputIndex, address indexed challenger, uint256 timestamp)",
      "event ReadyToProve(uint256 indexed outputIndex, address indexed challenger)",
      "function BISECTION_TIMEOUT() view returns (uint256)",
      "function CREATION_PERIOD_SECONDS() view returns (uint256)",
      "function DUMMY_HASH() view returns (bytes32)",
      "function L2_ORACLE() view returns (address)",
      "function L2_ORACLE_SUBMISSION_INTERVAL() view returns (uint256)",
      "function MAX_TXS() view returns (uint256)",
      "function PROVING_TIMEOUT() view returns (uint256)",
      "function SECURITY_COUNCIL() view returns (address)",
      "function ZK_MERKLE_TRIE() view returns (address)",
      "function ZK_VERIFIER() view returns (address)",
      "function bisect(uint256 _outputIndex, address _challenger, uint256 _pos, bytes32[] _segments)",
      "function cancelChallenge(uint256 _outputIndex)",
      "function challengerTimeout(uint256 _outputIndex, address _challenger)",
      "function challenges(uint256, address) view returns (uint8 turn, uint64 timeoutAt, address asserter, address challenger, uint256 segSize, uint256 segStart)",
      "function createChallenge(uint256 _outputIndex, bytes32 _l1BlockHash, uint256 _l1BlockNumber, bytes32[] _segments)",
      "function dismissChallenge(uint256 _outputIndex, address _challenger, address _asserter, bytes32 _outputRoot, bytes32 _publicInputHash)",
      "function forceDeleteOutput(uint256 _outputIndex)",
      "function getChallenge(uint256 _outputIndex, address _challenger) view returns (tuple(uint8 turn, uint64 timeoutAt, address asserter, address challenger, bytes32[] segments, uint256 segSize, uint256 segStart))",
      "function getSegmentsLength(uint8 _turn) view returns (uint256)",
      "function getStatus(uint256 _outputIndex, address _challenger) view returns (uint8)",
      "function initialize(uint256[] _segmentsLengths)",
      "function isAbleToBisect(uint256 _outputIndex, address _challenger) view returns (bool)",
      "function isInCreationPeriod(uint256 _outputIndex) view returns (bool)",
      "function proveFault(uint256 _outputIndex, uint256 _pos, tuple(tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 blockHash, bytes32 nextBlockHash) srcOutputRootProof, tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 blockHash, bytes32 nextBlockHash) dstOutputRootProof, tuple(bytes32 blockHash, bytes32 parentHash, uint64 timestamp, uint64 number, uint64 gasLimit, uint256 baseFee, bytes32 transactionsRoot, bytes32 stateRoot, bytes32 withdrawalsRoot, bytes32[] txHashes) publicInput, tuple(bytes uncleHash, bytes coinbase, bytes receiptsRoot, bytes logsBloom, bytes difficulty, bytes gasUsed, bytes extraData, bytes mixHash, bytes nonce) rlps, bytes32 l2ToL1MessagePasserBalance, bytes32 l2ToL1MessagePasserCodeHash, bytes[] merkleProof) _proof, uint256[] _zkproof, uint256[] _pair)",
      "function verifiedPublicInputs(bytes32) view returns (bool)",
      "function version() view returns (string)"
    ],
    "0x7E79726560B140fd6e089547bD049509F5423BFf": [
      "constructor(uint256 _hashScalar, uint256 _m56Px, uint256 _m56Py)",
      "function verify(uint256[] proof, uint256[] target_circuit_final_pair, bytes32 publicInputHash) view returns (bool)",
      "function version() view returns (string)"
    ],
    "0x827962404D7104202C5aaa6b929115C8211d9596": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xb3c415c2Aad428D5570208e1772cb68e7D06a537": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xbB1cDB5Cc35B1c9801DA8772aCBcDbd323A912D9": [
      "constructor(address _messenger, address _otherBridge)",
      "event ERC721BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 tokenId, bytes extraData)",
      "event ERC721BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 tokenId, bytes extraData)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC721(address _localToken, address _remoteToken, uint256 _tokenId, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC721To(address _localToken, address _remoteToken, address _to, uint256 _tokenId, uint32 _minGasLimit, bytes _extraData)",
      "function deposits(address, address, uint256) view returns (bool)",
      "function finalizeBridgeERC721(address _localToken, address _remoteToken, address _from, address _to, uint256 _tokenId, bytes _extraData)",
      "function version() view returns (string)"
    ],
    "0xe44da6e9fA92E3FD897Da84d38fa6B9322Dd22c3": [
      "constructor()",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event Initialized(uint8 version)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function initialize(uint256 _minDelay, address[] _proposers, address[] _executors, address _admin)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)",
      "function version() view returns (string)"
    ],
    "0xe4D08346609055c091D3DEECdAAd3Bf83119B08c": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xFdFF462845953D90719A78Fd12a2d103541d2103": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ]
  }
}
