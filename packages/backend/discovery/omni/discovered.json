{
  "name": "omni",
  "blockNumber": 17684765,
  "configHash": "0xa81486f24d44acea4b12563a38d70493f86837e809b3d2990e22c480fb89811b",
  "version": 1,
  "contracts": [
    {
      "name": "BridgeGovernance",
      "address": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
      "code": "https://etherscan.deth.net/address/0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0x877c70937e5670b3f50eb943a4e9d65fbd9bc8ce060659a7dc0543885a0ca59e",
        "getChainId": 1,
        "getOwners": [
          "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43",
          "0xb8173f558f75EE263013fd6294177bf75279a21e",
          "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
          "0x262d23a2d916f6CF08e0235315aA51E22d142d0b",
          "0x86Da253817DC599059e3AD5A1F098F7b96aBf34c",
          "0x1685324Bf373670ad5C9c56bd88A1dc1C063b0f9",
          "0x0101016044726994aFd16f4A99f0d960090D35e7",
          "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893",
          "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8",
          "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
          "0xd945325557f1FB4374fBf10Ae86D385632Df870A",
          "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
          "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
          "0xd26a3F686D43f2A62BA9eaE2ff77e9f516d945B9",
          "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
          "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"
        ],
        "getThreshold": 8,
        "nonce": 74,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "GnosisSafe",
      "address": "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43",
      "code": "https://etherscan.deth.net/address/0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0xaee10730379a3d6df2303789b1843342698bd85d618cdf13a5f75b84e16d88eb",
        "getChainId": 1,
        "getOwners": [
          "0x2408F8a0475D3823A1F4A4bfD86B2a4B80E6eDB6",
          "0x61F4aE313592714f0557E0B4edd1641ACB394422",
          "0x3b3Cd747Ab7bf2BE3b950693deeDe8a0B96C4fF0"
        ],
        "getThreshold": 1,
        "nonce": 1,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "ForeignAMB",
      "address": "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e",
      "code": "https://etherscan.deth.net/address/0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e,0x82B67a43b69914E611710C62e629dAbB2f7AC6AB",
      "upgradeability": {
        "type": "Eternal Storage proxy",
        "admin": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "implementation": "0x82B67a43b69914E611710C62e629dAbB2f7AC6AB"
      },
      "values": {
        "allowReentrantRequests": false,
        "decimalShift": 0,
        "deployedAtBlock": 9298331,
        "destinationChainId": 100,
        "gasPrice": 10000000000,
        "getBridgeInterfacesVersion": [6, 2, 0],
        "getBridgeMode": "0x2544fbb9",
        "implementation": "0x82B67a43b69914E611710C62e629dAbB2f7AC6AB",
        "isInitialized": true,
        "maxGasPerTx": 4000000,
        "messageId": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "messageSender": "0x0000000000000000000000000000000000000000",
        "messageSourceChainId": 0,
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "requiredBlockConfirmations": 100,
        "requiredSignatures": 4,
        "sourceChainId": 1,
        "transactionHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "upgradeabilityOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "validatorContract": "0xed84a648b3c51432ad0fD1C2cD2C45677E9d4064",
        "version": 5
      },
      "derivedName": "ForeignAMB"
    },
    {
      "name": "TokenFactory",
      "address": "0x71d5ba4e37de72415F685490B684538Aae8f0424",
      "code": "https://etherscan.deth.net/address/0x71d5ba4e37de72415F685490B684538Aae8f0424",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getModuleInterfacesVersion": [1, 0, 0],
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "tokenImage": "0x7c24d0061b484B267F286aa2DCe891220Db254b3"
      }
    },
    {
      "name": "PermittableToken",
      "address": "0x7c24d0061b484B267F286aa2DCe891220Db254b3",
      "code": "https://etherscan.deth.net/address/0x7c24d0061b484B267F286aa2DCe891220Db254b3",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "bridgeContract": "0x0000000000000000000000000000000000000000",
        "decimals": 0,
        "DOMAIN_SEPARATOR": "0xcaa93cb1b6b7dc5661966ae0c34c78b2bb3aea8cc828a3690fdf9dec64932930",
        "getTokenInterfacesVersion": [2, 5, 0],
        "mintingFinished": false,
        "name": "",
        "owner": "0xBF3d6f830CE263CAE987193982192Cd990442B53",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "PERMIT_TYPEHASH_LEGACY": "0xea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb",
        "symbol": "",
        "totalSupply": 0,
        "version": "1"
      }
    },
    {
      "name": "AAVEInterestERC20",
      "address": "0x87D48c565D0D85770406D248efd7dc3cbd41e729",
      "code": "https://etherscan.deth.net/address/0x87D48c565D0D85770406D248efd7dc3cbd41e729",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "aaveReceiver": "0x5eD64f02588C8B75582f2f8eFd7A5521e3F897CC",
        "getModuleInterfacesVersion": [1, 0, 0],
        "incentivesController": "0xd784927Ff2f95ba542BfC824c8a8a98F3495f6b5",
        "lendingPool": "0x7d2768dE32b0b80b7a3454c06BdAc94A69DDc7A9",
        "mediator": "0x88ad09518695c6c3712AC10a214bE5109a655671",
        "minAavePaid": "1000000000000000000",
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "stkAAVEToken": "0x4da27a545c0c5B758a6BA100e3a049001de870f5"
      },
      "derivedName": "AAVEInterestERC20"
    },
    {
      "name": "MultiTokenMediator",
      "address": "0x88ad09518695c6c3712AC10a214bE5109a655671",
      "code": "https://etherscan.deth.net/address/0x88ad09518695c6c3712AC10a214bE5109a655671,0x8eB3b7D8498a6716904577b2579e1c313d48E347",
      "upgradeability": {
        "type": "Eternal Storage proxy",
        "admin": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "implementation": "0x8eB3b7D8498a6716904577b2579e1c313d48E347"
      },
      "values": {
        "bridgeContract": "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e",
        "getBridgeInterfacesVersion": [3, 3, 1],
        "getBridgeMode": "0xb1516c26",
        "implementation": "0x8eB3b7D8498a6716904577b2579e1c313d48E347",
        "isInitialized": true,
        "mediatorContractOnOtherSide": "0xf6A78083ca3e2a662D6dd1703c939c8aCE2e268d",
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "requestGasLimit": 2000000,
        "tokenFactory": "0x71d5ba4e37de72415F685490B684538Aae8f0424",
        "upgradeabilityOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "version": 6
      },
      "derivedName": "ForeignOmnibridge"
    },
    {
      "name": "BridgeValidators",
      "address": "0xed84a648b3c51432ad0fD1C2cD2C45677E9d4064",
      "code": "https://etherscan.deth.net/address/0xed84a648b3c51432ad0fD1C2cD2C45677E9d4064,0xD83893F31AA1B6B9D97C9c70D3492fe38D24d218",
      "upgradeability": {
        "type": "Eternal Storage proxy",
        "admin": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "implementation": "0xD83893F31AA1B6B9D97C9c70D3492fe38D24d218"
      },
      "values": {
        "deployedAtBlock": 9298321,
        "F_ADDR": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
        "getBridgeValidatorsInterfacesVersion": [2, 3, 0],
        "implementation": "0xD83893F31AA1B6B9D97C9c70D3492fe38D24d218",
        "isInitialized": true,
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "requiredSignatures": 4,
        "upgradeabilityOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "validatorCount": 8,
        "validatorList": [
          "0xfDBf5711f77B97EA7F1f812832884c7328a682eC",
          "0x3e0A20099626F3d4d4Ea7B0cE0330e88d1Fe65D6",
          "0xfA98B60E02A61B6590f073cAD56e68326652d094",
          "0xbDc141c8D2343f33F40Cb9edD601CcF460CD0dDe",
          "0x674c97db4cE6caC04A124d745979f3E4cBa0E9f0",
          "0x258667E543C913264388B33328337257aF208a8f",
          "0x459A3bd49F1ff109bc90b76125533699AaAAf9A6",
          "0x105CD22eD3D089Bf5589C59b452f9dE0796Ca52d"
        ],
        "version": 1
      },
      "derivedName": "BridgeValidators"
    }
  ],
  "eoas": [
    "0x0101016044726994aFd16f4A99f0d960090D35e7",
    "0x105CD22eD3D089Bf5589C59b452f9dE0796Ca52d",
    "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
    "0x1685324Bf373670ad5C9c56bd88A1dc1C063b0f9",
    "0x2408F8a0475D3823A1F4A4bfD86B2a4B80E6eDB6",
    "0x258667E543C913264388B33328337257aF208a8f",
    "0x262d23a2d916f6CF08e0235315aA51E22d142d0b",
    "0x3b3Cd747Ab7bf2BE3b950693deeDe8a0B96C4fF0",
    "0x3e0A20099626F3d4d4Ea7B0cE0330e88d1Fe65D6",
    "0x459A3bd49F1ff109bc90b76125533699AaAAf9A6",
    "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
    "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893",
    "0x5eD64f02588C8B75582f2f8eFd7A5521e3F897CC",
    "0x61F4aE313592714f0557E0B4edd1641ACB394422",
    "0x674c97db4cE6caC04A124d745979f3E4cBa0E9f0",
    "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
    "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
    "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
    "0x86Da253817DC599059e3AD5A1F098F7b96aBf34c",
    "0xb8173f558f75EE263013fd6294177bf75279a21e",
    "0xbDc141c8D2343f33F40Cb9edD601CcF460CD0dDe",
    "0xBF3d6f830CE263CAE987193982192Cd990442B53",
    "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8",
    "0xd26a3F686D43f2A62BA9eaE2ff77e9f516d945B9",
    "0xd945325557f1FB4374fBf10Ae86D385632Df870A",
    "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
    "0xf6A78083ca3e2a662D6dd1703c939c8aCE2e268d",
    "0xfA98B60E02A61B6590f073cAD56e68326652d094",
    "0xfDBf5711f77B97EA7F1f812832884c7328a682eC",
    "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF"
  ],
  "abis": {
    "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6": [
      "constructor(address _masterCopy)"
    ],
    "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43": [
      "constructor(address _singleton)"
    ],
    "0x4C36d2919e407f0Cc2Ee3c993ccF8ac26d9CE64e": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0x71d5ba4e37de72415F685490B684538Aae8f0424": [
      "constructor(address _owner, address _tokenImage)",
      "function deploy(string _name, string _symbol, uint8 _decimals, uint256 _chainId) returns (address)",
      "function getModuleInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function owner() view returns (address)",
      "function setTokenImage(address _tokenImage)",
      "function tokenImage() view returns (address)",
      "function transferOwnership(address _newOwner)"
    ],
    "0x7c24d0061b484B267F286aa2DCe891220Db254b3": [
      "function mintingFinished() view returns (bool)",
      "function name() view returns (string)",
      "function approve(address _to, uint256 _value) returns (bool result)",
      "function setBridgeContract(address _bridgeContract)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address _sender, address _recipient, uint256 _amount) returns (bool)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function decimals() view returns (uint8)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function increaseAllowance(address _to, uint256 _addedValue) returns (bool result)",
      "function transferAndCall(address _to, uint256 _value, bytes _data) returns (bool)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function burn(uint256 _value)",
      "function version() view returns (string)",
      "function decreaseApproval(address _spender, uint256 _subtractedValue) returns (bool)",
      "function claimTokens(address _token, address _to)",
      "function balanceOf(address _owner) view returns (uint256)",
      "function renounceOwnership()",
      "function isBridge(address _address) view returns (bool)",
      "function finishMinting() returns (bool)",
      "function nonces(address) view returns (uint256)",
      "function getTokenInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function owner() view returns (address)",
      "function permit(address _holder, address _spender, uint256 _nonce, uint256 _expiry, bool _allowed, uint8 _v, bytes32 _r, bytes32 _s)",
      "function symbol() view returns (string)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function transfer(address _to, uint256 _value) returns (bool)",
      "function push(address _to, uint256 _amount)",
      "function move(address _from, address _to, uint256 _amount)",
      "function PERMIT_TYPEHASH_LEGACY() view returns (bytes32)",
      "function bridgeContract() view returns (address)",
      "function permit(address _holder, address _spender, uint256 _value, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s)",
      "function increaseApproval(address _spender, uint256 _addedValue) returns (bool)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function pull(address _from, uint256 _amount)",
      "function transferOwnership(address _newOwner)",
      "function expirations(address, address) view returns (uint256)",
      "constructor(string _name, string _symbol, uint8 _decimals, uint256 _chainId)",
      "event Mint(address indexed to, uint256 amount)",
      "event MintFinished()",
      "event OwnershipRenounced(address indexed previousOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Burn(address indexed burner, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value, bytes data)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value)"
    ],
    "0x82B67a43b69914E611710C62e629dAbB2f7AC6AB": [
      "function transactionHash() view returns (bytes32)",
      "function sourceChainId() view returns (uint256)",
      "function relayedMessages(bytes32 _txHash) view returns (bool)",
      "function safeExecuteSignaturesWithAutoGasLimit(bytes _data, bytes _signatures)",
      "function initialize(uint256 _sourceChainId, uint256 _destinationChainId, address _validatorContract, uint256 _maxGasPerTx, uint256 _gasPrice, uint256 _requiredBlockConfirmations, address _owner) returns (bool)",
      "function isInitialized() view returns (bool)",
      "function requiredBlockConfirmations() view returns (uint256)",
      "function executeSignatures(bytes _data, bytes _signatures)",
      "function failedMessageReceiver(bytes32 _messageId) view returns (address)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function setChainIds(uint256 _sourceChainId, uint256 _destinationChainId)",
      "function failedMessageSender(bytes32 _messageId) view returns (address)",
      "function allowReentrantRequests() view returns (bool)",
      "function messageId() view returns (bytes32 id)",
      "function claimTokens(address _token, address _to)",
      "function setMaxGasPerTx(uint256 _maxGasPerTx)",
      "function requiredSignatures() view returns (uint256)",
      "function owner() view returns (address)",
      "function validatorContract() view returns (address)",
      "function deployedAtBlock() view returns (uint256)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function messageSourceChainId() view returns (uint256 id)",
      "function setRequiredBlockConfirmations(uint256 _blockConfirmations)",
      "function destinationChainId() view returns (uint256)",
      "function setGasPrice(uint256 _gasPrice)",
      "function setAllowReentrantRequests(bool _enable)",
      "function messageCallStatus(bytes32 _messageId) view returns (bool)",
      "function messageSender() view returns (address sender)",
      "function decimalShift() view returns (int256)",
      "function requireToPassMessage(address _contract, bytes _data, uint256 _gas) returns (bytes32)",
      "function failedMessageDataHash(bytes32 _messageId) view returns (bytes32)",
      "function maxGasPerTx() view returns (uint256)",
      "function safeExecuteSignaturesWithGasLimit(bytes _data, bytes _signatures, uint32 _gas)",
      "function safeExecuteSignatures(bytes _data, bytes _signatures)",
      "function transferOwnership(address newOwner)",
      "function gasPrice() view returns (uint256)",
      "event UserRequestForAffirmation(bytes32 indexed messageId, bytes encodedData)",
      "event RelayedMessage(address indexed sender, address indexed executor, bytes32 indexed messageId, bool status)",
      "event GasPriceChanged(uint256 gasPrice)",
      "event RequiredBlockConfirmationChanged(uint256 requiredBlockConfirmations)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0x87D48c565D0D85770406D248efd7dc3cbd41e729": [
      "constructor(address _omnibridge, address _owner, uint256 _minAavePaid, address _aaveReceiver)",
      "event ForceDisable(address indexed token, uint256 tokensAmount, uint256 xTokensAmount, uint256 investedAmount)",
      "event InterestDustUpdated(address indexed token, uint96 dust)",
      "event InterestEnabled(address indexed token, address xToken)",
      "event InterestReceiverUpdated(address indexed token, address receiver)",
      "event MinInterestPaidUpdated(address indexed token, uint256 amount)",
      "event PaidInterest(address indexed token, address to, uint256 value)",
      "function aaveAmount(address[] _assets) view returns (uint256)",
      "function aaveReceiver() view returns (address)",
      "function claimAaveAndPay(address[] _assets)",
      "function enableInterestToken(address _token, uint96 _dust, address _interestReceiver, uint256 _minInterestPaid)",
      "function forceDisable(address _token)",
      "function getModuleInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function incentivesController() pure returns (address)",
      "function interestAmount(address _token) view returns (uint256)",
      "function interestParams(address) view returns (address aToken, uint96 dust, uint256 investedAmount, address interestReceiver, uint256 minInterestPaid)",
      "function invest(address _token, uint256 _amount)",
      "function investedAmount(address _token) view returns (uint256)",
      "function isInterestSupported(address _token) view returns (bool)",
      "function lendingPool() pure returns (address)",
      "function mediator() view returns (address)",
      "function minAavePaid() view returns (uint256)",
      "function owner() view returns (address)",
      "function payInterest(address _token)",
      "function setAaveReceiver(address _receiver)",
      "function setDust(address _token, uint96 _dust)",
      "function setInterestReceiver(address _token, address _receiver)",
      "function setMinAavePaid(uint256 _minAavePaid)",
      "function setMinInterestPaid(address _token, uint256 _minInterestPaid)",
      "function stkAAVEToken() pure returns (address)",
      "function transferOwnership(address _newOwner)",
      "function withdraw(address _token, uint256 _amount)"
    ],
    "0x88ad09518695c6c3712AC10a214bE5109a655671": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0x8eB3b7D8498a6716904577b2579e1c313d48E347": [
      "constructor(string _suffix)",
      "event DailyLimitChanged(address indexed token, uint256 newLimit)",
      "event ExecutionDailyLimitChanged(address indexed token, uint256 newLimit)",
      "event FailedMessageFixed(bytes32 indexed messageId, address token, address recipient, uint256 value)",
      "event NewTokenRegistered(address indexed nativeToken, address indexed bridgedToken)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event TokensBridged(address indexed token, address indexed recipient, uint256 value, bytes32 indexed messageId)",
      "event TokensBridgingInitiated(address indexed token, address indexed sender, uint256 value, bytes32 indexed messageId)",
      "function bridgeContract() view returns (address)",
      "function bridgedTokenAddress(address _nativeToken) view returns (address)",
      "function claimTokens(address _token, address _to)",
      "function claimTokensFromTokenContract(address _bridgedToken, address _token, address _to)",
      "function dailyLimit(address _token) view returns (uint256)",
      "function deployAndHandleBridgedTokens(address _token, string _name, string _symbol, uint8 _decimals, address _recipient, uint256 _value)",
      "function deployAndHandleBridgedTokensAndCall(address _token, string _name, string _symbol, uint8 _decimals, address _recipient, uint256 _value, bytes _data)",
      "function disableInterest(address _token)",
      "function executionDailyLimit(address _token) view returns (uint256)",
      "function executionMaxPerTx(address _token) view returns (uint256)",
      "function fixFailedMessage(bytes32 _messageId)",
      "function fixMediatorBalance(address _token, address _receiver)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function getCurrentDay() view returns (uint256)",
      "function handleBridgedTokens(address _token, address _recipient, uint256 _value)",
      "function handleBridgedTokensAndCall(address _token, address _recipient, uint256 _value, bytes _data)",
      "function handleNativeTokens(address _token, address _recipient, uint256 _value)",
      "function handleNativeTokensAndCall(address _token, address _recipient, uint256 _value, bytes _data)",
      "function initialize(address _bridgeContract, address _mediatorContract, uint256[3] _dailyLimitMaxPerTxMinPerTxArray, uint256[2] _executionDailyLimitExecutionMaxPerTxArray, uint256 _requestGasLimit, address _owner, address _tokenFactory) returns (bool)",
      "function initializeInterest(address _token, address _impl, uint256 _minCashThreshold)",
      "function interestImplementation(address _token) view returns (address)",
      "function invest(address _token)",
      "function isBridgedTokenDeployAcknowledged(address _token) view returns (bool)",
      "function isInitialized() view returns (bool)",
      "function isRegisteredAsNativeToken(address _token) view returns (bool)",
      "function isTokenRegistered(address _token) view returns (bool)",
      "function maxAvailablePerTx(address _token) view returns (uint256)",
      "function maxPerTx(address _token) view returns (uint256)",
      "function mediatorBalance(address _token) view returns (uint256)",
      "function mediatorContractOnOtherSide() view returns (address)",
      "function messageFixed(bytes32 _messageId) view returns (bool)",
      "function migrateTo_3_3_0(address _tokenFactory, address _interestImplementation)",
      "function minCashThreshold(address _token) view returns (uint256)",
      "function minPerTx(address _token) view returns (uint256)",
      "function nativeTokenAddress(address _bridgedToken) view returns (address)",
      "function onTokenTransfer(address _from, uint256 _value, bytes _data) returns (bool)",
      "function owner() view returns (address)",
      "function relayTokens(address token, uint256 _value)",
      "function relayTokens(address token, address _receiver, uint256 _value)",
      "function relayTokensAndCall(address token, address _receiver, uint256 _value, bytes _data)",
      "function requestFailedMessageFix(bytes32 _messageId)",
      "function requestGasLimit() view returns (uint256)",
      "function setBridgeContract(address _bridgeContract)",
      "function setCustomTokenAddressPair(address _nativeToken, address _bridgedToken)",
      "function setDailyLimit(address _token, uint256 _dailyLimit)",
      "function setExecutionDailyLimit(address _token, uint256 _dailyLimit)",
      "function setExecutionMaxPerTx(address _token, uint256 _maxPerTx)",
      "function setMaxPerTx(address _token, uint256 _maxPerTx)",
      "function setMediatorContractOnOtherSide(address _mediatorContract)",
      "function setMinCashThreshold(address _token, uint256 _minCashThreshold)",
      "function setMinPerTx(address _token, uint256 _minPerTx)",
      "function setRequestGasLimit(uint256 _gasLimit)",
      "function setTokenFactory(address _tokenFactory)",
      "function tokenFactory() view returns (address)",
      "function totalExecutedPerDay(address _token, uint256 _day) view returns (uint256)",
      "function totalSpentPerDay(address _token, uint256 _day) view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function withinExecutionLimit(address _token, uint256 _amount) view returns (bool)",
      "function withinLimit(address _token, uint256 _amount) view returns (bool)"
    ],
    "0xD83893F31AA1B6B9D97C9c70D3492fe38D24d218": [
      "function validatorCount() view returns (uint256)",
      "function getBridgeValidatorsInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function isInitialized() view returns (bool)",
      "function removeValidator(address _validator)",
      "function addValidator(address _validator)",
      "function initialize(uint256 _requiredSignatures, address[] _initialValidators, address _owner) returns (bool)",
      "function validatorList() view returns (address[])",
      "function setRequiredSignatures(uint256 _requiredSignatures)",
      "function requiredSignatures() view returns (uint256)",
      "function getNextValidator(address _address) view returns (address)",
      "function owner() view returns (address)",
      "function isValidatorDuty(address _validator) view returns (bool)",
      "function deployedAtBlock() view returns (uint256)",
      "function F_ADDR() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function isValidator(address _validator) view returns (bool)",
      "event ValidatorAdded(address indexed validator)",
      "event ValidatorRemoved(address indexed validator)",
      "event RequiredSignaturesChanged(uint256 requiredSignatures)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xed84a648b3c51432ad0fD1C2cD2C45677E9d4064": [
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ]
  }
}
