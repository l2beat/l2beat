{
  "$schema": "../../../../discovery/schemas/config.v2.schema.json",
  "chain": "ethereum",
  "name": "bobanetwork",
  "initialAddresses": [
    "0x158Fd5715F16Ac1F2Dc959A299B383aAaf9B59EB" // SystemConfig
  ],
  "names": {
    "0x158Fd5715F16Ac1F2Dc959A299B383aAaf9B59EB": "SystemConfig",
    "0x7B02D13904D8e6E0f0Efaf756aB14Cb0FF21eE7e": "OptimismPortal",
    "0xbB7aD3f9CCbC94085b7F7B1D5258e59F5F068741": "L2OutputOracle",
    "0x6D4528d192dB72E282265D6092F4B872f9Dff69e": "L1CrossDomainMessenger",
    "0x56121a8612474C3eB65D69a3b871f284705b9bC4": "BobaMultisig"
  },
  "overrides": {
    "0x4200000000000000000000000000000000000010": {
      "ignoreDiscovery": true
    },
    "0x4200000000000000000000000000000000000007": {
      "ignoreDiscovery": true
    },
    "OptimismPortal": {
      "ignoreMethods": ["isOutputFinalized"],
      "ignoreInWatchMode": ["params"]
    },
    "L2OutputOracle": {
      "ignoreMethods": [
        "getL2OutputAfter",
        "getL2OutputIndexAfter",
        "getL2Output",
        "computeL2Timestamp"
      ],
      "ignoreInWatchMode": [
        "nextBlockNumber",
        "nextOutputIndex",
        "latestBlockNumber",
        "latestOutputIndex"
      ],
      "fields": {
        "deletedOutputs": {
          "handler": {
            "type": "stateFromEvent",
            "event": "OutputsDeleted",
            "returnParams": ["prevNextOutputIndex", "newNextOutputIndex"]
          }
        }
      }
    },
    "L1CrossDomainMessenger": {
      "ignoreMethods": ["xDomainMessageSender"],
      "ignoreInWatchMode": ["messageNonce"]
    },
    "SystemConfig": {
      "description": "It contains configuration parameters such as the Sequencer address, the L2 gas limit and the unsafe block signer address.",
      "fields": {
        // this overrides the batcherHash method return type (bytes32 -> address) so our discovery detects it as an address
        "batcherHash": {
          "handler": {
            "type": "call",
            "method": "function batcherHash() view returns (address)",
            "args": []
          }
        },
        "opStackDA": {
          "handler": {
            "type": "opStackDA",
            "sequencerAddress": "{{ batcherHash }}"
          }
        },
        "sequencerInbox": {
          "handler": {
            "type": "opStackSequencerInbox",
            "sequencerAddress": "{{ batcherHash }}"
          }
        },
        "unsafeBlockSigner": {
          "description": "Blocks are gossiped around the L2 p2p network before they are made available on L1. To prevent denial of service on the p2p layer, these unsafe blocks must be signed with a particular key to be accepted as 'canonical' unsafe blocks. The address corresponding to this key is the unsafeBlockSigner.",
          "severity": "LOW"
        }
      },
      "ignoreInWatchMode": ["scalar"]
    }
  }
}
