{
  "name": "bobanetwork",
  "blockNumber": 17619337,
  "configHash": "0x34c3c8743506efd9ef6d9d2cc8d951227fc2ed773ea512a0369434043fc0c70a",
  "version": 1,
  "contracts": [
    {
      "name": "L1CrossDomainMessenger_2",
      "address": "0x12Acf6E3ca96A60fBa0BBFd14D2Fe0EB6ae47820",
      "code": "https://etherscan.deth.net/address/0x12Acf6E3ca96A60fBa0BBFd14D2Fe0EB6ae47820",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "libAddressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089",
        "owner": "0x1f2414D0af8741Bc822dBc2f88069c2b2907a840",
        "paused": false,
        "xDomainMessageSender": "EXPECT_REVERT"
      },
      "derivedName": "L1CrossDomainMessenger"
    },
    {
      "name": "SCCStorageContainerBatches",
      "address": "0x13992B9f327faCA11568BE18a8ad3E9747e87d93",
      "code": "https://etherscan.deth.net/address/0x13992B9f327faCA11568BE18a8ad3E9747e87d93",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getGlobalMetadata": "0x00000000000000000000000000000000000064a3ce1f00000fbd0e",
        "length": 16893,
        "libAddressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089",
        "owner": "StateCommitmentChain"
      },
      "derivedName": "ChainStorageContainer"
    },
    {
      "name": "CTCStorageContainerBatches",
      "address": "0x17148284d2da2f38c96346f1776C1BF7D7691231",
      "code": "https://etherscan.deth.net/address/0x17148284d2da2f38c96346f1776C1BF7D7691231",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getGlobalMetadata": "0x0000000000000000010cd85e0064a3cb660000005f4f00000fbd0e",
        "length": 18688,
        "libAddressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089",
        "owner": "CanonicalTransactionChain"
      },
      "derivedName": "ChainStorageContainer"
    },
    {
      "name": "Proxy__L1LiquidityPoolArguments",
      "address": "0x1A26ef6575B7BBB864d984D9255C069F6c361a14",
      "code": "https://etherscan.deth.net/address/0x1A26ef6575B7BBB864d984D9255C069F6c361a14",
      "upgradeability": {
        "type": "immutable"
      }
    },
    {
      "name": "L1MultiMessageRelayerFast",
      "address": "0x2d6134Ac3e480fBDD263B7163d333dCA285f9622",
      "code": "https://etherscan.deth.net/address/0x2d6134Ac3e480fBDD263B7163d333dCA285f9622",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "libAddressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089"
      }
    },
    {
      "name": "CTCQueue",
      "address": "0x5f003030884B3a105809a0Eb0C0C28Ac40ECCD8d",
      "code": "https://etherscan.deth.net/address/0x5f003030884B3a105809a0Eb0C0C28Ac40ECCD8d",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getGlobalMetadata": "0x000000000000000000000000000000000000000000000000000000",
        "length": 0,
        "libAddressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089",
        "owner": "CanonicalTransactionChain"
      },
      "derivedName": "ChainStorageContainer"
    },
    {
      "name": "L1MultiMessageRelayer",
      "address": "0x5fD2CF99586B9D92f56CbaD0A3Ea4DF256A0070B",
      "code": "https://etherscan.deth.net/address/0x5fD2CF99586B9D92f56CbaD0A3Ea4DF256A0070B",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "libAddressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089"
      }
    },
    {
      "name": "BondManager",
      "address": "0x60660e6CDEb423cf847dD11De4C473130D65b627",
      "code": "https://etherscan.deth.net/address/0x60660e6CDEb423cf847dD11De4C473130D65b627",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "libAddressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089"
      }
    },
    {
      "name": "L1CrossDomainMessenger_1",
      "address": "0x6D4528d192dB72E282265D6092F4B872f9Dff69e",
      "code": "https://etherscan.deth.net/address/0x6D4528d192dB72E282265D6092F4B872f9Dff69e,0x12Acf6E3ca96A60fBa0BBFd14D2Fe0EB6ae47820",
      "upgradeability": {
        "type": "resolved delegate proxy",
        "addressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089",
        "implementationName": "OVM_L1CrossDomainMessenger",
        "implementation": "0x12Acf6E3ca96A60fBa0BBFd14D2Fe0EB6ae47820"
      },
      "values": {
        "libAddressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089",
        "owner": "0x1f2414D0af8741Bc822dBc2f88069c2b2907a840",
        "paused": false,
        "xDomainMessageSender": "EXPECT_REVERT"
      },
      "derivedName": "L1CrossDomainMessenger"
    },
    {
      "name": "AddressManager",
      "address": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089",
      "code": "https://etherscan.deth.net/address/0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "Boba_GasPriceOracle": "0x5d0763cf905DA3689B072FD19baD8dF823b2c349",
        "BobaBillingContract": "0x4a792F51CCc616b82EF74d2478C732e161c5E6b1",
        "BondManager": "0x60660e6CDEb423cf847dD11De4C473130D65b627",
        "CanonicalTransactionChain": "0xfBd2541e316948B259264c02f370eD088E04c3Db",
        "ChainStorageContainerCTCbatches": "0x17148284d2da2f38c96346f1776C1BF7D7691231",
        "ChainStorageContainerSCCbatches": "0x13992B9f327faCA11568BE18a8ad3E9747e87d93",
        "L1CrossDomainMessenger": "0x12Acf6E3ca96A60fBa0BBFd14D2Fe0EB6ae47820",
        "L1LiquidityPool": "0xd24484926f1d130778B9ebd7ec594548b2D53CB1",
        "L1MultiMessageRelayer": "0x5fD2CF99586B9D92f56CbaD0A3Ea4DF256A0070B",
        "L1MultiMessageRelayerFast": "0x2d6134Ac3e480fBDD263B7163d333dCA285f9622",
        "L1NFTBridge": "0xbF313aD6e476FF4ab6c01B76DfC74A47f2c9a582",
        "OVM_Proposer": "0x5558c63d5bf229450995adc160c023C9F4d4bE80",
        "OVM_Sequencer": "0xfa46908B587f9102E81CE6C43b7B41b52881c57F",
        "owner": "0x1f2414D0af8741Bc822dBc2f88069c2b2907a840",
        "StateCommitmentChain": "0xdE7355C971A5B733fe2133753Abd7e5441d441Ec",
        "Timelock": "0xCc72f566Fd5C7EDeB8dAA4Fe394967f5546eC5B8"
      },
      "derivedName": "Lib_AddressManager"
    },
    {
      "name": "L1NFTBridge",
      "address": "0xbF313aD6e476FF4ab6c01B76DfC74A47f2c9a582",
      "code": "https://etherscan.deth.net/address/0xbF313aD6e476FF4ab6c01B76DfC74A47f2c9a582",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "depositL2Gas": 0,
        "l2NFTBridge": "0x0000000000000000000000000000000000000000",
        "messenger": "0x0000000000000000000000000000000000000000",
        "owner": "0x0000000000000000000000000000000000000000",
        "paused": false
      }
    },
    {
      "name": "Lib_ResolvedDelegateProxy",
      "address": "0xC891F466e53f40603250837282eAE4e22aD5b088",
      "code": "https://etherscan.deth.net/address/0xC891F466e53f40603250837282eAE4e22aD5b088",
      "upgradeability": {
        "type": "immutable"
      }
    },
    {
      "name": "L1LiquidityPool",
      "address": "0xd24484926f1d130778B9ebd7ec594548b2D53CB1",
      "code": "https://etherscan.deth.net/address/0xd24484926f1d130778B9ebd7ec594548b2D53CB1",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "currentDepositInfoHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "l1CrossDomainMessenger": "0x0000000000000000000000000000000000000000",
        "L1StandardBridgeAddress": "0x0000000000000000000000000000000000000000",
        "L2LiquidityPoolAddress": "0x0000000000000000000000000000000000000000",
        "lastHashUpdateBlock": 0,
        "owner": "0x0000000000000000000000000000000000000000",
        "ownerRewardFeeRate": 0,
        "paused": false,
        "priorDepositInfoHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "relayerMessenger": "0x0000000000000000000000000000000000000000",
        "SAFE_GAS_STIPEND": 0,
        "senderMessenger": "0x0000000000000000000000000000000000000000",
        "SETTLEMENT_L2_GAS": 0,
        "userRewardMaxFeeRate": 0,
        "userRewardMinFeeRate": 0
      }
    },
    {
      "name": "L1StandardBridge",
      "address": "0xdc1664458d2f0B6090bEa60A8793A4E66c2F1c00",
      "code": "https://etherscan.deth.net/address/0xdc1664458d2f0B6090bEa60A8793A4E66c2F1c00,0xAf41c681143Cb91f218959375f4452A604504833",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xAf41c681143Cb91f218959375f4452A604504833",
        "admin": "0x1f2414D0af8741Bc822dBc2f88069c2b2907a840"
      },
      "values": {
        "currentDepositInfoHash": "0xc64671bef9775ff63adc5ca2a6431f80c537ba9ef4bc39420856130d54cf78ee",
        "l2TokenBridge": "0x4200000000000000000000000000000000000010",
        "lastHashUpdateBlock": 17615062,
        "messenger": "0x6D4528d192dB72E282265D6092F4B872f9Dff69e",
        "priorDepositInfoHash": "0xe6400e08c60cceb6700d3ae4b0c3797a8ee6b14be644e9d544ad84c583972d91"
      },
      "derivedName": "L1StandardBridge"
    },
    {
      "name": "StateCommitmentChain",
      "address": "0xdE7355C971A5B733fe2133753Abd7e5441d441Ec",
      "code": "https://etherscan.deth.net/address/0xdE7355C971A5B733fe2133753Abd7e5441d441Ec",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "batches": "0x13992B9f327faCA11568BE18a8ad3E9747e87d93",
        "FRAUD_PROOF_WINDOW": 604800,
        "getLastSequencerTimestamp": 1688456735,
        "getTotalBatches": 16893,
        "getTotalElements": 1031438,
        "libAddressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089",
        "SEQUENCER_PUBLISH_WINDOW": 1800
      },
      "derivedName": "StateCommitmentChain"
    },
    {
      "name": "CanonicalTransactionChain",
      "address": "0xfBd2541e316948B259264c02f370eD088E04c3Db",
      "code": "https://etherscan.deth.net/address/0xfBd2541e316948B259264c02f370eD088E04c3Db",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "batches": "0x17148284d2da2f38c96346f1776C1BF7D7691231",
        "enqueueGasCost": 60000,
        "enqueueL2GasPrepaid": 1920000,
        "getLastBlockNumber": 17619038,
        "getLastTimestamp": 1688456038,
        "getNextQueueIndex": 24399,
        "getNumPendingQueueElements": 0,
        "getQueueLength": 24399,
        "getTotalBatches": 18688,
        "getTotalElements": 1031438,
        "l2GasDiscountDivisor": 32,
        "libAddressManager": "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089",
        "MAX_ROLLUP_TX_SIZE": 50000,
        "maxTransactionGasLimit": 11000000,
        "MIN_ROLLUP_TX_GAS": 100000,
        "queue": "0x5f003030884B3a105809a0Eb0C0C28Ac40ECCD8d"
      },
      "derivedName": "CanonicalTransactionChain"
    }
  ],
  "eoas": [
    "0x1f2414D0af8741Bc822dBc2f88069c2b2907a840",
    "0x4200000000000000000000000000000000000010",
    "0x4a792F51CCc616b82EF74d2478C732e161c5E6b1",
    "0x5558c63d5bf229450995adc160c023C9F4d4bE80",
    "0x5d0763cf905DA3689B072FD19baD8dF823b2c349",
    "0xCc72f566Fd5C7EDeB8dAA4Fe394967f5546eC5B8",
    "0xfa46908B587f9102E81CE6C43b7B41b52881c57F"
  ],
  "abis": {
    "0x12Acf6E3ca96A60fBa0BBFd14D2Fe0EB6ae47820": [
      "constructor()",
      "event FailedRelayedMessage(bytes32 indexed msgHash)",
      "event MessageAllowed(bytes32 indexed _xDomainCalldataHash)",
      "event MessageBlocked(bytes32 indexed _xDomainCalldataHash)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RelayedMessage(bytes32 indexed msgHash)",
      "event SentMessage(address indexed target, address sender, bytes message, uint256 messageNonce, uint256 gasLimit)",
      "event Unpaused(address account)",
      "function allowMessage(bytes32 _xDomainCalldataHash)",
      "function blockMessage(bytes32 _xDomainCalldataHash)",
      "function blockedMessages(bytes32) view returns (bool)",
      "function failedMessages(bytes32) view returns (bool)",
      "function initialize(address _libAddressManager)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function relayMessage(address _target, address _sender, bytes _message, uint256 _messageNonce, tuple(bytes32 stateRoot, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) stateRootBatchHeader, tuple(uint256 index, bytes32[] siblings) stateRootProof, bytes stateTrieWitness, bytes storageTrieWitness) _proof)",
      "function relayedMessages(bytes32) view returns (bool)",
      "function renounceOwnership()",
      "function replayMessage(address _target, address _sender, bytes _message, uint256 _queueIndex, uint32 _oldGasLimit, uint32 _newGasLimit)",
      "function resolve(string _name) view returns (address)",
      "function sendMessage(address _target, bytes _message, uint32 _gasLimit)",
      "function successfulMessages(bytes32) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0x13992B9f327faCA11568BE18a8ad3E9747e87d93": [
      "constructor(address _libAddressManager, string _owner)",
      "function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)",
      "function deleteElementsAfterInclusive(uint256 _index)",
      "function get(uint256 _index) view returns (bytes32)",
      "function getGlobalMetadata() view returns (bytes27)",
      "function length() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (string)",
      "function push(bytes32 _object, bytes27 _globalMetadata)",
      "function push(bytes32 _object)",
      "function resolve(string _name) view returns (address)",
      "function setGlobalMetadata(bytes27 _globalMetadata)"
    ],
    "0x17148284d2da2f38c96346f1776C1BF7D7691231": [
      "constructor(address _libAddressManager, string _owner)",
      "function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)",
      "function deleteElementsAfterInclusive(uint256 _index)",
      "function get(uint256 _index) view returns (bytes32)",
      "function getGlobalMetadata() view returns (bytes27)",
      "function length() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (string)",
      "function push(bytes32 _object, bytes27 _globalMetadata)",
      "function push(bytes32 _object)",
      "function resolve(string _name) view returns (address)",
      "function setGlobalMetadata(bytes27 _globalMetadata)"
    ],
    "0x1A26ef6575B7BBB864d984D9255C069F6c361a14": [
      "constructor(address _proxyTarget)",
      "function addressManager(string) view returns (address)",
      "function setTargetContract(address _proxyTarget)",
      "function transferProxyOwnership()"
    ],
    "0x2d6134Ac3e480fBDD263B7163d333dCA285f9622": [
      "constructor(address _libAddressManager)",
      "function batchRelayMessages(tuple(address target, address sender, bytes message, uint256 messageNonce, tuple(bytes32 stateRoot, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) stateRootBatchHeader, tuple(uint256 index, bytes32[] siblings) stateRootProof, bytes stateTrieWitness, bytes storageTrieWitness) proof)[] _messages)",
      "function batchRelayMessages(tuple(address target, address sender, bytes message, uint256 messageNonce, tuple(bytes32 stateRoot, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) stateRootBatchHeader, tuple(uint256 index, bytes32[] siblings) stateRootProof, bytes stateTrieWitness, bytes storageTrieWitness) proof)[] _messages, bytes32 _standardBridgeDepositHash, bytes32 _lpDepositHash)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)"
    ],
    "0x5f003030884B3a105809a0Eb0C0C28Ac40ECCD8d": [
      "constructor(address _libAddressManager, string _owner)",
      "function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)",
      "function deleteElementsAfterInclusive(uint256 _index)",
      "function get(uint256 _index) view returns (bytes32)",
      "function getGlobalMetadata() view returns (bytes27)",
      "function length() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (string)",
      "function push(bytes32 _object, bytes27 _globalMetadata)",
      "function push(bytes32 _object)",
      "function resolve(string _name) view returns (address)",
      "function setGlobalMetadata(bytes27 _globalMetadata)"
    ],
    "0x5fD2CF99586B9D92f56CbaD0A3Ea4DF256A0070B": [
      "constructor(address _libAddressManager)",
      "function batchRelayMessages(tuple(address target, address sender, bytes message, uint256 messageNonce, tuple(bytes32 stateRoot, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) stateRootBatchHeader, tuple(uint256 index, bytes32[] siblings) stateRootProof, bytes stateTrieWitness, bytes storageTrieWitness) proof)[] _messages)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)"
    ],
    "0x60660e6CDEb423cf847dD11De4C473130D65b627": [
      "constructor(address _libAddressManager)",
      "function isCollateralized(address _who) view returns (bool)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)"
    ],
    "0x6D4528d192dB72E282265D6092F4B872f9Dff69e": [
      "constructor(address _libAddressManager, string _implementationName)"
    ],
    "0x8376ac6C3f73a25Dd994E0b0669ca7ee0C02F089": [
      "event AddressSet(string indexed _name, address _newAddress, address _oldAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getAddress(string _name) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xAf41c681143Cb91f218959375f4452A604504833": [
      "constructor()",
      "event ERC20DepositInitiated(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event ERC20WithdrawalFinalized(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event ETHDepositInitiated(address indexed _from, address indexed _to, uint256 _amount, bytes _data)",
      "event ETHWithdrawalFinalized(address indexed _from, address indexed _to, uint256 _amount, bytes _data)",
      "function currentDepositInfoHash() view returns (bytes32)",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _l2Gas, bytes _data)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _l2Gas, bytes _data)",
      "function depositETH(uint32 _l2Gas, bytes _data) payable",
      "function depositETHTo(address _to, uint32 _l2Gas, bytes _data) payable",
      "function deposits(address, address) view returns (uint256)",
      "function donateETH() payable",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data)",
      "function finalizeETHWithdrawal(address _from, address _to, uint256 _amount, bytes _data)",
      "function initialize(address _l1messenger, address _l2TokenBridge)",
      "function l2TokenBridge() view returns (address)",
      "function lastHashUpdateBlock() view returns (uint256)",
      "function messenger() view returns (address)",
      "function priorDepositInfoHash() view returns (bytes32)"
    ],
    "0xbF313aD6e476FF4ab6c01B76DfC74A47f2c9a582": [
      "constructor()",
      "event GasConfigured(uint32 newDepositGas)",
      "event NFTDepositInitiated(address indexed _l1Contract, address indexed _l2Contract, address indexed _from, address _to, uint256 _tokenId, bytes _data)",
      "event NFTPairRegistered(address l1Contract, address l2Contract, string baseNetwork)",
      "event NFTWithdrawalFailed(address indexed _l1Contract, address indexed _l2Contract, address indexed _from, address _to, uint256 _tokenId, bytes _data)",
      "event NFTWithdrawalFinalized(address indexed _l1Contract, address indexed _l2Contract, address indexed _from, address _to, uint256 _tokenId, bytes _data)",
      "event OwnershipTransferred(address newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "function configureGas(uint32 _depositL2Gas)",
      "function depositL2Gas() view returns (uint32)",
      "function depositNFT(address _l1Contract, uint256 _tokenId, uint32 _l2Gas)",
      "function depositNFTTo(address _l1Contract, address _to, uint256 _tokenId, uint32 _l2Gas)",
      "function depositNFTWithExtraData(address _l1Contract, uint256 _tokenId, uint32 _l2Gas)",
      "function depositNFTWithExtraDataTo(address _l1Contract, address _to, uint256 _tokenId, uint32 _l2Gas)",
      "function deposits(address, uint256) view returns (address)",
      "function finalizeNFTWithdrawal(address _l1Contract, address _l2Contract, address _from, address _to, uint256 _tokenId, bytes _data)",
      "function initialize(address _l1messenger, address _l2NFTBridge)",
      "function l2NFTBridge() view returns (address)",
      "function messenger() view returns (address)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function owner() view returns (address)",
      "function pairNFTInfo(address) view returns (address l1Contract, address l2Contract, uint8 baseNetwork)",
      "function pause()",
      "function paused() view returns (bool)",
      "function registerNFTPair(address _l1Contract, address _l2Contract, string _baseNetwork)",
      "function transferOwnership(address _newOwner)",
      "function unpause()"
    ],
    "0xC891F466e53f40603250837282eAE4e22aD5b088": [
      "constructor(address _proxyTarget)",
      "function addressManager(string) view returns (address)",
      "function setTargetContract(address _proxyTarget)",
      "function transferProxyOwnership(address _newOwner)"
    ],
    "0xd24484926f1d130778B9ebd7ec594548b2D53CB1": [
      "constructor()",
      "event AddLiquidity(address sender, uint256 amount, address tokenAddress)",
      "event ClientDepositL1(address sender, uint256 receivedAmount, address tokenAddress)",
      "event ClientDepositL1Batch(tuple(address to, address l2TokenAddress, uint256 amount)[] _tokens)",
      "event ClientPayL1(address sender, uint256 amount, uint256 userRewardFee, uint256 ownerRewardFee, uint256 totalFee, address tokenAddress)",
      "event ClientPayL1Settlement(address sender, uint256 amount, uint256 userRewardFee, uint256 ownerRewardFee, uint256 totalFee, address tokenAddress)",
      "event OwnerRecoverFee(address sender, address receiver, uint256 amount, address tokenAddress)",
      "event OwnershipTransferred(address newOwner)",
      "event Paused(address account)",
      "event RebalanceLP(uint256 amount, address tokenAddress)",
      "event Unpaused(address account)",
      "event WithdrawLiquidity(address sender, address receiver, uint256 amount, address tokenAddress)",
      "event WithdrawReward(address sender, address receiver, uint256 amount, address tokenAddress)",
      "function L1StandardBridgeAddress() view returns (address)",
      "function L2LiquidityPoolAddress() view returns (address)",
      "function SAFE_GAS_STIPEND() view returns (uint256)",
      "function SETTLEMENT_L2_GAS() view returns (uint32)",
      "function addLiquidity(uint256 _amount, address _tokenAddress) payable",
      "function clientDepositL1(uint256 _amount, address _tokenAddress) payable",
      "function clientDepositL1Batch(tuple(address l1TokenAddress, uint256 amount)[] _tokens) payable",
      "function clientPayL1(address _to, uint256 _amount, address _tokenAddress)",
      "function clientPayL1Settlement(address _to, uint256 _amount, address _tokenAddress)",
      "function configureFee(uint256 _userRewardMinFeeRate, uint256 _userRewardMaxFeeRate, uint256 _ownerRewardFeeRate)",
      "function configureGas(uint32 _l2GasFee, uint256 _safeGas)",
      "function currentDepositInfoHash() view returns (bytes32)",
      "function getUserRewardFeeRate(address _l1TokenAddress) view returns (uint256 userRewardFeeRate)",
      "function initialize(address _l1CrossDomainMessenger, address _l1CrossDomainMessengerFast, address _L2LiquidityPoolAddress, address _L1StandardBridgeAddress)",
      "function l1CrossDomainMessenger() view returns (address)",
      "function lastHashUpdateBlock() view returns (uint256)",
      "function owner() view returns (address)",
      "function ownerRecoverFee(uint256 _amount, address _tokenAddress, address _to)",
      "function ownerRewardFeeRate() view returns (uint256)",
      "function pause()",
      "function paused() view returns (bool)",
      "function poolInfo(address) view returns (address l1TokenAddress, address l2TokenAddress, uint256 userDepositAmount, uint256 lastAccUserReward, uint256 accUserReward, uint256 accUserRewardPerShare, uint256 accOwnerReward, uint256 startTime)",
      "function priorDepositInfoHash() view returns (bytes32)",
      "function rebalanceLP(uint256 _amount, address _tokenAddress)",
      "function registerPool(address _l1TokenAddress, address _l2TokenAddress)",
      "function relayerMessenger() view returns (address)",
      "function senderMessenger() view returns (address)",
      "function transferOwnership(address _newOwner)",
      "function unpause()",
      "function updateUserRewardPerShare(address _tokenAddress)",
      "function userInfo(address, address) view returns (uint256 amount, uint256 rewardDebt, uint256 pendingReward)",
      "function userRewardMaxFeeRate() view returns (uint256)",
      "function userRewardMinFeeRate() view returns (uint256)",
      "function withdrawLiquidity(uint256 _amount, address _tokenAddress, address _to)",
      "function withdrawReward(uint256 _amount, address _tokenAddress, address _to)"
    ],
    "0xdc1664458d2f0B6090bEa60A8793A4E66c2F1c00": [
      "constructor(address _owner)",
      "function getImplementation() returns (address)",
      "function getOwner() returns (address)",
      "function setCode(bytes _code)",
      "function setOwner(address _owner)",
      "function setStorage(bytes32 _key, bytes32 _value)"
    ],
    "0xdE7355C971A5B733fe2133753Abd7e5441d441Ec": [
      "constructor(address _libAddressManager, uint256 _fraudProofWindow, uint256 _sequencerPublishWindow)",
      "event StateBatchAppended(uint256 indexed _batchIndex, bytes32 _batchRoot, uint256 _batchSize, uint256 _prevTotalElements, bytes _extraData)",
      "event StateBatchDeleted(uint256 indexed _batchIndex, bytes32 _batchRoot)",
      "function FRAUD_PROOF_WINDOW() view returns (uint256)",
      "function SEQUENCER_PUBLISH_WINDOW() view returns (uint256)",
      "function appendStateBatch(bytes32[] _batch, uint256 _shouldStartAtElement)",
      "function batches() view returns (address)",
      "function deleteStateBatch(tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _batchHeader)",
      "function getLastSequencerTimestamp() view returns (uint256 _lastSequencerTimestamp)",
      "function getTotalBatches() view returns (uint256 _totalBatches)",
      "function getTotalElements() view returns (uint256 _totalElements)",
      "function insideFraudProofWindow(tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _batchHeader) view returns (bool _inside)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)",
      "function verifyStateCommitment(bytes32 _element, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _batchHeader, tuple(uint256 index, bytes32[] siblings) _proof) view returns (bool)"
    ],
    "0xfBd2541e316948B259264c02f370eD088E04c3Db": [
      "constructor(address _libAddressManager, uint256 _maxTransactionGasLimit, uint256 _l2GasDiscountDivisor, uint256 _enqueueGasCost)",
      "event L2GasParamsUpdated(uint256 l2GasDiscountDivisor, uint256 enqueueGasCost, uint256 enqueueL2GasPrepaid)",
      "event QueueBatchAppended(uint256 _startingQueueIndex, uint256 _numQueueElements, uint256 _totalElements)",
      "event SequencerBatchAppended(uint256 _startingQueueIndex, uint256 _numQueueElements, uint256 _totalElements)",
      "event TransactionBatchAppended(uint256 indexed _batchIndex, bytes32 _batchRoot, uint256 _batchSize, uint256 _prevTotalElements, bytes _extraData)",
      "event TransactionEnqueued(address indexed _l1TxOrigin, address indexed _target, uint256 _gasLimit, bytes _data, uint256 indexed _queueIndex, uint256 _timestamp)",
      "function MAX_ROLLUP_TX_SIZE() view returns (uint256)",
      "function MIN_ROLLUP_TX_GAS() view returns (uint256)",
      "function appendSequencerBatch()",
      "function batches() view returns (address)",
      "function enqueue(address _target, uint256 _gasLimit, bytes _data)",
      "function enqueueGasCost() view returns (uint256)",
      "function enqueueL2GasPrepaid() view returns (uint256)",
      "function getLastBlockNumber() view returns (uint40)",
      "function getLastTimestamp() view returns (uint40)",
      "function getNextQueueIndex() view returns (uint40)",
      "function getNumPendingQueueElements() view returns (uint40)",
      "function getQueueElement(uint256 _index) view returns (tuple(bytes32 transactionHash, uint40 timestamp, uint40 blockNumber) _element)",
      "function getQueueLength() view returns (uint40)",
      "function getTotalBatches() view returns (uint256 _totalBatches)",
      "function getTotalElements() view returns (uint256 _totalElements)",
      "function l2GasDiscountDivisor() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function maxTransactionGasLimit() view returns (uint256)",
      "function queue() view returns (address)",
      "function resolve(string _name) view returns (address)",
      "function setGasParams(uint256 _l2GasDiscountDivisor, uint256 _enqueueGasCost)"
    ]
  }
}
