{
  "$schema": "../../../../discovery/schemas/config.v2.schema.json",
  "chain": "arbitrum",
  "name": "xai",
  "initialAddresses": [
    "0xaE21fDA3de92dE2FDAF606233b2863782Ba046F9",
    "0xb591cE747CF19cF30e11d656EB94134F523A9e77",
    "0xF9E08660223E2dbb1c0b28c82942aB6B5E38b8E5"
  ],
  "names": {
    "0xaE21fDA3de92dE2FDAF606233b2863782Ba046F9": "Inbox",
    "0xC47DacFbAa80Bd9D8112F4e8069482c2A3221336": "RollupProxy",
    "0x7dd8A76bdAeBE3BBBaCD7Aa87f1D4FDa1E60f94f": "Bridge",
    "0x3a3f62034a42a35eA1686B199bB73006aa525eE4": "ChallengeManager",
    "0x1E400568AD4840dbE50FB32f306B842e9ddeF726": "Outbox",
    "0x995a9d3ca121D48d21087eDE20bc8acb2398c8B1": "SequencerInbox",
    "0x0EE7AD3Cc291343C9952fFd8844e86d294fa513F": "UpgradeExecutor",
    "0x000d8C5A70B8805DF02f409F2715d05B9A63E871": "GnosisSafeAdminMember",
    "0xb591cE747CF19cF30e11d656EB94134F523A9e77": "L1ERC20Gateway",
    "0x22CCA5Dc96a4Ac1EC32c9c7C5ad4D66254a24C35": "L1GatewayRouter",
    "0x4972A8EF186Ee42A14Cdd3c47f52ec06a6dc495E": "ExecutorMultisig",
    "0xfD41041180571C5D371BEA3D9550E55653671198": "SentryReferee",
    "0xbc14d8563b248B79689ECbc43bBa53290e0b6b66": "NodeLicenseRegistry",
    "0xF9E08660223E2dbb1c0b28c82942aB6B5E38b8E5": "PoolFactory",
    "0x599C8489256Fb17b66d499d907F30b8022a29443": "StakingPool",
    "0xD88c8E0aE21beA6adE41A41130Bb4cd43e6b1723": "StakingProxyAdmin"
  },
  "overrides": {
    "PoolFactory": {
      "ignoreMethods": ["getPoolAddress", "stakingPools"],
      "ignoreRelatives": ["esXaiAddress"],
      "ignoreInWatchMode": ["getPoolsCount"]
    },
    "ChallengeManager": {
      "ignoreMethods": ["challenges"]
    },
    "RollupProxy": {
      "ignoreMethods": [
        // Execution reverted
        "proxiableUUID"
      ],
      "ignoreInWatchMode": [
        "firstUnresolvedNode",
        "latestConfirmed",
        "latestNodeCreated"
      ],
      "fields": {
        // when this changes, it means the validators have changed
        "setValidatorCount": {
          "handler": {
            "type": "eventCount",
            "topics": [
              // event OwnerFunctionCalled(uint256 indexed id);
              "0xea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456e",
              // id == 6 is emitted inside setValidator()
              "0x0000000000000000000000000000000000000000000000000000000000000006"
            ]
          }
        },
        "challenges": {
          "handler": {
            "type": "stateFromEvent",
            "event": "RollupChallengeStarted",
            "returnParams": [
              "challengeIndex",
              "asserter",
              "challenger",
              "challengedNode"
            ]
          }
        },
        "validators": {
          "handler": {
            "type": "arbitrumActors",
            "actorType": "validator"
          }
        }
      }
    },
    "Outbox": {
      "ignoreMethods": ["spent", "isSpent"]
    },
    "Bridge": {
      "ignoreMethods": ["sequencerInboxAccs", "delayedInboxAccs"],
      "ignoreInWatchMode": [
        "delayedMessageCount",
        "sequencerMessageCount",
        "sequencerReportedSubMessageCount"
      ],
      "ignoreRelatives": ["nativeToken"]
    },
    "SequencerInbox": {
      "ignoreMethods": ["inboxAccs"],
      "ignoreInWatchMode": ["batchCount", "totalDelayedMessagesRead"],
      "fields": {
        // getting sequencers from the contract is too complex at the moment
        // so we hardcode it in config .ts
        // this field will notify us in case of changes
        "IS_HARDCODED_SEQUENCER_BATCH_POSTER": {
          "handler": {
            "type": "call",
            "method": "function isBatchPoster(address) external view returns (bool)",
            "args": ["0x02c903F5c76F3f00c1F659702Bd76DF30470bBEE"]
          }
        },
        "sequencerVersion": {
          "handler": {
            "type": "arbitrumSequencerVersion"
          }
        },
        "dacKeyset": {
          "handler": {
            "type": "arbitrumDACKeyset"
          }
        },
        // when this changes, it means the sequencers have changed
        "setIsBatchPosterCount": {
          "handler": {
            "type": "eventCount",
            "topics": [
              // event OwnerFunctionCalled(uint256 indexed id);
              "0xea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456e",
              // id == 6 is emitted inside setValidator()
              "0x0000000000000000000000000000000000000000000000000000000000000001"
            ]
          }
        },
        "batchPosters": {
          "handler": {
            "type": "arbitrumActors",
            "actorType": "batchPoster"
          }
        },
        "keySetUpdates": {
          "handler": {
            "type": "eventCount",
            "topics": [
              // SetValidKeyset(bytes32,bytes)
              "0xabca9b7986bc22ad0160eb0cb88ae75411eacfba4052af0b457a9335ef655722"
            ]
          }
        }
      }
    },
    "UpgradeExecutor": {
      "fields": {
        "accessControl": {
          "handler": {
            "type": "accessControl"
          }
        }
      }
    },
    "GnosisSafeAdminMember": {
      "ignoreMethods": ["nonce"]
    },
    "ExecutorMultisig": {
      "ignoreMethods": ["nonce"]
    },
    "SentryReferee": {
      "ignoreMethods": [
        "challenges",
        "getBoostFactor",
        "getChallenge",
        "getMaxStakeAmount",
        "getKycWalletAtIndex",
        "getCombinedTotalSupply",
        "assignedKeyToPool",
        "getBoostFactorForKeyId"
      ],
      "ignoreInWatchMode": ["challengeCounter", "getKycWalletCount"],
      "ignoreRelatives": ["esXaiAddress", "xaiAddress"]
    },
    "NodeLicenseRegistry": {
      "ignoreMethods": ["getPricingTier", "tokenByIndex"],
      "ignoreInWatchMode": ["totalSupply"]
    },
    "StakingPool": {
      "ignoreMethods": [
        "getPoolInfo",
        "getStakedKeysCount",
        "keyIdIndex",
        "stakedKeysIndices"
      ]
    }
  }
}
