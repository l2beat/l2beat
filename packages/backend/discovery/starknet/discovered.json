{
  "name": "starknet",
  "blockNumber": 16945995,
  "configHash": "0xcde24d5f2e74a3922c7567fce2c02c80af010593c6f708e9aa525c1cc734cf52",
  "contracts": [
    {
      "name": "Starknet",
      "address": "0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4",
      "code": "https://etherscan.deth.net/address/0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4,0x739A654271c565839F0408546706bBea2F1FfE42",
      "upgradeability": {
        "type": "StarkWare proxy",
        "implementation": "0x739A654271c565839F0408546706bBea2F1FfE42",
        "upgradeDelay": 0,
        "isFinal": false
      },
      "values": {
        "configHash": "671483050609816861429812414688707376174032882875357307847551691140236175837",
        "getMaxL1MsgFee": "1000000000000000000",
        "getUpgradeActivationDelay": 0,
        "identify": "StarkWare_Starknet_2023_5",
        "implementation": "0x739A654271c565839F0408546706bBea2F1FfE42",
        "isFinalized": false,
        "isFrozen": false,
        "isNotFinalized": true,
        "l1ToL2MessageNonce": 332133,
        "messageCancellationDelay": 432100,
        "OPERATORS": [
          "0xFf6B2185E357b6e9136A1b2ca5d7C45765D5c591",
          "0x2C169DFe5fBbA12957Bdd0Ba47d9CEDbFE260CA7"
        ],
        "programHash": "3068850377810731364250169858796291952506855863903938200658516448366463400202",
        "PROXY_GOVERNANCE_TAG": "StarkEx.Proxy.2019.GovernorsInformation",
        "PROXY_VERSION": "3.0.0",
        "stateBlockNumber": 29133,
        "stateRoot": "1214860099655352351757535786027729310655632129725451309741022389313515613286",
        "UPGRADE_DELAY_SLOT": "0xc21dbb3089fcb2c4f4c6a67854ab4db2b0f233ea4b21b21f912d52d18fc5db1f",
        "verifier": "0x47312450B3Ac8b5b8e247a6bB6d523e7605bDb60"
      },
      "derivedName": "Starknet"
    },
    {
      "name": "CallProxy",
      "address": "0x47312450B3Ac8b5b8e247a6bB6d523e7605bDb60",
      "code": "https://etherscan.deth.net/address/0x47312450B3Ac8b5b8e247a6bB6d523e7605bDb60,0xD4C4044ACa68ebBcB81B13cC2699e1Bca2d3F458",
      "upgradeability": {
        "type": "StarkWare proxy",
        "implementation": "0xD4C4044ACa68ebBcB81B13cC2699e1Bca2d3F458",
        "callImplementation": "0x6cB3EE90C50a38A0e4662bB7e7E6e40B91361BF6",
        "upgradeDelay": 2419200,
        "isFinal": true
      },
      "values": {
        "CALL_PROXY_VERSION": "3.1.0",
        "callProxyImplementation": "0x6cB3EE90C50a38A0e4662bB7e7E6e40B91361BF6",
        "getUpgradeActivationDelay": 2419200,
        "implementation": "0xD4C4044ACa68ebBcB81B13cC2699e1Bca2d3F458",
        "isFrozen": false,
        "isNotFinalized": true,
        "PROXY_GOVERNANCE_TAG": "StarkEx.Proxy.2019.GovernorsInformation",
        "PROXY_VERSION": "3.0.0",
        "UPGRADE_DELAY_SLOT": "0xc21dbb3089fcb2c4f4c6a67854ab4db2b0f233ea4b21b21f912d52d18fc5db1f"
      }
    },
    {
      "name": "GpsStatementVerifier",
      "address": "0x6cB3EE90C50a38A0e4662bB7e7E6e40B91361BF6",
      "code": "https://etherscan.deth.net/address/0x6cB3EE90C50a38A0e4662bB7e7E6e40B91361BF6",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getBootloaderConfig": [
          "2962621603719000361370283216422448934312521782617806945663080079725495842070",
          "3178097804922730583543126053422762895998573737925004508949311089390705597156"
        ],
        "hasRegisteredFact": true,
        "identify": "StarkWare_GpsStatementVerifier_2022_7",
        "PAGE_INFO_ADDRESS_OFFSET": 0,
        "PAGE_INFO_HASH_OFFSET": 2,
        "PAGE_INFO_SIZE": 3,
        "PAGE_INFO_SIZE_IN_BYTES": 96,
        "PAGE_INFO_SIZE_OFFSET": 1
      }
    },
    {
      "name": "StarknetEthBridge",
      "address": "0xae0Ee0A63A2cE6BaeEFFE56e7714FB4EFE48D419",
      "code": "https://etherscan.deth.net/address/0xae0Ee0A63A2cE6BaeEFFE56e7714FB4EFE48D419,0x455603AD9ae671F6c1f0f746F24d7904cA603581",
      "upgradeability": {
        "type": "StarkWare proxy",
        "implementation": "0x455603AD9ae671F6c1f0f746F24d7904cA603581",
        "upgradeDelay": 604800,
        "isFinal": false
      },
      "values": {
        "bridgedToken": "0x0000000000000000000000000000000000000000",
        "depositorAddress": "0x0000000000000000000000000000000000000000",
        "getUpgradeActivationDelay": 604800,
        "identify": "StarkWare_StarknetEthBridge_2023_1",
        "implementation": "0x455603AD9ae671F6c1f0f746F24d7904cA603581",
        "isActive": true,
        "isFrozen": false,
        "isNotFinalized": true,
        "l2TokenContract": "0xd4C972C4e0A9946bEF9dabF4EF84EDa8EF542b82",
        "maxDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalBalance": "20000000000000000000000",
        "messagingContract": "0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4",
        "PROXY_GOVERNANCE_TAG": "StarkEx.Proxy.2019.GovernorsInformation",
        "PROXY_VERSION": "3.0.1",
        "UPGRADE_DELAY_SLOT": "0xc21dbb3089fcb2c4f4c6a67854ab4db2b0f233ea4b21b21f912d52d18fc5db1f"
      }
    },
    {
      "name": "WBTC Bridge",
      "address": "0x283751A21eafBFcD52297820D27C1f1963D9b5b4",
      "code": "https://etherscan.deth.net/address/0x283751A21eafBFcD52297820D27C1f1963D9b5b4,0x6Fa346c1e77C17d7976Bf1EFE2b121E845f15FEB",
      "upgradeability": {
        "type": "StarkWare proxy",
        "implementation": "0x6Fa346c1e77C17d7976Bf1EFE2b121E845f15FEB",
        "upgradeDelay": 604800,
        "isFinal": false
      },
      "values": {
        "getUpgradeActivationDelay": 604800,
        "identify": "StarkWare_StarknetERC20Bridge_2023_1",
        "implementation": "0x6Fa346c1e77C17d7976Bf1EFE2b121E845f15FEB",
        "isActive": true,
        "isFrozen": false,
        "isNotFinalized": true,
        "maxDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalBalance": 1000000000,
        "PROXY_GOVERNANCE_TAG": "StarkEx.Proxy.2019.GovernorsInformation",
        "PROXY_VERSION": "3.0.1",
        "UPGRADE_DELAY_SLOT": "0xc21dbb3089fcb2c4f4c6a67854ab4db2b0f233ea4b21b21f912d52d18fc5db1f"
      },
      "derivedName": "StarknetERC20Bridge"
    },
    {
      "name": "USDC Bridge",
      "address": "0xF6080D9fbEEbcd44D89aFfBFd42F098cbFf92816",
      "code": "https://etherscan.deth.net/address/0xF6080D9fbEEbcd44D89aFfBFd42F098cbFf92816,0x6Fa346c1e77C17d7976Bf1EFE2b121E845f15FEB",
      "upgradeability": {
        "type": "StarkWare proxy",
        "implementation": "0x6Fa346c1e77C17d7976Bf1EFE2b121E845f15FEB",
        "upgradeDelay": 604800,
        "isFinal": false
      },
      "values": {
        "getUpgradeActivationDelay": 604800,
        "identify": "StarkWare_StarknetERC20Bridge_2023_1",
        "implementation": "0x6Fa346c1e77C17d7976Bf1EFE2b121E845f15FEB",
        "isActive": true,
        "isFrozen": false,
        "isNotFinalized": true,
        "maxDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalBalance": 6000000000000,
        "PROXY_GOVERNANCE_TAG": "StarkEx.Proxy.2019.GovernorsInformation",
        "PROXY_VERSION": "3.0.1",
        "UPGRADE_DELAY_SLOT": "0xc21dbb3089fcb2c4f4c6a67854ab4db2b0f233ea4b21b21f912d52d18fc5db1f"
      },
      "derivedName": "StarknetERC20Bridge"
    },
    {
      "name": "USDT Bridge",
      "address": "0xbb3400F107804DFB482565FF1Ec8D8aE66747605",
      "code": "https://etherscan.deth.net/address/0xbb3400F107804DFB482565FF1Ec8D8aE66747605,0x6Fa346c1e77C17d7976Bf1EFE2b121E845f15FEB",
      "upgradeability": {
        "type": "StarkWare proxy",
        "implementation": "0x6Fa346c1e77C17d7976Bf1EFE2b121E845f15FEB",
        "upgradeDelay": 604800,
        "isFinal": false
      },
      "values": {
        "getUpgradeActivationDelay": 604800,
        "identify": "StarkWare_StarknetERC20Bridge_2023_1",
        "implementation": "0x6Fa346c1e77C17d7976Bf1EFE2b121E845f15FEB",
        "isActive": true,
        "isFrozen": false,
        "isNotFinalized": true,
        "maxDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalBalance": 3000000000000,
        "PROXY_GOVERNANCE_TAG": "StarkEx.Proxy.2019.GovernorsInformation",
        "PROXY_VERSION": "3.0.1",
        "UPGRADE_DELAY_SLOT": "0xc21dbb3089fcb2c4f4c6a67854ab4db2b0f233ea4b21b21f912d52d18fc5db1f"
      },
      "derivedName": "StarknetERC20Bridge"
    },
    {
      "name": "DAI Bridge",
      "address": "0x0437465dfb5B79726e35F08559B0cBea55bb585C",
      "code": "https://etherscan.deth.net/address/0x0437465dfb5B79726e35F08559B0cBea55bb585C",
      "upgradeability": {
        "type": "immutable"
      },
      "derivedName": "L1Escrow"
    }
  ],
  "eoas": [
    "0x2C169DFe5fBbA12957Bdd0Ba47d9CEDbFE260CA7",
    "0xd4C972C4e0A9946bEF9dabF4EF84EDa8EF542b82",
    "0xFf6B2185E357b6e9136A1b2ca5d7C45765D5c591"
  ],
  "abis": {
    "0x0437465dfb5B79726e35F08559B0cBea55bb585C": [
      "constructor()",
      "event Approve(address indexed token, address indexed spender, uint256 value)",
      "event Deny(address indexed usr)",
      "event Rely(address indexed usr)",
      "function approve(address token, address spender, uint256 value)",
      "function deny(address usr)",
      "function rely(address usr)",
      "function wards(address) view returns (uint256)"
    ],
    "0x283751A21eafBFcD52297820D27C1f1963D9b5b4": [
      "constructor(uint256 upgradeActivationDelay)",
      "event FinalizedImplementation(address indexed implementation)",
      "event ImplementationAdded(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationRemoved(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationUpgraded(address indexed implementation, bytes initializer)",
      "event LogNewGovernorAccepted(address acceptedGovernor)",
      "event LogNominatedGovernor(address nominatedGovernor)",
      "event LogNominationCancelled()",
      "event LogRemovedGovernor(address removedGovernor)",
      "function PROXY_GOVERNANCE_TAG() view returns (string)",
      "function PROXY_VERSION() view returns (string)",
      "function UPGRADE_DELAY_SLOT() view returns (bytes32)",
      "function addImplementation(address newImplementation, bytes data, bool finalize)",
      "function getUpgradeActivationDelay() view returns (uint256 delay)",
      "function implementation() view returns (address _implementation)",
      "function initialize(bytes) pure",
      "function isNotFinalized() view returns (bool notFinal)",
      "function proxyAcceptGovernance()",
      "function proxyCancelNomination()",
      "function proxyIsGovernor(address user) view returns (bool)",
      "function proxyNominateNewGovernor(address newGovernor)",
      "function proxyRemoveGovernor(address governorForRemoval)",
      "function removeImplementation(address removedImplementation, bytes data, bool finalize)",
      "function upgradeTo(address newImplementation, bytes data, bool finalize) payable"
    ],
    "0x455603AD9ae671F6c1f0f746F24d7904cA603581": [
      "event LogBridgeActivated()",
      "event LogDeposit(address indexed sender, uint256 amount, uint256 indexed l2Recipient, uint256 nonce, uint256 fee)",
      "event LogDepositCancelRequest(address indexed sender, uint256 amount, uint256 indexed l2Recipient, uint256 nonce)",
      "event LogDepositReclaimed(address indexed sender, uint256 amount, uint256 indexed l2Recipient, uint256 nonce)",
      "event LogNewGovernorAccepted(address acceptedGovernor)",
      "event LogNominatedGovernor(address nominatedGovernor)",
      "event LogNominationCancelled()",
      "event LogRemovedGovernor(address removedGovernor)",
      "event LogSetL2TokenBridge(uint256 value)",
      "event LogSetMaxDeposit(uint256 value)",
      "event LogSetMaxTotalBalance(uint256 value)",
      "event LogWithdrawal(address indexed recipient, uint256 amount)",
      "function acceptGovernance()",
      "function cancelNomination()",
      "function deposit(uint256 l2Recipient) payable",
      "function deposit(uint256 amount, uint256 l2Recipient) payable",
      "function depositCancelRequest(uint256 amount, uint256 l2Recipient, uint256 nonce)",
      "function depositReclaim(uint256 amount, uint256 l2Recipient, uint256 nonce)",
      "function identify() pure returns (string)",
      "function initialize(bytes data)",
      "function isActive() view returns (bool)",
      "function isFrozen() view returns (bool)",
      "function isGovernor(address user) view returns (bool)",
      "function maxDeposit() view returns (uint256)",
      "function maxTotalBalance() view returns (uint256)",
      "function nominateNewGovernor(address newGovernor)",
      "function removeGovernor(address governorForRemoval)",
      "function setL2TokenBridge(uint256 l2TokenBridge_)",
      "function setMaxDeposit(uint256 maxDeposit_)",
      "function setMaxTotalBalance(uint256 maxTotalBalance_)",
      "function withdraw(uint256 amount, address recipient)",
      "function withdraw(uint256 amount)"
    ],
    "0x47312450B3Ac8b5b8e247a6bB6d523e7605bDb60": [
      "constructor(uint256 upgradeActivationDelay)",
      "event FinalizedImplementation(address indexed implementation)",
      "event ImplementationAdded(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationRemoved(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationUpgraded(address indexed implementation, bytes initializer)",
      "event LogNewGovernorAccepted(address acceptedGovernor)",
      "event LogNominatedGovernor(address nominatedGovernor)",
      "event LogNominationCancelled()",
      "event LogRemovedGovernor(address removedGovernor)",
      "function PROXY_GOVERNANCE_TAG() view returns (string)",
      "function PROXY_VERSION() view returns (string)",
      "function UPGRADE_DELAY_SLOT() view returns (bytes32)",
      "function addImplementation(address newImplementation, bytes data, bool finalize)",
      "function getUpgradeActivationDelay() view returns (uint256 delay)",
      "function implementation() view returns (address _implementation)",
      "function initialize(bytes) pure",
      "function isNotFinalized() view returns (bool notFinal)",
      "function proxyAcceptGovernance()",
      "function proxyCancelNomination()",
      "function proxyIsGovernor(address testGovernor) view returns (bool)",
      "function proxyNominateNewGovernor(address newGovernor)",
      "function proxyRemoveGovernor(address governorForRemoval)",
      "function removeImplementation(address removedImplementation, bytes data, bool finalize)",
      "function upgradeTo(address newImplementation, bytes data, bool finalize) payable"
    ],
    "0x6cB3EE90C50a38A0e4662bB7e7E6e40B91361BF6": [
      "constructor(address bootloaderProgramContract, address memoryPageFactRegistry_, address[] cairoVerifierContracts, uint256 hashedSupportedCairoVerifiers, uint256 simpleBootloaderProgramHash)",
      "event LogMemoryPagesHashes(bytes32 programOutputFact, bytes32[] pagesHashes)",
      "function PAGE_INFO_ADDRESS_OFFSET() view returns (uint256)",
      "function PAGE_INFO_HASH_OFFSET() view returns (uint256)",
      "function PAGE_INFO_SIZE() view returns (uint256)",
      "function PAGE_INFO_SIZE_IN_BYTES() view returns (uint256)",
      "function PAGE_INFO_SIZE_OFFSET() view returns (uint256)",
      "function getBootloaderConfig() view returns (uint256, uint256)",
      "function hasRegisteredFact() view returns (bool)",
      "function identify() pure returns (string)",
      "function isValid(bytes32 fact) view returns (bool)",
      "function verifyProofAndRegister(uint256[] proofParams, uint256[] proof, uint256[] taskMetadata, uint256[] cairoAuxInput, uint256 cairoVerifierId)"
    ],
    "0x6Fa346c1e77C17d7976Bf1EFE2b121E845f15FEB": [
      "event LogBridgeActivated()",
      "event LogDeposit(address indexed sender, uint256 amount, uint256 indexed l2Recipient, uint256 nonce, uint256 fee)",
      "event LogDepositCancelRequest(address indexed sender, uint256 amount, uint256 indexed l2Recipient, uint256 nonce)",
      "event LogDepositReclaimed(address indexed sender, uint256 amount, uint256 indexed l2Recipient, uint256 nonce)",
      "event LogNewGovernorAccepted(address acceptedGovernor)",
      "event LogNominatedGovernor(address nominatedGovernor)",
      "event LogNominationCancelled()",
      "event LogRemovedGovernor(address removedGovernor)",
      "event LogSetL2TokenBridge(uint256 value)",
      "event LogSetMaxDeposit(uint256 value)",
      "event LogSetMaxTotalBalance(uint256 value)",
      "event LogWithdrawal(address indexed recipient, uint256 amount)",
      "function acceptGovernance()",
      "function cancelNomination()",
      "function deposit(uint256 amount, uint256 l2Recipient) payable",
      "function depositCancelRequest(uint256 amount, uint256 l2Recipient, uint256 nonce)",
      "function depositReclaim(uint256 amount, uint256 l2Recipient, uint256 nonce)",
      "function identify() pure returns (string)",
      "function initialize(bytes data)",
      "function isActive() view returns (bool)",
      "function isFrozen() view returns (bool)",
      "function isGovernor(address user) view returns (bool)",
      "function maxDeposit() view returns (uint256)",
      "function maxTotalBalance() view returns (uint256)",
      "function nominateNewGovernor(address newGovernor)",
      "function removeGovernor(address governorForRemoval)",
      "function setL2TokenBridge(uint256 l2TokenBridge_)",
      "function setMaxDeposit(uint256 maxDeposit_)",
      "function setMaxTotalBalance(uint256 maxTotalBalance_)",
      "function withdraw(uint256 amount, address recipient)",
      "function withdraw(uint256 amount)"
    ],
    "0x739A654271c565839F0408546706bBea2F1FfE42": [
      "event ConsumedMessageToL1(uint256 indexed fromAddress, address indexed toAddress, uint256[] payload)",
      "event ConsumedMessageToL2(address indexed fromAddress, uint256 indexed toAddress, uint256 indexed selector, uint256[] payload, uint256 nonce)",
      "event Finalized()",
      "event LogMessageToL1(uint256 indexed fromAddress, address indexed toAddress, uint256[] payload)",
      "event LogMessageToL2(address indexed fromAddress, uint256 indexed toAddress, uint256 indexed selector, uint256[] payload, uint256 nonce, uint256 fee)",
      "event LogNewGovernorAccepted(address acceptedGovernor)",
      "event LogNominatedGovernor(address nominatedGovernor)",
      "event LogNominationCancelled()",
      "event LogOperatorAdded(address operator)",
      "event LogOperatorRemoved(address operator)",
      "event LogRemovedGovernor(address removedGovernor)",
      "event LogStateTransitionFact(bytes32 stateTransitionFact)",
      "event LogStateUpdate(uint256 globalRoot, int256 blockNumber)",
      "event MessageToL2Canceled(address indexed fromAddress, uint256 indexed toAddress, uint256 indexed selector, uint256[] payload, uint256 nonce)",
      "event MessageToL2CancellationStarted(address indexed fromAddress, uint256 indexed toAddress, uint256 indexed selector, uint256[] payload, uint256 nonce)",
      "function cancelL1ToL2Message(uint256 toAddress, uint256 selector, uint256[] payload, uint256 nonce) returns (bytes32)",
      "function configHash() view returns (uint256)",
      "function consumeMessageFromL2(uint256 fromAddress, uint256[] payload) returns (bytes32)",
      "function finalize()",
      "function getMaxL1MsgFee() pure returns (uint256)",
      "function identify() pure returns (string)",
      "function initialize(bytes data)",
      "function isFinalized() view returns (bool)",
      "function isFrozen() view returns (bool)",
      "function isOperator(address user) view returns (bool)",
      "function l1ToL2MessageCancellations(bytes32 msgHash) view returns (uint256)",
      "function l1ToL2MessageNonce() view returns (uint256)",
      "function l1ToL2Messages(bytes32 msgHash) view returns (uint256)",
      "function l2ToL1Messages(bytes32 msgHash) view returns (uint256)",
      "function messageCancellationDelay() view returns (uint256)",
      "function programHash() view returns (uint256)",
      "function registerOperator(address newOperator)",
      "function sendMessageToL2(uint256 toAddress, uint256 selector, uint256[] payload) payable returns (bytes32, uint256)",
      "function setConfigHash(uint256 newConfigHash)",
      "function setMessageCancellationDelay(uint256 delayInSeconds)",
      "function setProgramHash(uint256 newProgramHash)",
      "function starknetAcceptGovernance()",
      "function starknetCancelNomination()",
      "function starknetIsGovernor(address user) view returns (bool)",
      "function starknetNominateNewGovernor(address newGovernor)",
      "function starknetRemoveGovernor(address governorForRemoval)",
      "function startL1ToL2MessageCancellation(uint256 toAddress, uint256 selector, uint256[] payload, uint256 nonce) returns (bytes32)",
      "function stateBlockNumber() view returns (int256)",
      "function stateRoot() view returns (uint256)",
      "function unregisterOperator(address removedOperator)",
      "function updateState(uint256[] programOutput, uint256 onchainDataHash, uint256 onchainDataSize)"
    ],
    "0xae0Ee0A63A2cE6BaeEFFE56e7714FB4EFE48D419": [
      "constructor(uint256 upgradeActivationDelay)",
      "event FinalizedImplementation(address indexed implementation)",
      "event ImplementationAdded(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationRemoved(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationUpgraded(address indexed implementation, bytes initializer)",
      "event LogNewGovernorAccepted(address acceptedGovernor)",
      "event LogNominatedGovernor(address nominatedGovernor)",
      "event LogNominationCancelled()",
      "event LogRemovedGovernor(address removedGovernor)",
      "function PROXY_GOVERNANCE_TAG() view returns (string)",
      "function PROXY_VERSION() view returns (string)",
      "function UPGRADE_DELAY_SLOT() view returns (bytes32)",
      "function addImplementation(address newImplementation, bytes data, bool finalize)",
      "function getUpgradeActivationDelay() view returns (uint256 delay)",
      "function implementation() view returns (address _implementation)",
      "function initialize(bytes) pure",
      "function isNotFinalized() view returns (bool notFinal)",
      "function proxyAcceptGovernance()",
      "function proxyCancelNomination()",
      "function proxyIsGovernor(address testGovernor) view returns (bool)",
      "function proxyNominateNewGovernor(address newGovernor)",
      "function proxyRemoveGovernor(address governorForRemoval)",
      "function removeImplementation(address removedImplementation, bytes data, bool finalize)",
      "function upgradeTo(address newImplementation, bytes data, bool finalize) payable"
    ],
    "0xbb3400F107804DFB482565FF1Ec8D8aE66747605": [
      "constructor(uint256 upgradeActivationDelay)",
      "event FinalizedImplementation(address indexed implementation)",
      "event ImplementationAdded(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationRemoved(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationUpgraded(address indexed implementation, bytes initializer)",
      "event LogNewGovernorAccepted(address acceptedGovernor)",
      "event LogNominatedGovernor(address nominatedGovernor)",
      "event LogNominationCancelled()",
      "event LogRemovedGovernor(address removedGovernor)",
      "function PROXY_GOVERNANCE_TAG() view returns (string)",
      "function PROXY_VERSION() view returns (string)",
      "function UPGRADE_DELAY_SLOT() view returns (bytes32)",
      "function addImplementation(address newImplementation, bytes data, bool finalize)",
      "function getUpgradeActivationDelay() view returns (uint256 delay)",
      "function implementation() view returns (address _implementation)",
      "function initialize(bytes) pure",
      "function isNotFinalized() view returns (bool notFinal)",
      "function proxyAcceptGovernance()",
      "function proxyCancelNomination()",
      "function proxyIsGovernor(address user) view returns (bool)",
      "function proxyNominateNewGovernor(address newGovernor)",
      "function proxyRemoveGovernor(address governorForRemoval)",
      "function removeImplementation(address removedImplementation, bytes data, bool finalize)",
      "function upgradeTo(address newImplementation, bytes data, bool finalize) payable"
    ],
    "0xc662c410C0ECf747543f5bA90660f6ABeBD9C8c4": [
      "constructor(uint256 upgradeActivationDelay)",
      "event FinalizedImplementation(address indexed implementation)",
      "event ImplementationAdded(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationRemoved(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationUpgraded(address indexed implementation, bytes initializer)",
      "event LogNewGovernorAccepted(address acceptedGovernor)",
      "event LogNominatedGovernor(address nominatedGovernor)",
      "event LogNominationCancelled()",
      "event LogRemovedGovernor(address removedGovernor)",
      "function PROXY_GOVERNANCE_TAG() view returns (string)",
      "function PROXY_VERSION() view returns (string)",
      "function UPGRADE_DELAY_SLOT() view returns (bytes32)",
      "function addImplementation(address newImplementation, bytes data, bool finalize)",
      "function getUpgradeActivationDelay() view returns (uint256 delay)",
      "function implementation() view returns (address _implementation)",
      "function initialize(bytes) pure",
      "function isNotFinalized() view returns (bool notFinal)",
      "function proxyAcceptGovernance()",
      "function proxyCancelNomination()",
      "function proxyIsGovernor(address testGovernor) view returns (bool)",
      "function proxyNominateNewGovernor(address newGovernor)",
      "function proxyRemoveGovernor(address governorForRemoval)",
      "function removeImplementation(address removedImplementation, bytes data, bool finalize)",
      "function upgradeTo(address newImplementation, bytes data, bool finalize) payable"
    ],
    "0xD4C4044ACa68ebBcB81B13cC2699e1Bca2d3F458": [
      "function CALL_PROXY_VERSION() view returns (string)",
      "function UPGRADE_DELAY_SLOT() view returns (bytes32)",
      "function callProxyImplementation() view returns (address _implementation)",
      "function initialize(bytes data)",
      "function isFrozen() pure returns (bool)",
      "function isValid(bytes32 fact) view returns (bool)"
    ],
    "0xF6080D9fbEEbcd44D89aFfBFd42F098cbFf92816": [
      "constructor(uint256 upgradeActivationDelay)",
      "event FinalizedImplementation(address indexed implementation)",
      "event ImplementationAdded(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationRemoved(address indexed implementation, bytes initializer, bool finalize)",
      "event ImplementationUpgraded(address indexed implementation, bytes initializer)",
      "event LogNewGovernorAccepted(address acceptedGovernor)",
      "event LogNominatedGovernor(address nominatedGovernor)",
      "event LogNominationCancelled()",
      "event LogRemovedGovernor(address removedGovernor)",
      "function PROXY_GOVERNANCE_TAG() view returns (string)",
      "function PROXY_VERSION() view returns (string)",
      "function UPGRADE_DELAY_SLOT() view returns (bytes32)",
      "function addImplementation(address newImplementation, bytes data, bool finalize)",
      "function getUpgradeActivationDelay() view returns (uint256 delay)",
      "function implementation() view returns (address _implementation)",
      "function initialize(bytes) pure",
      "function isNotFinalized() view returns (bool notFinal)",
      "function proxyAcceptGovernance()",
      "function proxyCancelNomination()",
      "function proxyIsGovernor(address user) view returns (bool)",
      "function proxyNominateNewGovernor(address newGovernor)",
      "function proxyRemoveGovernor(address governorForRemoval)",
      "function removeImplementation(address removedImplementation, bytes data, bool finalize)",
      "function upgradeTo(address newImplementation, bytes data, bool finalize) payable"
    ]
  }
}