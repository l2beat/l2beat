{
  "name": "zksync2",
  "chain": "ethereum",
  "blockNumber": 19425767,
  "configHash": "0x568b8fc02c9faebafce49ae7f914598b34d02bf6c3d0d48b6665785b0feda1e0",
  "version": 3,
  "contracts": [
    {
      "name": "Governance",
      "address": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701258227,
      "values": {
        "minDelay": 0,
        "owner": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "securityCouncil": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "zkSync",
      "address": "0x32400084C286CF3E17e7B677ea9583e60a000324",
      "upgradeability": {
        "type": "EIP2535 diamond proxy",
        "facets": [
          "0x230214F0224C7E0485f348a79512ad00514DB1F7",
          "0x10113bB3a8e64f8eD67003126adC8CE74C34610c",
          "0xA57F9FFD65fC0F5792B5e958dF42399a114EC7e7",
          "0xfd3779e6214eBBd40f5F5890351298e123A46BA6"
        ]
      },
      "implementations": [
        "0x230214F0224C7E0485f348a79512ad00514DB1F7",
        "0x10113bB3a8e64f8eD67003126adC8CE74C34610c",
        "0xA57F9FFD65fC0F5792B5e958dF42399a114EC7e7",
        "0xfd3779e6214eBBd40f5F5890351298e123A46BA6"
      ],
      "sinceTimestamp": 1676315375,
      "values": {
        "facetAddresses": [
          "0x230214F0224C7E0485f348a79512ad00514DB1F7",
          "0x10113bB3a8e64f8eD67003126adC8CE74C34610c",
          "0xA57F9FFD65fC0F5792B5e958dF42399a114EC7e7",
          "0xfd3779e6214eBBd40f5F5890351298e123A46BA6"
        ],
        "facets": [
          [
            "0x230214F0224C7E0485f348a79512ad00514DB1F7",
            [
              "0x0e18b681",
              "0xe58bb639",
              "0x64bf8d66",
              "0xa9f6d941",
              "0x27ae4c16",
              "0x4dd18bf5",
              "0xf235757f",
              "0x1cc5d103",
              "0xbe6f11cf",
              "0x4623c91d",
              "0x17338945"
            ]
          ],
          [
            "0x10113bB3a8e64f8eD67003126adC8CE74C34610c",
            [
              "0xcdffacc6",
              "0x52ef6b2c",
              "0xadfca15e",
              "0x7a0ed627",
              "0x79823c9a",
              "0x4fc07d75",
              "0xd86970d8",
              "0xfd791f3c",
              "0xe5355c75",
              "0x9d1b5a81",
              "0x7b30c8da",
              "0x8665b150",
              "0x631f4bac",
              "0x0ec6b0b7",
              "0x33ce93fe",
              "0xdb1f0bf9",
              "0xb8c2f66f",
              "0xef3f0bae",
              "0xfe26699e",
              "0x39607382",
              "0xaf6a2dcd",
              "0xa1954fc5",
              "0x46657fe9",
              "0x18e3a941",
              "0x29b98c67",
              "0xbd7c5412",
              "0xc3bbd2d7",
              "0xe81e0ba1",
              "0xfacd743b",
              "0x9cd939e4",
              "0x56142d7a",
              "0xb22dd78e",
              "0x74f4d30d"
            ]
          ],
          [
            "0xA57F9FFD65fC0F5792B5e958dF42399a114EC7e7",
            [
              "0x6c0960f9",
              "0xb473318e",
              "0x042901c7",
              "0x263b7f8e",
              "0xe4948f43",
              "0xeb672419"
            ]
          ],
          [
            "0xfd3779e6214eBBd40f5F5890351298e123A46BA6",
            ["0x701f58c5", "0xc3d93e7c", "0x7f61885c", "0x97c09d34"]
          ]
        ],
        "getFirstUnprocessedPriorityTx": 3052348,
        "getGovernor": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
        "getL2BootloaderBytecodeHash": "0x010007ede999d096c84553fb514d3d6ca76fbf39789dda76bfeda9f3ae06236e",
        "getL2DefaultAccountBytecodeHash": "0x0100055b041eb28aff6e3a6e0f37c31fd053fc9ef142683b05e5f0aee6934066",
        "getL2SystemContractsUpgradeBatchNumber": 0,
        "getL2SystemContractsUpgradeBlockNumber": 0,
        "getL2SystemContractsUpgradeTxHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getPendingGovernor": "0x0000000000000000000000000000000000000000",
        "getPriorityQueueSize": 772,
        "getPriorityTxMaxGasLimit": 72000000,
        "getProtocolVersion": 22,
        "getTotalBatchesCommitted": 460685,
        "getTotalBatchesExecuted": 460146,
        "getTotalBatchesVerified": 460665,
        "getTotalBlocksCommitted": 460685,
        "getTotalBlocksExecuted": 460146,
        "getTotalBlocksVerified": 460665,
        "getTotalPriorityTxs": 3053120,
        "getVerifier": "0xdd9C826196cf3510B040A8784D85aE36674c7Ed2",
        "getVerifierParams": [
          "0x5a3ef282b21e12fe1f4438e5bb158fc5060b160559c5158c6389d62d9fe3d080",
          "0x400a4b532c6f072c00d1806ef299300d4c104f4ac55bd8698ade78894fcadc0a",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "isDiamondStorageFrozen": false,
        "priorityQueueFrontOperation": [
          "0x2a884960f6359d95c946e34fc77a978b66662a819f07000ae63d1d37da9cabb2",
          1710244859,
          0
        ],
        "validators": ["0xa8CB082A5a689E0d594d7da1E2d72A3D63aDc1bD"]
      },
      "derivedName": "DiamondProxy"
    },
    {
      "name": "zkSync Era Multisig",
      "address": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1666872275,
      "values": {
        "domainSeparator": "0xd3e32b4e9e95656dc35c609ae0fbcc0cea466ebecc8227025a2d3edc728b79fb",
        "getChainId": 1,
        "getOwners": [
          "0x3F0009D00cc78979d00Eb635490F23E8d6aCc481",
          "0xe79af29d618141Ffef951B240b250d47030D56d7",
          "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
          "0x84298D79ad2CD4eC0d9Ca1959F9d9f40Bc07152f",
          "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
          "0x9dF8bc0918F357c766A5697E031fF5237c05747A",
          "0x1567AC0764142e91aB0A9C65C568f0DbE9E168BF",
          "0x700DA14328eC2F81053E5B6aAE4803E16BEdF1df"
        ],
        "getThreshold": 4,
        "nonce": 94,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "L1ERC20Bridge",
      "address": "0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x810c6598CAaA08B61f6430Df5a8e120B3390d78A",
        "admin": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61"
      },
      "implementations": ["0x810c6598CAaA08B61f6430Df5a8e120B3390d78A"],
      "sinceTimestamp": 1676370683,
      "values": {
        "l2Bridge": "0x11f943b2c77b743AB90f4A0Ae7d5A4e7FCA3E102",
        "l2TokenBeacon": "0x1Eb710030273e529A6aD7E1e14D4e601765Ba3c6",
        "l2TokenProxyBytecodeHash": "0x01000121a363b3fbec270986067c1b553bf540c30a6f186f45313133ff1a1019"
      },
      "derivedName": "L1ERC20Bridge"
    },
    {
      "name": "ValidatorTimelock",
      "address": "0xa8CB082A5a689E0d594d7da1E2d72A3D63aDc1bD",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1709850611,
      "values": {
        "constructorArgs": {
          "_initialOwner": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
          "_zkSyncContract": "0x32400084C286CF3E17e7B677ea9583e60a000324",
          "_executionDelay": 75600,
          "_validators": [
            "0x3527439923a63F8C13CF72b8Fe80a77f6e572092",
            "0x0D3250c3D5FAcb74Ac15834096397a3Ef790ec99"
          ]
        },
        "executionDelay": 75600,
        "getName": "ValidatorTimelock",
        "owner": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "revertedBlocks": [],
        "validatorsAdded": [],
        "validatorsRemoved": [],
        "zkSyncContract": "0x32400084C286CF3E17e7B677ea9583e60a000324"
      },
      "derivedName": "ValidatorTimelock"
    },
    {
      "name": "Verifier",
      "address": "0xdd9C826196cf3510B040A8784D85aE36674c7Ed2",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1709849567,
      "values": {
        "verificationKeyHash": "0x063c6fb5c70404c2867f413a8e35563ad3d040b1ad8c11786231bfdba7b472c7"
      }
    }
  ],
  "eoas": [
    "0x0D3250c3D5FAcb74Ac15834096397a3Ef790ec99",
    "0x1567AC0764142e91aB0A9C65C568f0DbE9E168BF",
    "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
    "0x3527439923a63F8C13CF72b8Fe80a77f6e572092",
    "0x3F0009D00cc78979d00Eb635490F23E8d6aCc481",
    "0x700DA14328eC2F81053E5B6aAE4803E16BEdF1df",
    "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
    "0x84298D79ad2CD4eC0d9Ca1959F9d9f40Bc07152f",
    "0x9dF8bc0918F357c766A5697E031fF5237c05747A",
    "0xe79af29d618141Ffef951B240b250d47030D56d7"
  ],
  "abis": {
    "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61": [
      "constructor(address _admin, address _securityCouncil, uint256 _minDelay)",
      "event ChangeMinDelay(uint256 _delayBefore, uint256 _delayAfter)",
      "event ChangeSecurityCouncil(address _securityCouncilBefore, address _securityCouncilAfter)",
      "event OperationCancelled(bytes32 indexed _id)",
      "event OperationExecuted(bytes32 indexed _id)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ShadowOperationScheduled(bytes32 indexed _id, uint256 delay)",
      "event TransparentOperationScheduled(bytes32 indexed _id, uint256 delay, tuple(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) _operation)",
      "function acceptOwnership()",
      "function cancel(bytes32 _id)",
      "function execute(tuple(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) _operation) payable",
      "function executeInstant(tuple(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) _operation) payable",
      "function getOperationState(bytes32 _id) view returns (uint8)",
      "function hashOperation(tuple(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) _operation) pure returns (bytes32)",
      "function isOperation(bytes32 _id) view returns (bool)",
      "function isOperationDone(bytes32 _id) view returns (bool)",
      "function isOperationPending(bytes32 _id) view returns (bool)",
      "function isOperationReady(bytes32 _id) view returns (bool)",
      "function minDelay() view returns (uint256)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function scheduleShadow(bytes32 _id, uint256 _delay)",
      "function scheduleTransparent(tuple(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) _operation, uint256 _delay)",
      "function securityCouncil() view returns (address)",
      "function timestamps(bytes32) view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function updateDelay(uint256 _newDelay)",
      "function updateSecurityCouncil(address _newSecurityCouncil)"
    ],
    "0x10113bB3a8e64f8eD67003126adC8CE74C34610c": [
      "function facetAddress(bytes4 _selector) view returns (address)",
      "function facetAddresses() view returns (address[])",
      "function facetFunctionSelectors(address _facet) view returns (bytes4[])",
      "function facets() view returns (tuple(address addr, bytes4[] selectors)[] result)",
      "function getFirstUnprocessedPriorityTx() view returns (uint256)",
      "function getGovernor() view returns (address)",
      "function getL2BootloaderBytecodeHash() view returns (bytes32)",
      "function getL2DefaultAccountBytecodeHash() view returns (bytes32)",
      "function getL2SystemContractsUpgradeBatchNumber() view returns (uint256)",
      "function getL2SystemContractsUpgradeBlockNumber() view returns (uint256)",
      "function getL2SystemContractsUpgradeTxHash() view returns (bytes32)",
      "function getName() view returns (string)",
      "function getPendingGovernor() view returns (address)",
      "function getPriorityQueueSize() view returns (uint256)",
      "function getPriorityTxMaxGasLimit() view returns (uint256)",
      "function getProtocolVersion() view returns (uint256)",
      "function getTotalBatchesCommitted() view returns (uint256)",
      "function getTotalBatchesExecuted() view returns (uint256)",
      "function getTotalBatchesVerified() view returns (uint256)",
      "function getTotalBlocksCommitted() view returns (uint256)",
      "function getTotalBlocksExecuted() view returns (uint256)",
      "function getTotalBlocksVerified() view returns (uint256)",
      "function getTotalPriorityTxs() view returns (uint256)",
      "function getVerifier() view returns (address)",
      "function getVerifierParams() view returns (tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash))",
      "function isDiamondStorageFrozen() view returns (bool)",
      "function isEthWithdrawalFinalized(uint256 _l2BatchNumber, uint256 _l2MessageIndex) view returns (bool)",
      "function isFacetFreezable(address _facet) view returns (bool isFreezable)",
      "function isFunctionFreezable(bytes4 _selector) view returns (bool)",
      "function isValidator(address _address) view returns (bool)",
      "function l2LogsRootHash(uint256 _batchNumber) view returns (bytes32)",
      "function priorityQueueFrontOperation() view returns (tuple(bytes32 canonicalTxHash, uint64 expirationTimestamp, uint192 layer2Tip))",
      "function storedBatchHash(uint256 _batchNumber) view returns (bytes32)",
      "function storedBlockHash(uint256 _batchNumber) view returns (bytes32)"
    ],
    "0x230214F0224C7E0485f348a79512ad00514DB1F7": [
      "event DiamondCut(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata)",
      "event ExecuteUpgrade(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCut)",
      "event Freeze()",
      "event IsPorterAvailableStatusUpdate(bool isPorterAvailable)",
      "event NewAdmin(address indexed oldAdmin, address indexed newAdmin)",
      "event NewFeeParams(tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) oldFeeParams, tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) newFeeParams)",
      "event NewGovernor(address indexed oldGovernor, address indexed newGovernor)",
      "event NewPendingAdmin(address indexed oldPendingAdmin, address indexed newPendingAdmin)",
      "event NewPendingGovernor(address indexed oldPendingGovernor, address indexed newPendingGovernor)",
      "event NewPriorityTxMaxGasLimit(uint256 oldPriorityTxMaxGasLimit, uint256 newPriorityTxMaxGasLimit)",
      "event Unfreeze()",
      "event ValidatorStatusUpdate(address indexed validatorAddress, bool isActive)",
      "function acceptAdmin()",
      "function acceptGovernor()",
      "function changeFeeParams(tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) _newFeeParams)",
      "function executeUpgrade(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)",
      "function freezeDiamond()",
      "function getName() view returns (string)",
      "function setPendingAdmin(address _newPendingAdmin)",
      "function setPendingGovernor(address _newPendingGovernor)",
      "function setPorterAvailability(bool _zkPorterIsAvailable)",
      "function setPriorityTxMaxGasLimit(uint256 _newPriorityTxMaxGasLimit)",
      "function setValidator(address _validator, bool _active)",
      "function unfreezeDiamond()"
    ],
    "0x32400084C286CF3E17e7B677ea9583e60a000324": [
      "constructor(uint256 _chainId, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)"
    ],
    "0x4e4943346848c4867F81dFb37c4cA9C5715A7828": [
      "constructor(address _singleton)"
    ],
    "0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x810c6598CAaA08B61f6430Df5a8e120B3390d78A": [
      "constructor(address _zkSync)",
      "event ClaimedFailedDeposit(address indexed to, address indexed l1Token, uint256 amount)",
      "event DepositInitiated(bytes32 indexed l2DepositTxHash, address indexed from, address indexed to, address l1Token, uint256 amount)",
      "event WithdrawalFinalized(address indexed to, address indexed l1Token, uint256 amount)",
      "function claimFailedDeposit(address _depositSender, address _l1Token, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte) payable returns (bytes32 l2TxHash)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte, address _refundRecipient) payable returns (bytes32 l2TxHash)",
      "function finalizeWithdrawal(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function initialize(bytes[] _factoryDeps, address _l2TokenBeacon, address _governor, uint256 _deployBridgeImplementationFee, uint256 _deployBridgeProxyFee) payable",
      "function isWithdrawalFinalized(uint256 l2BatchNumber, uint256 l2ToL1MessageNumber) view returns (bool isFinalized)",
      "function l2Bridge() view returns (address)",
      "function l2TokenAddress(address _l1Token) view returns (address)",
      "function l2TokenBeacon() view returns (address)",
      "function l2TokenProxyBytecodeHash() view returns (bytes32)"
    ],
    "0xA57F9FFD65fC0F5792B5e958dF42399a114EC7e7": [
      "event EthWithdrawalFinalized(address indexed to, uint256 amount)",
      "event NewPriorityRequest(uint256 txId, bytes32 txHash, uint64 expirationTimestamp, tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) transaction, bytes[] factoryDeps)",
      "function finalizeEthWithdrawal(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function getName() view returns (string)",
      "function l2TransactionBaseCost(uint256 _gasPrice, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit) view returns (uint256)",
      "function proveL1ToL2TransactionStatus(bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof, uint8 _status) view returns (bool)",
      "function proveL2LogInclusion(uint256 _batchNumber, uint256 _index, tuple(uint8 l2ShardId, bool isService, uint16 txNumberInBatch, address sender, bytes32 key, bytes32 value) _log, bytes32[] _proof) view returns (bool)",
      "function proveL2MessageInclusion(uint256 _batchNumber, uint256 _index, tuple(uint16 txNumberInBatch, address sender, bytes data) _message, bytes32[] _proof) view returns (bool)",
      "function requestL2Transaction(address _contractL2, uint256 _l2Value, bytes _calldata, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit, bytes[] _factoryDeps, address _refundRecipient) payable returns (bytes32 canonicalTxHash)"
    ],
    "0xa8CB082A5a689E0d594d7da1E2d72A3D63aDc1bD": [
      "constructor(address _initialOwner, address _zkSyncContract, uint32 _executionDelay, address[] _validators)",
      "error AddressAlreadyValidator()",
      "error ValidatorDoesNotExist()",
      "event BlockCommit(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlockExecution(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlocksRevert(uint256 totalBatchesCommitted, uint256 totalBatchesVerified, uint256 totalBatchesExecuted)",
      "event BlocksVerification(uint256 indexed previousLastVerifiedBatch, uint256 indexed currentLastVerifiedBatch)",
      "event NewExecutionDelay(uint256 _newExecutionDelay)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ValidatorAdded(address _addedValidator)",
      "event ValidatorRemoved(address _removedValidator)",
      "function acceptOwnership()",
      "function addValidator(address _newValidator)",
      "function commitBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 bootloaderHeapInitialContentsHash, bytes32 eventsQueueStateHash, bytes systemLogs, bytes pubdataCommitments)[] _newBatchesData)",
      "function executeBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _newBatchesData)",
      "function executionDelay() view returns (uint32)",
      "function getCommittedBatchTimestamp(uint256 _l2BatchNumber) view returns (uint256)",
      "function getName() view returns (string)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function proveBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[], tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof))",
      "function removeValidator(address _validator)",
      "function renounceOwnership()",
      "function revertBatches(uint256)",
      "function setExecutionDelay(uint32 _executionDelay)",
      "function transferOwnership(address newOwner)",
      "function validators(address) view returns (bool)",
      "function zkSyncContract() view returns (address)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdd9C826196cf3510B040A8784D85aE36674c7Ed2": [
      "function verificationKeyHash() pure returns (bytes32 vkHash)",
      "function verify(uint256[], uint256[], uint256[]) view returns (bool)"
    ],
    "0xfd3779e6214eBBd40f5F5890351298e123A46BA6": [
      "event BlockCommit(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlockExecution(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlocksRevert(uint256 totalBatchesCommitted, uint256 totalBatchesVerified, uint256 totalBatchesExecuted)",
      "event BlocksVerification(uint256 indexed previousLastVerifiedBatch, uint256 indexed currentLastVerifiedBatch)",
      "function commitBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _lastCommittedBatchData, tuple(uint64 batchNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 bootloaderHeapInitialContentsHash, bytes32 eventsQueueStateHash, bytes systemLogs, bytes pubdataCommitments)[] _newBatchesData)",
      "function executeBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _batchesData)",
      "function getName() view returns (string)",
      "function proveBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _prevBatch, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _committedBatches, tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof) _proof)",
      "function revertBatches(uint256 _newLastBatch)"
    ]
  }
}
