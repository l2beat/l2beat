{
  "name": "zksync2",
  "chain": "ethereum",
  "blockNumber": 18184302,
  "configHash": "0x627a0258043ca5b596fa864a6d69bdf9d0aa5e4517f11743cfaa5ea98d9e9b64",
  "version": 2,
  "contracts": [
    {
      "name": "zkSync",
      "address": "0x32400084C286CF3E17e7B677ea9583e60a000324",
      "upgradeability": {
        "type": "EIP2535 diamond proxy",
        "facets": [
          "0xdC7c3D03845EfE2c4a9E758A70a68BA6bba9FaC4",
          "0x7444DE636699F080cA1C033528D2bB3705B391Ce",
          "0x62aA95ac4740A367746A664C4C69034d52E968EF",
          "0x7Ed066718Dfb1b2B04D94780Eca92b67ECF3330b",
          "0x2E64926BE35412f7710A3E097Ba076740bF97CC0"
        ]
      },
      "values": {
        "facetAddresses": [
          "0xdC7c3D03845EfE2c4a9E758A70a68BA6bba9FaC4",
          "0x7444DE636699F080cA1C033528D2bB3705B391Ce",
          "0x62aA95ac4740A367746A664C4C69034d52E968EF",
          "0x7Ed066718Dfb1b2B04D94780Eca92b67ECF3330b",
          "0x2E64926BE35412f7710A3E097Ba076740bF97CC0"
        ],
        "facets": [
          [
            "0xdC7c3D03845EfE2c4a9E758A70a68BA6bba9FaC4",
            [
              "0x73fb9297",
              "0x36d4eb84",
              "0x27ae4c16",
              "0x0551448c",
              "0x8043760a",
              "0xbeda4b12",
              "0x17338945",
              "0x587809c7"
            ]
          ],
          [
            "0x7444DE636699F080cA1C033528D2bB3705B391Ce",
            [
              "0xcdffacc6",
              "0x52ef6b2c",
              "0xadfca15e",
              "0x7a0ed627",
              "0xa7cd63b7",
              "0xfe10226d",
              "0x79823c9a",
              "0x4fc07d75",
              "0xd86970d8",
              "0xfd791f3c",
              "0x9d1b5a81",
              "0x7b30c8da",
              "0x8665b150",
              "0x631f4bac",
              "0x0ec6b0b7",
              "0x1b60e626",
              "0xe39d3bff",
              "0x33ce93fe",
              "0x0ef240a0",
              "0xfe26699e",
              "0x39607382",
              "0xaf6a2dcd",
              "0xa1954fc5",
              "0xa39980a0",
              "0x46657fe9",
              "0x18e3a941",
              "0x3db920ce",
              "0x29b98c67",
              "0xbd7c5412",
              "0xc3bbd2d7",
              "0xe81e0ba1",
              "0xfacd743b",
              "0x9cd939e4",
              "0x56142d7a",
              "0x74f4d30d"
            ]
          ],
          [
            "0x62aA95ac4740A367746A664C4C69034d52E968EF",
            [
              "0x6c0960f9",
              "0xb473318e",
              "0x042901c7",
              "0x263b7f8e",
              "0xe4948f43",
              "0xeb672419"
            ]
          ],
          [
            "0x7Ed066718Dfb1b2B04D94780Eca92b67ECF3330b",
            ["0x0c4dd810", "0xce9dcf16", "0x7739cbe7", "0xa9a2d18a"]
          ],
          [
            "0x2E64926BE35412f7710A3E097Ba076740bF97CC0",
            [
              "0xe58bb639",
              "0xf235757f",
              "0x1cc5d103",
              "0xbe6f11cf",
              "0x4623c91d"
            ]
          ]
        ],
        "getAllowList": "0x8ffd57A9B2dcc10327768b601468FA192adC5C86",
        "getCurrentProposalId": 8,
        "getFirstUnprocessedPriorityTx": 2269445,
        "getGovernor": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
        "getL2BootloaderBytecodeHash": "0x0100089b8a2f2e6a20ba28f02c9e0ed0c13d702932364561a0ea61621f65f0a8",
        "getL2DefaultAccountBytecodeHash": "0x0100067d16a5485875b4249040bf421f53e869337fe118ec747cf40a4c777e5f",
        "getL2SystemContractsUpgradeBlockNumber": 0,
        "getL2SystemContractsUpgradeTxHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getPendingGovernor": "0x0000000000000000000000000000000000000000",
        "getPriorityQueueSize": 9743,
        "getPriorityTxMaxGasLimit": 72000000,
        "getProposedUpgradeHash": "0x7d39289c3d9fd4fd8d86ed97abcdcfe208677042a65de6cccb91dc97e2936be9",
        "getProposedUpgradeTimestamp": 1695294167,
        "getProtocolVersion": 14,
        "getSecurityCouncil": "0x0000000000000000000000000000000000000000",
        "getTotalBlocksCommitted": 226551,
        "getTotalBlocksExecuted": 224865,
        "getTotalBlocksVerified": 225420,
        "getTotalPriorityTxs": 2279188,
        "getUpgradeProposalState": 1,
        "getVerifier": "0x3F04F86f14aB74953fDAEde8175e0714eB8e798e",
        "getVerifierParams": [
          "0x1186ec268d49f1905f8d9c1e9d39fc33e98c74f91d91a21b8f7ef78bd09a8db8",
          "0x101e08b00193e529145ee09823378ef51a3bc8966504064f1f6ba3f1ba863210",
          "0x0a3657f884af32d3a573c5fdb3440c9ac45271ede8c982faeaae7434d032ab3e"
        ],
        "isApprovedBySecurityCouncil": false,
        "isDiamondStorageFrozen": false,
        "priorityQueueFrontOperation": [
          "0x0d93abe8f47250f9db5d55b59ab985c19415c4a603b887f6ac3f2e3286978bec",
          1695221243,
          0
        ],
        "validators": ["0x3dB52cE065f728011Ac6732222270b3F2360d919"]
      },
      "derivedName": "DiamondProxy"
    },
    {
      "name": "ValidatorTimelock",
      "address": "0x3dB52cE065f728011Ac6732222270b3F2360d919",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "executionDelay": 75600,
        "owner": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "validator": "0x3527439923a63F8C13CF72b8Fe80a77f6e572092",
        "zkSyncContract": "0x32400084C286CF3E17e7B677ea9583e60a000324"
      },
      "derivedName": "ValidatorTimelock"
    },
    {
      "name": "Verifier",
      "address": "0x3F04F86f14aB74953fDAEde8175e0714eB8e798e",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "get_verification_key": [
          67108864,
          1,
          [
            "13446667982376394161563610564587413125564757801019538732601045199901075958935"
          ],
          [
            [
              "18521199778233464058441345797875994300579445309857616270068093819065883090109",
              "6204046810010391805002568401073351462861581534216530845947773547776951520773"
            ],
            [
              "9138917269230693704924165774215927631566598728551070912722023888354577427646",
              "18999933125943033262100317328198548414270835815508452422121731595305352632881"
            ]
          ],
          [
            [
              "9389976645335817974600254848490982357261475693770108343377418649413785545255",
              "21430933478240265270619523464449984529620038990004037000657297130601369943105"
            ],
            [
              "14946399697904679552259733001241440766910203436451820373008101487723530054284",
              "2602639529130716536095858797888370038002188100065607953054802508973410600753"
            ],
            [
              "18920842852942832240365875512769281924356892966542020206469502979359589700764",
              "140331972652276904261295805381189184726855141781161846826167019229719293799"
            ],
            [
              "3083724502293981007909362457813377345254691631777952307050399180789678448730",
              "15781869154188940690386716419661892979678976275408343472769728909605128803830"
            ],
            [
              "17771655583589308229884953648614760666643144591080494225561937329230268827691",
              "9932741288717386497095916630628986755956474837051196553792419651824755935846"
            ],
            [
              "5267384907800955232943314359800882999438647242071028603259044515016501829191",
              "3224220482738825566001187962265714378212080429839762540073960876336111095951"
            ],
            [
              "21075694667720293307707430670895710151216708132815519119411719383555504997507",
              "9650198005169929639329999976567272043948472094159090347990723091674654640984"
            ],
            [
              "4137221371299132785041700032199288298051847912401430443317344133410040320635",
              "19580662014676489709953531485884792269870770471116798791394080697119978890087"
            ]
          ],
          [
            [
              "9109825583907074661957961510925242199170665726335501361782987268395501270201",
              "6780808451226194332466834744550352509679806768854129441387495059713398867684"
            ],
            [
              "6606869739731973141805363556147754433457617266150994234883970457551919967397",
              "14424313850812816332898217761937684515563979501688586057229960610249978649173"
            ],
            [
              "17105999584874810826355159065477449563741543096063214190214121165138408057262",
              "3851071843960173338630671341221947991228342081516420546074437366529504843432"
            ],
            [
              "21369783417420496113280007113642222518167015027163479334299249131309783420760",
              "10651970989795646339741186878772121764821489582030210433689287146905936178316"
            ]
          ],
          [
            "14250161141147778838209929682572852630136831758806558190188392047799723650864",
            "11501007861939694619049134168234471188274786153104138781173757641602009804514"
          ],
          [
            [
              "6668176709204780318831228289292561573381906923895007894241817412739819253052",
              "8429852198767744735038019516126265305201248379491287082531292991584154308107"
            ],
            [
              "12433889228275381870700929211500459064515680630192745428635030708045356547065",
              "20045005043995659084408606933738964885314786167807303533095589280258879292618"
            ],
            [
              "552051612712391943824412220760315869358198510906558907063042687643425520708",
              "17463392914531947928024669493971089938504106917882207673346504991448893425509"
            ],
            [
              "12261747153911989546900109691306309393995885629749684675580116806429001135918",
              "2481652619177724242439499181286868225444023330901896449394232998340734118926"
            ]
          ],
          [
            "21495234856012943728765060935116788951593676607014718181245040095123326637411",
            "3869601732574151841157561239867186137083671673160935496396782052886536562540"
          ],
          [[5], [7], [10]],
          [
            [
              [
                "11559732032986387107991004021392285783925812861821192530917403151452391805634",
                "10857046999023057135944570762232829481370756359578518086990519993285655852781"
              ],
              [
                "4082367875863433681332203403145435568316851327593401208105741076214120093531",
                "8495653923123431417604973247489272438418190587263600148770280649306958101930"
              ]
            ],
            [
              [
                "17212635814319756364507010169094758005397460366678210664966334781961899574209",
                "496075682290949347282619629729389528669750910289829251317610107342504362928"
              ],
              [
                "2255182984359105691812395885056400739448730162863181907784180250290003009508",
                "15828724851114720558251891430452666121603726704878231219287131634746610441813"
              ]
            ]
          ]
        ]
      }
    },
    {
      "name": "zkSync Era Multisig",
      "address": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0xd3e32b4e9e95656dc35c609ae0fbcc0cea466ebecc8227025a2d3edc728b79fb",
        "getChainId": 1,
        "getOwners": [
          "0x3F0009D00cc78979d00Eb635490F23E8d6aCc481",
          "0xe79af29d618141Ffef951B240b250d47030D56d7",
          "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
          "0x84298D79ad2CD4eC0d9Ca1959F9d9f40Bc07152f",
          "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
          "0x9dF8bc0918F357c766A5697E031fF5237c05747A",
          "0x1567AC0764142e91aB0A9C65C568f0DbE9E168BF",
          "0xa265146cA40F52cfC439888D0b4291b5440e6769"
        ],
        "getThreshold": 4,
        "nonce": 69,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "L1ERC20Bridge",
      "address": "0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x7FB17101A744e156e63d5fF6A4775fb48756577c",
        "admin": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828"
      },
      "values": {
        "l2Bridge": "0x11f943b2c77b743AB90f4A0Ae7d5A4e7FCA3E102",
        "l2TokenBeacon": "0x1Eb710030273e529A6aD7E1e14D4e601765Ba3c6",
        "l2TokenProxyBytecodeHash": "0x01000121a363b3fbec270986067c1b553bf540c30a6f186f45313133ff1a1019"
      },
      "derivedName": "L1ERC20Bridge"
    },
    {
      "name": "AllowList",
      "address": "0x8ffd57A9B2dcc10327768b601468FA192adC5C86",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      }
    }
  ],
  "eoas": [
    "0x1567AC0764142e91aB0A9C65C568f0DbE9E168BF",
    "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
    "0x3527439923a63F8C13CF72b8Fe80a77f6e572092",
    "0x3F0009D00cc78979d00Eb635490F23E8d6aCc481",
    "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
    "0x84298D79ad2CD4eC0d9Ca1959F9d9f40Bc07152f",
    "0x9dF8bc0918F357c766A5697E031fF5237c05747A",
    "0xa265146cA40F52cfC439888D0b4291b5440e6769",
    "0xe79af29d618141Ffef951B240b250d47030D56d7"
  ],
  "abis": {
    "0x2E64926BE35412f7710A3E097Ba076740bF97CC0": [
      "event IsPorterAvailableStatusUpdate(bool isPorterAvailable)",
      "event NewGovernor(address indexed oldGovernor, address indexed newGovernor)",
      "event NewPendingGovernor(address indexed oldPendingGovernor, address indexed newPendingGovernor)",
      "event NewPriorityTxMaxGasLimit(uint256 oldPriorityTxMaxGasLimit, uint256 newPriorityTxMaxGasLimit)",
      "event ValidatorStatusUpdate(address indexed validatorAddress, bool isActive)",
      "function acceptGovernor()",
      "function getName() view returns (string)",
      "function setPendingGovernor(address _newPendingGovernor)",
      "function setPorterAvailability(bool _zkPorterIsAvailable)",
      "function setPriorityTxMaxGasLimit(uint256 _newPriorityTxMaxGasLimit)",
      "function setValidator(address _validator, bool _active)"
    ],
    "0x32400084C286CF3E17e7B677ea9583e60a000324": [
      "constructor(uint256 _chainId, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)"
    ],
    "0x3dB52cE065f728011Ac6732222270b3F2360d919": [
      "constructor(address _initialOwner, address _zkSyncContract, uint256 _executionDelay, address _validator)",
      "event BlockCommit(uint256 indexed blockNumber, bytes32 indexed blockHash, bytes32 indexed commitment)",
      "event BlockExecution(uint256 indexed blockNumber, bytes32 indexed blockHash, bytes32 indexed commitment)",
      "event BlocksRevert(uint256 totalBlocksCommitted, uint256 totalBlocksVerified, uint256 totalBlocksExecuted)",
      "event BlocksVerification(uint256 indexed previousLastVerifiedBlock, uint256 indexed currentLastVerifiedBlock)",
      "event NewExecutionDelay(uint256 _newExecutionDelay)",
      "event NewValidator(address _oldValidator, address _newValidator)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function acceptOwnership()",
      "function commitBlocks(tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 blockNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 l2LogsTreeRoot, bytes32 priorityOperationsHash, bytes initialStorageChanges, bytes repeatedStorageChanges, bytes l2Logs, bytes[] l2ArbitraryLengthMessages, bytes[] factoryDeps)[] _newBlocksData)",
      "function committedBlockTimestamp(uint256) view returns (uint256)",
      "function executeBlocks(tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _newBlocksData)",
      "function executionDelay() view returns (uint256)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function proveBlocks(tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[], tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof))",
      "function renounceOwnership()",
      "function revertBlocks(uint256)",
      "function setExecutionDelay(uint256 _executionDelay)",
      "function setValidator(address _newValidator)",
      "function transferOwnership(address newOwner)",
      "function validator() view returns (address)",
      "function zkSyncContract() view returns (address)"
    ],
    "0x3F04F86f14aB74953fDAEde8175e0714eB8e798e": [
      "function compute_powers_of_alpha(tuple(tuple(uint256 value) zero, tuple(uint256 value) alpha, tuple(uint256 value) beta, tuple(uint256 value) gamma, tuple(uint256 value)[9] alpha_values, tuple(uint256 value) eta, tuple(uint256 value) beta_lookup, tuple(uint256 value) gamma_lookup, tuple(uint256 value) beta_plus_one, tuple(uint256 value) beta_gamma, tuple(uint256 value) v, tuple(uint256 value) u, tuple(uint256 value) z, tuple(uint256 value) z_omega, tuple(uint256 value) z_minus_last_omega, tuple(uint256 value) l_0_at_z, tuple(uint256 value) l_n_minus_one_at_z, tuple(uint256 value) t, tuple(uint256 X, uint256 Y) tp) state) pure",
      "function get_verification_key() pure returns (tuple(uint256 domain_size, uint256 num_inputs, tuple(uint256 value) omega, tuple(uint256 X, uint256 Y)[2] gate_selectors_commitments, tuple(uint256 X, uint256 Y)[8] gate_setup_commitments, tuple(uint256 X, uint256 Y)[4] permutation_commitments, tuple(uint256 X, uint256 Y) lookup_selector_commitment, tuple(uint256 X, uint256 Y)[4] lookup_tables_commitments, tuple(uint256 X, uint256 Y) lookup_table_type_commitment, tuple(uint256 value)[3] non_residues, tuple(uint256[2] X, uint256[2] Y)[2] g2_elements) vk)",
      "function prepare_queries(tuple(uint256 domain_size, uint256 num_inputs, tuple(uint256 value) omega, tuple(uint256 X, uint256 Y)[2] gate_selectors_commitments, tuple(uint256 X, uint256 Y)[8] gate_setup_commitments, tuple(uint256 X, uint256 Y)[4] permutation_commitments, tuple(uint256 X, uint256 Y) lookup_selector_commitment, tuple(uint256 X, uint256 Y)[4] lookup_tables_commitments, tuple(uint256 X, uint256 Y) lookup_table_type_commitment, tuple(uint256 value)[3] non_residues, tuple(uint256[2] X, uint256[2] Y)[2] g2_elements) vk, tuple(uint256[] input_values, tuple(uint256 X, uint256 Y)[4] state_polys_commitments, tuple(uint256 X, uint256 Y) copy_permutation_grand_product_commitment, tuple(uint256 X, uint256 Y)[4] quotient_poly_parts_commitments, tuple(uint256 value)[4] state_polys_openings_at_z, tuple(uint256 value)[1] state_polys_openings_at_z_omega, tuple(uint256 value)[1] gate_selectors_openings_at_z, tuple(uint256 value)[3] copy_permutation_polys_openings_at_z, tuple(uint256 value) copy_permutation_grand_product_opening_at_z_omega, tuple(uint256 value) quotient_poly_opening_at_z, tuple(uint256 value) linearization_poly_opening_at_z, tuple(uint256 X, uint256 Y) lookup_s_poly_commitment, tuple(uint256 X, uint256 Y) lookup_grand_product_commitment, tuple(uint256 value) lookup_s_poly_opening_at_z_omega, tuple(uint256 value) lookup_grand_product_opening_at_z_omega, tuple(uint256 value) lookup_t_poly_opening_at_z, tuple(uint256 value) lookup_t_poly_opening_at_z_omega, tuple(uint256 value) lookup_selector_poly_opening_at_z, tuple(uint256 value) lookup_table_type_poly_opening_at_z, tuple(uint256 X, uint256 Y) opening_proof_at_z, tuple(uint256 X, uint256 Y) opening_proof_at_z_omega) proof, tuple(tuple(uint256 value) zero, tuple(uint256 value) alpha, tuple(uint256 value) beta, tuple(uint256 value) gamma, tuple(uint256 value)[9] alpha_values, tuple(uint256 value) eta, tuple(uint256 value) beta_lookup, tuple(uint256 value) gamma_lookup, tuple(uint256 value) beta_plus_one, tuple(uint256 value) beta_gamma, tuple(uint256 value) v, tuple(uint256 value) u, tuple(uint256 value) z, tuple(uint256 value) z_omega, tuple(uint256 value) z_minus_last_omega, tuple(uint256 value) l_0_at_z, tuple(uint256 value) l_n_minus_one_at_z, tuple(uint256 value) t, tuple(uint256 X, uint256 Y) tp) state) view returns (tuple(tuple(uint256 X, uint256 Y)[13] commitments_at_z, tuple(uint256 value)[13] values_at_z, tuple(uint256 X, uint256 Y)[6] commitments_at_z_omega, tuple(uint256 value)[6] values_at_z_omega) queries)",
      "function rescue_custom_gate_linearization_contribution(tuple(uint256 domain_size, uint256 num_inputs, tuple(uint256 value) omega, tuple(uint256 X, uint256 Y)[2] gate_selectors_commitments, tuple(uint256 X, uint256 Y)[8] gate_setup_commitments, tuple(uint256 X, uint256 Y)[4] permutation_commitments, tuple(uint256 X, uint256 Y) lookup_selector_commitment, tuple(uint256 X, uint256 Y)[4] lookup_tables_commitments, tuple(uint256 X, uint256 Y) lookup_table_type_commitment, tuple(uint256 value)[3] non_residues, tuple(uint256[2] X, uint256[2] Y)[2] g2_elements) vk, tuple(uint256[] input_values, tuple(uint256 X, uint256 Y)[4] state_polys_commitments, tuple(uint256 X, uint256 Y) copy_permutation_grand_product_commitment, tuple(uint256 X, uint256 Y)[4] quotient_poly_parts_commitments, tuple(uint256 value)[4] state_polys_openings_at_z, tuple(uint256 value)[1] state_polys_openings_at_z_omega, tuple(uint256 value)[1] gate_selectors_openings_at_z, tuple(uint256 value)[3] copy_permutation_polys_openings_at_z, tuple(uint256 value) copy_permutation_grand_product_opening_at_z_omega, tuple(uint256 value) quotient_poly_opening_at_z, tuple(uint256 value) linearization_poly_opening_at_z, tuple(uint256 X, uint256 Y) lookup_s_poly_commitment, tuple(uint256 X, uint256 Y) lookup_grand_product_commitment, tuple(uint256 value) lookup_s_poly_opening_at_z_omega, tuple(uint256 value) lookup_grand_product_opening_at_z_omega, tuple(uint256 value) lookup_t_poly_opening_at_z, tuple(uint256 value) lookup_t_poly_opening_at_z_omega, tuple(uint256 value) lookup_selector_poly_opening_at_z, tuple(uint256 value) lookup_table_type_poly_opening_at_z, tuple(uint256 X, uint256 Y) opening_proof_at_z, tuple(uint256 X, uint256 Y) opening_proof_at_z_omega) proof, tuple(tuple(uint256 value) zero, tuple(uint256 value) alpha, tuple(uint256 value) beta, tuple(uint256 value) gamma, tuple(uint256 value)[9] alpha_values, tuple(uint256 value) eta, tuple(uint256 value) beta_lookup, tuple(uint256 value) gamma_lookup, tuple(uint256 value) beta_plus_one, tuple(uint256 value) beta_gamma, tuple(uint256 value) v, tuple(uint256 value) u, tuple(uint256 value) z, tuple(uint256 value) z_omega, tuple(uint256 value) z_minus_last_omega, tuple(uint256 value) l_0_at_z, tuple(uint256 value) l_n_minus_one_at_z, tuple(uint256 value) t, tuple(uint256 X, uint256 Y) tp) state) view returns (tuple(uint256 X, uint256 Y) result)",
      "function verify_serialized_proof(uint256[] public_inputs, uint256[] serialized_proof) view returns (bool)"
    ],
    "0x4e4943346848c4867F81dFb37c4cA9C5715A7828": [
      "constructor(address _singleton)"
    ],
    "0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x62aA95ac4740A367746A664C4C69034d52E968EF": [
      "event EthWithdrawalFinalized(address indexed to, uint256 amount)",
      "event NewPriorityRequest(uint256 txId, bytes32 txHash, uint64 expirationTimestamp, tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) transaction, bytes[] factoryDeps)",
      "function finalizeEthWithdrawal(uint256 _l2BlockNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBlock, bytes _message, bytes32[] _merkleProof)",
      "function getName() view returns (string)",
      "function l2TransactionBaseCost(uint256 _gasPrice, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit) pure returns (uint256)",
      "function proveL1ToL2TransactionStatus(bytes32 _l2TxHash, uint256 _l2BlockNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBlock, bytes32[] _merkleProof, uint8 _status) view returns (bool)",
      "function proveL2LogInclusion(uint256 _blockNumber, uint256 _index, tuple(uint8 l2ShardId, bool isService, uint16 txNumberInBlock, address sender, bytes32 key, bytes32 value) _log, bytes32[] _proof) view returns (bool)",
      "function proveL2MessageInclusion(uint256 _blockNumber, uint256 _index, tuple(uint16 txNumberInBlock, address sender, bytes data) _message, bytes32[] _proof) view returns (bool)",
      "function requestL2Transaction(address _contractL2, uint256 _l2Value, bytes _calldata, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit, bytes[] _factoryDeps, address _refundRecipient) payable returns (bytes32 canonicalTxHash)"
    ],
    "0x7444DE636699F080cA1C033528D2bB3705B391Ce": [
      "function facetAddress(bytes4 _selector) view returns (address)",
      "function facetAddresses() view returns (address[])",
      "function facetFunctionSelectors(address _facet) view returns (bytes4[])",
      "function facets() view returns (tuple(address addr, bytes4[] selectors)[] result)",
      "function getAllowList() view returns (address)",
      "function getCurrentProposalId() view returns (uint256)",
      "function getFirstUnprocessedPriorityTx() view returns (uint256)",
      "function getGovernor() view returns (address)",
      "function getL2BootloaderBytecodeHash() view returns (bytes32)",
      "function getL2DefaultAccountBytecodeHash() view returns (bytes32)",
      "function getL2SystemContractsUpgradeBlockNumber() view returns (uint256)",
      "function getL2SystemContractsUpgradeTxHash() view returns (bytes32)",
      "function getName() view returns (string)",
      "function getPendingGovernor() view returns (address)",
      "function getPriorityQueueSize() view returns (uint256)",
      "function getPriorityTxMaxGasLimit() view returns (uint256)",
      "function getProposedUpgradeHash() view returns (bytes32)",
      "function getProposedUpgradeTimestamp() view returns (uint256)",
      "function getProtocolVersion() view returns (uint256)",
      "function getSecurityCouncil() view returns (address)",
      "function getTotalBlocksCommitted() view returns (uint256)",
      "function getTotalBlocksExecuted() view returns (uint256)",
      "function getTotalBlocksVerified() view returns (uint256)",
      "function getTotalPriorityTxs() view returns (uint256)",
      "function getUpgradeProposalState() view returns (uint8)",
      "function getVerifier() view returns (address)",
      "function getVerifierParams() view returns (tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash))",
      "function isApprovedBySecurityCouncil() view returns (bool)",
      "function isDiamondStorageFrozen() view returns (bool)",
      "function isEthWithdrawalFinalized(uint256 _l2BlockNumber, uint256 _l2MessageIndex) view returns (bool)",
      "function isFacetFreezable(address _facet) view returns (bool isFreezable)",
      "function isFunctionFreezable(bytes4 _selector) view returns (bool)",
      "function isValidator(address _address) view returns (bool)",
      "function l2LogsRootHash(uint256 _blockNumber) view returns (bytes32)",
      "function priorityQueueFrontOperation() view returns (tuple(bytes32 canonicalTxHash, uint64 expirationTimestamp, uint192 layer2Tip))",
      "function storedBlockHash(uint256 _blockNumber) view returns (bytes32)"
    ],
    "0x7Ed066718Dfb1b2B04D94780Eca92b67ECF3330b": [
      "event BlockCommit(uint256 indexed blockNumber, bytes32 indexed blockHash, bytes32 indexed commitment)",
      "event BlockExecution(uint256 indexed blockNumber, bytes32 indexed blockHash, bytes32 indexed commitment)",
      "event BlocksRevert(uint256 totalBlocksCommitted, uint256 totalBlocksVerified, uint256 totalBlocksExecuted)",
      "event BlocksVerification(uint256 indexed previousLastVerifiedBlock, uint256 indexed currentLastVerifiedBlock)",
      "function commitBlocks(tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _lastCommittedBlockData, tuple(uint64 blockNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 l2LogsTreeRoot, bytes32 priorityOperationsHash, bytes initialStorageChanges, bytes repeatedStorageChanges, bytes l2Logs, bytes[] l2ArbitraryLengthMessages, bytes[] factoryDeps)[] _newBlocksData)",
      "function executeBlocks(tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _blocksData)",
      "function getName() view returns (string)",
      "function proveBlocks(tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _prevBlock, tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _committedBlocks, tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof) _proof)",
      "function revertBlocks(uint256 _newLastBlock)"
    ],
    "0x7FB17101A744e156e63d5fF6A4775fb48756577c": [
      "constructor(address _zkSync, address _allowList)",
      "event ClaimedFailedDeposit(address indexed to, address indexed l1Token, uint256 amount)",
      "event DepositInitiated(bytes32 indexed l2DepositTxHash, address indexed from, address indexed to, address l1Token, uint256 amount)",
      "event WithdrawalFinalized(address indexed to, address indexed l1Token, uint256 amount)",
      "function __DEPRECATED_lastWithdrawalLimitReset(address) view returns (uint256)",
      "function __DEPRECATED_withdrawnAmountInWindow(address) view returns (uint256)",
      "function claimFailedDeposit(address _depositSender, address _l1Token, bytes32 _l2TxHash, uint256 _l2BlockNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBlock, bytes32[] _merkleProof)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte) payable returns (bytes32 l2TxHash)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte, address _refundRecipient) payable returns (bytes32 l2TxHash)",
      "function finalizeWithdrawal(uint256 _l2BlockNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBlock, bytes _message, bytes32[] _merkleProof)",
      "function initialize(bytes[] _factoryDeps, address _l2TokenBeacon, address _governor, uint256 _deployBridgeImplementationFee, uint256 _deployBridgeProxyFee) payable",
      "function isWithdrawalFinalized(uint256, uint256) view returns (bool)",
      "function l2Bridge() view returns (address)",
      "function l2TokenAddress(address _l1Token) view returns (address)",
      "function l2TokenBeacon() view returns (address)",
      "function l2TokenProxyBytecodeHash() view returns (bytes32)",
      "function totalDepositedAmountPerUser(address, address) view returns (uint256)"
    ],
    "0x8ffd57A9B2dcc10327768b601468FA192adC5C86": [
      "constructor(address _initialOwner)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event UpdateAccessMode(address indexed target, uint8 previousMode, uint8 newMode)",
      "event UpdateCallPermission(address indexed caller, address indexed target, bytes4 indexed functionSig, bool status)",
      "function acceptOwnership()",
      "function canCall(address _caller, address _target, bytes4 _functionSig) view returns (bool)",
      "function getAccessMode(address) view returns (uint8)",
      "function getTokenDepositLimitData(address _l1Token) view returns (tuple(bool depositLimitation, uint256 depositCap))",
      "function hasSpecialAccessToCall(address, address, bytes4) view returns (bool)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setAccessMode(address _target, uint8 _accessMode)",
      "function setBatchAccessMode(address[] _targets, uint8[] _accessModes)",
      "function setBatchPermissionToCall(address[] _callers, address[] _targets, bytes4[] _functionSigs, bool[] _enables)",
      "function setDepositLimit(address _l1Token, bool _depositLimitation, uint256 _depositCap)",
      "function setPermissionToCall(address _caller, address _target, bytes4 _functionSig, bool _enable)",
      "function tokenDeposit(address) view returns (bool depositLimitation, uint256 depositCap)",
      "function transferOwnership(address newOwner)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdC7c3D03845EfE2c4a9E758A70a68BA6bba9FaC4": [
      "event CancelUpgradeProposal(uint256 indexed proposalId, bytes32 indexed proposalHash)",
      "event ExecuteUpgrade(uint256 indexed proposalId, bytes32 indexed proposalHash, bytes32 proposalSalt)",
      "event Freeze()",
      "event ProposeShadowUpgrade(uint256 indexed proposalId, bytes32 indexed proposalHash)",
      "event ProposeTransparentUpgrade(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCut, uint256 indexed proposalId, bytes32 proposalSalt)",
      "event SecurityCouncilUpgradeApprove(uint256 indexed proposalId, bytes32 indexed proposalHash)",
      "event Unfreeze()",
      "function cancelUpgradeProposal(bytes32 _proposedUpgradeHash)",
      "function executeUpgrade(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut, bytes32 _proposalSalt)",
      "function freezeDiamond()",
      "function getName() view returns (string)",
      "function proposeShadowUpgrade(bytes32 _proposalHash, uint40 _proposalId)",
      "function proposeTransparentUpgrade(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut, uint40 _proposalId)",
      "function securityCouncilUpgradeApprove(bytes32 _upgradeProposalHash)",
      "function unfreezeDiamond()",
      "function upgradeProposalHash(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut, uint256 _proposalId, bytes32 _salt) pure returns (bytes32)"
    ]
  }
}
