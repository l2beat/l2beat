{
  "name": "zksync2",
  "chain": "ethereum",
  "blockNumber": 20061811,
  "configHash": "0xe49d3b0cd6b5050b2f2e9a1b0b7488acbc7fa50c887152525fc359af317d3c66",
  "version": 6,
  "contracts": [
    {
      "name": "Governance",
      "address": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701258227,
      "values": {
        "minDelay": 0,
        "owner": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "securityCouncil": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "Governance"
    },
    {
      "name": "BridgeHub",
      "address": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x12f893689f9603991a8c22C249FFd0509Be95661",
        "admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"
      },
      "implementations": ["0x12f893689f9603991a8c22C249FFd0509Be95661"],
      "sinceTimestamp": 1717520639,
      "values": {
        "admin": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
        "chainsCreated": [
          {
            "chainId": 324,
            "stateTransitionManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x71d84c3404a6ae258E6471d4934B96a2033F9438"
          }
        ],
        "getHyperchain": [],
        "owner": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "sharedBridge": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
        "zksyncEraDiamond": "0x32400084C286CF3E17e7B677ea9583e60a000324",
        "zksyncEraSTM": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C"
      },
      "derivedName": "Bridgehub"
    },
    {
      "name": "ZKsync",
      "address": "0x32400084C286CF3E17e7B677ea9583e60a000324",
      "ignoreInWatchMode": [
        "getPriorityQueueSize",
        "getTotalBlocksCommitted",
        "getTotalBlocksExecuted",
        "getTotalBlocksVerified",
        "getTotalBatchesExecuted",
        "getTotalBatchesVerified",
        "getTotalBatchesCommitted",
        "getTotalPriorityTxs",
        "priorityQueueFrontOperation",
        "getFirstUnprocessedPriorityTx"
      ],
      "upgradeability": {
        "type": "EIP2535 diamond proxy",
        "facets": [
          "0xF6F26b416CE7AE5e5FE224Be332C7aE4e1f3450a",
          "0xE60E94fCCb18a81D501a38959E532C0A85A1be89",
          "0xCDB6228b616EEf8Df47D69A372C4f725C43e718C",
          "0xaD193aDe635576d8e9f7ada71Af2137b16c64075"
        ]
      },
      "implementations": [
        "0xF6F26b416CE7AE5e5FE224Be332C7aE4e1f3450a",
        "0xE60E94fCCb18a81D501a38959E532C0A85A1be89",
        "0xCDB6228b616EEf8Df47D69A372C4f725C43e718C",
        "0xaD193aDe635576d8e9f7ada71Af2137b16c64075"
      ],
      "sinceTimestamp": 1676315375,
      "values": {
        "baseTokenGasPriceMultiplierDenominator": 1,
        "baseTokenGasPriceMultiplierNominator": 1,
        "facetAddresses": [
          "0xF6F26b416CE7AE5e5FE224Be332C7aE4e1f3450a",
          "0xE60E94fCCb18a81D501a38959E532C0A85A1be89",
          "0xCDB6228b616EEf8Df47D69A372C4f725C43e718C",
          "0xaD193aDe635576d8e9f7ada71Af2137b16c64075"
        ],
        "facets": [
          {
            "addr": "0xF6F26b416CE7AE5e5FE224Be332C7aE4e1f3450a",
            "selectors": [
              "0x0e18b681",
              "0x64bf8d66",
              "0xa9f6d941",
              "0x27ae4c16",
              "0x4dd18bf5",
              "0x1cc5d103",
              "0xbe6f11cf",
              "0xe76db865",
              "0x235d9eb5",
              "0x21f603d7",
              "0x4623c91d",
              "0x17338945",
              "0xfc57565f"
            ]
          },
          {
            "addr": "0xE60E94fCCb18a81D501a38959E532C0A85A1be89",
            "selectors": [
              "0x1de72e34",
              "0xea6c029c",
              "0xcdffacc6",
              "0x52ef6b2c",
              "0xadfca15e",
              "0x7a0ed627",
              "0x6e9960c3",
              "0x98acd7a6",
              "0x086a56f8",
              "0x3591c1a0",
              "0x79823c9a",
              "0xd86970d8",
              "0xfd791f3c",
              "0xe5355c75",
              "0x9d1b5a81",
              "0x7b30c8da",
              "0xd0468156",
              "0x631f4bac",
              "0x0ec6b0b7",
              "0x33ce93fe",
              "0x06d49e5b",
              "0xf5c1182c",
              "0x5518c73b",
              "0xdb1f0bf9",
              "0xb8c2f66f",
              "0xef3f0bae",
              "0xfe26699e",
              "0x39607382",
              "0xaf6a2dcd",
              "0xa1954fc5",
              "0x46657fe9",
              "0x18e3a941",
              "0x29b98c67",
              "0xbd7c5412",
              "0xc3bbd2d7",
              "0xe81e0ba1",
              "0xfacd743b",
              "0x9cd939e4",
              "0x56142d7a",
              "0xb22dd78e",
              "0x74f4d30d"
            ]
          },
          {
            "addr": "0xCDB6228b616EEf8Df47D69A372C4f725C43e718C",
            "selectors": [
              "0x12f43dab",
              "0x6c0960f9",
              "0xb473318e",
              "0x042901c7",
              "0x263b7f8e",
              "0xe4948f43",
              "0xeb672419",
              "0xc924de35"
            ]
          },
          {
            "addr": "0xaD193aDe635576d8e9f7ada71Af2137b16c64075",
            "selectors": [
              "0x701f58c5",
              "0x6edd4f12",
              "0xc3d93e7c",
              "0x6f497ac6",
              "0x7f61885c",
              "0xc37533bb",
              "0x97c09d34",
              "0x0f23da43"
            ]
          }
        ],
        "getAdmin": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
        "getBaseToken": "0x0000000000000000000000000000000000000001",
        "getBaseTokenBridge": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
        "getBridgehub": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "getFirstUnprocessedPriorityTx": 3250788,
        "getL2BootloaderBytecodeHash": "0x010008e742608b21bf7eb23c1a9d0602047e3618b464c9b59c0fba3b3d7ab66e",
        "getL2DefaultAccountBytecodeHash": "0x01000563374c277a2c1e34659a2a1e87371bb6d852ce142022d497bfb50b9e32",
        "getL2SystemContractsUpgradeBatchNumber": 0,
        "getL2SystemContractsUpgradeBlockNumber": 0,
        "getL2SystemContractsUpgradeTxHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getPendingAdmin": "0x0000000000000000000000000000000000000000",
        "getPriorityQueueSize": 614,
        "getPriorityTxMaxGasLimit": 72000000,
        "getProtocolVersion": 103079215105,
        "getPubdataPricingMode": 0,
        "getSemverProtocolVersion": [0, 24, 1],
        "getStateTransitionManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
        "getTotalBatchesCommitted": 484967,
        "getTotalBatchesExecuted": 484806,
        "getTotalBatchesVerified": 484941,
        "getTotalBlocksCommitted": 484967,
        "getTotalBlocksExecuted": 484806,
        "getTotalBlocksVerified": 484941,
        "getTotalPriorityTxs": 3251402,
        "getVerifier": "0x70F3FBf8a427155185Ec90BED8a3434203de9604",
        "getVerifierParams": {
          "recursionNodeLevelVkHash": "0xf520cd5b37e74e19fdb369c8d676a04dce8a19457497ac6686d2bb95d94109c8",
          "recursionLeafLevelVkHash": "0xf9664f4324c1400fa5c3822d667f30e873f53f1b8033180cd15fe41c1e2355c6",
          "recursionCircuitsSetVksHash": "0x0000000000000000000000000000000000000000000000000000000000000000"
        },
        "isDiamondStorageFrozen": false,
        "priorityQueueFrontOperation": {
          "canonicalTxHash": "0xd6f952eb2531fb1a787b415c936d5a407757f1b9c68d7c992db2da59b211f9e8",
          "expirationTimestamp": 1717940195,
          "layer2Tip": 0
        },
        "txFilterer": [],
        "validators": ["0xa8CB082A5a689E0d594d7da1E2d72A3D63aDc1bD"]
      },
      "derivedName": "DiamondProxy"
    },
    {
      "name": "GenesisUpgrade",
      "address": "0x3dDD7ED2AeC0758310A4C6596522FCAeD108DdA2",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1717507355
    },
    {
      "name": "L1ERC20Bridge_wstETH",
      "address": "0x41527B2d03844dB6b0945f25702cB958b6d55989",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x9a810469F4a451Ebb7ef53672142053b4971587c",
        "admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"
      },
      "implementations": ["0x9a810469F4a451Ebb7ef53672142053b4971587c"],
      "sinceTimestamp": 1698065351,
      "values": {
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSITS_DISABLER_ROLE": "0x63f736f21cb2943826cd50b191eb054ebbea670e4e962d0527611f830cd399d6",
        "DEPOSITS_ENABLER_ROLE": "0x4b43b36766bde12c5e9cbbc37d15f8d1f769f08f54720ab370faeb4ce893753a",
        "isDepositsEnabled": true,
        "isInitialized": true,
        "isWithdrawalsEnabled": true,
        "l1Token": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
        "l2Bridge": "0xE1D6A50E7101c8f8db77352897Ee3f1AC53f782B",
        "l2Token": "0x703b52F2b28fEbcB60E1372858AF5b18849FE867",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0x9a810469F4a451Ebb7ef53672142053b4971587c",
        "proxy__getIsOssified": false,
        "WITHDRAWALS_DISABLER_ROLE": "0x94a954c0bc99227eddbc0715a62a7e1056ed8784cd719c2303b685683908857c",
        "WITHDRAWALS_ENABLER_ROLE": "0x9ab8816a3dc0b3849ec1ac00483f6ec815b07eee2fd766a353311c823ad59d0d",
        "zkSync": "0x32400084C286CF3E17e7B677ea9583e60a000324"
      },
      "derivedName": "L1ERC20Bridge"
    },
    {
      "name": "Matter Labs Multisig",
      "address": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
      "template": "GnosisSafe",
      "descriptions": [
        "Can instantly upgrade all contracts and roles in the zksync Era contracts"
      ],
      "ignoreInWatchMode": ["nonce"],
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "4 of 8 (50%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1666872275,
      "values": {
        "domainSeparator": "0xd3e32b4e9e95656dc35c609ae0fbcc0cea466ebecc8227025a2d3edc728b79fb",
        "getChainId": 1,
        "getOwners": [
          "0x3F0009D00cc78979d00Eb635490F23E8d6aCc481",
          "0xe79af29d618141Ffef951B240b250d47030D56d7",
          "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
          "0x84298D79ad2CD4eC0d9Ca1959F9d9f40Bc07152f",
          "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
          "0x9dF8bc0918F357c766A5697E031fF5237c05747A",
          "0x1567AC0764142e91aB0A9C65C568f0DbE9E168BF",
          "0x700DA14328eC2F81053E5B6aAE4803E16BEdF1df"
        ],
        "getThreshold": 4,
        "nonce": 139,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "L1ERC20Bridge",
      "address": "0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x8191975d8B0851C7f0740918896Cf298c09aA05E",
        "admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"
      },
      "implementations": ["0x8191975d8B0851C7f0740918896Cf298c09aA05E"],
      "sinceTimestamp": 1676370683,
      "values": {
        "l2Bridge": "0x11f943b2c77b743AB90f4A0Ae7d5A4e7FCA3E102",
        "l2TokenBeacon": "0x1Eb710030273e529A6aD7E1e14D4e601765Ba3c6",
        "l2TokenProxyBytecodeHash": "0x01000121a363b3fbec270986067c1b553bf540c30a6f186f45313133ff1a1019",
        "SHARED_BRIDGE": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB"
      },
      "derivedName": "L1ERC20Bridge"
    },
    {
      "name": "ValidatorTimelock",
      "address": "0x5D8ba173Dc6C3c90C8f7C04C9288BeF5FDbAd06E",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1717520615,
      "values": {
        "executionDelay": 75600,
        "getName": "ValidatorTimelock",
        "owner": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "revertedBlocks": [],
        "stateTransitionManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
        "validatorsAdded": [
          "0x0D3250c3D5FAcb74Ac15834096397a3Ef790ec99",
          "0x3527439923a63F8C13CF72b8Fe80a77f6e572092"
        ],
        "validatorsRemoved": []
      },
      "derivedName": "ValidatorTimelock"
    },
    {
      "name": "Verifier",
      "address": "0x70F3FBf8a427155185Ec90BED8a3434203de9604",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1717507391,
      "values": {
        "verificationKeyHash": "0x14f97b81e54b35fe673d8708cc1a19e1ea5b5e348e12d31e39824ed4f42bbca2"
      }
    },
    {
      "name": "ValidatorTimelock_deprecated",
      "address": "0xa8CB082A5a689E0d594d7da1E2d72A3D63aDc1bD",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1709850611,
      "values": {
        "constructorArgs": {
          "_initialOwner": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
          "_zkSyncContract": "0x32400084C286CF3E17e7B677ea9583e60a000324",
          "_executionDelay": 75600,
          "_validators": [
            "0x3527439923a63F8C13CF72b8Fe80a77f6e572092",
            "0x0D3250c3D5FAcb74Ac15834096397a3Ef790ec99"
          ]
        },
        "executionDelay": 75600,
        "getName": "ValidatorTimelock",
        "owner": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "revertedBlocks": [],
        "validatorsAdded": [],
        "validatorsRemoved": [],
        "zkSyncContract": "0x32400084C286CF3E17e7B677ea9583e60a000324"
      },
      "derivedName": "ValidatorTimelock"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1717520627,
      "values": {
        "owner": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61"
      }
    },
    {
      "name": "StateTransitionManager",
      "address": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x8279B7E48fA074f966385d87AEf29Bd031e54fD5",
        "admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"
      },
      "implementations": ["0x8279B7E48fA074f966385d87AEf29Bd031e54fD5"],
      "sinceTimestamp": 1717520663,
      "values": {
        "admin": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "genesisUpgrade": "0x3dDD7ED2AeC0758310A4C6596522FCAeD108DdA2",
        "getAllHyperchainChainIDs": [324],
        "getAllHyperchains": ["0x32400084C286CF3E17e7B677ea9583e60a000324"],
        "getChainAdmin": [],
        "getSemverProtocolVersion": [0, 24, 1],
        "initialCutHash": "0xf267ae1a526fef4f09da470ec30963dbba540314012bcfac298723bde5de6ea1",
        "MAX_NUMBER_OF_HYPERCHAINS": 100,
        "owner": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "protocolVersion": 103079215105,
        "storedBatchZero": "0x1574fa776dec8da2071e5f20d71840bfcbd82c2bca9ad68680edfedde1710bc4",
        "validatorTimelock": "0x5D8ba173Dc6C3c90C8f7C04C9288BeF5FDbAd06E"
      },
      "derivedName": "StateTransitionManager"
    },
    {
      "name": "L1SharedBridge",
      "address": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xCba1aF8f0bB223b2544F8eB8f69d1c7960f788dB",
        "admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1"
      },
      "implementations": ["0xCba1aF8f0bB223b2544F8eB8f69d1c7960f788dB"],
      "sinceTimestamp": 1717521479,
      "values": {
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "ERA_CHAIN_ID": 324,
        "ERA_DIAMOND_PROXY": "0x32400084C286CF3E17e7B677ea9583e60a000324",
        "legacyBridge": "0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063",
        "owner": "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "L1SharedBridge"
    }
  ],
  "eoas": [
    "0x0000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000001",
    "0x0D3250c3D5FAcb74Ac15834096397a3Ef790ec99",
    "0x1567AC0764142e91aB0A9C65C568f0DbE9E168BF",
    "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
    "0x3527439923a63F8C13CF72b8Fe80a77f6e572092",
    "0x3F0009D00cc78979d00Eb635490F23E8d6aCc481",
    "0x700DA14328eC2F81053E5B6aAE4803E16BEdF1df",
    "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
    "0x71d84c3404a6ae258E6471d4934B96a2033F9438",
    "0x84298D79ad2CD4eC0d9Ca1959F9d9f40Bc07152f",
    "0x9dF8bc0918F357c766A5697E031fF5237c05747A",
    "0xe79af29d618141Ffef951B240b250d47030D56d7"
  ],
  "abis": {
    "0x0b622A2061EaccAE1c664eBC3E868b8438e03F61": [
      "constructor(address _admin, address _securityCouncil, uint256 _minDelay)",
      "event ChangeMinDelay(uint256 _delayBefore, uint256 _delayAfter)",
      "event ChangeSecurityCouncil(address _securityCouncilBefore, address _securityCouncilAfter)",
      "event OperationCancelled(bytes32 indexed _id)",
      "event OperationExecuted(bytes32 indexed _id)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ShadowOperationScheduled(bytes32 indexed _id, uint256 delay)",
      "event TransparentOperationScheduled(bytes32 indexed _id, uint256 delay, tuple(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) _operation)",
      "function acceptOwnership()",
      "function cancel(bytes32 _id)",
      "function execute(tuple(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) _operation) payable",
      "function executeInstant(tuple(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) _operation) payable",
      "function getOperationState(bytes32 _id) view returns (uint8)",
      "function hashOperation(tuple(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) _operation) pure returns (bytes32)",
      "function isOperation(bytes32 _id) view returns (bool)",
      "function isOperationDone(bytes32 _id) view returns (bool)",
      "function isOperationPending(bytes32 _id) view returns (bool)",
      "function isOperationReady(bytes32 _id) view returns (bool)",
      "function minDelay() view returns (uint256)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function scheduleShadow(bytes32 _id, uint256 _delay)",
      "function scheduleTransparent(tuple(tuple(address target, uint256 value, bytes data)[] calls, bytes32 predecessor, bytes32 salt) _operation, uint256 _delay)",
      "function securityCouncil() view returns (address)",
      "function timestamps(bytes32) view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function updateDelay(uint256 _newDelay)",
      "function updateSecurityCouncil(address _newSecurityCouncil)"
    ],
    "0x12f893689f9603991a8c22C249FFd0509Be95661": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event NewAdmin(address indexed oldAdmin, address indexed newAdmin)",
      "event NewChain(uint256 indexed chainId, address stateTransitionManager, address indexed chainGovernance)",
      "event NewPendingAdmin(address indexed oldPendingAdmin, address indexed newPendingAdmin)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "function acceptAdmin()",
      "function acceptOwnership()",
      "function addStateTransitionManager(address _stateTransitionManager)",
      "function addToken(address _token)",
      "function admin() view returns (address)",
      "function baseToken(uint256 _chainId) view returns (address)",
      "function createNewChain(uint256 _chainId, address _stateTransitionManager, address _baseToken, uint256 _salt, address _admin, bytes _initData) returns (uint256)",
      "function getHyperchain(uint256 _chainId) view returns (address)",
      "function initialize(address _owner)",
      "function l2TransactionBaseCost(uint256 _chainId, uint256 _gasPrice, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proveL1ToL2TransactionStatus(uint256 _chainId, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof, uint8 _status) view returns (bool)",
      "function proveL2LogInclusion(uint256 _chainId, uint256 _batchNumber, uint256 _index, tuple(uint8 l2ShardId, bool isService, uint16 txNumberInBatch, address sender, bytes32 key, bytes32 value) _log, bytes32[] _proof) view returns (bool)",
      "function proveL2MessageInclusion(uint256 _chainId, uint256 _batchNumber, uint256 _index, tuple(uint16 txNumberInBatch, address sender, bytes data) _message, bytes32[] _proof) view returns (bool)",
      "function removeStateTransitionManager(address _stateTransitionManager)",
      "function renounceOwnership()",
      "function requestL2TransactionDirect(tuple(uint256 chainId, uint256 mintValue, address l2Contract, uint256 l2Value, bytes l2Calldata, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, bytes[] factoryDeps, address refundRecipient) _request) payable returns (bytes32 canonicalTxHash)",
      "function requestL2TransactionTwoBridges(tuple(uint256 chainId, uint256 mintValue, uint256 l2Value, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, address refundRecipient, address secondBridgeAddress, uint256 secondBridgeValue, bytes secondBridgeCalldata) _request) payable returns (bytes32 canonicalTxHash)",
      "function setPendingAdmin(address _newPendingAdmin)",
      "function setSharedBridge(address _sharedBridge)",
      "function sharedBridge() view returns (address)",
      "function stateTransitionManager(uint256 _chainId) view returns (address)",
      "function stateTransitionManagerIsRegistered(address _stateTransitionManager) view returns (bool)",
      "function tokenIsRegistered(address _token) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause()"
    ],
    "0x303a465B659cBB0ab36eE643eA362c509EEb5213": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x32400084C286CF3E17e7B677ea9583e60a000324": [
      "constructor(uint256 _chainId, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)"
    ],
    "0x3dDD7ED2AeC0758310A4C6596522FCAeD108DdA2": [
      "event NewL2BootloaderBytecodeHash(bytes32 indexed previousBytecodeHash, bytes32 indexed newBytecodeHash)",
      "event NewL2DefaultAccountBytecodeHash(bytes32 indexed previousBytecodeHash, bytes32 indexed newBytecodeHash)",
      "event NewProtocolVersion(uint256 indexed previousProtocolVersion, uint256 indexed newProtocolVersion)",
      "event NewVerifier(address indexed oldVerifier, address indexed newVerifier)",
      "event NewVerifierParams(tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) oldVerifierParams, tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) newVerifierParams)",
      "event UpgradeComplete(uint256 indexed newProtocolVersion, bytes32 indexed l2UpgradeTxHash, tuple(tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) l2ProtocolUpgradeTx, bytes[] factoryDeps, bytes32 bootloaderHash, bytes32 defaultAccountHash, address verifier, tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) verifierParams, bytes l1ContractsUpgradeCalldata, bytes postUpgradeCalldata, uint256 upgradeTimestamp, uint256 newProtocolVersion) upgrade)",
      "function upgrade(tuple(tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) l2ProtocolUpgradeTx, bytes[] factoryDeps, bytes32 bootloaderHash, bytes32 defaultAccountHash, address verifier, tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) verifierParams, bytes l1ContractsUpgradeCalldata, bytes postUpgradeCalldata, uint256 upgradeTimestamp, uint256 newProtocolVersion) _proposedUpgrade) returns (bytes32)"
    ],
    "0x41527B2d03844dB6b0945f25702cB958b6d55989": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error ErrorNotAdmin()",
      "error ErrorProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_, bool forceCall_)"
    ],
    "0x4e4943346848c4867F81dFb37c4cA9C5715A7828": [
      "constructor(address _singleton)"
    ],
    "0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x5D8ba173Dc6C3c90C8f7C04C9288BeF5FDbAd06E": [
      "constructor(address _initialOwner, uint32 _executionDelay, uint256 _eraChainId)",
      "error AddressAlreadyValidator(uint256 _chainId)",
      "error ValidatorDoesNotExist(uint256 _chainId)",
      "event BlockCommit(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlockExecution(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlocksRevert(uint256 totalBatchesCommitted, uint256 totalBatchesVerified, uint256 totalBatchesExecuted)",
      "event BlocksVerification(uint256 indexed previousLastVerifiedBatch, uint256 indexed currentLastVerifiedBatch)",
      "event NewExecutionDelay(uint256 _newExecutionDelay)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ValidatorAdded(uint256 indexed _chainId, address _addedValidator)",
      "event ValidatorRemoved(uint256 indexed _chainId, address _removedValidator)",
      "function acceptOwnership()",
      "function addValidator(uint256 _chainId, address _newValidator)",
      "function commitBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 bootloaderHeapInitialContentsHash, bytes32 eventsQueueStateHash, bytes systemLogs, bytes pubdataCommitments)[] _newBatchesData)",
      "function commitBatchesSharedBridge(uint256 _chainId, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 bootloaderHeapInitialContentsHash, bytes32 eventsQueueStateHash, bytes systemLogs, bytes pubdataCommitments)[] _newBatchesData)",
      "function executeBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _newBatchesData)",
      "function executeBatchesSharedBridge(uint256 _chainId, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _newBatchesData)",
      "function executionDelay() view returns (uint32)",
      "function getCommittedBatchTimestamp(uint256 _chainId, uint256 _l2BatchNumber) view returns (uint256)",
      "function getName() view returns (string)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function proveBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[], tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof))",
      "function proveBatchesSharedBridge(uint256 _chainId, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[], tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof))",
      "function removeValidator(uint256 _chainId, address _validator)",
      "function renounceOwnership()",
      "function revertBatches(uint256)",
      "function revertBatchesSharedBridge(uint256 _chainId, uint256)",
      "function setExecutionDelay(uint32 _executionDelay)",
      "function setStateTransitionManager(address _stateTransitionManager)",
      "function stateTransitionManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function validators(uint256 _chainId, address _validator) view returns (bool)"
    ],
    "0x70F3FBf8a427155185Ec90BED8a3434203de9604": [
      "function verificationKeyHash() pure returns (bytes32 vkHash)",
      "function verify(uint256[], uint256[], uint256[]) view returns (bool)"
    ],
    "0x8191975d8B0851C7f0740918896Cf298c09aA05E": [
      "constructor(address _sharedBridge)",
      "event ClaimedFailedDeposit(address indexed to, address indexed l1Token, uint256 amount)",
      "event DepositInitiated(bytes32 indexed l2DepositTxHash, address indexed from, address indexed to, address l1Token, uint256 amount)",
      "event WithdrawalFinalized(address indexed to, address indexed l1Token, uint256 amount)",
      "function SHARED_BRIDGE() view returns (address)",
      "function claimFailedDeposit(address _depositSender, address _l1Token, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte) payable returns (bytes32 l2TxHash)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte, address _refundRecipient) payable returns (bytes32 l2TxHash)",
      "function depositAmount(address account, address l1Token, bytes32 depositL2TxHash) view returns (uint256 amount)",
      "function finalizeWithdrawal(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function initialize()",
      "function isWithdrawalFinalized(uint256 l2BatchNumber, uint256 l2ToL1MessageNumber) view returns (bool isFinalized)",
      "function l2Bridge() view returns (address)",
      "function l2TokenAddress(address _l1Token) view returns (address)",
      "function l2TokenBeacon() view returns (address)",
      "function l2TokenProxyBytecodeHash() view returns (bytes32)",
      "function transferTokenToSharedBridge(address _token)"
    ],
    "0x8279B7E48fA074f966385d87AEf29Bd031e54fD5": [
      "constructor(address _bridgehub, uint256 _maxNumberOfHyperchains)",
      "event Initialized(uint8 version)",
      "event NewAdmin(address indexed oldAdmin, address indexed newAdmin)",
      "event NewChainCreationParams(address genesisUpgrade, bytes32 genesisBatchHash, uint64 genesisIndexRepeatedStorageChanges, bytes32 genesisBatchCommitment, bytes32 newInitialCutHash)",
      "event NewHyperchain(uint256 indexed _chainId, address indexed _hyperchainContract)",
      "event NewPendingAdmin(address indexed oldPendingAdmin, address indexed newPendingAdmin)",
      "event NewProtocolVersion(uint256 indexed oldProtocolVersion, uint256 indexed newProtocolVersion)",
      "event NewUpgradeCutHash(uint256 indexed protocolVersion, bytes32 indexed upgradeCutHash)",
      "event NewValidatorTimelock(address indexed oldValidatorTimelock, address indexed newValidatorTimelock)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event SetChainIdUpgrade(address indexed _hyperchain, tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) _l2Transaction, uint256 indexed _protocolVersion)",
      "function BRIDGE_HUB() view returns (address)",
      "function MAX_NUMBER_OF_HYPERCHAINS() view returns (uint256)",
      "function acceptAdmin()",
      "function acceptOwnership()",
      "function admin() view returns (address)",
      "function changeFeeParams(uint256 _chainId, tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) _newFeeParams)",
      "function createNewChain(uint256 _chainId, address _baseToken, address _sharedBridge, address _admin, bytes _diamondCut)",
      "function executeUpgrade(uint256 _chainId, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)",
      "function freezeChain(uint256 _chainId)",
      "function genesisUpgrade() view returns (address)",
      "function getAllHyperchainChainIDs() view returns (uint256[])",
      "function getAllHyperchains() view returns (address[] chainAddresses)",
      "function getChainAdmin(uint256 _chainId) view returns (address)",
      "function getHyperchain(uint256 _chainId) view returns (address chainAddress)",
      "function getSemverProtocolVersion() view returns (uint32, uint32, uint32)",
      "function initialCutHash() view returns (bytes32)",
      "function initialize(tuple(address owner, address validatorTimelock, tuple(address genesisUpgrade, bytes32 genesisBatchHash, uint64 genesisIndexRepeatedStorageChanges, bytes32 genesisBatchCommitment, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCut) chainCreationParams, uint256 protocolVersion) _initializeData)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function protocolVersion() view returns (uint256)",
      "function protocolVersionDeadline(uint256 _protocolVersion) view returns (uint256)",
      "function protocolVersionIsActive(uint256 _protocolVersion) view returns (bool)",
      "function registerAlreadyDeployedHyperchain(uint256 _chainId, address _hyperchain)",
      "function renounceOwnership()",
      "function revertBatches(uint256 _chainId, uint256 _newLastBatch)",
      "function setChainCreationParams(tuple(address genesisUpgrade, bytes32 genesisBatchHash, uint64 genesisIndexRepeatedStorageChanges, bytes32 genesisBatchCommitment, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCut) _chainCreationParams)",
      "function setNewVersionUpgrade(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _cutData, uint256 _oldProtocolVersion, uint256 _oldProtocolVersionDeadline, uint256 _newProtocolVersion)",
      "function setPendingAdmin(address _newPendingAdmin)",
      "function setPorterAvailability(uint256 _chainId, bool _zkPorterIsAvailable)",
      "function setPriorityTxMaxGasLimit(uint256 _chainId, uint256 _maxGasLimit)",
      "function setProtocolVersionDeadline(uint256 _protocolVersion, uint256 _timestamp)",
      "function setTokenMultiplier(uint256 _chainId, uint128 _nominator, uint128 _denominator)",
      "function setUpgradeDiamondCut(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _cutData, uint256 _oldProtocolVersion)",
      "function setValidator(uint256 _chainId, address _validator, bool _active)",
      "function setValidatorTimelock(address _validatorTimelock)",
      "function storedBatchZero() view returns (bytes32)",
      "function transferOwnership(address newOwner)",
      "function unfreezeChain(uint256 _chainId)",
      "function upgradeChainFromVersion(uint256 _chainId, uint256 _oldProtocolVersion, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)",
      "function upgradeCutHash(uint256 protocolVersion) view returns (bytes32 cutHash)",
      "function validatorTimelock() view returns (address)"
    ],
    "0x9a810469F4a451Ebb7ef53672142053b4971587c": [
      "constructor()",
      "error ErrorAccountIsZeroAddress()",
      "error ErrorAlreadyInitialized()",
      "error ErrorDepositsDisabled()",
      "error ErrorDepositsEnabled()",
      "error ErrorUnsupportedL1Token()",
      "error ErrorUnsupportedL2Token()",
      "error ErrorWithdrawalsDisabled()",
      "error ErrorWithdrawalsEnabled()",
      "event ClaimedFailedDeposit(address indexed to, address indexed l1Token, uint256 amount)",
      "event DepositInitiated(bytes32 indexed l2DepositTxHash, address indexed from, address indexed to, address l1Token, uint256 amount, address refundRecipient)",
      "event DepositsDisabled(address indexed disabler)",
      "event DepositsEnabled(address indexed enabler)",
      "event Initialized(uint8 version)",
      "event InitializedBridgingManager(address indexed admin)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event WithdrawalFinalized(address indexed to, address indexed l1Token, uint256 amount)",
      "event WithdrawalsDisabled(address indexed disabler)",
      "event WithdrawalsEnabled(address indexed enabler)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSITS_DISABLER_ROLE() view returns (bytes32)",
      "function DEPOSITS_ENABLER_ROLE() view returns (bytes32)",
      "function WITHDRAWALS_DISABLER_ROLE() view returns (bytes32)",
      "function WITHDRAWALS_ENABLER_ROLE() view returns (bytes32)",
      "function claimFailedDeposit(address _depositSender, address _l1Token, bytes32 _l2TxHash, uint256 _l2BlockNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBlock, bytes32[] _merkleProof)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte) payable returns (bytes32 l2TxHash)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte, address _refundRecipient) payable returns (bytes32 l2TxHash)",
      "function depositAmount(address, bytes32) view returns (uint256)",
      "function disableDeposits()",
      "function disableWithdrawals()",
      "function enableDeposits()",
      "function enableWithdrawals()",
      "function finalizeWithdrawal(uint256 _l2BlockNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBlock, bytes _message, bytes32[] _merkleProof)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(bytes[] _factoryDeps, tuple(address _l1Token, address _l2Token, address _governor, address _admin, address _zkSync) addresses, uint256 _deployBridgeImplementationFee, uint256 _deployBridgeProxyFee) payable",
      "function isDepositsEnabled() view returns (bool)",
      "function isInitialized() view returns (bool)",
      "function isWithdrawalFinalized(uint256, uint256) view returns (bool)",
      "function isWithdrawalsEnabled() view returns (bool)",
      "function l1Token() view returns (address)",
      "function l2Bridge() view returns (address)",
      "function l2Token() view returns (address)",
      "function l2TokenAddress(address _l1Token) view returns (address l2TokenAddr)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function zkSync() view returns (address)"
    ],
    "0xa8CB082A5a689E0d594d7da1E2d72A3D63aDc1bD": [
      "constructor(address _initialOwner, address _zkSyncContract, uint32 _executionDelay, address[] _validators)",
      "error AddressAlreadyValidator()",
      "error ValidatorDoesNotExist()",
      "event BlockCommit(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlockExecution(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlocksRevert(uint256 totalBatchesCommitted, uint256 totalBatchesVerified, uint256 totalBatchesExecuted)",
      "event BlocksVerification(uint256 indexed previousLastVerifiedBatch, uint256 indexed currentLastVerifiedBatch)",
      "event NewExecutionDelay(uint256 _newExecutionDelay)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ValidatorAdded(address _addedValidator)",
      "event ValidatorRemoved(address _removedValidator)",
      "function acceptOwnership()",
      "function addValidator(address _newValidator)",
      "function commitBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 bootloaderHeapInitialContentsHash, bytes32 eventsQueueStateHash, bytes systemLogs, bytes pubdataCommitments)[] _newBatchesData)",
      "function executeBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _newBatchesData)",
      "function executionDelay() view returns (uint32)",
      "function getCommittedBatchTimestamp(uint256 _l2BatchNumber) view returns (uint256)",
      "function getName() view returns (string)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function proveBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[], tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof))",
      "function removeValidator(address _validator)",
      "function renounceOwnership()",
      "function revertBatches(uint256)",
      "function setExecutionDelay(uint32 _executionDelay)",
      "function transferOwnership(address newOwner)",
      "function validators(address) view returns (bool)",
      "function zkSyncContract() view returns (address)"
    ],
    "0xaD193aDe635576d8e9f7ada71Af2137b16c64075": [
      "event BlockCommit(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlockExecution(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlocksRevert(uint256 totalBatchesCommitted, uint256 totalBatchesVerified, uint256 totalBatchesExecuted)",
      "event BlocksVerification(uint256 indexed previousLastVerifiedBatch, uint256 indexed currentLastVerifiedBatch)",
      "function commitBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _lastCommittedBatchData, tuple(uint64 batchNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 bootloaderHeapInitialContentsHash, bytes32 eventsQueueStateHash, bytes systemLogs, bytes pubdataCommitments)[] _newBatchesData)",
      "function commitBatchesSharedBridge(uint256, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _lastCommittedBatchData, tuple(uint64 batchNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 bootloaderHeapInitialContentsHash, bytes32 eventsQueueStateHash, bytes systemLogs, bytes pubdataCommitments)[] _newBatchesData)",
      "function executeBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _batchesData)",
      "function executeBatchesSharedBridge(uint256, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _batchesData)",
      "function getName() view returns (string)",
      "function proveBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _prevBatch, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _committedBatches, tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof) _proof)",
      "function proveBatchesSharedBridge(uint256, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _prevBatch, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _committedBatches, tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof) _proof)",
      "function revertBatches(uint256 _newLastBatch)",
      "function revertBatchesSharedBridge(uint256, uint256 _newLastBatch)"
    ],
    "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xCba1aF8f0bB223b2544F8eB8f69d1c7960f788dB": [
      "constructor(address _l1WethAddress, address _bridgehub, uint256 _eraChainId, address _eraDiamondProxy)",
      "event BridgehubDepositBaseTokenInitiated(uint256 indexed chainId, address indexed from, address l1Token, uint256 amount)",
      "event BridgehubDepositFinalized(uint256 indexed chainId, bytes32 indexed txDataHash, bytes32 indexed l2DepositTxHash)",
      "event BridgehubDepositInitiated(uint256 indexed chainId, bytes32 indexed txDataHash, address indexed from, address to, address l1Token, uint256 amount)",
      "event ClaimedFailedDepositSharedBridge(uint256 indexed chainId, address indexed to, address indexed l1Token, uint256 amount)",
      "event Initialized(uint8 version)",
      "event LegacyDepositInitiated(uint256 indexed chainId, bytes32 indexed l2DepositTxHash, address indexed from, address to, address l1Token, uint256 amount)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event WithdrawalFinalizedSharedBridge(uint256 indexed chainId, address indexed to, address indexed l1Token, uint256 amount)",
      "function BRIDGE_HUB() view returns (address)",
      "function ERA_CHAIN_ID() view returns (uint256)",
      "function ERA_DIAMOND_PROXY() view returns (address)",
      "function L1_WETH_TOKEN() view returns (address)",
      "function acceptOwnership()",
      "function bridgehubConfirmL2Transaction(uint256 _chainId, bytes32 _txDataHash, bytes32 _txHash)",
      "function bridgehubDeposit(uint256 _chainId, address _prevMsgSender, uint256 _l2Value, bytes _data) payable returns (tuple(bytes32 magicValue, address l2Contract, bytes l2Calldata, bytes[] factoryDeps, bytes32 txDataHash) request)",
      "function bridgehubDepositBaseToken(uint256 _chainId, address _prevMsgSender, address _l1Token, uint256 _amount) payable",
      "function chainBalance(uint256 chainId, address l1Token) view returns (uint256 balance)",
      "function claimFailedDeposit(uint256 _chainId, address _depositSender, address _l1Token, uint256 _amount, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function claimFailedDepositLegacyErc20Bridge(address _depositSender, address _l1Token, uint256 _amount, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function depositHappened(uint256 chainId, bytes32 l2DepositTxHash) view returns (bytes32 depositDataHash)",
      "function depositLegacyErc20Bridge(address _prevMsgSender, address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte, address _refundRecipient) payable returns (bytes32 l2TxHash)",
      "function finalizeWithdrawal(uint256 _chainId, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function finalizeWithdrawalLegacyErc20Bridge(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof) returns (address l1Receiver, address l1Token, uint256 amount)",
      "function initialize(address _owner)",
      "function initializeChainGovernance(uint256 _chainId, address _l2BridgeAddress)",
      "function isWithdrawalFinalized(uint256 chainId, uint256 l2BatchNumber, uint256 l2ToL1MessageNumber) view returns (bool isFinalized)",
      "function l2BridgeAddress(uint256 chainId) view returns (address l2Bridge)",
      "function legacyBridge() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function receiveEth(uint256 _chainId) payable",
      "function renounceOwnership()",
      "function safeTransferFundsFromLegacy(address _token, address _target, uint256 _targetChainId, uint256 _gasPerToken)",
      "function setEraLegacyBridgeLastDepositTime(uint256 _eraLegacyBridgeLastDepositBatch, uint256 _eraLegacyBridgeLastDepositTxNumber)",
      "function setEraPostDiamondUpgradeFirstBatch(uint256 _eraPostDiamondUpgradeFirstBatch)",
      "function setEraPostLegacyBridgeUpgradeFirstBatch(uint256 _eraPostLegacyBridgeUpgradeFirstBatch)",
      "function setL1Erc20Bridge(address _legacyBridge)",
      "function transferFundsFromLegacy(address _token, address _target, uint256 _targetChainId)",
      "function transferOwnership(address newOwner)",
      "function unpause()"
    ],
    "0xCDB6228b616EEf8Df47D69A372C4f725C43e718C": [
      "constructor(uint256 _eraChainId)",
      "event NewPriorityRequest(uint256 txId, bytes32 txHash, uint64 expirationTimestamp, tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) transaction, bytes[] factoryDeps)",
      "function bridgehubRequestL2Transaction(tuple(address sender, address contractL2, uint256 mintValue, uint256 l2Value, bytes l2Calldata, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, bytes[] factoryDeps, address refundRecipient) _request) returns (bytes32 canonicalTxHash)",
      "function finalizeEthWithdrawal(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function getName() view returns (string)",
      "function l2TransactionBaseCost(uint256 _gasPrice, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit) view returns (uint256)",
      "function proveL1ToL2TransactionStatus(bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof, uint8 _status) view returns (bool)",
      "function proveL2LogInclusion(uint256 _batchNumber, uint256 _index, tuple(uint8 l2ShardId, bool isService, uint16 txNumberInBatch, address sender, bytes32 key, bytes32 value) _log, bytes32[] _proof) view returns (bool)",
      "function proveL2MessageInclusion(uint256 _batchNumber, uint256 _index, tuple(uint16 txNumberInBatch, address sender, bytes data) _message, bytes32[] _proof) view returns (bool)",
      "function requestL2Transaction(address _contractL2, uint256 _l2Value, bytes _calldata, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit, bytes[] _factoryDeps, address _refundRecipient) payable returns (bytes32 canonicalTxHash)",
      "function transferEthToSharedBridge()"
    ],
    "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xE60E94fCCb18a81D501a38959E532C0A85A1be89": [
      "function baseTokenGasPriceMultiplierDenominator() view returns (uint128)",
      "function baseTokenGasPriceMultiplierNominator() view returns (uint128)",
      "function facetAddress(bytes4 _selector) view returns (address)",
      "function facetAddresses() view returns (address[])",
      "function facetFunctionSelectors(address _facet) view returns (bytes4[])",
      "function facets() view returns (tuple(address addr, bytes4[] selectors)[] result)",
      "function getAdmin() view returns (address)",
      "function getBaseToken() view returns (address)",
      "function getBaseTokenBridge() view returns (address)",
      "function getBridgehub() view returns (address)",
      "function getFirstUnprocessedPriorityTx() view returns (uint256)",
      "function getL2BootloaderBytecodeHash() view returns (bytes32)",
      "function getL2DefaultAccountBytecodeHash() view returns (bytes32)",
      "function getL2SystemContractsUpgradeBatchNumber() view returns (uint256)",
      "function getL2SystemContractsUpgradeBlockNumber() view returns (uint256)",
      "function getL2SystemContractsUpgradeTxHash() view returns (bytes32)",
      "function getName() view returns (string)",
      "function getPendingAdmin() view returns (address)",
      "function getPriorityQueueSize() view returns (uint256)",
      "function getPriorityTxMaxGasLimit() view returns (uint256)",
      "function getProtocolVersion() view returns (uint256)",
      "function getPubdataPricingMode() view returns (uint8)",
      "function getSemverProtocolVersion() view returns (uint32, uint32, uint32)",
      "function getStateTransitionManager() view returns (address)",
      "function getTotalBatchesCommitted() view returns (uint256)",
      "function getTotalBatchesExecuted() view returns (uint256)",
      "function getTotalBatchesVerified() view returns (uint256)",
      "function getTotalBlocksCommitted() view returns (uint256)",
      "function getTotalBlocksExecuted() view returns (uint256)",
      "function getTotalBlocksVerified() view returns (uint256)",
      "function getTotalPriorityTxs() view returns (uint256)",
      "function getVerifier() view returns (address)",
      "function getVerifierParams() view returns (tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash))",
      "function isDiamondStorageFrozen() view returns (bool)",
      "function isEthWithdrawalFinalized(uint256 _l2BatchNumber, uint256 _l2MessageIndex) view returns (bool)",
      "function isFacetFreezable(address _facet) view returns (bool isFreezable)",
      "function isFunctionFreezable(bytes4 _selector) view returns (bool)",
      "function isValidator(address _address) view returns (bool)",
      "function l2LogsRootHash(uint256 _batchNumber) view returns (bytes32)",
      "function priorityQueueFrontOperation() view returns (tuple(bytes32 canonicalTxHash, uint64 expirationTimestamp, uint192 layer2Tip))",
      "function storedBatchHash(uint256 _batchNumber) view returns (bytes32)",
      "function storedBlockHash(uint256 _batchNumber) view returns (bytes32)"
    ],
    "0xF6F26b416CE7AE5e5FE224Be332C7aE4e1f3450a": [
      "event DiamondCut(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata)",
      "event ExecuteUpgrade(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCut)",
      "event Freeze()",
      "event IsPorterAvailableStatusUpdate(bool isPorterAvailable)",
      "event NewAdmin(address indexed oldAdmin, address indexed newAdmin)",
      "event NewBaseTokenMultiplier(uint128 oldNominator, uint128 oldDenominator, uint128 newNominator, uint128 newDenominator)",
      "event NewFeeParams(tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) oldFeeParams, tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) newFeeParams)",
      "event NewPendingAdmin(address indexed oldPendingAdmin, address indexed newPendingAdmin)",
      "event NewPriorityTxMaxGasLimit(uint256 oldPriorityTxMaxGasLimit, uint256 newPriorityTxMaxGasLimit)",
      "event NewTransactionFilterer(address oldTransactionFilterer, address newTransactionFilterer)",
      "event Unfreeze()",
      "event ValidatorStatusUpdate(address indexed validatorAddress, bool isActive)",
      "event ValidiumModeStatusUpdate(uint8 validiumMode)",
      "function acceptAdmin()",
      "function changeFeeParams(tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) _newFeeParams)",
      "function executeUpgrade(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)",
      "function freezeDiamond()",
      "function getName() view returns (string)",
      "function setPendingAdmin(address _newPendingAdmin)",
      "function setPorterAvailability(bool _zkPorterIsAvailable)",
      "function setPriorityTxMaxGasLimit(uint256 _newPriorityTxMaxGasLimit)",
      "function setPubdataPricingMode(uint8 _pricingMode)",
      "function setTokenMultiplier(uint128 _nominator, uint128 _denominator)",
      "function setTransactionFilterer(address _transactionFilterer)",
      "function setValidator(address _validator, bool _active)",
      "function unfreezeDiamond()",
      "function upgradeChainFromVersion(uint256 _oldProtocolVersion, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)"
    ]
  }
}
