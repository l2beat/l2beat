{
  "name": "zksync2",
  "blockNumber": 16684347,
  "configHash": "0x0952484d453d068914efc6ba27fe71a7145822b2d880b23ab0a17ebc7c4f18b7",
  "contracts": [
    {
      "name": "L1EthBridge",
      "address": "0x027C8a79075F96a8cdE315b495949e5f1D92f1D6",
      "code": "https://etherscan.deth.net/address/0x027C8a79075F96a8cdE315b495949e5f1D92f1D6,0xeb9F40c4Ed46D39074aBe5Cd7E6C54679E5D04ED",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xeb9F40c4Ed46D39074aBe5Cd7E6C54679E5D04ED",
        "admin": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828"
      },
      "values": {
        "l2Bridge": "0x2F77dc80286e95508d37F688De83E8124795F8f7"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
      "code": "https://etherscan.deth.net/address/0x4e4943346848c4867F81dFb37c4cA9C5715A7828,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0xd3e32b4e9e95656dc35c609ae0fbcc0cea466ebecc8227025a2d3edc728b79fb",
        "getChainId": 1,
        "getOwners": [
          "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
          "0x474D2b82E02D9712A077574E7764dEfA182653D4",
          "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
          "0x9dF8bc0918F357c766A5697E031fF5237c05747A",
          "0x1567AC0764142e91aB0A9C65C568f0DbE9E168BF",
          "0xa265146cA40F52cfC439888D0b4291b5440e6769"
        ],
        "getThreshold": 3,
        "nonce": 13,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "DiamondProxy",
      "address": "0x324000e0c256B806548b307aF600aFFF3D000324",
      "code": "https://etherscan.deth.net/address/0x324000e0c256B806548b307aF600aFFF3D000324,0xdf6358251654052987EFeD2EC9d2ae3511CdaaC9,0x20fB418401e9C4eef6E366Ae15166e4fe3eA7E42,0x4CEAD04841F444c9df49FbF8120Be8a3f7057758,0x2765Bb092DFD1AEe58c068407e643a380C8eC202,0x261881b557e2eE82DA689576B04e3f7Ad8E651c9",
      "upgradeability": {
        "type": "EIP2535 diamond proxy",
        "facets": [
          "0xdf6358251654052987EFeD2EC9d2ae3511CdaaC9",
          "0x20fB418401e9C4eef6E366Ae15166e4fe3eA7E42",
          "0x4CEAD04841F444c9df49FbF8120Be8a3f7057758",
          "0x2765Bb092DFD1AEe58c068407e643a380C8eC202",
          "0x261881b557e2eE82DA689576B04e3f7Ad8E651c9"
        ]
      },
      "values": {
        "facetAddresses": [
          "0xdf6358251654052987EFeD2EC9d2ae3511CdaaC9",
          "0x20fB418401e9C4eef6E366Ae15166e4fe3eA7E42",
          "0x4CEAD04841F444c9df49FbF8120Be8a3f7057758",
          "0x2765Bb092DFD1AEe58c068407e643a380C8eC202",
          "0x261881b557e2eE82DA689576B04e3f7Ad8E651c9"
        ],
        "facets": [
          [
            "0xdf6358251654052987EFeD2EC9d2ae3511CdaaC9",
            [
              "0x635abadb",
              "0x62c727ab",
              "0xb2f44526",
              "0x0b66fc12",
              "0x1a97bca1",
              "0x17338945"
            ]
          ],
          [
            "0x20fB418401e9C4eef6E366Ae15166e4fe3eA7E42",
            [
              "0xcdffacc6",
              "0x52ef6b2c",
              "0xadfca15e",
              "0x7a0ed627",
              "0xfe10226d",
              "0x79823c9a",
              "0x4fc07d75",
              "0xc9db75e2",
              "0x8665b150",
              "0x631f4bac",
              "0xc8882078",
              "0x30518ef9",
              "0xf8457def",
              "0x33642e23",
              "0xfe26699e",
              "0x39607382",
              "0xaf6a2dcd",
              "0xa1954fc5",
              "0x46657fe9",
              "0x29b98c67",
              "0xc3bbd2d7",
              "0xe81e0ba1",
              "0x2ac8a25f",
              "0xfacd743b",
              "0x9cd939e4",
              "0x56142d7a",
              "0x74f4d30d"
            ]
          ],
          [
            "0x4CEAD04841F444c9df49FbF8120Be8a3f7057758",
            [
              "0x5cd6771e",
              "0x263b7f8e",
              "0xe4948f43",
              "0x725ad850",
              "0xed9937f5"
            ]
          ],
          [
            "0x2765Bb092DFD1AEe58c068407e643a380C8eC202",
            [
              "0xe58bb639",
              "0x86cb9909",
              "0x0707ac09",
              "0xf235757f",
              "0x1cc5d103",
              "0x4623c91d",
              "0x5437988d",
              "0x0b508883"
            ]
          ],
          [
            "0x261881b557e2eE82DA689576B04e3f7Ad8E651c9",
            [
              "0x0c4dd810",
              "0xce9dcf16",
              "0xd31c283e",
              "0xa9a2d18a"
            ]
          ]
        ],
        "getCurrentProposalId": 2,
        "getGovernor": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
        "getLastDiamondFreezeTimestamp": 0,
        "getPendingGovernor": "0x0000000000000000000000000000000000000000",
        "getProposedDiamondCutHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getProposedDiamondCutTimestamp": 0,
        "getSecurityCouncilEmergencyApprovals": 0,
        "getVerifier": "0xccEF0dAF4727Cc36171dc90A7efDef87A88a70bA",
        "isDiamondStorageFrozen": false
      }
    },
    {
      "name": "Verifier",
      "address": "0xccEF0dAF4727Cc36171dc90A7efDef87A88a70bA",
      "code": "https://etherscan.deth.net/address/0xccEF0dAF4727Cc36171dc90A7efDef87A88a70bA",
      "upgradeability": {
        "type": "immutable"
      }
    }
  ],
  "eoas": [
    "0x1567AC0764142e91aB0A9C65C568f0DbE9E168BF",
    "0x2F77dc80286e95508d37F688De83E8124795F8f7",
    "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
    "0x474D2b82E02D9712A077574E7764dEfA182653D4",
    "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
    "0x9dF8bc0918F357c766A5697E031fF5237c05747A",
    "0xa265146cA40F52cfC439888D0b4291b5440e6769"
  ],
  "abis": {
    "0x027C8a79075F96a8cdE315b495949e5f1D92f1D6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x20fB418401e9C4eef6E366Ae15166e4fe3eA7E42": [
      "function facetAddress(bytes4 _selector) view returns (address)",
      "function facetAddresses() view returns (address[])",
      "function facetFunctionSelectors(address _facet) view returns (bytes4[])",
      "function facets() view returns (tuple(address addr, bytes4[] selectors)[] result)",
      "function getCurrentProposalId() view returns (uint256)",
      "function getFirstUnprocessedPriorityTx() view returns (uint256)",
      "function getGovernor() view returns (address)",
      "function getLastDiamondFreezeTimestamp() view returns (uint256)",
      "function getPendingGovernor() view returns (address)",
      "function getPriorityQueueSize() view returns (uint256)",
      "function getProposedDiamondCutHash() view returns (bytes32)",
      "function getProposedDiamondCutTimestamp() view returns (uint256)",
      "function getSecurityCouncilEmergencyApprovals() view returns (uint256)",
      "function getSecurityCouncilMemberLastApprovedProposalId(address _address) view returns (uint256)",
      "function getTotalBlocksCommitted() view returns (uint256)",
      "function getTotalBlocksExecuted() view returns (uint256)",
      "function getTotalBlocksVerified() view returns (uint256)",
      "function getTotalPriorityTxs() view returns (uint256)",
      "function getVerifier() view returns (address)",
      "function isDiamondStorageFrozen() view returns (bool)",
      "function isFacetFreezable(address _facet) view returns (bool isFreezable)",
      "function isFunctionFreezable(bytes4 _selector) view returns (bool)",
      "function isSecurityCouncilMember(address _address) view returns (bool)",
      "function isValidator(address _address) view returns (bool)",
      "function l2LogsRootHash(uint256 _blockNumber) view returns (bytes32)",
      "function priorityQueueFrontOperation() view returns (tuple(bytes32 canonicalTxHash, uint64 expirationBlock, uint192 layer2Tip))",
      "function storedBlockHash(uint256 _blockNumber) view returns (bytes32)"
    ],
    "0x261881b557e2eE82DA689576B04e3f7Ad8E651c9": [
      "event BlockCommit(uint256 indexed blockNumber, bytes32 indexed blockHash, bytes32 indexed commitment)",
      "event BlockExecution(uint256 indexed blockNumber, bytes32 indexed blockHash, bytes32 indexed commitment)",
      "event BlocksRevert(uint256 totalBlocksCommitted, uint256 totalBlocksVerified, uint256 totalBlocksExecuted)",
      "event BlocksVerification(uint256 indexed previousLastVerifiedBlock, uint256 indexed currentLastVerifiedBlock, uint8 verificationMode)",
      "function commitBlocks(tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _lastCommittedBlockData, tuple(uint64 blockNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 l2LogsTreeRoot, bytes32 priorityOperationsHash, bytes initialStorageChanges, bytes repeatedStorageChanges, bytes l2Logs, bytes[] l2ArbitraryLengthMessages, bytes[] factoryDeps)[] _newBlocksData)",
      "function executeBlocks(tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _blocksData)",
      "function proveBlocks(tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment) _prevBlock, tuple(uint64 blockNumber, bytes32 blockHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _committedBlocks, tuple(uint256[] recurisiveAggregationInput, uint256[] serializedProof) _proof, uint8 _verificationMode)",
      "function revertBlocks(uint256 _newLastBlock)"
    ],
    "0x2765Bb092DFD1AEe58c068407e643a380C8eC202": [
      "event IsPorterAvailableStatusUpdate(bool isPorterAvailable)",
      "event NewGovernor(address indexed oldGovernor, address indexed newGovernor)",
      "event NewL2BootloaderBytecodeHash(bytes32 indexed previousBytecodeHash, bytes32 indexed newBytecodeHash)",
      "event NewL2DefaultAccountBytecodeHash(bytes32 indexed previousBytecodeHash, bytes32 indexed newBytecodeHash)",
      "event NewPendingGovernor(address indexed oldPendingGovernor, address indexed newPendingGovernor)",
      "event NewVerifier(address indexed oldVerifier, address indexed newVerifier)",
      "event NewVerifierParams(tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) oldVerifierParams, tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) newVerifierParams)",
      "event ValidatorStatusUpdate(address indexed validatorAddress, bool isActive)",
      "function acceptGovernor()",
      "function setL2BootloaderBytecodeHash(bytes32 _l2BootloaderBytecodeHash)",
      "function setL2DefaultAccountBytecodeHash(bytes32 _l2DefaultAccountBytecodeHash)",
      "function setPendingGovernor(address _newPendingGovernor)",
      "function setPorterAvailability(bool _zkPorterIsAvailable)",
      "function setValidator(address _validator, bool _active)",
      "function setVerifier(address _newVerifier)",
      "function setVerifierParams(tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) _newVerifierParams)"
    ],
    "0x324000e0c256B806548b307aF600aFFF3D000324": [
      "constructor(uint256 _chainId, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)"
    ],
    "0x4CEAD04841F444c9df49FbF8120Be8a3f7057758": [
      "event NewPriorityRequest(uint256 txId, bytes32 txHash, uint64 expirationBlock, tuple(uint256 txType, uint256 from, uint256 to, uint256 ergsLimit, uint256 ergsPerPubdataByteLimit, uint256 maxFeePerErg, uint256 maxPriorityFeePerErg, uint256 paymaster, uint256[6] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) transaction, bytes[] factoryDeps)",
      "function l2TransactionBaseCost(uint256, uint256, uint32) pure returns (uint256)",
      "function proveL2LogInclusion(uint256 _blockNumber, uint256 _index, tuple(uint8 l2ShardId, bool isService, uint16 txNumberInBlock, address sender, bytes32 key, bytes32 value) _log, bytes32[] _proof) view returns (bool)",
      "function proveL2MessageInclusion(uint256 _blockNumber, uint256 _index, tuple(uint16 txNumberInBlock, address sender, bytes data) _message, bytes32[] _proof) view returns (bool)",
      "function requestL2Transaction(address _contractL2, uint256 _l2Value, bytes _calldata, uint256 _ergsLimit, bytes[] _factoryDeps) payable returns (bytes32 canonicalTxHash)",
      "function serializeL2Transaction(uint256 _txId, uint256 _l2Value, address _sender, address _contractAddressL2, bytes _calldata, uint256 _ergsLimit, bytes[] _factoryDeps) pure returns (tuple(uint256 txType, uint256 from, uint256 to, uint256 ergsLimit, uint256 ergsPerPubdataByteLimit, uint256 maxFeePerErg, uint256 maxPriorityFeePerErg, uint256 paymaster, uint256[6] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic))"
    ],
    "0x4e4943346848c4867F81dFb37c4cA9C5715A7828": [
      "constructor(address _singleton)"
    ],
    "0xccEF0dAF4727Cc36171dc90A7efDef87A88a70bA": [
      "function compute_powers_of_alpha(tuple(tuple(uint256 value) zero, tuple(uint256 value) alpha, tuple(uint256 value) beta, tuple(uint256 value) gamma, tuple(uint256 value)[9] alpha_values, tuple(uint256 value) eta, tuple(uint256 value) beta_lookup, tuple(uint256 value) gamma_lookup, tuple(uint256 value) beta_plus_one, tuple(uint256 value) beta_gamma, tuple(uint256 value) v, tuple(uint256 value) u, tuple(uint256 value) z, tuple(uint256 value) z_omega, tuple(uint256 value) z_minus_last_omega, tuple(uint256 value) l_0_at_z, tuple(uint256 value) l_n_minus_one_at_z, tuple(uint256 value) t, tuple(uint256 X, uint256 Y) tp) state) pure",
      "function prepare_queries(tuple(uint256 domain_size, uint256 num_inputs, tuple(uint256 value) omega, tuple(uint256 X, uint256 Y)[2] gate_selectors_commitments, tuple(uint256 X, uint256 Y)[8] gate_setup_commitments, tuple(uint256 X, uint256 Y)[4] permutation_commitments, tuple(uint256 X, uint256 Y) lookup_selector_commitment, tuple(uint256 X, uint256 Y)[4] lookup_tables_commitments, tuple(uint256 X, uint256 Y) lookup_table_type_commitment, tuple(uint256 value)[3] non_residues, tuple(uint256[2] X, uint256[2] Y)[2] g2_elements) vk, tuple(uint256[] input_values, tuple(uint256 X, uint256 Y)[4] state_polys_commitments, tuple(uint256 X, uint256 Y) copy_permutation_grand_product_commitment, tuple(uint256 X, uint256 Y)[4] quotient_poly_parts_commitments, tuple(uint256 value)[4] state_polys_openings_at_z, tuple(uint256 value)[1] state_polys_openings_at_z_omega, tuple(uint256 value)[1] gate_selectors_openings_at_z, tuple(uint256 value)[3] copy_permutation_polys_openings_at_z, tuple(uint256 value) copy_permutation_grand_product_opening_at_z_omega, tuple(uint256 value) quotient_poly_opening_at_z, tuple(uint256 value) linearization_poly_opening_at_z, tuple(uint256 X, uint256 Y) lookup_s_poly_commitment, tuple(uint256 X, uint256 Y) lookup_grand_product_commitment, tuple(uint256 value) lookup_s_poly_opening_at_z_omega, tuple(uint256 value) lookup_grand_product_opening_at_z_omega, tuple(uint256 value) lookup_t_poly_opening_at_z, tuple(uint256 value) lookup_t_poly_opening_at_z_omega, tuple(uint256 value) lookup_selector_poly_opening_at_z, tuple(uint256 value) lookup_table_type_poly_opening_at_z, tuple(uint256 X, uint256 Y) opening_proof_at_z, tuple(uint256 X, uint256 Y) opening_proof_at_z_omega) proof, tuple(tuple(uint256 value) zero, tuple(uint256 value) alpha, tuple(uint256 value) beta, tuple(uint256 value) gamma, tuple(uint256 value)[9] alpha_values, tuple(uint256 value) eta, tuple(uint256 value) beta_lookup, tuple(uint256 value) gamma_lookup, tuple(uint256 value) beta_plus_one, tuple(uint256 value) beta_gamma, tuple(uint256 value) v, tuple(uint256 value) u, tuple(uint256 value) z, tuple(uint256 value) z_omega, tuple(uint256 value) z_minus_last_omega, tuple(uint256 value) l_0_at_z, tuple(uint256 value) l_n_minus_one_at_z, tuple(uint256 value) t, tuple(uint256 X, uint256 Y) tp) state) view returns (tuple(tuple(uint256 X, uint256 Y)[13] commitments_at_z, tuple(uint256 value)[13] values_at_z, tuple(uint256 X, uint256 Y)[6] commitments_at_z_omega, tuple(uint256 value)[6] values_at_z_omega) queries)",
      "function rescue_custom_gate_linearization_contribution(tuple(uint256 domain_size, uint256 num_inputs, tuple(uint256 value) omega, tuple(uint256 X, uint256 Y)[2] gate_selectors_commitments, tuple(uint256 X, uint256 Y)[8] gate_setup_commitments, tuple(uint256 X, uint256 Y)[4] permutation_commitments, tuple(uint256 X, uint256 Y) lookup_selector_commitment, tuple(uint256 X, uint256 Y)[4] lookup_tables_commitments, tuple(uint256 X, uint256 Y) lookup_table_type_commitment, tuple(uint256 value)[3] non_residues, tuple(uint256[2] X, uint256[2] Y)[2] g2_elements) vk, tuple(uint256[] input_values, tuple(uint256 X, uint256 Y)[4] state_polys_commitments, tuple(uint256 X, uint256 Y) copy_permutation_grand_product_commitment, tuple(uint256 X, uint256 Y)[4] quotient_poly_parts_commitments, tuple(uint256 value)[4] state_polys_openings_at_z, tuple(uint256 value)[1] state_polys_openings_at_z_omega, tuple(uint256 value)[1] gate_selectors_openings_at_z, tuple(uint256 value)[3] copy_permutation_polys_openings_at_z, tuple(uint256 value) copy_permutation_grand_product_opening_at_z_omega, tuple(uint256 value) quotient_poly_opening_at_z, tuple(uint256 value) linearization_poly_opening_at_z, tuple(uint256 X, uint256 Y) lookup_s_poly_commitment, tuple(uint256 X, uint256 Y) lookup_grand_product_commitment, tuple(uint256 value) lookup_s_poly_opening_at_z_omega, tuple(uint256 value) lookup_grand_product_opening_at_z_omega, tuple(uint256 value) lookup_t_poly_opening_at_z, tuple(uint256 value) lookup_t_poly_opening_at_z_omega, tuple(uint256 value) lookup_selector_poly_opening_at_z, tuple(uint256 value) lookup_table_type_poly_opening_at_z, tuple(uint256 X, uint256 Y) opening_proof_at_z, tuple(uint256 X, uint256 Y) opening_proof_at_z_omega) proof, tuple(tuple(uint256 value) zero, tuple(uint256 value) alpha, tuple(uint256 value) beta, tuple(uint256 value) gamma, tuple(uint256 value)[9] alpha_values, tuple(uint256 value) eta, tuple(uint256 value) beta_lookup, tuple(uint256 value) gamma_lookup, tuple(uint256 value) beta_plus_one, tuple(uint256 value) beta_gamma, tuple(uint256 value) v, tuple(uint256 value) u, tuple(uint256 value) z, tuple(uint256 value) z_omega, tuple(uint256 value) z_minus_last_omega, tuple(uint256 value) l_0_at_z, tuple(uint256 value) l_n_minus_one_at_z, tuple(uint256 value) t, tuple(uint256 X, uint256 Y) tp) state) view returns (tuple(uint256 X, uint256 Y) result)",
      "function verify_serialized_proof(uint256[] public_inputs, uint256[] serialized_proof) view returns (bool)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdf6358251654052987EFeD2EC9d2ae3511CdaaC9": [
      "constructor()",
      "event DiamondCutProposal(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] _facetCuts, address _initAddress)",
      "event DiamondCutProposalCancelation(uint256 currentProposalId, bytes32 indexed proposedDiamondCutHash)",
      "event DiamondCutProposalExecution(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)",
      "event EmergencyDiamondCutApproved(address indexed _address, uint256 currentProposalId, uint256 securityCouncilEmergencyApprovals, bytes32 indexed proposedDiamondCutHash)",
      "event EmergencyFreeze()",
      "event Unfreeze(uint256 lastDiamondFreezeTimestamp)",
      "function approveEmergencyDiamondCutAsSecurityCouncilMember(bytes32 _diamondCutHash)",
      "function cancelDiamondCutProposal()",
      "function emergencyFreezeDiamond()",
      "function executeDiamondCutProposal(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)",
      "function proposeDiamondCut(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] _facetCuts, address _initAddress)",
      "function unfreezeDiamond()"
    ],
    "0xeb9F40c4Ed46D39074aBe5Cd7E6C54679E5D04ED": [
      "constructor(address _mailbox, address _allowList)",
      "event ClaimedFailedDeposit(address indexed to, address indexed l1Token, uint256 amount)",
      "event DepositInitiated(address indexed from, address indexed to, address indexed l1Token, uint256 amount)",
      "event WithdrawalFinalized(address indexed to, address indexed l1Token, uint256 amount)",
      "function claimFailedDeposit(address _depositSender, address _l1Token, bytes32 _l2TxHash, uint256 _l2BlockNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBlock, bytes32[] _merkleProof)",
      "function deposit(address _l2Receiver, address _l1Token, uint256 _amount) payable returns (bytes32 txHash)",
      "function finalizeWithdrawal(uint256 _l2BlockNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBlock, bytes _message, bytes32[] _merkleProof)",
      "function initialize(bytes _l2BridgeBytecode)",
      "function isWithdrawalFinalized(uint256, uint256) view returns (bool)",
      "function l2Bridge() view returns (address)",
      "function l2TokenAddress(address) pure returns (address)"
    ]
  }
}