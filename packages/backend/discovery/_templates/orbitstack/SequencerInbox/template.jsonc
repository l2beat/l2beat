{
  "$schema": "../../../../../discovery/schemas/contract.v2.schema.json",
  "displayName": "SequencerInbox",
  "description": "A sequencer (registered in this contract) can submit transaction batches or commitments here.",
  "ignoreMethods": ["inboxAccs"],
  "ignoreInWatchMode": ["batchCount", "totalDelayedMessagesRead"],
  "ignoreRelatives": ["reader4844"],
  "fields": {
    "maxTimeVariation": {
      "description": "Settable by the Rollup Owner. Transactions can only be force-included after the `delayBlocks` window (Sequencer-only) has passed.",
      "returnType": "(uint256 delayBlocks, uint256 futureBlocks, uint256 delaySeconds, uint256 futureSeconds)"
    },
    "sequencerVersion": {
      "handler": {
        "type": "arbitrumSequencerVersion"
      }
    },
    "postsBlobs": {
      "handler": {
        "type": "orbitPostsBlobs"
      }
    },
    "batchPosterManager": {
      "target": {
        "permissions": [
          {
            "type": "configure",
            "description": "Add/remove batchPosters (Sequencers)."
          }
        ]
      }
    },
    "batchPosters": {
      "target": {
        "permissions": [
          {
            "type": "sequence",
            "description": "Can submit transaction batches or commitments to the SequencerInbox contract on the host chain."
          }
        ]
      },
      "handler": {
        "type": "arbitrumActors",
        "actorType": "batchPoster"
      }
    },
    // when this changes, it means the sequencers have changed
    "setIsBatchPosterCount": {
      "handler": {
        "type": "eventCount",
        "topics": [
          // event OwnerFunctionCalled(uint256 indexed id);
          "0xea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456e",
          // id == 6 is emitted inside setValidator()
          "0x0000000000000000000000000000000000000000000000000000000000000001"
        ]
      }
    },
    "dacKeyset": {
      "handler": {
        "type": "arbitrumDACKeyset"
      }
    },
    "keySetUpdates": {
      "handler": {
        "type": "eventCount",
        "topics": [
          // SetValidKeyset(bytes32,bytes)
          "0xabca9b7986bc22ad0160eb0cb88ae75411eacfba4052af0b457a9335ef655722"
        ]
      }
    }
  }
}
