{
  "$schema": "../../../../discovery/schemas/config.schema.json",
  "chain": "ethereum",
  "name": "rss3",
  "initialAddresses": [
    "0x938D0Bb4B584d4F6f793fCB7808cA2Eea15B69A8",
    "0x1D89222C28C3ba471be822203998f27Df4727C0b",
    "0x4cbab69108Aa72151EDa5A3c164eA86845f18438"
  ],
  "names": {
    "0x4cbab69108Aa72151EDa5A3c164eA86845f18438": "L1StandardBridge",
    "0x938D0Bb4B584d4F6f793fCB7808cA2Eea15B69A8": "L1ERC721Bridge",
    "0x1D89222C28C3ba471be822203998f27Df4727C0b": "OptimismMintableERC20Factory",
    "0x6A12432491bbbE8d3babf75F759766774C778Db4": "OptimismPortal",
    "0xE6f24d2C32B3109B18ed33cF08eFb490b1e09C10": "L2OutputOracle",
    "0x892CAa506c86C5101f5eC11C6f09589c9dC8A85C": "L1CrossDomainMessenger",
    "0x80e73D6BfC73c567032304C3891a06c2d9954d09": "SystemConfig",
    "0x8AC80fa0993D95C9d6B8Cb494E561E6731038941": "RSS3Multisig"
  },
  "overrides": {
    "OptimismPortal": {
      "ignoreMethods": ["isOutputFinalized"],
      "ignoreInWatchMode": ["params"]
    },
    "L2OutputOracle": {
      "ignoreMethods": [
        "getL2OutputAfter",
        "getL2OutputIndexAfter",
        "getL2Output",
        "computeL2Timestamp"
      ],
      "ignoreInWatchMode": [
        "nextBlockNumber",
        "nextOutputIndex",
        "latestBlockNumber",
        "latestOutputIndex"
      ],
      "fields": {
        "deletedOutputs": {
          "type": "stateFromEvent",
          "event": "OutputsDeleted",
          "returnParams": ["prevNextOutputIndex", "newNextOutputIndex"]
        }
      }
    },
    "RSS3Multisig": {
      "ignoreInWatchMode": ["nonce"]
    },
    "L1CrossDomainMessenger": {
      "ignoreMethods": ["xDomainMessageSender"],
      "ignoreInWatchMode": ["messageNonce"]
    },
    "SystemConfig": {
      "fields": {
        // this overrides the batcherHash method return type (bytes32 -> address) so our discovery detects it as an address
        "batcherHash": {
          "type": "call",
          "method": "function batcherHash() view returns (address)",
          "args": []
        },
        "opStackDA": {
          "type": "opStackDA",
          "sequencerAddress": "{{ batcherHash }}"
        },
        "sequencerInbox": {
          "type": "opStackSequencerInbox",
          "sequencerAddress": "{{ batcherHash }}"
        }
      }
    }
  },
  "AdminMultisig": {
    "ignoreInWatchMode": ["nonce"]
  }
}
