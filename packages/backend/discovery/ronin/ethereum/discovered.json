{
  "name": "ronin",
  "chain": "ethereum",
  "blockNumber": 20475186,
  "configHash": "0x24d40701ac57a1ca7d34bbfc1580f7dd67c0366e4e570f9fa3f302e7ad9b48be",
  "version": 13,
  "contracts": [
    {
      "name": "MainchainBridgeManager",
      "address": "0x2Cf3CFb17774Ce0CFa34bB3f3761904e7fc3FaDB",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x51F6696Ae42C6C40CA9F5955EcA2aaaB1Cefb26e",
          "via": []
        }
      ],
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x64192819Ac13Ef72bF6b5AE239AC672B43a9AF08",
          "via": []
        }
      ],
      "sinceTimestamp": 1722414335,
      "values": {
        "$admin": "0x51F6696Ae42C6C40CA9F5955EcA2aaaB1Cefb26e",
        "$implementation": "0x0ac26945032143f6196d4bb5Ae03592BfAf822FD",
        "$upgradeCount": 3,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          }
        },
        "DOMAIN_SEPARATOR": "0xb612fda8da4f3c711dafb8acbad69bd64f6a24e4dbf1b74f90488eafd1b13846",
        "getBridgeOperators": [
          "0xc23F2907Bc11848B5d5cEdBB835e915D7b760d99",
          "0x4b3844A29CFA5824F53e2137Edb6dc2b54501BeA",
          "0x4a4217d8751a027D853785824eF40522c512A3Fe",
          "0x32cB6da260726BB2192c4085B857aFD945A215Cb",
          "0xA91D05b7c6e684F43E8Fe0c25B3c4Bb1747A2a9E",
          "0xe38aFbE7738b6Ec4280A6bCa1176c1C1A928A19C",
          "0xE795F18F2F5DF5a666994e839b98263Dba86C902",
          "0xf4682B9263d1ba9bd9Db09dA125708607d1eDd3a",
          "0xF0c48B7F020BB61e6A3500AbC4b4954Bde7A2039",
          "0x063105D0E7215B703909a7274FE38393302F3134",
          "0xD9d5b3E58fa693B468a20C716793B18A1195380a",
          "0xff30Ed09E3AE60D39Bce1727ee3292fD76A6FAce",
          "0x8c4AD2DC12AdB9aD115e37EE9aD2e00E343EDf85",
          "0x73f5B22312B7B2B3B1Cd179fC62269aB369c8206",
          "0x5e04DC8156ce222289d52487dbAdCb01C8c990f9",
          "0x772112C7e5dD4ed663e844e79d77c1569a2E88ce",
          "0xEC5c90401F95F8c49b1E133E94F09D85b21d96a4",
          "0x332253265e36689D9830E57112CD1aaDB1A773f9",
          "0x236aF2FFdb611B14e3042A982d13EdA1627d9C96",
          "0x54C8C42F07007D43c3049bEF6f10eA68687d43ef",
          "0x66225AcC78Be789C57a11C9a18F051C779d678B5",
          "0x564DcB855Eb360826f27D1Eb9c57cbbe6C76F50F"
        ],
        "getCallbackRegisters": ["0x64192819Ac13Ef72bF6b5AE239AC672B43a9AF08"],
        "getGovernors": [
          "0xeD3805fB65FF51a99Fef4676BdBC97abecA93D11",
          "0xe880802580a1fbdeF67ACe39D1B21c5b2C74f059",
          "0x4B18CEBEB9797Ea594b5977109cc07b21c37E8c3",
          "0xA441f1399C8c023798586fbbBcF35f27279638a1",
          "0x72A69B04B59C36fCED19ac54209beF878e84FcBF",
          "0xe258f9996723B910712D6E67ADa4EafC15F7F101",
          "0x020Dd9a5e318695A61DDa88DB7Ad077Ec306e3E9",
          "0x60c4B72fc62b3e3a74e283aA9Ba20d61dD4d8F1b",
          "0x9B0612E43855ef9a7c329ee89653bA45273B550e",
          "0x47cfcb64f8EA44d6Ea7FAB32f13EFa2f8E65Eec1",
          "0xAD23e87306aa3c7B95ee760e86f40F3021E5Fa18",
          "0xbaCB04eA617b3E5EEe0E3f6E8FCB5Ba886B83958",
          "0x77Ab649Caa7B4b673C9f2cF069900DF48114d79D",
          "0x0DCA20728c8bb7173D3452559F40E95C60915799",
          "0x0d48aDbdc523681c0DEe736dbDc4497E02Bec210",
          "0x5832C3219c1dA998e828E1a2406B73dbFC02a70C",
          "0xED448901cC62be10c5525BA19645dDcA1fD9dA1D",
          "0x8d4f4e4ba313c4332e720445d8268E087D5C19b8",
          "0x58aBcBCAb52dEE942491700CD0DB67826BBAA8C6",
          "0x4620fb95eaBDaB4Bf681D987e116e0aAef1adEF2",
          "0xc092Fa0C772b3c850e676c57d8737BB39084B9AC",
          "0x3C583c0c97646a73843aE57b93f33e1995C8DC80"
        ],
        "getProposalExpiryDuration": "57896044618658097711785492504343953926634992332820282019728792003956564819968",
        "getThreshold": { "num": 7, "denom": 10 },
        "getTotalWeight": 2200,
        "minimumVoteWeight": 1540,
        "totalBridgeOperator": 22
      },
      "derivedName": "MainchainBridgeManager"
    },
    {
      "name": "RoninBridgeAdminMultiSig",
      "address": "0x2DA02aC5f19Ae362a4121718d990e655eB628D96",
      "sinceTimestamp": 1562142059,
      "values": {
        "$immutable": true,
        "calcMaxWithdraw": 0,
        "dailyLimit": 0,
        "getOwners": [
          "0xE5EB222996967BE79468C28bA39D665fd96E8b30",
          "0x6bfC8F9096446d350713C4eB9d9b68866F87a9d0",
          "0xaD99Fc4d593bAe582c2Ca83aCD98Ae6fcDb36192"
        ],
        "lastDay": 1653566443,
        "MAX_OWNER_COUNT": 50,
        "owners": [
          "0xE5EB222996967BE79468C28bA39D665fd96E8b30",
          "0x6bfC8F9096446d350713C4eB9d9b68866F87a9d0",
          "0xaD99Fc4d593bAe582c2Ca83aCD98Ae6fcDb36192"
        ],
        "required": 2,
        "spentToday": 0,
        "transactionCount": 25
      },
      "derivedName": "MultiSigWalletWithDailyLimit"
    },
    {
      "name": "GnosisSafe",
      "address": "0x51F6696Ae42C6C40CA9F5955EcA2aaaB1Cefb26e",
      "template": "GnosisSafe",
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x2Cf3CFb17774Ce0CFa34bB3f3761904e7fc3FaDB",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1722594755,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x4BFEc2a63B72c67e6c3f599fCc40E1d42AE519ff",
          "0x18471CC6d2d427077CAA7896D7956cD066CAbe49",
          "0xC93f43dbbf0a1346D9E0d623B68d78891b131Bf9",
          "0xFE1a01580d7Cd7EC333DDC087b2c4DE3226f6031",
          "0xa1aD1835f9c42842d348d9Ed1423C9075B8DA40b"
        ],
        "$threshold": 3,
        "domainSeparator": "0x260019f7a2799f89a2c91d123a9a78a94ce81ef7e965cb34ba0364d12a9526d4",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 2,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "MainchainGateway",
      "address": "0x64192819Ac13Ef72bF6b5AE239AC672B43a9AF08",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x2Cf3CFb17774Ce0CFa34bB3f3761904e7fc3FaDB",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["depositCount"],
      "sinceTimestamp": 1655883630,
      "values": {
        "_MAX_PERCENTAGE": 1000000,
        "$admin": "0x2Cf3CFb17774Ce0CFa34bB3f3761904e7fc3FaDB",
        "$implementation": "0xfc274EC92bBb1A1472884558d1B5CaaC6F8220Ee",
        "$upgradeCount": 5,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x2DA02aC5f19Ae362a4121718d990e655eB628D96"]
          },
          "WITHDRAWAL_UNLOCKER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "0x58a8DcFdeF9BB5E164382562317C13D6F2A706F4",
              "0xE5EB222996967BE79468C28bA39D665fd96E8b30",
              "0x6bfC8F9096446d350713C4eB9d9b68866F87a9d0",
              "0xaD99Fc4d593bAe582c2Ca83aCD98Ae6fcDb36192"
            ]
          }
        },
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "depositCount": 92280,
        "DOMAIN_SEPARATOR": "0x2b00d883a78a8b8d324cfe3cc451d9550b8509512a316b5dba270df178853071",
        "emergencyPauser": "0xe514d9DEB7966c8BE0ca922de8a064264eA6bcd4",
        "getHighTierVoteWeightThreshold": [90, 100],
        "getThreshold": { "num_": 70, "denom_": 100 },
        "minimumVoteWeight": 0,
        "nonce": 2,
        "paused": true,
        "roninChainId": 2020,
        "wethUnwrapper": "0x8048b12511d9BE6e4e094089b12f54923C4E2F83",
        "WITHDRAWAL_UNLOCKER_ROLE": "0x5e5712e902fff5e704bc4d506ad976718319e019e9d2a872528a01a85db433e4",
        "wrappedNativeToken": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "derivedName": "MainchainGatewayV3"
    },
    {
      "name": "WethUnwrapper",
      "address": "0x8048b12511d9BE6e4e094089b12f54923C4E2F83",
      "sinceTimestamp": 1722414851,
      "values": {
        "$immutable": true,
        "weth": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      }
    },
    {
      "name": "WETH9",
      "address": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1513077455,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "name": "Wrapped Ether",
        "symbol": "WETH",
        "totalSupply": "2845505817517930275470599"
      },
      "derivedName": "WETH9"
    },
    {
      "name": "PauseEnforcer",
      "address": "0xe514d9DEB7966c8BE0ca922de8a064264eA6bcd4",
      "sinceTimestamp": 1679637023,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x2DA02aC5f19Ae362a4121718d990e655eB628D96"]
          },
          "SENTRY_ROLE": { "adminRole": "DEFAULT_ADMIN_ROLE", "members": [] }
        },
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "emergency": true,
        "SENTRY_ROLE": "0x5bea60102f2a7acc9e82b1af0e3bd4069661102bb5dd143a6051cd1980dded1c",
        "target": "0x64192819Ac13Ef72bF6b5AE239AC672B43a9AF08"
      },
      "derivedName": "PauseEnforcer"
    }
  ],
  "eoas": [
    { "address": "0x020Dd9a5e318695A61DDa88DB7Ad077Ec306e3E9" },
    { "address": "0x063105D0E7215B703909a7274FE38393302F3134" },
    { "address": "0x0d48aDbdc523681c0DEe736dbDc4497E02Bec210" },
    { "address": "0x0DCA20728c8bb7173D3452559F40E95C60915799" },
    { "address": "0x18471CC6d2d427077CAA7896D7956cD066CAbe49" },
    { "address": "0x236aF2FFdb611B14e3042A982d13EdA1627d9C96" },
    { "address": "0x32cB6da260726BB2192c4085B857aFD945A215Cb" },
    { "address": "0x332253265e36689D9830E57112CD1aaDB1A773f9" },
    { "address": "0x3C583c0c97646a73843aE57b93f33e1995C8DC80" },
    { "address": "0x4620fb95eaBDaB4Bf681D987e116e0aAef1adEF2" },
    { "address": "0x47cfcb64f8EA44d6Ea7FAB32f13EFa2f8E65Eec1" },
    { "address": "0x4a4217d8751a027D853785824eF40522c512A3Fe" },
    { "address": "0x4B18CEBEB9797Ea594b5977109cc07b21c37E8c3" },
    { "address": "0x4b3844A29CFA5824F53e2137Edb6dc2b54501BeA" },
    { "address": "0x4BFEc2a63B72c67e6c3f599fCc40E1d42AE519ff" },
    { "address": "0x54C8C42F07007D43c3049bEF6f10eA68687d43ef" },
    { "address": "0x564DcB855Eb360826f27D1Eb9c57cbbe6C76F50F" },
    { "address": "0x5832C3219c1dA998e828E1a2406B73dbFC02a70C" },
    { "address": "0x58a8DcFdeF9BB5E164382562317C13D6F2A706F4" },
    { "address": "0x58aBcBCAb52dEE942491700CD0DB67826BBAA8C6" },
    { "address": "0x5e04DC8156ce222289d52487dbAdCb01C8c990f9" },
    { "address": "0x60c4B72fc62b3e3a74e283aA9Ba20d61dD4d8F1b" },
    { "address": "0x66225AcC78Be789C57a11C9a18F051C779d678B5" },
    { "address": "0x6bfC8F9096446d350713C4eB9d9b68866F87a9d0" },
    { "address": "0x72A69B04B59C36fCED19ac54209beF878e84FcBF" },
    { "address": "0x73f5B22312B7B2B3B1Cd179fC62269aB369c8206" },
    { "address": "0x772112C7e5dD4ed663e844e79d77c1569a2E88ce" },
    { "address": "0x77Ab649Caa7B4b673C9f2cF069900DF48114d79D" },
    { "address": "0x8c4AD2DC12AdB9aD115e37EE9aD2e00E343EDf85" },
    { "address": "0x8d4f4e4ba313c4332e720445d8268E087D5C19b8" },
    { "address": "0x9B0612E43855ef9a7c329ee89653bA45273B550e" },
    { "address": "0xa1aD1835f9c42842d348d9Ed1423C9075B8DA40b" },
    { "address": "0xA441f1399C8c023798586fbbBcF35f27279638a1" },
    { "address": "0xA91D05b7c6e684F43E8Fe0c25B3c4Bb1747A2a9E" },
    { "address": "0xAD23e87306aa3c7B95ee760e86f40F3021E5Fa18" },
    { "address": "0xaD99Fc4d593bAe582c2Ca83aCD98Ae6fcDb36192" },
    { "address": "0xbaCB04eA617b3E5EEe0E3f6E8FCB5Ba886B83958" },
    { "address": "0xc092Fa0C772b3c850e676c57d8737BB39084B9AC" },
    { "address": "0xc23F2907Bc11848B5d5cEdBB835e915D7b760d99" },
    { "address": "0xC93f43dbbf0a1346D9E0d623B68d78891b131Bf9" },
    { "address": "0xD9d5b3E58fa693B468a20C716793B18A1195380a" },
    { "address": "0xe258f9996723B910712D6E67ADa4EafC15F7F101" },
    { "address": "0xe38aFbE7738b6Ec4280A6bCa1176c1C1A928A19C" },
    { "address": "0xE5EB222996967BE79468C28bA39D665fd96E8b30" },
    { "address": "0xE795F18F2F5DF5a666994e839b98263Dba86C902" },
    { "address": "0xe880802580a1fbdeF67ACe39D1B21c5b2C74f059" },
    { "address": "0xEC5c90401F95F8c49b1E133E94F09D85b21d96a4" },
    { "address": "0xeD3805fB65FF51a99Fef4676BdBC97abecA93D11" },
    { "address": "0xED448901cC62be10c5525BA19645dDcA1fD9dA1D" },
    { "address": "0xF0c48B7F020BB61e6A3500AbC4b4954Bde7A2039" },
    { "address": "0xf4682B9263d1ba9bd9Db09dA125708607d1eDd3a" },
    { "address": "0xFE1a01580d7Cd7EC333DDC087b2c4DE3226f6031" },
    { "address": "0xff30Ed09E3AE60D39Bce1727ee3292fD76A6FAce" }
  ],
  "abis": {
    "0x0ac26945032143f6196d4bb5Ae03592BfAf822FD": [
      "error ErrBelowMinRequiredGovernors()",
      "error ErrContractTypeNotFound(uint8 contractType)",
      "error ErrCurrentProposalIsNotCompleted()",
      "error ErrDuplicated(bytes4 msgSig)",
      "error ErrExistOneInternalCallFailed(address sender, bytes4 msgSig, bytes callData)",
      "error ErrGovernorNotFound(address governor)",
      "error ErrGovernorNotMatch(address required, address sender)",
      "error ErrInsufficientGas(bytes32 proposalHash)",
      "error ErrInvalidArguments(bytes4 msgSig)",
      "error ErrInvalidChainId(bytes4 msgSig, uint256 actual, uint256 expected)",
      "error ErrInvalidExpiryTimestamp()",
      "error ErrInvalidInput()",
      "error ErrInvalidOrder(bytes4 msgSig)",
      "error ErrInvalidProposalNonce(bytes4 msgSig)",
      "error ErrInvalidThreshold(bytes4 msgSig)",
      "error ErrInvalidVoteWeight(bytes4 msgSig)",
      "error ErrLengthMismatch(bytes4 msgSig)",
      "error ErrLooseProposalInternallyRevert(uint256 callIndex, bytes revertMsg)",
      "error ErrNonExecutorCannotRelay(address executor, address caller)",
      "error ErrOnlySelfCall(bytes4 msgSig)",
      "error ErrOperatorNotFound(address operator)",
      "error ErrRelayFailed(bytes4 msgSig)",
      "error ErrUnauthorized(bytes4 msgSig, uint8 expectedRole)",
      "error ErrUnsupportedInterface(bytes4 interfaceId, address addr)",
      "error ErrUnsupportedVoteType(bytes4 msgSig)",
      "error ErrVoteIsFinalized()",
      "error ErrZeroAddress(bytes4 msgSig)",
      "error ErrZeroCodeContract(address addr)",
      "event BridgeOperatorAddingFailed(address indexed operator)",
      "event BridgeOperatorRemovingFailed(address indexed operator)",
      "event BridgeOperatorUpdated(address indexed governor, address indexed fromBridgeOperator, address indexed toBridgeOperator)",
      "event BridgeOperatorsAdded(bool[] statuses, uint96[] voteWeights, address[] governors, address[] bridgeOperators)",
      "event BridgeOperatorsRemoved(bool[] statuses, address[] bridgeOperators)",
      "event CallbackRegistered(address, bool)",
      "event ContractUpdated(uint8 indexed contractType, address indexed addr)",
      "event GlobalProposalCreated(uint256 indexed round, bytes32 indexed proposalHash, tuple(uint256 nonce, uint256 chainId, uint256 expiryTimestamp, address executor, address[] targets, uint256[] values, bytes[] calldatas, uint256[] gasAmounts) proposal, bytes32 globalProposalHash, tuple(uint256 nonce, uint256 expiryTimestamp, address executor, uint8[] targetOptions, uint256[] values, bytes[] calldatas, uint256[] gasAmounts) globalProposal, address creator)",
      "event Initialized(uint8 version)",
      "event MinRequiredGovernorUpdated(uint256 min)",
      "event Notified(bytes callData, address[] registers, bool[] statuses, bytes[] returnDatas)",
      "event ProposalApproved(bytes32 indexed proposalHash)",
      "event ProposalCreated(uint256 indexed chainId, uint256 indexed round, bytes32 indexed proposalHash, tuple(uint256 nonce, uint256 chainId, uint256 expiryTimestamp, address executor, address[] targets, uint256[] values, bytes[] calldatas, uint256[] gasAmounts) proposal, address creator)",
      "event ProposalExecuted(bytes32 indexed proposalHash, bool[] successCalls, bytes[] returnDatas)",
      "event ProposalExpired(bytes32 indexed proposalHash)",
      "event ProposalExpiryDurationChanged(uint256 indexed duration)",
      "event ProposalRejected(bytes32 indexed proposalHash)",
      "event ProposalVoted(bytes32 indexed proposalHash, address indexed voter, uint8 support, uint256 weight)",
      "event TargetOptionUpdated(uint8 indexed targetOption, address indexed addr)",
      "event ThresholdUpdated(uint256 indexed nonce, uint256 indexed numerator, uint256 indexed denominator, uint256 previousNumerator, uint256 previousDenominator)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function addBridgeOperators(uint96[] voteWeights, address[] governors, address[] bridgeOperators)",
      "function checkThreshold(uint256 voteWeight) view returns (bool)",
      "function getBridgeOperatorWeight(address bridgeOperator) view returns (uint96 weight)",
      "function getBridgeOperators() view returns (address[])",
      "function getCallbackRegisters() view returns (address[] registers)",
      "function getContract(uint8 contractType) view returns (address contract_)",
      "function getFullBridgeOperatorInfos() view returns (address[] governors, address[] bridgeOperators, uint96[] weights)",
      "function getGovernorOf(address operator) view returns (address governor)",
      "function getGovernorWeight(address governor) view returns (uint96 weight)",
      "function getGovernorWeights(address[] governors) view returns (uint96[] weights)",
      "function getGovernors() view returns (address[])",
      "function getOperatorOf(address governor) view returns (address operator)",
      "function getProposalExpiryDuration() view returns (uint256)",
      "function getThreshold() view returns (uint256 num, uint256 denom)",
      "function getTotalWeight() view returns (uint256)",
      "function globalProposalRelayed(uint256 _round) view returns (bool)",
      "function initialize(uint256 num, uint256 denom, uint256 roninChainId, address bridgeContract, address[] callbackRegisters, address[] bridgeOperators, address[] governors, uint96[] voteWeights, uint8[] targetOptions, address[] targets)",
      "function isBridgeOperator(address addr) view returns (bool)",
      "function minimumVoteWeight() view returns (uint256)",
      "function registerCallbacks(address[] registers)",
      "function relayGlobalProposal(tuple(uint256 nonce, uint256 expiryTimestamp, address executor, uint8[] targetOptions, uint256[] values, bytes[] calldatas, uint256[] gasAmounts) globalProposal, uint8[] supports_, tuple(uint8 v, bytes32 r, bytes32 s)[] signatures)",
      "function relayProposal(tuple(uint256 nonce, uint256 chainId, uint256 expiryTimestamp, address executor, address[] targets, uint256[] values, bytes[] calldatas, uint256[] gasAmounts) proposal, uint8[] supports_, tuple(uint8 v, bytes32 r, bytes32 s)[] signatures)",
      "function removeBridgeOperators(address[] bridgeOperators)",
      "function resolveTargets(uint8[] targetOptions) view returns (address[] targets)",
      "function round(uint256) view returns (uint256)",
      "function setContract(uint8 contractType, address addr)",
      "function setMinRequiredGovernor(uint256 min)",
      "function setThreshold(uint256 num, uint256 denom)",
      "function sumGovernorsWeight(address[] governors) view returns (uint256 sum)",
      "function totalBridgeOperator() view returns (uint256)",
      "function unregisterCallbacks(address[] registers)",
      "function updateManyTargetOption(uint8[] targetOptions, address[] targets)",
      "function vote(uint256, uint256) view returns (uint8 status, bytes32 hash, uint256 againstVoteWeight, uint256 forVoteWeight, uint256 expiryTimestamp)"
    ],
    "0x2Cf3CFb17774Ce0CFa34bB3f3761904e7fc3FaDB": [
      "constructor(address logic, address admin, bytes data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function functionDelegateCall(bytes data) payable"
    ],
    "0x2DA02aC5f19Ae362a4121718d990e655eB628D96": [
      "function owners(uint256) view returns (address)",
      "function removeOwner(address owner)",
      "function revokeConfirmation(uint256 transactionId)",
      "function isOwner(address) view returns (bool)",
      "function confirmations(uint256, address) view returns (bool)",
      "function calcMaxWithdraw() view returns (uint256)",
      "function getTransactionCount(bool pending, bool executed) view returns (uint256 count)",
      "function dailyLimit() view returns (uint256)",
      "function lastDay() view returns (uint256)",
      "function addOwner(address owner)",
      "function isConfirmed(uint256 transactionId) view returns (bool)",
      "function getConfirmationCount(uint256 transactionId) view returns (uint256 count)",
      "function transactions(uint256) view returns (address destination, uint256 value, bytes data, bool executed)",
      "function getOwners() view returns (address[])",
      "function getTransactionIds(uint256 from, uint256 to, bool pending, bool executed) view returns (uint256[] _transactionIds)",
      "function getConfirmations(uint256 transactionId) view returns (address[] _confirmations)",
      "function transactionCount() view returns (uint256)",
      "function changeRequirement(uint256 _required)",
      "function confirmTransaction(uint256 transactionId)",
      "function submitTransaction(address destination, uint256 value, bytes data) returns (uint256 transactionId)",
      "function changeDailyLimit(uint256 _dailyLimit)",
      "function MAX_OWNER_COUNT() view returns (uint256)",
      "function required() view returns (uint256)",
      "function replaceOwner(address owner, address newOwner)",
      "function executeTransaction(uint256 transactionId)",
      "function spentToday() view returns (uint256)",
      "constructor(address[] _owners, uint256 _required, uint256 _dailyLimit)",
      "event DailyLimitChange(uint256 dailyLimit)",
      "event Confirmation(address indexed sender, uint256 indexed transactionId)",
      "event Revocation(address indexed sender, uint256 indexed transactionId)",
      "event Submission(uint256 indexed transactionId)",
      "event Execution(uint256 indexed transactionId)",
      "event ExecutionFailure(uint256 indexed transactionId)",
      "event Deposit(address indexed sender, uint256 value)",
      "event OwnerAddition(address indexed owner)",
      "event OwnerRemoval(address indexed owner)",
      "event RequirementChange(uint256 required)"
    ],
    "0x51F6696Ae42C6C40CA9F5955EcA2aaaB1Cefb26e": [
      "constructor(address _singleton)"
    ],
    "0x64192819Ac13Ef72bF6b5AE239AC672B43a9AF08": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function functionDelegateCall(bytes _data) payable",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8048b12511d9BE6e4e094089b12f54923C4E2F83": [
      "constructor(address weth_)",
      "error ErrCannotTransferFrom()",
      "error ErrExternalCallFailed(address sender, bytes4 sig)",
      "error ErrNotWrappedContract()",
      "function unwrap(uint256 amount)",
      "function unwrapTo(uint256 amount, address to)",
      "function weth() view returns (address)"
    ],
    "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2": [
      "function name() view returns (string)",
      "function approve(address guy, uint256 wad) returns (bool)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address src, address dst, uint256 wad) returns (bool)",
      "function withdraw(uint256 wad)",
      "function decimals() view returns (uint8)",
      "function balanceOf(address) view returns (uint256)",
      "function symbol() view returns (string)",
      "function transfer(address dst, uint256 wad) returns (bool)",
      "function deposit() payable",
      "function allowance(address, address) view returns (uint256)",
      "event Approval(address indexed src, address indexed guy, uint256 wad)",
      "event Transfer(address indexed src, address indexed dst, uint256 wad)",
      "event Deposit(address indexed dst, uint256 wad)",
      "event Withdrawal(address indexed src, uint256 wad)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xe514d9DEB7966c8BE0ca922de8a064264eA6bcd4": [
      "constructor(address _target, address _admin, address[] _sentries)",
      "event EmergencyPaused(address account)",
      "event EmergencyUnpaused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function SENTRY_ROLE() view returns (bytes32)",
      "function emergency() view returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function grantSentry(address _sentry)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function resetEmergency()",
      "function revokeRole(bytes32 role, address account)",
      "function revokeSentry(address _sentry)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function target() view returns (address)",
      "function triggerPause()",
      "function triggerUnpause()"
    ],
    "0xfc274EC92bBb1A1472884558d1B5CaaC6F8220Ee": [
      "constructor()",
      "error ErrContractTypeNotFound(uint8 contractType)",
      "error ErrERC1155MintingFailed()",
      "error ErrERC20MintingFailed()",
      "error ErrERC721MintingFailed()",
      "error ErrEmptyArray()",
      "error ErrInvalidChainId(bytes4 msgSig, uint256 actual, uint256 expected)",
      "error ErrInvalidInfo()",
      "error ErrInvalidOrder(bytes4 msgSig)",
      "error ErrInvalidPercentage()",
      "error ErrInvalidReceipt()",
      "error ErrInvalidReceiptKind()",
      "error ErrInvalidRequest()",
      "error ErrInvalidThreshold(bytes4 msgSig)",
      "error ErrInvalidTokenStandard()",
      "error ErrLengthMismatch(bytes4 msgSig)",
      "error ErrQueryForApprovedWithdrawal()",
      "error ErrQueryForInsufficientVoteWeight()",
      "error ErrQueryForProcessedWithdrawal()",
      "error ErrReachedDailyWithdrawalLimit()",
      "error ErrTokenCouldNotTransfer(tuple(uint8 erc, uint256 id, uint256 quantity) tokenInfo, address to, address token)",
      "error ErrTokenCouldNotTransferFrom(tuple(uint8 erc, uint256 id, uint256 quantity) tokenInfo, address from, address to, address token)",
      "error ErrUnauthorized(bytes4 msgSig, uint8 expectedRole)",
      "error ErrUnexpectedInternalCall(bytes4 msgSig, uint8 expectedContractType, address actual)",
      "error ErrUnsupportedStandard()",
      "error ErrUnsupportedToken()",
      "error ErrZeroCodeContract(address addr)",
      "event ContractUpdated(uint8 indexed contractType, address indexed addr)",
      "event DailyWithdrawalLimitsUpdated(address[] tokens, uint256[] limits)",
      "event DepositRequested(bytes32 receiptHash, tuple(uint256 id, uint8 kind, tuple(address addr, address tokenAddr, uint256 chainId) mainchain, tuple(address addr, address tokenAddr, uint256 chainId) ronin, tuple(uint8 erc, uint256 id, uint256 quantity) info) receipt)",
      "event HighTierThresholdsUpdated(address[] tokens, uint256[] thresholds)",
      "event HighTierVoteWeightThresholdUpdated(uint256 indexed nonce, uint256 indexed numerator, uint256 indexed denominator, uint256 previousNumerator, uint256 previousDenominator)",
      "event Initialized(uint8 version)",
      "event LockedThresholdsUpdated(address[] tokens, uint256[] thresholds)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event ThresholdUpdated(uint256 indexed nonce, uint256 indexed numerator, uint256 indexed denominator, uint256 previousNumerator, uint256 previousDenominator)",
      "event TokenMapped(address[] mainchainTokens, address[] roninTokens, uint8[] standards)",
      "event UnlockFeePercentagesUpdated(address[] tokens, uint256[] percentages)",
      "event Unpaused(address account)",
      "event WithdrawalLocked(bytes32 receiptHash, tuple(uint256 id, uint8 kind, tuple(address addr, address tokenAddr, uint256 chainId) mainchain, tuple(address addr, address tokenAddr, uint256 chainId) ronin, tuple(uint8 erc, uint256 id, uint256 quantity) info) receipt)",
      "event WithdrawalUnlocked(bytes32 receiptHash, tuple(uint256 id, uint8 kind, tuple(address addr, address tokenAddr, uint256 chainId) mainchain, tuple(address addr, address tokenAddr, uint256 chainId) ronin, tuple(uint8 erc, uint256 id, uint256 quantity) info) receipt)",
      "event Withdrew(bytes32 receiptHash, tuple(uint256 id, uint8 kind, tuple(address addr, address tokenAddr, uint256 chainId) mainchain, tuple(address addr, address tokenAddr, uint256 chainId) ronin, tuple(uint8 erc, uint256 id, uint256 quantity) info) receipt)",
      "event WrappedNativeTokenContractUpdated(address weth)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function WITHDRAWAL_UNLOCKER_ROLE() view returns (bytes32)",
      "function _MAX_PERCENTAGE() view returns (uint256)",
      "function checkHighTierVoteWeightThreshold(uint256 _voteWeight) view returns (bool)",
      "function checkThreshold(uint256 _voteWeight) view returns (bool)",
      "function dailyWithdrawalLimit(address) view returns (uint256)",
      "function depositCount() view returns (uint256)",
      "function emergencyPauser() view returns (address)",
      "function getContract(uint8 contractType) view returns (address contract_)",
      "function getHighTierVoteWeightThreshold() view returns (uint256, uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getRoninToken(address mainchainToken) view returns (tuple(uint8 erc, address tokenAddr) token)",
      "function getThreshold() view returns (uint256 num_, uint256 denom_)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function highTierThreshold(address) view returns (uint256)",
      "function initialize(address _roleSetter, address _wrappedToken, uint256 _roninChainId, uint256 _numerator, uint256 _highTierVWNumerator, uint256 _denominator, address[][3] _addresses, uint256[][4] _thresholds, uint8[] _standards) payable",
      "function initializeV2(address bridgeManagerContract)",
      "function initializeV3()",
      "function initializeV4(address wethUnwrapper_)",
      "function lastDateSynced(address) view returns (uint256)",
      "function lastSyncedWithdrawal(address) view returns (uint256)",
      "function lockedThreshold(address) view returns (uint256)",
      "function mapTokens(address[] _mainchainTokens, address[] _roninTokens, uint8[] _standards)",
      "function mapTokensAndThresholds(address[] _mainchainTokens, address[] _roninTokens, uint8[] _standards, uint256[][4] _thresholds)",
      "function minimumVoteWeight() view returns (uint256)",
      "function nonce() view returns (uint256)",
      "function onBridgeOperatorsAdded(address[] operators, uint96[] weights, bool[] addeds) returns (bytes4)",
      "function onBridgeOperatorsRemoved(address[] operators, bool[] removeds) returns (bytes4)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function pause()",
      "function paused() view returns (bool)",
      "function reachedWithdrawalLimit(address _token, uint256 _quantity) view returns (bool)",
      "function receiveEther() payable",
      "function renounceRole(bytes32 role, address account)",
      "function requestDepositFor(tuple(address recipientAddr, address tokenAddr, tuple(uint8 erc, uint256 id, uint256 quantity) info) _request) payable",
      "function requestDepositForBatch(tuple(address recipientAddr, address tokenAddr, tuple(uint8 erc, uint256 id, uint256 quantity) info)[] _requests) payable",
      "function revokeRole(bytes32 role, address account)",
      "function roninChainId() view returns (uint256)",
      "function setContract(uint8 contractType, address addr)",
      "function setDailyWithdrawalLimits(address[] _tokens, uint256[] _limits)",
      "function setEmergencyPauser(address _addr)",
      "function setHighTierThresholds(address[] _tokens, uint256[] _thresholds)",
      "function setHighTierVoteWeightThreshold(uint256 _numerator, uint256 _denominator) returns (uint256 _previousNum, uint256 _previousDenom)",
      "function setLockedThresholds(address[] _tokens, uint256[] _thresholds)",
      "function setThreshold(uint256 num, uint256 denom)",
      "function setUnlockFeePercentages(address[] _tokens, uint256[] _percentages)",
      "function setWrappedNativeTokenContract(address _wrappedToken)",
      "function submitWithdrawal(tuple(uint256 id, uint8 kind, tuple(address addr, address tokenAddr, uint256 chainId) mainchain, tuple(address addr, address tokenAddr, uint256 chainId) ronin, tuple(uint8 erc, uint256 id, uint256 quantity) info) _receipt, tuple(uint8 v, bytes32 r, bytes32 s)[] _signatures) returns (bool _locked)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unlockFeePercentages(address) view returns (uint256)",
      "function unlockWithdrawal(tuple(uint256 id, uint8 kind, tuple(address addr, address tokenAddr, uint256 chainId) mainchain, tuple(address addr, address tokenAddr, uint256 chainId) ronin, tuple(uint8 erc, uint256 id, uint256 quantity) info) receipt)",
      "function unpause()",
      "function wethUnwrapper() view returns (address)",
      "function withdrawalHash(uint256) view returns (bytes32)",
      "function withdrawalLocked(uint256) view returns (bool)",
      "function wrappedNativeToken() view returns (address)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x55dd1039f19d840b39ef504eac8a631b912d707343588aed9ac96bd4e874f837"
  },
  "shapeFilesHash": "0xd03139725da7a90ddc934f324db29bfdcf99b30f55f1e1e28ed09af948c5cf67"
}
