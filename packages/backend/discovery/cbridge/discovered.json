{
  "name": "cbridge",
  "blockNumber": 17434738,
  "configHash": "0x4be3660c5fe27322487aa373120498caaf82298e62fe28cc807033487998d466",
  "version": 1,
  "contracts": [
    {
      "name": "PeggedTokenBridge",
      "address": "0x16365b45EB269B5B5dACB34B4a15399Ec79b95eB",
      "code": "https://etherscan.deth.net/address/0x16365b45EB269B5B5dACB34B4a15399Ec79b95eB",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "delayPeriod": 1800,
        "epochLength": 1800,
        "owner": "0xF380166F8490F24AF32Bf47D1aA217FBA62B6575",
        "paused": false,
        "sigsVerifier": "0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820"
      }
    },
    {
      "name": "MessageBus",
      "address": "0x4066D196A423b2b3B8B054f4F40efB47a74E200C",
      "code": "https://etherscan.deth.net/address/0x4066D196A423b2b3B8B054f4F40efB47a74E200C,0x479ec366ae4EC016cE25B918BdEa8f78d4fa5dd8",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x479ec366ae4EC016cE25B918BdEa8f78d4fa5dd8",
        "admin": "0x520d812604E7b2ce71819FDBFE9aC40E56327F8f"
      },
      "values": {
        "feeBase": 15000000000000,
        "feePerByte": 150000000000,
        "liquidityBridge": "0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820",
        "owner": "0x606d8cFd3f4Ed07314F5A1F1802dd4663308b175",
        "pegBridge": "0x16365b45EB269B5B5dACB34B4a15399Ec79b95eB",
        "pegBridgeV2": "0x52E4f244f380f8fA51816c8a10A63105dd4De084",
        "pegVault": "0xB37D31b2A74029B5951a2778F959282E2D518595",
        "pegVaultV2": "0x7510792A3B1969F9307F3845CE88e39578f2bAE1",
        "preExecuteMessageGasUsage": 0,
        "sigsVerifier": "0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x520d812604E7b2ce71819FDBFE9aC40E56327F8f",
      "code": "https://etherscan.deth.net/address/0x520d812604E7b2ce71819FDBFE9aC40E56327F8f",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "PeggedTokenBridgeV2",
      "address": "0x52E4f244f380f8fA51816c8a10A63105dd4De084",
      "code": "https://etherscan.deth.net/address/0x52E4f244f380f8fA51816c8a10A63105dd4De084",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "delayPeriod": 1800,
        "epochLength": 1800,
        "owner": "0xF380166F8490F24AF32Bf47D1aA217FBA62B6575",
        "paused": false,
        "sigsVerifier": "0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820"
      }
    },
    {
      "name": "Liquidity Network",
      "address": "0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820",
      "code": "https://etherscan.deth.net/address/0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "addseq": 4931,
        "delayPeriod": 1800,
        "epochLength": 1800,
        "governors": [
          "0x34dFa1226F8b3E36FE597B34eEa809a2B5c0bBf9",
          "0x9Ad3A3ca7d6B14E830De247c8ca3FaD9D4c9d88C",
          "0xED9fdF5B16F9F254bec5Ad389B80B48225186655",
          "0x40C11BddeB38Dec685Eed3586BAeBf086fac9dA0"
        ],
        "minimalMaxSlippage": 500,
        "nativeWrap": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "noticePeriod": 604800,
        "owner": "0xF380166F8490F24AF32Bf47D1aA217FBA62B6575",
        "paused": false,
        "pausers": [
          "0xDfE4F07D1F36B8d559b25082460a4f6A72531de2",
          "0x34dFa1226F8b3E36FE597B34eEa809a2B5c0bBf9",
          "0x2FB8783C14A71C08bFC1dE8Fc3D715Dd93039BF2",
          "0x9Ad3A3ca7d6B14E830De247c8ca3FaD9D4c9d88C",
          "0xED9fdF5B16F9F254bec5Ad389B80B48225186655",
          "0xE45CB56CEe56Dd1A94F7E5fBDFaa5BaFB3C053d3"
        ],
        "resetTime": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "ssHash": "0xea8b8437560cf561f40815fc1be1af5e4a966dc84560f4c231e9f0b9a2c4afc5",
        "triggerTime": 1685968236
      },
      "derivedName": "Bridge"
    },
    {
      "name": "MessageBusOwner",
      "address": "0x606d8cFd3f4Ed07314F5A1F1802dd4663308b175",
      "code": "https://etherscan.deth.net/address/0x606d8cFd3f4Ed07314F5A1F1802dd4663308b175",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getVoters": [
          [
            "0x1b9dFC56e38b0F92448659C114e2347Bd803911c",
            "0x34dFa1226F8b3E36FE597B34eEa809a2B5c0bBf9",
            "0xDfE4F07D1F36B8d559b25082460a4f6A72531de2",
            "0x9F6B03Cb6d8AB8239cF1045Ab28B9Df43dfCC823",
            "0x2FB8783C14A71C08bFC1dE8Fc3D715Dd93039BF2"
          ],
          [10000, 10000, 10000, 10000, 10000]
        ],
        "MAX_ACTIVE_PERIOD": 2419200,
        "MIN_ACTIVE_PERIOD": 3600,
        "THRESHOLD_DECIMAL": 100
      },
      "derivedName": "MessageBusOwner"
    },
    {
      "name": "OriginalTokenVaultV2",
      "address": "0x7510792A3B1969F9307F3845CE88e39578f2bAE1",
      "code": "https://etherscan.deth.net/address/0x7510792A3B1969F9307F3845CE88e39578f2bAE1",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "delayPeriod": 1800,
        "epochLength": 1800,
        "nativeWrap": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "owner": "0xF380166F8490F24AF32Bf47D1aA217FBA62B6575",
        "paused": false,
        "sigsVerifier": "0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820"
      }
    },
    {
      "name": "TransferAgent",
      "address": "0x9b274BC73940d92d0Af292Bde759cbFCCE661a0b",
      "code": "https://etherscan.deth.net/address/0x9b274BC73940d92d0Af292Bde759cbFCCE661a0b",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0xF380166F8490F24AF32Bf47D1aA217FBA62B6575"
      }
    },
    {
      "name": "OriginalTokenVault",
      "address": "0xB37D31b2A74029B5951a2778F959282E2D518595",
      "code": "https://etherscan.deth.net/address/0xB37D31b2A74029B5951a2778F959282E2D518595",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "delayPeriod": 1800,
        "epochLength": 1800,
        "governors": [
          "0x34dFa1226F8b3E36FE597B34eEa809a2B5c0bBf9",
          "0x9Ad3A3ca7d6B14E830De247c8ca3FaD9D4c9d88C",
          "0xED9fdF5B16F9F254bec5Ad389B80B48225186655",
          "0x40C11BddeB38Dec685Eed3586BAeBf086fac9dA0"
        ],
        "owner": "0xF380166F8490F24AF32Bf47D1aA217FBA62B6575",
        "paused": false,
        "pausers": [
          "0xDfE4F07D1F36B8d559b25082460a4f6A72531de2",
          "0x34dFa1226F8b3E36FE597B34eEa809a2B5c0bBf9",
          "0x2FB8783C14A71C08bFC1dE8Fc3D715Dd93039BF2",
          "0x9Ad3A3ca7d6B14E830De247c8ca3FaD9D4c9d88C",
          "0xED9fdF5B16F9F254bec5Ad389B80B48225186655",
          "0xE45CB56CEe56Dd1A94F7E5fBDFaa5BaFB3C053d3"
        ],
        "sigsVerifier": "0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820"
      },
      "derivedName": "OriginalTokenVault"
    },
    {
      "name": "SimpleGovernance",
      "address": "0xF380166F8490F24AF32Bf47D1aA217FBA62B6575",
      "code": "https://etherscan.deth.net/address/0xF380166F8490F24AF32Bf47D1aA217FBA62B6575",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getVoters": [
          [
            "0x2FB8783C14A71C08bFC1dE8Fc3D715Dd93039BF2",
            "0x34dFa1226F8b3E36FE597B34eEa809a2B5c0bBf9",
            "0xDfE4F07D1F36B8d559b25082460a4f6A72531de2",
            "0xED9fdF5B16F9F254bec5Ad389B80B48225186655",
            "0x9Ad3A3ca7d6B14E830De247c8ca3FaD9D4c9d88C",
            "0x40C11BddeB38Dec685Eed3586BAeBf086fac9dA0"
          ],
          [10000, 10000, 10000, 10000, 10000, 1]
        ],
        "MAX_ACTIVE_PERIOD": 2419200,
        "MIN_ACTIVE_PERIOD": 3600,
        "nextProposalId": 75,
        "THRESHOLD_DECIMAL": 100
      },
      "derivedName": "SimpleGovernance"
    }
  ],
  "eoas": [
    "0x1b9dFC56e38b0F92448659C114e2347Bd803911c",
    "0x2FB8783C14A71C08bFC1dE8Fc3D715Dd93039BF2",
    "0x34dFa1226F8b3E36FE597B34eEa809a2B5c0bBf9",
    "0x40C11BddeB38Dec685Eed3586BAeBf086fac9dA0",
    "0x9Ad3A3ca7d6B14E830De247c8ca3FaD9D4c9d88C",
    "0x9F6B03Cb6d8AB8239cF1045Ab28B9Df43dfCC823",
    "0xDfE4F07D1F36B8d559b25082460a4f6A72531de2",
    "0xE45CB56CEe56Dd1A94F7E5fBDFaa5BaFB3C053d3",
    "0xED9fdF5B16F9F254bec5Ad389B80B48225186655"
  ],
  "abis": {
    "0x16365b45EB269B5B5dACB34B4a15399Ec79b95eB": [
      "constructor(address _sigsVerifier)",
      "event Burn(bytes32 burnId, address token, address account, uint256 amount, address withdrawAccount)",
      "event DelayPeriodUpdated(uint256 period)",
      "event DelayThresholdUpdated(address token, uint256 threshold)",
      "event DelayedTransferAdded(bytes32 id)",
      "event DelayedTransferExecuted(bytes32 id, address receiver, address token, uint256 amount)",
      "event EpochLengthUpdated(uint256 length)",
      "event EpochVolumeUpdated(address token, uint256 cap)",
      "event GovernorAdded(address account)",
      "event GovernorRemoved(address account)",
      "event MaxBurnUpdated(address token, uint256 amount)",
      "event MinBurnUpdated(address token, uint256 amount)",
      "event Mint(bytes32 mintId, address token, address account, uint256 amount, uint64 refChainId, bytes32 refId, address depositor)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event PauserAdded(address account)",
      "event PauserRemoved(address account)",
      "event Unpaused(address account)",
      "function addGovernor(address _account)",
      "function addPauser(address account)",
      "function burn(address _token, uint256 _amount, address _withdrawAccount, uint64 _nonce)",
      "function delayPeriod() view returns (uint256)",
      "function delayThresholds(address) view returns (uint256)",
      "function delayedTransfers(bytes32) view returns (address receiver, address token, uint256 amount, uint256 timestamp)",
      "function epochLength() view returns (uint256)",
      "function epochVolumeCaps(address) view returns (uint256)",
      "function epochVolumes(address) view returns (uint256)",
      "function executeDelayedTransfer(bytes32 id)",
      "function governors(address) view returns (bool)",
      "function isGovernor(address _account) view returns (bool)",
      "function isPauser(address account) view returns (bool)",
      "function lastOpTimestamps(address) view returns (uint256)",
      "function maxBurn(address) view returns (uint256)",
      "function minBurn(address) view returns (uint256)",
      "function mint(bytes _request, bytes[] _sigs, address[] _signers, uint256[] _powers)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pausers(address) view returns (bool)",
      "function records(bytes32) view returns (bool)",
      "function removeGovernor(address _account)",
      "function removePauser(address account)",
      "function renounceGovernor()",
      "function renounceOwnership()",
      "function renouncePauser()",
      "function setDelayPeriod(uint256 _period)",
      "function setDelayThresholds(address[] _tokens, uint256[] _thresholds)",
      "function setEpochLength(uint256 _length)",
      "function setEpochVolumeCaps(address[] _tokens, uint256[] _caps)",
      "function setMaxBurn(address[] _tokens, uint256[] _amounts)",
      "function setMinBurn(address[] _tokens, uint256[] _amounts)",
      "function sigsVerifier() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()"
    ],
    "0x4066D196A423b2b3B8B054f4F40efB47a74E200C": [
      "constructor(address initialLogic, address initialAdmin, bytes _data) payable",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function implementation() returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x479ec366ae4EC016cE25B918BdEa8f78d4fa5dd8": [
      "constructor(address _sigsVerifier, address _liquidityBridge, address _pegBridge, address _pegVault, address _pegBridgeV2, address _pegVaultV2)",
      "event CallReverted(string reason)",
      "event Executed(uint8 msgType, bytes32 msgId, uint8 status, address indexed receiver, uint64 srcChainId, bytes32 srcTxHash)",
      "event FeeBaseUpdated(uint256 feeBase)",
      "event FeePerByteUpdated(uint256 feePerByte)",
      "event FeeWithdrawn(address receiver, uint256 amount)",
      "event LiquidityBridgeUpdated(address liquidityBridge)",
      "event Message(address indexed sender, address receiver, uint256 dstChainId, bytes message, uint256 fee)",
      "event Message2(address indexed sender, bytes receiver, uint256 dstChainId, bytes message, uint256 fee)",
      "event MessageWithTransfer(address indexed sender, address receiver, uint256 dstChainId, address bridge, bytes32 srcTransferId, bytes message, uint256 fee)",
      "event NeedRetry(uint8 msgType, bytes32 msgId, uint64 srcChainId, bytes32 srcTxHash)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PegBridgeUpdated(address pegBridge)",
      "event PegBridgeV2Updated(address pegBridgeV2)",
      "event PegVaultUpdated(address pegVault)",
      "event PegVaultV2Updated(address pegVaultV2)",
      "function calcFee(bytes _message) view returns (uint256)",
      "function executeMessage(bytes _message, tuple(address sender, address receiver, uint64 srcChainId, bytes32 srcTxHash) _route, bytes[] _sigs, address[] _signers, uint256[] _powers) payable",
      "function executeMessage(bytes _message, tuple(bytes sender, address receiver, uint64 srcChainId, bytes32 srcTxHash) _route, bytes[] _sigs, address[] _signers, uint256[] _powers) payable",
      "function executeMessageWithTransfer(bytes _message, tuple(uint8 t, address sender, address receiver, address token, uint256 amount, uint64 wdseq, uint64 srcChainId, bytes32 refId, bytes32 srcTxHash) _transfer, bytes[] _sigs, address[] _signers, uint256[] _powers) payable",
      "function executeMessageWithTransferRefund(bytes _message, tuple(uint8 t, address sender, address receiver, address token, uint256 amount, uint64 wdseq, uint64 srcChainId, bytes32 refId, bytes32 srcTxHash) _transfer, bytes[] _sigs, address[] _signers, uint256[] _powers) payable",
      "function executedMessages(bytes32) view returns (uint8)",
      "function feeBase() view returns (uint256)",
      "function feePerByte() view returns (uint256)",
      "function init(address _liquidityBridge, address _pegBridge, address _pegVault, address _pegBridgeV2, address _pegVaultV2)",
      "function liquidityBridge() view returns (address)",
      "function owner() view returns (address)",
      "function pegBridge() view returns (address)",
      "function pegBridgeV2() view returns (address)",
      "function pegVault() view returns (address)",
      "function pegVaultV2() view returns (address)",
      "function preExecuteMessageGasUsage() view returns (uint256)",
      "function refundAndExecuteMsg(tuple(bytes request, bytes[] sigs, address[] signers, uint256[] powers) _transferParams, tuple(bytes message, tuple(uint8 t, address sender, address receiver, address token, uint256 amount, uint64 wdseq, uint64 srcChainId, bytes32 refId, bytes32 srcTxHash) transfer, bytes[] sigs, address[] signers, uint256[] powers) _msgParams)",
      "function sendMessage(bytes _receiver, uint256 _dstChainId, bytes _message) payable",
      "function sendMessage(address _receiver, uint256 _dstChainId, bytes _message) payable",
      "function sendMessageWithTransfer(address _receiver, uint256 _dstChainId, address _srcBridge, bytes32 _srcTransferId, bytes _message) payable",
      "function setFeeBase(uint256 _fee)",
      "function setFeePerByte(uint256 _fee)",
      "function setLiquidityBridge(address _addr)",
      "function setPegBridge(address _addr)",
      "function setPegBridgeV2(address _addr)",
      "function setPegVault(address _addr)",
      "function setPegVaultV2(address _addr)",
      "function setPreExecuteMessageGasUsage(uint256 _usage)",
      "function sigsVerifier() view returns (address)",
      "function transferAndExecuteMsg(tuple(bytes request, bytes[] sigs, address[] signers, uint256[] powers) _transferParams, tuple(bytes message, tuple(uint8 t, address sender, address receiver, address token, uint256 amount, uint64 wdseq, uint64 srcChainId, bytes32 refId, bytes32 srcTxHash) transfer, bytes[] sigs, address[] signers, uint256[] powers) _msgParams)",
      "function transferOwnership(address newOwner)",
      "function withdrawFee(address _account, uint256 _cumulativeFee, bytes[] _sigs, address[] _signers, uint256[] _powers)",
      "function withdrawnFees(address) view returns (uint256)"
    ],
    "0x520d812604E7b2ce71819FDBFE9aC40E56327F8f": [
      "constructor(address owner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x52E4f244f380f8fA51816c8a10A63105dd4De084": [
      "constructor(address _sigsVerifier)",
      "event Burn(bytes32 burnId, address token, address account, uint256 amount, uint64 toChainId, address toAccount, uint64 nonce)",
      "event DelayPeriodUpdated(uint256 period)",
      "event DelayThresholdUpdated(address token, uint256 threshold)",
      "event DelayedTransferAdded(bytes32 id)",
      "event DelayedTransferExecuted(bytes32 id, address receiver, address token, uint256 amount)",
      "event EpochLengthUpdated(uint256 length)",
      "event EpochVolumeUpdated(address token, uint256 cap)",
      "event GovernorAdded(address account)",
      "event GovernorRemoved(address account)",
      "event MaxBurnUpdated(address token, uint256 amount)",
      "event MinBurnUpdated(address token, uint256 amount)",
      "event Mint(bytes32 mintId, address token, address account, uint256 amount, uint64 refChainId, bytes32 refId, address depositor)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event PauserAdded(address account)",
      "event PauserRemoved(address account)",
      "event SupplyUpdated(address token, uint256 supply)",
      "event Unpaused(address account)",
      "function addGovernor(address _account)",
      "function addPauser(address account)",
      "function burn(address _token, uint256 _amount, uint64 _toChainId, address _toAccount, uint64 _nonce) returns (bytes32)",
      "function burnFrom(address _token, uint256 _amount, uint64 _toChainId, address _toAccount, uint64 _nonce) returns (bytes32)",
      "function decreaseSupply(address _token, uint256 _delta)",
      "function delayPeriod() view returns (uint256)",
      "function delayThresholds(address) view returns (uint256)",
      "function delayedTransfers(bytes32) view returns (address receiver, address token, uint256 amount, uint256 timestamp)",
      "function epochLength() view returns (uint256)",
      "function epochVolumeCaps(address) view returns (uint256)",
      "function epochVolumes(address) view returns (uint256)",
      "function executeDelayedTransfer(bytes32 id)",
      "function governors(address) view returns (bool)",
      "function increaseSupply(address _token, uint256 _delta)",
      "function isGovernor(address _account) view returns (bool)",
      "function isPauser(address account) view returns (bool)",
      "function lastOpTimestamps(address) view returns (uint256)",
      "function maxBurn(address) view returns (uint256)",
      "function minBurn(address) view returns (uint256)",
      "function mint(bytes _request, bytes[] _sigs, address[] _signers, uint256[] _powers) returns (bytes32)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pausers(address) view returns (bool)",
      "function records(bytes32) view returns (bool)",
      "function removeGovernor(address _account)",
      "function removePauser(address account)",
      "function renounceGovernor()",
      "function renounceOwnership()",
      "function renouncePauser()",
      "function setDelayPeriod(uint256 _period)",
      "function setDelayThresholds(address[] _tokens, uint256[] _thresholds)",
      "function setEpochLength(uint256 _length)",
      "function setEpochVolumeCaps(address[] _tokens, uint256[] _caps)",
      "function setMaxBurn(address[] _tokens, uint256[] _amounts)",
      "function setMinBurn(address[] _tokens, uint256[] _amounts)",
      "function setSupply(address _token, uint256 _supply)",
      "function sigsVerifier() view returns (address)",
      "function supplies(address) view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function unpause()"
    ],
    "0x5427FEFA711Eff984124bFBB1AB6fbf5E3DA1820": [
      "event DelayPeriodUpdated(uint256 period)",
      "event DelayThresholdUpdated(address token, uint256 threshold)",
      "event DelayedTransferAdded(bytes32 id)",
      "event DelayedTransferExecuted(bytes32 id, address receiver, address token, uint256 amount)",
      "event EpochLengthUpdated(uint256 length)",
      "event EpochVolumeUpdated(address token, uint256 cap)",
      "event GovernorAdded(address account)",
      "event GovernorRemoved(address account)",
      "event LiquidityAdded(uint64 seqnum, address provider, address token, uint256 amount)",
      "event MaxSendUpdated(address token, uint256 amount)",
      "event MinAddUpdated(address token, uint256 amount)",
      "event MinSendUpdated(address token, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event PauserAdded(address account)",
      "event PauserRemoved(address account)",
      "event Relay(bytes32 transferId, address sender, address receiver, address token, uint256 amount, uint64 srcChainId, bytes32 srcTransferId)",
      "event ResetNotification(uint256 resetTime)",
      "event Send(bytes32 transferId, address sender, address receiver, address token, uint256 amount, uint64 dstChainId, uint64 nonce, uint32 maxSlippage)",
      "event SignersUpdated(address[] _signers, uint256[] _powers)",
      "event Unpaused(address account)",
      "event WithdrawDone(bytes32 withdrawId, uint64 seqnum, address receiver, address token, uint256 amount, bytes32 refid)",
      "function addGovernor(address _account)",
      "function addLiquidity(address _token, uint256 _amount)",
      "function addNativeLiquidity(uint256 _amount) payable",
      "function addPauser(address account)",
      "function addseq() view returns (uint64)",
      "function delayPeriod() view returns (uint256)",
      "function delayThresholds(address) view returns (uint256)",
      "function delayedTransfers(bytes32) view returns (address receiver, address token, uint256 amount, uint256 timestamp)",
      "function epochLength() view returns (uint256)",
      "function epochVolumeCaps(address) view returns (uint256)",
      "function epochVolumes(address) view returns (uint256)",
      "function executeDelayedTransfer(bytes32 id)",
      "function governors(address) view returns (bool)",
      "function increaseNoticePeriod(uint256 period)",
      "function isGovernor(address _account) view returns (bool)",
      "function isPauser(address account) view returns (bool)",
      "function lastOpTimestamps(address) view returns (uint256)",
      "function maxSend(address) view returns (uint256)",
      "function minAdd(address) view returns (uint256)",
      "function minSend(address) view returns (uint256)",
      "function minimalMaxSlippage() view returns (uint32)",
      "function nativeWrap() view returns (address)",
      "function noticePeriod() view returns (uint256)",
      "function notifyResetSigners()",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pausers(address) view returns (bool)",
      "function relay(bytes _relayRequest, bytes[] _sigs, address[] _signers, uint256[] _powers)",
      "function removeGovernor(address _account)",
      "function removePauser(address account)",
      "function renounceGovernor()",
      "function renounceOwnership()",
      "function renouncePauser()",
      "function resetSigners(address[] _signers, uint256[] _powers)",
      "function resetTime() view returns (uint256)",
      "function send(address _receiver, address _token, uint256 _amount, uint64 _dstChainId, uint64 _nonce, uint32 _maxSlippage)",
      "function sendNative(address _receiver, uint256 _amount, uint64 _dstChainId, uint64 _nonce, uint32 _maxSlippage) payable",
      "function setDelayPeriod(uint256 _period)",
      "function setDelayThresholds(address[] _tokens, uint256[] _thresholds)",
      "function setEpochLength(uint256 _length)",
      "function setEpochVolumeCaps(address[] _tokens, uint256[] _caps)",
      "function setMaxSend(address[] _tokens, uint256[] _amounts)",
      "function setMinAdd(address[] _tokens, uint256[] _amounts)",
      "function setMinSend(address[] _tokens, uint256[] _amounts)",
      "function setMinimalMaxSlippage(uint32 _minimalMaxSlippage)",
      "function setWrap(address _weth)",
      "function ssHash() view returns (bytes32)",
      "function transferOwnership(address newOwner)",
      "function transfers(bytes32) view returns (bool)",
      "function triggerTime() view returns (uint256)",
      "function unpause()",
      "function updateSigners(uint256 _triggerTime, address[] _newSigners, uint256[] _newPowers, bytes[] _sigs, address[] _curSigners, uint256[] _curPowers)",
      "function verifySigs(bytes _msg, bytes[] _sigs, address[] _signers, uint256[] _powers) view",
      "function withdraw(bytes _wdmsg, bytes[] _sigs, address[] _signers, uint256[] _powers)",
      "function withdraws(bytes32) view returns (bool)"
    ],
    "0x606d8cFd3f4Ed07314F5A1F1802dd4663308b175": [
      "constructor(address[] _voters, uint256[] _powers, uint256 _activePeriod, uint256 _quorumThreshold)",
      "event Initiated(address[] voters, uint256[] powers, uint256 activePeriod, uint256 quorumThreshold)",
      "event ParamChangeProposalCreated(uint256 proposalId, uint8 name, uint256 value)",
      "event ProposalCreated(uint256 proposalId, uint8 proposalType, address target, bytes data, uint256 deadline, address proposer)",
      "event ProposalExecuted(uint256 proposalId)",
      "event ProposalVoted(uint256 proposalId, address voter, bool vote)",
      "event SetMsgFeeProposalCreated(uint256 proposalId, address target, uint8 feeType, uint256 fee)",
      "event SetPreExecuteMessageGasUsageProposalCreated(uint256 proposalId, address target, uint256 usage)",
      "event VoterUpdateProposalCreated(uint256 proposalId, address[] voters, uint256[] powers)",
      "function MAX_ACTIVE_PERIOD() view returns (uint256)",
      "function MIN_ACTIVE_PERIOD() view returns (uint256)",
      "function THRESHOLD_DECIMAL() view returns (uint256)",
      "function countVotes(uint256 _proposalId) view returns (uint256, uint256, bool)",
      "function executeProposal(uint256 _proposalId, uint8 _type, address _target, bytes _data)",
      "function getVote(uint256 _proposalId, address _voter) view returns (bool)",
      "function getVoters() view returns (address[], uint256[])",
      "function nextProposalId() view returns (uint256)",
      "function params(uint8) view returns (uint256)",
      "function proposals(uint256) view returns (bytes32 dataHash, uint256 deadline)",
      "function proposeParamChange(uint8 _name, uint256 _value) returns (uint256)",
      "function proposeSetMsgFee(address _target, uint8 _feeType, uint256 _fee) returns (uint256)",
      "function proposeSetPreExecuteMessageGasUsage(address _target, uint256 _usage)",
      "function proposeVoterUpdate(address[] _voters, uint256[] _powers) returns (uint256)",
      "function voteProposal(uint256 _proposalId, bool _vote)",
      "function voterPowers(address) view returns (uint256)",
      "function voters(uint256) view returns (address)"
    ],
    "0x7510792A3B1969F9307F3845CE88e39578f2bAE1": [
      "constructor(address _sigsVerifier)",
      "event DelayPeriodUpdated(uint256 period)",
      "event DelayThresholdUpdated(address token, uint256 threshold)",
      "event DelayedTransferAdded(bytes32 id)",
      "event DelayedTransferExecuted(bytes32 id, address receiver, address token, uint256 amount)",
      "event Deposited(bytes32 depositId, address depositor, address token, uint256 amount, uint64 mintChainId, address mintAccount, uint64 nonce)",
      "event EpochLengthUpdated(uint256 length)",
      "event EpochVolumeUpdated(address token, uint256 cap)",
      "event GovernorAdded(address account)",
      "event GovernorRemoved(address account)",
      "event MaxDepositUpdated(address token, uint256 amount)",
      "event MinDepositUpdated(address token, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event PauserAdded(address account)",
      "event PauserRemoved(address account)",
      "event Unpaused(address account)",
      "event Withdrawn(bytes32 withdrawId, address receiver, address token, uint256 amount, uint64 refChainId, bytes32 refId, address burnAccount)",
      "function addGovernor(address _account)",
      "function addPauser(address account)",
      "function delayPeriod() view returns (uint256)",
      "function delayThresholds(address) view returns (uint256)",
      "function delayedTransfers(bytes32) view returns (address receiver, address token, uint256 amount, uint256 timestamp)",
      "function deposit(address _token, uint256 _amount, uint64 _mintChainId, address _mintAccount, uint64 _nonce) returns (bytes32)",
      "function depositNative(uint256 _amount, uint64 _mintChainId, address _mintAccount, uint64 _nonce) payable returns (bytes32)",
      "function epochLength() view returns (uint256)",
      "function epochVolumeCaps(address) view returns (uint256)",
      "function epochVolumes(address) view returns (uint256)",
      "function executeDelayedTransfer(bytes32 id)",
      "function governors(address) view returns (bool)",
      "function isGovernor(address _account) view returns (bool)",
      "function isPauser(address account) view returns (bool)",
      "function lastOpTimestamps(address) view returns (uint256)",
      "function maxDeposit(address) view returns (uint256)",
      "function minDeposit(address) view returns (uint256)",
      "function nativeWrap() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pausers(address) view returns (bool)",
      "function records(bytes32) view returns (bool)",
      "function removeGovernor(address _account)",
      "function removePauser(address account)",
      "function renounceGovernor()",
      "function renouncePauser()",
      "function setDelayPeriod(uint256 _period)",
      "function setDelayThresholds(address[] _tokens, uint256[] _thresholds)",
      "function setEpochLength(uint256 _length)",
      "function setEpochVolumeCaps(address[] _tokens, uint256[] _caps)",
      "function setMaxDeposit(address[] _tokens, uint256[] _amounts)",
      "function setMinDeposit(address[] _tokens, uint256[] _amounts)",
      "function setWrap(address _weth)",
      "function sigsVerifier() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function withdraw(bytes _request, bytes[] _sigs, address[] _signers, uint256[] _powers) returns (bytes32)"
    ],
    "0x9b274BC73940d92d0Af292Bde759cbFCCE661a0b": [
      "event BridgeUpdated(uint8 bridgeSendType, address bridgeAddr)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Supplement(uint8 bridgeSendType, bytes32 transferId, address sender, bytes receiver, tuple(uint8 Type, bytes Value)[] extensions)",
      "function bridges(uint8) view returns (address)",
      "function owner() view returns (address)",
      "function setBridgeAddress(uint8 _bridgeSendType, address _addr)",
      "function transfer(bytes _receiver, address _token, uint256 _amount, uint64 _dstChainId, uint64 _nonce, uint32 _maxSlippage, uint8 _bridgeSendType, tuple(uint8 Type, bytes Value)[] _extensions) returns (bytes32)",
      "function transferNative(bytes _receiver, uint256 _amount, uint64 _dstChainId, uint64 _nonce, uint32 _maxSlippage, uint8 _bridgeSendType, tuple(uint8 Type, bytes Value)[] _extensions) payable returns (bytes32)",
      "function transferOwnership(address newOwner)"
    ],
    "0xB37D31b2A74029B5951a2778F959282E2D518595": [
      "constructor(address _sigsVerifier)",
      "event DelayPeriodUpdated(uint256 period)",
      "event DelayThresholdUpdated(address token, uint256 threshold)",
      "event DelayedTransferAdded(bytes32 id)",
      "event DelayedTransferExecuted(bytes32 id, address receiver, address token, uint256 amount)",
      "event Deposited(bytes32 depositId, address depositor, address token, uint256 amount, uint64 mintChainId, address mintAccount)",
      "event EpochLengthUpdated(uint256 length)",
      "event EpochVolumeUpdated(address token, uint256 cap)",
      "event GovernorAdded(address account)",
      "event GovernorRemoved(address account)",
      "event MaxDepositUpdated(address token, uint256 amount)",
      "event MinDepositUpdated(address token, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event PauserAdded(address account)",
      "event PauserRemoved(address account)",
      "event Unpaused(address account)",
      "event Withdrawn(bytes32 withdrawId, address receiver, address token, uint256 amount, uint64 refChainId, bytes32 refId, address burnAccount)",
      "function addGovernor(address _account)",
      "function addPauser(address account)",
      "function delayPeriod() view returns (uint256)",
      "function delayThresholds(address) view returns (uint256)",
      "function delayedTransfers(bytes32) view returns (address receiver, address token, uint256 amount, uint256 timestamp)",
      "function deposit(address _token, uint256 _amount, uint64 _mintChainId, address _mintAccount, uint64 _nonce)",
      "function epochLength() view returns (uint256)",
      "function epochVolumeCaps(address) view returns (uint256)",
      "function epochVolumes(address) view returns (uint256)",
      "function executeDelayedTransfer(bytes32 id)",
      "function governors(address) view returns (bool)",
      "function isGovernor(address _account) view returns (bool)",
      "function isPauser(address account) view returns (bool)",
      "function lastOpTimestamps(address) view returns (uint256)",
      "function maxDeposit(address) view returns (uint256)",
      "function minDeposit(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pausers(address) view returns (bool)",
      "function records(bytes32) view returns (bool)",
      "function removeGovernor(address _account)",
      "function removePauser(address account)",
      "function renounceGovernor()",
      "function renounceOwnership()",
      "function renouncePauser()",
      "function setDelayPeriod(uint256 _period)",
      "function setDelayThresholds(address[] _tokens, uint256[] _thresholds)",
      "function setEpochLength(uint256 _length)",
      "function setEpochVolumeCaps(address[] _tokens, uint256[] _caps)",
      "function setMaxDeposit(address[] _tokens, uint256[] _amounts)",
      "function setMinDeposit(address[] _tokens, uint256[] _amounts)",
      "function sigsVerifier() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function withdraw(bytes _request, bytes[] _sigs, address[] _signers, uint256[] _powers)"
    ],
    "0xF380166F8490F24AF32Bf47D1aA217FBA62B6575": [
      "constructor(address[] _voters, uint256[] _powers, address[] _proxies, uint256 _activePeriod, uint256 _quorumThreshold, uint256 _fastPassThreshold)",
      "event Initiated(address[] voters, uint256[] powers, address[] proxies, uint256 activePeriod, uint256 quorumThreshold, uint256 fastPassThreshold)",
      "event ParamChangeProposalCreated(uint256 proposalId, uint8 name, uint256 value)",
      "event ProposalCreated(uint256 proposalId, uint8 proposalType, address target, bytes data, uint256 deadline, address proposer)",
      "event ProposalExecuted(uint256 proposalId)",
      "event ProposalVoted(uint256 proposalId, address voter, bool vote)",
      "event ProxyUpdateProposalCreated(uint256 proposalId, address[] addrs, bool[] ops)",
      "event TransferTokenProposalCreated(uint256 proposalId, address receiver, address token, uint256 amount)",
      "event VoterUpdateProposalCreated(uint256 proposalId, address[] voters, uint256[] powers)",
      "function MAX_ACTIVE_PERIOD() view returns (uint256)",
      "function MIN_ACTIVE_PERIOD() view returns (uint256)",
      "function THRESHOLD_DECIMAL() view returns (uint256)",
      "function countVotes(uint256 _proposalId, uint8 _type) view returns (uint256, uint256, bool)",
      "function createParamChangeProposal(uint8 _name, uint256 _value) returns (uint256)",
      "function createProposal(address _target, bytes _data) returns (uint256)",
      "function createProposal(address _proposer, address _target, bytes _data, uint8 _type) returns (uint256)",
      "function createProxyUpdateProposal(address[] _addrs, bool[] _ops) returns (uint256)",
      "function createTransferTokenProposal(address _receiver, address _token, uint256 _amount) returns (uint256)",
      "function createVoterUpdateProposal(address[] _voters, uint256[] _powers) returns (uint256)",
      "function executeProposal(uint256 _proposalId, uint8 _type, address _target, bytes _data)",
      "function getVote(uint256 _proposalId, address _voter) view returns (bool)",
      "function getVoters() view returns (address[], uint256[])",
      "function nextProposalId() view returns (uint256)",
      "function params(uint8) view returns (uint256)",
      "function proposals(uint256) view returns (bytes32 dataHash, uint256 deadline)",
      "function proposerProxies(address) view returns (bool)",
      "function voteProposal(uint256 _proposalId, bool _vote)",
      "function voterPowers(address) view returns (uint256)",
      "function voters(uint256) view returns (address)"
    ]
  }
}
