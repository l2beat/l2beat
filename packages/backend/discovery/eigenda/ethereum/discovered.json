{
  "name": "eigenda",
  "chain": "ethereum",
  "blockNumber": 19632417,
  "configHash": "0x5a2065a47b5aa9636d4d42ba5824cb467b9e7d070014aaf3c28bca5ee03a71b8",
  "version": 3,
  "contracts": [
    {
      "name": "DepositContract",
      "address": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1602667372,
      "values": {
        "get_deposit_count": "0xbcc6150000000000",
        "get_deposit_root": "0x25ba3fbce357cf7709fd4952b4b87b6d8a8c51501a1f3459d76db89b4e4104b3"
      }
    },
    {
      "name": "StakeRegistry",
      "address": "0x006124Ae7976137266feeBFb3F4D2BE4C073139D",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1C468cf7089D263c2f53e2579b329B16aBc4dd96",
        "admin": "0x8247EF5705d3345516286B72bFE6D690197C2E99"
      },
      "implementations": ["0x1C468cf7089D263c2f53e2579b329B16aBc4dd96"],
      "sinceTimestamp": 1712353799,
      "values": {
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "MAX_WEIGHING_FUNCTION_LENGTH": 32,
        "registryCoordinator": "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656",
        "WEIGHTING_DIVISOR": "1000000000000000000"
      }
    },
    {
      "name": "BLSApkRegistry",
      "address": "0x00A5Fd09F6CeE6AE9C8b0E5e33287F7c82880505",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x5d0B9cE2e277Daf508528E9f6Bf6314E79e4eD2b",
        "admin": "0x8247EF5705d3345516286B72bFE6D690197C2E99"
      },
      "implementations": ["0x5d0B9cE2e277Daf508528E9f6Bf6314E79e4eD2b"],
      "sinceTimestamp": 1712353799,
      "values": {
        "registryCoordinator": "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656"
      }
    },
    {
      "name": "RedeemManagerV1",
      "address": "0x080b3a41390b357Ad7e8097644d1DEDf57AD3375",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x423CE5282c460EED5FE0786B4D47d2c2a4Ef3721",
        "admin": "0x2fDeF0b5e87Cf840FfE46E3A5318b1d59960DfCd"
      },
      "implementations": ["0x423CE5282c460EED5FE0786B4D47d2c2a4Ef3721"],
      "sinceTimestamp": 1685451527,
      "values": {
        "getBufferedExceedingEth": 0,
        "getRedeemDemand": 0,
        "getRedeemRequestCount": 29,
        "getRiver": "0x8c1BEd5b9a0928467c9B1341Da1D7BD5e10b6549",
        "getWithdrawalEventCount": 48
      }
    },
    {
      "name": "RegistryCoordinator",
      "address": "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xd3e09a0c2A9A6FDf5E92aE65D3CC090A4dF8EECF",
        "admin": "0x8247EF5705d3345516286B72bFE6D690197C2E99"
      },
      "implementations": ["0xd3e09a0c2A9A6FDf5E92aE65D3CC090A4dF8EECF"],
      "sinceTimestamp": 1712353787,
      "values": {
        "blsApkRegistry": "0x00A5Fd09F6CeE6AE9C8b0E5e33287F7c82880505",
        "churnApprover": "0xe0550117Cb066D3b330eBd764B0d75D3BA378734",
        "ejector": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "indexRegistry": "0xBd35a7a1CDeF403a6a99e4E8BA0974D198455030",
        "numRegistries": 3,
        "OPERATOR_CHURN_APPROVAL_TYPEHASH": "0x4d404e3276e7ac2163d8ee476afa6a41d1f68fb71f2d8b6546b24e55ce01b72a",
        "owner": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "PUBKEY_REGISTRATION_TYPEHASH": "0x2bd82124057f0913bc3b772ce7b83e8057c1ad1f3510fc83778be20f10ec5de6",
        "quorumCount": 1,
        "registries": [
          "0x006124Ae7976137266feeBFb3F4D2BE4C073139D",
          "0x00A5Fd09F6CeE6AE9C8b0E5e33287F7c82880505",
          "0xBd35a7a1CDeF403a6a99e4E8BA0974D198455030"
        ],
        "serviceManager": "0x870679E138bCdf293b7Ff14dD44b70FC97e12fc0",
        "stakeRegistry": "0x006124Ae7976137266feeBFb3F4D2BE4C073139D"
      }
    },
    {
      "name": "PauserRegistry",
      "address": "0x0c431C66F4dE941d089625E5B423D00707977060",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686348935,
      "values": {
        "unpauser": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0x0Fe4F44beE93503346A3Ac9EE5A26b130a5796d6",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "180135994768362389777722",
        "underlyingToken": "0xf951E335afb289353dc249e82926178EaC7DEd78",
        "underlyingToShares": [0, 1, 2, 3, 4],
        "underlyingToSharesView": [0, 1, 2, 3, 4]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "OperatorsRegistryV1",
      "address": "0x1235f1b60df026B2620e48E735C422425E06b725",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x99Dd9F8D3a62cb416f6ef5ABBC90185c4162f8d0",
        "admin": "0x1d1FD2d8C87Fed864708bbab84c2Da54254F5a12"
      },
      "implementations": ["0x99Dd9F8D3a62cb416f6ef5ABBC90185c4162f8d0"],
      "sinceTimestamp": 1664906315,
      "values": {
        "getAdmin": "0xAF5ae0768291C4ADC57Cb7e1482F336b4Faa4291",
        "getCurrentValidatorExitsDemand": 0,
        "getOperator": [
          [
            1650,
            1119,
            394,
            1650,
            19187034,
            true,
            "Figment",
            "0xDfB087180Dc5e99655Bf7e61D53dD6d25a023253"
          ],
          [
            1400,
            840,
            115,
            1400,
            19222910,
            true,
            "Coinbase Cloud",
            "0x75DC82105B5c482402A4267F628036254F380967"
          ],
          [
            1400,
            791,
            67,
            1400,
            19236029,
            true,
            "Staked",
            "0x7070CBfD67fDf8077d27548E86505F9F91C31621"
          ]
        ],
        "getOperatorCount": 3,
        "getOperatorStoppedValidatorCount": [394, 115, 67, 0, 0],
        "getPendingAdmin": "0x0000000000000000000000000000000000000000",
        "getRiver": "0x8c1BEd5b9a0928467c9B1341Da1D7BD5e10b6549",
        "getStoppedAndRequestedExitCounts": [576, 576],
        "getStoppedValidatorCountPerOperator": [394, 115, 67],
        "getTotalStoppedValidatorCount": 576,
        "getTotalValidatorExitsRequested": 576,
        "listActiveOperators": [
          [
            1650,
            1119,
            394,
            1650,
            19187034,
            true,
            "Figment",
            "0xDfB087180Dc5e99655Bf7e61D53dD6d25a023253"
          ],
          [
            1400,
            840,
            115,
            1400,
            19222910,
            true,
            "Coinbase Cloud",
            "0x75DC82105B5c482402A4267F628036254F380967"
          ],
          [
            1400,
            791,
            67,
            1400,
            19236029,
            true,
            "Staked",
            "0x7070CBfD67fDf8077d27548E86505F9F91C31621"
          ]
        ]
      },
      "errors": {
        "getOperatorStoppedValidatorCount": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "AVSDirectory",
      "address": "0x135DDa560e946695d6f155dACaFC6f1F25C1F5AF",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdAbdB3Cd346B7D5F5779b0B614EdE1CC9DcBA5b7",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdAbdB3Cd346B7D5F5779b0B614EdE1CC9DcBA5b7"],
      "sinceTimestamp": 1711141931,
      "values": {
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "domainSeparator": "0x8ceb9367dd5eb661ead5bb90d8bfd836c1293d5fd67da541d446e1954349df40",
        "OPERATOR_AVS_REGISTRATION_TYPEHASH": "0xda2c89bafdd34776a2b8bb9c83c82f419e20cc8c67207f70edd58249b92661bd",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0x13760F50a9d7377e4F20CB8CF9e4c26586c658ff",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "1346822233467644748598",
        "underlyingToken": "0xE95A203B1a91a908F9B9CE46459d101078c2c3cb",
        "underlyingToShares": [0, 1, 2, 3, 4],
        "underlyingToSharesView": [0, 1, 2, 3, 4]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x144a98cb1CdBb23610501fE6108858D9B7D24934",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": ["0xB5cF5363c3e766e64B37b2fB9554bFE8D48ED1A0"],
        "threshold": "4 of 7 (57%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1611566899,
      "values": {
        "domainSeparator": "0x1ac01b8ce2ee13b45847de4da8aa3660fdc524145ee10d7d1b16f215e4a211b9",
        "getChainId": 1,
        "getOwners": [
          "0xC46e791d4fB1207fAB8Cb0e44889127138539c69",
          "0x9cC9c3de8e710781983a65b90B7efEaaD2D3D7D8",
          "0x9Aa6Db877742aD8D8c7fE209F561fbd2bE19D5F4",
          "0x7E36F1fF26cffD6906c11Cd7Eca5f6E993Ba6CE3",
          "0x1C86117156Ba31b5d62f02eB56bE9aC5a06610d3",
          "0xc0c9707B552C6970f66Ab91D563Bf9b6048E9da6",
          "0x61B01a33Aea3e827B3941Ab097778bd3FA48a332"
        ],
        "getThreshold": 4,
        "nonce": 85,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0x1BeE69b7dFFfA4E2d53C2a2Df135C388AD25dCD2",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1686349019,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "56367064406677229790028",
        "underlyingToken": "0xae78736Cd615f374D3085123A210448E74Fc6393",
        "underlyingToShares": [0, 0, 1, 2, 3],
        "underlyingToSharesView": [0, 0, 1, 2, 3]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x20fDF47509C5eFC0e1101e3CE443691781C17F90",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "3 of 5 (60%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1657096688,
      "values": {
        "domainSeparator": "0x7ef947a4d0f9db951b663aca329bc6fdd6e078a18fd7d4bc7e89a1c40b0c5724",
        "getChainId": 1,
        "getOwners": [
          "0xD8DbDb15e91596c50A72E77d95dbC866ebdA8238",
          "0x284C633962F2386590E934c4fBD2D3EafA0944A3",
          "0x042d200e5375204F022570361f3913b245488091",
          "0x66Ed79Ee4865c1cb4574b42d467C7Fee28bB4D59",
          "0x5b27b9279251904AaF2127463eeFf91E0037F725"
        ],
        "getThreshold": 3,
        "nonce": 97,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x25EAf579cA2255fAA5463c635eec28697b5b8846",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1681287203,
      "values": {
        "owner": "0x20fDF47509C5eFC0e1101e3CE443691781C17F90"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0x298aFB19A105D59E74658C4C334Ff360BadE6dd2",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1704485723,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "177258207075146883838458",
        "underlyingToken": "0xd5F7838F5C461fefF7FE49ea5ebaF7728bB0ADfa",
        "underlyingToShares": [0, 1, 2, 3, 4],
        "underlyingToSharesView": [0, 1, 2, 3, 4]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "Firewall",
      "address": "0x2fDeF0b5e87Cf840FfE46E3A5318b1d59960DfCd",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1685451479,
      "values": {
        "destination": "0x080b3a41390b357Ad7e8097644d1DEDf57AD3375",
        "executor": "0xDE55C9dc78f985fE1502484Cb98EBfAB66A56B62",
        "getAdmin": "0x8EE3fC0Bcd7B57429203751C5bE5fdf1AB8409f3",
        "getPendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "CoverageFundV1",
      "address": "0x32Aac358b627B9FEaa971CC33304027A41e49a81",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x6B747258A0E926De1F5C2a54Fe92514706Cce2D4",
        "admin": "0x8EE3fC0Bcd7B57429203751C5bE5fdf1AB8409f3"
      },
      "implementations": ["0x6B747258A0E926De1F5C2a54Fe92514706Cce2D4"],
      "sinceTimestamp": 1669980275
    },
    {
      "name": "EigenLayerBeaconOracle",
      "address": "0x343907185b71aDF0eBa9567538314396aa985442",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1710374507,
      "values": {
        "GENESIS_BLOCK_TIMESTAMP": 1606824023,
        "timestampToBlockRoot": [
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ]
      },
      "errors": {
        "timestampToBlockRoot": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "Timelock",
      "address": "0x35918cDE7233F2dD33fA41ae3Cb6aE0e42E0e69F",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1662568375,
      "values": {
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 172800,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "1 of 2 (50%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686681203,
      "values": {
        "domainSeparator": "0xbc80366740d76b8af95de2e845557588b8a3dc40db68b5b15b8f1cb36a4c7e45",
        "getChainId": 1,
        "getOwners": [
          "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF",
          "0xFEA47018D632A77bA579846c840d5706705Dc598"
        ],
        "getThreshold": 1,
        "nonce": 5,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "UnstakeRequestsManager",
      "address": "0x38fDF7b489316e03eD8754ad339cb5c4483FDcf9",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x5A7b3CDe8aC8d780AF4797BF1517464aC54Ca033",
        "admin": "0xc26016f1166bE7b6c5611AAB104122E0f6c2aCE2"
      },
      "implementations": ["0x5A7b3CDe8aC8d780AF4797BF1517464aC54Ca033"],
      "sinceTimestamp": 1696584863,
      "values": {
        "allocatedETHDeficit": "3888886661671686489521",
        "allocatedETHForClaims": "83474000401867120528556",
        "allocatedETHSurplus": 0,
        "balance": "848733014384963057995",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "latestCumulativeETHRequested": "87362887063538807018077",
        "MANAGER_ROLE": "0x241ecf16d79d0f8dbfb92cbc07fe17840425976cf0667f022fe9877caa831b08",
        "mETH": "0xd5F7838F5C461fefF7FE49ea5ebaF7728bB0ADfa",
        "nextRequestId": 1043,
        "numberOfBlocksToFinalize": 600,
        "oracle": "0x8735049F496727f824Cc0f2B174d826f5c408192",
        "REQUEST_CANCELLER_ROLE": "0xef6d3da212345543d99125b43af0bc451d30ffaf90d4560558d702b21179a70f",
        "requestByID": [
          [0, "0x0000000000000000000000000000000000000000", 0, 0, 0, 0],
          [0, "0x0000000000000000000000000000000000000000", 0, 0, 0, 0],
          [0, "0x0000000000000000000000000000000000000000", 0, 0, 0, 0],
          [0, "0x0000000000000000000000000000000000000000", 0, 0, 0, 0],
          [0, "0x0000000000000000000000000000000000000000", 0, 0, 0, 0]
        ],
        "requestInfo": [
          [true, 0],
          [true, 0],
          [true, 0],
          [true, 0],
          [true, 0]
        ],
        "stakingContract": "0xe3cBd06D7dadB3F4e6557bAb7EdD924CD1489E8f",
        "totalClaimed": "82625267387482157470561"
      },
      "errors": {
        "requestByID": "Too many values. Update configuration to explore fully",
        "requestInfo": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "DelegationManager",
      "address": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1784BE6401339Fc0Fedf7E9379409f5c1BfE9dda",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0x1784BE6401339Fc0Fedf7E9379409f5c1BfE9dda"],
      "sinceTimestamp": 1686348935,
      "values": {
        "beaconChainETHStrategy": "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
        "DELEGATION_APPROVAL_TYPEHASH": "0x14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "domainSeparator": "0x9bba7f98dd592dbd3fdbeef9fdebb4e19f8661950cb5dcc435fcad7824975fe1",
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS": 1296000,
        "MAX_WITHDRAWAL_DELAY_BLOCKS": 216000,
        "minWithdrawalDelayBlocks": 50400,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "STAKER_DELEGATION_TYPEHASH": "0x39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      }
    },
    {
      "name": "OETHVaultCore",
      "address": "0x39254033945AA2E4809Cc2977E7087BEE48bd7Ab",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x9535413B1B9862D0123A36F55e9bf20EBA4b152e",
        "admin": "0x0000000000000000000000000000000000000000"
      },
      "implementations": ["0x9535413B1B9862D0123A36F55e9bf20EBA4b152e"],
      "sinceTimestamp": 1681740659,
      "values": {
        "admin": "0x35918cDE7233F2dD33fA41ae3Cb6aE0e42E0e69F",
        "autoAllocateThreshold": "10000000000000000000",
        "calculateRedeemOutputs": [
          [0, 0, 0, 0],
          [0, 0, 0, 0],
          [0, 0, 0, 0],
          [0, 1, 0, 0],
          [0, 2, 0, 0]
        ],
        "capitalPaused": false,
        "getAllAssets": [
          "0x5E8422345238F34275888049021821E8E08CAa1f",
          "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
          "0xae78736Cd615f374D3085123A210448E74Fc6393",
          "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84"
        ],
        "getAllStrategies": [
          "0x3fF8654D633D4Ea0faE24c52Aec73B4A20D0d0e5",
          "0x1827F9eA98E0bf96550b2FC20F7233277FcD7E63",
          "0xc1fc9E5eC3058921eA5025D703CBE31764756319",
          "0x49109629aC1deB03F2e9b2fe2aC4a623E0e7dfDC",
          "0x95A8e45afCfBfEDd4A1d41836ED1897f3Ef40A9e"
        ],
        "getAssetCount": 4,
        "getStrategyCount": 5,
        "governor": "0x35918cDE7233F2dD33fA41ae3Cb6aE0e42E0e69F",
        "implementation": "0x9535413B1B9862D0123A36F55e9bf20EBA4b152e",
        "isGovernor": false,
        "maxSupplyDiff": "30000000000000000",
        "netOusdMintedForStrategy": "-1075419983974359156531",
        "netOusdMintForStrategyThreshold": "25000000000000000000000",
        "ousdMetaStrategy": "0x1827F9eA98E0bf96550b2FC20F7233277FcD7E63",
        "priceProvider": "0x468A68da3cefcDD644ce0Ea9B9564b246218aeeC",
        "rebasePaused": false,
        "rebaseThreshold": "1000000000000000000",
        "redeemFeeBps": 10,
        "strategistAddr": "0xF14BBdf064E3F67f51cd9BD646aE3716aD938FDC",
        "totalValue": "44620206111970745434082",
        "trusteeAddress": "0xFD6c58850caCF9cCF6e8Aee479BFb4Df14a362D2",
        "trusteeFeeBps": 2000,
        "vaultBuffer": 0,
        "weth": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "errors": {
        "calculateRedeemOutputs": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "Firewall",
      "address": "0x3A5b4db174a3CC17d8cE40C5B04272737195151b",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1666371719,
      "values": {
        "destination": "0x8c1BEd5b9a0928467c9B1341Da1D7BD5e10b6549",
        "executor": "0xDE55C9dc78f985fE1502484Cb98EBfAB66A56B62",
        "getAdmin": "0x8EE3fC0Bcd7B57429203751C5bE5fdf1AB8409f3",
        "getPendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "Agent",
      "address": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
      "upgradeability": {
        "type": "EIP897 proxy",
        "isUpgradable": true,
        "implementation": "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37"
      },
      "implementations": ["0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37"],
      "sinceTimestamp": 1608242396,
      "values": {
        "ADD_PRESIGNED_HASH_ROLE": "0x0b29780bb523a130b3b01f231ef49ed2fa2781645591a0b0a44ca98f15a5994c",
        "ADD_PROTECTED_TOKEN_ROLE": "0x6eb2a499556bfa2872f5aa15812b956cc4a71b4d64eb3553f7073c7e41415aaa",
        "appId": "0x701a4fd1f5174d12a0f1d9ad2c88d0ad11ab6aad0ac72b7d9ce621815f8016a9",
        "DESIGNATE_SIGNER_ROLE": "0x23ce341656c3f14df6692eebd4757791e33662b7dcf9970c8308303da5472b7c",
        "designatedSigner": "0x0000000000000000000000000000000000000000",
        "ERC1271_INTERFACE_ID": "0xfb855dc9",
        "ERC1271_RETURN_INVALID_SIGNATURE": "0x00000000",
        "ERC1271_RETURN_VALID_SIGNATURE": "0x20c13b0b",
        "EXECUTE_ROLE": "0xcebf517aa4440d1d125e0355aae64401211d0848a23c02cc5d29a14822580ba4",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getProtectedTokensLength": 0,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "hasInitialized": true,
        "implementation": "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37",
        "isDepositable": true,
        "isForwarder": true,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "PROTECTED_TOKENS_CAP": 10,
        "protectedTokens": [],
        "proxyType": 2,
        "REMOVE_PROTECTED_TOKEN_ROLE": "0x71eee93d500f6f065e38b27d242a756466a00a52a1dbcd6b4260f01a8640402a",
        "RUN_SCRIPT_ROLE": "0xb421f7ad7646747f3051c50c0b8e2377839296cd4973e27f63821d73e390338f",
        "SAFE_EXECUTE_ROLE": "0x0a1ad7b87f5846153c6d5a1f761d71c7d0cfd122384f56066cd33239b7933694",
        "TRANSFER_ROLE": "0x8502233096d909befbda0999bb8ea2f3a6be3c138b9fbf003752a4c8bce86f6c"
      }
    },
    {
      "name": "LegacyOracle",
      "address": "0x442af784A788A5bd6F42A01Ebe9F287a871243fb",
      "upgradeability": {
        "type": "EIP897 proxy",
        "isUpgradable": true,
        "implementation": "0xa29b819654cE6224A222bb5f586920105E2D7E0E"
      },
      "implementations": ["0xa29b819654cE6224A222bb5f586920105E2D7E0E"],
      "sinceTimestamp": 1608242396,
      "values": {
        "appId": "0x8b47ba2a8454ec799cd91646e7ec47168e91fd139b23f017455f3e5898aaba93",
        "getAccountingOracle": "0x852deD011285fe67063a08005c71a85690503Cee",
        "getBeaconSpec": [225, 32, 12, 1606824023],
        "getContractVersion": 4,
        "getCurrentEpochId": 276080,
        "getCurrentFrame": [276075, 1712836823, 1712923222],
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getLastCompletedEpochId": 276075,
        "getLastCompletedReportDelta": [
          "9412621064358199201186029",
          "9462814026483621539924867",
          86400
        ],
        "getLido": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "getVersion": 4,
        "hasInitialized": true,
        "implementation": "0xa29b819654cE6224A222bb5f586920105E2D7E0E",
        "isDepositable": false,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "proxyType": 2
      }
    },
    {
      "name": "StaderConfig",
      "address": "0x4ABEF2263d5A5ED582FC9A9789a41D85b68d69DB",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x2dBa235892dc72efa74e0b395294494B5B0B32B2",
        "admin": "0x67B12264Ca3e0037Fc7E22F2457b42643a04C86e"
      },
      "implementations": ["0x2dBa235892dc72efa74e0b395294494B5B0B32B2"],
      "sinceTimestamp": 1685990291,
      "values": {
        "ADMIN": "0xdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42",
        "AUCTION_CONTRACT": "0x8e96355022bb9b9f4d9d4e01fe2b58f45e78549c982c401c96f75f33c5de457e",
        "DECIMALS": "0x08593985ae1bebfb02f6c30105edffb176a6d87c9fad54c434bf9b58f67e81b6",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "ETH_BALANCE_POR_FEED": "0x690795c57e13eaf2526f76202b6799e9afdb069afca1e572f693953d013569d8",
        "ETH_DEPOSIT_CONTRACT": "0x84b42b3d5e6851893d4418c6ebc9a4727e78afdf84e73674c8b9c1c2b1904e2d",
        "ETH_PER_NODE": "0xf822b1f0c3b886ce1cdf1c2a5317844145470db33b02c63cae4813f8c9b2dc17",
        "ETHx": "0x09dfa94a9be22222b511ecf509f49718fc08fbe3ada37a44d2022489eca3b44c",
        "ETHX_SUPPLY_POR_FEED": "0xb134afa3abad633a84ab2d33dd5171f2b371e38b0f7bca001383aaf08ed6d2d1",
        "FULL_DEPOSIT_SIZE": "0x876943525608da6d95be5925fe6c4fe80e8622c8a76e7414f80e8ba210e0711c",
        "getAdmin": "0x1112D5C55670Cb5144BF36114C20a122908068B9",
        "getAuctionContract": "0x85A22763f94D703d2ee39E9374616ae4C1612569",
        "getDecimals": "1000000000000000000",
        "getETHBalancePORFeedProxy": "0x0000000000000000000000000000000000000000",
        "getETHDepositContract": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "getETHXSupplyPORFeedProxy": "0x0000000000000000000000000000000000000000",
        "getETHxToken": "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
        "getFullDepositSize": "31000000000000000000",
        "getMaxDepositAmount": "10000000000000000000000",
        "getMaxWithdrawAmount": "10000000000000000000000",
        "getMinBlockDelayToFinalizeWithdrawRequest": 7200,
        "getMinDepositAmount": 100000000000000,
        "getMinWithdrawAmount": 100000000000000,
        "getNodeELRewardVaultImplementation": "0x97c92752DD8a8947cE453d3e35D2cad5857367af",
        "getOperatorMaxNameLength": 255,
        "getOperatorRewardsCollector": "0x84ffDC9De310144D889540A49052F6d1AdB2C335",
        "getPenaltyContract": "0x84645f1B80475992Df2C65c28bE6688d15dc6ED6",
        "getPermissionedNodeRegistry": "0xaf42d795A6D279e9DCc19DC0eE1cE3ecd4ecf5dD",
        "getPermissionedPool": "0x09134C643A6B95D342BdAf081Fa473338F066572",
        "getPermissionedSocializingPool": "0x9d4C3166c59412CEdBe7d901f5fDe41903a1d6Fc",
        "getPermissionlessNodeRegistry": "0x4f4Bfa0861F62309934a5551E0B2541Ee82fdcF1",
        "getPermissionlessPool": "0xd1a72Bd052e0d65B7c26D3dd97A98B74AcbBb6c5",
        "getPermissionlessSocializingPool": "0x1DE458031bFbe5689deD5A8b9ed57e1E79EaB2A4",
        "getPoolSelector": "0x62e0b431990Ea128fe685E764FB04e7d604603B0",
        "getPoolUtils": "0xeDA89ed8F89D786D816F8E14CF8d2F90c6BF763f",
        "getPreDepositSize": "1000000000000000000",
        "getRewardsThreshold": "8000000000000000000",
        "getSDCollateral": "0x7Af4730cc8EbAd1a050dcad5c03c33D2793EE91f",
        "getSDIncentiveController": "0xe225825bcf20F39E2F2e2170412a3247D83492D0",
        "getSDUtilityPool": "0xED6EE5049f643289ad52411E9aDeC698D04a9602",
        "getSocializingPoolCycleDuration": 201600,
        "getSocializingPoolOptInCoolingPeriod": 403200,
        "getStaderInsuranceFund": "0xbe3781CE437Cc3fC8c8167913B4d462347D11F20",
        "getStaderOracle": "0xF64bAe65f6f2a5277571143A24FaaFDFC0C2a737",
        "getStaderToken": "0x30D20208d987713f46DFD34EF128Bb16C404D10f",
        "getStaderTreasury": "0x80A43dd35382C4919991C5Bca7f46Dd24Fde4C67",
        "getStakedEthPerNode": "32000000000000000000",
        "getStakePoolManager": "0xcf5EA1b38380f6aF39068375516Daf40Ed70D299",
        "getTotalFee": 10000,
        "getUserWithdrawManager": "0x9F0491B32DBce587c50c4C43AB303b06478193A7",
        "getValidatorWithdrawalVaultImplementation": "0x3073cC90aD39E0C30bb0d4c70F981FbD00f3458f",
        "getVaultFactory": "0x03ABEEC03BF39ac5A5C8886cF3496326d8164E1E",
        "getWithdrawnKeyBatchSize": 50,
        "MANAGER": "0xaf290d8680820aad922855f39b306097b20e28774d6c1ad35a20325630c3a02c",
        "MAX_DEPOSIT_AMOUNT": "0x712c13b90acf399d7bc7625370ce37c64b5eba41011b0961a88c2ef1648870cf",
        "MAX_WITHDRAW_AMOUNT": "0x1c2fe98ddbbbffbcf7735c7446ffcddb5ccd2a4ec2ace0f7d90f73e9ff13fcc7",
        "MIN_BLOCK_DELAY_TO_FINALIZE_WITHDRAW_REQUEST": "0x2cf2377da51daa9c0d7e3f98c7532a67ee5e9398afad7b7db6e578b978a27094",
        "MIN_DEPOSIT_AMOUNT": "0xfa5a84fed05ba4c93fcc5ba1f4ad010e3bef3e6394b367aa10b3ec01997375cc",
        "MIN_WITHDRAW_AMOUNT": "0xb18278bb399a7088b8b0b26f4896d5ebaba4497c611bbe9d43abe92d9a1fe83d",
        "NODE_EL_REWARD_VAULT_IMPLEMENTATION": "0x3e4ded42f360c2e6b1251d584085ae1d9aa9cbed18687fac6b6aef8eed1c5ad3",
        "OPERATOR": "0x523a704056dcd17bcf83bed8b68c59416dac1119be77755efe3bde0a64e46e0c",
        "OPERATOR_MAX_NAME_LENGTH": "0x59b5f464ec5829246a81f005456c8cb714ee224aea800742e2dae497263e4669",
        "OPERATOR_REWARD_COLLECTOR": "0x5be667ef1f4c6c279e2aa7e62595a1045043db6a43145cb438c6d36e7a3c3ed8",
        "PENALTY_CONTRACT": "0x29384ec8473b541e7a7850226a4d1906a700f14cc394266ee08800ba62dc3af9",
        "PERMISSIONED_NODE_REGISTRY": "0xa4083e7a78dd898def03c51ce199cb4286b8828be4f6f46e04aec61761967471",
        "PERMISSIONED_POOL": "0x602490b12960e59ddb584affd1da6cd5692f4455c1ba0cc4e865af81e111ebe2",
        "PERMISSIONED_SOCIALIZING_POOL": "0x4c9466ca1bf288a7334a7494f09a0acc38ee31628eaf8c68b574b9f0ec22a9c1",
        "PERMISSIONLESS_NODE_REGISTRY": "0x00665c1b06e0667c56a1ca1706b7573435d1b9162c6327b5d0ea1daeb491ad0d",
        "PERMISSIONLESS_POOL": "0x76d62e541b8d573110ca3eb9003e96426f530422a76712d1356f6c6ce50541ca",
        "PERMISSIONLESS_SOCIALIZING_POOL": "0xc5b1a6a0b843563e6a17ca90bc59d2315c523be427d0c9c2ba08d77ced4f46b1",
        "POOL_SELECTOR": "0xdb5d1c2a9350ca010dcdf3953da11a9e8f7c5e2918cdfa65500e84e7fd4fde7d",
        "POOL_UTILS": "0xd7e49a298cb2719de62e5df1024257eed316db6337361b3a30d56a7532404607",
        "PRE_DEPOSIT_SIZE": "0x9b1ae66636378b5626322a52e22518dd40bb04881cf0440ed16a20c0f902b242",
        "REWARD_THRESHOLD": "0x46b41285bb7b8513ce3a9d95cdf6916699fb00b47326e8d3850be1b6186e0349",
        "SD": "0x95bf18d68834a11aaae7b73ff6037326f163a81a7b5ea80cba96856ce2284fbd",
        "SD_COLLATERAL": "0x5c00ec259bace293b50174e499c413ca897b4bcb54ed468b7e6bade51c6a9f96",
        "SD_INCENTIVE_CONTROLLER": "0xf2b2ce40acf2de0c782cf3a34ddfe1f1f18b1f0871445156842424b1aab892ff",
        "SD_UTILITY_POOL": "0x26b94d9446e6775a4c9592fb825e2f9b26930b186faaaa3fd1a7a31878756020",
        "SOCIALIZING_POOL_CYCLE_DURATION": "0x3c6dcff840f36f9818a73b67d9d00197362f63687bd52e3c277bd0ffb30dde33",
        "SOCIALIZING_POOL_OPT_IN_COOLING_PERIOD": "0xc54a7590fe6738d7a81f393c1cf5ab3e577c91781037d93a5a9f5ce44f19eb51",
        "STADER_INSURANCE_FUND": "0xe5240448c78dfcff5bda4e4eed69ba9635df15d79da0e8a4cf889217106fa45b",
        "STADER_ORACLE": "0x9f919a2294d86593fbcec81ea71aa683cec51c78771c642f8894ba8f39497052",
        "STADER_TREASURY": "0x8567f5af844d68168987760a7ce1762804b9de703165fc50ce4fa85246016c91",
        "STAKE_POOL_MANAGER": "0x3d88d1233771c5c30791fb6805b7f91424dae1e5a68a57da846ca7ff83c64029",
        "TOTAL_FEE": "0x33271b56873d8abb908de4853f90a8a0ef8829548ec0bf6c298feed3917c50a2",
        "USER_WITHDRAW_MANAGER": "0xf935b8bf66b325637ad32ca875b588849cf4026791b79b4dc20623cd3dd36e20",
        "VALIDATOR_WITHDRAWAL_VAULT_IMPLEMENTATION": "0xbd34382cd421c5250595893a4ed6cdb2125e6be7d5e0a9dbc469de5d583adfcf",
        "VAULT_FACTORY": "0x8d4341681b282735dd0d55670ff8e0ad68a80cbfc2cee847065e9f771470f88f",
        "WITHDRAWN_KEYS_BATCH_SIZE": "0x6f8d0b773ad4970d3e7d47623dc9ce06a1b4fe833bf451d06a47e774f9acaa63"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0x54945180dB7943c0ed0FEE7EdaB2Bd24620256bc",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1686349019,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "25400970404607924505115",
        "underlyingToken": "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704",
        "underlyingToShares": [0, 0, 1, 2, 3],
        "underlyingToSharesView": [0, 0, 1, 2, 3]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0x57ba429517c3473B6d34CA9aCd56c0e735b94c02",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "18322532054081002980885",
        "underlyingToken": "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38",
        "underlyingToShares": [0, 1, 2, 3, 4],
        "underlyingToSharesView": [0, 1, 2, 3, 4]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "UpgradeableBeacon",
      "address": "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686348959,
      "values": {
        "implementation": "0x8bA40dA60f0827d027F029aCEE62609F0527a255",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "frxETH",
      "address": "0x5E8422345238F34275888049021821E8E08CAa1f",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1665022895,
      "values": {
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xf76bc0789b1168d8167e9ab7fe582017fc10c446b759047e0b1cb2d4451d7ce6",
        "minters_array": [
          "0xbAFA44EFE7901E04E39Dad13167D089C559c1138",
          "0x8306300ffd616049FD7e4b0354a64Da835c1A81C"
        ],
        "name": "Frax Ether",
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "owner": "0x8306300ffd616049FD7e4b0354a64Da835c1A81C",
        "symbol": "frxETH",
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
        "totalSupply": "249516120613444177559578"
      }
    },
    {
      "name": "AccessControlManager",
      "address": "0x625087d72c762254a72CB22cC2ECa40da6b95EAC",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xBB7B99C2BE525C0A6B719344F89A4255ef593E64",
        "admin": "0x25EAf579cA2255fAA5463c635eec28697b5b8846"
      },
      "implementations": ["0xBB7B99C2BE525C0A6B719344F89A4255ef593E64"],
      "sinceTimestamp": 1681287215,
      "values": {
        "botMethodsPaused": false,
        "coreMethodsPaused": false,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DepositManager": "0xb3D9cf8E163bbc840195a97E81F8A34E295B8f39",
        "NodeOperatorRegistry": "0x46DdC39E780088B1B146Aba8cBBe15DC321A1A1d",
        "operatorMethodsPaused": false,
        "PLATFORM_ADMIN": "0x4ff52032f36e32ac782042a01802e20394d4255c84a3c046490be98ab632691b",
        "SwellTreasury": "0x3D6b2ff01a2D9891A5D649EBb85229768b3Fa44c",
        "swETH": "0xf951E335afb289353dc249e82926178EaC7DEd78",
        "swEXIT": "0x48C11b86807627AF70a34662D4865cF854251663",
        "withdrawalsPaused": false
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x67B12264Ca3e0037Fc7E22F2457b42643a04C86e",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1685990279,
      "values": {
        "owner": "0x1112D5C55670Cb5144BF36114C20a122908068B9"
      }
    },
    {
      "name": "UnwrapTokenV1ETH",
      "address": "0x79973d557CD9dd87eb61E250cc2572c990e20196",
      "upgradeability": {
        "type": "ZeppelinOS proxy",
        "implementation": "0x542059d658624DF6452b22B10302A15a6AB59f10",
        "admin": "0xA3eE6926edcce93BacF05F4222c243c4d9F6d853"
      },
      "implementations": ["0x542059d658624DF6452b22B10302A15a6AB59f10"],
      "sinceTimestamp": 1693467959,
      "values": {
        "admin": "0xA3eE6926edcce93BacF05F4222c243c4d9F6d853",
        "availableAllocateAmount": "8571626512202401693",
        "blacklister": "0x099d699C07Bbc8eE6eB5703746063E04B2aA62A7",
        "ethBackAddress": "0x26ad6395DABF271fD9bFDC82d7377261930E6B86",
        "ethStaked": 0,
        "getNeedRechargeEthAmount": 0,
        "getWithdrawRequests": [
          [
            [
              "0x88A335198af74D7991FF5Ded99ec616Ea92A5144",
              1000000000000000,
              1015915734633000,
              1694508335,
              1695202943,
              true
            ],
            [
              "0xe8556752eaF9908Db86732268eBb85f2Ee3fff2E",
              "271841530000000000",
              "277438802311268169",
              1698792047,
              0,
              true
            ],
            [
              "0x3C0c0d5E4CE41CF55a24D3FD740B6723eA201fdB",
              97563411452224,
              99999999999999,
              1702452659,
              0,
              true
            ],
            [
              "0x3C0c0d5E4CE41CF55a24D3FD740B6723eA201fdB",
              97563411452224,
              99999999999999,
              1702455683,
              0,
              true
            ],
            [
              "0xfbe6Ed1942B03eF4fBa780890550dB1F0c43Bd32",
              "97300000000000000",
              "99930859871756900",
              1704261059,
              0,
              true
            ],
            [
              "0xA13bb13609c3B9AABB8A4D5B4E9EcbaF502cA56E",
              2174451531409012,
              2237280749831800,
              1706021231,
              1706715887,
              true
            ],
            [
              "0xa9c60777fD1A95602D6c080A72Ff02324373F609",
              2000000000000000,
              2059104704908000,
              1706695415,
              0,
              true
            ],
            [
              "0xa9c60777fD1A95602D6c080A72Ff02324373F609",
              5000000000000000,
              5150685268715000,
              1707275315,
              0,
              true
            ],
            [
              "0x8109E2fA615f349f094D31d1a2894Eb658AF95F6",
              "32560389073969169",
              "33615937113222185",
              1709419643,
              1710037895,
              true
            ],
            [
              "0xC3Af71F59F71DAC43e408D76E8709dd11B2a8D4A",
              "34226317655046655",
              "35366263651152302",
              1710126755,
              0,
              true
            ],
            [
              "0x1752F02c09cF732934817e583cE6012D7fF04bF5",
              "908040037719106176",
              "938721263821615036",
              1710582599,
              1711188563,
              true
            ],
            [
              "0x7F7f2CE8D1E308daA2CC2119dD3ff22264671a41",
              "998726715700854134",
              "1032637374570495917",
              1710757655,
              1711720511,
              true
            ]
          ],
          [
            [
              "0xe8556752eaF9908Db86732268eBb85f2Ee3fff2E",
              "271841530000000000",
              "277438802311268169",
              1698792047,
              0,
              true
            ],
            [
              "0x3C0c0d5E4CE41CF55a24D3FD740B6723eA201fdB",
              97563411452224,
              99999999999999,
              1702452659,
              0,
              true
            ],
            [
              "0x3C0c0d5E4CE41CF55a24D3FD740B6723eA201fdB",
              97563411452224,
              99999999999999,
              1702455683,
              0,
              true
            ],
            [
              "0xfbe6Ed1942B03eF4fBa780890550dB1F0c43Bd32",
              "97300000000000000",
              "99930859871756900",
              1704261059,
              0,
              true
            ],
            [
              "0xA13bb13609c3B9AABB8A4D5B4E9EcbaF502cA56E",
              2174451531409012,
              2237280749831800,
              1706021231,
              1706715887,
              true
            ],
            [
              "0xa9c60777fD1A95602D6c080A72Ff02324373F609",
              2000000000000000,
              2059104704908000,
              1706695415,
              0,
              true
            ],
            [
              "0xa9c60777fD1A95602D6c080A72Ff02324373F609",
              5000000000000000,
              5150685268715000,
              1707275315,
              0,
              true
            ],
            [
              "0x8109E2fA615f349f094D31d1a2894Eb658AF95F6",
              "32560389073969169",
              "33615937113222185",
              1709419643,
              1710037895,
              true
            ],
            [
              "0xC3Af71F59F71DAC43e408D76E8709dd11B2a8D4A",
              "34226317655046655",
              "35366263651152302",
              1710126755,
              0,
              true
            ],
            [
              "0x1752F02c09cF732934817e583cE6012D7fF04bF5",
              "908040037719106176",
              "938721263821615036",
              1710582599,
              1711188563,
              true
            ],
            [
              "0x7F7f2CE8D1E308daA2CC2119dD3ff22264671a41",
              "998726715700854134",
              "1032637374570495917",
              1710757655,
              1711720511,
              true
            ]
          ],
          [
            [
              "0x3C0c0d5E4CE41CF55a24D3FD740B6723eA201fdB",
              97563411452224,
              99999999999999,
              1702452659,
              0,
              true
            ],
            [
              "0x3C0c0d5E4CE41CF55a24D3FD740B6723eA201fdB",
              97563411452224,
              99999999999999,
              1702455683,
              0,
              true
            ],
            [
              "0xfbe6Ed1942B03eF4fBa780890550dB1F0c43Bd32",
              "97300000000000000",
              "99930859871756900",
              1704261059,
              0,
              true
            ],
            [
              "0xA13bb13609c3B9AABB8A4D5B4E9EcbaF502cA56E",
              2174451531409012,
              2237280749831800,
              1706021231,
              1706715887,
              true
            ],
            [
              "0xa9c60777fD1A95602D6c080A72Ff02324373F609",
              2000000000000000,
              2059104704908000,
              1706695415,
              0,
              true
            ],
            [
              "0xa9c60777fD1A95602D6c080A72Ff02324373F609",
              5000000000000000,
              5150685268715000,
              1707275315,
              0,
              true
            ],
            [
              "0x8109E2fA615f349f094D31d1a2894Eb658AF95F6",
              "32560389073969169",
              "33615937113222185",
              1709419643,
              1710037895,
              true
            ],
            [
              "0xC3Af71F59F71DAC43e408D76E8709dd11B2a8D4A",
              "34226317655046655",
              "35366263651152302",
              1710126755,
              0,
              true
            ],
            [
              "0x1752F02c09cF732934817e583cE6012D7fF04bF5",
              "908040037719106176",
              "938721263821615036",
              1710582599,
              1711188563,
              true
            ],
            [
              "0x7F7f2CE8D1E308daA2CC2119dD3ff22264671a41",
              "998726715700854134",
              "1032637374570495917",
              1710757655,
              1711720511,
              true
            ]
          ],
          [
            [
              "0x3C0c0d5E4CE41CF55a24D3FD740B6723eA201fdB",
              97563411452224,
              99999999999999,
              1702455683,
              0,
              true
            ],
            [
              "0xfbe6Ed1942B03eF4fBa780890550dB1F0c43Bd32",
              "97300000000000000",
              "99930859871756900",
              1704261059,
              0,
              true
            ],
            [
              "0xA13bb13609c3B9AABB8A4D5B4E9EcbaF502cA56E",
              2174451531409012,
              2237280749831800,
              1706021231,
              1706715887,
              true
            ],
            [
              "0xa9c60777fD1A95602D6c080A72Ff02324373F609",
              2000000000000000,
              2059104704908000,
              1706695415,
              0,
              true
            ],
            [
              "0xa9c60777fD1A95602D6c080A72Ff02324373F609",
              5000000000000000,
              5150685268715000,
              1707275315,
              0,
              true
            ],
            [
              "0x8109E2fA615f349f094D31d1a2894Eb658AF95F6",
              "32560389073969169",
              "33615937113222185",
              1709419643,
              1710037895,
              true
            ],
            [
              "0xC3Af71F59F71DAC43e408D76E8709dd11B2a8D4A",
              "34226317655046655",
              "35366263651152302",
              1710126755,
              0,
              true
            ],
            [
              "0x1752F02c09cF732934817e583cE6012D7fF04bF5",
              "908040037719106176",
              "938721263821615036",
              1710582599,
              1711188563,
              true
            ],
            [
              "0x7F7f2CE8D1E308daA2CC2119dD3ff22264671a41",
              "998726715700854134",
              "1032637374570495917",
              1710757655,
              1711720511,
              true
            ]
          ],
          [
            [
              "0xfbe6Ed1942B03eF4fBa780890550dB1F0c43Bd32",
              "97300000000000000",
              "99930859871756900",
              1704261059,
              0,
              true
            ],
            [
              "0xA13bb13609c3B9AABB8A4D5B4E9EcbaF502cA56E",
              2174451531409012,
              2237280749831800,
              1706021231,
              1706715887,
              true
            ],
            [
              "0xa9c60777fD1A95602D6c080A72Ff02324373F609",
              2000000000000000,
              2059104704908000,
              1706695415,
              0,
              true
            ],
            [
              "0xa9c60777fD1A95602D6c080A72Ff02324373F609",
              5000000000000000,
              5150685268715000,
              1707275315,
              0,
              true
            ],
            [
              "0x8109E2fA615f349f094D31d1a2894Eb658AF95F6",
              "32560389073969169",
              "33615937113222185",
              1709419643,
              1710037895,
              true
            ],
            [
              "0xC3Af71F59F71DAC43e408D76E8709dd11B2a8D4A",
              "34226317655046655",
              "35366263651152302",
              1710126755,
              0,
              true
            ],
            [
              "0x1752F02c09cF732934817e583cE6012D7fF04bF5",
              "908040037719106176",
              "938721263821615036",
              1710582599,
              1711188563,
              true
            ],
            [
              "0x7F7f2CE8D1E308daA2CC2119dD3ff22264671a41",
              "998726715700854134",
              "1032637374570495917",
              1710757655,
              1711720511,
              true
            ]
          ]
        ],
        "implementation": "0x542059d658624DF6452b22B10302A15a6AB59f10",
        "lockTime": 604800,
        "MAX_LOOP_NUM": 1000,
        "MIN_LOCK_TIME": 172800,
        "needEthAmount": 0,
        "nextIndex": 12,
        "operatorAddress": "0x2B59215778e99035CF38663454eF1240a7AE70F5",
        "owner": "0x099d699C07Bbc8eE6eB5703746063E04B2aA62A7",
        "paused": false,
        "pauser": "0x099d699C07Bbc8eE6eB5703746063E04B2aA62A7",
        "rechargeAddress": "0x3E4BD5FB2fCeF981BAFd1D164f838DFC31370Fb1",
        "startAllocatedEthIndex": 12,
        "WBETH_TOKEN_ADDRESS": "0xa2E3356610840701BDf5611a53974510Ae27E2e1"
      },
      "errors": {
        "getWithdrawRequests": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0x7CA911E83dabf90C90dD3De5411a10F1A6112184",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "80008866996329081827932",
        "underlyingToken": "0xa2E3356610840701BDf5611a53974510Ae27E2e1",
        "underlyingToShares": [0, 1, 2, 3, 4],
        "underlyingToSharesView": [0, 1, 2, 3, 4]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "ELFeeRecipientV1",
      "address": "0x7D16d2c4e96BCFC8f815E15b771aC847EcbDB48b",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x108A04f7A181A1e0A58Bdb1772707aEe88294e13",
        "admin": "0x8EE3fC0Bcd7B57429203751C5bE5fdf1AB8409f3"
      },
      "implementations": ["0x108A04f7A181A1e0A58Bdb1772707aEe88294e13"],
      "sinceTimestamp": 1664906351
    },
    {
      "name": "ExchangeRateUpdater",
      "address": "0x81720695e43A39C52557Ce6386feB3FAAC215f06",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1681902335,
      "values": {
        "owner": "0x099d699C07Bbc8eE6eB5703746063E04B2aA62A7",
        "tokenContract": "0xa2E3356610840701BDf5611a53974510Ae27E2e1"
      }
    },
    {
      "name": "eigenDAProxyAdmin",
      "address": "0x8247EF5705d3345516286B72bFE6D690197C2E99",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1712353787,
      "values": {
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "name": "AccountingOracle",
      "address": "0x852deD011285fe67063a08005c71a85690503Cee",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xF3c5E0A67f32CF1dc07a8817590efa102079a1aF",
        "admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"
      },
      "implementations": ["0xF3c5E0A67f32CF1dc07a8817590efa102079a1aF"],
      "sinceTimestamp": 1683023999,
      "values": {
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXTRA_DATA_FORMAT_EMPTY": 0,
        "EXTRA_DATA_FORMAT_LIST": 1,
        "EXTRA_DATA_TYPE_EXITED_VALIDATORS": 2,
        "EXTRA_DATA_TYPE_STUCK_VALIDATORS": 1,
        "GENESIS_TIME": 1606824023,
        "getConsensusContract": "0xD624B08C83bAECF0807Dd2c6880C3154a5F0B288",
        "getConsensusReport": [
          "0xc9ded511acafaf0e10d7bcd295ad6b0219f23e84ca42974f5786e86d9eca0f91",
          8834399,
          1712923211,
          true
        ],
        "getConsensusVersion": 1,
        "getContractVersion": 1,
        "getLastProcessingRefSlot": 8834399,
        "getProcessingState": [
          8834399,
          1712923211,
          "0xc9ded511acafaf0e10d7bcd295ad6b0219f23e84ca42974f5786e86d9eca0f91",
          true,
          "0x5538d9fa45e310056369aab38a2fce5dc1ee472d24ff047c9e71a8eee9266541",
          1,
          true,
          1,
          1
        ],
        "LEGACY_ORACLE": "0x442af784A788A5bd6F42A01Ebe9F287a871243fb",
        "LIDO": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "LOCATOR": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
        "MANAGE_CONSENSUS_CONTRACT_ROLE": "0x04a0afbbd09d5ad397fc858789da4f8edd59f5ca5098d70faa490babee945c3b",
        "MANAGE_CONSENSUS_VERSION_ROLE": "0xc31b1e4b732c5173dc51d519dfa432bad95550ecc4b0f9a61c2a558a2a8e4341",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0xF3c5E0A67f32CF1dc07a8817590efa102079a1aF",
        "proxy__getIsOssified": false,
        "SECONDS_PER_SLOT": 12,
        "SUBMIT_DATA_ROLE": "0x65fa0c17458517c727737e4153dd477fa3e328cf706640b0f68b1a285c5990da"
      }
    },
    {
      "name": "EVMScriptRegistry",
      "address": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
      "upgradeability": {
        "type": "EIP897 proxy",
        "isUpgradable": false,
        "implementation": "0xBF1Ce0Bc4EdaAD8e576b3b55e19c4C15Cf6999eb"
      },
      "implementations": ["0xBF1Ce0Bc4EdaAD8e576b3b55e19c4C15Cf6999eb"],
      "sinceTimestamp": 1608242396,
      "values": {
        "appId": "0xddbcfd564f642ab5627cf68b9b7d374fb4f8a36e941a75d89c87998cef03bd61",
        "executors": [
          ["0x0000000000000000000000000000000000000000", false],
          ["0x5cEb19e1890f677c3676d5ecDF7c501eBA01A054", true],
          ["0x0000000000000000000000000000000000000000", false],
          ["0x0000000000000000000000000000000000000000", false],
          ["0x0000000000000000000000000000000000000000", false]
        ],
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "hasInitialized": true,
        "implementation": "0xBF1Ce0Bc4EdaAD8e576b3b55e19c4C15Cf6999eb",
        "isDepositable": false,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "proxyType": 1,
        "REGISTRY_ADD_EXECUTOR_ROLE": "0xc4e90f38eea8c4212a009ca7b8947943ba4d4a58d19b683417f65291d1cd9ed2",
        "REGISTRY_MANAGER_ROLE": "0xf7a450ef335e1892cb42c8ca72e7242359d7711924b75db5717410da3f614aa3"
      },
      "errors": {
        "executors": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "Firewall",
      "address": "0x854e42A12ed8BBAFb75f99D4a1499e219947C70a",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1666371767,
      "values": {
        "destination": "0xebc83Bb472b2816Ec5B5de8D34F0eFc9088BB2ce",
        "executor": "0xDE55C9dc78f985fE1502484Cb98EBfAB66A56B62",
        "getAdmin": "0x8EE3fC0Bcd7B57429203751C5bE5fdf1AB8409f3",
        "getPendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "OETH",
      "address": "0x856c4Efb76C1D1AE02e20CEB03A2A6a08b0b8dC3",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xEc5d0801fCDaf14E6F72a0FD877581e5b7617c87",
        "admin": "0x0000000000000000000000000000000000000000"
      },
      "implementations": ["0xEc5d0801fCDaf14E6F72a0FD877581e5b7617c87"],
      "sinceTimestamp": 1680121187,
      "values": {
        "_totalSupply": "44619686334684063012383",
        "admin": "0x35918cDE7233F2dD33fA41ae3Cb6aE0e42E0e69F",
        "decimals": 18,
        "governor": "0x35918cDE7233F2dD33fA41ae3Cb6aE0e42E0e69F",
        "implementation": "0xEc5d0801fCDaf14E6F72a0FD877581e5b7617c87",
        "isGovernor": false,
        "name": "Origin Ether",
        "nonRebasingSupply": "16377039173237363940712",
        "rebasingCredits": "26004235356786394029222",
        "rebasingCreditsHighres": "26004235356786394029222912789335",
        "rebasingCreditsPerToken": "920743555238833893",
        "rebasingCreditsPerTokenHighres": "920743555238833893451927956",
        "symbol": "OETH",
        "totalSupply": "44619686334684063012383",
        "vaultAddress": "0x39254033945AA2E4809Cc2977E7087BEE48bd7Ab"
      }
    },
    {
      "name": "StrategyManager",
      "address": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x70f44C13944d49a236E3cD7a94f48f5daB6C619b",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0x70f44C13944d49a236E3cD7a94f48f5daB6C619b"],
      "sinceTimestamp": 1686348947,
      "values": {
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "DEPOSIT_TYPEHASH": "0x4337f82d142e41f2a8c10547cd8c859bddb92262a61058e77842e24d9dea9224",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "domainSeparator": "0xdaba058ab21f198a04ec80cf0d39f943660a92a99bda5de5016f923f7e4962ef",
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 1,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "strategyWhitelister": "0xBE1685C81aA44FF9FB319dD389addd9374383e90"
      }
    },
    {
      "name": "eigenDAServiceManager",
      "address": "0x870679E138bCdf293b7Ff14dD44b70FC97e12fc0",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xF5fD25A90902c27068CF5eBe53Be8da693Ac899e",
        "admin": "0x8247EF5705d3345516286B72bFE6D690197C2E99"
      },
      "implementations": ["0xF5fD25A90902c27068CF5eBe53Be8da693Ac899e"],
      "sinceTimestamp": 1712353787,
      "values": {
        "avsDirectory": "0x135DDa560e946695d6f155dACaFC6f1F25C1F5AF",
        "batchId": 232,
        "BLOCK_STALE_MEASURE": 150,
        "blsApkRegistry": "0x00A5Fd09F6CeE6AE9C8b0E5e33287F7c82880505",
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "getRestakeableStrategies": [
          "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
          "0x93c4b944D05dfe6df7645A86cd2206016c51564D",
          "0x1BeE69b7dFFfA4E2d53C2a2Df135C388AD25dCD2",
          "0x54945180dB7943c0ed0FEE7EdaB2Bd24620256bc",
          "0x9d7eD45EE2E8FC5482fa2428f15C971e6369011d",
          "0x13760F50a9d7377e4F20CB8CF9e4c26586c658ff",
          "0xa4C637e0F704745D182e4D38cAb7E7485321d059",
          "0x57ba429517c3473B6d34CA9aCd56c0e735b94c02",
          "0x0Fe4F44beE93503346A3Ac9EE5A26b130a5796d6",
          "0x7CA911E83dabf90C90dD3De5411a10F1A6112184",
          "0x8CA7A5d6f3acd3A7A8bC468a8CD0FB14B6BD28b6",
          "0xAe60d8180437b5C34bB956822ac2710972584473",
          "0x298aFB19A105D59E74658C4C334Ff360BadE6dd2"
        ],
        "owner": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "quorumAdversaryThresholdPercentages": "0x21",
        "quorumConfirmationThresholdPercentages": "0x37",
        "quorumNumbersRequired": "0x00",
        "registryCoordinator": "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656",
        "stakeRegistry": "0x006124Ae7976137266feeBFb3F4D2BE4C073139D",
        "staleStakesForbidden": false,
        "STORE_DURATION_BLOCKS": 100800,
        "taskNumber": 232,
        "THRESHOLD_DENOMINATOR": 100
      },
      "derivedName": "EigenDAServiceManager"
    },
    {
      "name": "OracleV1",
      "address": "0x895a57eD71025D51fe4080530A3489D92E230683",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x485ade5B7f66ECcaD4583862bc5c2Aa838720aA0",
        "admin": "0x1FeA87DbC20f8c4846Ac7d69f48d379Da8BE91f2"
      },
      "implementations": ["0x485ade5B7f66ECcaD4583862bc5c2Aa838720aA0"],
      "sinceTimestamp": 1664906279,
      "values": {
        "getAdmin": "0x9842a4eF1968b7FCb0eB970D6B9840Cd061f2Ab7",
        "getGlobalReportStatus": 0,
        "getLastReportedEpochId": 276076,
        "getOracleMembers": [
          "0x2D1627EbB96C9d7D75d8953a3585759FAc7A9a6B",
          "0xF41e72CB95575B6Ff5c4821F0398Ede5eFF16310",
          "0xA1cE8b80839FbE8E94B06D7Dd3A6CEce53c396Ad",
          "0xA9af3C80166FaAf0c845AB7bA1Aa8C35E4286FDE",
          "0xdA4e6b3442aDEf397dC63b840c7D24AB7a790b32"
        ],
        "getPendingAdmin": "0x0000000000000000000000000000000000000000",
        "getQuorum": 3,
        "getReportVariantDetails": [],
        "getReportVariantsCount": 0,
        "getRiver": "0x8c1BEd5b9a0928467c9B1341Da1D7BD5e10b6549"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686348935,
      "values": {
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "EigenPod",
      "address": "0x8bA40dA60f0827d027F029aCEE62609F0527a255",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1711141931,
      "values": {
        "delayedWithdrawalRouter": "0x7Fe7E9CC0F274d2435AD5d56D5fa73E47F6A23D8",
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "ethPOS": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "GENESIS_TIME": 1606824023,
        "hasRestaked": false,
        "MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR": 32000000000,
        "mostRecentWithdrawalTimestamp": 0,
        "nonBeaconChainETHBalanceWei": 0,
        "podOwner": "0x0000000000000000000000000000000000000000",
        "sumOfPartialWithdrawalsClaimedGwei": 0,
        "withdrawableRestakedExecutionLayerGwei": 0
      }
    },
    {
      "name": "RiverV1",
      "address": "0x8c1BEd5b9a0928467c9B1341Da1D7BD5e10b6549",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x48D93d8C45Fb25125F13cdd40529BbeaA97A6565",
        "admin": "0x3A5b4db174a3CC17d8cE40C5B04272737195151b"
      },
      "implementations": ["0x48D93d8C45Fb25125F13cdd40529BbeaA97A6565"],
      "sinceTimestamp": 1664906231,
      "values": {
        "_DEPOSIT_SIZE": "32000000000000000000",
        "decimals": 18,
        "DEPOSIT_SIZE": "32000000000000000000",
        "getAdmin": "0xd745A68c705F5aa75DFf528540678288ed2aD9eE",
        "getAllowlist": "0xebc83Bb472b2816Ec5B5de8D34F0eFc9088BB2ce",
        "getBalanceToDeposit": "8542514654295640848",
        "getBalanceToRedeem": 0,
        "getCLSpec": [225, 32, 12, 1606824023, 0],
        "getCLValidatorCount": 2748,
        "getCLValidatorTotalBalance": "69528030551685000000000",
        "getCollector": "0x53b5c4231FBa19de04866A84FEd928aEca0102Fe",
        "getCommittedBalance": 0,
        "getCoverageFund": "0x32Aac358b627B9FEaa971CC33304027A41e49a81",
        "getCurrentEpochId": 276080,
        "getCurrentFrame": [276075, 106012800, 106099199],
        "getDailyCommittableLimits": ["10000000000000000000000", 2000],
        "getDepositedValidatorCount": 2750,
        "getELFeeRecipient": "0x7D16d2c4e96BCFC8f815E15b771aC847EcbDB48b",
        "getExpectedEpochId": 276300,
        "getFrameFirstEpochId": [0, 0, 0, 0, 0],
        "getGlobalFee": 1000,
        "getLastCompletedEpochId": 276075,
        "getLastConsensusLayerReport": [
          276075,
          "69528030551685000000000",
          "721830278989000000000",
          "18432000000000000000000",
          0,
          2748,
          true,
          false
        ],
        "getMetadataURI": "ipfs://QmeBWJXHvCMdCb7eUJKjkUAt94ZXR9Kb1tKWkABnjaHcdW",
        "getOperatorsRegistry": "0x1235f1b60df026B2620e48E735C422425E06b725",
        "getOracle": "0x895a57eD71025D51fe4080530A3489D92E230683",
        "getPendingAdmin": "0x0000000000000000000000000000000000000000",
        "getRedeemManager": "0x080b3a41390b357Ad7e8097644d1DEDf57AD3375",
        "getReportBounds": [1000, 500],
        "getTime": 1712838959,
        "getWithdrawalCredentials": "0x0100000000000000000000000afd81862eea47322cf85db39d3d07e8a3c25154",
        "isValidEpoch": [false, false, false, false, false],
        "name": "Liquid Staked ETH",
        "PUBLIC_KEY_LENGTH": 48,
        "sharesFromUnderlyingBalance": [0, 0, 1, 2, 3],
        "SIGNATURE_LENGTH": 96,
        "symbol": "LsETH",
        "totalSupply": "66595594429453682502619",
        "totalUnderlyingSupply": "69600573066339295640848",
        "underlyingBalanceFromShares": [0, 1, 2, 3, 4]
      },
      "errors": {
        "getFrameFirstEpochId": "Too many values. Update configuration to explore fully",
        "isValidEpoch": "Too many values. Update configuration to explore fully",
        "sharesFromUnderlyingBalance": "Too many values. Update configuration to explore fully",
        "underlyingBalanceFromShares": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0x8CA7A5d6f3acd3A7A8bC468a8CD0FB14B6BD28b6",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1704485723,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "25067790562273562825538",
        "underlyingToken": "0xac3E018457B222d93114458476f3E3416Abbe38F",
        "underlyingToShares": [0, 1, 2, 3, 4],
        "underlyingToSharesView": [0, 1, 2, 3, 4]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x8EE3fC0Bcd7B57429203751C5bE5fdf1AB8409f3",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "4 of 7 (57%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1664878619,
      "values": {
        "domainSeparator": "0x2446c719177142bdfeae051ea65ae8acec822abec72c2d2073e21a3507c50b74",
        "getChainId": 1,
        "getOwners": [
          "0xbc404b5642100adadd1a3420189e407381041d4b",
          "0x7E5eD7175C942F0F7B23c458dc7F0E888F70209E",
          "0x355849b81da205e3d0ff8aF6dAe1BB06C1c84940",
          "0x40490576A8972302002258b434A6E0be9075623F",
          "0x256e1CD4777D0b47e530173Bd78674515300631C",
          "0x555Cae74d729230cf60cC4a3e4a97CE0f1212E40",
          "0x63bAEf68c57A7bA8a41a681423506DdBeeAd6b8F"
        ],
        "getThreshold": 4,
        "nonce": 36,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "EIP712StETH",
      "address": "0x8F73e4C2A6D852bb4ab2A45E6a9CF5715b3228B7",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1683023915
    },
    {
      "name": "EigenPodManager",
      "address": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xe4297e3DaDBc7D99e26a2954820f514CB50C5762",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xe4297e3DaDBc7D99e26a2954820f514CB50C5762"],
      "sinceTimestamp": 1686348947,
      "values": {
        "beaconChainETHStrategy": "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
        "beaconChainOracle": "0x343907185b71aDF0eBa9567538314396aa985442",
        "delegationManager": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "denebForkTimestamp": 1710338135,
        "eigenPodBeacon": "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073",
        "ethPOS": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "numPods": 29995,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0x93c4b944D05dfe6df7645A86cd2206016c51564D",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1686349019,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "889819182051320058466805",
        "underlyingToken": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "underlyingToShares": [0, 0, 1, 2, 3],
        "underlyingToSharesView": [0, 0, 1, 2, 3]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "ACL",
      "address": "0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb",
      "upgradeability": {
        "type": "EIP897 proxy",
        "isUpgradable": true,
        "implementation": "0x9f3b9198911054B122fDb865f8A5Ac516201c339"
      },
      "implementations": ["0x9f3b9198911054B122fDb865f8A5Ac516201c339"],
      "sinceTimestamp": 1608242396,
      "values": {
        "ANY_ENTITY": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
        "appId": "0xe3262375f45a6e2026b7e7b18c2b807434f2508fe1a2a3dfb493c7df8f4aad6a",
        "BURN_ENTITY": "0x0000000000000000000000000000000000000001",
        "CREATE_PERMISSIONS_ROLE": "0x0b719b33c83b8e5d300c521cb8b54ae9bd933996a14bef8c2f4e0285d2d2400a",
        "EMPTY_PARAM_HASH": "0x290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getInitializationBlock": 11473216,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "hasInitialized": true,
        "implementation": "0x9f3b9198911054B122fDb865f8A5Ac516201c339",
        "isDepositable": false,
        "isPetrified": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "NO_PERMISSION": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "proxyType": 2
      }
    },
    {
      "name": "ExchangeRateUpdater",
      "address": "0x9b37180d847B27ADC13C2277299045C1237Ae281",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1643910274,
      "values": {
        "owner": "0x352978614FA84D763882A9023B169D8709C477f8",
        "tokenContract": "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0x9d7eD45EE2E8FC5482fa2428f15C971e6369011d",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "103483949355585265446587",
        "underlyingToken": "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
        "underlyingToShares": [0, 1, 2, 3, 4],
        "underlyingToSharesView": [0, 1, 2, 3, 4]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "WrapTokenV2ETH",
      "address": "0xa2E3356610840701BDf5611a53974510Ae27E2e1",
      "upgradeability": {
        "type": "ZeppelinOS proxy",
        "implementation": "0xfe928A7D8Be9c8cEce7e97F0Ed5704f4fA2cb42A",
        "admin": "0xA3eE6926edcce93BacF05F4222c243c4d9F6d853"
      },
      "implementations": ["0xfe928A7D8Be9c8cEce7e97F0Ed5704f4fA2cb42A"],
      "sinceTimestamp": 1681902323,
      "values": {
        "_EXCHANGE_RATE_UNIT": "1000000000000000000",
        "_UNWRAP_ETH_ADDRESS": "0x79973d557CD9dd87eb61E250cc2572c990e20196",
        "admin": "0xA3eE6926edcce93BacF05F4222c243c4d9F6d853",
        "blacklister": "0x099d699C07Bbc8eE6eB5703746063E04B2aA62A7",
        "CANCEL_AUTHORIZATION_TYPEHASH": "0x158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a1597429",
        "currency": "ETH",
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xd37a875f1ef2a63f2649b9d08b634c22faa1921cbcb1de62790e04176d134bab",
        "ethReceiver": "0x26ad6395DABF271fD9bFDC82d7377261930E6B86",
        "exchangeRate": "1036108545396000000",
        "implementation": "0xfe928A7D8Be9c8cEce7e97F0Ed5704f4fA2cb42A",
        "masterMinter": "0x099d699C07Bbc8eE6eB5703746063E04B2aA62A7",
        "name": "Wrapped Binance Beacon ETH",
        "operator": "0x2B59215778e99035CF38663454eF1240a7AE70F5",
        "oracle": "0x81720695e43A39C52557Ce6386feB3FAAC215f06",
        "owner": "0x099d699C07Bbc8eE6eB5703746063E04B2aA62A7",
        "paused": false,
        "pauser": "0x099d699C07Bbc8eE6eB5703746063E04B2aA62A7",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "RECEIVE_WITH_AUTHORIZATION_TYPEHASH": "0xd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de8",
        "rescuer": "0x0000000000000000000000000000000000000000",
        "symbol": "wBETH",
        "totalSupply": "711260402210996822822385",
        "TRANSFER_WITH_AUTHORIZATION_TYPEHASH": "0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267",
        "version": "2"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0xA3464e1b86EE6941A600f9F69C61A47322af918F",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "3 of 5 (60%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1670915759,
      "values": {
        "domainSeparator": "0xecb634f606f63dfb09b22b4c1f395204ce158aa7efbe05d5774606dcc0d7c2c5",
        "getChainId": 1,
        "getOwners": [
          "0xC63A2dc360707B718C534eEC2F6dD09d4DD457C8",
          "0xb64F7b84AF9919a5d8cBb063283942aa834df8Fd",
          "0x57F9672bA603251C9C03B36cabdBBcA7Ca8Cfcf4",
          "0x0d68CdA4a0640205eD29E9eFca5646D9474AE430",
          "0xe088d9E0498A83F05871f8c09d6cE820586B0DD9"
        ],
        "getThreshold": 3,
        "nonce": 45,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "ETHx",
      "address": "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x4C22fFd479637EA0eD61D451CBe6355627283358",
        "admin": "0x67B12264Ca3e0037Fc7E22F2457b42643a04C86e"
      },
      "implementations": ["0x4C22fFd479637EA0eD61D451CBe6355627283358"],
      "sinceTimestamp": 1685990327,
      "values": {
        "BURNER_ROLE": "0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "MINTER_ROLE": "0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
        "name": "ETHx",
        "paused": false,
        "staderConfig": "0x4ABEF2263d5A5ED582FC9A9789a41D85b68d69DB",
        "symbol": "ETHx",
        "totalSupply": "123027200554199094494569"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0xa4C637e0F704745D182e4D38cAb7E7485321d059",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "15882404118400668395787",
        "underlyingToken": "0x856c4Efb76C1D1AE02e20CEB03A2A6a08b0b8dC3",
        "underlyingToShares": [0, 0, 1, 2, 3],
        "underlyingToSharesView": [0, 0, 1, 2, 3]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "Timelock",
      "address": "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686370679,
      "values": {
        "admin": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "delay": 864000,
        "GRACE_PERIOD": 1209600,
        "MAXIMUM_DELAY": 2592000,
        "MINIMUM_DELAY": 172800,
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "sfrxETH",
      "address": "0xac3E018457B222d93114458476f3E3416Abbe38F",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1665022895,
      "values": {
        "asset": "0x5E8422345238F34275888049021821E8E08CAa1f",
        "convertToAssets": [0, 1, 2, 3, 4],
        "convertToShares": [0, 0, 1, 2, 3],
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xe8254029df4a5fbfcf2de75f8fcf68b1060354a363693b1507e1197cc3dcc29b",
        "lastRewardAmount": "135225000000000000000",
        "lastSync": 1712799539,
        "name": "Staked Frax Ether",
        "previewDeposit": [0, 0, 1, 2, 3],
        "previewMint": [0, 2, 3, 4, 5],
        "previewRedeem": [0, 1, 2, 3, 4],
        "previewWithdraw": [0, 1, 2, 3, 4],
        "pricePerShare": "1082482195927912677",
        "rewardsCycleEnd": 1713398400,
        "rewardsCycleLength": 604800,
        "symbol": "sfrxETH",
        "totalAssets": "170842461859262652323430",
        "totalSupply": "157824731438483460004340"
      },
      "errors": {
        "convertToAssets": "Too many values. Update configuration to explore fully",
        "convertToShares": "Too many values. Update configuration to explore fully",
        "previewDeposit": "Too many values. Update configuration to explore fully",
        "previewMint": "Too many values. Update configuration to explore fully",
        "previewRedeem": "Too many values. Update configuration to explore fully",
        "previewWithdraw": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "StrategyBaseTVLLimits",
      "address": "0xAe60d8180437b5C34bB956822ac2710972584473",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1704485723,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        ],
        "maxPerDeposit": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "maxTotalDeposits": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "sharesToUnderlying": [0, 1, 2, 3, 4],
        "sharesToUnderlyingView": [0, 1, 2, 3, 4],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "9875892366555541513577",
        "underlyingToken": "0x8c1BEd5b9a0928467c9B1341Da1D7BD5e10b6549",
        "underlyingToShares": [0, 1, 2, 3, 4],
        "underlyingToSharesView": [0, 1, 2, 3, 4]
      },
      "errors": {
        "sharesToUnderlying": "Too many values. Update configuration to explore fully",
        "sharesToUnderlyingView": "Too many values. Update configuration to explore fully",
        "underlyingToShares": "Too many values. Update configuration to explore fully",
        "underlyingToSharesView": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "RocketTokenRETH",
      "address": "0xae78736Cd615f374D3085123A210448E74Fc6393",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1632980684,
      "values": {
        "decimals": 18,
        "getCollateralRate": 272566972138981,
        "getEthValue": [0, 1, 2, 3, 4],
        "getExchangeRate": "1103240008799569589",
        "getRethValue": [0, 0, 1, 2, 3],
        "getTotalCollateral": "12528014308877423995996",
        "name": "Rocket Pool ETH",
        "symbol": "rETH",
        "totalSupply": "522392337524232069131431",
        "version": 1
      },
      "errors": {
        "getEthValue": "Too many values. Update configuration to explore fully",
        "getRethValue": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "Lido",
      "address": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
      "upgradeability": {
        "type": "EIP897 proxy",
        "isUpgradable": true,
        "implementation": "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb"
      },
      "implementations": ["0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb"],
      "sinceTimestamp": 1608242396,
      "values": {
        "appId": "0x3ca7c3e38968823ccb4c78ea688df41356f182ae1d159e4ee608d30d68cef320",
        "canDeposit": true,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x260e7e1a220ea89b9454cbcdc1fcc44087325df199a3986e560d75db18b2e253",
        "eip712Domain": [
          "Liquid staked Ether 2.0",
          "2",
          1,
          "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84"
        ],
        "getBeaconStat": [337198, 337198, "9412048486709743000000000"],
        "getBufferedEther": "579210295382629624661",
        "getContractVersion": 2,
        "getCurrentStakeLimit": "150000000000000000000000",
        "getDepositableEther": 0,
        "getEIP712StETH": "0x8F73e4C2A6D852bb4ab2A45E6a9CF5715b3228B7",
        "getEVMScriptRegistry": "0x853cc0D5917f49B57B8e9F89e491F5E18919093A",
        "getFee": 1000,
        "getFeeDistribution": [5000, 0, 5000],
        "getInitializationBlock": 11473216,
        "getLidoLocator": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
        "getOracle": "0x442af784A788A5bd6F42A01Ebe9F287a871243fb",
        "getPooledEthByShares": [0, 1, 2, 3, 4],
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "getSharesByPooledEth": [0, 0, 1, 2, 3],
        "getStakeLimitFullInfo": [
          false,
          true,
          "150000000000000000000000",
          "150000000000000000000000",
          6400,
          "149999948434777711696793",
          19632387
        ],
        "getTotalELRewardsCollected": "153420701236710820538153",
        "getTotalPooledEther": "9412627697005125629624661",
        "getTotalShares": "8091586134148697325737024",
        "getTreasury": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "getWithdrawalCredentials": "0x010000000000000000000000b9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
        "hasInitialized": true,
        "implementation": "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb",
        "isDepositable": false,
        "isPetrified": false,
        "isStakingPaused": false,
        "isStopped": false,
        "kernel": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
        "name": "Liquid staked Ether 2.0",
        "PAUSE_ROLE": "0x139c2898040ef16910dc9f44dc697df79363da767d8bc92f2e310312b816e46d",
        "proxyType": 2,
        "RESUME_ROLE": "0x2fc10cc8ae19568712f7a176fb4978616a610650813c9d05326c34abb62749c7",
        "STAKING_CONTROL_ROLE": "0xa42eee1333c0758ba72be38e728b6dadb32ea767de5b4ddbaea1dae85b1b051f",
        "STAKING_PAUSE_ROLE": "0x84ea57490227bc2be925c684e2a367071d69890b629590198f4125a018eb1de8",
        "symbol": "stETH",
        "totalSupply": "9412627697005125629624661",
        "UNSAFE_CHANGE_DEPOSITED_VALIDATORS_ROLE": "0xe6dc5d79630c61871e99d341ad72c5a052bed2fc8c79e5a4480a7cd31117576c"
      },
      "errors": {
        "getPooledEthByShares": "Too many values. Update configuration to explore fully",
        "getSharesByPooledEth": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "Kernel",
      "address": "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc",
      "upgradeability": {
        "type": "EIP897 proxy",
        "isUpgradable": true,
        "implementation": "0x2b33CF282f867A7FF693A66e11B0FcC5552e4425"
      },
      "implementations": ["0x2b33CF282f867A7FF693A66e11B0FcC5552e4425"],
      "sinceTimestamp": 1608242396,
      "values": {
        "acl": "0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb",
        "APP_ADDR_NAMESPACE": "0xd6f028ca0e8edb4a8c9757ca4fdccab25fa1e0317da1188108f7d2dee14902fb",
        "APP_BASES_NAMESPACE": "0xf1f3eb40f5bc1ad1344716ced8b8a0431d840b5783aea1fd01786bc26f35ac0f",
        "APP_MANAGER_ROLE": "0xb6d92708f3d4817afc106147d969e229ced5c46e65e0a5002a0d391287762bd0",
        "CORE_NAMESPACE": "0xc681a85306374a5ab27f0bbc385296a54bcd314a1948b6cf61c4ea1bc44bb9f8",
        "DEFAULT_ACL_APP_ID": "0xe3262375f45a6e2026b7e7b18c2b807434f2508fe1a2a3dfb493c7df8f4aad6a",
        "getInitializationBlock": 11473216,
        "getRecoveryVault": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "hasInitialized": true,
        "implementation": "0x2b33CF282f867A7FF693A66e11B0FcC5552e4425",
        "isDepositable": false,
        "isPetrified": false,
        "KERNEL_APP_ID": "0x3b4bf6bf3ad5000ecf0f989d5befde585c6860fea3e574a4fab4c49d1c177d9c",
        "proxyType": 2,
        "recoveryVaultAppId": "0x701a4fd1f5174d12a0f1d9ad2c88d0ad11ab6aad0ac72b7d9ce621815f8016a9"
      }
    },
    {
      "name": "IndexRegistry",
      "address": "0xBd35a7a1CDeF403a6a99e4E8BA0974D198455030",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1ae0b73118906f39D5ED30Ae4A484ce2F479a14c",
        "admin": "0x8247EF5705d3345516286B72bFE6D690197C2E99"
      },
      "implementations": ["0x1ae0b73118906f39D5ED30Ae4A484ce2F479a14c"],
      "sinceTimestamp": 1712353799,
      "values": {
        "OPERATOR_DOES_NOT_EXIST_ID": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "registryCoordinator": "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "3 of 6 (50%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686327791,
      "values": {
        "domainSeparator": "0x34c8be0f1205a420b291c5ce97375b669d2d120e32d7aa5ea9f2497a0fbcc3e2",
        "getChainId": 1,
        "getOwners": [
          "0xa2425B00F9A9457AEdd51d4C36d9917eA1Aa7a02",
          "0xb7Ae34BB33da55f12797e793E01e63a17B11d108",
          "0x27ff193A6A1574A611E21c39FDA636fA1d61ba30",
          "0x422e2F724faFE75F3635458aD7D3Ac803DCD7ff1",
          "0xeD7Ef087d1C01ecCA9a9688a44aaeDDEf4ea560E",
          "0xe7fFd467F7526abf9c8796EDeE0AD30110419127"
        ],
        "getThreshold": 3,
        "nonce": 25,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "StakedTokenV1",
      "address": "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704",
      "upgradeability": {
        "type": "ZeppelinOS proxy",
        "implementation": "0x31724cA0C982A31fbb5C57f4217AB585271fc9a5",
        "admin": "0xDEd1F5e7Fb71c1740AEBc09b6b0a5E24b0cB71d1"
      },
      "implementations": ["0x31724cA0C982A31fbb5C57f4217AB585271fc9a5"],
      "sinceTimestamp": 1643901537,
      "values": {
        "admin": "0xDEd1F5e7Fb71c1740AEBc09b6b0a5E24b0cB71d1",
        "blacklister": "0xBE3c68821D585Cf1552214897a1c091014B1EB0a",
        "CANCEL_AUTHORIZATION_TYPEHASH": "0x158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a1597429",
        "currency": "",
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x04f14019d5946f59c261cc47c80cce951ffd35ef52dbed0e2c02d646c9013541",
        "exchangeRate": "1068622656882480732",
        "implementation": "0x31724cA0C982A31fbb5C57f4217AB585271fc9a5",
        "masterMinter": "0xd0F73E06E7b88c8e1da291bB744c4eEBAf9Af59f",
        "name": "Coinbase Wrapped Staked ETH",
        "oracle": "0x9b37180d847B27ADC13C2277299045C1237Ae281",
        "owner": "0xD0f9b590EAe80815b81bE857A21f69d07453560E",
        "paused": false,
        "pauser": "0x46574f57f3F5DFCCd296F80407b3f4778414f8f5",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "RECEIVE_WITH_AUTHORIZATION_TYPEHASH": "0xd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de8",
        "rescuer": "0x0000000000000000000000000000000000000000",
        "symbol": "cbETH",
        "totalSupply": "1463493712618694818437485",
        "TRANSFER_WITH_AUTHORIZATION_TYPEHASH": "0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267",
        "version": "2"
      }
    },
    {
      "name": "LidoLocator",
      "address": "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1D920cc5bACf7eE506a271a5259f2417CaDeCE1d",
        "admin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"
      },
      "implementations": ["0x1D920cc5bACf7eE506a271a5259f2417CaDeCE1d"],
      "sinceTimestamp": 1681295123,
      "values": {
        "accountingOracle": "0x852deD011285fe67063a08005c71a85690503Cee",
        "burner": "0xD15a672319Cf0352560eE76d9e89eAB0889046D3",
        "coreComponents": [
          "0x388C818CA8B9251b393131C08a736A67ccB19297",
          "0x9305c1Dbfe22c12c66339184C0025d7006f0f1cC",
          "0xFdDf38947aFB03C621C71b06C9C70bce73f12999",
          "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
          "0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1",
          "0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f"
        ],
        "depositSecurityModule": "0xC77F8768774E1c9244BEed705C4354f2113CFc09",
        "elRewardsVault": "0x388C818CA8B9251b393131C08a736A67ccB19297",
        "legacyOracle": "0x442af784A788A5bd6F42A01Ebe9F287a871243fb",
        "lido": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "oracleDaemonConfig": "0xbf05A929c3D7885a6aeAd833a992dA6E5ac23b09",
        "oracleReportComponentsForLido": [
          "0x852deD011285fe67063a08005c71a85690503Cee",
          "0x388C818CA8B9251b393131C08a736A67ccB19297",
          "0x9305c1Dbfe22c12c66339184C0025d7006f0f1cC",
          "0xD15a672319Cf0352560eE76d9e89eAB0889046D3",
          "0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1",
          "0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f",
          "0x442af784A788A5bd6F42A01Ebe9F287a871243fb"
        ],
        "oracleReportSanityChecker": "0x9305c1Dbfe22c12c66339184C0025d7006f0f1cC",
        "postTokenRebaseReceiver": "0x442af784A788A5bd6F42A01Ebe9F287a871243fb",
        "proxy__getAdmin": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "proxy__getImplementation": "0x1D920cc5bACf7eE506a271a5259f2417CaDeCE1d",
        "proxy__getIsOssified": false,
        "stakingRouter": "0xFdDf38947aFB03C621C71b06C9C70bce73f12999",
        "treasury": "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c",
        "validatorsExitBusOracle": "0x0De4Ea0184c2ad0BacA7183356Aea5B8d5Bf5c6e",
        "withdrawalQueue": "0x889edC2eDab5f40e902b864aD4d7AdE8E412F9B1",
        "withdrawalVault": "0xB9D7934878B5FB9610B3fE8A5e441e8fad7E293f"
      }
    },
    {
      "name": "TimelockController",
      "address": "0xc26016f1166bE7b6c5611AAB104122E0f6c2aCE2",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696584695,
      "values": {
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 0,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xCc4E08A5BFA887621Ad68826a0D5913d7a2cb392",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1604947668,
      "values": {
        "owner": "0xA3464e1b86EE6941A600f9F69C61A47322af918F"
      }
    },
    {
      "name": "METH",
      "address": "0xd5F7838F5C461fefF7FE49ea5ebaF7728bB0ADfa",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xc9173Bf8Bd5c1b071B5CaE4122202A347b7EeFab",
        "admin": "0xc26016f1166bE7b6c5611AAB104122E0f6c2aCE2"
      },
      "implementations": ["0xc9173Bf8Bd5c1b071B5CaE4122202A347b7EeFab"],
      "sinceTimestamp": 1696584719,
      "values": {
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0x527accfc1084b3e374075efaa3177439121f2106d5783f22d441f2e9e8aef88e",
        "eip712Domain": [
          "0x0f",
          "mETH",
          "1",
          1,
          "0xd5F7838F5C461fefF7FE49ea5ebaF7728bB0ADfa",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          []
        ],
        "name": "mETH",
        "stakingContract": "0xe3cBd06D7dadB3F4e6557bAb7EdD924CD1489E8f",
        "symbol": "mETH",
        "totalSupply": "487666272590797395701856",
        "unstakeRequestsManagerContract": "0x38fDF7b489316e03eD8754ad339cb5c4483FDcf9"
      }
    },
    {
      "name": "Firewall",
      "address": "0xd745A68c705F5aa75DFf528540678288ed2aD9eE",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1664906207,
      "values": {
        "destination": "0x8c1BEd5b9a0928467c9B1341Da1D7BD5e10b6549",
        "executor": "0xDE55C9dc78f985fE1502484Cb98EBfAB66A56B62",
        "getAdmin": "0xE3208Aa9d1186c1D1C8A5b76E794b2B68E6cb3a5",
        "getPendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "Slasher",
      "address": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xF3234220163a757edf1E11a8a085638D9B236614",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xF3234220163a757edf1E11a8a085638D9B236614"],
      "sinceTimestamp": 1686348947,
      "values": {
        "delegation": "0x0000000000000000000000000000000000000000",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "Staking",
      "address": "0xe3cBd06D7dadB3F4e6557bAb7EdD924CD1489E8f",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdecaCC56fc347274D3Df2b709602632845611D39",
        "admin": "0xc26016f1166bE7b6c5611AAB104122E0f6c2aCE2"
      },
      "implementations": ["0xdecaCC56fc347274D3Df2b709602632845611D39"],
      "sinceTimestamp": 1696584851,
      "values": {
        "allocatedETHForDeposits": 0,
        "ALLOCATOR_SERVICE_ROLE": "0xe6ef7125bfa79685f3bd2e4c4cea243c1e988ebbc0801ab7641ae36b9e2c5291",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "depositContract": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "ethToMETH": [0, 0, 1, 2, 3],
        "exchangeAdjustmentRate": 4,
        "initializationBlockNumber": 18290644,
        "INITIATOR_SERVICE_ROLE": "0xe30bb2df90b65284acd0e8b5ebe3483bb2bbe65a08e43f0f9e8300fd8607ee11",
        "isStakingAllowlist": false,
        "maximumDepositAmount": "32000000000000000000",
        "maximumMETHSupply": "600000000000000000000000",
        "mETH": "0xd5F7838F5C461fefF7FE49ea5ebaF7728bB0ADfa",
        "mETHToETH": [0, 1, 2, 3, 4],
        "minimumDepositAmount": "32000000000000000000",
        "minimumStakeBound": "20000000000000000",
        "minimumUnstakeBound": "10000000000000000",
        "numInitiatedValidators": 17289,
        "oracle": "0x8735049F496727f824Cc0f2B174d826f5c408192",
        "pauser": "0x29Ab878aEd032e2e2c86FF4A9a9B05e3276cf1f8",
        "returnsAggregator": "0x1766be66fBb0a1883d41B4cfB0a533c5249D3b82",
        "STAKING_ALLOWLIST_MANAGER_ROLE": "0x8ea5b4dbd68db0bf23bf4cda958b61a749f8c5aec6f2912d75a03246753ddd16",
        "STAKING_ALLOWLIST_ROLE": "0xdec9d30de0821ad67aa5b141b13a539f584a19f99319e6041698a892b0e79559",
        "STAKING_MANAGER_ROLE": "0xa6b5d83d32632203555cb9b2c2f68a8d94da48cadd9266ac0d17babedb52ea5b",
        "TOP_UP_ROLE": "0x5e4bd437d29fad01c10cdcfff414f0d6b0e84b96d2dade88d780d45b5630696b",
        "totalControlled": "502159061727099963057995",
        "totalDepositedInValidators": "553248000000000000000000",
        "unallocatedETH": 0,
        "unstakeRequestInfo": [
          [true, 0],
          [true, 0],
          [true, 0],
          [true, 0],
          [true, 0]
        ],
        "unstakeRequestsManager": "0x38fDF7b489316e03eD8754ad339cb5c4483FDcf9",
        "withdrawalWallet": "0xD4e11C28E04c0c2bf370b7a9989498B7eA02493f"
      },
      "errors": {
        "ethToMETH": "Too many values. Update configuration to explore fully",
        "mETHToETH": "Too many values. Update configuration to explore fully",
        "unstakeRequestInfo": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "AETH_R21",
      "address": "0xE95A203B1a91a908F9B9CE46459d101078c2c3cb",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xE672E0E0101A7F58d728751E2a5e6Da5Ff1FDa64",
        "admin": "0xCc4E08A5BFA887621Ad68826a0D5913d7a2cb392"
      },
      "implementations": ["0xE672E0E0101A7F58d728751E2a5e6Da5Ff1FDa64"],
      "sinceTimestamp": 1604948706,
      "values": {
        "_RATIO_THRESHOLD": 50000,
        "bondsToShares": [0, 1, 2, 3, 4],
        "decimals": 18,
        "isRebasing": false,
        "MAX_THRESHOLD": 100000000,
        "name": "Ankr Staked ETH",
        "owner": "0xA3464e1b86EE6941A600f9F69C61A47322af918F",
        "ratio": "867251783251220640",
        "sharesToBonds": [0, 1, 2, 3, 4],
        "symbol": "ankrETH",
        "totalSupply": "17836650619336850067726"
      },
      "errors": {
        "bondsToShares": "Too many values. Update configuration to explore fully",
        "sharesToBonds": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "AllowlistV1",
      "address": "0xebc83Bb472b2816Ec5B5de8D34F0eFc9088BB2ce",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xCfa8cf872f0B8cE15C175a8eB13688D5c69E9CEe",
        "admin": "0x854e42A12ed8BBAFb75f99D4a1499e219947C70a"
      },
      "implementations": ["0xCfa8cf872f0B8cE15C175a8eB13688D5c69E9CEe"],
      "sinceTimestamp": 1664906171,
      "values": {
        "getAdmin": "0xF1b958564edF538dDa1302D3D81eB58eE204B87F",
        "getAllower": "0x2B8BBd02d59B01232d35675E313d7ac23bBcF9cc",
        "getPendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "Firewall",
      "address": "0xF1b958564edF538dDa1302D3D81eB58eE204B87F",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1664906135,
      "values": {
        "destination": "0xebc83Bb472b2816Ec5B5de8D34F0eFc9088BB2ce",
        "executor": "0xDE55C9dc78f985fE1502484Cb98EBfAB66A56B62",
        "getAdmin": "0xE3208Aa9d1186c1D1C8A5b76E794b2B68E6cb3a5",
        "getPendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "OsToken",
      "address": "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1698755027,
      "values": {
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x65863ae3c54e769b3b6a814abbe2de070541233fe0f2efeed204622d3d4f1c40",
        "eip712Domain": [
          "0x0f",
          "Staked ETH",
          "1",
          1,
          "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          []
        ],
        "name": "Staked ETH",
        "owner": "0x144a98cb1CdBb23610501fE6108858D9B7D24934",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "symbol": "osETH",
        "totalSupply": "32316796600768022622838"
      }
    },
    {
      "name": "swETH",
      "address": "0xf951E335afb289353dc249e82926178EaC7DEd78",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xce95ba824ae9A4Df9B303C0bbf4D605BA2aFfbfC",
        "admin": "0x25EAf579cA2255fAA5463c635eec28697b5b8846"
      },
      "implementations": ["0xce95ba824ae9A4Df9B303C0bbf4D605BA2aFfbfC"],
      "sinceTimestamp": 1681288427,
      "values": {
        "AccessControlManager": "0x625087d72c762254a72CB22cC2ECa40da6b95EAC",
        "decimals": 18,
        "ethToSwETHRate": "946825108062514628",
        "getRate": "1056161260917865806",
        "lastRepriceETHReserves": "218253019582458410149228",
        "lastRepriceUNIX": 1712713811,
        "maximumRepriceDifferencePercentage": "10000000000000000",
        "maximumRepriceswETHDifferencePercentage": "100000000000000000",
        "minimumRepriceTime": 3600,
        "name": "swETH",
        "nodeOperatorRewardPercentage": "50000000000000000",
        "swellTreasuryRewardPercentage": "50000000000000000",
        "swETHToETHRate": "1056161260917865806",
        "symbol": "swETH",
        "totalETHDeposited": "253753253929172108565812",
        "totalSupply": "205740147082254851290694",
        "whitelistEnabled": false
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0xFEA47018D632A77bA579846c840d5706705Dc598",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "9 of 13 (69%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686680867,
      "values": {
        "domainSeparator": "0x80ea1f4244338ed9d96d172e60fd4459f4a8237651f29e743de9096eefa5c0fa",
        "getChainId": 1,
        "getOwners": [
          "0x17919FAC7024d5b770322E5Cb81607D247654116",
          "0x34C37613e1680efD9e203C979658e1d058b4B2BC",
          "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
          "0x80cb2DA66A3ccb6064f16B15B6ae11d8E089C6D7",
          "0x313011Ee87b12700E29B0D1136Ae3d64665F3939",
          "0x97b4A6E0471A7c5906fF1Cc2a5970ed569B04815",
          "0x65C4799061c0D1e3E87ADdB65b02E92a558F842F",
          "0xe37756BEdDC89e94A8d557fd5b95a4D2a57e9D60",
          "0x8ffCF07A59631f0578f3E84B51C48cF0dEADCd95",
          "0xAF4D94Cd299211de542530399290877E2c85F061",
          "0xe8F09A9D42aEA0a3B393aD06F25CF512eA51707e",
          "0x6A662c5DdCe0b76BD081b8A4ec3A4F8a671b0b1f",
          "0x33E816008E7bc7798A73d0eaa640CC24f34d1626"
        ],
        "getThreshold": 9,
        "nonce": 3,
        "VERSION": "1.3.0"
      }
    }
  ],
  "eoas": [
    "0x099d699C07Bbc8eE6eB5703746063E04B2aA62A7",
    "0x26ad6395DABF271fD9bFDC82d7377261930E6B86",
    "0x27ff193A6A1574A611E21c39FDA636fA1d61ba30",
    "0x2B59215778e99035CF38663454eF1240a7AE70F5",
    "0x2B8BBd02d59B01232d35675E313d7ac23bBcF9cc",
    "0x422e2F724faFE75F3635458aD7D3Ac803DCD7ff1",
    "0x46574f57f3F5DFCCd296F80407b3f4778414f8f5",
    "0x53b5c4231FBa19de04866A84FEd928aEca0102Fe",
    "0xa2425B00F9A9457AEdd51d4C36d9917eA1Aa7a02",
    "0xA3eE6926edcce93BacF05F4222c243c4d9F6d853",
    "0xb7Ae34BB33da55f12797e793E01e63a17B11d108",
    "0xBE3c68821D585Cf1552214897a1c091014B1EB0a",
    "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
    "0xd0F73E06E7b88c8e1da291bB744c4eEBAf9Af59f",
    "0xD0f9b590EAe80815b81bE857A21f69d07453560E",
    "0xDEd1F5e7Fb71c1740AEBc09b6b0a5E24b0cB71d1",
    "0xe0550117Cb066D3b330eBd764B0d75D3BA378734",
    "0xe7fFd467F7526abf9c8796EDeE0AD30110419127",
    "0xeD7Ef087d1C01ecCA9a9688a44aaeDDEf4ea560E"
  ],
  "abis": {
    "0x00000000219ab540356cBB839Cbe05303d7705Fa": [
      "constructor()",
      "event DepositEvent(bytes pubkey, bytes withdrawal_credentials, bytes amount, bytes signature, bytes index)",
      "function deposit(bytes pubkey, bytes withdrawal_credentials, bytes signature, bytes32 deposit_data_root) payable",
      "function get_deposit_count() view returns (bytes)",
      "function get_deposit_root() view returns (bytes32)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)"
    ],
    "0x006124Ae7976137266feeBFb3F4D2BE4C073139D": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x00A5Fd09F6CeE6AE9C8b0E5e33287F7c82880505": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x080b3a41390b357Ad7e8097644d1DEDf57AD3375": [
      "constructor(address _logic, address __admin, bytes _data) payable",
      "error CallWhenPaused()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Paused(address admin)",
      "event Unpaused(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function pause()",
      "function paused() returns (bool)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x0c431C66F4dE941d089625E5B423D00707977060": [
      "constructor(address[] _pausers, address _unpauser)",
      "event PauserStatusChanged(address pauser, bool canPause)",
      "event UnpauserChanged(address previousUnpauser, address newUnpauser)",
      "function isPauser(address) view returns (bool)",
      "function setIsPauser(address newPauser, bool canPause)",
      "function setUnpauser(address newUnpauser)",
      "function unpauser() view returns (address)"
    ],
    "0x0Fe4F44beE93503346A3Ac9EE5A26b130a5796d6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x108A04f7A181A1e0A58Bdb1772707aEe88294e13": [
      "error InvalidCall()",
      "error InvalidInitialization(uint256 version, uint256 expectedVersion)",
      "error InvalidZeroAddress()",
      "error Unauthorized(address caller)",
      "event Initialize(uint256 version, bytes cdata)",
      "event SetRiver(address indexed river)",
      "function initELFeeRecipientV1(address _riverAddress)",
      "function pullELFees(uint256 _maxAmount)"
    ],
    "0x1235f1b60df026B2620e48E735C422425E06b725": [
      "constructor(address _logic, address __admin, bytes _data) payable",
      "error CallWhenPaused()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Paused(address admin)",
      "event Unpaused(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function pause()",
      "function paused() returns (bool)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x135DDa560e946695d6f155dACaFC6f1F25C1F5AF": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x13760F50a9d7377e4F20CB8CF9e4c26586c658ff": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x144a98cb1CdBb23610501fE6108858D9B7D24934": [
      "constructor(address _masterCopy)"
    ],
    "0x17144556fd3424EDC8Fc8A4C940B2D04936d17eb": [
      "function resume()",
      "function name() pure returns (string)",
      "function stop()",
      "function hasInitialized() view returns (bool)",
      "function approve(address _spender, uint256 _amount) returns (bool)",
      "function STAKING_CONTROL_ROLE() view returns (bytes32)",
      "function totalSupply() view returns (uint256)",
      "function getSharesByPooledEth(uint256 _ethAmount) view returns (uint256)",
      "function isStakingPaused() view returns (bool)",
      "function transferFrom(address _sender, address _recipient, uint256 _amount) returns (bool)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function setStakingLimit(uint256 _maxStakeLimit, uint256 _stakeLimitIncreasePerBlock)",
      "function RESUME_ROLE() view returns (bytes32)",
      "function finalizeUpgrade_v2(address _lidoLocator, address _eip712StETH)",
      "function decimals() pure returns (uint8)",
      "function getRecoveryVault() view returns (address)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function getTotalPooledEther() view returns (uint256)",
      "function unsafeChangeDepositedValidators(uint256 _newDepositedValidators)",
      "function PAUSE_ROLE() view returns (bytes32)",
      "function increaseAllowance(address _spender, uint256 _addedValue) returns (bool)",
      "function getTreasury() view returns (address)",
      "function isStopped() view returns (bool)",
      "function getBufferedEther() view returns (uint256)",
      "function initialize(address _lidoLocator, address _eip712StETH) payable",
      "function receiveELRewards() payable",
      "function getWithdrawalCredentials() view returns (bytes32)",
      "function getCurrentStakeLimit() view returns (uint256)",
      "function getStakeLimitFullInfo() view returns (bool isStakingPaused, bool isStakingLimitSet, uint256 currentStakeLimit, uint256 maxStakeLimit, uint256 maxStakeLimitGrowthBlocks, uint256 prevStakeLimit, uint256 prevStakeBlockNumber)",
      "function transferSharesFrom(address _sender, address _recipient, uint256 _sharesAmount) returns (uint256)",
      "function balanceOf(address _account) view returns (uint256)",
      "function resumeStaking()",
      "function getFeeDistribution() view returns (uint16 treasuryFeeBasisPoints, uint16 insuranceFeeBasisPoints, uint16 operatorsFeeBasisPoints)",
      "function receiveWithdrawals() payable",
      "function getPooledEthByShares(uint256 _sharesAmount) view returns (uint256)",
      "function allowRecoverability(address token) view returns (bool)",
      "function nonces(address owner) view returns (uint256)",
      "function appId() view returns (bytes32)",
      "function getOracle() view returns (address)",
      "function eip712Domain() view returns (string name, string version, uint256 chainId, address verifyingContract)",
      "function getContractVersion() view returns (uint256)",
      "function getInitializationBlock() view returns (uint256)",
      "function transferShares(address _recipient, uint256 _sharesAmount) returns (uint256)",
      "function symbol() pure returns (string)",
      "function getEIP712StETH() view returns (address)",
      "function transferToVault(address)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function submit(address _referral) payable returns (uint256)",
      "function decreaseAllowance(address _spender, uint256 _subtractedValue) returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function transfer(address _recipient, uint256 _amount) returns (bool)",
      "function deposit(uint256 _maxDepositsCount, uint256 _stakingModuleId, bytes _depositCalldata)",
      "function UNSAFE_CHANGE_DEPOSITED_VALIDATORS_ROLE() view returns (bytes32)",
      "function getBeaconStat() view returns (uint256 depositedValidators, uint256 beaconValidators, uint256 beaconBalance)",
      "function removeStakingLimit()",
      "function handleOracleReport(uint256 _reportTimestamp, uint256 _timeElapsed, uint256 _clValidators, uint256 _clBalance, uint256 _withdrawalVaultBalance, uint256 _elRewardsVaultBalance, uint256 _sharesRequestedToBurn, uint256[] _withdrawalFinalizationBatches, uint256 _simulatedShareRate) returns (uint256[4] postRebaseAmounts)",
      "function getFee() view returns (uint16 totalFee)",
      "function kernel() view returns (address)",
      "function getTotalShares() view returns (uint256)",
      "function permit(address _owner, address _spender, uint256 _value, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function isPetrified() view returns (bool)",
      "function getLidoLocator() view returns (address)",
      "function canDeposit() view returns (bool)",
      "function STAKING_PAUSE_ROLE() view returns (bytes32)",
      "function getDepositableEther() view returns (uint256)",
      "function sharesOf(address _account) view returns (uint256)",
      "function pauseStaking()",
      "function getTotalELRewardsCollected() view returns (uint256)",
      "event StakingPaused()",
      "event StakingResumed()",
      "event StakingLimitSet(uint256 maxStakeLimit, uint256 stakeLimitIncreasePerBlock)",
      "event StakingLimitRemoved()",
      "event CLValidatorsUpdated(uint256 indexed reportTimestamp, uint256 preCLValidators, uint256 postCLValidators)",
      "event DepositedValidatorsChanged(uint256 depositedValidators)",
      "event ETHDistributed(uint256 indexed reportTimestamp, uint256 preCLBalance, uint256 postCLBalance, uint256 withdrawalsWithdrawn, uint256 executionLayerRewardsWithdrawn, uint256 postBufferedEther)",
      "event TokenRebased(uint256 indexed reportTimestamp, uint256 timeElapsed, uint256 preTotalShares, uint256 preTotalEther, uint256 postTotalShares, uint256 postTotalEther, uint256 sharesMintedAsFees)",
      "event LidoLocatorSet(address lidoLocator)",
      "event ELRewardsReceived(uint256 amount)",
      "event WithdrawalsReceived(uint256 amount)",
      "event Submitted(address indexed sender, uint256 amount, address referral)",
      "event Unbuffered(uint256 amount)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)",
      "event EIP712StETHInitialized(address eip712StETH)",
      "event TransferShares(address indexed from, address indexed to, uint256 sharesValue)",
      "event SharesBurnt(address indexed account, uint256 preRebaseTokenAmount, uint256 postRebaseTokenAmount, uint256 sharesAmount)",
      "event Stopped()",
      "event Resumed()",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ContractVersionSet(uint256 version)"
    ],
    "0x1784BE6401339Fc0Fedf7E9379409f5c1BfE9dda": [
      "constructor(address _strategyManager, address _slasher, address _eigenPodManager)",
      "event Initialized(uint8 version)",
      "event MinWithdrawalDelayBlocksSet(uint256 previousValue, uint256 newValue)",
      "event OperatorDetailsModified(address indexed operator, tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) newOperatorDetails)",
      "event OperatorMetadataURIUpdated(address indexed operator, string metadataURI)",
      "event OperatorRegistered(address indexed operator, tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) operatorDetails)",
      "event OperatorSharesDecreased(address indexed operator, address staker, address strategy, uint256 shares)",
      "event OperatorSharesIncreased(address indexed operator, address staker, address strategy, uint256 shares)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event StakerDelegated(address indexed staker, address indexed operator)",
      "event StakerForceUndelegated(address indexed staker, address indexed operator)",
      "event StakerUndelegated(address indexed staker, address indexed operator)",
      "event StrategyWithdrawalDelayBlocksSet(address strategy, uint256 previousValue, uint256 newValue)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "event WithdrawalCompleted(bytes32 withdrawalRoot)",
      "event WithdrawalMigrated(bytes32 oldWithdrawalRoot, bytes32 newWithdrawalRoot)",
      "event WithdrawalQueued(bytes32 withdrawalRoot, tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares) withdrawal)",
      "function DELEGATION_APPROVAL_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function MAX_STAKER_OPT_OUT_WINDOW_BLOCKS() view returns (uint256)",
      "function MAX_WITHDRAWAL_DELAY_BLOCKS() view returns (uint256)",
      "function STAKER_DELEGATION_TYPEHASH() view returns (bytes32)",
      "function beaconChainETHStrategy() view returns (address)",
      "function calculateCurrentStakerDelegationDigestHash(address staker, address operator, uint256 expiry) view returns (bytes32)",
      "function calculateDelegationApprovalDigestHash(address staker, address operator, address _delegationApprover, bytes32 approverSalt, uint256 expiry) view returns (bytes32)",
      "function calculateStakerDelegationDigestHash(address staker, uint256 _stakerNonce, address operator, uint256 expiry) view returns (bytes32)",
      "function calculateWithdrawalRoot(tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares) withdrawal) pure returns (bytes32)",
      "function completeQueuedWithdrawal(tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares) withdrawal, address[] tokens, uint256 middlewareTimesIndex, bool receiveAsTokens)",
      "function completeQueuedWithdrawals(tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares)[] withdrawals, address[][] tokens, uint256[] middlewareTimesIndexes, bool[] receiveAsTokens)",
      "function cumulativeWithdrawalsQueued(address) view returns (uint256)",
      "function decreaseDelegatedShares(address staker, address strategy, uint256 shares)",
      "function delegateTo(address operator, tuple(bytes signature, uint256 expiry) approverSignatureAndExpiry, bytes32 approverSalt)",
      "function delegateToBySignature(address staker, address operator, tuple(bytes signature, uint256 expiry) stakerSignatureAndExpiry, tuple(bytes signature, uint256 expiry) approverSignatureAndExpiry, bytes32 approverSalt)",
      "function delegatedTo(address) view returns (address)",
      "function delegationApprover(address operator) view returns (address)",
      "function delegationApproverSaltIsSpent(address, bytes32) view returns (bool)",
      "function domainSeparator() view returns (bytes32)",
      "function earningsReceiver(address operator) view returns (address)",
      "function eigenPodManager() view returns (address)",
      "function getDelegatableShares(address staker) view returns (address[], uint256[])",
      "function getOperatorShares(address operator, address[] strategies) view returns (uint256[])",
      "function getWithdrawalDelay(address[] strategies) view returns (uint256)",
      "function increaseDelegatedShares(address staker, address strategy, uint256 shares)",
      "function initialize(address initialOwner, address _pauserRegistry, uint256 initialPausedStatus, uint256 _minWithdrawalDelayBlocks, address[] _strategies, uint256[] _withdrawalDelayBlocks)",
      "function isDelegated(address staker) view returns (bool)",
      "function isOperator(address operator) view returns (bool)",
      "function migrateQueuedWithdrawals(tuple(address[] strategies, uint256[] shares, address staker, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress)[] withdrawalsToMigrate)",
      "function minWithdrawalDelayBlocks() view returns (uint256)",
      "function modifyOperatorDetails(tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) newOperatorDetails)",
      "function operatorDetails(address operator) view returns (tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks))",
      "function operatorShares(address, address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function pendingWithdrawals(bytes32) view returns (bool)",
      "function queueWithdrawals(tuple(address[] strategies, uint256[] shares, address withdrawer)[] queuedWithdrawalParams) returns (bytes32[])",
      "function registerAsOperator(tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) registeringOperatorDetails, string metadataURI)",
      "function renounceOwnership()",
      "function setMinWithdrawalDelayBlocks(uint256 newMinWithdrawalDelayBlocks)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setStrategyWithdrawalDelayBlocks(address[] strategies, uint256[] withdrawalDelayBlocks)",
      "function slasher() view returns (address)",
      "function stakerNonce(address) view returns (uint256)",
      "function stakerOptOutWindowBlocks(address operator) view returns (uint256)",
      "function strategyManager() view returns (address)",
      "function strategyWithdrawalDelayBlocks(address) view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function undelegate(address staker) returns (bytes32[] withdrawalRoots)",
      "function unpause(uint256 newPausedStatus)",
      "function updateOperatorMetadataURI(string metadataURI)"
    ],
    "0x1ae0b73118906f39D5ED30Ae4A484ce2F479a14c": [
      "constructor(address _registryCoordinator)",
      "event Initialized(uint8 version)",
      "event QuorumIndexUpdate(bytes32 indexed operatorId, uint8 quorumNumber, uint32 newOperatorIndex)",
      "function OPERATOR_DOES_NOT_EXIST_ID() view returns (bytes32)",
      "function currentOperatorIndex(uint8, bytes32) view returns (uint32)",
      "function deregisterOperator(bytes32 operatorId, bytes quorumNumbers)",
      "function getLatestOperatorUpdate(uint8 quorumNumber, uint32 operatorIndex) view returns (tuple(uint32 fromBlockNumber, bytes32 operatorId))",
      "function getLatestQuorumUpdate(uint8 quorumNumber) view returns (tuple(uint32 fromBlockNumber, uint32 numOperators))",
      "function getOperatorListAtBlockNumber(uint8 quorumNumber, uint32 blockNumber) view returns (bytes32[])",
      "function getOperatorUpdateAtIndex(uint8 quorumNumber, uint32 operatorIndex, uint32 arrayIndex) view returns (tuple(uint32 fromBlockNumber, bytes32 operatorId))",
      "function getQuorumUpdateAtIndex(uint8 quorumNumber, uint32 quorumIndex) view returns (tuple(uint32 fromBlockNumber, uint32 numOperators))",
      "function initializeQuorum(uint8 quorumNumber)",
      "function registerOperator(bytes32 operatorId, bytes quorumNumbers) returns (uint32[])",
      "function registryCoordinator() view returns (address)",
      "function totalOperatorsForQuorum(uint8 quorumNumber) view returns (uint32)"
    ],
    "0x1BeE69b7dFFfA4E2d53C2a2Df135C388AD25dCD2": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x1C468cf7089D263c2f53e2579b329B16aBc4dd96": [
      "constructor(address _registryCoordinator, address _delegationManager)",
      "event MinimumStakeForQuorumUpdated(uint8 indexed quorumNumber, uint96 minimumStake)",
      "event OperatorStakeUpdate(bytes32 indexed operatorId, uint8 quorumNumber, uint96 stake)",
      "event QuorumCreated(uint8 indexed quorumNumber)",
      "event StrategyAddedToQuorum(uint8 indexed quorumNumber, address strategy)",
      "event StrategyMultiplierUpdated(uint8 indexed quorumNumber, address strategy, uint256 multiplier)",
      "event StrategyRemovedFromQuorum(uint8 indexed quorumNumber, address strategy)",
      "function MAX_WEIGHING_FUNCTION_LENGTH() view returns (uint8)",
      "function WEIGHTING_DIVISOR() view returns (uint256)",
      "function addStrategies(uint8 quorumNumber, tuple(address strategy, uint96 multiplier)[] _strategyParams)",
      "function delegation() view returns (address)",
      "function deregisterOperator(bytes32 operatorId, bytes quorumNumbers)",
      "function getCurrentStake(bytes32 operatorId, uint8 quorumNumber) view returns (uint96)",
      "function getCurrentTotalStake(uint8 quorumNumber) view returns (uint96)",
      "function getLatestStakeUpdate(bytes32 operatorId, uint8 quorumNumber) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 stake))",
      "function getStakeAtBlockNumber(bytes32 operatorId, uint8 quorumNumber, uint32 blockNumber) view returns (uint96)",
      "function getStakeAtBlockNumberAndIndex(uint8 quorumNumber, uint32 blockNumber, bytes32 operatorId, uint256 index) view returns (uint96)",
      "function getStakeHistory(bytes32 operatorId, uint8 quorumNumber) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 stake)[])",
      "function getStakeHistoryLength(bytes32 operatorId, uint8 quorumNumber) view returns (uint256)",
      "function getStakeUpdateAtIndex(uint8 quorumNumber, bytes32 operatorId, uint256 index) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 stake))",
      "function getStakeUpdateIndexAtBlockNumber(bytes32 operatorId, uint8 quorumNumber, uint32 blockNumber) view returns (uint32)",
      "function getTotalStakeAtBlockNumberFromIndex(uint8 quorumNumber, uint32 blockNumber, uint256 index) view returns (uint96)",
      "function getTotalStakeHistoryLength(uint8 quorumNumber) view returns (uint256)",
      "function getTotalStakeIndicesAtBlockNumber(uint32 blockNumber, bytes quorumNumbers) view returns (uint32[])",
      "function getTotalStakeUpdateAtIndex(uint8 quorumNumber, uint256 index) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 stake))",
      "function initializeQuorum(uint8 quorumNumber, uint96 minimumStake, tuple(address strategy, uint96 multiplier)[] _strategyParams)",
      "function minimumStakeForQuorum(uint8) view returns (uint96)",
      "function modifyStrategyParams(uint8 quorumNumber, uint256[] strategyIndices, uint96[] newMultipliers)",
      "function registerOperator(address operator, bytes32 operatorId, bytes quorumNumbers) returns (uint96[], uint96[])",
      "function registryCoordinator() view returns (address)",
      "function removeStrategies(uint8 quorumNumber, uint256[] indicesToRemove)",
      "function setMinimumStakeForQuorum(uint8 quorumNumber, uint96 minimumStake)",
      "function strategiesPerQuorum(uint8, uint256) view returns (address)",
      "function strategyParams(uint8, uint256) view returns (address strategy, uint96 multiplier)",
      "function strategyParamsByIndex(uint8 quorumNumber, uint256 index) view returns (tuple(address strategy, uint96 multiplier))",
      "function strategyParamsLength(uint8 quorumNumber) view returns (uint256)",
      "function updateOperatorStake(address operator, bytes32 operatorId, bytes quorumNumbers) returns (uint192)",
      "function weightOfOperatorForQuorum(uint8 quorumNumber, address operator) view returns (uint96)"
    ],
    "0x1D920cc5bACf7eE506a271a5259f2417CaDeCE1d": [
      "constructor(tuple(address accountingOracle, address depositSecurityModule, address elRewardsVault, address legacyOracle, address lido, address oracleReportSanityChecker, address postTokenRebaseReceiver, address burner, address stakingRouter, address treasury, address validatorsExitBusOracle, address withdrawalQueue, address withdrawalVault, address oracleDaemonConfig) _config)",
      "error ZeroAddress()",
      "function accountingOracle() view returns (address)",
      "function burner() view returns (address)",
      "function coreComponents() view returns (address, address, address, address, address, address)",
      "function depositSecurityModule() view returns (address)",
      "function elRewardsVault() view returns (address)",
      "function legacyOracle() view returns (address)",
      "function lido() view returns (address)",
      "function oracleDaemonConfig() view returns (address)",
      "function oracleReportComponentsForLido() view returns (address, address, address, address, address, address, address)",
      "function oracleReportSanityChecker() view returns (address)",
      "function postTokenRebaseReceiver() view returns (address)",
      "function stakingRouter() view returns (address)",
      "function treasury() view returns (address)",
      "function validatorsExitBusOracle() view returns (address)",
      "function withdrawalQueue() view returns (address)",
      "function withdrawalVault() view returns (address)"
    ],
    "0x20fDF47509C5eFC0e1101e3CE443691781C17F90": [
      "constructor(address _singleton)"
    ],
    "0x25EAf579cA2255fAA5463c635eec28697b5b8846": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x298aFB19A105D59E74658C4C334Ff360BadE6dd2": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x2b33CF282f867A7FF693A66e11B0FcC5552e4425": [
      "function hasInitialized() view returns (bool)",
      "function KERNEL_APP_ID() pure returns (bytes32)",
      "function APP_ADDR_NAMESPACE() pure returns (bytes32)",
      "function getRecoveryVault() view returns (address)",
      "function newAppInstance(bytes32 _appId, address _appBase, bytes _initializePayload, bool _setDefault) returns (address appProxy)",
      "function apps(bytes32, bytes32) view returns (address)",
      "function initialize(address _baseAcl, address _permissionsCreator)",
      "function CORE_NAMESPACE() pure returns (bytes32)",
      "function allowRecoverability(address token) view returns (bool)",
      "function newAppInstance(bytes32 _appId, address _appBase) returns (address appProxy)",
      "function recoveryVaultAppId() view returns (bytes32)",
      "function getInitializationBlock() view returns (uint256)",
      "function setRecoveryVaultAppId(bytes32 _recoveryVaultAppId)",
      "function APP_MANAGER_ROLE() view returns (bytes32)",
      "function newPinnedAppInstance(bytes32 _appId, address _appBase) returns (address appProxy)",
      "function transferToVault(address _token)",
      "function setApp(bytes32 _namespace, bytes32 _appId, address _app)",
      "function getApp(bytes32 _namespace, bytes32 _appId) view returns (address)",
      "function newPinnedAppInstance(bytes32 _appId, address _appBase, bytes _initializePayload, bool _setDefault) returns (address appProxy)",
      "function newAppProxyPinned(address _kernel, bytes32 _appId, bytes _initializePayload) returns (address)",
      "function APP_BASES_NAMESPACE() pure returns (bytes32)",
      "function acl() view returns (address)",
      "function isPetrified() view returns (bool)",
      "function newAppProxy(address _kernel, bytes32 _appId) returns (address)",
      "function DEFAULT_ACL_APP_ID() pure returns (bytes32)",
      "function newAppProxy(address _kernel, bytes32 _appId, bytes _initializePayload) returns (address)",
      "function hasPermission(address _who, address _where, bytes32 _what, bytes _how) view returns (bool)",
      "function newAppProxyPinned(address _kernel, bytes32 _appId) returns (address)",
      "constructor(bool _shouldPetrify)",
      "event NewAppProxy(address proxy, bool isUpgradeable, bytes32 appId)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)",
      "event SetApp(bytes32 indexed namespace, bytes32 indexed appId, address app)"
    ],
    "0x2dBa235892dc72efa74e0b395294494B5B0B32B2": [
      "constructor()",
      "error IndenticalValue()",
      "error InvalidLimits()",
      "error InvalidMaxDepositValue()",
      "error InvalidMaxWithdrawValue()",
      "error InvalidMinDepositValue()",
      "error InvalidMinWithdrawValue()",
      "error ZeroAddress()",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SetAccount(bytes32 key, address newAddress)",
      "event SetConstant(bytes32 key, uint256 amount)",
      "event SetContract(bytes32 key, address newAddress)",
      "event SetToken(bytes32 key, address newAddress)",
      "event SetVariable(bytes32 key, uint256 amount)",
      "function ADMIN() view returns (bytes32)",
      "function AUCTION_CONTRACT() view returns (bytes32)",
      "function DECIMALS() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function ETHX_SUPPLY_POR_FEED() view returns (bytes32)",
      "function ETH_BALANCE_POR_FEED() view returns (bytes32)",
      "function ETH_DEPOSIT_CONTRACT() view returns (bytes32)",
      "function ETH_PER_NODE() view returns (bytes32)",
      "function ETHx() view returns (bytes32)",
      "function FULL_DEPOSIT_SIZE() view returns (bytes32)",
      "function MANAGER() view returns (bytes32)",
      "function MAX_DEPOSIT_AMOUNT() view returns (bytes32)",
      "function MAX_WITHDRAW_AMOUNT() view returns (bytes32)",
      "function MIN_BLOCK_DELAY_TO_FINALIZE_WITHDRAW_REQUEST() view returns (bytes32)",
      "function MIN_DEPOSIT_AMOUNT() view returns (bytes32)",
      "function MIN_WITHDRAW_AMOUNT() view returns (bytes32)",
      "function NODE_EL_REWARD_VAULT_IMPLEMENTATION() view returns (bytes32)",
      "function OPERATOR() view returns (bytes32)",
      "function OPERATOR_MAX_NAME_LENGTH() view returns (bytes32)",
      "function OPERATOR_REWARD_COLLECTOR() view returns (bytes32)",
      "function PENALTY_CONTRACT() view returns (bytes32)",
      "function PERMISSIONED_NODE_REGISTRY() view returns (bytes32)",
      "function PERMISSIONED_POOL() view returns (bytes32)",
      "function PERMISSIONED_SOCIALIZING_POOL() view returns (bytes32)",
      "function PERMISSIONLESS_NODE_REGISTRY() view returns (bytes32)",
      "function PERMISSIONLESS_POOL() view returns (bytes32)",
      "function PERMISSIONLESS_SOCIALIZING_POOL() view returns (bytes32)",
      "function POOL_SELECTOR() view returns (bytes32)",
      "function POOL_UTILS() view returns (bytes32)",
      "function PRE_DEPOSIT_SIZE() view returns (bytes32)",
      "function REWARD_THRESHOLD() view returns (bytes32)",
      "function SD() view returns (bytes32)",
      "function SD_COLLATERAL() view returns (bytes32)",
      "function SD_INCENTIVE_CONTROLLER() view returns (bytes32)",
      "function SD_UTILITY_POOL() view returns (bytes32)",
      "function SOCIALIZING_POOL_CYCLE_DURATION() view returns (bytes32)",
      "function SOCIALIZING_POOL_OPT_IN_COOLING_PERIOD() view returns (bytes32)",
      "function STADER_INSURANCE_FUND() view returns (bytes32)",
      "function STADER_ORACLE() view returns (bytes32)",
      "function STADER_TREASURY() view returns (bytes32)",
      "function STAKE_POOL_MANAGER() view returns (bytes32)",
      "function TOTAL_FEE() view returns (bytes32)",
      "function USER_WITHDRAW_MANAGER() view returns (bytes32)",
      "function VALIDATOR_WITHDRAWAL_VAULT_IMPLEMENTATION() view returns (bytes32)",
      "function VAULT_FACTORY() view returns (bytes32)",
      "function WITHDRAWN_KEYS_BATCH_SIZE() view returns (bytes32)",
      "function getAdmin() view returns (address)",
      "function getAuctionContract() view returns (address)",
      "function getDecimals() view returns (uint256)",
      "function getETHBalancePORFeedProxy() view returns (address)",
      "function getETHDepositContract() view returns (address)",
      "function getETHXSupplyPORFeedProxy() view returns (address)",
      "function getETHxToken() view returns (address)",
      "function getFullDepositSize() view returns (uint256)",
      "function getMaxDepositAmount() view returns (uint256)",
      "function getMaxWithdrawAmount() view returns (uint256)",
      "function getMinBlockDelayToFinalizeWithdrawRequest() view returns (uint256)",
      "function getMinDepositAmount() view returns (uint256)",
      "function getMinWithdrawAmount() view returns (uint256)",
      "function getNodeELRewardVaultImplementation() view returns (address)",
      "function getOperatorMaxNameLength() view returns (uint256)",
      "function getOperatorRewardsCollector() view returns (address)",
      "function getPenaltyContract() view returns (address)",
      "function getPermissionedNodeRegistry() view returns (address)",
      "function getPermissionedPool() view returns (address)",
      "function getPermissionedSocializingPool() view returns (address)",
      "function getPermissionlessNodeRegistry() view returns (address)",
      "function getPermissionlessPool() view returns (address)",
      "function getPermissionlessSocializingPool() view returns (address)",
      "function getPoolSelector() view returns (address)",
      "function getPoolUtils() view returns (address)",
      "function getPreDepositSize() view returns (uint256)",
      "function getRewardsThreshold() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getSDCollateral() view returns (address)",
      "function getSDIncentiveController() view returns (address)",
      "function getSDUtilityPool() view returns (address)",
      "function getSocializingPoolCycleDuration() view returns (uint256)",
      "function getSocializingPoolOptInCoolingPeriod() view returns (uint256)",
      "function getStaderInsuranceFund() view returns (address)",
      "function getStaderOracle() view returns (address)",
      "function getStaderToken() view returns (address)",
      "function getStaderTreasury() view returns (address)",
      "function getStakePoolManager() view returns (address)",
      "function getStakedEthPerNode() view returns (uint256)",
      "function getTotalFee() view returns (uint256)",
      "function getUserWithdrawManager() view returns (address)",
      "function getValidatorWithdrawalVaultImplementation() view returns (address)",
      "function getVaultFactory() view returns (address)",
      "function getWithdrawnKeyBatchSize() view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address _admin, address _ethDepositContract)",
      "function onlyManagerRole(address account) view returns (bool)",
      "function onlyOperatorRole(address account) view returns (bool)",
      "function onlyStaderContract(address _addr, bytes32 _contractName) view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateAdmin(address _admin)",
      "function updateAuctionContract(address _auctionContract)",
      "function updateETHBalancePORFeedProxy(address _ethBalanceProxy)",
      "function updateETHXSupplyPORFeedProxy(address _ethXSupplyProxy)",
      "function updateETHxToken(address _ethX)",
      "function updateMaxDepositAmount(uint256 _maxDepositAmount)",
      "function updateMaxWithdrawAmount(uint256 _maxWithdrawAmount)",
      "function updateMinBlockDelayToFinalizeWithdrawRequest(uint256 _minBlockDelay)",
      "function updateMinDepositAmount(uint256 _minDepositAmount)",
      "function updateMinWithdrawAmount(uint256 _minWithdrawAmount)",
      "function updateNodeELRewardImplementation(address _nodeELRewardVaultImpl)",
      "function updateOperatorRewardsCollector(address _operatorRewardsCollector)",
      "function updatePenaltyContract(address _penaltyContract)",
      "function updatePermissionedNodeRegistry(address _permissionedNodeRegistry)",
      "function updatePermissionedPool(address _permissionedPool)",
      "function updatePermissionedSocializingPool(address _permissionedSocializePool)",
      "function updatePermissionlessNodeRegistry(address _permissionlessNodeRegistry)",
      "function updatePermissionlessPool(address _permissionlessPool)",
      "function updatePermissionlessSocializingPool(address _permissionlessSocializePool)",
      "function updatePoolSelector(address _poolSelector)",
      "function updatePoolUtils(address _poolUtils)",
      "function updateRewardsThreshold(uint256 _rewardsThreshold)",
      "function updateSDCollateral(address _sdCollateral)",
      "function updateSDIncentiveController(address _sdIncentiveController)",
      "function updateSDUtilityPool(address _utilityPool)",
      "function updateSocializingPoolCycleDuration(uint256 _socializingPoolCycleDuration)",
      "function updateSocializingPoolOptInCoolingPeriod(uint256 _SocializePoolOptInCoolingPeriod)",
      "function updateStaderInsuranceFund(address _staderInsuranceFund)",
      "function updateStaderOracle(address _staderOracle)",
      "function updateStaderToken(address _staderToken)",
      "function updateStaderTreasury(address _staderTreasury)",
      "function updateStakePoolManager(address _stakePoolManager)",
      "function updateUserWithdrawManager(address _userWithdrawManager)",
      "function updateValidatorWithdrawalVaultImplementation(address _validatorWithdrawalVaultImpl)",
      "function updateVaultFactory(address _vaultFactory)",
      "function updateWithdrawnKeysBatchSize(uint256 _withdrawnKeysBatchSize)"
    ],
    "0x2fDeF0b5e87Cf840FfE46E3A5318b1d59960DfCd": [
      "constructor(address _admin, address _executor, address _destination, bytes4[] _executorCallableSelectors)",
      "error InvalidZeroAddress()",
      "error Unauthorized(address caller)",
      "event SetAdmin(address indexed admin)",
      "event SetDestination(address indexed destination)",
      "event SetExecutor(address indexed executor)",
      "event SetExecutorPermissions(bytes4 selector, bool status)",
      "event SetPendingAdmin(address indexed pendingAdmin)",
      "function acceptAdmin()",
      "function allowExecutor(bytes4 _functionSelector, bool _executorCanCall)",
      "function destination() view returns (address)",
      "function executor() view returns (address)",
      "function executorCanCall(bytes4) view returns (bool)",
      "function getAdmin() view returns (address)",
      "function getPendingAdmin() view returns (address)",
      "function proposeAdmin(address _newAdmin)",
      "function setExecutor(address _newExecutor)"
    ],
    "0x31724cA0C982A31fbb5C57f4217AB585271fc9a5": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AuthorizationCanceled(address indexed authorizer, bytes32 indexed nonce)",
      "event AuthorizationUsed(address indexed authorizer, bytes32 indexed nonce)",
      "event Blacklisted(address indexed _account)",
      "event BlacklisterChanged(address indexed newBlacklister)",
      "event Burn(address indexed burner, uint256 amount)",
      "event ExchangeRateUpdated(address indexed oracle, uint256 newExchangeRate)",
      "event MasterMinterChanged(address indexed newMasterMinter)",
      "event Mint(address indexed minter, address indexed to, uint256 amount)",
      "event MinterConfigured(address indexed minter, uint256 minterAllowedAmount)",
      "event MinterRemoved(address indexed oldMinter)",
      "event OracleUpdated(address indexed newOracle)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RescuerChanged(address indexed newRescuer)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UnBlacklisted(address indexed _account)",
      "event Unpause()",
      "function CANCEL_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function RECEIVE_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function TRANSFER_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function authorizationState(address authorizer, bytes32 nonce) view returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function blacklist(address _account)",
      "function blacklister() view returns (address)",
      "function burn(uint256 _amount)",
      "function cancelAuthorization(address authorizer, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function configureMinter(address minter, uint256 minterAllowedAmount) returns (bool)",
      "function currency() view returns (string)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 decrement) returns (bool)",
      "function exchangeRate() view returns (uint256 _exchangeRate)",
      "function increaseAllowance(address spender, uint256 increment) returns (bool)",
      "function initialize(string tokenName, string tokenSymbol, string tokenCurrency, uint8 tokenDecimals, address newMasterMinter, address newPauser, address newBlacklister, address newOwner)",
      "function initializeV2(string newName)",
      "function initializeV2_1(address lostAndFound)",
      "function isBlacklisted(address _account) view returns (bool)",
      "function isMinter(address account) view returns (bool)",
      "function masterMinter() view returns (address)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function minterAllowance(address minter) view returns (uint256)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function oracle() view returns (address _oracle)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function receiveWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function removeMinter(address minter) returns (bool)",
      "function rescueERC20(address tokenContract, address to, uint256 amount)",
      "function rescuer() view returns (address)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function transferWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function unBlacklist(address _account)",
      "function unpause()",
      "function updateBlacklister(address _newBlacklister)",
      "function updateExchangeRate(uint256 newExchangeRate)",
      "function updateMasterMinter(address _newMasterMinter)",
      "function updateOracle(address newOracle)",
      "function updatePauser(address _newPauser)",
      "function updateRescuer(address newRescuer)",
      "function version() view returns (string)"
    ],
    "0x32Aac358b627B9FEaa971CC33304027A41e49a81": [
      "constructor(address _logic, address __admin, bytes _data) payable",
      "error CallWhenPaused()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Paused(address admin)",
      "event Unpaused(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function pause()",
      "function paused() returns (bool)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x343907185b71aDF0eBa9567538314396aa985442": [
      "constructor(uint256 _genesisBlockTimestamp)",
      "error InvalidBlockTimestamp()",
      "error NoBlockRootFound()",
      "error TimestampOutOfRange()",
      "event EigenLayerBeaconOracleUpdate(uint256 slot, uint256 timestamp, bytes32 blockRoot)",
      "function GENESIS_BLOCK_TIMESTAMP() view returns (uint256)",
      "function addTimestamp(uint256 _targetTimestamp)",
      "function findBlockRoot(uint64 _slot) view returns (bytes32 blockRoot)",
      "function timestampToBlockRoot(uint256) view returns (bytes32)"
    ],
    "0x35918cDE7233F2dD33fA41ae3Cb6aE0e42E0e69F": [
      "constructor(address[] proposers, address[] executors)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256 duration)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256 timestamp)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function isOperation(bytes32 id) view returns (bool pending)",
      "function isOperationDone(bytes32 id) view returns (bool done)",
      "function isOperationPending(bytes32 id) view returns (bool pending)",
      "function isOperationReady(bytes32 id) view returns (bool ready)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x369e6F597e22EaB55fFb173C6d9cD234BD699111": [
      "constructor(address _singleton)"
    ],
    "0x38fDF7b489316e03eD8754ad339cb5c4483FDcf9": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x39254033945AA2E4809Cc2977E7087BEE48bd7Ab": [
      "event GovernorshipTransferred(address indexed previousGovernor, address indexed newGovernor)",
      "event PendingGovernorshipTransfer(address indexed previousGovernor, address indexed newGovernor)",
      "event Upgraded(address indexed implementation)",
      "function admin() view returns (address)",
      "function claimGovernance()",
      "function governor() view returns (address)",
      "function implementation() view returns (address)",
      "function initialize(address _logic, address _initGovernor, bytes _data) payable",
      "function isGovernor() view returns (bool)",
      "function transferGovernance(address _newGovernor)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x3A5b4db174a3CC17d8cE40C5B04272737195151b": [
      "constructor(address _admin, address _executor, address _destination, bytes4[] _executorCallableSelectors)",
      "error InvalidZeroAddress()",
      "error Unauthorized(address caller)",
      "event SetAdmin(address indexed admin)",
      "event SetDestination(address indexed destination)",
      "event SetExecutor(address indexed executor)",
      "event SetExecutorPermissions(bytes4 selector, bool status)",
      "event SetPendingAdmin(address indexed pendingAdmin)",
      "function acceptAdmin()",
      "function allowExecutor(bytes4 _functionSelector, bool _executorCanCall)",
      "function destination() view returns (address)",
      "function executor() view returns (address)",
      "function executorCanCall(bytes4) view returns (bool)",
      "function getAdmin() view returns (address)",
      "function getPendingAdmin() view returns (address)",
      "function proposeAdmin(address _newAdmin)",
      "function setExecutor(address _newExecutor)"
    ],
    "0x3A93C17FC82CC33420d1809dDA9Fb715cc89dd37": [
      "function ADD_PROTECTED_TOKEN_ROLE() view returns (bytes32)",
      "function supportsInterface(bytes4 _interfaceId) pure returns (bool)",
      "function hasInitialized() view returns (bool)",
      "function ERC1271_INTERFACE_ID() view returns (bytes4)",
      "function onERC721Received(address _operator, address _from, uint256 _tokenId, bytes _data) returns (bytes4)",
      "function isValidSignature(bytes32 _hash, bytes _signature) view returns (bytes4)",
      "function ERC1271_RETURN_INVALID_SIGNATURE() view returns (bytes4)",
      "function TRANSFER_ROLE() view returns (bytes32)",
      "function isValidSignature(bytes _data, bytes _signature) view returns (bytes4)",
      "function getProtectedTokensLength() view returns (uint256)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function RUN_SCRIPT_ROLE() view returns (bytes32)",
      "function SAFE_EXECUTE_ROLE() view returns (bytes32)",
      "function REMOVE_PROTECTED_TOKEN_ROLE() view returns (bytes32)",
      "function deposit(address _token, uint256 _value) payable",
      "function isDepositable() view returns (bool)",
      "function presignHash(bytes32 _hash)",
      "function DESIGNATE_SIGNER_ROLE() view returns (bytes32)",
      "function removeProtectedToken(address _token)",
      "function EXECUTE_ROLE() view returns (bytes32)",
      "function addProtectedToken(address _token)",
      "function allowRecoverability(address) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function initialize()",
      "function protectedTokens(uint256) view returns (address)",
      "function getInitializationBlock() view returns (uint256)",
      "function ERC1271_RETURN_VALID_SIGNATURE() view returns (bytes4)",
      "function transferToVault(address _token)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function setDesignatedSigner(address _designatedSigner)",
      "function designatedSigner() view returns (address)",
      "function safeExecute(address _target, bytes _data)",
      "function PROTECTED_TOKENS_CAP() view returns (uint256)",
      "function ADD_PRESIGNED_HASH_ROLE() view returns (bytes32)",
      "function isPresigned(bytes32) view returns (bool)",
      "function execute(address _target, uint256 _ethValue, bytes _data)",
      "function transfer(address _token, address _to, uint256 _value)",
      "function canForward(address _sender, bytes _evmScript) view returns (bool)",
      "function kernel() view returns (address)",
      "function forward(bytes _evmScript)",
      "function isPetrified() view returns (bool)",
      "function balance(address _token) view returns (uint256)",
      "function isForwarder() pure returns (bool)",
      "event SafeExecute(address indexed sender, address indexed target, bytes data)",
      "event Execute(address indexed sender, address indexed target, uint256 ethValue, bytes data)",
      "event AddProtectedToken(address indexed token)",
      "event RemoveProtectedToken(address indexed token)",
      "event PresignHash(address indexed sender, bytes32 indexed hash)",
      "event SetDesignatedSigner(address indexed sender, address indexed oldSigner, address indexed newSigner)",
      "event ReceiveERC721(address indexed token, address indexed operator, address indexed from, uint256 tokenId, bytes data)",
      "event VaultTransfer(address indexed token, address indexed to, uint256 amount)",
      "event VaultDeposit(address indexed token, address indexed sender, uint256 amount)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)"
    ],
    "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x423CE5282c460EED5FE0786B4D47d2c2a4Ef3721": [
      "error ClaimRedeemFailed(address recipient, bytes rdata)",
      "error DoesNotMatch(uint256 redeemRequestId, uint256 withdrawalEventId)",
      "error IncompatibleArrayLengths()",
      "error InvalidInitialization(uint256 version, uint256 expectedVersion)",
      "error InvalidZeroAddress()",
      "error InvalidZeroAmount()",
      "error RedeemRequestAlreadyClaimed(uint256 id)",
      "error RedeemRequestOutOfBounds(uint256 id)",
      "error TransferError()",
      "error Unauthorized(address caller)",
      "error WithdrawalEventOutOfBounds(uint256 id)",
      "error WithdrawalExceedsRedeemDemand(uint256 withdrawalAmount, uint256 redeemDemand)",
      "event ClaimedRedeemRequest(uint32 indexed redeemRequestId, address indexed recipient, uint256 ethAmount, uint256 lsEthAmount, uint256 remainingLsEthAmount)",
      "event Initialize(uint256 version, bytes cdata)",
      "event ReportedWithdrawal(uint256 height, uint256 amount, uint256 ethAmount, uint32 id)",
      "event RequestedRedeem(address indexed owner, uint256 height, uint256 amount, uint256 maxRedeemableEth, uint32 id)",
      "event SatisfiedRedeemRequest(uint32 indexed redeemRequestId, uint32 indexed withdrawalEventId, uint256 lsEthAmountSatisfied, uint256 ethAmountSatisfied, uint256 lsEthAmountRemaining, uint256 ethAmountExceeding)",
      "event SetRedeemDemand(uint256 oldRedeemDemand, uint256 newRedeemDemand)",
      "event SetRiver(address river)",
      "function claimRedeemRequests(uint32[] redeemRequestIds, uint32[] withdrawalEventIds, bool skipAlreadyClaimed, uint16 _depth) returns (uint8[] claimStatuses)",
      "function claimRedeemRequests(uint32[] _redeemRequestIds, uint32[] _withdrawalEventIds) returns (uint8[] claimStatuses)",
      "function getBufferedExceedingEth() view returns (uint256)",
      "function getRedeemDemand() view returns (uint256)",
      "function getRedeemRequestCount() view returns (uint256)",
      "function getRedeemRequestDetails(uint32 _redeemRequestId) view returns (tuple(uint256 amount, uint256 maxRedeemableEth, address owner, uint256 height))",
      "function getRiver() view returns (address)",
      "function getWithdrawalEventCount() view returns (uint256)",
      "function getWithdrawalEventDetails(uint32 _withdrawalEventId) view returns (tuple(uint256 amount, uint256 withdrawnEth, uint256 height))",
      "function initializeRedeemManagerV1(address _river)",
      "function pullExceedingEth(uint256 _max)",
      "function reportWithdraw(uint256 _lsETHWithdrawable) payable",
      "function requestRedeem(uint256 _lsETHAmount, address _recipient) returns (uint32 redeemRequestId)",
      "function requestRedeem(uint256 _lsETHAmount) returns (uint32 redeemRequestId)",
      "function resolveRedeemRequests(uint32[] _redeemRequestIds) view returns (int64[] withdrawalEventIds)"
    ],
    "0x442af784A788A5bd6F42A01Ebe9F287a871243fb": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x485ade5B7f66ECcaD4583862bc5c2Aa838720aA0": [
      "error AddressAlreadyInUse(address newAddress)",
      "error AlreadyReported(uint256 epochId, address member)",
      "error EpochTooOld(uint256 providedEpochId, uint256 minExpectedEpochId)",
      "error InvalidArgument()",
      "error InvalidCall()",
      "error InvalidEpoch(uint256 epoch)",
      "error InvalidInitialization(uint256 version, uint256 expectedVersion)",
      "error InvalidZeroAddress()",
      "error ReportIndexOutOfBounds(uint256 index, uint256 length)",
      "error Unauthorized(address caller)",
      "event AddMember(address indexed member)",
      "event ClearedReporting()",
      "event Initialize(uint256 version, bytes cdata)",
      "event RemoveMember(address indexed member)",
      "event ReportedConsensusLayerData(address indexed member, bytes32 indexed variant, tuple(uint256 epoch, uint256 validatorsBalance, uint256 validatorsSkimmedBalance, uint256 validatorsExitedBalance, uint256 validatorsExitingBalance, uint32 validatorsCount, uint32[] stoppedValidatorCountPerOperator, bool rebalanceDepositToRedeemMode, bool slashingContainmentMode) report, uint256 voteCount, uint256 quorum)",
      "event SetAdmin(address indexed admin)",
      "event SetBounds(uint256 annualAprUpperBound, uint256 relativeLowerBound)",
      "event SetLastReportedEpoch(uint256 lastReportedEpoch)",
      "event SetMember(address indexed oldAddress, address indexed newAddress)",
      "event SetPendingAdmin(address indexed pendingAdmin)",
      "event SetQuorum(uint256 newQuorum)",
      "event SetRiver(address _river)",
      "event SetSpec(uint64 epochsPerFrame, uint64 slotsPerEpoch, uint64 secondsPerSlot, uint64 genesisTime)",
      "function acceptAdmin()",
      "function addMember(address _newOracleMember, uint256 _newQuorum)",
      "function getAdmin() view returns (address)",
      "function getGlobalReportStatus() view returns (uint256)",
      "function getLastReportedEpochId() view returns (uint256)",
      "function getMemberReportStatus(address _oracleMember) view returns (bool)",
      "function getOracleMembers() view returns (address[])",
      "function getPendingAdmin() view returns (address)",
      "function getQuorum() view returns (uint256)",
      "function getReportVariantDetails(uint256 _idx) view returns (tuple(bytes32 variant, uint256 votes))",
      "function getReportVariantsCount() view returns (uint256)",
      "function getRiver() view returns (address)",
      "function initOracleV1(address _riverAddress, address _administratorAddress, uint64 _epochsPerFrame, uint64 _slotsPerEpoch, uint64 _secondsPerSlot, uint64 _genesisTime, uint256 _annualAprUpperBound, uint256 _relativeLowerBound)",
      "function initOracleV1_1()",
      "function isMember(address _memberAddress) view returns (bool)",
      "function proposeAdmin(address _newAdmin)",
      "function removeMember(address _oracleMember, uint256 _newQuorum)",
      "function reportConsensusLayerData(tuple(uint256 epoch, uint256 validatorsBalance, uint256 validatorsSkimmedBalance, uint256 validatorsExitedBalance, uint256 validatorsExitingBalance, uint32 validatorsCount, uint32[] stoppedValidatorCountPerOperator, bool rebalanceDepositToRedeemMode, bool slashingContainmentMode) _report)",
      "function setMember(address _oracleMember, address _newAddress)",
      "function setQuorum(uint256 _newQuorum)"
    ],
    "0x48D93d8C45Fb25125F13cdd40529BbeaA97A6565": [
      "error AllowanceTooLow(address _from, address _operator, uint256 _allowance, uint256 _value)",
      "error BalanceTooLow()",
      "error Denied(address account)",
      "error EmptyDeposit()",
      "error ErrorOnDeposit()",
      "error InconsistentPublicKeys()",
      "error InconsistentSignatures()",
      "error InvalidArgument()",
      "error InvalidCall()",
      "error InvalidDecreasingValidatorsExitedBalance(uint256 currentValidatorsExitedBalance, uint256 newValidatorsExitedBalance)",
      "error InvalidDecreasingValidatorsSkimmedBalance(uint256 currentValidatorsSkimmedBalance, uint256 newValidatorsSkimmedBalance)",
      "error InvalidEmptyString()",
      "error InvalidEpoch(uint256 epoch)",
      "error InvalidFee()",
      "error InvalidInitialization(uint256 version, uint256 expectedVersion)",
      "error InvalidPublicKeyCount()",
      "error InvalidPulledClFundsAmount(uint256 requested, uint256 received)",
      "error InvalidSignatureCount()",
      "error InvalidValidatorCountReport(uint256 providedValidatorCount, uint256 depositedValidatorCount, uint256 lastReportedValidatorCount)",
      "error InvalidWithdrawalCredentials()",
      "error InvalidZeroAddress()",
      "error NoAvailableValidatorKeys()",
      "error NotEnoughFunds()",
      "error NullTransfer()",
      "error SliceOutOfBounds()",
      "error SliceOverflow()",
      "error TotalValidatorBalanceDecreaseOutOfBound(uint256 prevTotalEthIncludingExited, uint256 postTotalEthIncludingExited, uint256 timeElapsed, uint256 relativeLowerBound)",
      "error TotalValidatorBalanceIncreaseOutOfBound(uint256 prevTotalEthIncludingExited, uint256 postTotalEthIncludingExited, uint256 timeElapsed, uint256 annualAprUpperBound)",
      "error Unauthorized(address caller)",
      "error UnauthorizedTransfer(address _from, address _to)",
      "error ZeroMintedShares()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ConsensusLayerDataUpdate(uint256 validatorCount, uint256 validatorTotalBalance, bytes32 roundId)",
      "event Initialize(uint256 version, bytes cdata)",
      "event ProcessedConsensusLayerReport(tuple(uint256 epoch, uint256 validatorsBalance, uint256 validatorsSkimmedBalance, uint256 validatorsExitedBalance, uint256 validatorsExitingBalance, uint32 validatorsCount, uint32[] stoppedValidatorCountPerOperator, bool rebalanceDepositToRedeemMode, bool slashingContainmentMode) report, tuple(uint256 rewards, uint256 pulledELFees, uint256 pulledRedeemManagerExceedingEthBuffer, uint256 pulledCoverageFunds) trace)",
      "event PulledCLFunds(uint256 pulledSkimmedEthAmount, uint256 pullExitedEthAmount)",
      "event PulledCoverageFunds(uint256 amount)",
      "event PulledELFees(uint256 amount)",
      "event PulledRedeemManagerExceedingEth(uint256 amount)",
      "event ReportedRedeemManager(uint256 redeemManagerDemand, uint256 suppliedRedeemManagerDemand, uint256 suppliedRedeemManagerDemandInEth)",
      "event RewardsEarned(address indexed _collector, uint256 _oldTotalUnderlyingBalance, uint256 _oldTotalSupply, uint256 _newTotalUnderlyingBalance, uint256 _newTotalSupply)",
      "event SetAdmin(address indexed admin)",
      "event SetAllowlist(address indexed allowlist)",
      "event SetBalanceCommittedToDeposit(uint256 oldAmount, uint256 newAmount)",
      "event SetBalanceToDeposit(uint256 oldAmount, uint256 newAmount)",
      "event SetBalanceToRedeem(uint256 oldAmount, uint256 newAmount)",
      "event SetBounds(uint256 annualAprUpperBound, uint256 relativeLowerBound)",
      "event SetCollector(address indexed collector)",
      "event SetCoverageFund(address indexed coverageFund)",
      "event SetDepositContractAddress(address indexed depositContract)",
      "event SetDepositedValidatorCount(uint256 oldDepositedValidatorCount, uint256 newDepositedValidatorCount)",
      "event SetELFeeRecipient(address indexed elFeeRecipient)",
      "event SetGlobalFee(uint256 fee)",
      "event SetMaxDailyCommittableAmounts(uint256 minNetAmount, uint256 maxRelativeAmount)",
      "event SetMetadataURI(string metadataURI)",
      "event SetOperatorsRegistry(address indexed operatorRegistry)",
      "event SetOracle(address indexed oracleAddress)",
      "event SetPendingAdmin(address indexed pendingAdmin)",
      "event SetRedeemManager(address redeemManager)",
      "event SetSpec(uint64 epochsPerFrame, uint64 slotsPerEpoch, uint64 secondsPerSlot, uint64 genesisTime, uint64 epochsToAssumedFinality)",
      "event SetTotalSupply(uint256 totalSupply)",
      "event SetWithdrawalCredentials(bytes32 withdrawalCredentials)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UserDeposit(address indexed depositor, address indexed recipient, uint256 amount)",
      "function DEPOSIT_SIZE() view returns (uint256)",
      "function PUBLIC_KEY_LENGTH() view returns (uint256)",
      "function SIGNATURE_LENGTH() view returns (uint256)",
      "function _DEPOSIT_SIZE() view returns (uint256)",
      "function acceptAdmin()",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function approve(address _spender, uint256 _value) returns (bool)",
      "function balanceOf(address _owner) view returns (uint256)",
      "function balanceOfUnderlying(address _owner) view returns (uint256)",
      "function claimRedeemRequests(uint32[] _redeemRequestIds, uint32[] _withdrawalEventIds) returns (uint8[] claimStatuses)",
      "function decimals() pure returns (uint8)",
      "function decreaseAllowance(address _spender, uint256 _subtractableValue) returns (bool)",
      "function deposit() payable",
      "function depositAndTransfer(address _recipient) payable",
      "function depositToConsensusLayer(uint256 _maxCount)",
      "function getAdmin() view returns (address)",
      "function getAllowlist() view returns (address)",
      "function getBalanceToDeposit() view returns (uint256)",
      "function getBalanceToRedeem() view returns (uint256)",
      "function getCLSpec() view returns (tuple(uint64 epochsPerFrame, uint64 slotsPerEpoch, uint64 secondsPerSlot, uint64 genesisTime, uint64 epochsToAssumedFinality))",
      "function getCLValidatorCount() view returns (uint256)",
      "function getCLValidatorTotalBalance() view returns (uint256)",
      "function getCollector() view returns (address)",
      "function getCommittedBalance() view returns (uint256)",
      "function getCoverageFund() view returns (address)",
      "function getCurrentEpochId() view returns (uint256)",
      "function getCurrentFrame() view returns (uint256 _startEpochId, uint256 _startTime, uint256 _endTime)",
      "function getDailyCommittableLimits() view returns (tuple(uint128 minDailyNetCommittableAmount, uint128 maxDailyRelativeCommittableAmount))",
      "function getDepositedValidatorCount() view returns (uint256)",
      "function getELFeeRecipient() view returns (address)",
      "function getExpectedEpochId() view returns (uint256)",
      "function getFrameFirstEpochId(uint256 _epochId) view returns (uint256)",
      "function getGlobalFee() view returns (uint256)",
      "function getLastCompletedEpochId() view returns (uint256)",
      "function getLastConsensusLayerReport() view returns (tuple(uint256 epoch, uint256 validatorsBalance, uint256 validatorsSkimmedBalance, uint256 validatorsExitedBalance, uint256 validatorsExitingBalance, uint32 validatorsCount, bool rebalanceDepositToRedeemMode, bool slashingContainmentMode))",
      "function getMetadataURI() view returns (string)",
      "function getOperatorsRegistry() view returns (address)",
      "function getOracle() view returns (address)",
      "function getPendingAdmin() view returns (address)",
      "function getRedeemManager() view returns (address)",
      "function getReportBounds() view returns (tuple(uint256 annualAprUpperBound, uint256 relativeLowerBound))",
      "function getTime() view returns (uint256)",
      "function getWithdrawalCredentials() view returns (bytes32)",
      "function increaseAllowance(address _spender, uint256 _additionalValue) returns (bool)",
      "function initRiverV1(address _depositContractAddress, address _elFeeRecipientAddress, bytes32 _withdrawalCredentials, address _oracleAddress, address _systemAdministratorAddress, address _allowlistAddress, address _operatorRegistryAddress, address _collectorAddress, uint256 _globalFee)",
      "function initRiverV1_1(address _redeemManager, uint64 _epochsPerFrame, uint64 _slotsPerEpoch, uint64 _secondsPerSlot, uint64 _genesisTime, uint64 _epochsToAssumedFinality, uint256 _annualAprUpperBound, uint256 _relativeLowerBound, uint128 _minDailyNetCommittableAmount_, uint128 _maxDailyRelativeCommittableAmount_)",
      "function initRiverV1_2()",
      "function isValidEpoch(uint256 _epoch) view returns (bool)",
      "function name() pure returns (string)",
      "function proposeAdmin(address _newAdmin)",
      "function requestRedeem(uint256 _lsETHAmount, address _recipient) returns (uint32 _redeemRequestId)",
      "function resolveRedeemRequests(uint32[] _redeemRequestIds) view returns (int64[] withdrawalEventIds)",
      "function sendCLFunds() payable",
      "function sendCoverageFunds() payable",
      "function sendELFees() payable",
      "function sendRedeemManagerExceedingFunds() payable",
      "function setAllowlist(address _newAllowlist)",
      "function setCLSpec(tuple(uint64 epochsPerFrame, uint64 slotsPerEpoch, uint64 secondsPerSlot, uint64 genesisTime, uint64 epochsToAssumedFinality) _newValue)",
      "function setCollector(address _newCollector)",
      "function setConsensusLayerData(tuple(uint256 epoch, uint256 validatorsBalance, uint256 validatorsSkimmedBalance, uint256 validatorsExitedBalance, uint256 validatorsExitingBalance, uint32 validatorsCount, uint32[] stoppedValidatorCountPerOperator, bool rebalanceDepositToRedeemMode, bool slashingContainmentMode) _report)",
      "function setCoverageFund(address _newCoverageFund)",
      "function setDailyCommittableLimits(tuple(uint128 minDailyNetCommittableAmount, uint128 maxDailyRelativeCommittableAmount) _dcl)",
      "function setELFeeRecipient(address _newELFeeRecipient)",
      "function setGlobalFee(uint256 _newFee)",
      "function setMetadataURI(string _metadataURI)",
      "function setOracle(address _oracleAddress)",
      "function setReportBounds(tuple(uint256 annualAprUpperBound, uint256 relativeLowerBound) _newValue)",
      "function sharesFromUnderlyingBalance(uint256 _underlyingAssetAmount) view returns (uint256)",
      "function symbol() pure returns (string)",
      "function totalSupply() view returns (uint256)",
      "function totalUnderlyingSupply() view returns (uint256)",
      "function transfer(address _to, uint256 _value) returns (bool)",
      "function transferFrom(address _from, address _to, uint256 _value) returns (bool)",
      "function underlyingBalanceFromShares(uint256 _shares) view returns (uint256)"
    ],
    "0x4ABEF2263d5A5ED582FC9A9789a41D85b68d69DB": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x4C22fFd479637EA0eD61D451CBe6355627283358": [
      "constructor()",
      "error CallerNotManager()",
      "error ZeroAddress()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint8 version)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "event UpdatedStaderConfig(address indexed _staderConfig)",
      "function BURNER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function MINTER_ROLE() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address _admin, address _staderConfig)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function pause()",
      "function paused() view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function staderConfig() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function unpause()",
      "function updateStaderConfig(address _staderConfig)"
    ],
    "0x542059d658624DF6452b22B10302A15a6AB59f10": [
      "event Allocate(address indexed operator, uint256 nextAllocateEthIndex)",
      "event Blacklisted(address indexed _account)",
      "event BlacklisterChanged(address indexed newBlacklister)",
      "event ClaimWithdraw(address indexed recipient, uint256 ethAmount, uint256 index)",
      "event EthBackAddressUpdated(address indexed newEthBackAddress)",
      "event EthStakedUpdated(address indexed operatorAddress, uint256 ethStakedAmount)",
      "event LockTimeUpdated(address indexed operatorAddress, uint256 newLockTime)",
      "event MoveFromWrapContract(address indexed wrapTokenAddress, uint256 ethAmount)",
      "event MoveToEthBackAddress(address indexed ethBackAddress, uint256 ethAmount)",
      "event OperatorUpdated(address indexed newOperator)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RechargeAddressUpdated(address indexed newRechargeAddress)",
      "event RechargeFromRechargeAddress(address indexed rechargeAddress, uint256 ethAmount)",
      "event RequestWithdraw(address indexed recipient, uint256 wbethAmount, uint256 ethAmount, uint256 index)",
      "event UnBlacklisted(address indexed _account)",
      "event Unpause()",
      "function MAX_LOOP_NUM() view returns (uint256)",
      "function MIN_LOCK_TIME() view returns (uint256)",
      "function WBETH_TOKEN_ADDRESS() view returns (address)",
      "function allocate(uint256 _maxAllocateNum) returns (uint256)",
      "function availableAllocateAmount() view returns (uint256)",
      "function blacklist(address _account)",
      "function blacklister() view returns (address)",
      "function claimWithdraw(uint256 _index) returns (uint256)",
      "function ethBackAddress() view returns (address)",
      "function ethStaked() view returns (uint256)",
      "function getNeedRechargeEthAmount() view returns (uint256)",
      "function getUserWithdrawRequests(address _recipient) view returns (tuple(address recipient, uint256 wbethAmount, uint256 ethAmount, uint256 triggerTime, uint256 claimTime, bool allocated)[])",
      "function getWithdrawRequests(uint256 _startIndex) view returns (tuple(address recipient, uint256 wbethAmount, uint256 ethAmount, uint256 triggerTime, uint256 claimTime, bool allocated)[])",
      "function initialize(address _newOperatorAddress, address _newEthBackAddress, address _newRechargeAddress, address _newPauser, address _newBlacklister, address _newOwner)",
      "function isBlacklisted(address _account) view returns (bool)",
      "function lockTime() view returns (uint256)",
      "function moveFromWrapContract() payable",
      "function moveToBackAddress(uint256 _amount)",
      "function needEthAmount() view returns (uint256)",
      "function nextIndex() view returns (uint256)",
      "function operatorAddress() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function rechargeAddress() view returns (address)",
      "function rechargeFromRechargeAddress() payable",
      "function requestWithdraw(address _recipient, uint256 _wbethAmount, uint256 _ethAmount)",
      "function setEthBackAddress(address _newEthBackAddress)",
      "function setLockTime(uint256 _newLockTime)",
      "function setNewEthStaked(uint256 _newEthStakedAmount)",
      "function setNewOperator(address _newOperatorAddress)",
      "function setRechargeAddress(address _newRechargeAddress)",
      "function startAllocatedEthIndex() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function unBlacklist(address _account)",
      "function unpause()",
      "function updateBlacklister(address _newBlacklister)",
      "function updatePauser(address _newPauser)"
    ],
    "0x54945180dB7943c0ed0FEE7EdaB2Bd24620256bc": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x57ba429517c3473B6d34CA9aCd56c0e735b94c02": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073": [
      "constructor(address implementation_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)"
    ],
    "0x5A7b3CDe8aC8d780AF4797BF1517464aC54Ca033": [
      "constructor()",
      "error AlreadyClaimed()",
      "error DoesNotReceiveETH()",
      "error NotEnoughFunds(uint256 cumulativeETHOnRequest, uint256 allocatedETHForClaims)",
      "error NotFinalized()",
      "error NotRequester()",
      "error NotStakingContract()",
      "event Initialized(uint8 version)",
      "event ProtocolConfigChanged(bytes4 indexed setterSelector, string setterSignature, bytes value)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event UnstakeRequestCancelled(uint256 indexed id, address indexed requester, uint256 mETHLocked, uint256 ethRequested, uint256 cumulativeETHRequested, uint256 blockNumber)",
      "event UnstakeRequestClaimed(uint256 indexed id, address indexed requester, uint256 mETHLocked, uint256 ethRequested, uint256 cumulativeETHRequested, uint256 blockNumber)",
      "event UnstakeRequestCreated(uint256 indexed id, address indexed requester, uint256 mETHLocked, uint256 ethRequested, uint256 cumulativeETHRequested, uint256 blockNumber)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function MANAGER_ROLE() view returns (bytes32)",
      "function REQUEST_CANCELLER_ROLE() view returns (bytes32)",
      "function allocateETH() payable",
      "function allocatedETHDeficit() view returns (uint256)",
      "function allocatedETHForClaims() view returns (uint256)",
      "function allocatedETHSurplus() view returns (uint256)",
      "function balance() view returns (uint256)",
      "function cancelUnfinalizedRequests(uint256 maxCancel) returns (bool)",
      "function claim(uint256 requestID, address requester)",
      "function create(address requester, uint128 mETHLocked, uint128 ethRequested) returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(tuple(address admin, address manager, address requestCanceller, address mETH, address stakingContract, address oracle, uint256 numberOfBlocksToFinalize) init)",
      "function latestCumulativeETHRequested() view returns (uint128)",
      "function mETH() view returns (address)",
      "function nextRequestId() view returns (uint256)",
      "function numberOfBlocksToFinalize() view returns (uint256)",
      "function oracle() view returns (address)",
      "function renounceRole(bytes32 role, address account)",
      "function requestByID(uint256 requestID) view returns (tuple(uint64 blockNumber, address requester, uint128 id, uint128 mETHLocked, uint128 ethRequested, uint128 cumulativeETHRequested))",
      "function requestInfo(uint256 requestID) view returns (bool, uint256)",
      "function revokeRole(bytes32 role, address account)",
      "function setNumberOfBlocksToFinalize(uint256 numberOfBlocksToFinalize_)",
      "function stakingContract() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function totalClaimed() view returns (uint256)",
      "function withdrawAllocatedETHSurplus()"
    ],
    "0x5d0B9cE2e277Daf508528E9f6Bf6314E79e4eD2b": [
      "constructor(address _registryCoordinator)",
      "event Initialized(uint8 version)",
      "event NewPubkeyRegistration(address indexed operator, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2)",
      "event OperatorAddedToQuorums(address operator, bytes32 operatorId, bytes quorumNumbers)",
      "event OperatorRemovedFromQuorums(address operator, bytes32 operatorId, bytes quorumNumbers)",
      "function apkHistory(uint8, uint256) view returns (bytes24 apkHash, uint32 updateBlockNumber, uint32 nextUpdateBlockNumber)",
      "function currentApk(uint8) view returns (uint256 X, uint256 Y)",
      "function deregisterOperator(address operator, bytes quorumNumbers)",
      "function getApk(uint8 quorumNumber) view returns (tuple(uint256 X, uint256 Y))",
      "function getApkHashAtBlockNumberAndIndex(uint8 quorumNumber, uint32 blockNumber, uint256 index) view returns (bytes24)",
      "function getApkHistoryLength(uint8 quorumNumber) view returns (uint32)",
      "function getApkIndicesAtBlockNumber(bytes quorumNumbers, uint256 blockNumber) view returns (uint32[])",
      "function getApkUpdateAtIndex(uint8 quorumNumber, uint256 index) view returns (tuple(bytes24 apkHash, uint32 updateBlockNumber, uint32 nextUpdateBlockNumber))",
      "function getOperatorFromPubkeyHash(bytes32 pubkeyHash) view returns (address)",
      "function getOperatorId(address operator) view returns (bytes32)",
      "function getRegisteredPubkey(address operator) view returns (tuple(uint256 X, uint256 Y), bytes32)",
      "function initializeQuorum(uint8 quorumNumber)",
      "function operatorToPubkey(address) view returns (uint256 X, uint256 Y)",
      "function operatorToPubkeyHash(address) view returns (bytes32)",
      "function pubkeyHashToOperator(bytes32) view returns (address)",
      "function registerBLSPublicKey(address operator, tuple(tuple(uint256 X, uint256 Y) pubkeyRegistrationSignature, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2) params, tuple(uint256 X, uint256 Y) pubkeyRegistrationMessageHash) returns (bytes32 operatorId)",
      "function registerOperator(address operator, bytes quorumNumbers)",
      "function registryCoordinator() view returns (address)"
    ],
    "0x5E8422345238F34275888049021821E8E08CAa1f": [
      "constructor(address _creator_address, address _timelock_address)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event MinterAdded(address minter_address)",
      "event MinterRemoved(address minter_address)",
      "event OwnerChanged(address oldOwner, address newOwner)",
      "event OwnerNominated(address newOwner)",
      "event TimelockChanged(address timelock_address)",
      "event TokenMinterBurned(address indexed from, address indexed to, uint256 amount)",
      "event TokenMinterMinted(address indexed from, address indexed to, uint256 amount)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function acceptOwnership()",
      "function addMinter(address minter_address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function minter_burn_from(address b_address, uint256 b_amount)",
      "function minter_mint(address m_address, uint256 m_amount)",
      "function minters(address) view returns (bool)",
      "function minters_array(uint256) view returns (address)",
      "function name() view returns (string)",
      "function nominateNewOwner(address _owner)",
      "function nominatedOwner() view returns (address)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function removeMinter(address minter_address)",
      "function setTimelock(address _timelock_address)",
      "function symbol() view returns (string)",
      "function timelock_address() view returns (address)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x625087d72c762254a72CB22cC2ECa40da6b95EAC": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x67B12264Ca3e0037Fc7E22F2457b42643a04C86e": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x6B747258A0E926De1F5C2a54Fe92514706Cce2D4": [
      "error EmptyDonation()",
      "error InvalidCall()",
      "error InvalidInitialization(uint256 version, uint256 expectedVersion)",
      "error InvalidZeroAddress()",
      "error Unauthorized(address caller)",
      "event Donate(address indexed donator, uint256 amount)",
      "event Initialize(uint256 version, bytes cdata)",
      "event SetRiver(address indexed river)",
      "function donate() payable",
      "function initCoverageFundV1(address _riverAddress)",
      "function pullCoverageFunds(uint256 _maxAmount)"
    ],
    "0x70f44C13944d49a236E3cD7a94f48f5daB6C619b": [
      "constructor(address _delegation, address _eigenPodManager, address _slasher)",
      "event Deposit(address staker, address token, address strategy, uint256 shares)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event StrategyAddedToDepositWhitelist(address strategy)",
      "event StrategyRemovedFromDepositWhitelist(address strategy)",
      "event StrategyWhitelisterChanged(address previousAddress, address newAddress)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "event UpdatedThirdPartyTransfersForbidden(address strategy, bool value)",
      "function DEPOSIT_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function addShares(address staker, address token, address strategy, uint256 shares)",
      "function addStrategiesToDepositWhitelist(address[] strategiesToWhitelist, bool[] thirdPartyTransfersForbiddenValues)",
      "function calculateWithdrawalRoot(tuple(address[] strategies, uint256[] shares, address staker, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress) queuedWithdrawal) pure returns (bytes32)",
      "function delegation() view returns (address)",
      "function depositIntoStrategy(address strategy, address token, uint256 amount) returns (uint256 shares)",
      "function depositIntoStrategyWithSignature(address strategy, address token, uint256 amount, address staker, uint256 expiry, bytes signature) returns (uint256 shares)",
      "function domainSeparator() view returns (bytes32)",
      "function eigenPodManager() view returns (address)",
      "function getDeposits(address staker) view returns (address[], uint256[])",
      "function initialize(address initialOwner, address initialStrategyWhitelister, address _pauserRegistry, uint256 initialPausedStatus)",
      "function migrateQueuedWithdrawal(tuple(address[] strategies, uint256[] shares, address staker, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress) queuedWithdrawal) returns (bool, bytes32)",
      "function nonces(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function removeShares(address staker, address strategy, uint256 shares)",
      "function removeStrategiesFromDepositWhitelist(address[] strategiesToRemoveFromWhitelist)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setStrategyWhitelister(address newStrategyWhitelister)",
      "function setThirdPartyTransfersForbidden(address strategy, bool value)",
      "function slasher() view returns (address)",
      "function stakerStrategyList(address, uint256) view returns (address)",
      "function stakerStrategyListLength(address staker) view returns (uint256)",
      "function stakerStrategyShares(address, address) view returns (uint256)",
      "function strategyIsWhitelistedForDeposit(address) view returns (bool)",
      "function strategyWhitelister() view returns (address)",
      "function thirdPartyTransfersForbidden(address) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function withdrawSharesAsTokens(address recipient, address strategy, uint256 shares, address token)",
      "function withdrawalRootPending(bytes32) view returns (bool)"
    ],
    "0x79973d557CD9dd87eb61E250cc2572c990e20196": [
      "constructor(address implementationContract)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address implementation)",
      "function admin() view returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() view returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x7CA911E83dabf90C90dD3De5411a10F1A6112184": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x7D16d2c4e96BCFC8f815E15b771aC847EcbDB48b": [
      "constructor(address _logic, address __admin, bytes _data) payable",
      "error CallWhenPaused()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Paused(address admin)",
      "event Unpaused(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function pause()",
      "function paused() returns (bool)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x81720695e43A39C52557Ce6386feB3FAAC215f06": [
      "event AllowanceReplenished(address indexed caller, uint256 allowance, uint256 amountReplenished)",
      "event CallerConfigured(address indexed caller, uint256 amount, uint256 interval)",
      "event CallerRemoved(address indexed caller)",
      "event ExchangeRateUpdated(address indexed caller, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function allowances(address) view returns (uint256)",
      "function allowancesLastSet(address) view returns (uint256)",
      "function callers(address) view returns (bool)",
      "function configureCaller(address caller, uint256 amount, uint256 interval)",
      "function currentAllowance(address caller) returns (uint256)",
      "function estimatedAllowance(address caller) view returns (uint256)",
      "function initialize(address newOwner, address newTokenContract)",
      "function intervals(address) view returns (uint256)",
      "function maxAllowances(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function removeCaller(address caller)",
      "function renounceOwnership()",
      "function tokenContract() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateExchangeRate(uint256 _newExchangeRate)"
    ],
    "0x8247EF5705d3345516286B72bFE6D690197C2E99": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x852deD011285fe67063a08005c71a85690503Cee": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_, bool forceCall_)"
    ],
    "0x853cc0D5917f49B57B8e9F89e491F5E18919093A": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x854e42A12ed8BBAFb75f99D4a1499e219947C70a": [
      "constructor(address _admin, address _executor, address _destination, bytes4[] _executorCallableSelectors)",
      "error InvalidZeroAddress()",
      "error Unauthorized(address caller)",
      "event SetAdmin(address indexed admin)",
      "event SetDestination(address indexed destination)",
      "event SetExecutor(address indexed executor)",
      "event SetExecutorPermissions(bytes4 selector, bool status)",
      "event SetPendingAdmin(address indexed pendingAdmin)",
      "function acceptAdmin()",
      "function allowExecutor(bytes4 _functionSelector, bool _executorCanCall)",
      "function destination() view returns (address)",
      "function executor() view returns (address)",
      "function executorCanCall(bytes4) view returns (bool)",
      "function getAdmin() view returns (address)",
      "function getPendingAdmin() view returns (address)",
      "function proposeAdmin(address _newAdmin)",
      "function setExecutor(address _newExecutor)"
    ],
    "0x856c4Efb76C1D1AE02e20CEB03A2A6a08b0b8dC3": [
      "event GovernorshipTransferred(address indexed previousGovernor, address indexed newGovernor)",
      "event PendingGovernorshipTransfer(address indexed previousGovernor, address indexed newGovernor)",
      "event Upgraded(address indexed implementation)",
      "function admin() view returns (address)",
      "function claimGovernance()",
      "function governor() view returns (address)",
      "function implementation() view returns (address)",
      "function initialize(address _logic, address _initGovernor, bytes _data) payable",
      "function isGovernor() view returns (bool)",
      "function transferGovernance(address _newGovernor)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x858646372CC42E1A627fcE94aa7A7033e7CF075A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x870679E138bCdf293b7Ff14dD44b70FC97e12fc0": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x895a57eD71025D51fe4080530A3489D92E230683": [
      "constructor(address _logic, address __admin, bytes _data) payable",
      "error CallWhenPaused()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Paused(address admin)",
      "event Unpaused(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function pause()",
      "function paused() returns (bool)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x8bA40dA60f0827d027F029aCEE62609F0527a255": [
      "constructor(address _ethPOS, address _delayedWithdrawalRouter, address _eigenPodManager, uint64 _MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR, uint64 _GENESIS_TIME)",
      "event EigenPodStaked(bytes pubkey)",
      "event FullWithdrawalRedeemed(uint40 validatorIndex, uint64 withdrawalTimestamp, address indexed recipient, uint64 withdrawalAmountGwei)",
      "event Initialized(uint8 version)",
      "event NonBeaconChainETHReceived(uint256 amountReceived)",
      "event NonBeaconChainETHWithdrawn(address indexed recipient, uint256 amountWithdrawn)",
      "event PartialWithdrawalRedeemed(uint40 validatorIndex, uint64 withdrawalTimestamp, address indexed recipient, uint64 partialWithdrawalAmountGwei)",
      "event RestakedBeaconChainETHWithdrawn(address indexed recipient, uint256 amount)",
      "event RestakingActivated(address indexed podOwner)",
      "event ValidatorBalanceUpdated(uint40 validatorIndex, uint64 balanceTimestamp, uint64 newValidatorBalanceGwei)",
      "event ValidatorRestaked(uint40 validatorIndex)",
      "function GENESIS_TIME() view returns (uint64)",
      "function MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR() view returns (uint64)",
      "function activateRestaking()",
      "function delayedWithdrawalRouter() view returns (address)",
      "function eigenPodManager() view returns (address)",
      "function ethPOS() view returns (address)",
      "function hasRestaked() view returns (bool)",
      "function initialize(address _podOwner)",
      "function mostRecentWithdrawalTimestamp() view returns (uint64)",
      "function nonBeaconChainETHBalanceWei() view returns (uint256)",
      "function podOwner() view returns (address)",
      "function provenWithdrawal(bytes32, uint64) view returns (bool)",
      "function recoverTokens(address[] tokenList, uint256[] amountsToWithdraw, address recipient)",
      "function stake(bytes pubkey, bytes signature, bytes32 depositDataRoot) payable",
      "function sumOfPartialWithdrawalsClaimedGwei() view returns (uint64)",
      "function validatorPubkeyHashToInfo(bytes32 validatorPubkeyHash) view returns (tuple(uint64 validatorIndex, uint64 restakedBalanceGwei, uint64 mostRecentBalanceUpdateTimestamp, uint8 status))",
      "function validatorPubkeyToInfo(bytes validatorPubkey) view returns (tuple(uint64 validatorIndex, uint64 restakedBalanceGwei, uint64 mostRecentBalanceUpdateTimestamp, uint8 status))",
      "function validatorStatus(bytes validatorPubkey) view returns (uint8)",
      "function validatorStatus(bytes32 pubkeyHash) view returns (uint8)",
      "function verifyAndProcessWithdrawals(uint64 oracleTimestamp, tuple(bytes32 beaconStateRoot, bytes proof) stateRootProof, tuple(bytes withdrawalProof, bytes slotProof, bytes executionPayloadProof, bytes timestampProof, bytes historicalSummaryBlockRootProof, uint64 blockRootIndex, uint64 historicalSummaryIndex, uint64 withdrawalIndex, bytes32 blockRoot, bytes32 slotRoot, bytes32 timestampRoot, bytes32 executionPayloadRoot)[] withdrawalProofs, bytes[] validatorFieldsProofs, bytes32[][] validatorFields, bytes32[][] withdrawalFields)",
      "function verifyBalanceUpdates(uint64 oracleTimestamp, uint40[] validatorIndices, tuple(bytes32 beaconStateRoot, bytes proof) stateRootProof, bytes[] validatorFieldsProofs, bytes32[][] validatorFields)",
      "function verifyWithdrawalCredentials(uint64 oracleTimestamp, tuple(bytes32 beaconStateRoot, bytes proof) stateRootProof, uint40[] validatorIndices, bytes[] validatorFieldsProofs, bytes32[][] validatorFields)",
      "function withdrawBeforeRestaking()",
      "function withdrawNonBeaconChainETHBalanceWei(address recipient, uint256 amountToWithdraw)",
      "function withdrawRestakedBeaconChainETH(address recipient, uint256 amountWei)",
      "function withdrawableRestakedExecutionLayerGwei() view returns (uint64)"
    ],
    "0x8c1BEd5b9a0928467c9B1341Da1D7BD5e10b6549": [
      "constructor(address _logic, address __admin, bytes _data) payable",
      "error CallWhenPaused()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Paused(address admin)",
      "event Unpaused(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function pause()",
      "function paused() returns (bool)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8CA7A5d6f3acd3A7A8bC468a8CD0FB14B6BD28b6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8EE3fC0Bcd7B57429203751C5bE5fdf1AB8409f3": [
      "constructor(address _singleton)"
    ],
    "0x8F73e4C2A6D852bb4ab2A45E6a9CF5715b3228B7": [
      "constructor(address _stETH)",
      "error ZeroStETHAddress()",
      "function domainSeparatorV4(address _stETH) view returns (bytes32)",
      "function eip712Domain(address _stETH) view returns (string name, string version, uint256 chainId, address verifyingContract)",
      "function hashTypedDataV4(address _stETH, bytes32 _structHash) view returns (bytes32)"
    ],
    "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x93c4b944D05dfe6df7645A86cd2206016c51564D": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x9535413B1B9862D0123A36F55e9bf20EBA4b152e": [
      "constructor(address _weth)",
      "event AllocateThresholdUpdated(uint256 _threshold)",
      "event AssetAllocated(address _asset, address _strategy, uint256 _amount)",
      "event AssetDefaultStrategyUpdated(address _asset, address _strategy)",
      "event AssetSupported(address _asset)",
      "event CapitalPaused()",
      "event CapitalUnpaused()",
      "event GovernorshipTransferred(address indexed previousGovernor, address indexed newGovernor)",
      "event MaxSupplyDiffChanged(uint256 maxSupplyDiff)",
      "event Mint(address _addr, uint256 _value)",
      "event NetOusdMintForStrategyThresholdChanged(uint256 _threshold)",
      "event OusdMetaStrategyUpdated(address _ousdMetaStrategy)",
      "event PendingGovernorshipTransfer(address indexed previousGovernor, address indexed newGovernor)",
      "event PriceProviderUpdated(address _priceProvider)",
      "event RebasePaused()",
      "event RebaseThresholdUpdated(uint256 _threshold)",
      "event RebaseUnpaused()",
      "event Redeem(address _addr, uint256 _value)",
      "event RedeemFeeUpdated(uint256 _redeemFeeBps)",
      "event StrategistUpdated(address _address)",
      "event StrategyApproved(address _addr)",
      "event StrategyRemoved(address _addr)",
      "event SwapAllowedUndervalueChanged(uint256 _basis)",
      "event SwapSlippageChanged(address _asset, uint256 _basis)",
      "event Swapped(address indexed _fromAsset, address indexed _toAsset, uint256 _fromAssetAmount, uint256 _toAssetAmount)",
      "event SwapperChanged(address _address)",
      "event TrusteeAddressChanged(address _address)",
      "event TrusteeFeeBpsChanged(uint256 _basis)",
      "event VaultBufferUpdated(uint256 _vaultBuffer)",
      "event YieldDistribution(address _to, uint256 _yield, uint256 _fee)",
      "function allocate()",
      "function assetDefaultStrategies(address) view returns (address)",
      "function autoAllocateThreshold() view returns (uint256)",
      "function burnForStrategy(uint256 _amount)",
      "function calculateRedeemOutputs(uint256 _amount) view returns (uint256[])",
      "function capitalPaused() view returns (bool)",
      "function checkBalance(address _asset) view returns (uint256)",
      "function claimGovernance()",
      "function getAllAssets() view returns (address[])",
      "function getAllStrategies() view returns (address[])",
      "function getAssetConfig(address _asset) view returns (tuple(bool isSupported, uint8 unitConversion, uint8 decimals, uint16 allowedOracleSlippageBps) config)",
      "function getAssetCount() view returns (uint256)",
      "function getStrategyCount() view returns (uint256)",
      "function governor() view returns (address)",
      "function initialize(address _priceProvider, address _oToken)",
      "function isGovernor() view returns (bool)",
      "function isSupportedAsset(address _asset) view returns (bool)",
      "function maxSupplyDiff() view returns (uint256)",
      "function mint(address _asset, uint256 _amount, uint256 _minimumOusdAmount)",
      "function mintForStrategy(uint256 _amount)",
      "function netOusdMintForStrategyThreshold() view returns (uint256)",
      "function netOusdMintedForStrategy() view returns (int256)",
      "function ousdMetaStrategy() view returns (address)",
      "function priceProvider() view returns (address)",
      "function priceUnitMint(address asset) view returns (uint256 price)",
      "function priceUnitRedeem(address asset) view returns (uint256 price)",
      "function rebase()",
      "function rebasePaused() view returns (bool)",
      "function rebaseThreshold() view returns (uint256)",
      "function redeem(uint256 _amount, uint256 _minimumUnitAmount)",
      "function redeemAll(uint256 _minimumUnitAmount)",
      "function redeemFeeBps() view returns (uint256)",
      "function setAdminImpl(address newImpl)",
      "function strategistAddr() view returns (address)",
      "function totalValue() view returns (uint256 value)",
      "function transferGovernance(address _newGovernor)",
      "function trusteeAddress() view returns (address)",
      "function trusteeFeeBps() view returns (uint256)",
      "function vaultBuffer() view returns (uint256)",
      "function weth() view returns (address)"
    ],
    "0x9895F0F17cc1d1891b6f18ee0b483B6f221b37Bb": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0x99Dd9F8D3a62cb416f6ef5ABBC90185c4162f8d0": [
      "error FundedKeyEventMigrationComplete()",
      "error InactiveOperator(uint256 index)",
      "error InvalidArrayLengths()",
      "error InvalidEmptyArray()",
      "error InvalidEmptyStoppedValidatorCountsArray()",
      "error InvalidEmptyString()",
      "error InvalidFundedKeyDeletionAttempt()",
      "error InvalidIndexOutOfBounds()",
      "error InvalidInitialization(uint256 version, uint256 expectedVersion)",
      "error InvalidKeyCount()",
      "error InvalidKeysLength()",
      "error InvalidStoppedValidatorCountsSum()",
      "error InvalidUnsortedIndexes()",
      "error InvalidZeroAddress()",
      "error NoExitRequestsToPerform()",
      "error OperatorLimitTooHigh(uint256 index, uint256 limit, uint256 keyCount)",
      "error OperatorLimitTooLow(uint256 index, uint256 limit, uint256 fundedKeyCount)",
      "error OperatorNotFound(uint256 index)",
      "error OperatorNotFound(uint256 index)",
      "error SliceOutOfBounds()",
      "error SliceOverflow()",
      "error StoppedValidatorCountAboveFundedCount(uint256 operatorIndex, uint32 stoppedCount, uint32 fundedCount)",
      "error StoppedValidatorCountArrayShrinking()",
      "error StoppedValidatorCountsDecreased()",
      "error StoppedValidatorCountsTooHigh()",
      "error Unauthorized(address caller)",
      "error UnorderedOperatorList()",
      "event AddedOperator(uint256 indexed index, string name, address indexed operatorAddress)",
      "event AddedValidatorKeys(uint256 indexed index, bytes publicKeysAndSignatures)",
      "event FundedValidatorKeys(uint256 indexed index, bytes[] publicKeys, bool deferred)",
      "event Initialize(uint256 version, bytes cdata)",
      "event OperatorEditsAfterSnapshot(uint256 indexed index, uint256 currentLimit, uint256 newLimit, uint256 indexed latestKeysEditBlockNumber, uint256 indexed snapshotBlock)",
      "event OperatorLimitUnchanged(uint256 indexed index, uint256 limit)",
      "event RemovedValidatorKey(uint256 indexed index, bytes publicKey)",
      "event RequestedValidatorExits(uint256 indexed index, uint256 count)",
      "event SetAdmin(address indexed admin)",
      "event SetCurrentValidatorExitsDemand(uint256 previousValidatorExitsDemand, uint256 nextValidatorExitsDemand)",
      "event SetOperatorAddress(uint256 indexed index, address indexed newOperatorAddress)",
      "event SetOperatorLimit(uint256 indexed index, uint256 newLimit)",
      "event SetOperatorName(uint256 indexed index, string newName)",
      "event SetOperatorStatus(uint256 indexed index, bool active)",
      "event SetOperatorStoppedValidatorCount(uint256 indexed index, uint256 newStoppedValidatorCount)",
      "event SetPendingAdmin(address indexed pendingAdmin)",
      "event SetRiver(address indexed river)",
      "event SetTotalValidatorExitsRequested(uint256 previousTotalValidatorExitsRequested, uint256 newTotalValidatorExitsRequested)",
      "event UpdatedRequestedValidatorExitsUponStopped(uint256 indexed index, uint32 oldRequestedExits, uint32 newRequestedExits)",
      "event UpdatedStoppedValidators(uint32[] stoppedValidatorCounts)",
      "function acceptAdmin()",
      "function addOperator(string _name, address _operator) returns (uint256)",
      "function addValidators(uint256 _index, uint32 _keyCount, bytes _publicKeysAndSignatures)",
      "function demandValidatorExits(uint256 _count, uint256 _depositedValidatorCount)",
      "function forceFundedValidatorKeysEventEmission(uint256 _amountToEmit)",
      "function getAdmin() view returns (address)",
      "function getCurrentValidatorExitsDemand() view returns (uint256)",
      "function getOperator(uint256 _index) view returns (tuple(uint32 limit, uint32 funded, uint32 requestedExits, uint32 keys, uint64 latestKeysEditBlockNumber, bool active, string name, address operator))",
      "function getOperatorCount() view returns (uint256)",
      "function getOperatorStoppedValidatorCount(uint256 _idx) view returns (uint32)",
      "function getPendingAdmin() view returns (address)",
      "function getRiver() view returns (address)",
      "function getStoppedAndRequestedExitCounts() view returns (uint32, uint256)",
      "function getStoppedValidatorCountPerOperator() view returns (uint32[])",
      "function getTotalStoppedValidatorCount() view returns (uint32)",
      "function getTotalValidatorExitsRequested() view returns (uint256)",
      "function getValidator(uint256 _operatorIndex, uint256 _validatorIndex) view returns (bytes publicKey, bytes signature, bool funded)",
      "function initOperatorsRegistryV1(address _admin, address _river)",
      "function initOperatorsRegistryV1_1()",
      "function listActiveOperators() view returns (tuple(uint32 limit, uint32 funded, uint32 requestedExits, uint32 keys, uint64 latestKeysEditBlockNumber, bool active, string name, address operator)[])",
      "function pickNextValidatorsToDeposit(uint256 _count) returns (bytes[] publicKeys, bytes[] signatures)",
      "function proposeAdmin(address _newAdmin)",
      "function removeValidators(uint256 _index, uint256[] _indexes)",
      "function reportStoppedValidatorCounts(uint32[] _stoppedValidatorCounts, uint256 _depositedValidatorCount)",
      "function requestValidatorExits(uint256 _count)",
      "function setOperatorAddress(uint256 _index, address _newOperatorAddress)",
      "function setOperatorLimits(uint256[] _operatorIndexes, uint32[] _newLimits, uint256 _snapshotBlock)",
      "function setOperatorName(uint256 _index, string _newName)",
      "function setOperatorStatus(uint256 _index, bool _newStatus)"
    ],
    "0x9b37180d847B27ADC13C2277299045C1237Ae281": [
      "event AllowanceReplenished(address indexed caller, uint256 allowance, uint256 amountReplenished)",
      "event CallerConfigured(address indexed caller, uint256 amount, uint256 interval)",
      "event CallerRemoved(address indexed caller)",
      "event ExchangeRateUpdated(address indexed caller, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function allowances(address) view returns (uint256)",
      "function allowancesLastSet(address) view returns (uint256)",
      "function callers(address) view returns (bool)",
      "function configureCaller(address caller, uint256 amount, uint256 interval)",
      "function currentAllowance(address caller) returns (uint256)",
      "function estimatedAllowance(address caller) view returns (uint256)",
      "function initialize(address newOwner, address newTokenContract)",
      "function intervals(address) view returns (uint256)",
      "function maxAllowances(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function removeCaller(address caller)",
      "function renounceOwnership()",
      "function tokenContract() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateExchangeRate(uint256 _newExchangeRate)"
    ],
    "0x9d7eD45EE2E8FC5482fa2428f15C971e6369011d": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x9f3b9198911054B122fDb865f8A5Ac516201c339": [
      "function hasInitialized() view returns (bool)",
      "function createBurnedPermission(address _app, bytes32 _role)",
      "function burnPermissionManager(address _app, bytes32 _role)",
      "function grantPermission(address _entity, address _app, bytes32 _role)",
      "function getPermissionParamsLength(address _entity, address _app, bytes32 _role) view returns (uint256)",
      "function evalParams(bytes32 _paramsHash, address _who, address _where, bytes32 _what, uint256[] _how) view returns (bool)",
      "function NO_PERMISSION() view returns (bytes32)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function CREATE_PERMISSIONS_ROLE() view returns (bytes32)",
      "function grantPermissionP(address _entity, address _app, bytes32 _role, uint256[] _params)",
      "function hasPermission(address _who, address _where, bytes32 _what) view returns (bool)",
      "function allowRecoverability(address token) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function getInitializationBlock() view returns (uint256)",
      "function revokePermission(address _entity, address _app, bytes32 _role)",
      "function transferToVault(address _token)",
      "function getPermissionParam(address _entity, address _app, bytes32 _role, uint256 _index) view returns (uint8, uint8, uint240)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function ANY_ENTITY() view returns (address)",
      "function removePermissionManager(address _app, bytes32 _role)",
      "function setPermissionManager(address _newManager, address _app, bytes32 _role)",
      "function getPermissionManager(address _app, bytes32 _role) view returns (address)",
      "function createPermission(address _entity, address _app, bytes32 _role, address _manager)",
      "function initialize(address _permissionsCreator)",
      "function EMPTY_PARAM_HASH() view returns (bytes32)",
      "function kernel() view returns (address)",
      "function isPetrified() view returns (bool)",
      "function BURN_ENTITY() view returns (address)",
      "function hasPermission(address _who, address _where, bytes32 _what, uint256[] _how) view returns (bool)",
      "function hasPermission(address _who, address _where, bytes32 _what, bytes _how) view returns (bool)",
      "event SetPermission(address indexed entity, address indexed app, bytes32 indexed role, bool allowed)",
      "event SetPermissionParams(address indexed entity, address indexed app, bytes32 indexed role, bytes32 paramsHash)",
      "event ChangePermissionManager(address indexed app, bytes32 indexed role, address indexed manager)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)"
    ],
    "0xa29b819654cE6224A222bb5f586920105E2D7E0E": [
      "function hasInitialized() view returns (bool)",
      "function getVersion() view returns (uint256)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function initialize(address _lidoLocator, address _accountingOracleConsensusContract)",
      "function finalizeUpgrade_v4(address _accountingOracle)",
      "function getLastCompletedReportDelta() view returns (uint256 postTotalPooledEther, uint256 preTotalPooledEther, uint256 timeElapsed)",
      "function getLido() view returns (address)",
      "function getCurrentFrame() view returns (uint256 frameEpochId, uint256 frameStartTime, uint256 frameEndTime)",
      "function allowRecoverability(address token) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function handlePostTokenRebase(uint256, uint256 timeElapsed, uint256, uint256 preTotalEther, uint256 postTotalShares, uint256 postTotalEther, uint256)",
      "function getLastCompletedEpochId() view returns (uint256)",
      "function getContractVersion() view returns (uint256)",
      "function getInitializationBlock() view returns (uint256)",
      "function handleConsensusLayerReport(uint256 _refSlot, uint256 _clBalance, uint256 _clValidators)",
      "function transferToVault(address _token)",
      "function getAccountingOracle() view returns (address)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getCurrentEpochId() view returns (uint256)",
      "function getEVMScriptRegistry() view returns (address)",
      "function kernel() view returns (address)",
      "function isPetrified() view returns (bool)",
      "function getBeaconSpec() view returns (uint64 epochsPerFrame, uint64 slotsPerEpoch, uint64 secondsPerSlot, uint64 genesisTime)",
      "event Completed(uint256 epochId, uint128 beaconBalance, uint128 beaconValidators)",
      "event PostTotalShares(uint256 postTotalPooledEther, uint256 preTotalPooledEther, uint256 timeElapsed, uint256 totalShares)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)",
      "event ContractVersionSet(uint256 version)"
    ],
    "0xa2E3356610840701BDf5611a53974510Ae27E2e1": [
      "constructor(address implementationContract)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address implementation)",
      "function admin() view returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() view returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xA3464e1b86EE6941A600f9F69C61A47322af918F": [
      "constructor(address _singleton)"
    ],
    "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xa4C637e0F704745D182e4D38cAb7E7485321d059": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF": [
      "constructor(address admin_, uint256 delay_)",
      "event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event NewAdmin(address indexed newAdmin)",
      "event NewDelay(uint256 indexed newDelay)",
      "event NewPendingAdmin(address indexed newPendingAdmin)",
      "event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function acceptAdmin()",
      "function admin() view returns (address)",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta)",
      "function delay() view returns (uint256)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable returns (bytes)",
      "function pendingAdmin() view returns (address)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) returns (bytes32)",
      "function queuedTransactions(bytes32) view returns (bool)",
      "function setDelay(uint256 delay_)",
      "function setPendingAdmin(address pendingAdmin_)"
    ],
    "0xac3E018457B222d93114458476f3E3416Abbe38F": [
      "constructor(address _underlying, uint32 _rewardsCycleLength)",
      "error SyncError()",
      "event Approval(address indexed owner, address indexed spender, uint256 amount)",
      "event Deposit(address indexed caller, address indexed owner, uint256 assets, uint256 shares)",
      "event NewRewardsCycle(uint32 indexed cycleEnd, uint256 rewardAmount)",
      "event Transfer(address indexed from, address indexed to, uint256 amount)",
      "event Withdraw(address indexed caller, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function asset() view returns (address)",
      "function balanceOf(address) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function deposit(uint256 assets, address receiver) returns (uint256 shares)",
      "function depositWithSignature(uint256 assets, address receiver, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 shares)",
      "function lastRewardAmount() view returns (uint192)",
      "function lastSync() view returns (uint32)",
      "function maxDeposit(address) view returns (uint256)",
      "function maxMint(address) view returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256 assets)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function pricePerShare() view returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner) returns (uint256 assets)",
      "function rewardsCycleEnd() view returns (uint32)",
      "function rewardsCycleLength() view returns (uint32)",
      "function symbol() view returns (string)",
      "function syncRewards()",
      "function totalAssets() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function withdraw(uint256 assets, address receiver, address owner) returns (uint256 shares)"
    ],
    "0xAe60d8180437b5C34bB956822ac2710972584473": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xae78736Cd615f374D3085123A210448E74Fc6393": [
      "constructor(address _rocketStorageAddress)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event EtherDeposited(address indexed from, uint256 amount, uint256 time)",
      "event TokensBurned(address indexed from, uint256 amount, uint256 ethAmount, uint256 time)",
      "event TokensMinted(address indexed to, uint256 amount, uint256 ethAmount, uint256 time)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 _rethAmount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function depositExcess() payable",
      "function depositExcessCollateral()",
      "function getCollateralRate() view returns (uint256)",
      "function getEthValue(uint256 _rethAmount) view returns (uint256)",
      "function getExchangeRate() view returns (uint256)",
      "function getRethValue(uint256 _ethAmount) view returns (uint256)",
      "function getTotalCollateral() view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function mint(uint256 _ethAmount, address _to)",
      "function name() view returns (string)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function version() view returns (uint8)"
    ],
    "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function appId() view returns (bytes32)",
      "function kernel() view returns (address)",
      "constructor(address _kernel, bytes32 _appId, bytes _initializePayload)",
      "event ProxyDeposit(address sender, uint256 value)"
    ],
    "0xb8FFC3Cd6e7Cf5a098A1c92F48009765B24088Dc": [
      "function proxyType() pure returns (uint256 proxyTypeId)",
      "function apps(bytes32, bytes32) view returns (address)",
      "function isDepositable() view returns (bool)",
      "function implementation() view returns (address)",
      "function recoveryVaultAppId() view returns (bytes32)",
      "constructor(address _kernelImpl)",
      "event ProxyDeposit(address sender, uint256 value)",
      "event SetApp(bytes32 indexed namespace, bytes32 indexed appId, address app)"
    ],
    "0xBB7B99C2BE525C0A6B719344F89A4255ef593E64": [
      "constructor()",
      "error AlreadyPaused()",
      "error AlreadyUnpaused()",
      "error CannotBeZeroAddress()",
      "error NoTokensToWithdraw()",
      "event BotMethodsPause(bool newPausedStatus)",
      "event CoreMethodsPause(bool newPausedStatus)",
      "event Initialized(uint8 version)",
      "event Lockdown()",
      "event OperatorMethodsPause(bool newPausedStatus)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event UpdatedDepositManager(address newAddress, address oldAddress)",
      "event UpdatedNodeOperatorRegistry(address newAddress, address oldAddress)",
      "event UpdatedSwETH(address newAddress, address oldAddress)",
      "event UpdatedSwEXIT(address newAddress, address oldAddress)",
      "event UpdatedSwellTreasury(address newAddress, address oldAddress)",
      "event WithdrawalsPause(bool newPausedStatus)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DepositManager() view returns (address)",
      "function NodeOperatorRegistry() view returns (address)",
      "function PLATFORM_ADMIN() pure returns (bytes32)",
      "function SwellTreasury() view returns (address)",
      "function botMethodsPaused() view returns (bool)",
      "function checkRole(bytes32 role, address account) view",
      "function coreMethodsPaused() view returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(tuple(address admin, address swellTreasury) _initializeParams)",
      "function lockdown()",
      "function operatorMethodsPaused() view returns (bool)",
      "function pauseBotMethods()",
      "function pauseCoreMethods()",
      "function pauseOperatorMethods()",
      "function pauseWithdrawals()",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setDepositManager(address _depositManager)",
      "function setNodeOperatorRegistry(address _NodeOperatorRegistry)",
      "function setSwETH(address _swETH)",
      "function setSwEXIT(address _swEXIT)",
      "function setSwellTreasury(address _swellTreasury)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function swETH() view returns (address)",
      "function swEXIT() view returns (address)",
      "function unpauseBotMethods()",
      "function unpauseCoreMethods()",
      "function unpauseOperatorMethods()",
      "function unpauseWithdrawals()",
      "function withdrawERC20(address _token)",
      "function withdrawalsPaused() view returns (bool)"
    ],
    "0xBd35a7a1CDeF403a6a99e4E8BA0974D198455030": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xBE1685C81aA44FF9FB319dD389addd9374383e90": [
      "constructor(address _singleton)"
    ],
    "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704": [
      "constructor(address implementationContract)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address implementation)",
      "function admin() view returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() view returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xBF1Ce0Bc4EdaAD8e576b3b55e19c4C15Cf6999eb": [
      "function getScriptExecutor(bytes _script) view returns (address)",
      "function hasInitialized() view returns (bool)",
      "function REGISTRY_ADD_EXECUTOR_ROLE() view returns (bytes32)",
      "function getEVMScriptExecutor(bytes _script) view returns (address)",
      "function getRecoveryVault() view returns (address)",
      "function disableScriptExecutor(uint256 _executorId)",
      "function allowRecoverability(address token) view returns (bool)",
      "function appId() view returns (bytes32)",
      "function initialize()",
      "function addScriptExecutor(address _executor) returns (uint256 id)",
      "function getInitializationBlock() view returns (uint256)",
      "function transferToVault(address _token)",
      "function canPerform(address _sender, bytes32 _role, uint256[] _params) view returns (bool)",
      "function getEVMScriptRegistry() view returns (address)",
      "function REGISTRY_MANAGER_ROLE() view returns (bytes32)",
      "function enableScriptExecutor(uint256 _executorId)",
      "function kernel() view returns (address)",
      "function isPetrified() view returns (bool)",
      "function executors(uint256) view returns (address executor, bool enabled)",
      "event EnableExecutor(uint256 indexed executorId, address indexed executorAddress)",
      "event DisableExecutor(uint256 indexed executorId, address indexed executorAddress)",
      "event ScriptResult(address indexed executor, bytes script, bytes input, bytes returnData)",
      "event RecoverToVault(address indexed vault, address indexed token, uint256 amount)"
    ],
    "0xC1d0b3DE6792Bf6b4b37EccdcC24e45978Cfd2Eb": [
      "constructor(address implementation_, address admin_, bytes data_)",
      "error NotAdmin()",
      "error ProxyIsOssified()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ProxyOssified()",
      "event Upgraded(address indexed implementation)",
      "function proxy__changeAdmin(address newAdmin_)",
      "function proxy__getAdmin() view returns (address)",
      "function proxy__getImplementation() view returns (address)",
      "function proxy__getIsOssified() view returns (bool)",
      "function proxy__ossify()",
      "function proxy__upgradeTo(address newImplementation_)",
      "function proxy__upgradeToAndCall(address newImplementation_, bytes setupCalldata_, bool forceCall_)"
    ],
    "0xc26016f1166bE7b6c5611AAB104122E0f6c2aCE2": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0xc9173Bf8Bd5c1b071B5CaE4122202A347b7EeFab": [
      "constructor()",
      "error NotStakingContract()",
      "error NotUnstakeRequestsManagerContract()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(tuple(address admin, address staking, address unstakeRequestsManager) init)",
      "function mint(address staker, uint256 amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function stakingContract() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function unstakeRequestsManagerContract() view returns (address)"
    ],
    "0xCc4E08A5BFA887621Ad68826a0D5913d7a2cb392": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xce95ba824ae9A4Df9B303C0bbf4D605BA2aFfbfC": [
      "constructor()",
      "error AddressAlreadyInWhitelist(address _address)",
      "error AddressMissingFromWhitelist(address _address)",
      "error CannotBeZeroAddress()",
      "error CannotBurnZeroSwETH()",
      "error CannotReferSelf()",
      "error CannotRepriceWithZeroSwETHSupply()",
      "error CoreMethodsPaused()",
      "error InvalidETHDeposit()",
      "error InvalidMethodCall()",
      "error InvalidPreRewardETHReserves()",
      "error NoTokensToWithdraw()",
      "error NotEnoughTimeElapsedForReprice(uint256 remainingTime)",
      "error NotInWhitelist()",
      "error PRBMath_MulDiv18_Overflow(uint256 x, uint256 y)",
      "error PRBMath_MulDiv_Overflow(uint256 x, uint256 y, uint256 denominator)",
      "error RepriceDifferenceTooLarge(uint256 repriceDiff, uint256 maximumRepriceDiff)",
      "error RepriceswETHDifferenceTooLarge(uint256 repriceswETHDiff, uint256 maximumswETHRepriceDiff)",
      "error RewardPercentageTotalOverflow()",
      "error WhitelistAlreadyDisabled()",
      "error WhitelistAlreadyEnabled()",
      "event AddedToWhitelist(address indexed _address)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ETHDepositReceived(address indexed from, uint256 amount, uint256 swETHMinted, uint256 newTotalETHDeposited, address indexed referral)",
      "event ETHWithdrawn(address indexed to, uint256 swETHBurned, uint256 ethReturned)",
      "event Initialized(uint8 version)",
      "event MaximumRepriceDifferencePercentageUpdated(uint256 _oldMaximumRepriceDifferencePercentage, uint256 _newMaximumRepriceDifferencePercentage)",
      "event MaximumRepriceswETHDifferencePercentageUpdated(uint256 _oldMaximumRepriceswETHDifferencePercentage, uint256 _newMaximumRepriceswETHDifferencePercentage)",
      "event MinimumRepriceTimeUpdated(uint256 _oldMinimumRepriceTime, uint256 _newMinimumRepriceTime)",
      "event NodeOperatorRewardPercentageUpdate(uint256 oldPercentage, uint256 newPercentage)",
      "event RemovedFromWhitelist(address indexed _address)",
      "event Reprice(uint256 newEthReserves, uint256 newSwETHToETHRate, uint256 nodeOperatorRewards, uint256 swellTreasuryRewards, uint256 totalETHDeposited)",
      "event SwellTreasuryRewardPercentageUpdate(uint256 oldPercentage, uint256 newPercentage)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event WhitelistDisabled()",
      "event WhitelistEnabled()",
      "function AccessControlManager() view returns (address)",
      "function addToWhitelist(address _address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function batchAddToWhitelist(address[] _addresses)",
      "function batchRemoveFromWhitelist(address[] _addresses)",
      "function burn(uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function deposit() payable",
      "function depositWithReferral(address referral) payable",
      "function disableWhitelist()",
      "function enableWhitelist()",
      "function ethToSwETHRate() view returns (uint256)",
      "function getRate() view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address _accessControlManager)",
      "function lastRepriceETHReserves() view returns (uint256)",
      "function lastRepriceUNIX() view returns (uint256)",
      "function maximumRepriceDifferencePercentage() view returns (uint256)",
      "function maximumRepriceswETHDifferencePercentage() view returns (uint256)",
      "function minimumRepriceTime() view returns (uint256)",
      "function name() view returns (string)",
      "function nodeOperatorRewardPercentage() view returns (uint256)",
      "function removeFromWhitelist(address _address)",
      "function reprice(uint256 _preRewardETHReserves, uint256 _newETHRewards, uint256 _swETHTotalSupply)",
      "function setMaximumRepriceDifferencePercentage(uint256 _maximumRepriceDifferencePercentage)",
      "function setMaximumRepriceswETHDifferencePercentage(uint256 _maximumRepriceswETHDifferencePercentage)",
      "function setMinimumRepriceTime(uint256 _minimumRepriceTime)",
      "function setNodeOperatorRewardPercentage(uint256 _newNodeOperatorRewardPercentage)",
      "function setSwellTreasuryRewardPercentage(uint256 _newSwellTreasuryRewardPercentage)",
      "function swETHToETHRate() view returns (uint256)",
      "function swellTreasuryRewardPercentage() view returns (uint256)",
      "function symbol() view returns (string)",
      "function totalETHDeposited() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function whitelistEnabled() view returns (bool)",
      "function whitelistedAddresses(address) view returns (bool)",
      "function withdrawERC20(address _token)"
    ],
    "0xCfa8cf872f0B8cE15C175a8eB13688D5c69E9CEe": [
      "error Denied(address _account)",
      "error InvalidAlloweeCount()",
      "error InvalidInitialization(uint256 version, uint256 expectedVersion)",
      "error InvalidZeroAddress()",
      "error MismatchedAlloweeAndStatusCount()",
      "error Unauthorized(address caller)",
      "event Initialize(uint256 version, bytes cdata)",
      "event SetAdmin(address indexed admin)",
      "event SetAllower(address indexed allower)",
      "event SetAllowlistPermissions(address[] accounts, uint256[] permissions)",
      "event SetPendingAdmin(address indexed pendingAdmin)",
      "function acceptAdmin()",
      "function allow(address[] _accounts, uint256[] _permissions)",
      "function getAdmin() view returns (address)",
      "function getAllower() view returns (address)",
      "function getPendingAdmin() view returns (address)",
      "function getPermissions(address _account) view returns (uint256)",
      "function hasPermission(address _account, uint256 _mask) view returns (bool)",
      "function initAllowlistV1(address _admin, address _allower)",
      "function isAllowed(address _account, uint256 _mask) view returns (bool)",
      "function isDenied(address _account) view returns (bool)",
      "function onlyAllowed(address _account, uint256 _mask) view",
      "function proposeAdmin(address _newAdmin)",
      "function setAllower(address _newAllowerAddress)"
    ],
    "0xd3e09a0c2A9A6FDf5E92aE65D3CC090A4dF8EECF": [
      "constructor(address _serviceManager, address _stakeRegistry, address _blsApkRegistry, address _indexRegistry)",
      "event ChurnApproverUpdated(address prevChurnApprover, address newChurnApprover)",
      "event EjectorUpdated(address prevEjector, address newEjector)",
      "event Initialized(uint8 version)",
      "event OperatorDeregistered(address indexed operator, bytes32 indexed operatorId)",
      "event OperatorRegistered(address indexed operator, bytes32 indexed operatorId)",
      "event OperatorSetParamsUpdated(uint8 indexed quorumNumber, tuple(uint32 maxOperatorCount, uint16 kickBIPsOfOperatorStake, uint16 kickBIPsOfTotalStake) operatorSetParams)",
      "event OperatorSocketUpdate(bytes32 indexed operatorId, string socket)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event QuorumBlockNumberUpdated(uint8 indexed quorumNumber, uint256 blocknumber)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function OPERATOR_CHURN_APPROVAL_TYPEHASH() view returns (bytes32)",
      "function PUBKEY_REGISTRATION_TYPEHASH() view returns (bytes32)",
      "function blsApkRegistry() view returns (address)",
      "function calculateOperatorChurnApprovalDigestHash(address registeringOperator, bytes32 registeringOperatorId, tuple(uint8 quorumNumber, address operator)[] operatorKickParams, bytes32 salt, uint256 expiry) view returns (bytes32)",
      "function churnApprover() view returns (address)",
      "function createQuorum(tuple(uint32 maxOperatorCount, uint16 kickBIPsOfOperatorStake, uint16 kickBIPsOfTotalStake) operatorSetParams, uint96 minimumStake, tuple(address strategy, uint96 multiplier)[] strategyParams)",
      "function deregisterOperator(bytes quorumNumbers)",
      "function ejectOperator(address operator, bytes quorumNumbers)",
      "function ejector() view returns (address)",
      "function getCurrentQuorumBitmap(bytes32 operatorId) view returns (uint192)",
      "function getOperator(address operator) view returns (tuple(bytes32 operatorId, uint8 status))",
      "function getOperatorFromId(bytes32 operatorId) view returns (address)",
      "function getOperatorId(address operator) view returns (bytes32)",
      "function getOperatorSetParams(uint8 quorumNumber) view returns (tuple(uint32 maxOperatorCount, uint16 kickBIPsOfOperatorStake, uint16 kickBIPsOfTotalStake))",
      "function getOperatorStatus(address operator) view returns (uint8)",
      "function getQuorumBitmapAtBlockNumberByIndex(bytes32 operatorId, uint32 blockNumber, uint256 index) view returns (uint192)",
      "function getQuorumBitmapHistoryLength(bytes32 operatorId) view returns (uint256)",
      "function getQuorumBitmapIndicesAtBlockNumber(uint32 blockNumber, bytes32[] operatorIds) view returns (uint32[])",
      "function getQuorumBitmapUpdateByIndex(bytes32 operatorId, uint256 index) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint192 quorumBitmap))",
      "function indexRegistry() view returns (address)",
      "function initialize(address _initialOwner, address _churnApprover, address _ejector, address _pauserRegistry, uint256 _initialPausedStatus, tuple(uint32 maxOperatorCount, uint16 kickBIPsOfOperatorStake, uint16 kickBIPsOfTotalStake)[] _operatorSetParams, uint96[] _minimumStakes, tuple(address strategy, uint96 multiplier)[][] _strategyParams)",
      "function isChurnApproverSaltUsed(bytes32) view returns (bool)",
      "function numRegistries() view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function pubkeyRegistrationMessageHash(address operator) view returns (tuple(uint256 X, uint256 Y))",
      "function quorumCount() view returns (uint8)",
      "function quorumUpdateBlockNumber(uint8) view returns (uint256)",
      "function registerOperator(bytes quorumNumbers, string socket, tuple(tuple(uint256 X, uint256 Y) pubkeyRegistrationSignature, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2) params, tuple(bytes signature, bytes32 salt, uint256 expiry) operatorSignature)",
      "function registerOperatorWithChurn(bytes quorumNumbers, string socket, tuple(tuple(uint256 X, uint256 Y) pubkeyRegistrationSignature, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2) params, tuple(uint8 quorumNumber, address operator)[] operatorKickParams, tuple(bytes signature, bytes32 salt, uint256 expiry) churnApproverSignature, tuple(bytes signature, bytes32 salt, uint256 expiry) operatorSignature)",
      "function registries(uint256) view returns (address)",
      "function renounceOwnership()",
      "function serviceManager() view returns (address)",
      "function setChurnApprover(address _churnApprover)",
      "function setEjector(address _ejector)",
      "function setOperatorSetParams(uint8 quorumNumber, tuple(uint32 maxOperatorCount, uint16 kickBIPsOfOperatorStake, uint16 kickBIPsOfTotalStake) operatorSetParams)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function stakeRegistry() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function updateOperators(address[] operators)",
      "function updateOperatorsForQuorum(address[][] operatorsPerQuorum, bytes quorumNumbers)",
      "function updateSocket(string socket)"
    ],
    "0xd5F7838F5C461fefF7FE49ea5ebaF7728bB0ADfa": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xd745A68c705F5aa75DFf528540678288ed2aD9eE": [
      "constructor(address _admin, address _executor, address _destination, bytes4[] _executorCallableSelectors)",
      "error InvalidZeroAddress()",
      "error Unauthorized(address caller)",
      "event SetAdmin(address indexed admin)",
      "event SetDestination(address indexed destination)",
      "event SetExecutor(address indexed executor)",
      "event SetExecutorPermissions(bytes4 selector, bool status)",
      "event SetPendingAdmin(address indexed pendingAdmin)",
      "function acceptAdmin()",
      "function allowExecutor(bytes4 _functionSelector, bool _executorCanCall)",
      "function destination() view returns (address)",
      "function executor() view returns (address)",
      "function executorCanCall(bytes4) view returns (bool)",
      "function getAdmin() view returns (address)",
      "function getPendingAdmin() view returns (address)",
      "function proposeAdmin(address _newAdmin)",
      "function setExecutor(address _newExecutor)"
    ],
    "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdAbdB3Cd346B7D5F5779b0B614EdE1CC9DcBA5b7": [
      "constructor(address _delegation)",
      "event AVSMetadataURIUpdated(address indexed avs, string metadataURI)",
      "event Initialized(uint8 version)",
      "event OperatorAVSRegistrationStatusUpdated(address indexed operator, address indexed avs, uint8 status)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function OPERATOR_AVS_REGISTRATION_TYPEHASH() view returns (bytes32)",
      "function avsOperatorStatus(address, address) view returns (uint8)",
      "function calculateOperatorAVSRegistrationDigestHash(address operator, address avs, bytes32 salt, uint256 expiry) view returns (bytes32)",
      "function cancelSalt(bytes32 salt)",
      "function delegation() view returns (address)",
      "function deregisterOperatorFromAVS(address operator)",
      "function domainSeparator() view returns (bytes32)",
      "function initialize(address initialOwner, address _pauserRegistry, uint256 initialPausedStatus)",
      "function operatorSaltIsSpent(address, bytes32) view returns (bool)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function registerOperatorToAVS(address operator, tuple(bytes signature, bytes32 salt, uint256 expiry) operatorSignature)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function updateAVSMetadataURI(string metadataURI)"
    ],
    "0xdecaCC56fc347274D3Df2b709602632845611D39": [
      "constructor()",
      "error DoesNotReceiveETH()",
      "error InvalidConfiguration()",
      "error InvalidDepositRoot(bytes32)",
      "error InvalidWithdrawalCredentialsNotETH1(bytes12)",
      "error InvalidWithdrawalCredentialsWrongAddress(address)",
      "error InvalidWithdrawalCredentialsWrongLength(uint256)",
      "error MaximumMETHSupplyExceeded()",
      "error MaximumValidatorDepositExceeded()",
      "error MinimumStakeBoundNotSatisfied()",
      "error MinimumUnstakeBoundNotSatisfied()",
      "error MinimumValidatorDepositNotSatisfied()",
      "error NotEnoughDepositETH()",
      "error NotEnoughUnallocatedETH()",
      "error NotReturnsAggregator()",
      "error NotUnstakeRequestsManager()",
      "error Paused()",
      "error PreviouslyUsedValidator()",
      "error StakeBelowMinimumMETHAmount(uint256 methAmount, uint256 expectedMinimum)",
      "error UnstakeBelowMinimumETHAmount(uint256 ethAmount, uint256 expectedMinimum)",
      "error ZeroAddress()",
      "event AllocatedETHToDeposits(uint256 amount)",
      "event AllocatedETHToUnstakeRequestsManager(uint256 amount)",
      "event Initialized(uint8 version)",
      "event ProtocolConfigChanged(bytes4 indexed setterSelector, string setterSignature, bytes value)",
      "event ReturnsReceived(uint256 amount)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Staked(address indexed staker, uint256 ethAmount, uint256 mETHAmount)",
      "event UnstakeRequestClaimed(uint256 indexed id, address indexed staker)",
      "event UnstakeRequested(uint256 indexed id, address indexed staker, uint256 ethAmount, uint256 mETHLocked)",
      "event ValidatorInitiated(bytes32 indexed id, uint256 indexed operatorID, bytes pubkey, uint256 amountDeposited)",
      "function ALLOCATOR_SERVICE_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function INITIATOR_SERVICE_ROLE() view returns (bytes32)",
      "function STAKING_ALLOWLIST_MANAGER_ROLE() view returns (bytes32)",
      "function STAKING_ALLOWLIST_ROLE() view returns (bytes32)",
      "function STAKING_MANAGER_ROLE() view returns (bytes32)",
      "function TOP_UP_ROLE() view returns (bytes32)",
      "function allocateETH(uint256 allocateToUnstakeRequestsManager, uint256 allocateToDeposits)",
      "function allocatedETHForDeposits() view returns (uint256)",
      "function claimUnstakeRequest(uint256 unstakeRequestID)",
      "function depositContract() view returns (address)",
      "function ethToMETH(uint256 ethAmount) view returns (uint256)",
      "function exchangeAdjustmentRate() view returns (uint16)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initializationBlockNumber() view returns (uint256)",
      "function initialize(tuple(address admin, address manager, address allocatorService, address initiatorService, address returnsAggregator, address withdrawalWallet, address mETH, address depositContract, address oracle, address pauser, address unstakeRequestsManager) init)",
      "function initiateValidatorsWithDeposits(tuple(uint256 operatorID, uint256 depositAmount, bytes pubkey, bytes withdrawalCredentials, bytes signature, bytes32 depositDataRoot)[] validators, bytes32 expectedDepositRoot)",
      "function isStakingAllowlist() view returns (bool)",
      "function mETH() view returns (address)",
      "function mETHToETH(uint256 mETHAmount) view returns (uint256)",
      "function maximumDepositAmount() view returns (uint256)",
      "function maximumMETHSupply() view returns (uint256)",
      "function minimumDepositAmount() view returns (uint256)",
      "function minimumStakeBound() view returns (uint256)",
      "function minimumUnstakeBound() view returns (uint256)",
      "function numInitiatedValidators() view returns (uint256)",
      "function oracle() view returns (address)",
      "function pauser() view returns (address)",
      "function receiveFromUnstakeRequestsManager() payable",
      "function receiveReturns() payable",
      "function reclaimAllocatedETHSurplus()",
      "function renounceRole(bytes32 role, address account)",
      "function returnsAggregator() view returns (address)",
      "function revokeRole(bytes32 role, address account)",
      "function setExchangeAdjustmentRate(uint16 exchangeAdjustmentRate_)",
      "function setMaximumDepositAmount(uint256 maximumDepositAmount_)",
      "function setMaximumMETHSupply(uint256 maximumMETHSupply_)",
      "function setMinimumDepositAmount(uint256 minimumDepositAmount_)",
      "function setMinimumStakeBound(uint256 minimumStakeBound_)",
      "function setMinimumUnstakeBound(uint256 minimumUnstakeBound_)",
      "function setStakingAllowlist(bool isStakingAllowlist_)",
      "function setWithdrawalWallet(address withdrawalWallet_)",
      "function stake(uint256 minMETHAmount) payable",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function topUp() payable",
      "function totalControlled() view returns (uint256)",
      "function totalDepositedInValidators() view returns (uint256)",
      "function unallocatedETH() view returns (uint256)",
      "function unstakeRequest(uint128 methAmount, uint128 minETHAmount) returns (uint256)",
      "function unstakeRequestInfo(uint256 unstakeRequestID) view returns (bool, uint256)",
      "function unstakeRequestWithPermit(uint128 methAmount, uint128 minETHAmount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) returns (uint256)",
      "function unstakeRequestsManager() view returns (address)",
      "function usedValidators(bytes pubkey) view returns (bool exists)",
      "function withdrawalWallet() view returns (address)"
    ],
    "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3": [
      "constructor(address _strategyManager)",
      "event Initialized(uint8 version)",
      "event MaxPerDepositUpdated(uint256 previousValue, uint256 newValue)",
      "event MaxTotalDepositsUpdated(uint256 previousValue, uint256 newValue)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function deposit(address token, uint256 amount) returns (uint256 newShares)",
      "function explanation() pure returns (string)",
      "function getTVLLimits() view returns (uint256, uint256)",
      "function initialize(uint256 _maxPerDeposit, uint256 _maxTotalDeposits, address _underlyingToken, address _pauserRegistry)",
      "function initialize(address _underlyingToken, address _pauserRegistry)",
      "function maxPerDeposit() view returns (uint256)",
      "function maxTotalDeposits() view returns (uint256)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setTVLLimits(uint256 newMaxPerDeposit, uint256 newMaxTotalDeposits)",
      "function shares(address user) view returns (uint256)",
      "function sharesToUnderlying(uint256 amountShares) view returns (uint256)",
      "function sharesToUnderlyingView(uint256 amountShares) view returns (uint256)",
      "function strategyManager() view returns (address)",
      "function totalShares() view returns (uint256)",
      "function underlyingToShares(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToSharesView(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToken() view returns (address)",
      "function unpause(uint256 newPausedStatus)",
      "function userUnderlying(address user) returns (uint256)",
      "function userUnderlyingView(address user) view returns (uint256)",
      "function withdraw(address depositor, address token, uint256 amountShares)"
    ],
    "0xe3cBd06D7dadB3F4e6557bAb7EdD924CD1489E8f": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xe4297e3DaDBc7D99e26a2954820f514CB50C5762": [
      "constructor(address _ethPOS, address _eigenPodBeacon, address _strategyManager, address _slasher, address _delegationManager)",
      "event BeaconChainETHDeposited(address indexed podOwner, uint256 amount)",
      "event BeaconChainETHWithdrawalCompleted(address indexed podOwner, uint256 shares, uint96 nonce, address delegatedAddress, address withdrawer, bytes32 withdrawalRoot)",
      "event BeaconOracleUpdated(address indexed newOracleAddress)",
      "event DenebForkTimestampUpdated(uint64 newValue)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event PodDeployed(address indexed eigenPod, address indexed podOwner)",
      "event PodSharesUpdated(address indexed podOwner, int256 sharesDelta)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function addShares(address podOwner, uint256 shares) returns (uint256)",
      "function beaconChainETHStrategy() view returns (address)",
      "function beaconChainOracle() view returns (address)",
      "function createPod() returns (address)",
      "function delegationManager() view returns (address)",
      "function denebForkTimestamp() view returns (uint64)",
      "function eigenPodBeacon() view returns (address)",
      "function ethPOS() view returns (address)",
      "function getBlockRootAtTimestamp(uint64 timestamp) view returns (bytes32)",
      "function getPod(address podOwner) view returns (address)",
      "function hasPod(address podOwner) view returns (bool)",
      "function initialize(address _beaconChainOracle, address initialOwner, address _pauserRegistry, uint256 _initPausedStatus)",
      "function numPods() view returns (uint256)",
      "function owner() view returns (address)",
      "function ownerToPod(address) view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function podOwnerShares(address) view returns (int256)",
      "function recordBeaconChainETHBalanceUpdate(address podOwner, int256 sharesDelta)",
      "function removeShares(address podOwner, uint256 shares)",
      "function renounceOwnership()",
      "function setDenebForkTimestamp(uint64 newDenebForkTimestamp)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function slasher() view returns (address)",
      "function stake(bytes pubkey, bytes signature, bytes32 depositDataRoot) payable",
      "function strategyManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function updateBeaconChainOracle(address newBeaconChainOracle)",
      "function withdrawSharesAsTokens(address podOwner, address destination, uint256 shares)"
    ],
    "0xE672E0E0101A7F58d728751E2a5e6Da5Ff1FDa64": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BscBridgeContractChanged(address prevValue, address newValue)",
      "event FeeRecipientChanged(address prevValue, address newValue)",
      "event GlobalPoolContractUpdated(address prevValue, address newValue)",
      "event NameAndSymbolChanged(string name, string symbol)",
      "event OperatorChanged(address prevValue, address newValue)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PauseToggled(bytes32 indexed action, bool newValue)",
      "event RatioThresholdChanged(uint32 prevValue, uint32 newValue)",
      "event RatioUpdate(uint256 newRatio)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function MAX_THRESHOLD() view returns (uint32)",
      "function _RATIO_THRESHOLD() view returns (uint32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function bondsToShares(uint256 amount) view returns (uint256)",
      "function burn(address account, uint256 amount)",
      "function changeOperator(address operator)",
      "function claimTokens(address token, address to, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string name, string symbol)",
      "function isPaused(bytes32 action) view returns (bool)",
      "function isRebasing() pure returns (bool)",
      "function mint(address account, uint256 amount) returns (uint256)",
      "function mintApprovedTo(address account, address spender, uint256 amount)",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function ratio() view returns (uint256)",
      "function refundPool(address from, uint256 shares)",
      "function renounceOwnership()",
      "function repairRatio(uint256 newRatio)",
      "function setBscBridgeContract(address _bscBridge)",
      "function setFeeRecipient(address newValue)",
      "function setNameAndSymbol(string new_name, string new_symbol)",
      "function setNewNameAndSymbol()",
      "function setRatioThreshold(uint32 newValue)",
      "function sharesToBonds(uint256 amount) view returns (uint256)",
      "function symbol() view returns (string)",
      "function togglePause(bytes32 action)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function updateGlobalPoolContract(address globalPoolContract)",
      "function updateRatio(uint256 newRatio)",
      "function updateRatioAndClaim(uint256 newRatio)"
    ],
    "0xE95A203B1a91a908F9B9CE46459d101078c2c3cb": [
      "constructor(address _logic, address _admin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xebc83Bb472b2816Ec5B5de8D34F0eFc9088BB2ce": [
      "constructor(address _logic, address __admin, bytes _data) payable",
      "error CallWhenPaused()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Paused(address admin)",
      "event Unpaused(address admin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function pause()",
      "function paused() returns (bool)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xEc5d0801fCDaf14E6F72a0FD877581e5b7617c87": [
      "event AccountRebasingDisabled(address account)",
      "event AccountRebasingEnabled(address account)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event GovernorshipTransferred(address indexed previousGovernor, address indexed newGovernor)",
      "event PendingGovernorshipTransfer(address indexed previousGovernor, address indexed newGovernor)",
      "event TotalSupplyUpdatedHighres(uint256 totalSupply, uint256 rebasingCredits, uint256 rebasingCreditsPerToken)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function _totalSupply() view returns (uint256)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function approve(address _spender, uint256 _value) returns (bool)",
      "function balanceOf(address _account) view returns (uint256)",
      "function burn(address account, uint256 amount)",
      "function changeSupply(uint256 _newTotalSupply)",
      "function claimGovernance()",
      "function creditsBalanceOf(address _account) view returns (uint256, uint256)",
      "function creditsBalanceOfHighres(address _account) view returns (uint256, uint256, bool)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address _spender, uint256 _subtractedValue) returns (bool)",
      "function governanceRebaseOptIn(address _account)",
      "function governor() view returns (address)",
      "function increaseAllowance(address _spender, uint256 _addedValue) returns (bool)",
      "function initialize(string _nameArg, string _symbolArg, address _vaultAddress, uint256 _initialCreditsPerToken)",
      "function isGovernor() view returns (bool)",
      "function isUpgraded(address) view returns (uint256)",
      "function mint(address _account, uint256 _amount)",
      "function name() view returns (string)",
      "function nonRebasingCreditsPerToken(address) view returns (uint256)",
      "function nonRebasingSupply() view returns (uint256)",
      "function rebaseOptIn()",
      "function rebaseOptOut()",
      "function rebaseState(address) view returns (uint8)",
      "function rebasingCredits() view returns (uint256)",
      "function rebasingCreditsHighres() view returns (uint256)",
      "function rebasingCreditsPerToken() view returns (uint256)",
      "function rebasingCreditsPerTokenHighres() view returns (uint256)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address _to, uint256 _value) returns (bool)",
      "function transferFrom(address _from, address _to, uint256 _value) returns (bool)",
      "function transferGovernance(address _newGovernor)",
      "function vaultAddress() view returns (address)"
    ],
    "0xF1b958564edF538dDa1302D3D81eB58eE204B87F": [
      "constructor(address _admin, address _executor, address _destination, bytes4[] _executorCallableSelectors)",
      "error InvalidZeroAddress()",
      "error Unauthorized(address caller)",
      "event SetAdmin(address indexed admin)",
      "event SetDestination(address indexed destination)",
      "event SetExecutor(address indexed executor)",
      "event SetExecutorPermissions(bytes4 selector, bool status)",
      "event SetPendingAdmin(address indexed pendingAdmin)",
      "function acceptAdmin()",
      "function allowExecutor(bytes4 _functionSelector, bool _executorCanCall)",
      "function destination() view returns (address)",
      "function executor() view returns (address)",
      "function executorCanCall(bytes4) view returns (bool)",
      "function getAdmin() view returns (address)",
      "function getPendingAdmin() view returns (address)",
      "function proposeAdmin(address _newAdmin)",
      "function setExecutor(address _newExecutor)"
    ],
    "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38": [
      "constructor(address _owner, address vaultController, string _name, string _symbol)",
      "error AccessDenied()",
      "error ECDSAInvalidSignature()",
      "error ECDSAInvalidSignatureLength(uint256 length)",
      "error ECDSAInvalidSignatureS(bytes32 s)",
      "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
      "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
      "error ERC20InvalidApprover(address approver)",
      "error ERC20InvalidReceiver(address receiver)",
      "error ERC20InvalidSender(address sender)",
      "error ERC20InvalidSpender(address spender)",
      "error ERC2612ExpiredSignature(uint256 deadline)",
      "error ERC2612InvalidSigner(address signer, address owner)",
      "error InvalidAccountNonce(address account, uint256 currentNonce)",
      "error InvalidShortString()",
      "error OwnableInvalidOwner(address owner)",
      "error OwnableUnauthorizedAccount(address account)",
      "error StringTooLong(string str)",
      "error ZeroAddress()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event ControllerUpdated(address indexed controller, bool registered)",
      "event EIP712DomainChanged()",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function acceptOwnership()",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(address account, uint256 value)",
      "function controllers(address controller) view returns (bool enabled)",
      "function decimals() view returns (uint8)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function mint(address account, uint256 value)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceOwnership()",
      "function setController(address controller, bool enabled)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0xF3234220163a757edf1E11a8a085638D9B236614": [
      "constructor(address, address)",
      "event FrozenStatusReset(address indexed previouslySlashedAddress)",
      "event Initialized(uint8 version)",
      "event MiddlewareTimesAdded(address operator, uint256 index, uint32 stalestUpdateBlock, uint32 latestServeUntilBlock)",
      "event OperatorFrozen(address indexed slashedOperator, address indexed slashingContract)",
      "event OptedIntoSlashing(address indexed operator, address indexed contractAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event SlashingAbilityRevoked(address indexed operator, address indexed contractAddress, uint32 contractCanSlashOperatorUntilBlock)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function canSlash(address, address) view returns (bool)",
      "function canWithdraw(address, uint32, uint256) returns (bool)",
      "function contractCanSlashOperatorUntilBlock(address, address) view returns (uint32)",
      "function delegation() view returns (address)",
      "function freezeOperator(address)",
      "function getCorrectValueForInsertAfter(address, uint32) view returns (uint256)",
      "function getMiddlewareTimesIndexServeUntilBlock(address, uint32) view returns (uint32)",
      "function getMiddlewareTimesIndexStalestUpdateBlock(address, uint32) view returns (uint32)",
      "function initialize(address, address, uint256)",
      "function isFrozen(address) view returns (bool)",
      "function latestUpdateBlock(address, address) view returns (uint32)",
      "function middlewareTimesLength(address) view returns (uint256)",
      "function operatorToMiddlewareTimes(address, uint256) view returns (tuple(uint32 stalestUpdateBlock, uint32 latestServeUntilBlock))",
      "function operatorWhitelistedContractsLinkedListEntry(address, address) view returns (bool, uint256, uint256)",
      "function operatorWhitelistedContractsLinkedListSize(address) view returns (uint256)",
      "function optIntoSlashing(address)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function recordFirstStakeUpdate(address, uint32)",
      "function recordLastStakeUpdateAndRevokeSlashingAbility(address, uint32)",
      "function recordStakeUpdate(address, uint32, uint32, uint256)",
      "function renounceOwnership()",
      "function resetFrozenStatus(address[])",
      "function setPauserRegistry(address newPauserRegistry)",
      "function strategyManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function whitelistedContractDetails(address, address) view returns (tuple(uint32 registrationMayBeginAtBlock, uint32 contractCanSlashOperatorUntilBlock, uint32 latestUpdateBlock))"
    ],
    "0xF3c5E0A67f32CF1dc07a8817590efa102079a1aF": [
      "constructor(address lidoLocator, address lido, address legacyOracle, uint256 secondsPerSlot, uint256 genesisTime)",
      "error AddressCannotBeSame()",
      "error AddressCannotBeZero()",
      "error AdminCannotBeZero()",
      "error CannotSubmitExtraDataBeforeMainData()",
      "error ExtraDataAlreadyProcessed()",
      "error ExtraDataHashCannotBeZeroForNonEmptyData()",
      "error ExtraDataItemsCountCannotBeZeroForNonEmptyData()",
      "error ExtraDataListOnlySupportsSingleTx()",
      "error HashCannotBeZero()",
      "error IncorrectOracleMigration(uint256 code)",
      "error InitialRefSlotCannotBeLessThanProcessingOne(uint256 initialRefSlot, uint256 processingRefSlot)",
      "error InvalidContractVersionIncrement()",
      "error InvalidExitedValidatorsData()",
      "error InvalidExtraDataItem(uint256 itemIndex)",
      "error InvalidExtraDataSortOrder(uint256 itemIndex)",
      "error LegacyOracleCannotBeZero()",
      "error LidoCannotBeZero()",
      "error LidoLocatorCannotBeZero()",
      "error NoConsensusReportToProcess()",
      "error NonZeroContractVersionOnInit()",
      "error ProcessingDeadlineMissed(uint256 deadline)",
      "error RefSlotAlreadyProcessing()",
      "error RefSlotCannotDecrease(uint256 refSlot, uint256 prevRefSlot)",
      "error RefSlotMustBeGreaterThanProcessingOne(uint256 refSlot, uint256 processingRefSlot)",
      "error SecondsPerSlotCannotBeZero()",
      "error SenderIsNotTheConsensusContract()",
      "error SenderNotAllowed()",
      "error UnexpectedChainConfig()",
      "error UnexpectedConsensusVersion(uint256 expectedVersion, uint256 receivedVersion)",
      "error UnexpectedContractVersion(uint256 expected, uint256 received)",
      "error UnexpectedDataHash(bytes32 consensusHash, bytes32 receivedHash)",
      "error UnexpectedExtraDataFormat(uint256 expectedFormat, uint256 receivedFormat)",
      "error UnexpectedExtraDataHash(bytes32 consensusHash, bytes32 receivedHash)",
      "error UnexpectedExtraDataIndex(uint256 expectedIndex, uint256 receivedIndex)",
      "error UnexpectedExtraDataItemsCount(uint256 expectedCount, uint256 receivedCount)",
      "error UnexpectedRefSlot(uint256 consensusRefSlot, uint256 dataRefSlot)",
      "error UnsupportedExtraDataFormat(uint256 format)",
      "error UnsupportedExtraDataType(uint256 itemIndex, uint256 dataType)",
      "error VersionCannotBeSame()",
      "event ConsensusHashContractSet(address indexed addr, address indexed prevAddr)",
      "event ConsensusVersionSet(uint256 indexed version, uint256 indexed prevVersion)",
      "event ContractVersionSet(uint256 version)",
      "event ExtraDataSubmitted(uint256 indexed refSlot, uint256 itemsProcessed, uint256 itemsCount)",
      "event ProcessingStarted(uint256 indexed refSlot, bytes32 hash)",
      "event ReportDiscarded(uint256 indexed refSlot, bytes32 hash)",
      "event ReportSubmitted(uint256 indexed refSlot, bytes32 hash, uint256 processingDeadlineTime)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event WarnExtraDataIncompleteProcessing(uint256 indexed refSlot, uint256 processedItemsCount, uint256 itemsCount)",
      "event WarnProcessingMissed(uint256 indexed refSlot)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXTRA_DATA_FORMAT_EMPTY() view returns (uint256)",
      "function EXTRA_DATA_FORMAT_LIST() view returns (uint256)",
      "function EXTRA_DATA_TYPE_EXITED_VALIDATORS() view returns (uint256)",
      "function EXTRA_DATA_TYPE_STUCK_VALIDATORS() view returns (uint256)",
      "function GENESIS_TIME() view returns (uint256)",
      "function LEGACY_ORACLE() view returns (address)",
      "function LIDO() view returns (address)",
      "function LOCATOR() view returns (address)",
      "function MANAGE_CONSENSUS_CONTRACT_ROLE() view returns (bytes32)",
      "function MANAGE_CONSENSUS_VERSION_ROLE() view returns (bytes32)",
      "function SECONDS_PER_SLOT() view returns (uint256)",
      "function SUBMIT_DATA_ROLE() view returns (bytes32)",
      "function discardConsensusReport(uint256 refSlot)",
      "function getConsensusContract() view returns (address)",
      "function getConsensusReport() view returns (bytes32 hash, uint256 refSlot, uint256 processingDeadlineTime, bool processingStarted)",
      "function getConsensusVersion() view returns (uint256)",
      "function getContractVersion() view returns (uint256)",
      "function getLastProcessingRefSlot() view returns (uint256)",
      "function getProcessingState() view returns (tuple(uint256 currentFrameRefSlot, uint256 processingDeadlineTime, bytes32 mainDataHash, bool mainDataSubmitted, bytes32 extraDataHash, uint256 extraDataFormat, bool extraDataSubmitted, uint256 extraDataItemsCount, uint256 extraDataItemsSubmitted) result)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin, address consensusContract, uint256 consensusVersion)",
      "function initializeWithoutMigration(address admin, address consensusContract, uint256 consensusVersion, uint256 lastProcessingRefSlot)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setConsensusContract(address addr)",
      "function setConsensusVersion(uint256 version)",
      "function submitConsensusReport(bytes32 reportHash, uint256 refSlot, uint256 deadline)",
      "function submitReportData(tuple(uint256 consensusVersion, uint256 refSlot, uint256 numValidators, uint256 clBalanceGwei, uint256[] stakingModuleIdsWithNewlyExitedValidators, uint256[] numExitedValidatorsByStakingModule, uint256 withdrawalVaultBalance, uint256 elRewardsVaultBalance, uint256 sharesRequestedToBurn, uint256[] withdrawalFinalizationBatches, uint256 simulatedShareRate, bool isBunkerMode, uint256 extraDataFormat, bytes32 extraDataHash, uint256 extraDataItemsCount) data, uint256 contractVersion)",
      "function submitReportExtraDataEmpty()",
      "function submitReportExtraDataList(bytes items)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0xF5fD25A90902c27068CF5eBe53Be8da693Ac899e": [
      "constructor(address __avsDirectory, address __registryCoordinator, address __stakeRegistry)",
      "event BatchConfirmed(bytes32 indexed batchHeaderHash, uint32 batchId)",
      "event BatchConfirmerStatusChanged(address batchConfirmer, bool status)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event StaleStakesForbiddenUpdate(bool value)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function BLOCK_STALE_MEASURE() view returns (uint32)",
      "function STORE_DURATION_BLOCKS() view returns (uint32)",
      "function THRESHOLD_DENOMINATOR() view returns (uint256)",
      "function avsDirectory() view returns (address)",
      "function batchId() view returns (uint32)",
      "function batchIdToBatchMetadataHash(uint32) view returns (bytes32)",
      "function blsApkRegistry() view returns (address)",
      "function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, tuple(uint32[] nonSignerQuorumBitmapIndices, tuple(uint256 X, uint256 Y)[] nonSignerPubkeys, tuple(uint256 X, uint256 Y)[] quorumApks, tuple(uint256[2] X, uint256[2] Y) apkG2, tuple(uint256 X, uint256 Y) sigma, uint32[] quorumApkIndices, uint32[] totalStakeIndices, uint32[][] nonSignerStakeIndices) params) view returns (tuple(uint96[] signedStakeForQuorum, uint96[] totalStakeForQuorum), bytes32)",
      "function confirmBatch(tuple(bytes32 blobHeadersRoot, bytes quorumNumbers, bytes signedStakeForQuorums, uint32 referenceBlockNumber) batchHeader, tuple(uint32[] nonSignerQuorumBitmapIndices, tuple(uint256 X, uint256 Y)[] nonSignerPubkeys, tuple(uint256 X, uint256 Y)[] quorumApks, tuple(uint256[2] X, uint256[2] Y) apkG2, tuple(uint256 X, uint256 Y) sigma, uint32[] quorumApkIndices, uint32[] totalStakeIndices, uint32[][] nonSignerStakeIndices) nonSignerStakesAndSignature)",
      "function delegation() view returns (address)",
      "function deregisterOperatorFromAVS(address operator)",
      "function getOperatorRestakedStrategies(address operator) view returns (address[])",
      "function getRestakeableStrategies() view returns (address[])",
      "function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner, address[] _batchConfirmers)",
      "function isBatchConfirmer(address) view returns (bool)",
      "function latestServeUntilBlock(uint32 referenceBlockNumber) view returns (uint32)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function quorumAdversaryThresholdPercentages() view returns (bytes)",
      "function quorumConfirmationThresholdPercentages() view returns (bytes)",
      "function quorumNumbersRequired() view returns (bytes)",
      "function registerOperatorToAVS(address operator, tuple(bytes signature, bytes32 salt, uint256 expiry) operatorSignature)",
      "function registryCoordinator() view returns (address)",
      "function renounceOwnership()",
      "function setBatchConfirmer(address _batchConfirmer)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setStaleStakesForbidden(bool value)",
      "function stakeRegistry() view returns (address)",
      "function staleStakesForbidden() view returns (bool)",
      "function taskNumber() view returns (uint32)",
      "function transferOwnership(address newOwner)",
      "function trySignatureAndApkVerification(bytes32 msgHash, tuple(uint256 X, uint256 Y) apk, tuple(uint256[2] X, uint256[2] Y) apkG2, tuple(uint256 X, uint256 Y) sigma) view returns (bool pairingSuccessful, bool siganatureIsValid)",
      "function unpause(uint256 newPausedStatus)",
      "function updateAVSMetadataURI(string _metadataURI)"
    ],
    "0xf951E335afb289353dc249e82926178EaC7DEd78": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xfe928A7D8Be9c8cEce7e97F0Ed5704f4fA2cb42A": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AuthorizationCanceled(address indexed authorizer, bytes32 indexed nonce)",
      "event AuthorizationUsed(address indexed authorizer, bytes32 indexed nonce)",
      "event Blacklisted(address indexed _account)",
      "event BlacklisterChanged(address indexed newBlacklister)",
      "event Burn(address indexed burner, uint256 amount)",
      "event DepositEth(address indexed user, uint256 ethAmount, uint256 wBETHAmount, address indexed referral)",
      "event EthReceiverUpdated(address indexed previousReceiver, address indexed newReceiver)",
      "event ExchangeRateUpdated(address indexed oracle, uint256 newExchangeRate)",
      "event MasterMinterChanged(address indexed newMasterMinter)",
      "event Mint(address indexed minter, address indexed to, uint256 amount)",
      "event MinterConfigured(address indexed minter, uint256 minterAllowedAmount)",
      "event MinterRemoved(address indexed oldMinter)",
      "event MovedToStakingAddress(address indexed ethReceiver, uint256 ethAmount)",
      "event MovedToUnwrapAddress(address indexed unwrapAddress, uint256 ethAmount)",
      "event OperatorUpdated(address indexed previousOperator, address indexed newOperator)",
      "event OracleUpdated(address indexed newOracle)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RequestWithdrawEth(address indexed user, uint256 wbethAmount, uint256 ethAmount)",
      "event RescuerChanged(address indexed newRescuer)",
      "event SuppliedEth(address indexed supplier, uint256 ethAmount)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UnBlacklisted(address indexed _account)",
      "event Unpause()",
      "function CANCEL_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function RECEIVE_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function TRANSFER_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function _EXCHANGE_RATE_UNIT() view returns (uint256)",
      "function _UNWRAP_ETH_ADDRESS() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function authorizationState(address authorizer, bytes32 nonce) view returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function blacklist(address _account)",
      "function blacklister() view returns (address)",
      "function burn(uint256 _amount)",
      "function cancelAuthorization(address authorizer, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function configureMinter(address minter, uint256 minterAllowedAmount) returns (bool)",
      "function currency() view returns (string)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 decrement) returns (bool)",
      "function deposit(address referral) payable",
      "function ethReceiver() view returns (address _ethReceiver)",
      "function exchangeRate() view returns (uint256 _exchangeRate)",
      "function increaseAllowance(address spender, uint256 increment) returns (bool)",
      "function initialize(string tokenName, string tokenSymbol, string tokenCurrency, uint8 tokenDecimals, address newMasterMinter, address newPauser, address newBlacklister, address newOwner)",
      "function initializeV2(string newName)",
      "function initializeV2_1(address lostAndFound)",
      "function isBlacklisted(address _account) view returns (bool)",
      "function isMinter(address account) view returns (bool)",
      "function masterMinter() view returns (address)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function mint(uint256 amount) returns (bool)",
      "function minterAllowance(address minter) view returns (uint256)",
      "function moveToStakingAddress(uint256 amount)",
      "function moveToUnwrapAddress(uint256 amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function operator() view returns (address _operator)",
      "function oracle() view returns (address _oracle)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function receiveWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function removeMinter(address minter) returns (bool)",
      "function requestWithdrawEth(uint256 wbethAmount)",
      "function rescueERC20(address tokenContract, address to, uint256 amount)",
      "function rescuer() view returns (address)",
      "function supplyEth() payable",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function transferWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function unBlacklist(address _account)",
      "function unpause()",
      "function updateBlacklister(address _newBlacklister)",
      "function updateEthReceiver(address newEthReceiver)",
      "function updateExchangeRate(uint256 newExchangeRate)",
      "function updateMasterMinter(address _newMasterMinter)",
      "function updateOperator(address newOperator)",
      "function updateOracle(address newOracle)",
      "function updatePauser(address _newPauser)",
      "function updateRescuer(address newRescuer)",
      "function version() view returns (string)"
    ],
    "0xFEA47018D632A77bA579846c840d5706705Dc598": [
      "constructor(address _singleton)"
    ]
  }
}
