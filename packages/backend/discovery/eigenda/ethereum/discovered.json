{
  "name": "eigenda",
  "chain": "ethereum",
  "blockNumber": 19760326,
  "configHash": "0x1ab4fea054377b32d87b57df6493effe7cecd779142a31e6869b915ae8d561ea",
  "version": 3,
  "contracts": [
    {
      "name": "StakeRegistry",
      "address": "0x006124Ae7976137266feeBFb3F4D2BE4C073139D",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1C468cf7089D263c2f53e2579b329B16aBc4dd96",
        "admin": "0x8247EF5705d3345516286B72bFE6D690197C2E99"
      },
      "implementations": ["0x1C468cf7089D263c2f53e2579b329B16aBc4dd96"],
      "sinceTimestamp": 1712353799,
      "values": {
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "MAX_WEIGHING_FUNCTION_LENGTH": 32,
        "registryCoordinator": "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656",
        "WEIGHTING_DIVISOR": "1000000000000000000"
      }
    },
    {
      "name": "BLSApkRegistry",
      "address": "0x00A5Fd09F6CeE6AE9C8b0E5e33287F7c82880505",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x5d0B9cE2e277Daf508528E9f6Bf6314E79e4eD2b",
        "admin": "0x8247EF5705d3345516286B72bFE6D690197C2E99"
      },
      "implementations": ["0x5d0B9cE2e277Daf508528E9f6Bf6314E79e4eD2b"],
      "sinceTimestamp": 1712353799,
      "values": {
        "registryCoordinator": "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656"
      }
    },
    {
      "name": "RegistryCoordinator",
      "address": "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xd3e09a0c2A9A6FDf5E92aE65D3CC090A4dF8EECF",
        "admin": "0x8247EF5705d3345516286B72bFE6D690197C2E99"
      },
      "implementations": ["0xd3e09a0c2A9A6FDf5E92aE65D3CC090A4dF8EECF"],
      "sinceTimestamp": 1712353787,
      "values": {
        "blsApkRegistry": "0x00A5Fd09F6CeE6AE9C8b0E5e33287F7c82880505",
        "churnApprover": "0xe0550117Cb066D3b330eBd764B0d75D3BA378734",
        "ejector": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "indexRegistry": "0xBd35a7a1CDeF403a6a99e4E8BA0974D198455030",
        "numRegistries": 3,
        "OPERATOR_CHURN_APPROVAL_TYPEHASH": "0x4d404e3276e7ac2163d8ee476afa6a41d1f68fb71f2d8b6546b24e55ce01b72a",
        "operatorSetParams": [200, 11000, 50],
        "owner": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "PUBKEY_REGISTRATION_TYPEHASH": "0x2bd82124057f0913bc3b772ce7b83e8057c1ad1f3510fc83778be20f10ec5de6",
        "quorumCount": 1,
        "registries": [
          "0x006124Ae7976137266feeBFb3F4D2BE4C073139D",
          "0x00A5Fd09F6CeE6AE9C8b0E5e33287F7c82880505",
          "0xBd35a7a1CDeF403a6a99e4E8BA0974D198455030"
        ],
        "serviceManager": "0x870679E138bCdf293b7Ff14dD44b70FC97e12fc0",
        "stakeRegistry": "0x006124Ae7976137266feeBFb3F4D2BE4C073139D"
      },
      "derivedName": "RegistryCoordinator"
    },
    {
      "name": "PauserRegistry",
      "address": "0x0c431C66F4dE941d089625E5B423D00707977060",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686348935,
      "values": {
        "unpauser": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "AVSDirectory",
      "address": "0x135DDa560e946695d6f155dACaFC6f1F25C1F5AF",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdAbdB3Cd346B7D5F5779b0B614EdE1CC9DcBA5b7",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdAbdB3Cd346B7D5F5779b0B614EdE1CC9DcBA5b7"],
      "sinceTimestamp": 1711141931,
      "values": {
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "domainSeparator": "0x8ceb9367dd5eb661ead5bb90d8bfd836c1293d5fd67da541d446e1954349df40",
        "OPERATOR_AVS_REGISTRATION_TYPEHASH": "0xda2c89bafdd34776a2b8bb9c83c82f419e20cc8c67207f70edd58249b92661bd",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060"
      }
    },
    {
      "name": "EigenLayerBeaconOracle",
      "address": "0x343907185b71aDF0eBa9567538314396aa985442",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1710374507,
      "values": {
        "GENESIS_BLOCK_TIMESTAMP": 1606824023
      },
      "derivedName": "EigenLayerBeaconOracle"
    },
    {
      "name": "EigenLayerExecutorMultisig",
      "address": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "1 of 2 (50%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686681203,
      "values": {
        "domainSeparator": "0xbc80366740d76b8af95de2e845557588b8a3dc40db68b5b15b8f1cb36a4c7e45",
        "getChainId": 1,
        "getOwners": [
          "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF",
          "0xFEA47018D632A77bA579846c840d5706705Dc598"
        ],
        "getThreshold": 1,
        "nonce": 6,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "DelegationManager",
      "address": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1784BE6401339Fc0Fedf7E9379409f5c1BfE9dda",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0x1784BE6401339Fc0Fedf7E9379409f5c1BfE9dda"],
      "sinceTimestamp": 1686348935,
      "values": {
        "beaconChainETHStrategy": "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
        "DELEGATION_APPROVAL_TYPEHASH": "0x14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "domainSeparator": "0x9bba7f98dd592dbd3fdbeef9fdebb4e19f8661950cb5dcc435fcad7824975fe1",
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS": 1296000,
        "MAX_WITHDRAWAL_DELAY_BLOCKS": 216000,
        "minWithdrawalDelayBlocks": 50400,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "STAKER_DELEGATION_TYPEHASH": "0x39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      }
    },
    {
      "name": "UpgradeableBeacon",
      "address": "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686348959,
      "values": {
        "implementation": "0x8bA40dA60f0827d027F029aCEE62609F0527a255",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "DelayedWithdrawalRouter",
      "address": "0x7Fe7E9CC0F274d2435AD5d56D5fa73E47F6A23D8",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x4bB6731B02314d40aBbfFBC4540f508874014226",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0x4bB6731B02314d40aBbfFBC4540f508874014226"],
      "sinceTimestamp": 1686348959,
      "values": {
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "MAX_WITHDRAWAL_DELAY_BLOCKS": 216000,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "withdrawalDelayBlocks": 50400
      }
    },
    {
      "name": "eigenDAProxyAdmin",
      "address": "0x8247EF5705d3345516286B72bFE6D690197C2E99",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1712353787,
      "values": {
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "name": "StrategyManager",
      "address": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x70f44C13944d49a236E3cD7a94f48f5daB6C619b",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0x70f44C13944d49a236E3cD7a94f48f5daB6C619b"],
      "sinceTimestamp": 1686348947,
      "values": {
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "DEPOSIT_TYPEHASH": "0x4337f82d142e41f2a8c10547cd8c859bddb92262a61058e77842e24d9dea9224",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "domainSeparator": "0xdaba058ab21f198a04ec80cf0d39f943660a92a99bda5de5016f923f7e4962ef",
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "strategyWhitelister": "0xBE1685C81aA44FF9FB319dD389addd9374383e90"
      }
    },
    {
      "name": "eigenDAServiceManager",
      "address": "0x870679E138bCdf293b7Ff14dD44b70FC97e12fc0",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xF5fD25A90902c27068CF5eBe53Be8da693Ac899e",
        "admin": "0x8247EF5705d3345516286B72bFE6D690197C2E99"
      },
      "implementations": ["0xF5fD25A90902c27068CF5eBe53Be8da693Ac899e"],
      "sinceTimestamp": 1712353787,
      "values": {
        "avsDirectory": "0x135DDa560e946695d6f155dACaFC6f1F25C1F5AF",
        "batchId": 2807,
        "BLOCK_STALE_MEASURE": 150,
        "blsApkRegistry": "0x00A5Fd09F6CeE6AE9C8b0E5e33287F7c82880505",
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "getRestakeableStrategies": [
          "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
          "0x93c4b944D05dfe6df7645A86cd2206016c51564D",
          "0x1BeE69b7dFFfA4E2d53C2a2Df135C388AD25dCD2",
          "0x54945180dB7943c0ed0FEE7EdaB2Bd24620256bc",
          "0x9d7eD45EE2E8FC5482fa2428f15C971e6369011d",
          "0x13760F50a9d7377e4F20CB8CF9e4c26586c658ff",
          "0xa4C637e0F704745D182e4D38cAb7E7485321d059",
          "0x57ba429517c3473B6d34CA9aCd56c0e735b94c02",
          "0x0Fe4F44beE93503346A3Ac9EE5A26b130a5796d6",
          "0x7CA911E83dabf90C90dD3De5411a10F1A6112184",
          "0x8CA7A5d6f3acd3A7A8bC468a8CD0FB14B6BD28b6",
          "0xAe60d8180437b5C34bB956822ac2710972584473",
          "0x298aFB19A105D59E74658C4C334Ff360BadE6dd2"
        ],
        "owner": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "quorumAdversaryThresholdPercentages": "0x21",
        "quorumConfirmationThresholdPercentages": "0x37",
        "quorumNumbersRequired": "0x00",
        "registryCoordinator": "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656",
        "stakeRegistry": "0x006124Ae7976137266feeBFb3F4D2BE4C073139D",
        "staleStakesForbidden": false,
        "STORE_DURATION_BLOCKS": 100800,
        "taskNumber": 2807,
        "THRESHOLD_DENOMINATOR": 100
      },
      "derivedName": "EigenDAServiceManager"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686348935,
      "values": {
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "EigenPod",
      "address": "0x8bA40dA60f0827d027F029aCEE62609F0527a255",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1711141931,
      "values": {
        "delayedWithdrawalRouter": "0x7Fe7E9CC0F274d2435AD5d56D5fa73E47F6A23D8",
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "ethPOS": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "GENESIS_TIME": 1606824023,
        "hasRestaked": false,
        "MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR": 32000000000,
        "mostRecentWithdrawalTimestamp": 0,
        "nonBeaconChainETHBalanceWei": 0,
        "podOwner": "0x0000000000000000000000000000000000000000",
        "sumOfPartialWithdrawalsClaimedGwei": 0,
        "withdrawableRestakedExecutionLayerGwei": 0
      }
    },
    {
      "name": "EigenPodManager",
      "address": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xe4297e3DaDBc7D99e26a2954820f514CB50C5762",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xe4297e3DaDBc7D99e26a2954820f514CB50C5762"],
      "sinceTimestamp": 1686348947,
      "values": {
        "beaconChainETHStrategy": "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
        "beaconChainOracle": "0x343907185b71aDF0eBa9567538314396aa985442",
        "delegationManager": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "denebForkTimestamp": 1710338135,
        "eigenPodBeacon": "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073",
        "ethPOS": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "numPods": 30673,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      },
      "derivedName": "EigenPodManager"
    },
    {
      "name": "Timelock",
      "address": "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686370679,
      "values": {
        "admin": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "delay": 864000,
        "GRACE_PERIOD": 1209600,
        "MAXIMUM_DELAY": 2592000,
        "MINIMUM_DELAY": 172800,
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "IndexRegistry",
      "address": "0xBd35a7a1CDeF403a6a99e4E8BA0974D198455030",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1ae0b73118906f39D5ED30Ae4A484ce2F479a14c",
        "admin": "0x8247EF5705d3345516286B72bFE6D690197C2E99"
      },
      "implementations": ["0x1ae0b73118906f39D5ED30Ae4A484ce2F479a14c"],
      "sinceTimestamp": 1712353799,
      "values": {
        "OPERATOR_DOES_NOT_EXIST_ID": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "registryCoordinator": "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656"
      }
    },
    {
      "name": "EigenLayerOperationsMultisig",
      "address": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "3 of 6 (50%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686327791,
      "values": {
        "domainSeparator": "0x34c8be0f1205a420b291c5ce97375b669d2d120e32d7aa5ea9f2497a0fbcc3e2",
        "getChainId": 1,
        "getOwners": [
          "0xa2425B00F9A9457AEdd51d4C36d9917eA1Aa7a02",
          "0xb7Ae34BB33da55f12797e793E01e63a17B11d108",
          "0x27ff193A6A1574A611E21c39FDA636fA1d61ba30",
          "0x422e2F724faFE75F3635458aD7D3Ac803DCD7ff1",
          "0xeD7Ef087d1C01ecCA9a9688a44aaeDDEf4ea560E",
          "0xe7fFd467F7526abf9c8796EDeE0AD30110419127"
        ],
        "getThreshold": 3,
        "nonce": 28,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "Slasher",
      "address": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xF3234220163a757edf1E11a8a085638D9B236614",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xF3234220163a757edf1E11a8a085638D9B236614"],
      "sinceTimestamp": 1686348947,
      "values": {
        "delegation": "0x0000000000000000000000000000000000000000",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "EigenLayerCommunityMultisig",
      "address": "0xFEA47018D632A77bA579846c840d5706705Dc598",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "9 of 13 (69%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686680867,
      "values": {
        "domainSeparator": "0x80ea1f4244338ed9d96d172e60fd4459f4a8237651f29e743de9096eefa5c0fa",
        "getChainId": 1,
        "getOwners": [
          "0x17919FAC7024d5b770322E5Cb81607D247654116",
          "0x34C37613e1680efD9e203C979658e1d058b4B2BC",
          "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
          "0x80cb2DA66A3ccb6064f16B15B6ae11d8E089C6D7",
          "0x313011Ee87b12700E29B0D1136Ae3d64665F3939",
          "0x97b4A6E0471A7c5906fF1Cc2a5970ed569B04815",
          "0x65C4799061c0D1e3E87ADdB65b02E92a558F842F",
          "0xe37756BEdDC89e94A8d557fd5b95a4D2a57e9D60",
          "0x8ffCF07A59631f0578f3E84B51C48cF0dEADCd95",
          "0xAF4D94Cd299211de542530399290877E2c85F061",
          "0xe8F09A9D42aEA0a3B393aD06F25CF512eA51707e",
          "0x6A662c5DdCe0b76BD081b8A4ec3A4F8a671b0b1f",
          "0x33E816008E7bc7798A73d0eaa640CC24f34d1626"
        ],
        "getThreshold": 9,
        "nonce": 3,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    }
  ],
  "eoas": [
    "0x17919FAC7024d5b770322E5Cb81607D247654116",
    "0x27ff193A6A1574A611E21c39FDA636fA1d61ba30",
    "0x313011Ee87b12700E29B0D1136Ae3d64665F3939",
    "0x33E816008E7bc7798A73d0eaa640CC24f34d1626",
    "0x34C37613e1680efD9e203C979658e1d058b4B2BC",
    "0x422e2F724faFE75F3635458aD7D3Ac803DCD7ff1",
    "0x65C4799061c0D1e3E87ADdB65b02E92a558F842F",
    "0x6A662c5DdCe0b76BD081b8A4ec3A4F8a671b0b1f",
    "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
    "0x80cb2DA66A3ccb6064f16B15B6ae11d8E089C6D7",
    "0x8ffCF07A59631f0578f3E84B51C48cF0dEADCd95",
    "0x97b4A6E0471A7c5906fF1Cc2a5970ed569B04815",
    "0xa2425B00F9A9457AEdd51d4C36d9917eA1Aa7a02",
    "0xAF4D94Cd299211de542530399290877E2c85F061",
    "0xb7Ae34BB33da55f12797e793E01e63a17B11d108",
    "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
    "0xe0550117Cb066D3b330eBd764B0d75D3BA378734",
    "0xe37756BEdDC89e94A8d557fd5b95a4D2a57e9D60",
    "0xe7fFd467F7526abf9c8796EDeE0AD30110419127",
    "0xe8F09A9D42aEA0a3B393aD06F25CF512eA51707e",
    "0xeD7Ef087d1C01ecCA9a9688a44aaeDDEf4ea560E"
  ],
  "abis": {
    "0x006124Ae7976137266feeBFb3F4D2BE4C073139D": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x00A5Fd09F6CeE6AE9C8b0E5e33287F7c82880505": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x0BAAc79acD45A023E19345c352d8a7a83C4e5656": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x0c431C66F4dE941d089625E5B423D00707977060": [
      "constructor(address[] _pausers, address _unpauser)",
      "event PauserStatusChanged(address pauser, bool canPause)",
      "event UnpauserChanged(address previousUnpauser, address newUnpauser)",
      "function isPauser(address) view returns (bool)",
      "function setIsPauser(address newPauser, bool canPause)",
      "function setUnpauser(address newUnpauser)",
      "function unpauser() view returns (address)"
    ],
    "0x135DDa560e946695d6f155dACaFC6f1F25C1F5AF": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x1784BE6401339Fc0Fedf7E9379409f5c1BfE9dda": [
      "constructor(address _strategyManager, address _slasher, address _eigenPodManager)",
      "event Initialized(uint8 version)",
      "event MinWithdrawalDelayBlocksSet(uint256 previousValue, uint256 newValue)",
      "event OperatorDetailsModified(address indexed operator, tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) newOperatorDetails)",
      "event OperatorMetadataURIUpdated(address indexed operator, string metadataURI)",
      "event OperatorRegistered(address indexed operator, tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) operatorDetails)",
      "event OperatorSharesDecreased(address indexed operator, address staker, address strategy, uint256 shares)",
      "event OperatorSharesIncreased(address indexed operator, address staker, address strategy, uint256 shares)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event StakerDelegated(address indexed staker, address indexed operator)",
      "event StakerForceUndelegated(address indexed staker, address indexed operator)",
      "event StakerUndelegated(address indexed staker, address indexed operator)",
      "event StrategyWithdrawalDelayBlocksSet(address strategy, uint256 previousValue, uint256 newValue)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "event WithdrawalCompleted(bytes32 withdrawalRoot)",
      "event WithdrawalMigrated(bytes32 oldWithdrawalRoot, bytes32 newWithdrawalRoot)",
      "event WithdrawalQueued(bytes32 withdrawalRoot, tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares) withdrawal)",
      "function DELEGATION_APPROVAL_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function MAX_STAKER_OPT_OUT_WINDOW_BLOCKS() view returns (uint256)",
      "function MAX_WITHDRAWAL_DELAY_BLOCKS() view returns (uint256)",
      "function STAKER_DELEGATION_TYPEHASH() view returns (bytes32)",
      "function beaconChainETHStrategy() view returns (address)",
      "function calculateCurrentStakerDelegationDigestHash(address staker, address operator, uint256 expiry) view returns (bytes32)",
      "function calculateDelegationApprovalDigestHash(address staker, address operator, address _delegationApprover, bytes32 approverSalt, uint256 expiry) view returns (bytes32)",
      "function calculateStakerDelegationDigestHash(address staker, uint256 _stakerNonce, address operator, uint256 expiry) view returns (bytes32)",
      "function calculateWithdrawalRoot(tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares) withdrawal) pure returns (bytes32)",
      "function completeQueuedWithdrawal(tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares) withdrawal, address[] tokens, uint256 middlewareTimesIndex, bool receiveAsTokens)",
      "function completeQueuedWithdrawals(tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares)[] withdrawals, address[][] tokens, uint256[] middlewareTimesIndexes, bool[] receiveAsTokens)",
      "function cumulativeWithdrawalsQueued(address) view returns (uint256)",
      "function decreaseDelegatedShares(address staker, address strategy, uint256 shares)",
      "function delegateTo(address operator, tuple(bytes signature, uint256 expiry) approverSignatureAndExpiry, bytes32 approverSalt)",
      "function delegateToBySignature(address staker, address operator, tuple(bytes signature, uint256 expiry) stakerSignatureAndExpiry, tuple(bytes signature, uint256 expiry) approverSignatureAndExpiry, bytes32 approverSalt)",
      "function delegatedTo(address) view returns (address)",
      "function delegationApprover(address operator) view returns (address)",
      "function delegationApproverSaltIsSpent(address, bytes32) view returns (bool)",
      "function domainSeparator() view returns (bytes32)",
      "function earningsReceiver(address operator) view returns (address)",
      "function eigenPodManager() view returns (address)",
      "function getDelegatableShares(address staker) view returns (address[], uint256[])",
      "function getOperatorShares(address operator, address[] strategies) view returns (uint256[])",
      "function getWithdrawalDelay(address[] strategies) view returns (uint256)",
      "function increaseDelegatedShares(address staker, address strategy, uint256 shares)",
      "function initialize(address initialOwner, address _pauserRegistry, uint256 initialPausedStatus, uint256 _minWithdrawalDelayBlocks, address[] _strategies, uint256[] _withdrawalDelayBlocks)",
      "function isDelegated(address staker) view returns (bool)",
      "function isOperator(address operator) view returns (bool)",
      "function migrateQueuedWithdrawals(tuple(address[] strategies, uint256[] shares, address staker, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress)[] withdrawalsToMigrate)",
      "function minWithdrawalDelayBlocks() view returns (uint256)",
      "function modifyOperatorDetails(tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) newOperatorDetails)",
      "function operatorDetails(address operator) view returns (tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks))",
      "function operatorShares(address, address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function pendingWithdrawals(bytes32) view returns (bool)",
      "function queueWithdrawals(tuple(address[] strategies, uint256[] shares, address withdrawer)[] queuedWithdrawalParams) returns (bytes32[])",
      "function registerAsOperator(tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) registeringOperatorDetails, string metadataURI)",
      "function renounceOwnership()",
      "function setMinWithdrawalDelayBlocks(uint256 newMinWithdrawalDelayBlocks)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setStrategyWithdrawalDelayBlocks(address[] strategies, uint256[] withdrawalDelayBlocks)",
      "function slasher() view returns (address)",
      "function stakerNonce(address) view returns (uint256)",
      "function stakerOptOutWindowBlocks(address operator) view returns (uint256)",
      "function strategyManager() view returns (address)",
      "function strategyWithdrawalDelayBlocks(address) view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function undelegate(address staker) returns (bytes32[] withdrawalRoots)",
      "function unpause(uint256 newPausedStatus)",
      "function updateOperatorMetadataURI(string metadataURI)"
    ],
    "0x1ae0b73118906f39D5ED30Ae4A484ce2F479a14c": [
      "constructor(address _registryCoordinator)",
      "event Initialized(uint8 version)",
      "event QuorumIndexUpdate(bytes32 indexed operatorId, uint8 quorumNumber, uint32 newOperatorIndex)",
      "function OPERATOR_DOES_NOT_EXIST_ID() view returns (bytes32)",
      "function currentOperatorIndex(uint8, bytes32) view returns (uint32)",
      "function deregisterOperator(bytes32 operatorId, bytes quorumNumbers)",
      "function getLatestOperatorUpdate(uint8 quorumNumber, uint32 operatorIndex) view returns (tuple(uint32 fromBlockNumber, bytes32 operatorId))",
      "function getLatestQuorumUpdate(uint8 quorumNumber) view returns (tuple(uint32 fromBlockNumber, uint32 numOperators))",
      "function getOperatorListAtBlockNumber(uint8 quorumNumber, uint32 blockNumber) view returns (bytes32[])",
      "function getOperatorUpdateAtIndex(uint8 quorumNumber, uint32 operatorIndex, uint32 arrayIndex) view returns (tuple(uint32 fromBlockNumber, bytes32 operatorId))",
      "function getQuorumUpdateAtIndex(uint8 quorumNumber, uint32 quorumIndex) view returns (tuple(uint32 fromBlockNumber, uint32 numOperators))",
      "function initializeQuorum(uint8 quorumNumber)",
      "function registerOperator(bytes32 operatorId, bytes quorumNumbers) returns (uint32[])",
      "function registryCoordinator() view returns (address)",
      "function totalOperatorsForQuorum(uint8 quorumNumber) view returns (uint32)"
    ],
    "0x1C468cf7089D263c2f53e2579b329B16aBc4dd96": [
      "constructor(address _registryCoordinator, address _delegationManager)",
      "event MinimumStakeForQuorumUpdated(uint8 indexed quorumNumber, uint96 minimumStake)",
      "event OperatorStakeUpdate(bytes32 indexed operatorId, uint8 quorumNumber, uint96 stake)",
      "event QuorumCreated(uint8 indexed quorumNumber)",
      "event StrategyAddedToQuorum(uint8 indexed quorumNumber, address strategy)",
      "event StrategyMultiplierUpdated(uint8 indexed quorumNumber, address strategy, uint256 multiplier)",
      "event StrategyRemovedFromQuorum(uint8 indexed quorumNumber, address strategy)",
      "function MAX_WEIGHING_FUNCTION_LENGTH() view returns (uint8)",
      "function WEIGHTING_DIVISOR() view returns (uint256)",
      "function addStrategies(uint8 quorumNumber, tuple(address strategy, uint96 multiplier)[] _strategyParams)",
      "function delegation() view returns (address)",
      "function deregisterOperator(bytes32 operatorId, bytes quorumNumbers)",
      "function getCurrentStake(bytes32 operatorId, uint8 quorumNumber) view returns (uint96)",
      "function getCurrentTotalStake(uint8 quorumNumber) view returns (uint96)",
      "function getLatestStakeUpdate(bytes32 operatorId, uint8 quorumNumber) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 stake))",
      "function getStakeAtBlockNumber(bytes32 operatorId, uint8 quorumNumber, uint32 blockNumber) view returns (uint96)",
      "function getStakeAtBlockNumberAndIndex(uint8 quorumNumber, uint32 blockNumber, bytes32 operatorId, uint256 index) view returns (uint96)",
      "function getStakeHistory(bytes32 operatorId, uint8 quorumNumber) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 stake)[])",
      "function getStakeHistoryLength(bytes32 operatorId, uint8 quorumNumber) view returns (uint256)",
      "function getStakeUpdateAtIndex(uint8 quorumNumber, bytes32 operatorId, uint256 index) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 stake))",
      "function getStakeUpdateIndexAtBlockNumber(bytes32 operatorId, uint8 quorumNumber, uint32 blockNumber) view returns (uint32)",
      "function getTotalStakeAtBlockNumberFromIndex(uint8 quorumNumber, uint32 blockNumber, uint256 index) view returns (uint96)",
      "function getTotalStakeHistoryLength(uint8 quorumNumber) view returns (uint256)",
      "function getTotalStakeIndicesAtBlockNumber(uint32 blockNumber, bytes quorumNumbers) view returns (uint32[])",
      "function getTotalStakeUpdateAtIndex(uint8 quorumNumber, uint256 index) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 stake))",
      "function initializeQuorum(uint8 quorumNumber, uint96 minimumStake, tuple(address strategy, uint96 multiplier)[] _strategyParams)",
      "function minimumStakeForQuorum(uint8) view returns (uint96)",
      "function modifyStrategyParams(uint8 quorumNumber, uint256[] strategyIndices, uint96[] newMultipliers)",
      "function registerOperator(address operator, bytes32 operatorId, bytes quorumNumbers) returns (uint96[], uint96[])",
      "function registryCoordinator() view returns (address)",
      "function removeStrategies(uint8 quorumNumber, uint256[] indicesToRemove)",
      "function setMinimumStakeForQuorum(uint8 quorumNumber, uint96 minimumStake)",
      "function strategiesPerQuorum(uint8, uint256) view returns (address)",
      "function strategyParams(uint8, uint256) view returns (address strategy, uint96 multiplier)",
      "function strategyParamsByIndex(uint8 quorumNumber, uint256 index) view returns (tuple(address strategy, uint96 multiplier))",
      "function strategyParamsLength(uint8 quorumNumber) view returns (uint256)",
      "function updateOperatorStake(address operator, bytes32 operatorId, bytes quorumNumbers) returns (uint192)",
      "function weightOfOperatorForQuorum(uint8 quorumNumber, address operator) view returns (uint96)"
    ],
    "0x343907185b71aDF0eBa9567538314396aa985442": [
      "constructor(uint256 _genesisBlockTimestamp)",
      "error InvalidBlockTimestamp()",
      "error NoBlockRootFound()",
      "error TimestampOutOfRange()",
      "event EigenLayerBeaconOracleUpdate(uint256 slot, uint256 timestamp, bytes32 blockRoot)",
      "function GENESIS_BLOCK_TIMESTAMP() view returns (uint256)",
      "function addTimestamp(uint256 _targetTimestamp)",
      "function findBlockRoot(uint64 _slot) view returns (bytes32 blockRoot)",
      "function timestampToBlockRoot(uint256) view returns (bytes32)"
    ],
    "0x369e6F597e22EaB55fFb173C6d9cD234BD699111": [
      "constructor(address _singleton)"
    ],
    "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x4bB6731B02314d40aBbfFBC4540f508874014226": [
      "constructor(address _eigenPodManager)",
      "event DelayedWithdrawalCreated(address podOwner, address recipient, uint256 amount, uint256 index)",
      "event DelayedWithdrawalsClaimed(address recipient, uint256 amountClaimed, uint256 delayedWithdrawalsCompleted)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "event WithdrawalDelayBlocksSet(uint256 previousValue, uint256 newValue)",
      "function MAX_WITHDRAWAL_DELAY_BLOCKS() view returns (uint256)",
      "function canClaimDelayedWithdrawal(address user, uint256 index) view returns (bool)",
      "function claimDelayedWithdrawals(uint256 maxNumberOfDelayedWithdrawalsToClaim)",
      "function claimDelayedWithdrawals(address recipient, uint256 maxNumberOfDelayedWithdrawalsToClaim)",
      "function createDelayedWithdrawal(address podOwner, address recipient) payable",
      "function eigenPodManager() view returns (address)",
      "function getClaimableUserDelayedWithdrawals(address user) view returns (tuple(uint224 amount, uint32 blockCreated)[])",
      "function getUserDelayedWithdrawals(address user) view returns (tuple(uint224 amount, uint32 blockCreated)[])",
      "function initialize(address initOwner, address _pauserRegistry, uint256 initPausedStatus, uint256 _withdrawalDelayBlocks)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setWithdrawalDelayBlocks(uint256 newValue)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function userDelayedWithdrawalByIndex(address user, uint256 index) view returns (tuple(uint224 amount, uint32 blockCreated))",
      "function userWithdrawals(address user) view returns (tuple(uint256 delayedWithdrawalsCompleted, tuple(uint224 amount, uint32 blockCreated)[] delayedWithdrawals))",
      "function userWithdrawalsLength(address user) view returns (uint256)",
      "function withdrawalDelayBlocks() view returns (uint256)"
    ],
    "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073": [
      "constructor(address implementation_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)"
    ],
    "0x5d0B9cE2e277Daf508528E9f6Bf6314E79e4eD2b": [
      "constructor(address _registryCoordinator)",
      "event Initialized(uint8 version)",
      "event NewPubkeyRegistration(address indexed operator, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2)",
      "event OperatorAddedToQuorums(address operator, bytes32 operatorId, bytes quorumNumbers)",
      "event OperatorRemovedFromQuorums(address operator, bytes32 operatorId, bytes quorumNumbers)",
      "function apkHistory(uint8, uint256) view returns (bytes24 apkHash, uint32 updateBlockNumber, uint32 nextUpdateBlockNumber)",
      "function currentApk(uint8) view returns (uint256 X, uint256 Y)",
      "function deregisterOperator(address operator, bytes quorumNumbers)",
      "function getApk(uint8 quorumNumber) view returns (tuple(uint256 X, uint256 Y))",
      "function getApkHashAtBlockNumberAndIndex(uint8 quorumNumber, uint32 blockNumber, uint256 index) view returns (bytes24)",
      "function getApkHistoryLength(uint8 quorumNumber) view returns (uint32)",
      "function getApkIndicesAtBlockNumber(bytes quorumNumbers, uint256 blockNumber) view returns (uint32[])",
      "function getApkUpdateAtIndex(uint8 quorumNumber, uint256 index) view returns (tuple(bytes24 apkHash, uint32 updateBlockNumber, uint32 nextUpdateBlockNumber))",
      "function getOperatorFromPubkeyHash(bytes32 pubkeyHash) view returns (address)",
      "function getOperatorId(address operator) view returns (bytes32)",
      "function getRegisteredPubkey(address operator) view returns (tuple(uint256 X, uint256 Y), bytes32)",
      "function initializeQuorum(uint8 quorumNumber)",
      "function operatorToPubkey(address) view returns (uint256 X, uint256 Y)",
      "function operatorToPubkeyHash(address) view returns (bytes32)",
      "function pubkeyHashToOperator(bytes32) view returns (address)",
      "function registerBLSPublicKey(address operator, tuple(tuple(uint256 X, uint256 Y) pubkeyRegistrationSignature, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2) params, tuple(uint256 X, uint256 Y) pubkeyRegistrationMessageHash) returns (bytes32 operatorId)",
      "function registerOperator(address operator, bytes quorumNumbers)",
      "function registryCoordinator() view returns (address)"
    ],
    "0x70f44C13944d49a236E3cD7a94f48f5daB6C619b": [
      "constructor(address _delegation, address _eigenPodManager, address _slasher)",
      "event Deposit(address staker, address token, address strategy, uint256 shares)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event StrategyAddedToDepositWhitelist(address strategy)",
      "event StrategyRemovedFromDepositWhitelist(address strategy)",
      "event StrategyWhitelisterChanged(address previousAddress, address newAddress)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "event UpdatedThirdPartyTransfersForbidden(address strategy, bool value)",
      "function DEPOSIT_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function addShares(address staker, address token, address strategy, uint256 shares)",
      "function addStrategiesToDepositWhitelist(address[] strategiesToWhitelist, bool[] thirdPartyTransfersForbiddenValues)",
      "function calculateWithdrawalRoot(tuple(address[] strategies, uint256[] shares, address staker, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress) queuedWithdrawal) pure returns (bytes32)",
      "function delegation() view returns (address)",
      "function depositIntoStrategy(address strategy, address token, uint256 amount) returns (uint256 shares)",
      "function depositIntoStrategyWithSignature(address strategy, address token, uint256 amount, address staker, uint256 expiry, bytes signature) returns (uint256 shares)",
      "function domainSeparator() view returns (bytes32)",
      "function eigenPodManager() view returns (address)",
      "function getDeposits(address staker) view returns (address[], uint256[])",
      "function initialize(address initialOwner, address initialStrategyWhitelister, address _pauserRegistry, uint256 initialPausedStatus)",
      "function migrateQueuedWithdrawal(tuple(address[] strategies, uint256[] shares, address staker, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress) queuedWithdrawal) returns (bool, bytes32)",
      "function nonces(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function removeShares(address staker, address strategy, uint256 shares)",
      "function removeStrategiesFromDepositWhitelist(address[] strategiesToRemoveFromWhitelist)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setStrategyWhitelister(address newStrategyWhitelister)",
      "function setThirdPartyTransfersForbidden(address strategy, bool value)",
      "function slasher() view returns (address)",
      "function stakerStrategyList(address, uint256) view returns (address)",
      "function stakerStrategyListLength(address staker) view returns (uint256)",
      "function stakerStrategyShares(address, address) view returns (uint256)",
      "function strategyIsWhitelistedForDeposit(address) view returns (bool)",
      "function strategyWhitelister() view returns (address)",
      "function thirdPartyTransfersForbidden(address) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function withdrawSharesAsTokens(address recipient, address strategy, uint256 shares, address token)",
      "function withdrawalRootPending(bytes32) view returns (bool)"
    ],
    "0x7Fe7E9CC0F274d2435AD5d56D5fa73E47F6A23D8": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8247EF5705d3345516286B72bFE6D690197C2E99": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x858646372CC42E1A627fcE94aa7A7033e7CF075A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x870679E138bCdf293b7Ff14dD44b70FC97e12fc0": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x8bA40dA60f0827d027F029aCEE62609F0527a255": [
      "constructor(address _ethPOS, address _delayedWithdrawalRouter, address _eigenPodManager, uint64 _MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR, uint64 _GENESIS_TIME)",
      "event EigenPodStaked(bytes pubkey)",
      "event FullWithdrawalRedeemed(uint40 validatorIndex, uint64 withdrawalTimestamp, address indexed recipient, uint64 withdrawalAmountGwei)",
      "event Initialized(uint8 version)",
      "event NonBeaconChainETHReceived(uint256 amountReceived)",
      "event NonBeaconChainETHWithdrawn(address indexed recipient, uint256 amountWithdrawn)",
      "event PartialWithdrawalRedeemed(uint40 validatorIndex, uint64 withdrawalTimestamp, address indexed recipient, uint64 partialWithdrawalAmountGwei)",
      "event RestakedBeaconChainETHWithdrawn(address indexed recipient, uint256 amount)",
      "event RestakingActivated(address indexed podOwner)",
      "event ValidatorBalanceUpdated(uint40 validatorIndex, uint64 balanceTimestamp, uint64 newValidatorBalanceGwei)",
      "event ValidatorRestaked(uint40 validatorIndex)",
      "function GENESIS_TIME() view returns (uint64)",
      "function MAX_RESTAKED_BALANCE_GWEI_PER_VALIDATOR() view returns (uint64)",
      "function activateRestaking()",
      "function delayedWithdrawalRouter() view returns (address)",
      "function eigenPodManager() view returns (address)",
      "function ethPOS() view returns (address)",
      "function hasRestaked() view returns (bool)",
      "function initialize(address _podOwner)",
      "function mostRecentWithdrawalTimestamp() view returns (uint64)",
      "function nonBeaconChainETHBalanceWei() view returns (uint256)",
      "function podOwner() view returns (address)",
      "function provenWithdrawal(bytes32, uint64) view returns (bool)",
      "function recoverTokens(address[] tokenList, uint256[] amountsToWithdraw, address recipient)",
      "function stake(bytes pubkey, bytes signature, bytes32 depositDataRoot) payable",
      "function sumOfPartialWithdrawalsClaimedGwei() view returns (uint64)",
      "function validatorPubkeyHashToInfo(bytes32 validatorPubkeyHash) view returns (tuple(uint64 validatorIndex, uint64 restakedBalanceGwei, uint64 mostRecentBalanceUpdateTimestamp, uint8 status))",
      "function validatorPubkeyToInfo(bytes validatorPubkey) view returns (tuple(uint64 validatorIndex, uint64 restakedBalanceGwei, uint64 mostRecentBalanceUpdateTimestamp, uint8 status))",
      "function validatorStatus(bytes validatorPubkey) view returns (uint8)",
      "function validatorStatus(bytes32 pubkeyHash) view returns (uint8)",
      "function verifyAndProcessWithdrawals(uint64 oracleTimestamp, tuple(bytes32 beaconStateRoot, bytes proof) stateRootProof, tuple(bytes withdrawalProof, bytes slotProof, bytes executionPayloadProof, bytes timestampProof, bytes historicalSummaryBlockRootProof, uint64 blockRootIndex, uint64 historicalSummaryIndex, uint64 withdrawalIndex, bytes32 blockRoot, bytes32 slotRoot, bytes32 timestampRoot, bytes32 executionPayloadRoot)[] withdrawalProofs, bytes[] validatorFieldsProofs, bytes32[][] validatorFields, bytes32[][] withdrawalFields)",
      "function verifyBalanceUpdates(uint64 oracleTimestamp, uint40[] validatorIndices, tuple(bytes32 beaconStateRoot, bytes proof) stateRootProof, bytes[] validatorFieldsProofs, bytes32[][] validatorFields)",
      "function verifyWithdrawalCredentials(uint64 oracleTimestamp, tuple(bytes32 beaconStateRoot, bytes proof) stateRootProof, uint40[] validatorIndices, bytes[] validatorFieldsProofs, bytes32[][] validatorFields)",
      "function withdrawBeforeRestaking()",
      "function withdrawNonBeaconChainETHBalanceWei(address recipient, uint256 amountToWithdraw)",
      "function withdrawRestakedBeaconChainETH(address recipient, uint256 amountWei)",
      "function withdrawableRestakedExecutionLayerGwei() view returns (uint64)"
    ],
    "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF": [
      "constructor(address admin_, uint256 delay_)",
      "event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event NewAdmin(address indexed newAdmin)",
      "event NewDelay(uint256 indexed newDelay)",
      "event NewPendingAdmin(address indexed newPendingAdmin)",
      "event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function acceptAdmin()",
      "function admin() view returns (address)",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta)",
      "function delay() view returns (uint256)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable returns (bytes)",
      "function pendingAdmin() view returns (address)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) returns (bytes32)",
      "function queuedTransactions(bytes32) view returns (bool)",
      "function setDelay(uint256 delay_)",
      "function setPendingAdmin(address pendingAdmin_)"
    ],
    "0xBd35a7a1CDeF403a6a99e4E8BA0974D198455030": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xBE1685C81aA44FF9FB319dD389addd9374383e90": [
      "constructor(address _singleton)"
    ],
    "0xd3e09a0c2A9A6FDf5E92aE65D3CC090A4dF8EECF": [
      "constructor(address _serviceManager, address _stakeRegistry, address _blsApkRegistry, address _indexRegistry)",
      "event ChurnApproverUpdated(address prevChurnApprover, address newChurnApprover)",
      "event EjectorUpdated(address prevEjector, address newEjector)",
      "event Initialized(uint8 version)",
      "event OperatorDeregistered(address indexed operator, bytes32 indexed operatorId)",
      "event OperatorRegistered(address indexed operator, bytes32 indexed operatorId)",
      "event OperatorSetParamsUpdated(uint8 indexed quorumNumber, tuple(uint32 maxOperatorCount, uint16 kickBIPsOfOperatorStake, uint16 kickBIPsOfTotalStake) operatorSetParams)",
      "event OperatorSocketUpdate(bytes32 indexed operatorId, string socket)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event QuorumBlockNumberUpdated(uint8 indexed quorumNumber, uint256 blocknumber)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function OPERATOR_CHURN_APPROVAL_TYPEHASH() view returns (bytes32)",
      "function PUBKEY_REGISTRATION_TYPEHASH() view returns (bytes32)",
      "function blsApkRegistry() view returns (address)",
      "function calculateOperatorChurnApprovalDigestHash(address registeringOperator, bytes32 registeringOperatorId, tuple(uint8 quorumNumber, address operator)[] operatorKickParams, bytes32 salt, uint256 expiry) view returns (bytes32)",
      "function churnApprover() view returns (address)",
      "function createQuorum(tuple(uint32 maxOperatorCount, uint16 kickBIPsOfOperatorStake, uint16 kickBIPsOfTotalStake) operatorSetParams, uint96 minimumStake, tuple(address strategy, uint96 multiplier)[] strategyParams)",
      "function deregisterOperator(bytes quorumNumbers)",
      "function ejectOperator(address operator, bytes quorumNumbers)",
      "function ejector() view returns (address)",
      "function getCurrentQuorumBitmap(bytes32 operatorId) view returns (uint192)",
      "function getOperator(address operator) view returns (tuple(bytes32 operatorId, uint8 status))",
      "function getOperatorFromId(bytes32 operatorId) view returns (address)",
      "function getOperatorId(address operator) view returns (bytes32)",
      "function getOperatorSetParams(uint8 quorumNumber) view returns (tuple(uint32 maxOperatorCount, uint16 kickBIPsOfOperatorStake, uint16 kickBIPsOfTotalStake))",
      "function getOperatorStatus(address operator) view returns (uint8)",
      "function getQuorumBitmapAtBlockNumberByIndex(bytes32 operatorId, uint32 blockNumber, uint256 index) view returns (uint192)",
      "function getQuorumBitmapHistoryLength(bytes32 operatorId) view returns (uint256)",
      "function getQuorumBitmapIndicesAtBlockNumber(uint32 blockNumber, bytes32[] operatorIds) view returns (uint32[])",
      "function getQuorumBitmapUpdateByIndex(bytes32 operatorId, uint256 index) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint192 quorumBitmap))",
      "function indexRegistry() view returns (address)",
      "function initialize(address _initialOwner, address _churnApprover, address _ejector, address _pauserRegistry, uint256 _initialPausedStatus, tuple(uint32 maxOperatorCount, uint16 kickBIPsOfOperatorStake, uint16 kickBIPsOfTotalStake)[] _operatorSetParams, uint96[] _minimumStakes, tuple(address strategy, uint96 multiplier)[][] _strategyParams)",
      "function isChurnApproverSaltUsed(bytes32) view returns (bool)",
      "function numRegistries() view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function pubkeyRegistrationMessageHash(address operator) view returns (tuple(uint256 X, uint256 Y))",
      "function quorumCount() view returns (uint8)",
      "function quorumUpdateBlockNumber(uint8) view returns (uint256)",
      "function registerOperator(bytes quorumNumbers, string socket, tuple(tuple(uint256 X, uint256 Y) pubkeyRegistrationSignature, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2) params, tuple(bytes signature, bytes32 salt, uint256 expiry) operatorSignature)",
      "function registerOperatorWithChurn(bytes quorumNumbers, string socket, tuple(tuple(uint256 X, uint256 Y) pubkeyRegistrationSignature, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2) params, tuple(uint8 quorumNumber, address operator)[] operatorKickParams, tuple(bytes signature, bytes32 salt, uint256 expiry) churnApproverSignature, tuple(bytes signature, bytes32 salt, uint256 expiry) operatorSignature)",
      "function registries(uint256) view returns (address)",
      "function renounceOwnership()",
      "function serviceManager() view returns (address)",
      "function setChurnApprover(address _churnApprover)",
      "function setEjector(address _ejector)",
      "function setOperatorSetParams(uint8 quorumNumber, tuple(uint32 maxOperatorCount, uint16 kickBIPsOfOperatorStake, uint16 kickBIPsOfTotalStake) operatorSetParams)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function stakeRegistry() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function updateOperators(address[] operators)",
      "function updateOperatorsForQuorum(address[][] operatorsPerQuorum, bytes quorumNumbers)",
      "function updateSocket(string socket)"
    ],
    "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdAbdB3Cd346B7D5F5779b0B614EdE1CC9DcBA5b7": [
      "constructor(address _delegation)",
      "event AVSMetadataURIUpdated(address indexed avs, string metadataURI)",
      "event Initialized(uint8 version)",
      "event OperatorAVSRegistrationStatusUpdated(address indexed operator, address indexed avs, uint8 status)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function OPERATOR_AVS_REGISTRATION_TYPEHASH() view returns (bytes32)",
      "function avsOperatorStatus(address, address) view returns (uint8)",
      "function calculateOperatorAVSRegistrationDigestHash(address operator, address avs, bytes32 salt, uint256 expiry) view returns (bytes32)",
      "function cancelSalt(bytes32 salt)",
      "function delegation() view returns (address)",
      "function deregisterOperatorFromAVS(address operator)",
      "function domainSeparator() view returns (bytes32)",
      "function initialize(address initialOwner, address _pauserRegistry, uint256 initialPausedStatus)",
      "function operatorSaltIsSpent(address, bytes32) view returns (bool)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function registerOperatorToAVS(address operator, tuple(bytes signature, bytes32 salt, uint256 expiry) operatorSignature)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function updateAVSMetadataURI(string metadataURI)"
    ],
    "0xe4297e3DaDBc7D99e26a2954820f514CB50C5762": [
      "constructor(address _ethPOS, address _eigenPodBeacon, address _strategyManager, address _slasher, address _delegationManager)",
      "event BeaconChainETHDeposited(address indexed podOwner, uint256 amount)",
      "event BeaconChainETHWithdrawalCompleted(address indexed podOwner, uint256 shares, uint96 nonce, address delegatedAddress, address withdrawer, bytes32 withdrawalRoot)",
      "event BeaconOracleUpdated(address indexed newOracleAddress)",
      "event DenebForkTimestampUpdated(uint64 newValue)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event PodDeployed(address indexed eigenPod, address indexed podOwner)",
      "event PodSharesUpdated(address indexed podOwner, int256 sharesDelta)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function addShares(address podOwner, uint256 shares) returns (uint256)",
      "function beaconChainETHStrategy() view returns (address)",
      "function beaconChainOracle() view returns (address)",
      "function createPod() returns (address)",
      "function delegationManager() view returns (address)",
      "function denebForkTimestamp() view returns (uint64)",
      "function eigenPodBeacon() view returns (address)",
      "function ethPOS() view returns (address)",
      "function getBlockRootAtTimestamp(uint64 timestamp) view returns (bytes32)",
      "function getPod(address podOwner) view returns (address)",
      "function hasPod(address podOwner) view returns (bool)",
      "function initialize(address _beaconChainOracle, address initialOwner, address _pauserRegistry, uint256 _initPausedStatus)",
      "function numPods() view returns (uint256)",
      "function owner() view returns (address)",
      "function ownerToPod(address) view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function podOwnerShares(address) view returns (int256)",
      "function recordBeaconChainETHBalanceUpdate(address podOwner, int256 sharesDelta)",
      "function removeShares(address podOwner, uint256 shares)",
      "function renounceOwnership()",
      "function setDenebForkTimestamp(uint64 newDenebForkTimestamp)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function slasher() view returns (address)",
      "function stake(bytes pubkey, bytes signature, bytes32 depositDataRoot) payable",
      "function strategyManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function updateBeaconChainOracle(address newBeaconChainOracle)",
      "function withdrawSharesAsTokens(address podOwner, address destination, uint256 shares)"
    ],
    "0xF3234220163a757edf1E11a8a085638D9B236614": [
      "constructor(address, address)",
      "event FrozenStatusReset(address indexed previouslySlashedAddress)",
      "event Initialized(uint8 version)",
      "event MiddlewareTimesAdded(address operator, uint256 index, uint32 stalestUpdateBlock, uint32 latestServeUntilBlock)",
      "event OperatorFrozen(address indexed slashedOperator, address indexed slashingContract)",
      "event OptedIntoSlashing(address indexed operator, address indexed contractAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event SlashingAbilityRevoked(address indexed operator, address indexed contractAddress, uint32 contractCanSlashOperatorUntilBlock)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function canSlash(address, address) view returns (bool)",
      "function canWithdraw(address, uint32, uint256) returns (bool)",
      "function contractCanSlashOperatorUntilBlock(address, address) view returns (uint32)",
      "function delegation() view returns (address)",
      "function freezeOperator(address)",
      "function getCorrectValueForInsertAfter(address, uint32) view returns (uint256)",
      "function getMiddlewareTimesIndexServeUntilBlock(address, uint32) view returns (uint32)",
      "function getMiddlewareTimesIndexStalestUpdateBlock(address, uint32) view returns (uint32)",
      "function initialize(address, address, uint256)",
      "function isFrozen(address) view returns (bool)",
      "function latestUpdateBlock(address, address) view returns (uint32)",
      "function middlewareTimesLength(address) view returns (uint256)",
      "function operatorToMiddlewareTimes(address, uint256) view returns (tuple(uint32 stalestUpdateBlock, uint32 latestServeUntilBlock))",
      "function operatorWhitelistedContractsLinkedListEntry(address, address) view returns (bool, uint256, uint256)",
      "function operatorWhitelistedContractsLinkedListSize(address) view returns (uint256)",
      "function optIntoSlashing(address)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function recordFirstStakeUpdate(address, uint32)",
      "function recordLastStakeUpdateAndRevokeSlashingAbility(address, uint32)",
      "function recordStakeUpdate(address, uint32, uint32, uint256)",
      "function renounceOwnership()",
      "function resetFrozenStatus(address[])",
      "function setPauserRegistry(address newPauserRegistry)",
      "function strategyManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function whitelistedContractDetails(address, address) view returns (tuple(uint32 registrationMayBeginAtBlock, uint32 contractCanSlashOperatorUntilBlock, uint32 latestUpdateBlock))"
    ],
    "0xF5fD25A90902c27068CF5eBe53Be8da693Ac899e": [
      "constructor(address __avsDirectory, address __registryCoordinator, address __stakeRegistry)",
      "event BatchConfirmed(bytes32 indexed batchHeaderHash, uint32 batchId)",
      "event BatchConfirmerStatusChanged(address batchConfirmer, bool status)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event StaleStakesForbiddenUpdate(bool value)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function BLOCK_STALE_MEASURE() view returns (uint32)",
      "function STORE_DURATION_BLOCKS() view returns (uint32)",
      "function THRESHOLD_DENOMINATOR() view returns (uint256)",
      "function avsDirectory() view returns (address)",
      "function batchId() view returns (uint32)",
      "function batchIdToBatchMetadataHash(uint32) view returns (bytes32)",
      "function blsApkRegistry() view returns (address)",
      "function checkSignatures(bytes32 msgHash, bytes quorumNumbers, uint32 referenceBlockNumber, tuple(uint32[] nonSignerQuorumBitmapIndices, tuple(uint256 X, uint256 Y)[] nonSignerPubkeys, tuple(uint256 X, uint256 Y)[] quorumApks, tuple(uint256[2] X, uint256[2] Y) apkG2, tuple(uint256 X, uint256 Y) sigma, uint32[] quorumApkIndices, uint32[] totalStakeIndices, uint32[][] nonSignerStakeIndices) params) view returns (tuple(uint96[] signedStakeForQuorum, uint96[] totalStakeForQuorum), bytes32)",
      "function confirmBatch(tuple(bytes32 blobHeadersRoot, bytes quorumNumbers, bytes signedStakeForQuorums, uint32 referenceBlockNumber) batchHeader, tuple(uint32[] nonSignerQuorumBitmapIndices, tuple(uint256 X, uint256 Y)[] nonSignerPubkeys, tuple(uint256 X, uint256 Y)[] quorumApks, tuple(uint256[2] X, uint256[2] Y) apkG2, tuple(uint256 X, uint256 Y) sigma, uint32[] quorumApkIndices, uint32[] totalStakeIndices, uint32[][] nonSignerStakeIndices) nonSignerStakesAndSignature)",
      "function delegation() view returns (address)",
      "function deregisterOperatorFromAVS(address operator)",
      "function getOperatorRestakedStrategies(address operator) view returns (address[])",
      "function getRestakeableStrategies() view returns (address[])",
      "function initialize(address _pauserRegistry, uint256 _initialPausedStatus, address _initialOwner, address[] _batchConfirmers)",
      "function isBatchConfirmer(address) view returns (bool)",
      "function latestServeUntilBlock(uint32 referenceBlockNumber) view returns (uint32)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function quorumAdversaryThresholdPercentages() view returns (bytes)",
      "function quorumConfirmationThresholdPercentages() view returns (bytes)",
      "function quorumNumbersRequired() view returns (bytes)",
      "function registerOperatorToAVS(address operator, tuple(bytes signature, bytes32 salt, uint256 expiry) operatorSignature)",
      "function registryCoordinator() view returns (address)",
      "function renounceOwnership()",
      "function setBatchConfirmer(address _batchConfirmer)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setStaleStakesForbidden(bool value)",
      "function stakeRegistry() view returns (address)",
      "function staleStakesForbidden() view returns (bool)",
      "function taskNumber() view returns (uint32)",
      "function transferOwnership(address newOwner)",
      "function trySignatureAndApkVerification(bytes32 msgHash, tuple(uint256 X, uint256 Y) apk, tuple(uint256[2] X, uint256[2] Y) apkG2, tuple(uint256 X, uint256 Y) sigma) view returns (bool pairingSuccessful, bool siganatureIsValid)",
      "function unpause(uint256 newPausedStatus)",
      "function updateAVSMetadataURI(string _metadataURI)"
    ],
    "0xFEA47018D632A77bA579846c840d5706705Dc598": [
      "constructor(address _singleton)"
    ]
  }
}
