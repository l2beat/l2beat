{
  "name": "hop",
  "blockNumber": 16154924,
  "configHash": "0xad062e310d2995fb4d66c09956c4e6c736a66c0c7457ea6b0bded1fc41a5bd48",
  "contracts": [
    {
      "name": "L1_ERC20_Bridge",
      "address": "0x3666f603Cc164936C1b87e207F36BEBa4AC5f18a",
      "code": "https://etherscan.deth.net/address/0x3666f603Cc164936C1b87e207F36BEBa4AC5f18a",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "CHALLENGE_AMOUNT_DIVISOR": 10,
        "challengePeriod": 86400,
        "challengeResolutionPeriod": 1209600,
        "getChainId": 1,
        "governance": "0x22e3F828b3f47dAcFACd875D20bd5cc0879C96e7",
        "l1CanonicalToken": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "minTransferRootBondDelay": 900,
        "TIME_SLOT_SIZE": 14400
      }
    },
    {
      "name": "Timelock",
      "address": "0x22e3F828b3f47dAcFACd875D20bd5cc0879C96e7",
      "code": "https://etherscan.deth.net/address/0x22e3F828b3f47dAcFACd875D20bd5cc0879C96e7",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "admin": "0x1ec078551A5ac8F0f51fAc57Ffc48Ea7d9A86E9d",
        "delay": 86400,
        "GRACE_PERIOD": 1209600,
        "MAXIMUM_DELAY": 2592000,
        "MINIMUM_DELAY": 86400,
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x1ec078551A5ac8F0f51fAc57Ffc48Ea7d9A86E9d",
      "code": "https://etherscan.deth.net/address/0x1ec078551A5ac8F0f51fAc57Ffc48Ea7d9A86E9d,0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F"
      },
      "values": {
        "domainSeparator": "0x62766f0ec4bb63fc0cf61622e436018804fdac93d59b3a03e6318b6bf34dd76c",
        "getModules": [],
        "getOwners": [
          "0x9f8d2dafE9978268aC7c67966B366d6d55e97f07",
          "0x404c2184a4027b0092C5877BC4599099cd63E62D",
          "0xEb34e93f90fa76c865112F4596eAb65D6F0d2F62"
        ],
        "getThreshold": 2,
        "NAME": "Gnosis Safe",
        "nonce": 436,
        "VERSION": "1.1.1"
      }
    },
    {
      "name": "L1_ERC20_Bridge",
      "address": "0x3d4Cc8A61c7528Fd86C55cfe061a78dCBA48EDd1",
      "code": "https://etherscan.deth.net/address/0x3d4Cc8A61c7528Fd86C55cfe061a78dCBA48EDd1",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "CHALLENGE_AMOUNT_DIVISOR": 10,
        "challengePeriod": 86400,
        "challengeResolutionPeriod": 1209600,
        "getChainId": 1,
        "governance": "0x22e3F828b3f47dAcFACd875D20bd5cc0879C96e7",
        "l1CanonicalToken": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "minTransferRootBondDelay": 900,
        "TIME_SLOT_SIZE": 14400
      }
    },
    {
      "name": "L1_ERC20_Bridge",
      "address": "0x3E4a3a4796d16c0Cd582C382691998f7c06420B6",
      "code": "https://etherscan.deth.net/address/0x3E4a3a4796d16c0Cd582C382691998f7c06420B6",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "CHALLENGE_AMOUNT_DIVISOR": 10,
        "challengePeriod": 86400,
        "challengeResolutionPeriod": 1209600,
        "getChainId": 1,
        "governance": "0x22e3F828b3f47dAcFACd875D20bd5cc0879C96e7",
        "l1CanonicalToken": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
        "minTransferRootBondDelay": 900,
        "TIME_SLOT_SIZE": 14400
      }
    },
    {
      "name": "L1_ETH_Bridge",
      "address": "0xb8901acB165ed027E32754E0FFe830802919727f",
      "code": "https://etherscan.deth.net/address/0xb8901acB165ed027E32754E0FFe830802919727f",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "CHALLENGE_AMOUNT_DIVISOR": 10,
        "challengePeriod": 86400,
        "challengeResolutionPeriod": 1209600,
        "getChainId": 1,
        "governance": "0x22e3F828b3f47dAcFACd875D20bd5cc0879C96e7",
        "minTransferRootBondDelay": 900,
        "TIME_SLOT_SIZE": 14400
      }
    },
    {
      "name": "L1_ERC20_Bridge",
      "address": "0x22B1Cbb8D98a01a3B71D034BB899775A76Eb1cc2",
      "code": "https://etherscan.deth.net/address/0x22B1Cbb8D98a01a3B71D034BB899775A76Eb1cc2",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "CHALLENGE_AMOUNT_DIVISOR": 10,
        "challengePeriod": 86400,
        "challengeResolutionPeriod": 1209600,
        "getChainId": 1,
        "governance": "0x22e3F828b3f47dAcFACd875D20bd5cc0879C96e7",
        "l1CanonicalToken": "0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0",
        "minTransferRootBondDelay": 900,
        "TIME_SLOT_SIZE": 14400
      }
    },
    {
      "name": "L1_ERC20_Bridge",
      "address": "0xb98454270065A31D71Bf635F6F7Ee6A518dFb849",
      "code": "https://etherscan.deth.net/address/0xb98454270065A31D71Bf635F6F7Ee6A518dFb849",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "CHALLENGE_AMOUNT_DIVISOR": 10,
        "challengePeriod": 86400,
        "challengeResolutionPeriod": 1209600,
        "getChainId": 1,
        "governance": "0xF56e305024B195383245A075737d16dBdb8487Fb",
        "l1CanonicalToken": "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599",
        "minTransferRootBondDelay": 900,
        "TIME_SLOT_SIZE": 14400
      }
    }
  ],
  "eoas": [
    "0x404c2184a4027b0092C5877BC4599099cd63E62D",
    "0x9f8d2dafE9978268aC7c67966B366d6d55e97f07",
    "0xEb34e93f90fa76c865112F4596eAb65D6F0d2F62",
    "0xF56e305024B195383245A075737d16dBdb8487Fb"
  ],
  "abis": {
    "0x1ec078551A5ac8F0f51fAc57Ffc48Ea7d9A86E9d": [
      "constructor(address _masterCopy)"
    ],
    "0x22B1Cbb8D98a01a3B71D034BB899775A76Eb1cc2": [
      "constructor(address _l1CanonicalToken, address[] bonders, address _governance)",
      "event BonderAdded(address indexed newBonder)",
      "event BonderRemoved(address indexed previousBonder)",
      "event ChallengeResolved(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event MultipleWithdrawalsSettled(address indexed bonder, bytes32 indexed rootHash, uint256 totalBondsSettled)",
      "event Stake(address indexed account, uint256 amount)",
      "event TransferBondChallenged(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event TransferRootBonded(bytes32 indexed root, uint256 amount)",
      "event TransferRootConfirmed(uint256 indexed originChainId, uint256 indexed destinationChainId, bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferRootSet(bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferSentToL2(uint256 indexed chainId, address indexed recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address indexed relayer, uint256 relayerFee)",
      "event Unstake(address indexed account, uint256 amount)",
      "event WithdrawalBondSettled(address indexed bonder, bytes32 indexed transferId, bytes32 indexed rootHash)",
      "event WithdrawalBonded(bytes32 indexed transferId, uint256 amount)",
      "event Withdrew(bytes32 indexed transferId, address indexed recipient, uint256 amount, bytes32 transferNonce)",
      "function CHALLENGE_AMOUNT_DIVISOR() view returns (uint256)",
      "function TIME_SLOT_SIZE() view returns (uint256)",
      "function addBonder(address bonder)",
      "function bondTransferRoot(bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount)",
      "function bondWithdrawal(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee)",
      "function chainBalance(uint256) view returns (uint256)",
      "function challengePeriod() view returns (uint256)",
      "function challengeResolutionPeriod() view returns (uint256)",
      "function challengeTransferBond(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId) payable",
      "function confirmTransferRoot(uint256 originChainId, bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount, uint256 rootCommittedAt)",
      "function crossDomainMessengerWrappers(uint256) view returns (address)",
      "function getBondForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getBondedWithdrawalAmount(address bonder, bytes32 transferId) view returns (uint256)",
      "function getChainId() view returns (uint256 chainId)",
      "function getChallengeAmountForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getCredit(address bonder) view returns (uint256)",
      "function getDebitAndAdditionalDebit(address bonder) view returns (uint256)",
      "function getIsBonder(address maybeBonder) view returns (bool)",
      "function getRawDebit(address bonder) view returns (uint256)",
      "function getTimeSlot(uint256 time) pure returns (uint256)",
      "function getTransferId(uint256 chainId, address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline) pure returns (bytes32)",
      "function getTransferRoot(bytes32 rootHash, uint256 totalAmount) view returns (tuple(uint256 total, uint256 amountWithdrawn, uint256 createdAt))",
      "function getTransferRootId(bytes32 rootHash, uint256 totalAmount) pure returns (bytes32)",
      "function governance() view returns (address)",
      "function isChainIdPaused(uint256) view returns (bool)",
      "function isTransferIdSpent(bytes32 transferId) view returns (bool)",
      "function l1CanonicalToken() view returns (address)",
      "function minTransferRootBondDelay() view returns (uint256)",
      "function removeBonder(address bonder)",
      "function rescueTransferRoot(bytes32 rootHash, uint256 originalAmount, address recipient)",
      "function resolveChallenge(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId)",
      "function sendToL2(uint256 chainId, address recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address relayer, uint256 relayerFee) payable",
      "function setChainIdDepositsPaused(uint256 chainId, bool isPaused)",
      "function setChallengePeriod(uint256 _challengePeriod)",
      "function setChallengeResolutionPeriod(uint256 _challengeResolutionPeriod)",
      "function setCrossDomainMessengerWrapper(uint256 chainId, address _crossDomainMessengerWrapper)",
      "function setGovernance(address _newGovernance)",
      "function setMinTransferRootBondDelay(uint256 _minTransferRootBondDelay)",
      "function settleBondedWithdrawal(address bonder, bytes32 transferId, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)",
      "function settleBondedWithdrawals(address bonder, bytes32[] transferIds, uint256 totalAmount)",
      "function stake(address bonder, uint256 amount) payable",
      "function timeSlotToAmountBonded(uint256, address) view returns (uint256)",
      "function transferBonds(bytes32) view returns (address bonder, uint256 createdAt, uint256 totalAmount, uint256 challengeStartTime, address challenger, bool challengeResolved)",
      "function transferRootCommittedAt(uint256, bytes32) view returns (uint256)",
      "function unstake(uint256 amount)",
      "function withdraw(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)"
    ],
    "0x22e3F828b3f47dAcFACd875D20bd5cc0879C96e7": [
      "constructor(address admin_, uint256 delay_)",
      "event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event NewAdmin(address indexed newAdmin)",
      "event NewDelay(uint256 indexed newDelay)",
      "event NewPendingAdmin(address indexed newPendingAdmin)",
      "event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function acceptAdmin()",
      "function admin() view returns (address)",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta)",
      "function delay() view returns (uint256)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable returns (bytes)",
      "function pendingAdmin() view returns (address)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) returns (bytes32)",
      "function queuedTransactions(bytes32) view returns (bool)",
      "function setDelay(uint256 delay_)",
      "function setPendingAdmin(address pendingAdmin_)"
    ],
    "0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedMasterCopy(address masterCopy)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function NAME() view returns (string)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeMasterCopy(address _masterCopy)",
      "function changeThreshold(uint256 _threshold)",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getMessageHash(bytes message) view returns (bytes32)",
      "function getModules() view returns (address[])",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isOwner(address owner) view returns (bool)",
      "function isValidSignature(bytes _data, bytes _signature) returns (bytes4)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signMessage(bytes _data)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x3666f603Cc164936C1b87e207F36BEBa4AC5f18a": [
      "constructor(address _l1CanonicalToken, address[] bonders, address _governance)",
      "event BonderAdded(address indexed newBonder)",
      "event BonderRemoved(address indexed previousBonder)",
      "event ChallengeResolved(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event MultipleWithdrawalsSettled(address indexed bonder, bytes32 indexed rootHash, uint256 totalBondsSettled)",
      "event Stake(address indexed account, uint256 amount)",
      "event TransferBondChallenged(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event TransferRootBonded(bytes32 indexed root, uint256 amount)",
      "event TransferRootConfirmed(uint256 indexed originChainId, uint256 indexed destinationChainId, bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferRootSet(bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferSentToL2(uint256 indexed chainId, address indexed recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address indexed relayer, uint256 relayerFee)",
      "event Unstake(address indexed account, uint256 amount)",
      "event WithdrawalBondSettled(address indexed bonder, bytes32 indexed transferId, bytes32 indexed rootHash)",
      "event WithdrawalBonded(bytes32 indexed transferId, uint256 amount)",
      "event Withdrew(bytes32 indexed transferId, address indexed recipient, uint256 amount, bytes32 transferNonce)",
      "function CHALLENGE_AMOUNT_DIVISOR() view returns (uint256)",
      "function TIME_SLOT_SIZE() view returns (uint256)",
      "function addBonder(address bonder)",
      "function bondTransferRoot(bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount)",
      "function bondWithdrawal(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee)",
      "function chainBalance(uint256) view returns (uint256)",
      "function challengePeriod() view returns (uint256)",
      "function challengeResolutionPeriod() view returns (uint256)",
      "function challengeTransferBond(bytes32 rootHash, uint256 originalAmount) payable",
      "function confirmTransferRoot(uint256 originChainId, bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount, uint256 rootCommittedAt)",
      "function crossDomainMessengerWrappers(uint256) view returns (address)",
      "function getBondForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getBondedWithdrawalAmount(address bonder, bytes32 transferId) view returns (uint256)",
      "function getChainId() view returns (uint256 chainId)",
      "function getChallengeAmountForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getCredit(address bonder) view returns (uint256)",
      "function getDebitAndAdditionalDebit(address bonder) view returns (uint256)",
      "function getIsBonder(address maybeBonder) view returns (bool)",
      "function getRawDebit(address bonder) view returns (uint256)",
      "function getTimeSlot(uint256 time) pure returns (uint256)",
      "function getTransferId(uint256 chainId, address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline) pure returns (bytes32)",
      "function getTransferRoot(bytes32 rootHash, uint256 totalAmount) view returns (tuple(uint256 total, uint256 amountWithdrawn, uint256 createdAt))",
      "function getTransferRootId(bytes32 rootHash, uint256 totalAmount) pure returns (bytes32)",
      "function governance() view returns (address)",
      "function isChainIdPaused(uint256) view returns (bool)",
      "function isTransferIdSpent(bytes32 transferId) view returns (bool)",
      "function l1CanonicalToken() view returns (address)",
      "function minTransferRootBondDelay() view returns (uint256)",
      "function removeBonder(address bonder)",
      "function rescueTransferRoot(bytes32 rootHash, uint256 originalAmount, address recipient)",
      "function resolveChallenge(bytes32 rootHash, uint256 originalAmount)",
      "function sendToL2(uint256 chainId, address recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address relayer, uint256 relayerFee) payable",
      "function setChainIdDepositsPaused(uint256 chainId, bool isPaused)",
      "function setChallengePeriod(uint256 _challengePeriod)",
      "function setChallengeResolutionPeriod(uint256 _challengeResolutionPeriod)",
      "function setCrossDomainMessengerWrapper(uint256 chainId, address _crossDomainMessengerWrapper)",
      "function setGovernance(address _newGovernance)",
      "function setMinTransferRootBondDelay(uint256 _minTransferRootBondDelay)",
      "function settleBondedWithdrawal(address bonder, bytes32 transferId, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)",
      "function settleBondedWithdrawals(address bonder, bytes32[] transferIds, uint256 totalAmount)",
      "function stake(address bonder, uint256 amount) payable",
      "function timeSlotToAmountBonded(uint256, address) view returns (uint256)",
      "function transferBonds(bytes32) view returns (address bonder, uint256 createdAt, uint256 totalAmount, uint256 challengeStartTime, address challenger, bool challengeResolved)",
      "function transferRootCommittedAt(bytes32) view returns (uint256)",
      "function unstake(uint256 amount)",
      "function withdraw(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)"
    ],
    "0x3d4Cc8A61c7528Fd86C55cfe061a78dCBA48EDd1": [
      "constructor(address _l1CanonicalToken, address[] bonders, address _governance)",
      "event BonderAdded(address indexed newBonder)",
      "event BonderRemoved(address indexed previousBonder)",
      "event ChallengeResolved(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event MultipleWithdrawalsSettled(address indexed bonder, bytes32 indexed rootHash, uint256 totalBondsSettled)",
      "event Stake(address indexed account, uint256 amount)",
      "event TransferBondChallenged(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event TransferRootBonded(bytes32 indexed root, uint256 amount)",
      "event TransferRootConfirmed(uint256 indexed originChainId, uint256 indexed destinationChainId, bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferRootSet(bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferSentToL2(uint256 indexed chainId, address indexed recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address indexed relayer, uint256 relayerFee)",
      "event Unstake(address indexed account, uint256 amount)",
      "event WithdrawalBondSettled(address indexed bonder, bytes32 indexed transferId, bytes32 indexed rootHash)",
      "event WithdrawalBonded(bytes32 indexed transferId, uint256 amount)",
      "event Withdrew(bytes32 indexed transferId, address indexed recipient, uint256 amount, bytes32 transferNonce)",
      "function CHALLENGE_AMOUNT_DIVISOR() view returns (uint256)",
      "function TIME_SLOT_SIZE() view returns (uint256)",
      "function addBonder(address bonder)",
      "function bondTransferRoot(bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount)",
      "function bondWithdrawal(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee)",
      "function chainBalance(uint256) view returns (uint256)",
      "function challengePeriod() view returns (uint256)",
      "function challengeResolutionPeriod() view returns (uint256)",
      "function challengeTransferBond(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId) payable",
      "function confirmTransferRoot(uint256 originChainId, bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount, uint256 rootCommittedAt)",
      "function crossDomainMessengerWrappers(uint256) view returns (address)",
      "function getBondForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getBondedWithdrawalAmount(address bonder, bytes32 transferId) view returns (uint256)",
      "function getChainId() view returns (uint256 chainId)",
      "function getChallengeAmountForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getCredit(address bonder) view returns (uint256)",
      "function getDebitAndAdditionalDebit(address bonder) view returns (uint256)",
      "function getIsBonder(address maybeBonder) view returns (bool)",
      "function getRawDebit(address bonder) view returns (uint256)",
      "function getTimeSlot(uint256 time) pure returns (uint256)",
      "function getTransferId(uint256 chainId, address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline) pure returns (bytes32)",
      "function getTransferRoot(bytes32 rootHash, uint256 totalAmount) view returns (tuple(uint256 total, uint256 amountWithdrawn, uint256 createdAt))",
      "function getTransferRootId(bytes32 rootHash, uint256 totalAmount) pure returns (bytes32)",
      "function governance() view returns (address)",
      "function isChainIdPaused(uint256) view returns (bool)",
      "function isTransferIdSpent(bytes32 transferId) view returns (bool)",
      "function l1CanonicalToken() view returns (address)",
      "function minTransferRootBondDelay() view returns (uint256)",
      "function removeBonder(address bonder)",
      "function rescueTransferRoot(bytes32 rootHash, uint256 originalAmount, address recipient)",
      "function resolveChallenge(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId)",
      "function sendToL2(uint256 chainId, address recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address relayer, uint256 relayerFee) payable",
      "function setChainIdDepositsPaused(uint256 chainId, bool isPaused)",
      "function setChallengePeriod(uint256 _challengePeriod)",
      "function setChallengeResolutionPeriod(uint256 _challengeResolutionPeriod)",
      "function setCrossDomainMessengerWrapper(uint256 chainId, address _crossDomainMessengerWrapper)",
      "function setGovernance(address _newGovernance)",
      "function setMinTransferRootBondDelay(uint256 _minTransferRootBondDelay)",
      "function settleBondedWithdrawal(address bonder, bytes32 transferId, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)",
      "function settleBondedWithdrawals(address bonder, bytes32[] transferIds, uint256 totalAmount)",
      "function stake(address bonder, uint256 amount) payable",
      "function timeSlotToAmountBonded(uint256, address) view returns (uint256)",
      "function transferBonds(bytes32) view returns (address bonder, uint256 createdAt, uint256 totalAmount, uint256 challengeStartTime, address challenger, bool challengeResolved)",
      "function transferRootCommittedAt(uint256, bytes32) view returns (uint256)",
      "function unstake(uint256 amount)",
      "function withdraw(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)"
    ],
    "0x3E4a3a4796d16c0Cd582C382691998f7c06420B6": [
      "constructor(address _l1CanonicalToken, address[] bonders, address _governance)",
      "event BonderAdded(address indexed newBonder)",
      "event BonderRemoved(address indexed previousBonder)",
      "event ChallengeResolved(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event MultipleWithdrawalsSettled(address indexed bonder, bytes32 indexed rootHash, uint256 totalBondsSettled)",
      "event Stake(address indexed account, uint256 amount)",
      "event TransferBondChallenged(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event TransferRootBonded(bytes32 indexed root, uint256 amount)",
      "event TransferRootConfirmed(uint256 indexed originChainId, uint256 indexed destinationChainId, bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferRootSet(bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferSentToL2(uint256 indexed chainId, address indexed recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address indexed relayer, uint256 relayerFee)",
      "event Unstake(address indexed account, uint256 amount)",
      "event WithdrawalBondSettled(address indexed bonder, bytes32 indexed transferId, bytes32 indexed rootHash)",
      "event WithdrawalBonded(bytes32 indexed transferId, uint256 amount)",
      "event Withdrew(bytes32 indexed transferId, address indexed recipient, uint256 amount, bytes32 transferNonce)",
      "function CHALLENGE_AMOUNT_DIVISOR() view returns (uint256)",
      "function TIME_SLOT_SIZE() view returns (uint256)",
      "function addBonder(address bonder)",
      "function bondTransferRoot(bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount)",
      "function bondWithdrawal(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee)",
      "function chainBalance(uint256) view returns (uint256)",
      "function challengePeriod() view returns (uint256)",
      "function challengeResolutionPeriod() view returns (uint256)",
      "function challengeTransferBond(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId) payable",
      "function confirmTransferRoot(uint256 originChainId, bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount, uint256 rootCommittedAt)",
      "function crossDomainMessengerWrappers(uint256) view returns (address)",
      "function getBondForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getBondedWithdrawalAmount(address bonder, bytes32 transferId) view returns (uint256)",
      "function getChainId() view returns (uint256 chainId)",
      "function getChallengeAmountForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getCredit(address bonder) view returns (uint256)",
      "function getDebitAndAdditionalDebit(address bonder) view returns (uint256)",
      "function getIsBonder(address maybeBonder) view returns (bool)",
      "function getRawDebit(address bonder) view returns (uint256)",
      "function getTimeSlot(uint256 time) pure returns (uint256)",
      "function getTransferId(uint256 chainId, address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline) pure returns (bytes32)",
      "function getTransferRoot(bytes32 rootHash, uint256 totalAmount) view returns (tuple(uint256 total, uint256 amountWithdrawn, uint256 createdAt))",
      "function getTransferRootId(bytes32 rootHash, uint256 totalAmount) pure returns (bytes32)",
      "function governance() view returns (address)",
      "function isChainIdPaused(uint256) view returns (bool)",
      "function isTransferIdSpent(bytes32 transferId) view returns (bool)",
      "function l1CanonicalToken() view returns (address)",
      "function minTransferRootBondDelay() view returns (uint256)",
      "function removeBonder(address bonder)",
      "function rescueTransferRoot(bytes32 rootHash, uint256 originalAmount, address recipient)",
      "function resolveChallenge(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId)",
      "function sendToL2(uint256 chainId, address recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address relayer, uint256 relayerFee) payable",
      "function setChainIdDepositsPaused(uint256 chainId, bool isPaused)",
      "function setChallengePeriod(uint256 _challengePeriod)",
      "function setChallengeResolutionPeriod(uint256 _challengeResolutionPeriod)",
      "function setCrossDomainMessengerWrapper(uint256 chainId, address _crossDomainMessengerWrapper)",
      "function setGovernance(address _newGovernance)",
      "function setMinTransferRootBondDelay(uint256 _minTransferRootBondDelay)",
      "function settleBondedWithdrawal(address bonder, bytes32 transferId, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)",
      "function settleBondedWithdrawals(address bonder, bytes32[] transferIds, uint256 totalAmount)",
      "function stake(address bonder, uint256 amount) payable",
      "function timeSlotToAmountBonded(uint256, address) view returns (uint256)",
      "function transferBonds(bytes32) view returns (address bonder, uint256 createdAt, uint256 totalAmount, uint256 challengeStartTime, address challenger, bool challengeResolved)",
      "function transferRootCommittedAt(uint256, bytes32) view returns (uint256)",
      "function unstake(uint256 amount)",
      "function withdraw(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)"
    ],
    "0xb8901acB165ed027E32754E0FFe830802919727f": [
      "constructor(address[] bonders, address _governance)",
      "event BonderAdded(address indexed newBonder)",
      "event BonderRemoved(address indexed previousBonder)",
      "event ChallengeResolved(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event MultipleWithdrawalsSettled(address indexed bonder, bytes32 indexed rootHash, uint256 totalBondsSettled)",
      "event Stake(address indexed account, uint256 amount)",
      "event TransferBondChallenged(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event TransferRootBonded(bytes32 indexed root, uint256 amount)",
      "event TransferRootConfirmed(uint256 indexed originChainId, uint256 indexed destinationChainId, bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferRootSet(bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferSentToL2(uint256 indexed chainId, address indexed recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address indexed relayer, uint256 relayerFee)",
      "event Unstake(address indexed account, uint256 amount)",
      "event WithdrawalBondSettled(address indexed bonder, bytes32 indexed transferId, bytes32 indexed rootHash)",
      "event WithdrawalBonded(bytes32 indexed transferId, uint256 amount)",
      "event Withdrew(bytes32 indexed transferId, address indexed recipient, uint256 amount, bytes32 transferNonce)",
      "function CHALLENGE_AMOUNT_DIVISOR() view returns (uint256)",
      "function TIME_SLOT_SIZE() view returns (uint256)",
      "function addBonder(address bonder)",
      "function bondTransferRoot(bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount)",
      "function bondWithdrawal(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee)",
      "function chainBalance(uint256) view returns (uint256)",
      "function challengePeriod() view returns (uint256)",
      "function challengeResolutionPeriod() view returns (uint256)",
      "function challengeTransferBond(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId) payable",
      "function confirmTransferRoot(uint256 originChainId, bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount, uint256 rootCommittedAt)",
      "function crossDomainMessengerWrappers(uint256) view returns (address)",
      "function getBondForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getBondedWithdrawalAmount(address bonder, bytes32 transferId) view returns (uint256)",
      "function getChainId() view returns (uint256 chainId)",
      "function getChallengeAmountForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getCredit(address bonder) view returns (uint256)",
      "function getDebitAndAdditionalDebit(address bonder) view returns (uint256)",
      "function getIsBonder(address maybeBonder) view returns (bool)",
      "function getRawDebit(address bonder) view returns (uint256)",
      "function getTimeSlot(uint256 time) pure returns (uint256)",
      "function getTransferId(uint256 chainId, address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline) pure returns (bytes32)",
      "function getTransferRoot(bytes32 rootHash, uint256 totalAmount) view returns (tuple(uint256 total, uint256 amountWithdrawn, uint256 createdAt))",
      "function getTransferRootId(bytes32 rootHash, uint256 totalAmount) pure returns (bytes32)",
      "function governance() view returns (address)",
      "function isChainIdPaused(uint256) view returns (bool)",
      "function isTransferIdSpent(bytes32 transferId) view returns (bool)",
      "function minTransferRootBondDelay() view returns (uint256)",
      "function removeBonder(address bonder)",
      "function rescueTransferRoot(bytes32 rootHash, uint256 originalAmount, address recipient)",
      "function resolveChallenge(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId)",
      "function sendToL2(uint256 chainId, address recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address relayer, uint256 relayerFee) payable",
      "function setChainIdDepositsPaused(uint256 chainId, bool isPaused)",
      "function setChallengePeriod(uint256 _challengePeriod)",
      "function setChallengeResolutionPeriod(uint256 _challengeResolutionPeriod)",
      "function setCrossDomainMessengerWrapper(uint256 chainId, address _crossDomainMessengerWrapper)",
      "function setGovernance(address _newGovernance)",
      "function setMinTransferRootBondDelay(uint256 _minTransferRootBondDelay)",
      "function settleBondedWithdrawal(address bonder, bytes32 transferId, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)",
      "function settleBondedWithdrawals(address bonder, bytes32[] transferIds, uint256 totalAmount)",
      "function stake(address bonder, uint256 amount) payable",
      "function timeSlotToAmountBonded(uint256, address) view returns (uint256)",
      "function transferBonds(bytes32) view returns (address bonder, uint256 createdAt, uint256 totalAmount, uint256 challengeStartTime, address challenger, bool challengeResolved)",
      "function transferRootCommittedAt(uint256, bytes32) view returns (uint256)",
      "function unstake(uint256 amount)",
      "function withdraw(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)"
    ],
    "0xb98454270065A31D71Bf635F6F7Ee6A518dFb849": [
      "constructor(address _l1CanonicalToken, address[] bonders, address _governance)",
      "event BonderAdded(address indexed newBonder)",
      "event BonderRemoved(address indexed previousBonder)",
      "event ChallengeResolved(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event MultipleWithdrawalsSettled(address indexed bonder, bytes32 indexed rootHash, uint256 totalBondsSettled)",
      "event Stake(address indexed account, uint256 amount)",
      "event TransferBondChallenged(bytes32 indexed transferRootId, bytes32 indexed rootHash, uint256 originalAmount)",
      "event TransferRootBonded(bytes32 indexed root, uint256 amount)",
      "event TransferRootConfirmed(uint256 indexed originChainId, uint256 indexed destinationChainId, bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferRootSet(bytes32 indexed rootHash, uint256 totalAmount)",
      "event TransferSentToL2(uint256 indexed chainId, address indexed recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address indexed relayer, uint256 relayerFee)",
      "event Unstake(address indexed account, uint256 amount)",
      "event WithdrawalBondSettled(address indexed bonder, bytes32 indexed transferId, bytes32 indexed rootHash)",
      "event WithdrawalBonded(bytes32 indexed transferId, uint256 amount)",
      "event Withdrew(bytes32 indexed transferId, address indexed recipient, uint256 amount, bytes32 transferNonce)",
      "function CHALLENGE_AMOUNT_DIVISOR() view returns (uint256)",
      "function TIME_SLOT_SIZE() view returns (uint256)",
      "function addBonder(address bonder)",
      "function bondTransferRoot(bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount)",
      "function bondWithdrawal(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee)",
      "function chainBalance(uint256) view returns (uint256)",
      "function challengePeriod() view returns (uint256)",
      "function challengeResolutionPeriod() view returns (uint256)",
      "function challengeTransferBond(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId) payable",
      "function confirmTransferRoot(uint256 originChainId, bytes32 rootHash, uint256 destinationChainId, uint256 totalAmount, uint256 rootCommittedAt)",
      "function crossDomainMessengerWrappers(uint256) view returns (address)",
      "function getBondForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getBondedWithdrawalAmount(address bonder, bytes32 transferId) view returns (uint256)",
      "function getChainId() view returns (uint256 chainId)",
      "function getChallengeAmountForTransferAmount(uint256 amount) pure returns (uint256)",
      "function getCredit(address bonder) view returns (uint256)",
      "function getDebitAndAdditionalDebit(address bonder) view returns (uint256)",
      "function getIsBonder(address maybeBonder) view returns (bool)",
      "function getRawDebit(address bonder) view returns (uint256)",
      "function getTimeSlot(uint256 time) pure returns (uint256)",
      "function getTransferId(uint256 chainId, address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline) pure returns (bytes32)",
      "function getTransferRoot(bytes32 rootHash, uint256 totalAmount) view returns (tuple(uint256 total, uint256 amountWithdrawn, uint256 createdAt))",
      "function getTransferRootId(bytes32 rootHash, uint256 totalAmount) pure returns (bytes32)",
      "function governance() view returns (address)",
      "function isChainIdPaused(uint256) view returns (bool)",
      "function isTransferIdSpent(bytes32 transferId) view returns (bool)",
      "function l1CanonicalToken() view returns (address)",
      "function minTransferRootBondDelay() view returns (uint256)",
      "function removeBonder(address bonder)",
      "function rescueTransferRoot(bytes32 rootHash, uint256 originalAmount, address recipient)",
      "function resolveChallenge(bytes32 rootHash, uint256 originalAmount, uint256 destinationChainId)",
      "function sendToL2(uint256 chainId, address recipient, uint256 amount, uint256 amountOutMin, uint256 deadline, address relayer, uint256 relayerFee) payable",
      "function setChainIdDepositsPaused(uint256 chainId, bool isPaused)",
      "function setChallengePeriod(uint256 _challengePeriod)",
      "function setChallengeResolutionPeriod(uint256 _challengeResolutionPeriod)",
      "function setCrossDomainMessengerWrapper(uint256 chainId, address _crossDomainMessengerWrapper)",
      "function setGovernance(address _newGovernance)",
      "function setMinTransferRootBondDelay(uint256 _minTransferRootBondDelay)",
      "function settleBondedWithdrawal(address bonder, bytes32 transferId, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)",
      "function settleBondedWithdrawals(address bonder, bytes32[] transferIds, uint256 totalAmount)",
      "function stake(address bonder, uint256 amount) payable",
      "function timeSlotToAmountBonded(uint256, address) view returns (uint256)",
      "function transferBonds(bytes32) view returns (address bonder, uint256 createdAt, uint256 totalAmount, uint256 challengeStartTime, address challenger, bool challengeResolved)",
      "function transferRootCommittedAt(uint256, bytes32) view returns (uint256)",
      "function unstake(uint256 amount)",
      "function withdraw(address recipient, uint256 amount, bytes32 transferNonce, uint256 bonderFee, uint256 amountOutMin, uint256 deadline, bytes32 rootHash, uint256 transferRootTotalAmount, uint256 transferIdTreeIndex, bytes32[] siblings, uint256 totalLeaves)"
    ]
  }
}
