{
  "name": "skale-ima",
  "blockNumber": 17285666,
  "configHash": "0x767e92821009461fa9538617b11128ae1886259501501945f951ee14768f34c2",
  "contracts": [
    {
      "name": "SkaleToken",
      "address": "0x00c83aeCC790e8a4453e5dD3B0B4b3680501a7A7",
      "code": "https://etherscan.deth.net/address/0x00c83aeCC790e8a4453e5dD3B0B4b3680501a7A7",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "CAP": "7000000000000000000000000000",
        "contractManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "decimals": 18,
        "DECIMALS": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultOperators": [],
        "granularity": 1,
        "name": "SKALE",
        "NAME": "SKALE",
        "symbol": "SKL",
        "SYMBOL": "SKL",
        "totalSupply": "5031794766878268414876751365"
      }
    },
    {
      "name": "TimeHelpers",
      "address": "0x05946b1b80ce4DE235350d8955c5c751860D5399",
      "code": "https://etherscan.deth.net/address/0x05946b1b80ce4DE235350d8955c5c751860D5399,0x1803b11EA498e4074136B0334f845b39dC715aa9",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1803b11EA498e4074136B0334f845b39dC715aa9",
        "admin": "0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7"
      },
      "values": {
        "getCurrentMonth": 40,
        "monthToTimestamp": [
          1577836800, 1580515200, 1583020800, 1585699200, 1588291200
        ],
        "timestampToMonth": [],
        "timestampToYear": []
      },
      "errors": {
        "monthToTimestamp": "Too many values. Update configuration explore fully"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x13fD1622F0E7e50A87B79cb296cbAf18362631C0",
      "code": "https://etherscan.deth.net/address/0x13fD1622F0E7e50A87B79cb296cbAf18362631C0,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0xfe553e7fa2b6b6eabfd8b489f5d70c9409db0501fd37f91a9f6f48239e815eaa",
        "getChainId": 1,
        "getOwners": [
          "0x86EBB3994A558C27d19E2BADF5f98b99C478F98F",
          "0x3E8eba8D8E1BA34cB5780d541748438aA21b1245",
          "0x1c3c10544EDd69c9a09EDEcf05A4646293DCAedB",
          "0x315537a8004A7E598f807e8e0ce2F92e6a497E18",
          "0xE74ad5437C6CFB0cCD6bADda1F6b57b6E542E75e"
        ],
        "getThreshold": 3,
        "nonce": 296,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "ConstantsHolder",
      "address": "0x3d30A62AceEB6720312c3318D28620194e749e38",
      "code": "https://etherscan.deth.net/address/0x3d30A62AceEB6720312c3318D28620194e749e38,0x2a12a174adeC798bE38cc1A13dde35475F9Debb9",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x2a12a174adeC798bE38cc1A13dde35475F9Debb9",
        "admin": "0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7"
      },
      "values": {
        "ADJUSTMENT_SPEED": 1000,
        "allowableLatency": 150000,
        "ALRIGHT_DELTA": 134161,
        "BOUNTY_LOCKUP_MONTHS": 2,
        "BROADCAST_DELTA": 177490,
        "checkTime": 300,
        "COMPLAINT_BAD_DATA_DELTA": 80995,
        "COMPLAINT_DELTA": 104611,
        "complaintTimeLimit": 1065600,
        "CONSTANTS_HOLDER_MANAGER_ROLE": "0x901a4192020a5185129ea5dfd5d8e7c687626d09d2d74e45406202aef5ad43af",
        "contractManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "COOLDOWN_TIME": 60,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "deltaPeriod": 3600,
        "DOWNTIME_THRESHOLD_PART": 30,
        "firstDelegationsMonth": 8,
        "LARGE_DIVISOR": 1,
        "launchTimestamp": 1601510400,
        "limitValidatorsPerDelegator": 20,
        "MEDIUM_DIVISOR": 32,
        "MEDIUM_TEST_DIVISOR": 4,
        "MIN_PRICE": 1000000,
        "minimalSchainLifetime": 0,
        "msr": "20000000000000000000000000",
        "MSR_REDUCING_COEFFICIENT": 2,
        "NODE_DEPOSIT": "100000000000000000000",
        "NUMBER_OF_MONITORS": 24,
        "NUMBER_OF_NODES_FOR_MEDIUM_TEST_SCHAIN": 4,
        "NUMBER_OF_NODES_FOR_SCHAIN": 16,
        "NUMBER_OF_NODES_FOR_TEST_SCHAIN": 2,
        "OPTIMAL_LOAD_PERCENTAGE": 80,
        "PRE_RESPONSE_DELTA": 100061,
        "proofOfUseDelegationPercentage": 49,
        "proofOfUseLockUpPeriodDays": 60,
        "RESPONSE_DELTA": 49132,
        "rewardPeriod": 2246400,
        "rotationDelay": 43200,
        "schainCreationTimeStamp": 0,
        "SECONDS_TO_YEAR": 31622400,
        "SMALL_DIVISOR": 128,
        "TOTAL_SPACE_ON_NODE": 128
      }
    },
    {
      "name": "DepositBoxEth",
      "address": "0x49F583d263e4Ef938b9E09772D3394c71605Df94",
      "code": "https://etherscan.deth.net/address/0x49F583d263e4Ef938b9E09772D3394c71605Df94,0xfE6faFAC88150A23D946E53E9e2285aAB98A0d90",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xfE6faFAC88150A23D946E53E9e2285aAB98A0d90",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSIT_BOX_MANAGER_ROLE": "0xadc0611617a946881d948c7506bdf0975adbe0cfb172896a62eb6a75f21f2ff9",
        "linker": "0x6ef406953bac772C2146389ED37846BA3b6086D1",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404"
      }
    },
    {
      "name": "TokenState",
      "address": "0x4eE5F270572285776814e32952446e9B7Ee15C86",
      "code": "https://etherscan.deth.net/address/0x4eE5F270572285776814e32952446e9B7Ee15C86,0xFa67be664D34C7B2e3d360f831219a96185cb8Be",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xFa67be664D34C7B2e3d360f831219a96185cb8Be",
        "admin": "0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7"
      },
      "values": {
        "contractManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "LOCKER_MANAGER_ROLE": "0xeb112bc944073ac076a5dd136e56f3837622f936b5920aa63da4ddb9145b62f7"
      }
    },
    {
      "name": "DelegationPeriodManager",
      "address": "0x54a663E39621D2E644F6B9b6966CDf66db973ab3",
      "code": "https://etherscan.deth.net/address/0x54a663E39621D2E644F6B9b6966CDf66db973ab3,0x4C8033481B0fB8d3A83FC0986D02fa3Fc2f85400",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x4C8033481B0fB8d3A83FC0986D02fa3Fc2f85400",
        "admin": "0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7"
      },
      "values": {
        "contractManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DELEGATION_PERIOD_SETTER_ROLE": "0xb04c5b60092bea94ac86a0772fd162ee282808eafe282968b600bd07973dc260",
        "isDelegationPeriodAllowed": [false, false, true, false, false],
        "stakeMultipliers": [0, 0, 100, 0, 0]
      },
      "errors": {
        "isDelegationPeriodAllowed": "Too many values. Update configuration explore fully",
        "stakeMultipliers": "Too many values. Update configuration explore fully"
      }
    },
    {
      "name": "CommunityPool",
      "address": "0x588801cA36558310D91234aFC2511502282b1621",
      "code": "https://etherscan.deth.net/address/0x588801cA36558310D91234aFC2511502282b1621,0xAC1861ed87595E0AfF6C2bB9f8742D3308f48ba0",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xAC1861ed87595E0AfF6C2bB9f8742D3308f48ba0",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "CONSTANT_SETTER_ROLE": "0x96e3fc3be15159903e053027cff8a23f39a990e0194abcd8ac1cf1b355b8b93c",
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404",
        "minTransactionGas": 1000000,
        "multiplierDivider": 2,
        "multiplierNumerator": 3
      }
    },
    {
      "name": "Linker",
      "address": "0x6ef406953bac772C2146389ED37846BA3b6086D1",
      "code": "https://etherscan.deth.net/address/0x6ef406953bac772C2146389ED37846BA3b6086D1,0xEde996A9899b570dE70eaDE06Fa69621cE1470Be",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xEde996A9899b570dE70eaDE06Fa69621cE1470Be",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404"
      }
    },
    {
      "name": "BountyV2",
      "address": "0x801BA194f775a6CB0B5759FdDCe6A35e401787BF",
      "code": "https://etherscan.deth.net/address/0x801BA194f775a6CB0B5759FdDCe6A35e401787BF,0x55d53ad96fE2c989CA8aB3Eb7110f88Ba2f149Ea",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x55d53ad96fE2c989CA8aB3Eb7110f88Ba2f149Ea",
        "admin": "0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7"
      },
      "values": {
        "BOUNTY_REDUCTION_MANAGER_ROLE": "0xb4dfa5f0aba688c4e234bff5d34d47655ba3ad7086852346991862f4d562194d",
        "BOUNTY_WINDOW_SECONDS": 259200,
        "bountyReduction": false,
        "contractManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EPOCHS_PER_YEAR": 12,
        "estimateBounty": [0, 0, 0, 0, 0],
        "getEffectiveDelegatedSum": [
          "253707300443297658284747996700",
          "246349487420623859760286673200",
          "245035383495623859760286673200"
        ],
        "getNextRewardTimestamp": [
          1683158400, 1683158400, 1683158400, 1683158400, 1683158400
        ],
        "nodeCreationWindowSeconds": 259200,
        "nodesByValidator": [0, 0, 0, 0, 0],
        "SECONDS_PER_DAY": 86400,
        "YEAR1_BOUNTY": "385000000000000000000000000",
        "YEAR2_BOUNTY": "346500000000000000000000000",
        "YEAR3_BOUNTY": "308000000000000000000000000",
        "YEAR4_BOUNTY": "269500000000000000000000000",
        "YEAR5_BOUNTY": "231000000000000000000000000",
        "YEAR6_BOUNTY": "192500000000000000000000000"
      },
      "errors": {
        "estimateBounty": "Too many values. Update configuration explore fully",
        "getNextRewardTimestamp": "Too many values. Update configuration explore fully",
        "nodesByValidator": "Too many values. Update configuration explore fully"
      }
    },
    {
      "name": "ValidatorService",
      "address": "0x840C8122433A5AA7ad60C1Bcdc36AB9DcCF761a5",
      "code": "https://etherscan.deth.net/address/0x840C8122433A5AA7ad60C1Bcdc36AB9DcCF761a5,0xe84752BD2E367b1e9Ddf072DCaE9fD78D418D2Bb",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xe84752BD2E367b1e9Ddf072DCaE9fD78D418D2Bb",
        "admin": "0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7"
      },
      "values": {
        "contractManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getNodeAddresses": [
          [],
          [
            "0x6C04a57caCC8B91531082d3F7CCD5AcB0397fd11",
            "0x9cf924b074a9287FA84b13d656771FF3B45160CA",
            "0xA271c1849F2db1b1BB1F087A8322c24C4280271F",
            "0x208707ab38c09b9a134Ef740242b48bA61eb6534",
            "0xA9b44bcB12eD15fE87b977a54BA3A2F660FB79e5",
            "0x2f6b3D1C6f2643e775265Da7c78b316Ce716aE74",
            "0x3A1Cd9D198F621f1EedC227453Dc182bD1dd4644",
            "0xF3736990d07663dd8D3389777Ac7468235670709",
            "0x140cd9211b7974a5E8Fb161630874ce725eAfF5A",
            "0xA0449BdC22d52C72e5357A1f6505768F3Ef4b5e3",
            "0x6D4E8Ef24B02f5512A1f908c9C6c1B9cc157E8DF",
            "0xC5b2140346e214Bdca66075ABff75cF6184ac005",
            "0x9bE5Dc31637c67454cF80453b33dBE67Bac29dff",
            "0x3658A84e8bcdd49dea534972Eb7aC603B2775Bd9",
            "0x2a6FFB6d485Cc0e766E1724337532DA2f85a0922",
            "0x41B4660df10b6371aa0210D3681bcD40926822d6",
            "0xE58C16CE170682235cAF4B0d57fC3aDBEAA9324e"
          ],
          [],
          ["0x52F820b9511c39d7DEf42E9Bd1f4B7f07987eE59"],
          [
            "0x7BE1D42127AD638a67151dfc1a8B8deF604BfBC3",
            "0x953218a8D2d428caCfB870E2121cAAF73aa57089"
          ]
        ],
        "getTrustedValidators": [
          57, 23, 3, 4, 53, 6, 8, 9, 10, 11, 12, 13, 7, 14, 15, 16, 17, 18, 19,
          20, 21, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45,
          46, 47, 48, 49, 50, 51, 52, 54, 68, 56, 58, 61, 63, 64, 66, 67, 55
        ],
        "getValidator": [],
        "isAcceptingNewRequests": [],
        "isAuthorizedValidator": [],
        "numberOfValidators": 68,
        "trustedValidatorsList": [57, 23, 3, 4, 53],
        "useWhitelist": true,
        "VALIDATOR_MANAGER_ROLE": "0x87421e189bd94dc1673f0d5255fa9f0cb8ff65bb74e34e0a80b07e9f0b4e34d5",
        "validatorExists": [false, true, true, true, true],
        "validators": [
          [
            "",
            "0x0000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000",
            "",
            0,
            0,
            0,
            false
          ],
          [
            "validator-1",
            "0xd57EC37128Ca6B52f226574e396f43a01d831b65",
            "0x0000000000000000000000000000000000000000",
            "",
            150,
            1593532433,
            1000001,
            true
          ],
          [
            "Staked",
            "0x3937A9B521298D4c6D9d438cEFF396eD18DD7Bb6",
            "0x0000000000000000000000000000000000000000",
            "Staked runs secure and reliable infrastructure on the leading proof-of-stake blockchains",
            200,
            1600452530,
            "50000000000000000000000",
            true
          ],
          [
            "Cypher Core",
            "0xBeEB437EedE0e62A796D9e9C337f62746E925832",
            "0x0000000000000000000000000000000000000000",
            "We are devoted to bringing financial freedom to everyone.",
            150,
            1600470116,
            "1000000000000000000",
            true
          ],
          [
            "StakeWithUs",
            "0x278e093C7100376bAd789465E4B68F6175ff3e7D",
            "0x0000000000000000000000000000000000000000",
            "Secured Staking Made Easy. Put Your Crypto to Work - Hassle Free. Disclaimer: Delegators should understand that delegation comes with slashing risk. By delegating to StakeWithUs Pte Ltd, you acknowledge that StakeWithUs Pte Ltd is not liable for any losses on your investment.",
            150,
            1600485554,
            "10000000000000000000000",
            true
          ]
        ]
      },
      "errors": {
        "getMyNodesAddresses": "Execution reverted",
        "getNodeAddresses": "Too many values. Update configuration explore fully",
        "trustedValidatorsList": "Too many values. Update configuration explore fully",
        "validatorExists": "Too many values. Update configuration explore fully",
        "validators": "Too many values. Update configuration explore fully"
      }
    },
    {
      "name": "MessageProxyForMainnet",
      "address": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404",
      "code": "https://etherscan.deth.net/address/0x8629703a9903515818C2FeB45a6f6fA5df8Da404,0xC261084Dc6475d4980548Bd8C323FF825b3D0C38",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xC261084Dc6475d4980548Bd8C323FF825b3D0C38",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "CHAIN_CONNECTOR_ROLE": "0x2785f35fe7d8743aa971942d8474737bb31895d396eff2cc688a481e0221e191",
        "communityPool": "0x588801cA36558310D91234aFC2511502282b1621",
        "CONSTANT_SETTER_ROLE": "0x96e3fc3be15159903e053027cff8a23f39a990e0194abcd8ac1cf1b355b8b93c",
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXTRA_CONTRACT_REGISTRAR_ROLE": "0x6155b5aac15ce9aa193c0527a6f43be0a36a7e2e7496c2b615c0e5f922842773",
        "gasLimit": 1000000,
        "headerMessageGasCost": 92251,
        "MAINNET_HASH": "0x8d646f556e5d9d6f1edcf7a39b77f5ac253776eb34efcfd688aacbee518efc26",
        "messageGasCost": 9000,
        "messageInProgress": false,
        "MESSAGES_LENGTH": 10,
        "PAUSABLE_ROLE": "0x09b6fca8f5f3ab2900d9586d1d15872611c1bd42b268b973ad886d4f2646b560",
        "REVERT_REASON_LENGTH": 64,
        "version": "1.4.0"
      }
    },
    {
      "name": "DepositBoxERC20",
      "address": "0x8fB1A35bB6fB9c47Fb5065BE5062cB8dC1687669",
      "code": "https://etherscan.deth.net/address/0x8fB1A35bB6fB9c47Fb5065BE5062cB8dC1687669,0x778B105215e59e4731CcBDcB0A54C367FD3897a1",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x778B105215e59e4731CcBDcB0A54C367FD3897a1",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "ARBITER_ROLE": "0xbb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae",
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "delayedTransfers": [
          [
            "0x0000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000",
            0,
            0,
            0
          ],
          [
            "0x0000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000",
            0,
            0,
            0
          ],
          [
            "0x0000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000",
            0,
            0,
            0
          ],
          [
            "0x0000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000",
            0,
            0,
            0
          ],
          [
            "0x0000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000000000000000000000000000",
            "0x0000000000000000000000000000000000000000",
            0,
            0,
            0
          ]
        ],
        "delayedTransfersSize": 0,
        "DEPOSIT_BOX_MANAGER_ROLE": "0xadc0611617a946881d948c7506bdf0975adbe0cfb172896a62eb6a75f21f2ff9",
        "linker": "0x6ef406953bac772C2146389ED37846BA3b6086D1",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404"
      },
      "errors": {
        "delayedTransfers": "Too many values. Update configuration explore fully"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627",
      "code": "https://etherscan.deth.net/address/0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0x13fD1622F0E7e50A87B79cb296cbAf18362631C0"
      }
    },
    {
      "name": "Punisher",
      "address": "0xbcA0eCdD44203DE76AF389d5F9931015529b7F1E",
      "code": "https://etherscan.deth.net/address/0xbcA0eCdD44203DE76AF389d5F9931015529b7F1E,0x0FbA6b989185A5D0172F6d4D674Dc1dE5d880678",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x0FbA6b989185A5D0172F6d4D674Dc1dE5d880678",
        "admin": "0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7"
      },
      "values": {
        "contractManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "FORGIVER_ROLE": "0x8640281ac370904a4267a0127cbe6cb5ec1a7428689f20a279e1b883c3886d76"
      }
    },
    {
      "name": "ContractManager",
      "address": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
      "code": "https://etherscan.deth.net/address/0xC04A10Fd5e6513242558f47331568aBD6185a310,0xDA2918c2Fd86A97E09E555dE6Ca395F9414c1d94",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xDA2918c2Fd86A97E09E555dE6Ca395F9414c1d94",
        "admin": "0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7"
      },
      "values": {
        "BOUNTY": "Bounty",
        "CONSTANTS_HOLDER": "ConstantsHolder",
        "DELEGATION_PERIOD_MANAGER": "DelegationPeriodManager",
        "getBounty": "0x801BA194f775a6CB0B5759FdDCe6A35e401787BF",
        "getConstantsHolder": "0x3d30A62AceEB6720312c3318D28620194e749e38",
        "getDelegationPeriodManager": "0x54a663E39621D2E644F6B9b6966CDf66db973ab3",
        "getPunisher": "0xbcA0eCdD44203DE76AF389d5F9931015529b7F1E",
        "getSkaleToken": "0x00c83aeCC790e8a4453e5dD3B0B4b3680501a7A7",
        "getTimeHelpers": "0x05946b1b80ce4DE235350d8955c5c751860D5399",
        "getTokenState": "0x4eE5F270572285776814e32952446e9B7Ee15C86",
        "getValidatorService": "0x840C8122433A5AA7ad60C1Bcdc36AB9DcCF761a5",
        "owner": "0x13fD1622F0E7e50A87B79cb296cbAf18362631C0",
        "PUNISHER": "Punisher",
        "SKALE_TOKEN": "SkaleToken",
        "TIME_HELPERS": "TimeHelpers",
        "TOKEN_STATE": "TokenState",
        "VALIDATOR_SERVICE": "ValidatorService"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7",
      "code": "https://etherscan.deth.net/address/0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "isOwner": false,
        "owner": "0x13fD1622F0E7e50A87B79cb296cbAf18362631C0"
      }
    }
  ],
  "eoas": [
    "0x140cd9211b7974a5E8Fb161630874ce725eAfF5A",
    "0x1c3c10544EDd69c9a09EDEcf05A4646293DCAedB",
    "0x208707ab38c09b9a134Ef740242b48bA61eb6534",
    "0x278e093C7100376bAd789465E4B68F6175ff3e7D",
    "0x2a6FFB6d485Cc0e766E1724337532DA2f85a0922",
    "0x2f6b3D1C6f2643e775265Da7c78b316Ce716aE74",
    "0x315537a8004A7E598f807e8e0ce2F92e6a497E18",
    "0x3658A84e8bcdd49dea534972Eb7aC603B2775Bd9",
    "0x3937A9B521298D4c6D9d438cEFF396eD18DD7Bb6",
    "0x3A1Cd9D198F621f1EedC227453Dc182bD1dd4644",
    "0x3E8eba8D8E1BA34cB5780d541748438aA21b1245",
    "0x41B4660df10b6371aa0210D3681bcD40926822d6",
    "0x52F820b9511c39d7DEf42E9Bd1f4B7f07987eE59",
    "0x6C04a57caCC8B91531082d3F7CCD5AcB0397fd11",
    "0x6D4E8Ef24B02f5512A1f908c9C6c1B9cc157E8DF",
    "0x7BE1D42127AD638a67151dfc1a8B8deF604BfBC3",
    "0x86EBB3994A558C27d19E2BADF5f98b99C478F98F",
    "0x953218a8D2d428caCfB870E2121cAAF73aa57089",
    "0x9bE5Dc31637c67454cF80453b33dBE67Bac29dff",
    "0x9cf924b074a9287FA84b13d656771FF3B45160CA",
    "0xA0449BdC22d52C72e5357A1f6505768F3Ef4b5e3",
    "0xA271c1849F2db1b1BB1F087A8322c24C4280271F",
    "0xA9b44bcB12eD15fE87b977a54BA3A2F660FB79e5",
    "0xBeEB437EedE0e62A796D9e9C337f62746E925832",
    "0xC5b2140346e214Bdca66075ABff75cF6184ac005",
    "0xd57EC37128Ca6B52f226574e396f43a01d831b65",
    "0xE58C16CE170682235cAF4B0d57fC3aDBEAA9324e",
    "0xE74ad5437C6CFB0cCD6bADda1F6b57b6E542E75e",
    "0xF3736990d07663dd8D3389777Ac7468235670709"
  ],
  "abis": {
    "0x00c83aeCC790e8a4453e5dD3B0B4b3680501a7A7": [
      "constructor(address contractsAddress, address[] defOps)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AuthorizedOperator(address indexed operator, address indexed tokenHolder)",
      "event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData)",
      "event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData)",
      "event RevokedOperator(address indexed operator, address indexed tokenHolder)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Sent(address indexed operator, address indexed from, address indexed to, uint256 amount, bytes data, bytes operatorData)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function CAP() view returns (uint256)",
      "function DECIMALS() view returns (uint256)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function NAME() view returns (string)",
      "function SYMBOL() view returns (string)",
      "function allowance(address holder, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function authorizeOperator(address operator)",
      "function balanceOf(address tokenHolder) view returns (uint256)",
      "function burn(uint256 amount, bytes data)",
      "function contractManager() view returns (address)",
      "function decimals() pure returns (uint8)",
      "function defaultOperators() view returns (address[])",
      "function getAndUpdateDelegatedAmount(address wallet) returns (uint256)",
      "function getAndUpdateLockedAmount(address wallet) returns (uint256)",
      "function getAndUpdateSlashedAmount(address wallet) returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function granularity() view returns (uint256)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address contractManagerAddress)",
      "function isOperatorFor(address operator, address tokenHolder) view returns (bool)",
      "function mint(address account, uint256 amount, bytes userData, bytes operatorData) returns (bool)",
      "function name() view returns (string)",
      "function operatorBurn(address account, uint256 amount, bytes data, bytes operatorData)",
      "function operatorSend(address sender, address recipient, uint256 amount, bytes data, bytes operatorData)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeOperator(address operator)",
      "function revokeRole(bytes32 role, address account)",
      "function send(address recipient, uint256 amount, bytes data)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address holder, address recipient, uint256 amount) returns (bool)"
    ],
    "0x05946b1b80ce4DE235350d8955c5c751860D5399": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() returns (address)",
      "constructor(address _logic, address _admin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x0FbA6b989185A5D0172F6d4D674Dc1dE5d880678": [
      "event Forgive(address wallet, uint256 amount)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Slash(uint256 validatorId, uint256 amount)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function FORGIVER_ROLE() view returns (bytes32)",
      "function contractManager() view returns (address)",
      "function forgive(address holder, uint256 amount)",
      "function getAndUpdateForbiddenForDelegationAmount(address wallet) returns (uint256)",
      "function getAndUpdateLockedAmount(address wallet) returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function handleSlash(address holder, uint256 amount)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address contractManagerAddress)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function slash(uint256 validatorId, uint256 amount)"
    ],
    "0x13fD1622F0E7e50A87B79cb296cbAf18362631C0": [
      "constructor(address _masterCopy)"
    ],
    "0x1803b11EA498e4074136B0334f845b39dC715aa9": [
      "function addDays(uint256 fromTimestamp, uint256 n) pure returns (uint256)",
      "function addMonths(uint256 fromTimestamp, uint256 n) pure returns (uint256)",
      "function addYears(uint256 fromTimestamp, uint256 n) pure returns (uint256)",
      "function calculateProofOfUseLockEndTime(uint256 month, uint256 lockUpPeriodDays) view returns (uint256 timestamp)",
      "function getCurrentMonth() view returns (uint256)",
      "function monthToTimestamp(uint256 month) view returns (uint256 timestamp)",
      "function timestampToMonth(uint256 timestamp) view returns (uint256)",
      "function timestampToYear(uint256 timestamp) view returns (uint256)"
    ],
    "0x2a12a174adeC798bE38cc1A13dde35475F9Debb9": [
      "event ConstantUpdated(bytes32 indexed constantHash, uint256 previousValue, uint256 newValue)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function ADJUSTMENT_SPEED() view returns (uint256)",
      "function ALRIGHT_DELTA() view returns (uint256)",
      "function BOUNTY_LOCKUP_MONTHS() view returns (uint256)",
      "function BROADCAST_DELTA() view returns (uint256)",
      "function COMPLAINT_BAD_DATA_DELTA() view returns (uint256)",
      "function COMPLAINT_DELTA() view returns (uint256)",
      "function CONSTANTS_HOLDER_MANAGER_ROLE() view returns (bytes32)",
      "function COOLDOWN_TIME() view returns (uint256)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOWNTIME_THRESHOLD_PART() view returns (uint256)",
      "function LARGE_DIVISOR() view returns (uint8)",
      "function MEDIUM_DIVISOR() view returns (uint8)",
      "function MEDIUM_TEST_DIVISOR() view returns (uint8)",
      "function MIN_PRICE() view returns (uint256)",
      "function MSR_REDUCING_COEFFICIENT() view returns (uint256)",
      "function NODE_DEPOSIT() view returns (uint256)",
      "function NUMBER_OF_MONITORS() view returns (uint256)",
      "function NUMBER_OF_NODES_FOR_MEDIUM_TEST_SCHAIN() view returns (uint256)",
      "function NUMBER_OF_NODES_FOR_SCHAIN() view returns (uint256)",
      "function NUMBER_OF_NODES_FOR_TEST_SCHAIN() view returns (uint256)",
      "function OPTIMAL_LOAD_PERCENTAGE() view returns (uint256)",
      "function PRE_RESPONSE_DELTA() view returns (uint256)",
      "function RESPONSE_DELTA() view returns (uint256)",
      "function SECONDS_TO_YEAR() view returns (uint32)",
      "function SMALL_DIVISOR() view returns (uint8)",
      "function TOTAL_SPACE_ON_NODE() view returns (uint8)",
      "function allowableLatency() view returns (uint32)",
      "function checkTime() view returns (uint256)",
      "function complaintTimeLimit() view returns (uint256)",
      "function contractManager() view returns (address)",
      "function deltaPeriod() view returns (uint32)",
      "function firstDelegationsMonth() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address contractsAddress)",
      "function launchTimestamp() view returns (uint256)",
      "function limitValidatorsPerDelegator() view returns (uint256)",
      "function minimalSchainLifetime() view returns (uint256)",
      "function msr() view returns (uint256)",
      "function proofOfUseDelegationPercentage() view returns (uint256)",
      "function proofOfUseLockUpPeriodDays() view returns (uint256)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function rewardPeriod() view returns (uint32)",
      "function rotationDelay() view returns (uint256)",
      "function schainCreationTimeStamp() view returns (uint256)",
      "function setCheckTime(uint256 newCheckTime)",
      "function setComplaintTimeLimit(uint256 timeLimit)",
      "function setLatency(uint32 newAllowableLatency)",
      "function setLaunchTimestamp(uint256 timestamp)",
      "function setLimitValidatorsPerDelegator(uint256 newLimit)",
      "function setMSR(uint256 newMSR)",
      "function setMinimalSchainLifetime(uint256 lifetime)",
      "function setPeriods(uint32 newRewardPeriod, uint32 newDeltaPeriod)",
      "function setProofOfUseDelegationPercentage(uint256 percentage)",
      "function setProofOfUseLockUpPeriod(uint256 periodDays)",
      "function setRotationDelay(uint256 newDelay)",
      "function setSchainCreationTimeStamp(uint256 timestamp)"
    ],
    "0x3d30A62AceEB6720312c3318D28620194e749e38": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() returns (address)",
      "constructor(address _logic, address _admin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x49F583d263e4Ef938b9E09772D3394c71605Df94": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x4C8033481B0fB8d3A83FC0986D02fa3Fc2f85400": [
      "event DelegationPeriodWasSet(uint256 length, uint256 stakeMultiplier)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DELEGATION_PERIOD_SETTER_ROLE() view returns (bytes32)",
      "function contractManager() view returns (address)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address contractsAddress)",
      "function isDelegationPeriodAllowed(uint256 monthsCount) view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setDelegationPeriod(uint256 monthsCount, uint256 stakeMultiplier)",
      "function stakeMultipliers(uint256) view returns (uint256)"
    ],
    "0x4eE5F270572285776814e32952446e9B7Ee15C86": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() returns (address)",
      "constructor(address _logic, address _admin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x54a663E39621D2E644F6B9b6966CDf66db973ab3": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() returns (address)",
      "constructor(address _logic, address _admin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x55d53ad96fE2c989CA8aB3Eb7110f88Ba2f149Ea": [
      "event BountyReduction(bool status)",
      "event NodeCreationWindowWasChanged(uint256 oldValue, uint256 newValue)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function BOUNTY_REDUCTION_MANAGER_ROLE() view returns (bytes32)",
      "function BOUNTY_WINDOW_SECONDS() view returns (uint256)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EPOCHS_PER_YEAR() view returns (uint256)",
      "function SECONDS_PER_DAY() view returns (uint256)",
      "function YEAR1_BOUNTY() view returns (uint256)",
      "function YEAR2_BOUNTY() view returns (uint256)",
      "function YEAR3_BOUNTY() view returns (uint256)",
      "function YEAR4_BOUNTY() view returns (uint256)",
      "function YEAR5_BOUNTY() view returns (uint256)",
      "function YEAR6_BOUNTY() view returns (uint256)",
      "function bountyReduction() view returns (bool)",
      "function calculateBounty(uint256 nodeIndex) returns (uint256)",
      "function contractManager() view returns (address)",
      "function disableBountyReduction()",
      "function enableBountyReduction()",
      "function estimateBounty(uint256 nodeIndex) view returns (uint256)",
      "function getEffectiveDelegatedSum() view returns (uint256[])",
      "function getNextRewardTimestamp(uint256 nodeIndex) view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function handleDelegationAdd(uint256 amount, uint256 month)",
      "function handleDelegationRemoving(uint256 amount, uint256 month)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address contractManagerAddress)",
      "function nodeCreationWindowSeconds() view returns (uint256)",
      "function nodesByValidator(uint256) view returns (uint256)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setNodeCreationWindowSeconds(uint256 window)"
    ],
    "0x588801cA36558310D91234aFC2511502282b1621": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x6ef406953bac772C2146389ED37846BA3b6086D1": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x778B105215e59e4731CcBDcB0A54C367FD3897a1": [
      "error Empty()",
      "error OutOfBounds()",
      "event ArbitrageDurationIsChanged(bytes32 indexed schainHash, uint256 oldValue, uint256 newValue)",
      "event BigTransferDelayIsChanged(bytes32 indexed schainHash, uint256 oldValue, uint256 newValue)",
      "event BigTransferThresholdIsChanged(bytes32 indexed schainHash, address indexed token, uint256 oldValue, uint256 newValue)",
      "event ERC20TokenAdded(string schainName, address indexed contractOnMainnet)",
      "event ERC20TokenReady(address indexed contractOnMainnet, uint256 amount)",
      "event Escalated(uint256 id)",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event TransferDelayed(uint256 id, address receiver, address token, uint256 amount)",
      "event TransferSkipped(uint256 id)",
      "function ARBITER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSIT_BOX_MANAGER_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function addERC20TokenByOwner(string schainName, address erc20OnMainnet)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function delayedTransfers(uint256) view returns (address receiver, bytes32 schainHash, address token, uint256 amount, uint256 untilTimestamp, uint8 status)",
      "function delayedTransfersByReceiver(address) view returns (int128 _begin, int128 _end)",
      "function delayedTransfersSize() view returns (uint256)",
      "function depositERC20(string schainName, address erc20OnMainnet, uint256 amount)",
      "function depositERC20Direct(string schainName, address erc20OnMainnet, uint256 amount, address receiver)",
      "function disableWhitelist(string schainName)",
      "function doTransfer(address token, address receiver, uint256 amount)",
      "function enableWhitelist(string schainName)",
      "function escalate(uint256 transferId)",
      "function gasPayer(bytes32 schainHash, address sender, bytes data) view returns (address)",
      "function getArbitrageDuration(bytes32 schainHash) view returns (uint256)",
      "function getBigTransferThreshold(bytes32 schainHash, address token) view returns (uint256)",
      "function getDelayedAmount(address receiver, address token) view returns (uint256 value)",
      "function getFunds(string schainName, address erc20OnMainnet, address receiver, uint256 amount)",
      "function getNextUnlockTimestamp(address receiver, address token) view returns (uint256 unlockTimestamp)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getSchainToAllERC20(string schainName, uint256 from, uint256 to) view returns (address[] tokensInRange)",
      "function getSchainToAllERC20Length(string schainName) view returns (uint256)",
      "function getSchainToERC20(string schainName, address erc20OnMainnet) view returns (bool)",
      "function getTimeDelay(bytes32 schainHash) view returns (uint256)",
      "function getTrustedReceiver(string schainName, uint256 index) view returns (address)",
      "function getTrustedReceiversAmount(bytes32 schainHash) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address newMessageProxy)",
      "function initialize(address contractManagerOfSkaleManagerValue, address linkerValue, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isReceiverTrusted(bytes32 schainHash, address receiver) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function isWhitelisted(string schainName) view returns (bool)",
      "function linker() view returns (address)",
      "function messageProxy() view returns (address)",
      "function postMessage(bytes32 schainHash, address sender, bytes data)",
      "function rejectTransfer(uint256 transferId)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function retrieve()",
      "function retrieveFor(address receiver)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function setArbitrageDuration(string schainName, uint256 delayInSeconds)",
      "function setBigTransferDelay(string schainName, uint256 delayInSeconds)",
      "function setBigTransferValue(string schainName, address token, uint256 value)",
      "function stopTrustingReceiver(string schainName, address receiver)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferredAmount(bytes32, address) view returns (uint256)",
      "function trustReceiver(string schainName, address receiver)",
      "function validateTransfer(uint256 transferId)"
    ],
    "0x801BA194f775a6CB0B5759FdDCe6A35e401787BF": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() returns (address)",
      "constructor(address _logic, address _admin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x840C8122433A5AA7ad60C1Bcdc36AB9DcCF761a5": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() returns (address)",
      "constructor(address _logic, address _admin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x8629703a9903515818C2FeB45a6f6fA5df8Da404": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8fB1A35bB6fB9c47Fb5065BE5062cB8dC1687669": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xAC1861ed87595E0AfF6C2bB9f8742D3308f48ba0": [
      "event Initialized(uint8 version)",
      "event MinTransactionGasWasChanged(uint256 oldValue, uint256 newValue)",
      "event MultiplierWasChanged(uint256 oldMultiplierNumerator, uint256 oldMultiplierDivider, uint256 newMultiplierNumerator, uint256 newMultiplierDivider)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CONSTANT_SETTER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function activeUsers(address, bytes32) view returns (bool)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function checkUserBalance(bytes32 schainHash, address receiver) view returns (bool)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function getBalance(address user, string schainName) view returns (uint256)",
      "function getRecommendedRechargeAmount(bytes32 schainHash, address receiver) view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address newMessageProxy)",
      "function initialize(address contractManagerOfSkaleManagerValue, address linker, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function messageProxy() view returns (address)",
      "function minTransactionGas() view returns (uint256)",
      "function multiplierDivider() view returns (uint256)",
      "function multiplierNumerator() view returns (uint256)",
      "function rechargeUserWallet(string schainName, address user) payable",
      "function refundGasBySchainWallet(bytes32 schainHash, address node, uint256 gas) returns (bool)",
      "function refundGasByUser(bytes32 schainHash, address node, address user, uint256 gas) returns (uint256)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function setMinTransactionGas(uint256 newMinTransactionGas)",
      "function setMultiplier(uint256 newMultiplierNumerator, uint256 newMultiplierDivider)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function withdrawFunds(string schainName, uint256 amount)"
    ],
    "0xbcA0eCdD44203DE76AF389d5F9931015529b7F1E": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() returns (address)",
      "constructor(address _logic, address _admin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xC04A10Fd5e6513242558f47331568aBD6185a310": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() returns (address)",
      "constructor(address _logic, address _admin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xC261084Dc6475d4980548Bd8C323FF825b3D0C38": [
      "event ExtraContractRegistered(bytes32 indexed chainHash, address contractAddress)",
      "event ExtraContractRemoved(bytes32 indexed chainHash, address contractAddress)",
      "event GasCostMessageHeaderWasChanged(uint256 oldValue, uint256 newValue)",
      "event GasCostMessageWasChanged(uint256 oldValue, uint256 newValue)",
      "event GasLimitWasChanged(uint256 oldValue, uint256 newValue)",
      "event Initialized(uint8 version)",
      "event OutgoingMessage(bytes32 indexed dstChainHash, uint256 indexed msgCounter, address indexed srcContract, address dstContract, bytes data)",
      "event PostMessageError(uint256 indexed msgCounter, bytes message)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SchainPaused(bytes32 indexed schainHash)",
      "event SchainResumed(bytes32 indexed schainHash)",
      "event VersionUpdated(string oldVersion, string newVersion)",
      "function CHAIN_CONNECTOR_ROLE() view returns (bytes32)",
      "function CONSTANT_SETTER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXTRA_CONTRACT_REGISTRAR_ROLE() view returns (bytes32)",
      "function MAINNET_HASH() view returns (bytes32)",
      "function MESSAGES_LENGTH() view returns (uint256)",
      "function PAUSABLE_ROLE() view returns (bytes32)",
      "function REVERT_REASON_LENGTH() view returns (uint256)",
      "function addConnectedChain(string schainName)",
      "function communityPool() view returns (address)",
      "function connectedChains(bytes32) view returns (uint256 incomingMessageCounter, uint256 outgoingMessageCounter, bool inited)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function gasLimit() view returns (uint256)",
      "function getContractRegisteredLength(bytes32 schainHash) view returns (uint256)",
      "function getContractRegisteredRange(bytes32 schainHash, uint256 from, uint256 to) view returns (address[] contractsInRange)",
      "function getIncomingMessagesCounter(string fromSchainName) view returns (uint256)",
      "function getOutgoingMessagesCounter(string targetSchainName) view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function headerMessageGasCost() view returns (uint256)",
      "function initialize(address contractManagerOfSkaleManagerValue)",
      "function initializeMessageProxy(uint256 newGasLimit)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isConnectedChain(string schainName) view returns (bool)",
      "function isContractRegistered(bytes32 schainHash, address contractAddress) view returns (bool)",
      "function isPaused(bytes32 schainHash) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function messageGasCost() view returns (uint256)",
      "function messageInProgress() view returns (bool)",
      "function pause(string schainName)",
      "function pauseInfo(bytes32) view returns (bool paused)",
      "function postIncomingMessages(string fromSchainName, uint256 startingCounter, tuple(address sender, address destinationContract, bytes data)[] messages, tuple(uint256[2] blsSignature, uint256 hashA, uint256 hashB, uint256 counter) sign)",
      "function postOutgoingMessage(bytes32 targetChainHash, address targetContract, bytes data)",
      "function registerExtraContract(string schainName, address extraContract)",
      "function registerExtraContractForAll(address extraContract)",
      "function removeConnectedChain(string schainName)",
      "function removeExtraContract(string schainName, address extraContract)",
      "function removeExtraContractForAll(address extraContract)",
      "function renounceRole(bytes32 role, address account)",
      "function resume(string schainName)",
      "function revokeRole(bytes32 role, address account)",
      "function setCommunityPool(address newCommunityPoolAddress)",
      "function setNewGasLimit(uint256 newGasLimit)",
      "function setNewHeaderMessageGasCost(uint256 newHeaderMessageGasCost)",
      "function setNewMessageGasCost(uint256 newMessageGasCost)",
      "function setVersion(string newVersion)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function version() view returns (string)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xDA2918c2Fd86A97E09E555dE6Ca395F9414c1d94": [
      "event ContractUpgraded(string contractsName, address contractsAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function BOUNTY() view returns (string)",
      "function CONSTANTS_HOLDER() view returns (string)",
      "function DELEGATION_PERIOD_MANAGER() view returns (string)",
      "function PUNISHER() view returns (string)",
      "function SKALE_TOKEN() view returns (string)",
      "function TIME_HELPERS() view returns (string)",
      "function TOKEN_STATE() view returns (string)",
      "function VALIDATOR_SERVICE() view returns (string)",
      "function contracts(bytes32) view returns (address)",
      "function getBounty() view returns (address)",
      "function getConstantsHolder() view returns (address)",
      "function getContract(string name) view returns (address contractAddress)",
      "function getDelegationPeriodManager() view returns (address)",
      "function getPunisher() view returns (address)",
      "function getSkaleToken() view returns (address)",
      "function getTimeHelpers() view returns (address)",
      "function getTokenState() view returns (address)",
      "function getValidatorService() view returns (address)",
      "function initialize()",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setContractsAddress(string contractsName, address newContractsAddress)",
      "function transferOwnership(address newOwner)"
    ],
    "0xe84752BD2E367b1e9Ddf072DCaE9fD78D418D2Bb": [
      "event AcceptingNewRequests(uint256 indexed validatorId, bool status)",
      "event NodeAddressWasAdded(uint256 validatorId, address nodeAddress)",
      "event NodeAddressWasRemoved(uint256 validatorId, address nodeAddress)",
      "event RequestNewAddress(uint256 indexed validatorId, address previousAddress, address newAddress)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SetMinimumDelegationAmount(uint256 indexed validatorId, uint256 previousMDA, uint256 newMDA)",
      "event SetValidatorDescription(uint256 indexed validatorId, string previousDescription, string newDescription)",
      "event SetValidatorName(uint256 indexed validatorId, string previousName, string newName)",
      "event ValidatorAddressChanged(uint256 validatorId, address newAddress)",
      "event ValidatorRegistered(uint256 validatorId)",
      "event ValidatorWasDisabled(uint256 validatorId)",
      "event ValidatorWasEnabled(uint256 validatorId)",
      "event WhitelistDisabled(bool status)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function VALIDATOR_MANAGER_ROLE() view returns (bytes32)",
      "function checkIfValidatorAddressExists(address validatorAddress) view",
      "function checkValidatorAddressToId(address validatorAddress, uint256 validatorId) view returns (bool)",
      "function checkValidatorCanReceiveDelegation(uint256 validatorId, uint256 amount) view",
      "function confirmNewAddress(uint256 validatorId)",
      "function contractManager() view returns (address)",
      "function disableValidator(uint256 validatorId)",
      "function disableWhitelist()",
      "function enableValidator(uint256 validatorId)",
      "function getAndUpdateBondAmount(uint256 validatorId) returns (uint256)",
      "function getMyNodesAddresses() view returns (address[])",
      "function getNodeAddresses(uint256 validatorId) view returns (address[])",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getTrustedValidators() view returns (uint256[])",
      "function getValidator(uint256 validatorId) view returns (tuple(string name, address validatorAddress, address requestedAddress, string description, uint256 feeRate, uint256 registrationTime, uint256 minimumDelegationAmount, bool acceptNewRequests))",
      "function getValidatorId(address validatorAddress) view returns (uint256)",
      "function getValidatorIdByNodeAddress(address nodeAddress) view returns (uint256 validatorId)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address contractManagerAddress)",
      "function isAcceptingNewRequests(uint256 validatorId) view returns (bool)",
      "function isAuthorizedValidator(uint256 validatorId) view returns (bool)",
      "function linkNodeAddress(address nodeAddress, bytes sig)",
      "function numberOfValidators() view returns (uint256)",
      "function registerValidator(string name, string description, uint256 feeRate, uint256 minimumDelegationAmount) returns (uint256 validatorId)",
      "function removeNodeAddress(uint256 validatorId, address nodeAddress)",
      "function renounceRole(bytes32 role, address account)",
      "function requestForNewAddress(address newValidatorAddress)",
      "function revokeRole(bytes32 role, address account)",
      "function setValidatorDescription(string newDescription)",
      "function setValidatorMDA(uint256 minimumDelegationAmount)",
      "function setValidatorName(string newName)",
      "function startAcceptingNewRequests()",
      "function stopAcceptingNewRequests()",
      "function trustedValidatorsList(uint256) view returns (uint256)",
      "function unlinkNodeAddress(address nodeAddress)",
      "function useWhitelist() view returns (bool)",
      "function validatorAddressExists(address validatorAddress) view returns (bool)",
      "function validatorExists(uint256 validatorId) view returns (bool)",
      "function validators(uint256) view returns (string name, address validatorAddress, address requestedAddress, string description, uint256 feeRate, uint256 registrationTime, uint256 minimumDelegationAmount, bool acceptNewRequests)"
    ],
    "0xEde996A9899b570dE70eaDE06Fa69621cE1470Be": [
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function connectSchain(string schainName, address[] schainContracts)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function disconnectSchain(string schainName)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasMainnetContract(address mainnetContract) view returns (bool)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchain(string schainName) view returns (bool connected)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isNotKilled(bytes32 schainHash) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function kill(string schainName)",
      "function messageProxy() view returns (address)",
      "function registerMainnetContract(address newMainnetContract)",
      "function removeMainnetContract(address mainnetContract)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function statuses(bytes32) view returns (uint8)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0xf3F8B7594Bf20A0e9502B3191cd4C2B90A1aB4F7": [
      "function getProxyImplementation(address proxy) view returns (address)",
      "function renounceOwnership()",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function owner() view returns (address)",
      "function isOwner() view returns (bool)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable",
      "function upgrade(address proxy, address implementation)",
      "function transferOwnership(address newOwner)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)"
    ],
    "0xFa67be664D34C7B2e3d360f831219a96185cb8Be": [
      "event LockerWasAdded(string locker)",
      "event LockerWasRemoved(string locker)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function LOCKER_MANAGER_ROLE() view returns (bytes32)",
      "function addLocker(string locker)",
      "function contractManager() view returns (address)",
      "function getAndUpdateForbiddenForDelegationAmount(address holder) returns (uint256 amount)",
      "function getAndUpdateLockedAmount(address holder) returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address contractManagerAddress)",
      "function removeLocker(string locker)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)"
    ],
    "0xfE6faFAC88150A23D946E53E9e2285aAB98A0d90": [
      "event ActiveEthTransfers(bytes32 indexed schainHash, bool active)",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSIT_BOX_MANAGER_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function activeEthTransfers(bytes32) view returns (bool)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function approveTransfers(address) view returns (uint256)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function deposit(string schainName) payable",
      "function depositDirect(string schainName, address receiver) payable",
      "function disableActiveEthTransfers(string schainName)",
      "function disableWhitelist(string schainName)",
      "function enableActiveEthTransfers(string schainName)",
      "function enableWhitelist(string schainName)",
      "function gasPayer(bytes32 schainHash, address sender, bytes data) view returns (address)",
      "function getFunds(string schainName, address receiver, uint256 amount)",
      "function getMyEth()",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address newMessageProxy)",
      "function initialize(address contractManagerOfSkaleManagerValue, address linkerValue, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function isWhitelisted(string schainName) view returns (bool)",
      "function linker() view returns (address)",
      "function messageProxy() view returns (address)",
      "function postMessage(bytes32 schainHash, address sender, bytes data)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferredAmount(bytes32) view returns (uint256)"
    ]
  }
}
