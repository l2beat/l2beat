{
  "name": "skale-ima",
  "blockNumber": 17619955,
  "configHash": "0xe426572f1d56b612b29e8bc876b4712769c5b507d807f4fad4909b55eace351f",
  "version": 1,
  "contracts": [
    {
      "name": "ProxyAdminOwner",
      "address": "0x13fD1622F0E7e50A87B79cb296cbAf18362631C0",
      "code": "https://etherscan.deth.net/address/0x13fD1622F0E7e50A87B79cb296cbAf18362631C0,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0xfe553e7fa2b6b6eabfd8b489f5d70c9409db0501fd37f91a9f6f48239e815eaa",
        "getChainId": 1,
        "getOwners": [
          "0x86EBB3994A558C27d19E2BADF5f98b99C478F98F",
          "0x3E8eba8D8E1BA34cB5780d541748438aA21b1245",
          "0x1c3c10544EDd69c9a09EDEcf05A4646293DCAedB",
          "0x315537a8004A7E598f807e8e0ce2F92e6a497E18",
          "0xE74ad5437C6CFB0cCD6bADda1F6b57b6E542E75e"
        ],
        "getThreshold": 3,
        "nonce": 304,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "DepositBoxERC1155",
      "address": "0x3C02FdEe8E05B6dc4d44a6555b3ff5762D03871a",
      "code": "https://etherscan.deth.net/address/0x3C02FdEe8E05B6dc4d44a6555b3ff5762D03871a,0xE8d18a64e5bD3C3e96e7c163Dc67FF97296b6304",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xE8d18a64e5bD3C3e96e7c163Dc67FF97296b6304",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSIT_BOX_MANAGER_ROLE": "0xadc0611617a946881d948c7506bdf0975adbe0cfb172896a62eb6a75f21f2ff9",
        "linker": "0x6ef406953bac772C2146389ED37846BA3b6086D1",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404"
      },
      "derivedName": "DepositBoxERC1155"
    },
    {
      "name": "DepositBoxEth",
      "address": "0x49F583d263e4Ef938b9E09772D3394c71605Df94",
      "code": "https://etherscan.deth.net/address/0x49F583d263e4Ef938b9E09772D3394c71605Df94,0x2f90BeD90fa0Cc605B86b8623612a2638EB4019a",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x2f90BeD90fa0Cc605B86b8623612a2638EB4019a",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSIT_BOX_MANAGER_ROLE": "0xadc0611617a946881d948c7506bdf0975adbe0cfb172896a62eb6a75f21f2ff9",
        "linker": "0x6ef406953bac772C2146389ED37846BA3b6086D1",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404"
      },
      "derivedName": "DepositBoxEth"
    },
    {
      "name": "CommunityPool",
      "address": "0x588801cA36558310D91234aFC2511502282b1621",
      "code": "https://etherscan.deth.net/address/0x588801cA36558310D91234aFC2511502282b1621,0xffC647d4Cef8FB8b365e6B11a0156972e9343f6A",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xffC647d4Cef8FB8b365e6B11a0156972e9343f6A",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "CONSTANT_SETTER_ROLE": "0x96e3fc3be15159903e053027cff8a23f39a990e0194abcd8ac1cf1b355b8b93c",
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404",
        "minTransactionGas": 1000000,
        "multiplierDivider": 2,
        "multiplierNumerator": 3
      },
      "derivedName": "CommunityPool"
    },
    {
      "name": "Linker",
      "address": "0x6ef406953bac772C2146389ED37846BA3b6086D1",
      "code": "https://etherscan.deth.net/address/0x6ef406953bac772C2146389ED37846BA3b6086D1,0x676FAFCE73F5a304988C519407AAc06bD117CdD0",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x676FAFCE73F5a304988C519407AAc06bD117CdD0",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404"
      },
      "derivedName": "Linker"
    },
    {
      "name": "DepositBoxERC721",
      "address": "0x7343d31eb99Fd31424bcca9f0a7EAFBc1F515f2d",
      "code": "https://etherscan.deth.net/address/0x7343d31eb99Fd31424bcca9f0a7EAFBc1F515f2d,0xAD64712a9F3F7Ca4e7064381135082AAA68F56d5",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xAD64712a9F3F7Ca4e7064381135082AAA68F56d5",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSIT_BOX_MANAGER_ROLE": "0xadc0611617a946881d948c7506bdf0975adbe0cfb172896a62eb6a75f21f2ff9",
        "linker": "0x6ef406953bac772C2146389ED37846BA3b6086D1",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404"
      },
      "derivedName": "DepositBoxERC721"
    },
    {
      "name": "MessageProxyForMainnet",
      "address": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404",
      "code": "https://etherscan.deth.net/address/0x8629703a9903515818C2FeB45a6f6fA5df8Da404,0x64e4cd4Fe42eAB98AcD15fddaC657B1537aa5190",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x64e4cd4Fe42eAB98AcD15fddaC657B1537aa5190",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "CHAIN_CONNECTOR_ROLE": "0x2785f35fe7d8743aa971942d8474737bb31895d396eff2cc688a481e0221e191",
        "communityPool": "0x588801cA36558310D91234aFC2511502282b1621",
        "CONSTANT_SETTER_ROLE": "0x96e3fc3be15159903e053027cff8a23f39a990e0194abcd8ac1cf1b355b8b93c",
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXTRA_CONTRACT_REGISTRAR_ROLE": "0x6155b5aac15ce9aa193c0527a6f43be0a36a7e2e7496c2b615c0e5f922842773",
        "gasLimit": 1000000,
        "headerMessageGasCost": 92251,
        "MAINNET_HASH": "0x8d646f556e5d9d6f1edcf7a39b77f5ac253776eb34efcfd688aacbee518efc26",
        "messageGasCost": 9000,
        "messageInProgress": false,
        "MESSAGES_LENGTH": 10,
        "PAUSABLE_ROLE": "0x09b6fca8f5f3ab2900d9586d1d15872611c1bd42b268b973ad886d4f2646b560",
        "REVERT_REASON_LENGTH": 64,
        "version": "1.5.0"
      },
      "derivedName": "MessageProxyForMainnet"
    },
    {
      "name": "DepositBoxERC20",
      "address": "0x8fB1A35bB6fB9c47Fb5065BE5062cB8dC1687669",
      "code": "https://etherscan.deth.net/address/0x8fB1A35bB6fB9c47Fb5065BE5062cB8dC1687669,0xc616EaF17c5e3349c1Fa493459494BB4DD0FD788",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xc616EaF17c5e3349c1Fa493459494BB4DD0FD788",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "ARBITER_ROLE": "0xbb08418a67729a078f87bbc8d02a770929bb68f5bfdf134ae2ead6ed38e2f4ae",
        "contractManagerOfSkaleManager": "0xC04A10Fd5e6513242558f47331568aBD6185a310",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSIT_BOX_MANAGER_ROLE": "0xadc0611617a946881d948c7506bdf0975adbe0cfb172896a62eb6a75f21f2ff9",
        "linker": "0x6ef406953bac772C2146389ED37846BA3b6086D1",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404"
      },
      "derivedName": "DepositBoxERC20"
    },
    {
      "name": "DepositBoxERC721WithMetadata",
      "address": "0x9f8196D864ee9476bF8DBE68aD07cc555d6B7986",
      "code": "https://etherscan.deth.net/address/0x9f8196D864ee9476bF8DBE68aD07cc555d6B7986,0xF99F446340483C5d9D63697a60232ECb9274E1e7",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xF99F446340483C5d9D63697a60232ECb9274E1e7",
        "admin": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627"
      },
      "values": {
        "contractManagerOfSkaleManager": "0xe8c7E5C70B8a8c9C3896e59062EA3A879270AB4A",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSIT_BOX_MANAGER_ROLE": "0xadc0611617a946881d948c7506bdf0975adbe0cfb172896a62eb6a75f21f2ff9",
        "linker": "0x6ef406953bac772C2146389ED37846BA3b6086D1",
        "LINKER_ROLE": "0x733bac3dca102687aa08c854c5f9067fc424f98fd8e90e41ad6b73aecc59a4fd",
        "messageProxy": "0x8629703a9903515818C2FeB45a6f6fA5df8Da404"
      },
      "derivedName": "DepositBoxERC721WithMetadata"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627",
      "code": "https://etherscan.deth.net/address/0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0x13fD1622F0E7e50A87B79cb296cbAf18362631C0"
      }
    }
  ],
  "eoas": [
    "0x1c3c10544EDd69c9a09EDEcf05A4646293DCAedB",
    "0x315537a8004A7E598f807e8e0ce2F92e6a497E18",
    "0x3E8eba8D8E1BA34cB5780d541748438aA21b1245",
    "0x86EBB3994A558C27d19E2BADF5f98b99C478F98F",
    "0xE74ad5437C6CFB0cCD6bADda1F6b57b6E542E75e",
    "0xe8c7E5C70B8a8c9C3896e59062EA3A879270AB4A"
  ],
  "abis": {
    "0x13fD1622F0E7e50A87B79cb296cbAf18362631C0": [
      "constructor(address _masterCopy)"
    ],
    "0x2f90BeD90fa0Cc605B86b8623612a2638EB4019a": [
      "event ActiveEthTransfers(bytes32 indexed schainHash, bool active)",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSIT_BOX_MANAGER_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function activeEthTransfers(bytes32) view returns (bool)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function approveTransfers(address) view returns (uint256)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function deposit(string schainName) payable",
      "function depositDirect(string schainName, address receiver) payable",
      "function disableActiveEthTransfers(string schainName)",
      "function disableWhitelist(string schainName)",
      "function enableActiveEthTransfers(string schainName)",
      "function enableWhitelist(string schainName)",
      "function gasPayer(bytes32 schainHash, address sender, bytes data) view returns (address)",
      "function getFunds(string schainName, address receiver, uint256 amount)",
      "function getMyEth()",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getSchainContract(bytes32 schainHash) view returns (address)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address newMessageProxy)",
      "function initialize(address contractManagerOfSkaleManagerValue, address linkerValue, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function isWhitelisted(string schainName) view returns (bool)",
      "function linker() view returns (address)",
      "function messageProxy() view returns (address)",
      "function postMessage(bytes32 schainHash, address sender, bytes data)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferredAmount(bytes32) view returns (uint256)"
    ],
    "0x3C02FdEe8E05B6dc4d44a6555b3ff5762D03871a": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x49F583d263e4Ef938b9E09772D3394c71605Df94": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x588801cA36558310D91234aFC2511502282b1621": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x64e4cd4Fe42eAB98AcD15fddaC657B1537aa5190": [
      "event ExtraContractRegistered(bytes32 indexed chainHash, address contractAddress)",
      "event ExtraContractRemoved(bytes32 indexed chainHash, address contractAddress)",
      "event GasCostMessageHeaderWasChanged(uint256 oldValue, uint256 newValue)",
      "event GasCostMessageWasChanged(uint256 oldValue, uint256 newValue)",
      "event GasLimitWasChanged(uint256 oldValue, uint256 newValue)",
      "event Initialized(uint8 version)",
      "event OutgoingMessage(bytes32 indexed dstChainHash, uint256 indexed msgCounter, address indexed srcContract, address dstContract, bytes data)",
      "event PostMessageError(uint256 indexed msgCounter, bytes message)",
      "event PreviousMessageReference(uint256 currentMessage, uint256 previousOutgoingMessageBlockId)",
      "event ReimbursedContractAdded(bytes32 indexed schainHash, address contractAddress)",
      "event ReimbursedContractRemoved(bytes32 indexed schainHash, address contractAddress)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SchainPaused(bytes32 indexed schainHash)",
      "event SchainResumed(bytes32 indexed schainHash)",
      "event VersionUpdated(string oldVersion, string newVersion)",
      "function CHAIN_CONNECTOR_ROLE() view returns (bytes32)",
      "function CONSTANT_SETTER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXTRA_CONTRACT_REGISTRAR_ROLE() view returns (bytes32)",
      "function MAINNET_HASH() view returns (bytes32)",
      "function MESSAGES_LENGTH() view returns (uint256)",
      "function PAUSABLE_ROLE() view returns (bytes32)",
      "function REVERT_REASON_LENGTH() view returns (uint256)",
      "function addConnectedChain(string schainName)",
      "function addReimbursedContract(string schainName, address reimbursedContract)",
      "function communityPool() view returns (address)",
      "function connectedChains(bytes32) view returns (uint256 incomingMessageCounter, uint256 outgoingMessageCounter, bool inited, uint256 lastOutgoingMessageBlockId)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function gasLimit() view returns (uint256)",
      "function getContractRegisteredLength(bytes32 schainHash) view returns (uint256)",
      "function getContractRegisteredRange(bytes32 schainHash, uint256 from, uint256 to) view returns (address[] contractsInRange)",
      "function getIncomingMessagesCounter(string fromSchainName) view returns (uint256)",
      "function getLastOutgoingMessageBlockId(string targetSchainName) view returns (uint256)",
      "function getOutgoingMessagesCounter(string targetSchainName) view returns (uint256)",
      "function getReimbursedContractsLength(bytes32 schainHash) view returns (uint256)",
      "function getReimbursedContractsRange(bytes32 schainHash, uint256 from, uint256 to) view returns (address[] contractsInRange)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function headerMessageGasCost() view returns (uint256)",
      "function initialize(address contractManagerOfSkaleManagerValue)",
      "function initializeMessageProxy(uint256 newGasLimit)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isConnectedChain(string schainName) view returns (bool)",
      "function isContractRegistered(bytes32 schainHash, address contractAddress) view returns (bool)",
      "function isPaused(bytes32 schainHash) view returns (bool)",
      "function isReimbursedContract(bytes32 schainHash, address contractAddress) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function messageGasCost() view returns (uint256)",
      "function messageInProgress() view returns (bool)",
      "function pause(string schainName)",
      "function pauseInfo(bytes32) view returns (bool paused)",
      "function postIncomingMessages(string fromSchainName, uint256 startingCounter, tuple(address sender, address destinationContract, bytes data)[] messages, tuple(uint256[2] blsSignature, uint256 hashA, uint256 hashB, uint256 counter) sign)",
      "function postOutgoingMessage(bytes32 targetChainHash, address targetContract, bytes data)",
      "function registerExtraContract(string schainName, address extraContract)",
      "function registerExtraContractForAll(address extraContract)",
      "function removeConnectedChain(string schainName)",
      "function removeExtraContract(string schainName, address extraContract)",
      "function removeExtraContractForAll(address extraContract)",
      "function removeReimbursedContract(string schainName, address reimbursedContract)",
      "function renounceRole(bytes32 role, address account)",
      "function resume(string schainName)",
      "function revokeRole(bytes32 role, address account)",
      "function setCommunityPool(address newCommunityPoolAddress)",
      "function setNewGasLimit(uint256 newGasLimit)",
      "function setNewHeaderMessageGasCost(uint256 newHeaderMessageGasCost)",
      "function setNewMessageGasCost(uint256 newMessageGasCost)",
      "function setVersion(string newVersion)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function version() view returns (string)"
    ],
    "0x676FAFCE73F5a304988C519407AAc06bD117CdD0": [
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function connectSchain(string schainName, address[] schainContracts)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function disconnectSchain(string schainName)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getSchainContract(bytes32 schainHash) view returns (address)",
      "function grantRole(bytes32 role, address account)",
      "function hasMainnetContract(address mainnetContract) view returns (bool)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchain(string schainName) view returns (bool connected)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isNotKilled(bytes32 schainHash) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function kill(string schainName)",
      "function messageProxy() view returns (address)",
      "function registerMainnetContract(address newMainnetContract)",
      "function removeMainnetContract(address mainnetContract)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function statuses(bytes32) view returns (uint8)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0x6ef406953bac772C2146389ED37846BA3b6086D1": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x7343d31eb99Fd31424bcca9f0a7EAFBc1F515f2d": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8629703a9903515818C2FeB45a6f6fA5df8Da404": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8fB1A35bB6fB9c47Fb5065BE5062cB8dC1687669": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x9f8196D864ee9476bF8DBE68aD07cc555d6B7986": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xA35d3Ffc3812F6caD1Ac64FDE740a98bfb900627": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xAD64712a9F3F7Ca4e7064381135082AAA68F56d5": [
      "event ERC721TokenAdded(string schainName, address indexed contractOnMainnet)",
      "event ERC721TokenReady(address indexed contractOnMainnet, uint256 tokenId)",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSIT_BOX_MANAGER_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function addERC721TokenByOwner(string schainName, address erc721OnMainnet)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function depositERC721(string schainName, address erc721OnMainnet, uint256 tokenId)",
      "function depositERC721Direct(string schainName, address erc721OnMainnet, uint256 tokenId, address receiver)",
      "function disableWhitelist(string schainName)",
      "function enableWhitelist(string schainName)",
      "function gasPayer(bytes32 schainHash, address sender, bytes data) view returns (address)",
      "function getFunds(string schainName, address erc721OnMainnet, address receiver, uint256 tokenId)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getSchainContract(bytes32 schainHash) view returns (address)",
      "function getSchainToAllERC721(string schainName, uint256 from, uint256 to) view returns (address[] tokensInRange)",
      "function getSchainToAllERC721Length(string schainName) view returns (uint256)",
      "function getSchainToERC721(string schainName, address erc721OnMainnet) view returns (bool)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address newMessageProxy)",
      "function initialize(address contractManagerOfSkaleManagerValue, address linkerValue, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function isWhitelisted(string schainName) view returns (bool)",
      "function linker() view returns (address)",
      "function messageProxy() view returns (address)",
      "function postMessage(bytes32 schainHash, address sender, bytes data)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferredAmount(address, uint256) view returns (bytes32)"
    ],
    "0xc616EaF17c5e3349c1Fa493459494BB4DD0FD788": [
      "error Empty()",
      "error OutOfBounds()",
      "event ArbitrageDurationIsChanged(bytes32 indexed schainHash, uint256 oldValue, uint256 newValue)",
      "event BigTransferDelayIsChanged(bytes32 indexed schainHash, uint256 oldValue, uint256 newValue)",
      "event BigTransferThresholdIsChanged(bytes32 indexed schainHash, address indexed token, uint256 oldValue, uint256 newValue)",
      "event ERC20TokenAdded(string schainName, address indexed contractOnMainnet)",
      "event ERC20TokenReady(address indexed contractOnMainnet, uint256 amount)",
      "event Escalated(uint256 id)",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event TransferDelayed(uint256 id, address receiver, address token, uint256 amount)",
      "event TransferSkipped(uint256 id)",
      "function ARBITER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSIT_BOX_MANAGER_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function addERC20TokenByOwner(string schainName, address erc20OnMainnet)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function delayedTransfers(uint256) view returns (address receiver, bytes32 schainHash, address token, uint256 amount, uint256 untilTimestamp, uint8 status)",
      "function delayedTransfersByReceiver(address) view returns (int128 _begin, int128 _end)",
      "function delayedTransfersSize() view returns (uint256)",
      "function depositERC20(string schainName, address erc20OnMainnet, uint256 amount)",
      "function depositERC20Direct(string schainName, address erc20OnMainnet, uint256 amount, address receiver)",
      "function disableWhitelist(string schainName)",
      "function doTransfer(address token, address receiver, uint256 amount)",
      "function enableWhitelist(string schainName)",
      "function escalate(uint256 transferId)",
      "function gasPayer(bytes32 schainHash, address sender, bytes data) view returns (address)",
      "function getArbitrageDuration(bytes32 schainHash) view returns (uint256)",
      "function getBigTransferThreshold(bytes32 schainHash, address token) view returns (uint256)",
      "function getDelayedAmount(address receiver, address token) view returns (uint256 value)",
      "function getFunds(string schainName, address erc20OnMainnet, address receiver, uint256 amount)",
      "function getNextUnlockTimestamp(address receiver, address token) view returns (uint256 unlockTimestamp)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getSchainContract(bytes32 schainHash) view returns (address)",
      "function getSchainToAllERC20(string schainName, uint256 from, uint256 to) view returns (address[] tokensInRange)",
      "function getSchainToAllERC20Length(string schainName) view returns (uint256)",
      "function getSchainToERC20(string schainName, address erc20OnMainnet) view returns (bool)",
      "function getTimeDelay(bytes32 schainHash) view returns (uint256)",
      "function getTrustedReceiver(string schainName, uint256 index) view returns (address)",
      "function getTrustedReceiversAmount(bytes32 schainHash) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address newMessageProxy)",
      "function initialize(address contractManagerOfSkaleManagerValue, address linkerValue, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isReceiverTrusted(bytes32 schainHash, address receiver) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function isWhitelisted(string schainName) view returns (bool)",
      "function linker() view returns (address)",
      "function messageProxy() view returns (address)",
      "function postMessage(bytes32 schainHash, address sender, bytes data)",
      "function rejectTransfer(uint256 transferId)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function retrieve()",
      "function retrieveFor(address receiver)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function setArbitrageDuration(string schainName, uint256 delayInSeconds)",
      "function setBigTransferDelay(string schainName, uint256 delayInSeconds)",
      "function setBigTransferValue(string schainName, address token, uint256 value)",
      "function stopTrustingReceiver(string schainName, address receiver)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferredAmount(bytes32, address) view returns (uint256)",
      "function trustReceiver(string schainName, address receiver)",
      "function validateTransfer(uint256 transferId)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xE8d18a64e5bD3C3e96e7c163Dc67FF97296b6304": [
      "event ERC1155TokenAdded(string schainName, address indexed contractOnMainnet)",
      "event ERC1155TokenReady(address indexed contractOnMainnet, uint256[] ids, uint256[] amounts)",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSIT_BOX_MANAGER_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function addERC1155TokenByOwner(string schainName, address erc1155OnMainnet)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function depositERC1155(string schainName, address erc1155OnMainnet, uint256 id, uint256 amount)",
      "function depositERC1155Batch(string schainName, address erc1155OnMainnet, uint256[] ids, uint256[] amounts)",
      "function depositERC1155BatchDirect(string schainName, address erc1155OnMainnet, uint256[] ids, uint256[] amounts, address receiver)",
      "function depositERC1155Direct(string schainName, address erc1155OnMainnet, uint256 id, uint256 amount, address receiver)",
      "function disableWhitelist(string schainName)",
      "function enableWhitelist(string schainName)",
      "function gasPayer(bytes32 schainHash, address sender, bytes data) view returns (address)",
      "function getFunds(string schainName, address erc1155OnMainnet, address receiver, uint256[] ids, uint256[] amounts)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getSchainContract(bytes32 schainHash) view returns (address)",
      "function getSchainToAllERC1155(string schainName, uint256 from, uint256 to) view returns (address[] tokensInRange)",
      "function getSchainToAllERC1155Length(string schainName) view returns (uint256)",
      "function getSchainToERC1155(string schainName, address erc1155OnMainnet) view returns (bool)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address newMessageProxy)",
      "function initialize(address contractManagerOfSkaleManagerValue, address linkerValue, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function isWhitelisted(string schainName) view returns (bool)",
      "function linker() view returns (address)",
      "function messageProxy() view returns (address)",
      "function onERC1155BatchReceived(address operator, address, uint256[], uint256[], bytes) view returns (bytes4)",
      "function onERC1155Received(address operator, address, uint256, uint256, bytes) view returns (bytes4)",
      "function postMessage(bytes32 schainHash, address sender, bytes data)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferredAmount(bytes32, address, uint256) view returns (uint256)"
    ],
    "0xF99F446340483C5d9D63697a60232ECb9274E1e7": [
      "event ERC721TokenAdded(string schainName, address indexed contractOnMainnet)",
      "event ERC721TokenReady(address indexed contractOnMainnet, uint256 tokenId)",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSIT_BOX_MANAGER_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function addERC721TokenByOwner(string schainName, address erc721OnMainnet)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function depositERC721(string schainName, address erc721OnMainnet, uint256 tokenId)",
      "function depositERC721Direct(string schainName, address erc721OnMainnet, uint256 tokenId, address receiver)",
      "function disableWhitelist(string schainName)",
      "function enableWhitelist(string schainName)",
      "function gasPayer(bytes32 schainHash, address sender, bytes data) view returns (address)",
      "function getFunds(string schainName, address erc721OnMainnet, address receiver, uint256 tokenId)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getSchainContract(bytes32 schainHash) view returns (address)",
      "function getSchainToAllERC721(string schainName, uint256 from, uint256 to) view returns (address[] tokensInRange)",
      "function getSchainToAllERC721Length(string schainName) view returns (uint256)",
      "function getSchainToERC721(string schainName, address erc721OnMainnet) view returns (bool)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address newMessageProxy)",
      "function initialize(address contractManagerOfSkaleManagerValue, address linkerValue, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function isWhitelisted(string schainName) view returns (bool)",
      "function linker() view returns (address)",
      "function messageProxy() view returns (address)",
      "function postMessage(bytes32 schainHash, address sender, bytes data)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferredAmount(address, uint256) view returns (bytes32)"
    ],
    "0xffC647d4Cef8FB8b365e6B11a0156972e9343f6A": [
      "event Initialized(uint8 version)",
      "event MinTransactionGasWasChanged(uint256 oldValue, uint256 newValue)",
      "event MultiplierWasChanged(uint256 oldMultiplierNumerator, uint256 oldMultiplierDivider, uint256 newMultiplierNumerator, uint256 newMultiplierDivider)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CONSTANT_SETTER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function LINKER_ROLE() view returns (bytes32)",
      "function activeUsers(address, bytes32) view returns (bool)",
      "function addSchainContract(string schainName, address contractReceiver)",
      "function checkUserBalance(bytes32 schainHash, address receiver) view returns (bool)",
      "function contractManagerOfSkaleManager() view returns (address)",
      "function getBalance(address user, string schainName) view returns (uint256)",
      "function getRecommendedRechargeAmount(bytes32 schainHash, address receiver) view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getSchainContract(bytes32 schainHash) view returns (address)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hasSchainContract(string schainName) view returns (bool)",
      "function initialize(address contractManagerOfSkaleManagerValue, address newMessageProxy)",
      "function initialize(address contractManagerOfSkaleManagerValue, address linker, address messageProxyValue)",
      "function initialize(address newContractManagerOfSkaleManager)",
      "function isAgentAuthorized(bytes32 schainHash, address sender) view returns (bool)",
      "function isSchainOwner(address sender, bytes32 schainHash) view returns (bool)",
      "function messageProxy() view returns (address)",
      "function minTransactionGas() view returns (uint256)",
      "function multiplierDivider() view returns (uint256)",
      "function multiplierNumerator() view returns (uint256)",
      "function rechargeUserWallet(string schainName, address user) payable",
      "function refundGasBySchainWallet(bytes32 schainHash, address node, uint256 gas) returns (bool)",
      "function refundGasByUser(bytes32 schainHash, address node, address user, uint256 gas) returns (uint256)",
      "function removeSchainContract(string schainName)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schainLinks(bytes32) view returns (address)",
      "function setMinTransactionGas(uint256 newMinTransactionGas)",
      "function setMultiplier(uint256 newMultiplierNumerator, uint256 newMultiplierDivider)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function withdrawFunds(string schainName, uint256 amount)"
    ]
  }
}
