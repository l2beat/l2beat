{
  "name": "blast",
  "chain": "ethereum",
  "blockNumber": 18771421,
  "configHash": "0xda2a0607814971e6460ec8d2cfb3952fffbb6d66163fb34eba09eadc1adb0fca",
  "version": 3,
  "contracts": [
    {
      "name": "Bridge",
      "address": "0x5F6AE08B8AeB7078cf2F96AFb089D7c9f51DA47d",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x829e8Bf84569A0B2da7B27f975F026fDb6e0a774",
        "admin": "0x0000000000000000000000000000000000000000"
      },
      "implementations": ["0x829e8Bf84569A0B2da7B27f975F026fDb6e0a774"],
      "sinceTimestamp": 1700359187,
      "values": {
        "CURVE_3POOL": "0xbEbc44782C7dB0a1A60Cb6fe97d0b483032FF1C7",
        "DAI": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "DSR_MANAGER": "0x373238337Bfe1146fb49989fc222523f83081dDb",
        "isTransitionEnabled": false,
        "LIDO": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84",
        "owner": "0x67CA7Ca75b69711cfd48B44eC3F64E469BaF608C",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "proposedBridgeReadyAt": 0,
        "proposedMainnetBridge": [
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "proposedUpgrade": [
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "proposedUpgradeReadyAt": 0,
        "PSM": "0x89B78CfA322F6C5dE0aBcEecab66Aee45393cC5A",
        "staker": "0x9eDFc192fC4d29b8f2b18f484211161b6Fc8063E",
        "totalETHBalance": "326551911902768732774701",
        "totalETHShares": "325810312923678335669485",
        "totalUSDBalanceNoUpdate": "99782852838814615562176348",
        "totalUSDShares": "99496855398121481403916834",
        "USDC": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "USDT": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
      },
      "derivedName": "LaunchBridge"
    },
    {
      "name": "BridgeOwner",
      "address": "0x67CA7Ca75b69711cfd48B44eC3F64E469BaF608C",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1700012495,
      "values": {
        "domainSeparator": "0x47ef22e6b97dff365f80f221989a28eb2d460c7c9933f9980ba4327ce2dad7d3",
        "getChainId": 1,
        "getOwners": [
          "0x49d495DE356259458120bfd7bCB463CFb6D6c6BA",
          "0xb7c719eB2649c1F03bFab68b0AAa35AD538a7cC8",
          "0x1f97306039530ADB4173C3786e86fab5e6b90F41",
          "0x6a356C0EAA560f00127Adf5108FfAf503b9f1e11",
          "0x46e31F27Df5047D7Fad9b1E8DFFec635cF6efAcF"
        ],
        "getThreshold": 3,
        "nonce": 6,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    }
  ],
  "eoas": [
    "0x1f97306039530ADB4173C3786e86fab5e6b90F41",
    "0x46e31F27Df5047D7Fad9b1E8DFFec635cF6efAcF",
    "0x49d495DE356259458120bfd7bCB463CFb6D6c6BA",
    "0x6a356C0EAA560f00127Adf5108FfAf503b9f1e11",
    "0x9eDFc192fC4d29b8f2b18f484211161b6Fc8063E",
    "0xb7c719eB2649c1F03bFab68b0AAa35AD538a7cC8"
  ],
  "abis": {
    "0x5F6AE08B8AeB7078cf2F96AFb089D7c9f51DA47d": [
      "constructor(address _logic, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x67CA7Ca75b69711cfd48B44eC3F64E469BaF608C": [
      "constructor(address _singleton)"
    ],
    "0x829e8Bf84569A0B2da7B27f975F026fDb6e0a774": [
      "constructor()",
      "error BridgeIsNotSet()",
      "error CallerIsNotStaker()",
      "error InsufficientFunds()",
      "error InvalidDepositor()",
      "error SharesNotInitiated()",
      "error TransitionIsEnabled()",
      "error TransitionNotEnabled()",
      "error UserAlreadyTransitioned()",
      "error ZeroDeposit()",
      "error ZeroSharesIssued()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ETHDeposited(address indexed user, uint256 shares, uint256 amount)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event ProposeTransition(address mainnetBridge)",
      "event ProposeUpgrade(address upgradeTo)",
      "event ResetProposedTransition()",
      "event ResetProposedUpgrade()",
      "event USDDeposited(address indexed user, uint256 shares, uint256 amount, uint256 daiAmount)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "event Withdraw(address indexed user, uint256 ethAmount, uint256 stETHAmount, uint256 daiAmount)",
      "function CURVE_3POOL() view returns (address)",
      "function DAI() view returns (address)",
      "function DSR_MANAGER() view returns (address)",
      "function LIDO() view returns (address)",
      "function PSM() view returns (address)",
      "function USDC() view returns (address)",
      "function USDT() view returns (address)",
      "function acceptOwnership()",
      "function balanceOf(address user) view returns (uint256 ethBalance, uint256 usdBalance)",
      "function cancelProposeTransition()",
      "function cancelProposedUpgrade()",
      "function depositDAI(uint256 daiAmount)",
      "function depositDAIWithPermit(uint256 daiAmount, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function depositETH() payable",
      "function depositStETH(uint256 stETHAmount)",
      "function depositStETHWithPermit(uint256 stETHAmount, uint256 allowance, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function depositUSDC(uint256 usdcAmount)",
      "function depositUSDCWithPermit(uint256 usdcAmount, uint256 allowance, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function depositUSDT(uint256 usdtAmount, uint256 minDAIAmount)",
      "function emergencyWithdraw()",
      "function enableTransition(address mainnetBridge)",
      "function ethShares(address) view returns (uint256)",
      "function getMainnetBridge() view returns (address mainnetBridge)",
      "function initialize(address _staker)",
      "function isTransitionEnabled() view returns (bool)",
      "function open(address from, uint256 nonce, uint8 v, bytes32 r, bytes32 s) payable",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proposeTransition(address proposedBridge)",
      "function proposeUpgrade(address upgradeTo)",
      "function proposedBridgeReadyAt() view returns (uint256)",
      "function proposedMainnetBridge() view returns (address to, bytes32 codehash)",
      "function proposedUpgrade() view returns (address to, bytes32 codehash)",
      "function proposedUpgradeReadyAt() view returns (uint256)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function setStaker(address _staker)",
      "function stakeETH(uint256 amount)",
      "function stakeUSD(uint256 amount)",
      "function staker() view returns (address)",
      "function totalETHBalance() view returns (uint256)",
      "function totalETHShares() view returns (uint256)",
      "function totalUSDBalance() returns (uint256)",
      "function totalUSDBalanceNoUpdate() view returns (uint256)",
      "function totalUSDShares() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function transition()",
      "function transitioned(address) view returns (bool)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function usdShares(address) view returns (uint256)",
      "function withdrawAndLosePoints()"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ]
  }
}
