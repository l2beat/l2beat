{
  "name": "sygma",
  "chain": "ethereum",
  "blockNumber": 19532229,
  "configHash": "0xab514b0310c481b6a325f6922fdd16a9bddd9aa666b3392e430d15f61def83c7",
  "version": 6,
  "contracts": [
    {
      "name": "FeeHandlerRouter",
      "address": "0x1d34808907607FA82Fa1b51F5fBA5Ff5a3Fa90cF",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701074999,
      "values": {
        "_bridgeAddress": "0x4D878E8Fb90178588Cda4cf1DCcdC9a6d2757089",
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0xde79695d5cefF7c324552B3ecbe6165f77FCdF53"]
          }
        },
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000"
      },
      "derivedName": "FeeHandlerRouter"
    },
    {
      "name": "Permissionless Generic Handler",
      "address": "0x31282123E7bcd947e2c1Bc364d564839574fAdCD",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1697118143,
      "values": {
        "_bridgeAddress": "0x4D878E8Fb90178588Cda4cf1DCcdC9a6d2757089",
        "MAX_FEE": 1000000
      },
      "derivedName": "PermissionlessGenericHandler"
    },
    {
      "name": "Bridge",
      "address": "0x4D878E8Fb90178588Cda4cf1DCcdC9a6d2757089",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686658607,
      "values": {
        "_accessControl": "0xf433EfDf1Fb438F9d79D1E71dF2c2bdeAc95e28E",
        "_domainID": 1,
        "_feeHandler": "0x1d34808907607FA82Fa1b51F5fBA5Ff5a3Fa90cF",
        "_MPCAddress": "0x6731987e651675aF87442Ed2F1719EDF937B51d7",
        "handler1": "0xC832588193cd5ED2185daDA4A531e0B26eC5B830",
        "handler2": "0x31282123E7bcd947e2c1Bc364d564839574fAdCD",
        "paused": false
      },
      "derivedName": "Bridge"
    },
    {
      "name": "BasicFeeHandler",
      "address": "0x9f9778DA7c1D0AbE148314d6C1EA6E0A93C151C7",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701075143,
      "values": {
        "_bridgeAddress": "0x4D878E8Fb90178588Cda4cf1DCcdC9a6d2757089",
        "_feeHandlerRouterAddress": "0x1d34808907607FA82Fa1b51F5fBA5Ff5a3Fa90cF",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000"
      }
    },
    {
      "name": "Community Multisig",
      "address": "0xc4d8b2F5501C765dE0C5E12550118F397B197D05",
      "template": "GnosisSafe",
      "ignoreInWatchMode": ["nonce"],
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "4 of 6 (67%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1680813119,
      "values": {
        "domainSeparator": "0xc5ef62da8fa57e68638ae614d9898bce59fbef8acf03bfa5c2e4759716981ada",
        "getChainId": 1,
        "getOwners": [
          "0x0c1db86328E6CFCD4f530401131Dc9a26DefA12a",
          "0xd85b34B2Fe1eC7815B6dF659372382A8FA229677",
          "0xa399460Ce767b06297457178D2F9F8f144017E77",
          "0xe845B1d31CaA16Bf6c6Bf5E97a28D086bd46FD49",
          "0xC6458dedf35231F524ED9d7E0DF77A60b9E08676",
          "0x86a73a594f74C76a6eB8F9E728d992D03252f60f"
        ],
        "getThreshold": 4,
        "nonce": 9,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "ERC20 Bridge Handler",
      "address": "0xC832588193cd5ED2185daDA4A531e0B26eC5B830",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686658619,
      "values": {
        "_bridgeAddress": "0x4D878E8Fb90178588Cda4cf1DCcdC9a6d2757089",
        "defaultDecimals": 18
      },
      "derivedName": "ERC20Handler"
    },
    {
      "name": "Admin Multisig",
      "address": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
      "template": "GnosisSafe",
      "ignoreInWatchMode": ["nonce"],
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "3 of 5 (60%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686579155,
      "values": {
        "domainSeparator": "0x2093ad87aee89f2fba108781963df2f9a6358b2e675a80bdf56368e539d66ab6",
        "getChainId": 1,
        "getOwners": [
          "0xacc0268a75280192897a78C706C9FBA2d2b851C4",
          "0x5a288b42dC222190D8cF5014A330c978ee42A5df",
          "0xe845B1d31CaA16Bf6c6Bf5E97a28D086bd46FD49",
          "0x197C57440A30cB28103ab27CB1b0dC86E5907ADA",
          "0x86a73a594f74C76a6eB8F9E728d992D03252f60f"
        ],
        "getThreshold": 3,
        "nonce": 11,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "AccessControlSegregator",
      "address": "0xf433EfDf1Fb438F9d79D1E71dF2c2bdeAc95e28E",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686658583,
      "values": {
        "GRANT_ACCESS_SIG": "0xa973ec93",
        "role_changeAccessControl": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
        "role_changeFeeHandler": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
        "role_endKeyGen": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
        "role_grantAccess": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
        "role_pauseTransfers": "0x695bd50CB07ffBd4098b272CE8b52B3c256ca049",
        "role_refreshKey": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
        "role_retry": "0x695bd50CB07ffBd4098b272CE8b52B3c256ca049",
        "role_setBurnable": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
        "role_setDepositNonce": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
        "role_setForwarder": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
        "role_setResource": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
        "role_startKeyGen": "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53",
        "role_unpauseTransfers": "0x695bd50CB07ffBd4098b272CE8b52B3c256ca049",
        "role_Withdraw": "0xc4d8b2F5501C765dE0C5E12550118F397B197D05"
      },
      "derivedName": "AccessControlSegregator"
    }
  ],
  "eoas": [
    "0x0c1db86328E6CFCD4f530401131Dc9a26DefA12a",
    "0x197C57440A30cB28103ab27CB1b0dC86E5907ADA",
    "0x5a288b42dC222190D8cF5014A330c978ee42A5df",
    "0x6731987e651675aF87442Ed2F1719EDF937B51d7",
    "0x695bd50CB07ffBd4098b272CE8b52B3c256ca049",
    "0x86a73a594f74C76a6eB8F9E728d992D03252f60f",
    "0xa399460Ce767b06297457178D2F9F8f144017E77",
    "0xacc0268a75280192897a78C706C9FBA2d2b851C4",
    "0xC6458dedf35231F524ED9d7E0DF77A60b9E08676",
    "0xd85b34B2Fe1eC7815B6dF659372382A8FA229677",
    "0xe845B1d31CaA16Bf6c6Bf5E97a28D086bd46FD49"
  ],
  "abis": {
    "0x1d34808907607FA82Fa1b51F5fBA5Ff5a3Fa90cF": [
      "constructor(address bridgeAddress)",
      "error IncorrectFeeSupplied(uint256)",
      "event FeeCollected(address sender, uint8 fromDomainID, uint8 destinationDomainID, bytes32 resourceID, uint256 fee, address tokenAddress)",
      "event FeeDistributed(address tokenAddress, address recipient, uint256 amount)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event WhitelistChanged(address whitelistAddress, bool isWhitelisted)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function _bridgeAddress() view returns (address)",
      "function _domainResourceIDToFeeHandlerAddress(uint8, bytes32) view returns (address)",
      "function _whitelist(address) view returns (bool)",
      "function adminSetResourceHandler(uint8 destinationDomainID, bytes32 resourceID, address handlerAddress)",
      "function adminSetWhitelist(address whitelistAddress, bool isWhitelisted)",
      "function calculateFee(address sender, uint8 fromDomainID, uint8 destinationDomainID, bytes32 resourceID, bytes depositData, bytes feeData) view returns (uint256 fee, address tokenAddress)",
      "function collectFee(address sender, uint8 fromDomainID, uint8 destinationDomainID, bytes32 resourceID, bytes depositData, bytes feeData) payable",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getRoleMemberIndex(bytes32 role, address account) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)"
    ],
    "0x31282123E7bcd947e2c1Bc364d564839574fAdCD": [
      "constructor(address bridgeAddress)",
      "function MAX_FEE() view returns (uint256)",
      "function _bridgeAddress() view returns (address)",
      "function deposit(bytes32 resourceID, address depositor, bytes data) view returns (bytes)",
      "function executeProposal(bytes32 resourceID, bytes data) returns (bytes)",
      "function setResource(bytes32 resourceID, address contractAddress, bytes args)"
    ],
    "0x4D878E8Fb90178588Cda4cf1DCcdC9a6d2757089": [
      "constructor(uint8 domainID, address accessControl)",
      "error AccessNotAllowed(address sender, bytes4 funcSig)",
      "error DepositToCurrentDomain()",
      "error EmptyProposalsArray()",
      "error InvalidProposalSigner()",
      "error MPCAddressAlreadySet()",
      "error MPCAddressIsNotUpdatable()",
      "error MPCAddressNotSet()",
      "error MPCAddressZeroAddress()",
      "error NonceDecrementsNotAllowed()",
      "error ResourceIDNotMappedToHandler()",
      "event AccessControlChanged(address newAccessControl)",
      "event Deposit(uint8 destinationDomainID, bytes32 resourceID, uint64 depositNonce, address indexed user, bytes data, bytes handlerResponse)",
      "event EndKeygen()",
      "event FailedHandlerExecution(bytes lowLevelData, uint8 originDomainID, uint64 depositNonce)",
      "event FeeHandlerChanged(address newFeeHandler)",
      "event KeyRefresh(string hash)",
      "event Paused(address account)",
      "event ProposalExecution(uint8 originDomainID, uint64 depositNonce, bytes32 dataHash, bytes handlerResponse)",
      "event Retry(string txHash)",
      "event StartKeygen()",
      "event Unpaused(address account)",
      "function _MPCAddress() view returns (address)",
      "function _accessControl() view returns (address)",
      "function _depositCounts(uint8) view returns (uint64)",
      "function _domainID() view returns (uint8)",
      "function _feeHandler() view returns (address)",
      "function _resourceIDToHandlerAddress(bytes32) view returns (address)",
      "function adminChangeAccessControl(address newAccessControl)",
      "function adminChangeFeeHandler(address newFeeHandler)",
      "function adminPauseTransfers()",
      "function adminSetBurnable(address handlerAddress, address tokenAddress)",
      "function adminSetDepositNonce(uint8 domainID, uint64 nonce)",
      "function adminSetForwarder(address forwarder, bool valid)",
      "function adminSetResource(address handlerAddress, bytes32 resourceID, address contractAddress, bytes args)",
      "function adminUnpauseTransfers()",
      "function adminWithdraw(address handlerAddress, bytes data)",
      "function deposit(uint8 destinationDomainID, bytes32 resourceID, bytes depositData, bytes feeData) payable returns (uint64 depositNonce, bytes handlerResponse)",
      "function endKeygen(address MPCAddress)",
      "function executeProposal(tuple(uint8 originDomainID, uint64 depositNonce, bytes32 resourceID, bytes data) proposal, bytes signature)",
      "function executeProposals(tuple(uint8 originDomainID, uint64 depositNonce, bytes32 resourceID, bytes data)[] proposals, bytes signature)",
      "function isProposalExecuted(uint8 domainID, uint256 depositNonce) view returns (bool)",
      "function isValidForwarder(address) view returns (bool)",
      "function paused() view returns (bool)",
      "function refreshKey(string hash)",
      "function retry(string txHash)",
      "function startKeygen()",
      "function usedNonces(uint8, uint256) view returns (uint256)",
      "function verify(tuple(uint8 originDomainID, uint64 depositNonce, bytes32 resourceID, bytes data)[] proposals, bytes signature) view returns (bool)"
    ],
    "0x9f9778DA7c1D0AbE148314d6C1EA6E0A93C151C7": [
      "constructor(address bridgeAddress, address feeHandlerRouterAddress)",
      "error IncorrectFeeSupplied(uint256)",
      "event FeeChanged(uint256 newFee)",
      "event FeeCollected(address sender, uint8 fromDomainID, uint8 destinationDomainID, bytes32 resourceID, uint256 fee, address tokenAddress)",
      "event FeeDistributed(address tokenAddress, address recipient, uint256 amount)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function _bridgeAddress() view returns (address)",
      "function _domainResourceIDToFee(uint8, bytes32) view returns (uint256)",
      "function _feeHandlerRouterAddress() view returns (address)",
      "function calculateFee(address sender, uint8 fromDomainID, uint8 destinationDomainID, bytes32 resourceID, bytes depositData, bytes feeData) view returns (uint256, address)",
      "function changeFee(uint8 destinationDomainID, bytes32 resourceID, uint256 newFee)",
      "function collectFee(address sender, uint8 fromDomainID, uint8 destinationDomainID, bytes32 resourceID, bytes depositData, bytes feeData) payable",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function getRoleMemberIndex(bytes32 role, address account) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function renounceAdmin(address newAdmin)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function transferFee(address[] addrs, uint256[] amounts)"
    ],
    "0xc4d8b2F5501C765dE0C5E12550118F397B197D05": [
      "constructor(address _singleton)"
    ],
    "0xC832588193cd5ED2185daDA4A531e0B26eC5B830": [
      "constructor(address bridgeAddress)",
      "error ContractAddressNotWhitelisted(address contractAddress)",
      "function _bridgeAddress() view returns (address)",
      "function _resourceIDToTokenContractAddress(bytes32) view returns (address)",
      "function _tokenContractAddressToTokenProperties(address) view returns (bytes32 resourceID, bool isWhitelisted, bool isBurnable, tuple(bool isSet, uint8 externalDecimals) decimals)",
      "function defaultDecimals() view returns (uint8)",
      "function deposit(bytes32 resourceID, address depositor, bytes data) returns (bytes)",
      "function executeProposal(bytes32 resourceID, bytes data) returns (bytes)",
      "function setBurnable(address contractAddress)",
      "function setResource(bytes32 resourceID, address contractAddress, bytes args)",
      "function withdraw(bytes data)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xde79695d5cefF7c324552B3ecbe6165f77FCdF53": [
      "constructor(address _singleton)"
    ],
    "0xf433EfDf1Fb438F9d79D1E71dF2c2bdeAc95e28E": [
      "constructor(bytes4[] functions, address[] accounts)",
      "function GRANT_ACCESS_SIG() view returns (bytes4)",
      "function functionAccess(bytes4) view returns (address)",
      "function grantAccess(bytes4 sig, address account)",
      "function hasAccess(bytes4 sig, address account) view returns (bool)"
    ]
  }
}
