{
  "name": "pNetwork",
  "blockNumber": 17288492,
  "configHash": "0x1df8a07e293c04127074731ef8d769ba9b1d42c09f7a3a53dfcad723aa7297ca",
  "contracts": [
    {
      "name": "ERC20 Vault V1",
      "address": "0x112334f50Cb6efcff4e35Ae51A022dBE41a48135",
      "code": "https://etherscan.deth.net/address/0x112334f50Cb6efcff4e35Ae51A022dBE41a48135",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "PNETWORK": "0xDffE7AC6B538B4A7Fd81c98C5fba0415d63fB132"
      },
      "derivedName": "Erc20Vault"
    },
    {
      "name": "PNT",
      "address": "0x89Ab32156e46F46D02ade3FEcbe5Fc4243B9AAeD",
      "code": "https://etherscan.deth.net/address/0x89Ab32156e46F46D02ade3FEcbe5Fc4243B9AAeD",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "adminOperator": "0x0000000000000000000000000000000000000000",
        "decimals": 18,
        "defaultOperators": [],
        "getHubAddr": "0xD216153c06E857cD7f72665E0aF1d7D82172F494",
        "getInflation": "28350000000000000000000000",
        "granularity": 1,
        "gsnExtraGas": 40000,
        "gsnFeeTarget": "0x56db816b3456EDfa6edbC65F00ba45296fE136F2",
        "gsnTrustedSigner": "0x56db816b3456EDfa6edbC65F00ba45296fE136F2",
        "inflationAmounts": [
          "18900000000000000000000000",
          "9450000000000000000000000"
        ],
        "inflationOwner": "0xEC1b464f29845ab180887a00B6b0C8c19Cb13d97",
        "inflationStartTime": 1592411070,
        "inflationTimeSpans": [31536000, 31536000],
        "inflationWithdrawnAmount": "28350000000000000000000000",
        "name": "pNetwork Token",
        "owner": "0x56db816b3456EDfa6edbC65F00ba45296fE136F2",
        "paused": false,
        "relayHubVersion": "1.0.0",
        "symbol": "PNT",
        "totalSupply": "87975228709640845629432729"
      }
    },
    {
      "name": "UOS Vault",
      "address": "0x9f8622b11984AfC8f0a42A394928702017c5968D",
      "code": "https://etherscan.deth.net/address/0x9f8622b11984AfC8f0a42A394928702017c5968D",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "PNETWORK": "0x14C4d33549d2A9e17d7dF6Cf180162A575D4cBe9"
      },
      "derivedName": "Erc20Vault"
    },
    {
      "name": "pNetwork Multisig",
      "address": "0xb5977b683c64fce80A1f5b587964b6f77Ee6CfDB",
      "code": "https://etherscan.deth.net/address/0xb5977b683c64fce80A1f5b587964b6f77Ee6CfDB,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0xf76d498488b878a740c7f1971da177216c0beb62c0b78ee3d1406b28757136ce",
        "getChainId": 1,
        "getOwners": [
          "0x4b8736CCB7226F3353aC6c2f98f34bbAc2a68C45",
          "0x3aA6eB007D58dcdfbD5eAD9ef69dd23316887262",
          "0xb95932E9dBC985306699e0D2977FfdDbfaCBdB20",
          "0x3fcf46d517b00289c3620F1EEa8B57Ce3A35Bd1f"
        ],
        "getThreshold": 2,
        "nonce": 5,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xB6D14DdFBE01AC537accBe35cCd771C30D53c535",
      "code": "https://etherscan.deth.net/address/0xB6D14DdFBE01AC537accBe35cCd771C30D53c535",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0x364B37Bbd812c76f3E8b0C1F62a2E33A21cFD496"
      }
    },
    {
      "name": "RelayHub",
      "address": "0xD216153c06E857cD7f72665E0aF1d7D82172F494",
      "code": "https://etherscan.deth.net/address/0xD216153c06E857cD7f72665E0aF1d7D82172F494",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "version": "1.0.0"
      }
    },
    {
      "name": "PProxyAdmin",
      "address": "0xDc2c547F6b6a89F1D96d66d50fDCbD69979Aee2a",
      "code": "https://etherscan.deth.net/address/0xDc2c547F6b6a89F1D96d66d50fDCbD69979Aee2a",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0xb5977b683c64fce80A1f5b587964b6f77Ee6CfDB"
      }
    },
    {
      "name": "ERC20 Vault V2",
      "address": "0xe396757EC7E6aC7C8E5ABE7285dde47b98F22db8",
      "code": "https://etherscan.deth.net/address/0xe396757EC7E6aC7C8E5ABE7285dde47b98F22db8,0x34D085516f9D7794192aDB10C995d9c532E335aF",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x34D085516f9D7794192aDB10C995d9c532E335aF",
        "admin": "0xDc2c547F6b6a89F1D96d66d50fDCbD69979Aee2a"
      },
      "values": {
        "ETHPNT_TOKEN_ADDRESS": "0xf4eA6B892853413bD9d9f1a5D3a620A0ba39c5b2",
        "ORIGIN_CHAIN_ID": "0x005fe7f9",
        "PNETWORK": "0x341aA660fD5c280F5a9501E3822bB4a98E816D1b",
        "PNT_TOKEN_ADDRESS": "0x89Ab32156e46F46D02ade3FEcbe5Fc4243B9AAeD"
      },
      "derivedName": "Erc20Vault"
    },
    {
      "name": "EthPnt",
      "address": "0xf4eA6B892853413bD9d9f1a5D3a620A0ba39c5b2",
      "code": "https://etherscan.deth.net/address/0xf4eA6B892853413bD9d9f1a5D3a620A0ba39c5b2,0x8474a898677C3bc97f35A86c387aE34Bf272C860",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x8474a898677C3bc97f35A86c387aE34Bf272C860",
        "admin": "0xB6D14DdFBE01AC537accBe35cCd771C30D53c535"
      },
      "values": {
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xdb94fb7fdbffd548b5e058fcd76cc73c6bfae4843b728c540043b00b4ff00049",
        "name": "pNetwork Token",
        "symbol": "ethPNT",
        "totalSupply": "8800000000000000000000000"
      }
    }
  ],
  "eoas": [
    "0x14C4d33549d2A9e17d7dF6Cf180162A575D4cBe9",
    "0x341aA660fD5c280F5a9501E3822bB4a98E816D1b",
    "0x364B37Bbd812c76f3E8b0C1F62a2E33A21cFD496",
    "0x3aA6eB007D58dcdfbD5eAD9ef69dd23316887262",
    "0x3fcf46d517b00289c3620F1EEa8B57Ce3A35Bd1f",
    "0x4b8736CCB7226F3353aC6c2f98f34bbAc2a68C45",
    "0x56db816b3456EDfa6edbC65F00ba45296fE136F2",
    "0xb95932E9dBC985306699e0D2977FfdDbfaCBdB20",
    "0xDffE7AC6B538B4A7Fd81c98C5fba0415d63fB132",
    "0xEC1b464f29845ab180887a00B6b0C8c19Cb13d97"
  ],
  "abis": {
    "0x112334f50Cb6efcff4e35Ae51A022dBE41a48135": [
      "constructor(address _weth, address[] _tokensToSupport)",
      "event LogWithdrawToken(address indexed _from, address indexed _token, uint256 amount)",
      "event PegIn(address _tokenAddress, address _tokenSender, uint256 _tokenAmount, string _destinationAddress, bytes _userData)",
      "function IS_TOKEN_SUPPORTED(address _token) view returns (bool)",
      "function PNETWORK() view returns (address)",
      "function addSupportedToken(address _tokenAddress) returns (bool SUCCESS)",
      "function adminWithdraw(address asset)",
      "function destroy()",
      "function getSupportedTokens() view returns (address[] res)",
      "function migrate(address _to)",
      "function migrateSingle(address _to, address _tokenAddress)",
      "function pegIn(uint256 _tokenAmount, address _tokenAddress, string _destinationAddress) returns (bool)",
      "function pegIn(uint256 _tokenAmount, address _tokenAddress, string _destinationAddress, bytes _userData) returns (bool)",
      "function pegInEth(string _destinationAddress, bytes _userData) payable returns (bool)",
      "function pegInEth(string _destinationAddress) payable returns (bool)",
      "function pegOut(address _tokenRecipient, address _tokenAddress, uint256 _tokenAmount, bytes _userData) returns (bool)",
      "function pegOut(address _tokenRecipient, address _tokenAddress, uint256 _tokenAmount) returns (bool)",
      "function removeSupportedToken(address _tokenAddress) returns (bool SUCCESS)",
      "function setPNetwork(address _pnetwork)",
      "function setWeth(address _weth)",
      "function tokensReceived(address, address from, address to, uint256 amount, bytes userData, bytes)",
      "function weth() view returns (address)"
    ],
    "0x34D085516f9D7794192aDB10C995d9c532E335aF": [
      "event Initialized(uint8 version)",
      "event LogWithdrawToken(address indexed _from, address indexed _token, uint256 amount)",
      "event PegIn(address _tokenAddress, address _tokenSender, uint256 _tokenAmount, string _destinationAddress, bytes _userData, bytes4 _originChainId, bytes4 _destinationChainId)",
      "function ETHPNT_TOKEN_ADDRESS() view returns (address)",
      "function ORIGIN_CHAIN_ID() view returns (bytes4)",
      "function PNETWORK() view returns (address)",
      "function PNT_TOKEN_ADDRESS() view returns (address)",
      "function addSupportedToken(address _tokenAddress) returns (bool SUCCESS)",
      "function adminWithdraw(address asset)",
      "function changeOriginChainId(bytes4 _newOriginChainId) returns (bool success)",
      "function getSupportedTokens() view returns (address[] res)",
      "function initialize(address _weth, address[] _tokensToSupport, bytes4 _originChainId)",
      "function isTokenSupported(address _token) view returns (bool)",
      "function pegIn(uint256 _tokenAmount, address _tokenAddress, string _destinationAddress, bytes4 _destinationChainId) returns (bool)",
      "function pegIn(uint256 _tokenAmount, address _tokenAddress, string _destinationAddress, bytes _userData, bytes4 _destinationChainId) returns (bool)",
      "function pegInEth(string _destinationAddress, bytes4 _destinationChainId, bytes _userData) payable returns (bool)",
      "function pegInEth(string _destinationAddress, bytes4 _destinationChainId) payable returns (bool)",
      "function pegOut(address _tokenRecipient, address _tokenAddress, uint256 _tokenAmount, bytes _userData) returns (bool success)",
      "function pegOut(address _tokenRecipient, address _tokenAddress, uint256 _tokenAmount) returns (bool success)",
      "function removeSupportedToken(address _tokenAddress) returns (bool SUCCESS)",
      "function setPNetwork(address _pnetwork)",
      "function setWEthUnwrapperAddress(address _address)",
      "function setWeth(address _weth)",
      "function tokensReceived(address, address from, address to, uint256 amount, bytes userData, bytes)",
      "function weth() view returns (address)"
    ],
    "0x8474a898677C3bc97f35A86c387aE34Bf272C860": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint8 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string name, string symbol, uint256 initialSupply, address owner)",
      "function initialize(address _daoTreasury)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x89Ab32156e46F46D02ade3FEcbe5Fc4243B9AAeD": [
      "constructor(uint256 initialSupply, address _gsnTrustedSigner, address _gsnFeeTarget, uint256[] _inflationTimeSpans, uint256[] _inflationsAmounts, address _adminOperator)",
      "event AdminOperatorChange(address oldOperator, address newOperator)",
      "event AdminTransferInvoked(address operator)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AuthorizedOperator(address indexed operator, address indexed tokenHolder)",
      "event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData)",
      "event InflationMint(uint256 currentAccruedInflation, uint256 withdrawn, address target)",
      "event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RelayHubChanged(address indexed oldRelayHub, address indexed newRelayHub)",
      "event RevokedOperator(address indexed operator, address indexed tokenHolder)",
      "event Sent(address indexed operator, address indexed from, address indexed to, uint256 amount, bytes data, bytes operatorData)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "function acceptRelayedCall(address relay, address from, bytes encodedFunction, uint256 transactionFee, uint256 gasPrice, uint256 gasLimit, uint256 nonce, bytes approvalData, uint256) view returns (uint256, bytes)",
      "function adminOperator() view returns (address)",
      "function adminTransfer(address sender, address recipient, uint256 amount, bytes data, bytes operatorData)",
      "function allowance(address holder, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function authorizeOperator(address operator)",
      "function balanceOf(address tokenHolder) view returns (uint256)",
      "function burn(uint256 amount, bytes data)",
      "function decimals() pure returns (uint8)",
      "function defaultOperators() view returns (address[])",
      "function getHubAddr() view returns (address)",
      "function getInflation() view returns (uint256 inflation)",
      "function granularity() view returns (uint256)",
      "function gsnExtraGas() view returns (uint256)",
      "function gsnFeeTarget() view returns (address)",
      "function gsnTrustedSigner() view returns (address)",
      "function inflationAmounts(uint256) view returns (uint256)",
      "function inflationOwner() view returns (address)",
      "function inflationStartTime() view returns (uint256)",
      "function inflationTimeSpans(uint256) view returns (uint256)",
      "function inflationWithdrawnAmount() view returns (uint256)",
      "function isOperatorFor(address operator, address tokenHolder) view returns (bool)",
      "function name() view returns (string)",
      "function operatorBurn(address account, uint256 amount, bytes data, bytes operatorData)",
      "function operatorSend(address sender, address recipient, uint256 amount, bytes data, bytes operatorData)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function postRelayedCall(bytes context, bool success, uint256 actualCharge, bytes32 preRetVal)",
      "function preRelayedCall(bytes context) returns (bytes32)",
      "function relayHubVersion() view returns (string)",
      "function renounceOwnership()",
      "function revokeOperator(address operator)",
      "function send(address recipient, uint256 amount, bytes data)",
      "function setAdminOperator(address adminOperator_)",
      "function setFeeTarget(address _gsnFeeTarget)",
      "function setGSNExtraGas(uint256 _gsnExtraGas)",
      "function setInflationOwner(address newOwner)",
      "function setTrustedSigner(address _gsnTrustedSigner)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address holder, address recipient, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function withdrawInflation()"
    ],
    "0x9f8622b11984AfC8f0a42A394928702017c5968D": [
      "constructor(address _weth, address[] _tokensToSupport)",
      "event LogWithdrawToken(address indexed _from, address indexed _token, uint256 amount)",
      "event PegIn(address _tokenAddress, address _tokenSender, uint256 _tokenAmount, string _destinationAddress, bytes _userData)",
      "function IS_TOKEN_SUPPORTED(address _token) view returns (bool)",
      "function PNETWORK() view returns (address)",
      "function addSupportedToken(address _tokenAddress) returns (bool SUCCESS)",
      "function adminWithdraw(address asset)",
      "function destroy()",
      "function getSupportedTokens() view returns (address[] res)",
      "function migrate(address _to)",
      "function migrateSingle(address _to, address _tokenAddress)",
      "function pegIn(uint256 _tokenAmount, address _tokenAddress, string _destinationAddress) returns (bool)",
      "function pegIn(uint256 _tokenAmount, address _tokenAddress, string _destinationAddress, bytes _userData) returns (bool)",
      "function pegInEth(string _destinationAddress, bytes _userData) payable returns (bool)",
      "function pegInEth(string _destinationAddress) payable returns (bool)",
      "function pegOut(address _tokenRecipient, address _tokenAddress, uint256 _tokenAmount, bytes _userData) returns (bool)",
      "function pegOut(address _tokenRecipient, address _tokenAddress, uint256 _tokenAmount) returns (bool)",
      "function removeSupportedToken(address _tokenAddress) returns (bool SUCCESS)",
      "function setPNetwork(address _pnetwork)",
      "function setWeth(address _weth)",
      "function tokensReceived(address, address from, address to, uint256 amount, bytes userData, bytes)",
      "function weth() view returns (address)"
    ],
    "0xb5977b683c64fce80A1f5b587964b6f77Ee6CfDB": [
      "constructor(address _singleton)"
    ],
    "0xB6D14DdFBE01AC537accBe35cCd771C30D53c535": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xD216153c06E857cD7f72665E0aF1d7D82172F494": [
      "function withdraw(uint256 amount, address dest)",
      "function registerRelay(uint256 transactionFee, string url)",
      "function canRelay(address relay, address from, address to, bytes encodedFunction, uint256 transactionFee, uint256 gasPrice, uint256 gasLimit, uint256 nonce, bytes signature, bytes approvalData) view returns (uint256 status, bytes recipientContext)",
      "function recipientCallsAtomic(address recipient, bytes encodedFunctionWithFrom, uint256 transactionFee, uint256 gasPrice, uint256 gasLimit, uint256 preChecksGas, bytes recipientContext) returns (uint8)",
      "function getNonce(address from) view returns (uint256)",
      "function penalizeIllegalTransaction(bytes unsignedTx, bytes signature)",
      "function relayCall(address from, address recipient, bytes encodedFunction, uint256 transactionFee, uint256 gasPrice, uint256 gasLimit, uint256 nonce, bytes signature, bytes approvalData)",
      "function version() view returns (string)",
      "function requiredGas(uint256 relayedCallStipend) view returns (uint256)",
      "function balanceOf(address target) view returns (uint256)",
      "function canUnstake(address relay) view returns (bool)",
      "function getRelay(address relay) view returns (uint256 totalStake, uint256 unstakeDelay, uint256 unstakeTime, address owner, uint8 state)",
      "function maxPossibleCharge(uint256 relayedCallStipend, uint256 gasPrice, uint256 transactionFee) view returns (uint256)",
      "function penalizeRepeatedNonce(bytes unsignedTx1, bytes signature1, bytes unsignedTx2, bytes signature2)",
      "function depositFor(address target) payable",
      "function stake(address relay, uint256 unstakeDelay) payable",
      "function removeRelayByOwner(address relay)",
      "function unstake(address relay)",
      "event Staked(address indexed relay, uint256 stake, uint256 unstakeDelay)",
      "event RelayAdded(address indexed relay, address indexed owner, uint256 transactionFee, uint256 stake, uint256 unstakeDelay, string url)",
      "event RelayRemoved(address indexed relay, uint256 unstakeTime)",
      "event Unstaked(address indexed relay, uint256 stake)",
      "event Deposited(address indexed recipient, address indexed from, uint256 amount)",
      "event Withdrawn(address indexed account, address indexed dest, uint256 amount)",
      "event CanRelayFailed(address indexed relay, address indexed from, address indexed to, bytes4 selector, uint256 reason)",
      "event TransactionRelayed(address indexed relay, address indexed from, address indexed to, bytes4 selector, uint8 status, uint256 charge)",
      "event Penalized(address indexed relay, address sender, uint256 amount)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xDc2c547F6b6a89F1D96d66d50fDCbD69979Aee2a": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xe396757EC7E6aC7C8E5ABE7285dde47b98F22db8": [
      "constructor(address _logic, address _admin, bytes _data)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xf4eA6B892853413bD9d9f1a5D3a620A0ba39c5b2": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ]
  }
}
