{
  "name": "optimism",
  "blockNumber": 17364702,
  "configHash": "0xc6d7e2aa3c98f44d250051efb838b4926af8818ae851906f592a92f8eaddcc0e",
  "version": 1,
  "contracts": [
    {
      "name": "OVM_FraudVerifier",
      "address": "0x042065416C5c665dc196076745326Af3Cd840D15",
      "code": "https://etherscan.deth.net/address/0x042065416C5c665dc196076745326Af3Cd840D15",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F"
      }
    },
    {
      "name": "L1DAITokenBridge",
      "address": "0x10E6593CDda8c58a1d0f14C5164B376352a55f2F",
      "code": "https://etherscan.deth.net/address/0x10E6593CDda8c58a1d0f14C5164B376352a55f2F",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "escrow": "0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65",
        "isOpen": 1,
        "l1Token": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "l2DAITokenBridge": "0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65",
        "l2Token": "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1",
        "messenger": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1"
      },
      "derivedName": "L1DAITokenBridge"
    },
    {
      "name": "L1CrossDomainMessengerProxy",
      "address": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
      "code": "https://etherscan.deth.net/address/0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1,0xd9166833FF12A5F900ccfBf2c8B62a90F1Ca1FD5",
      "upgradeability": {
        "type": "resolved delegate proxy",
        "addressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "implementationName": "OVM_L1CrossDomainMessenger",
        "implementation": "0xd9166833FF12A5F900ccfBf2c8B62a90F1Ca1FD5"
      },
      "values": {
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "owner": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
        "paused": false
      },
      "derivedName": "L1CrossDomainMessenger"
    },
    {
      "name": "OVM_ExecutionManager",
      "address": "0x2745C24822f542BbfFB41c6cB20EdF766b5619f5",
      "code": "https://etherscan.deth.net/address/0x2745C24822f542BbfFB41c6cB20EdF766b5619f5",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "CALL_WITH_VALUE_INTRINSIC_GAS": 90000,
        "getMaxTransactionGasLimit": 11000000,
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "ovmADDRESS": "0xdEfa017defA017DeFA017DEfa017DeFA017DeFa0",
        "ovmCALLER": "0xdEfa017defA017DeFA017DEfa017DeFA017DeFa0",
        "ovmCALLVALUE": 0,
        "ovmCHAINID": 10,
        "ovmGASLIMIT": "100855174448654910735967293843348213622254273308850722065303462460559959130493",
        "ovmL1QUEUEORIGIN": 0,
        "ovmL1TXORIGIN": "0xdEfa017defA017DeFA017DEfa017DeFA017DeFa0",
        "ovmNUMBER": "100855174448654910735967293843348213622254273308850722065303462460559959130493",
        "ovmTIMESTAMP": "100855174448654910735967293843348213622254273308850722065303462460559959130493"
      }
    },
    {
      "name": "OVM_StateTransitionerFactory",
      "address": "0x38A6ed6fd76035684caDef38cF49a2FffA782B67",
      "code": "https://etherscan.deth.net/address/0x38A6ed6fd76035684caDef38cF49a2FffA782B67",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F"
      }
    },
    {
      "name": "CTCStorageContainerBatches_OLD",
      "address": "0x3EA1a3839D8ca9a7ff3c567a9F36f4C4DbECc3eE",
      "code": "https://etherscan.deth.net/address/0x3EA1a3839D8ca9a7ff3c567a9F36f4C4DbECc3eE",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getGlobalMetadata": "0x000000000000000000cf76b200618d5800000001ef0700003e26f1",
        "length": 22954,
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "owner": "OVM_CanonicalTransactionChain"
      },
      "derivedName": "OVM_ChainStorageContainer"
    },
    {
      "name": "GnosisSafe",
      "address": "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64",
      "code": "https://etherscan.deth.net/address/0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0xc7edf91fb84ec337ffa25b6f502a8c52c3dd4ea86d452728767d2836fa3819e3",
        "getChainId": 1,
        "getOwners": [
          "0xb23794fd6BA1CEAd01Cf54D772b8341F2F0197A5",
          "0x4665374939642965EfD8357D4568D2A77f677429"
        ],
        "getThreshold": 2,
        "nonce": 20,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "L1Escrow",
      "address": "0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65",
      "code": "https://etherscan.deth.net/address/0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65",
      "upgradeability": {
        "type": "immutable"
      }
    },
    {
      "name": "CanonicalTransactionChain_OLD",
      "address": "0x4BF681894abEc828B212C906082B444Ceb2f6cf6",
      "code": "https://etherscan.deth.net/address/0x4BF681894abEc828B212C906082B444Ceb2f6cf6",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "appendQueueBatch": [],
        "batches": "0x3EA1a3839D8ca9a7ff3c567a9F36f4C4DbECc3eE",
        "forceInclusionPeriodBlocks": 839466,
        "forceInclusionPeriodSeconds": 12592000,
        "getLastBlockNumber": 13596338,
        "getLastTimestamp": 1636653056,
        "getNextQueueIndex": 126727,
        "getNumPendingQueueElements": 0,
        "getQueueLength": 126727,
        "getTotalBatches": 22954,
        "getTotalElements": 4073201,
        "L2_GAS_DISCOUNT_DIVISOR": 32,
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "MAX_ROLLUP_TX_SIZE": 50000,
        "maxTransactionGasLimit": 11000000,
        "MIN_ROLLUP_TX_GAS": 100000,
        "queue": "0xA0b912b3Ea71A04065Ff82d3936D518ED6E38039"
      },
      "derivedName": "OVM_CanonicalTransactionChain"
    },
    {
      "name": "CanonicalTransactionChain",
      "address": "0x5E4e65926BA27467555EB562121fac00D24E9dD2",
      "code": "https://etherscan.deth.net/address/0x5E4e65926BA27467555EB562121fac00D24E9dD2",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "batches": "0xD16463EF9b0338CE3D73309028ef1714D220c024",
        "enqueueGasCost": 60000,
        "enqueueL2GasPrepaid": 1920000,
        "getLastBlockNumber": 17364650,
        "getLastTimestamp": 1685364015,
        "getNextQueueIndex": 353827,
        "getNumPendingQueueElements": 3,
        "getQueueLength": 353830,
        "getTotalBatches": 829803,
        "getTotalElements": 102603827,
        "l2GasDiscountDivisor": 32,
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "MAX_ROLLUP_TX_SIZE": 50000,
        "maxTransactionGasLimit": 15000000,
        "MIN_ROLLUP_TX_GAS": 100000
      },
      "derivedName": "CanonicalTransactionChain"
    },
    {
      "name": "SynthetixBridgeEscrow",
      "address": "0x5Fd79D46EBA7F351fe49BFF9E87cdeA6c821eF9f",
      "code": "https://etherscan.deth.net/address/0x5Fd79D46EBA7F351fe49BFF9E87cdeA6c821eF9f",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "owner": "0xEb3107117FEAd7de89Cd14D463D340A2E6917769"
      }
    },
    {
      "name": "SCCStorageContainerBatches_OLD",
      "address": "0x77eBfdFcC906DDcDa0C42B866f26A8D5A2bb0572",
      "code": "https://etherscan.deth.net/address/0x77eBfdFcC906DDcDa0C42B866f26A8D5A2bb0572",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getGlobalMetadata": "0x000000000000000000000000000000000000618d50d100003e24ec",
        "length": 4302,
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "owner": "OVM_StateCommitmentChain"
      },
      "derivedName": "OVM_ChainStorageContainer"
    },
    {
      "name": "L1StandardBridge",
      "address": "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1",
      "code": "https://etherscan.deth.net/address/0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1,0x40E0C049f4671846E9Cff93AAEd88f2B48E527bB",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x40E0C049f4671846E9Cff93AAEd88f2B48E527bB",
        "admin": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A"
      },
      "values": {
        "l2TokenBridge": "0x4200000000000000000000000000000000000010",
        "messenger": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1"
      }
    },
    {
      "name": "OptimismMultisig",
      "address": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
      "code": "https://etherscan.deth.net/address/0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A,0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F"
      },
      "values": {
        "domainSeparator": "0x4e6a6554de0308f5ece8ff736beed8a1b876d16f5c27cac8e466d7de0c703890",
        "getModules": [],
        "getOwners": [
          "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64",
          "0x3041BA32f451F5850c147805F5521AC206421623",
          "0xE7dEA1306D9F829bA469d1904c50903b46ebd02e",
          "0xBF93D4d727F7Ba1F753E1124C3e532dCb04Ea2c8",
          "0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15",
          "0x7cB07FE039a92B3D784f284D919503A381BEC54f",
          "0x9bbFB9919062C29a5eE15aCD93c9D7c3b14d31aa"
        ],
        "getThreshold": 5,
        "NAME": "Gnosis Safe",
        "nonce": 81,
        "VERSION": "1.1.1"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "CTCStorageContainerQueue",
      "address": "0xA0b912b3Ea71A04065Ff82d3936D518ED6E38039",
      "code": "https://etherscan.deth.net/address/0xA0b912b3Ea71A04065Ff82d3936D518ED6E38039",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getGlobalMetadata": "0x000000000000000000000000000000000000000000000000000000",
        "length": 253454,
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "owner": "OVM_CanonicalTransactionChain"
      },
      "derivedName": "OVM_ChainStorageContainer"
    },
    {
      "name": "SCCStorageContainerBatches",
      "address": "0xb0ddFf09c4019e31960de11bD845E836078E8EbE",
      "code": "https://etherscan.deth.net/address/0xb0ddFf09c4019e31960de11bD845E836078E8EbE",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getGlobalMetadata": "0x00000000000000000000000000000000000064749c5300061d9856",
        "length": 108702,
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "owner": "StateCommitmentChain"
      },
      "derivedName": "ChainStorageContainer"
    },
    {
      "name": "StateCommitmentChain",
      "address": "0xBe5dAb4A2e9cd0F27300dB4aB94BeE3A233AEB19",
      "code": "https://etherscan.deth.net/address/0xBe5dAb4A2e9cd0F27300dB4aB94BeE3A233AEB19",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "batches": "0xb0ddFf09c4019e31960de11bD845E836078E8EbE",
        "FRAUD_PROOF_WINDOW": 604800,
        "getLastSequencerTimestamp": 1685363795,
        "getTotalBatches": 108702,
        "getTotalElements": 102602838,
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "SEQUENCER_PUBLISH_WINDOW": 12592000
      },
      "derivedName": "StateCommitmentChain"
    },
    {
      "name": "BondManager",
      "address": "0xcd626E1328b41fCF24737F137BcD4CE0c32bc8d1",
      "code": "https://etherscan.deth.net/address/0xcd626E1328b41fCF24737F137BcD4CE0c32bc8d1",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F"
      }
    },
    {
      "name": "mockOVM_BondManager",
      "address": "0xCd76de5C57004d47d0216ec7dAbd3c72D8c49057",
      "code": "https://etherscan.deth.net/address/0xCd76de5C57004d47d0216ec7dAbd3c72D8c49057",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F"
      }
    },
    {
      "name": "OVM_StateManagerFactory",
      "address": "0xd0e3e318154716BD9d007E1E6B021Eab246ff98d",
      "code": "https://etherscan.deth.net/address/0xd0e3e318154716BD9d007E1E6B021Eab246ff98d",
      "upgradeability": {
        "type": "immutable"
      }
    },
    {
      "name": "CTCStorageContainerBatches",
      "address": "0xD16463EF9b0338CE3D73309028ef1714D220c024",
      "code": "https://etherscan.deth.net/address/0xD16463EF9b0338CE3D73309028ef1714D220c024",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getGlobalMetadata": "0x00000000000000000108f6aa0064749d2f000005662300061d9c33",
        "length": 829803,
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "owner": "CanonicalTransactionChain"
      },
      "derivedName": "ChainStorageContainer"
    },
    {
      "name": "AddressManager",
      "address": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
      "code": "https://etherscan.deth.net/address/0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "BondManager": "0xcd626E1328b41fCF24737F137BcD4CE0c32bc8d1",
        "OVM_BondManager": "0xCd76de5C57004d47d0216ec7dAbd3c72D8c49057",
        "OVM_CanonicalTransactionChain": "0x4BF681894abEc828B212C906082B444Ceb2f6cf6",
        "OVM_ChainStorageContainer_CTC_batches": "0x3EA1a3839D8ca9a7ff3c567a9F36f4C4DbECc3eE",
        "OVM_ChainStorageContainer_CTC_queue": "0xA0b912b3Ea71A04065Ff82d3936D518ED6E38039",
        "OVM_ChainStorageContainer_SCC_batches": "0x77eBfdFcC906DDcDa0C42B866f26A8D5A2bb0572",
        "OVM_DecompressionPrecompileAddress": "0x4200000000000000000000000000000000000005",
        "OVM_ExecutionManager": "0x2745C24822f542BbfFB41c6cB20EdF766b5619f5",
        "OVM_FraudVerifier": "0x042065416C5c665dc196076745326Af3Cd840D15",
        "OVM_L1MultiMessageRelayer": "0xF26391FBB1f77481f80a7d646AC08ba3817eA891",
        "OVM_L2CrossDomainMessenger": "0x4200000000000000000000000000000000000007",
        "OVM_Proposer": "0x473300df21D047806A082244b417f96b32f13A33",
        "OVM_SafetyChecker": "0xfe1F9Cf28ecDb12110aa8086e6FD343EA06035cC",
        "OVM_Sequencer": "0x6887246668a3b87F54DeB3b94Ba47a6f63F32985",
        "OVM_StateCommitmentChain": "0xE969C2724d2448F1d1A6189d3e2aA1F37d5998c1",
        "OVM_StateManagerFactory": "0xd0e3e318154716BD9d007E1E6B021Eab246ff98d",
        "OVM_StateTransitionerFactory": "0x38A6ed6fd76035684caDef38cF49a2FffA782B67",
        "owner": "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A",
        "Proxy__OVM_L1CrossDomainMessenger": "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1",
        "Proxy__OVM_L1StandardBridge": "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1"
      },
      "derivedName": "Lib_AddressManager"
    },
    {
      "name": "OVM_StateCommitmentChain",
      "address": "0xE969C2724d2448F1d1A6189d3e2aA1F37d5998c1",
      "code": "https://etherscan.deth.net/address/0xE969C2724d2448F1d1A6189d3e2aA1F37d5998c1",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "batches": "0x77eBfdFcC906DDcDa0C42B866f26A8D5A2bb0572",
        "FRAUD_PROOF_WINDOW": 604800,
        "getLastSequencerTimestamp": 1636651217,
        "getTotalBatches": 4302,
        "getTotalElements": 4072684,
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
        "SEQUENCER_PUBLISH_WINDOW": 12592000
      }
    },
    {
      "name": "SynthetixMultisig",
      "address": "0xEb3107117FEAd7de89Cd14D463D340A2E6917769",
      "code": "https://etherscan.deth.net/address/0xEb3107117FEAd7de89Cd14D463D340A2E6917769,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0x812bd2187bbdb6f18e0fde445c3e46e10661c15c4af7f51d5795d4dec4fb4caa",
        "getChainId": 1,
        "getOwners": [
          "0x78361eF33B6E8627932f28BC07d84B2f72166C8E",
          "0x47F43bb6E11624aD886459AF517e16DACd04840F",
          "0xb44D3a509E71b049449EB7cfF1575742A34aE1De",
          "0xDADbF33cC2E205610d0f96B26F4DB827Ad5bFF50",
          "0x8440530AB38f87B72623c42C3AaB3436e8647927",
          "0xD1F0132c78f0C1FFe9c7065823FFC1D31D41CE5d",
          "0x79f7ce9DA9D933874fcB5f7deBd78CA3C694D743",
          "0xB9A914bf898cDA1E889e2d9aeDc1fdcfc5fe2623",
          "0xd5e23971EC27d26cf5dBa1a7e5fAF8AE9F055d6f",
          "0x279470Ac4761117ad2f7020942dE4938B90c25cD",
          "0xb59E66AC953be31C998d9F994c7b05E62845Bc95",
          "0x56016aBC139EED381Fa35fe1862DBBbDe94a07F6",
          "0x302d2451d9f47620374B54c521423Bf0403916A2"
        ],
        "getThreshold": 5,
        "nonce": 2900,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "OVM_L1MultiMessageRelayer",
      "address": "0xF26391FBB1f77481f80a7d646AC08ba3817eA891",
      "code": "https://etherscan.deth.net/address/0xF26391FBB1f77481f80a7d646AC08ba3817eA891",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "libAddressManager": "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F"
      }
    },
    {
      "name": "OVM_SafetyChecker",
      "address": "0xfe1F9Cf28ecDb12110aa8086e6FD343EA06035cC",
      "code": "https://etherscan.deth.net/address/0xfe1F9Cf28ecDb12110aa8086e6FD343EA06035cC",
      "upgradeability": {
        "type": "immutable"
      }
    }
  ],
  "eoas": [
    "0x279470Ac4761117ad2f7020942dE4938B90c25cD",
    "0x302d2451d9f47620374B54c521423Bf0403916A2",
    "0x3041BA32f451F5850c147805F5521AC206421623",
    "0x4200000000000000000000000000000000000005",
    "0x4200000000000000000000000000000000000007",
    "0x4200000000000000000000000000000000000010",
    "0x4665374939642965EfD8357D4568D2A77f677429",
    "0x473300df21D047806A082244b417f96b32f13A33",
    "0x47F43bb6E11624aD886459AF517e16DACd04840F",
    "0x4D014f3c5F33Aa9Cd1Dc29ce29618d07Ae666d15",
    "0x56016aBC139EED381Fa35fe1862DBBbDe94a07F6",
    "0x6887246668a3b87F54DeB3b94Ba47a6f63F32985",
    "0x78361eF33B6E8627932f28BC07d84B2f72166C8E",
    "0x79f7ce9DA9D933874fcB5f7deBd78CA3C694D743",
    "0x7cB07FE039a92B3D784f284D919503A381BEC54f",
    "0x8440530AB38f87B72623c42C3AaB3436e8647927",
    "0x9bbFB9919062C29a5eE15aCD93c9D7c3b14d31aa",
    "0xb23794fd6BA1CEAd01Cf54D772b8341F2F0197A5",
    "0xb44D3a509E71b049449EB7cfF1575742A34aE1De",
    "0xb59E66AC953be31C998d9F994c7b05E62845Bc95",
    "0xB9A914bf898cDA1E889e2d9aeDc1fdcfc5fe2623",
    "0xBF93D4d727F7Ba1F753E1124C3e532dCb04Ea2c8",
    "0xD1F0132c78f0C1FFe9c7065823FFC1D31D41CE5d",
    "0xd5e23971EC27d26cf5dBa1a7e5fAF8AE9F055d6f",
    "0xDADbF33cC2E205610d0f96B26F4DB827Ad5bFF50",
    "0xdEfa017defA017DeFA017DEfa017DeFA017DeFa0",
    "0xE7dEA1306D9F829bA469d1904c50903b46ebd02e"
  ],
  "abis": {
    "0x042065416C5c665dc196076745326Af3Cd840D15": [
      "constructor(address _libAddressManager)",
      "event FraudProofFinalized(bytes32 _preStateRoot, uint256 _preStateRootIndex, bytes32 _transactionHash, address _who)",
      "event FraudProofInitialized(bytes32 _preStateRoot, uint256 _preStateRootIndex, bytes32 _transactionHash, address _who)",
      "function finalizeFraudVerification(bytes32 _preStateRoot, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _preStateRootBatchHeader, tuple(uint256 index, bytes32[] siblings) _preStateRootProof, bytes32 _txHash, bytes32 _postStateRoot, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _postStateRootBatchHeader, tuple(uint256 index, bytes32[] siblings) _postStateRootProof)",
      "function getStateTransitioner(bytes32 _preStateRoot, bytes32 _txHash) view returns (address _transitioner)",
      "function initializeFraudVerification(bytes32 _preStateRoot, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _preStateRootBatchHeader, tuple(uint256 index, bytes32[] siblings) _preStateRootProof, tuple(uint256 timestamp, uint256 blockNumber, uint8 l1QueueOrigin, address l1TxOrigin, address entrypoint, uint256 gasLimit, bytes data) _transaction, tuple(bool isSequenced, uint256 queueIndex, uint256 timestamp, uint256 blockNumber, bytes txData) _txChainElement, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _transactionBatchHeader, tuple(uint256 index, bytes32[] siblings) _transactionProof)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)"
    ],
    "0x10E6593CDda8c58a1d0f14C5164B376352a55f2F": [
      "constructor(address _l1Token, address _l2DAITokenBridge, address _l2Token, address _l1messenger, address _escrow)",
      "event Closed()",
      "event Deny(address indexed usr)",
      "event ERC20DepositInitiated(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event ERC20WithdrawalFinalized(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event Rely(address indexed usr)",
      "function close()",
      "function deny(address usr)",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _l2Gas, bytes _data)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _l2Gas, bytes _data)",
      "function escrow() view returns (address)",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data)",
      "function isOpen() view returns (uint256)",
      "function l1Token() view returns (address)",
      "function l2DAITokenBridge() view returns (address)",
      "function l2Token() view returns (address)",
      "function messenger() view returns (address)",
      "function rely(address usr)",
      "function wards(address) view returns (uint256)"
    ],
    "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1": [
      "constructor(address _libAddressManager, string _implementationName)"
    ],
    "0x2745C24822f542BbfFB41c6cB20EdF766b5619f5": [
      "constructor(address _libAddressManager, tuple(uint256 minTransactionGasLimit, uint256 maxTransactionGasLimit, uint256 maxGasPerQueuePerEpoch, uint256 secondsPerEpoch) _gasMeterConfig, tuple(uint256 ovmCHAINID) _globalContext)",
      "function CALL_WITH_VALUE_INTRINSIC_GAS() view returns (uint256)",
      "function getMaxTransactionGasLimit() view returns (uint256 _maxTransactionGasLimit)",
      "function libAddressManager() view returns (address)",
      "function ovmADDRESS() view returns (address _ADDRESS)",
      "function ovmBALANCE(address _contract) returns (uint256 _BALANCE)",
      "function ovmCALL(uint256 _gasLimit, address _address, uint256 _value, bytes _calldata) returns (bool _success, bytes _returndata)",
      "function ovmCALL(uint256 _gasLimit, address _address, bytes _calldata) returns (bool _success, bytes _returndata)",
      "function ovmCALLER() view returns (address _CALLER)",
      "function ovmCALLVALUE() view returns (uint256 _CALLVALUE)",
      "function ovmCHAINID() view returns (uint256 _CHAINID)",
      "function ovmCREATE(bytes _bytecode) returns (address, bytes)",
      "function ovmCREATE2(bytes _bytecode, bytes32 _salt) returns (address, bytes)",
      "function ovmCREATEEOA(bytes32 _messageHash, uint8 _v, bytes32 _r, bytes32 _s)",
      "function ovmDELEGATECALL(uint256 _gasLimit, address _address, bytes _calldata) returns (bool _success, bytes _returndata)",
      "function ovmEXTCODECOPY(address _contract, uint256 _offset, uint256 _length) returns (bytes _code)",
      "function ovmEXTCODEHASH(address _contract) returns (bytes32 _EXTCODEHASH)",
      "function ovmEXTCODESIZE(address _contract) returns (uint256 _EXTCODESIZE)",
      "function ovmGASLIMIT() view returns (uint256 _GASLIMIT)",
      "function ovmGETNONCE() returns (uint256 _nonce)",
      "function ovmINCREMENTNONCE()",
      "function ovmL1QUEUEORIGIN() view returns (uint8 _queueOrigin)",
      "function ovmL1TXORIGIN() view returns (address _l1TxOrigin)",
      "function ovmNUMBER() view returns (uint256 _NUMBER)",
      "function ovmREVERT(bytes _data)",
      "function ovmSELFBALANCE() returns (uint256 _BALANCE)",
      "function ovmSLOAD(bytes32 _key) returns (bytes32 _value)",
      "function ovmSSTORE(bytes32 _key, bytes32 _value)",
      "function ovmSTATICCALL(uint256 _gasLimit, address _address, bytes _calldata) returns (bool _success, bytes _returndata)",
      "function ovmTIMESTAMP() view returns (uint256 _TIMESTAMP)",
      "function resolve(string _name) view returns (address)",
      "function run(tuple(uint256 timestamp, uint256 blockNumber, uint8 l1QueueOrigin, address l1TxOrigin, address entrypoint, uint256 gasLimit, bytes data) _transaction, address _ovmStateManager) returns (bytes)",
      "function safeCREATE(bytes _creationCode, address _address)",
      "function simulateMessage(tuple(uint256 timestamp, uint256 blockNumber, uint8 l1QueueOrigin, address l1TxOrigin, address entrypoint, uint256 gasLimit, bytes data) _transaction, address _from, uint256 _value, address _ovmStateManager) returns (bytes)"
    ],
    "0x34CfAC646f301356fAa8B21e94227e3583Fe3F5F": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedMasterCopy(address masterCopy)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function NAME() view returns (string)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeMasterCopy(address _masterCopy)",
      "function changeThreshold(uint256 _threshold)",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getMessageHash(bytes message) view returns (bytes32)",
      "function getModules() view returns (address[])",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isOwner(address owner) view returns (bool)",
      "function isValidSignature(bytes _data, bytes _signature) returns (bytes4)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signMessage(bytes _data)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x38A6ed6fd76035684caDef38cF49a2FffA782B67": [
      "constructor(address _libAddressManager)",
      "function create(address _libAddressManager, uint256 _stateTransitionIndex, bytes32 _preStateRoot, bytes32 _transactionHash) returns (address)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)"
    ],
    "0x3EA1a3839D8ca9a7ff3c567a9F36f4C4DbECc3eE": [
      "constructor(address _libAddressManager, string _owner)",
      "function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)",
      "function deleteElementsAfterInclusive(uint256 _index)",
      "function get(uint256 _index) view returns (bytes32)",
      "function getGlobalMetadata() view returns (bytes27)",
      "function length() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (string)",
      "function push(bytes32 _object, bytes27 _globalMetadata)",
      "function push(bytes32 _object)",
      "function resolve(string _name) view returns (address)",
      "function setGlobalMetadata(bytes27 _globalMetadata)"
    ],
    "0x40E0C049f4671846E9Cff93AAEd88f2B48E527bB": [
      "constructor()",
      "event ERC20DepositInitiated(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event ERC20WithdrawalFinalized(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event ETHDepositInitiated(address indexed _from, address indexed _to, uint256 _amount, bytes _data)",
      "event ETHWithdrawalFinalized(address indexed _from, address indexed _to, uint256 _amount, bytes _data)",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _l2Gas, bytes _data)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _l2Gas, bytes _data)",
      "function depositETH(uint32 _l2Gas, bytes _data) payable",
      "function depositETHTo(address _to, uint32 _l2Gas, bytes _data) payable",
      "function deposits(address, address) view returns (uint256)",
      "function donateETH() payable",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data)",
      "function finalizeETHWithdrawal(address _from, address _to, uint256 _amount, bytes _data)",
      "function initialize(address _l1messenger, address _l2TokenBridge)",
      "function l2TokenBridge() view returns (address)",
      "function messenger() view returns (address)"
    ],
    "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64": [
      "constructor(address _singleton)"
    ],
    "0x467194771dAe2967Aef3ECbEDD3Bf9a310C76C65": [
      "constructor()",
      "event Approve(address indexed token, address indexed spender, uint256 value)",
      "event Deny(address indexed usr)",
      "event Rely(address indexed usr)",
      "function approve(address token, address spender, uint256 value)",
      "function deny(address usr)",
      "function rely(address usr)",
      "function wards(address) view returns (uint256)"
    ],
    "0x4BF681894abEc828B212C906082B444Ceb2f6cf6": [
      "constructor(address _libAddressManager, uint256 _forceInclusionPeriodSeconds, uint256 _forceInclusionPeriodBlocks, uint256 _maxTransactionGasLimit)",
      "event QueueBatchAppended(uint256 _startingQueueIndex, uint256 _numQueueElements, uint256 _totalElements)",
      "event SequencerBatchAppended(uint256 _startingQueueIndex, uint256 _numQueueElements, uint256 _totalElements)",
      "event TransactionBatchAppended(uint256 indexed _batchIndex, bytes32 _batchRoot, uint256 _batchSize, uint256 _prevTotalElements, bytes _extraData)",
      "event TransactionEnqueued(address _l1TxOrigin, address _target, uint256 _gasLimit, bytes _data, uint256 _queueIndex, uint256 _timestamp)",
      "function L2_GAS_DISCOUNT_DIVISOR() view returns (uint256)",
      "function MAX_ROLLUP_TX_SIZE() view returns (uint256)",
      "function MIN_ROLLUP_TX_GAS() view returns (uint256)",
      "function appendQueueBatch(uint256) pure",
      "function appendSequencerBatch()",
      "function batches() view returns (address)",
      "function enqueue(address _target, uint256 _gasLimit, bytes _data)",
      "function forceInclusionPeriodBlocks() view returns (uint256)",
      "function forceInclusionPeriodSeconds() view returns (uint256)",
      "function getLastBlockNumber() view returns (uint40)",
      "function getLastTimestamp() view returns (uint40)",
      "function getNextQueueIndex() view returns (uint40)",
      "function getNumPendingQueueElements() view returns (uint40)",
      "function getQueueElement(uint256 _index) view returns (tuple(bytes32 transactionHash, uint40 timestamp, uint40 blockNumber) _element)",
      "function getQueueLength() view returns (uint40)",
      "function getTotalBatches() view returns (uint256 _totalBatches)",
      "function getTotalElements() view returns (uint256 _totalElements)",
      "function libAddressManager() view returns (address)",
      "function maxTransactionGasLimit() view returns (uint256)",
      "function queue() view returns (address)",
      "function resolve(string _name) view returns (address)",
      "function verifyTransaction(tuple(uint256 timestamp, uint256 blockNumber, uint8 l1QueueOrigin, address l1TxOrigin, address entrypoint, uint256 gasLimit, bytes data) _transaction, tuple(bool isSequenced, uint256 queueIndex, uint256 timestamp, uint256 blockNumber, bytes txData) _txChainElement, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _batchHeader, tuple(uint256 index, bytes32[] siblings) _inclusionProof) view returns (bool)"
    ],
    "0x5E4e65926BA27467555EB562121fac00D24E9dD2": [
      "constructor(address _libAddressManager, uint256 _maxTransactionGasLimit, uint256 _l2GasDiscountDivisor, uint256 _enqueueGasCost)",
      "event L2GasParamsUpdated(uint256 l2GasDiscountDivisor, uint256 enqueueGasCost, uint256 enqueueL2GasPrepaid)",
      "event QueueBatchAppended(uint256 _startingQueueIndex, uint256 _numQueueElements, uint256 _totalElements)",
      "event SequencerBatchAppended(uint256 _startingQueueIndex, uint256 _numQueueElements, uint256 _totalElements)",
      "event TransactionBatchAppended(uint256 indexed _batchIndex, bytes32 _batchRoot, uint256 _batchSize, uint256 _prevTotalElements, bytes _extraData)",
      "event TransactionEnqueued(address indexed _l1TxOrigin, address indexed _target, uint256 _gasLimit, bytes _data, uint256 indexed _queueIndex, uint256 _timestamp)",
      "function MAX_ROLLUP_TX_SIZE() view returns (uint256)",
      "function MIN_ROLLUP_TX_GAS() view returns (uint256)",
      "function appendSequencerBatch()",
      "function batches() view returns (address)",
      "function enqueue(address _target, uint256 _gasLimit, bytes _data)",
      "function enqueueGasCost() view returns (uint256)",
      "function enqueueL2GasPrepaid() view returns (uint256)",
      "function getLastBlockNumber() view returns (uint40)",
      "function getLastTimestamp() view returns (uint40)",
      "function getNextQueueIndex() view returns (uint40)",
      "function getNumPendingQueueElements() view returns (uint40)",
      "function getQueueElement(uint256 _index) view returns (tuple(bytes32 transactionHash, uint40 timestamp, uint40 blockNumber) _element)",
      "function getQueueLength() view returns (uint40)",
      "function getTotalBatches() view returns (uint256 _totalBatches)",
      "function getTotalElements() view returns (uint256 _totalElements)",
      "function l2GasDiscountDivisor() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function maxTransactionGasLimit() view returns (uint256)",
      "function resolve(string _name) view returns (address)",
      "function setGasParams(uint256 _l2GasDiscountDivisor, uint256 _enqueueGasCost)"
    ],
    "0x5Fd79D46EBA7F351fe49BFF9E87cdeA6c821eF9f": [
      "constructor(address _owner)",
      "event BridgeApproval(address _token, address indexed spender, uint256 value)",
      "event OwnerChanged(address oldOwner, address newOwner)",
      "event OwnerNominated(address newOwner)",
      "function acceptOwnership()",
      "function approveBridge(address _token, address _bridge, uint256 _amount)",
      "function nominateNewOwner(address _owner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)"
    ],
    "0x77eBfdFcC906DDcDa0C42B866f26A8D5A2bb0572": [
      "constructor(address _libAddressManager, string _owner)",
      "function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)",
      "function deleteElementsAfterInclusive(uint256 _index)",
      "function get(uint256 _index) view returns (bytes32)",
      "function getGlobalMetadata() view returns (bytes27)",
      "function length() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (string)",
      "function push(bytes32 _object, bytes27 _globalMetadata)",
      "function push(bytes32 _object)",
      "function resolve(string _name) view returns (address)",
      "function setGlobalMetadata(bytes27 _globalMetadata)"
    ],
    "0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1": [
      "constructor(address _owner)",
      "function getImplementation() returns (address)",
      "function getOwner() returns (address)",
      "function setCode(bytes _code)",
      "function setOwner(address _owner)",
      "function setStorage(bytes32 _key, bytes32 _value)"
    ],
    "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A": [
      "constructor(address _masterCopy)"
    ],
    "0xA0b912b3Ea71A04065Ff82d3936D518ED6E38039": [
      "constructor(address _libAddressManager, string _owner)",
      "function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)",
      "function deleteElementsAfterInclusive(uint256 _index)",
      "function get(uint256 _index) view returns (bytes32)",
      "function getGlobalMetadata() view returns (bytes27)",
      "function length() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (string)",
      "function push(bytes32 _object, bytes27 _globalMetadata)",
      "function push(bytes32 _object)",
      "function resolve(string _name) view returns (address)",
      "function setGlobalMetadata(bytes27 _globalMetadata)"
    ],
    "0xb0ddFf09c4019e31960de11bD845E836078E8EbE": [
      "constructor(address _libAddressManager, string _owner)",
      "function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)",
      "function deleteElementsAfterInclusive(uint256 _index)",
      "function get(uint256 _index) view returns (bytes32)",
      "function getGlobalMetadata() view returns (bytes27)",
      "function length() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (string)",
      "function push(bytes32 _object, bytes27 _globalMetadata)",
      "function push(bytes32 _object)",
      "function resolve(string _name) view returns (address)",
      "function setGlobalMetadata(bytes27 _globalMetadata)"
    ],
    "0xBe5dAb4A2e9cd0F27300dB4aB94BeE3A233AEB19": [
      "constructor(address _libAddressManager, uint256 _fraudProofWindow, uint256 _sequencerPublishWindow)",
      "event StateBatchAppended(uint256 indexed _batchIndex, bytes32 _batchRoot, uint256 _batchSize, uint256 _prevTotalElements, bytes _extraData)",
      "event StateBatchDeleted(uint256 indexed _batchIndex, bytes32 _batchRoot)",
      "function FRAUD_PROOF_WINDOW() view returns (uint256)",
      "function SEQUENCER_PUBLISH_WINDOW() view returns (uint256)",
      "function appendStateBatch(bytes32[] _batch, uint256 _shouldStartAtElement)",
      "function batches() view returns (address)",
      "function deleteStateBatch(tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _batchHeader)",
      "function getLastSequencerTimestamp() view returns (uint256 _lastSequencerTimestamp)",
      "function getTotalBatches() view returns (uint256 _totalBatches)",
      "function getTotalElements() view returns (uint256 _totalElements)",
      "function insideFraudProofWindow(tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _batchHeader) view returns (bool _inside)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)",
      "function verifyStateCommitment(bytes32 _element, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _batchHeader, tuple(uint256 index, bytes32[] siblings) _proof) view returns (bool)"
    ],
    "0xcd626E1328b41fCF24737F137BcD4CE0c32bc8d1": [
      "constructor(address _libAddressManager)",
      "function isCollateralized(address _who) view returns (bool)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)"
    ],
    "0xCd76de5C57004d47d0216ec7dAbd3c72D8c49057": [
      "constructor(address _libAddressManager)",
      "function claim(address _who)",
      "function deposit()",
      "function finalize(bytes32 _preStateRoot, address _publisher, uint256 _timestamp)",
      "function finalizeWithdrawal()",
      "function getGasSpent(bytes32, address) pure returns (uint256)",
      "function isCollateralized(address _who) view returns (bool)",
      "function libAddressManager() view returns (address)",
      "function recordGasSpent(bytes32 _preStateRoot, bytes32 _txHash, address _who, uint256 _gasSpent)",
      "function resolve(string _name) view returns (address)",
      "function startWithdrawal()"
    ],
    "0xd0e3e318154716BD9d007E1E6B021Eab246ff98d": [
      "function create(address _owner) returns (address)"
    ],
    "0xD16463EF9b0338CE3D73309028ef1714D220c024": [
      "constructor(address _libAddressManager, string _owner)",
      "function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)",
      "function deleteElementsAfterInclusive(uint256 _index)",
      "function get(uint256 _index) view returns (bytes32)",
      "function getGlobalMetadata() view returns (bytes27)",
      "function length() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (string)",
      "function push(bytes32 _object, bytes27 _globalMetadata)",
      "function push(bytes32 _object)",
      "function resolve(string _name) view returns (address)",
      "function setGlobalMetadata(bytes27 _globalMetadata)"
    ],
    "0xd9166833FF12A5F900ccfBf2c8B62a90F1Ca1FD5": [
      "constructor()",
      "event FailedRelayedMessage(bytes32 indexed msgHash)",
      "event MessageAllowed(bytes32 indexed _xDomainCalldataHash)",
      "event MessageBlocked(bytes32 indexed _xDomainCalldataHash)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RelayedMessage(bytes32 indexed msgHash)",
      "event SentMessage(address indexed target, address sender, bytes message, uint256 messageNonce, uint256 gasLimit)",
      "event Unpaused(address account)",
      "function allowMessage(bytes32 _xDomainCalldataHash)",
      "function blockMessage(bytes32 _xDomainCalldataHash)",
      "function blockedMessages(bytes32) view returns (bool)",
      "function initialize(address _libAddressManager)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function relayMessage(address _target, address _sender, bytes _message, uint256 _messageNonce, tuple(bytes32 stateRoot, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) stateRootBatchHeader, tuple(uint256 index, bytes32[] siblings) stateRootProof, bytes stateTrieWitness, bytes storageTrieWitness) _proof)",
      "function relayedMessages(bytes32) view returns (bool)",
      "function renounceOwnership()",
      "function replayMessage(address _target, address _sender, bytes _message, uint256 _queueIndex, uint32 _oldGasLimit, uint32 _newGasLimit)",
      "function resolve(string _name) view returns (address)",
      "function sendMessage(address _target, bytes _message, uint32 _gasLimit)",
      "function successfulMessages(bytes32) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F": [
      "event AddressSet(string indexed _name, address _newAddress, address _oldAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getAddress(string _name) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xE969C2724d2448F1d1A6189d3e2aA1F37d5998c1": [
      "constructor(address _libAddressManager, uint256 _fraudProofWindow, uint256 _sequencerPublishWindow)",
      "event StateBatchAppended(uint256 indexed _batchIndex, bytes32 _batchRoot, uint256 _batchSize, uint256 _prevTotalElements, bytes _extraData)",
      "event StateBatchDeleted(uint256 indexed _batchIndex, bytes32 _batchRoot)",
      "function FRAUD_PROOF_WINDOW() view returns (uint256)",
      "function SEQUENCER_PUBLISH_WINDOW() view returns (uint256)",
      "function appendStateBatch(bytes32[] _batch, uint256 _shouldStartAtElement)",
      "function batches() view returns (address)",
      "function deleteStateBatch(tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _batchHeader)",
      "function getLastSequencerTimestamp() view returns (uint256 _lastSequencerTimestamp)",
      "function getTotalBatches() view returns (uint256 _totalBatches)",
      "function getTotalElements() view returns (uint256 _totalElements)",
      "function insideFraudProofWindow(tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _batchHeader) view returns (bool _inside)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)",
      "function verifyStateCommitment(bytes32 _element, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) _batchHeader, tuple(uint256 index, bytes32[] siblings) _proof) view returns (bool)"
    ],
    "0xEb3107117FEAd7de89Cd14D463D340A2E6917769": [
      "constructor(address _masterCopy)"
    ],
    "0xF26391FBB1f77481f80a7d646AC08ba3817eA891": [
      "constructor(address _libAddressManager)",
      "function batchRelayMessages(tuple(address target, address sender, bytes message, uint256 messageNonce, tuple(bytes32 stateRoot, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes extraData) stateRootBatchHeader, tuple(uint256 index, bytes32[] siblings) stateRootProof, bytes stateTrieWitness, bytes storageTrieWitness) proof)[] _messages)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)"
    ],
    "0xfe1F9Cf28ecDb12110aa8086e6FD343EA06035cC": [
      "function isBytecodeSafe(bytes _bytecode) pure returns (bool)"
    ]
  }
}
