{
  "$schema": "../config.schema.json",
  "name": "optimism",
  "initialAddresses": [
    "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F",
    "0x5E4e65926BA27467555EB562121fac00D24E9dD2",
    "0xBe5dAb4A2e9cd0F27300dB4aB94BeE3A233AEB19",
    "0x5Fd79D46EBA7F351fe49BFF9E87cdeA6c821eF9f",
    "0x10E6593CDda8c58a1d0f14C5164B376352a55f2F",
    "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed"
  ],
  "names": {
    "0xdE1FCfB0851916CA5101820A69b13a4E276bd81F": "AddressManager",
    "0x5E4e65926BA27467555EB562121fac00D24E9dD2": "CanonicalTransactionChain",
    "0xBe5dAb4A2e9cd0F27300dB4aB94BeE3A233AEB19": "StateCommitmentChain",
    "0x77eBfdFcC906DDcDa0C42B866f26A8D5A2bb0572": "SCCStorageContainerBatches_OLD",
    "0xA0b912b3Ea71A04065Ff82d3936D518ED6E38039": "CTCStorageContainerQueue",
    "0x3EA1a3839D8ca9a7ff3c567a9F36f4C4DbECc3eE": "CTCStorageContainerBatches_OLD",
    "0xD16463EF9b0338CE3D73309028ef1714D220c024": "CTCStorageContainerBatches",
    "0xb0ddFf09c4019e31960de11bD845E836078E8EbE": "SCCStorageContainerBatches",
    "0x4BF681894abEc828B212C906082B444Ceb2f6cf6": "CanonicalTransactionChain_OLD",
    "0x25ace71c97B33Cc4729CF772ae268934F7ab5fA1": "L1CrossDomainMessengerProxy",
    "0xdfe97868233d1aa22e815a266982f2cf17685a27": "L2OutputOracle",
    "0x9BA6e03D8B90dE867373Db8cF1A58d2F7F006b3A": "OptimismMultisig",
    "0x10E6593CDda8c58a1d0f14C5164B376352a55f2F": "L1DAITokenBridge",
    "0xEb3107117FEAd7de89Cd14D463D340A2E6917769": "SynthetixMultisig",
    "0xbEb5Fc579115071764c7423A4f12eDde41f106Ed": "OptimismPortal",
    "0x229047fed2591dbec1eF1118d64F7aF3dB9EB290": "SystemConfig"
  },
  "overrides": {
    "AddressManager": {
      "fields": {
        "BondManager": {
          "type": "call",
          "method": "getAddress",
          "args": ["BondManager"]
        },
        "OVM_L2CrossDomainMessenger": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_L2CrossDomainMessenger"]
        },
        "OVM_DecompressionPrecompileAddress": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_DecompressionPrecompileAddress"]
        },
        "OVM_Sequencer": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_Sequencer"]
        },
        "OVM_Proposer": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_Proposer"]
        },
        "OVM_ChainStorageContainer_CTC_batches": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_ChainStorageContainer-CTC-batches"]
        },
        "OVM_ChainStorageContainer_CTC_queue": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_ChainStorageContainer-CTC-queue"]
        },
        "OVM_ChainStorageContainer_SCC_batches": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_ChainStorageContainer-SCC-batches"]
        },
        "OVM_CanonicalTransactionChain": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_CanonicalTransactionChain"]
        },
        "OVM_StateCommitmentChain": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_StateCommitmentChain"]
        },
        "OVM_BondManager": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_BondManager"]
        },
        "Proxy__OVM_L1CrossDomainMessenger": {
          "type": "call",
          "method": "getAddress",
          "args": ["Proxy__OVM_L1CrossDomainMessenger"]
        },
        "OVM_ExecutionManager": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_ExecutionManager"]
        },
        "OVM_FraudVerifier": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_FraudVerifier"]
        },
        "OVM_StateManagerFactory": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_StateManagerFactory"]
        },
        "OVM_StateTransitionerFactory": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_StateTransitionerFactory"]
        },
        "OVM_SafetyChecker": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_SafetyChecker"]
        },
        "OVM_L1MultiMessageRelayer": {
          "type": "call",
          "method": "getAddress",
          "args": ["OVM_L1MultiMessageRelayer"]
        },
        "Proxy__OVM_L1StandardBridge": {
          "type": "call",
          "method": "getAddress",
          "args": ["Proxy__OVM_L1StandardBridge"]
        }
      }
    },
    "SCCStorageContainerBatches_OLD": {
      "ignoreMethods": ["get"]
    },
    "CTCStorageContainerQueue": {
      "ignoreMethods": ["get"]
    },
    "CTCStorageContainerBatches_OLD": {
      "ignoreMethods": ["get"]
    },
    "CTCStorageContainerBatches": {
      "ignoreMethods": ["get"],
      "ignoreInWatchMode": ["getGlobalMetadata", "length"]
    },
    "SCCStorageContainerBatches": {
      "ignoreMethods": ["get"],
      "ignoreInWatchMode": ["getGlobalMetadata", "length"]
    },
    "CanonicalTransactionChain_OLD": {
      "ignoreMethods": ["getQueueElement"]
    },
    "CanonicalTransactionChain": {
      "ignoreMethods": ["getQueueElement"],
      "ignoreInWatchMode": [
        "getLastBlockNumber",
        "getLastTimestamp",
        "getNextQueueIndex",
        "getNumPendingQueueElements",
        "getQueueLength",
        "getTotalBatches",
        "getTotalElements"
      ]
    },
    "StateCommitmentChain": {
      "ignoreInWatchMode": [
        "getLastSequencerTimestamp",
        "getTotalBatches",
        "getTotalElements"
      ]
    },
    "OptimismMultisig": {
      "ignoreInWatchMode": ["nonce"]
    },
    "0x42d27eEA1AD6e22Af6284F609847CB3Cd56B9c64": {
      "ignoreInWatchMode": ["nonce"]
    },
    "L1DAITokenBridge": {
      "ignoreRelatives": [
        "l1Token",
        "l2DAITokenBridge",
        "l2Token",
        "l2Token",
        "messenger"
      ]
    },
    "SynthetixMultisig": {
      "ignoreInWatchMode": ["nonce"]
    },
    "L2OutputOracle": {
      "ignoreMethods": [
        "getL2OutputAfter",
        "getL2OutputIndexAfter",
        "getL2Output"
      ],
      "ignoreInWatchMode": [
        "nextBlockNumber",
        "nextOutputIndex",
        "latestBlockNumber",
        "latestOutputIndex"
      ]
    },
    "OptimismPortal": {
      "ignoreMethods": ["isOutputFinalized"],
      "ignoreInWatchMode": ["params"]
    },
    "L1CrossDomainMessengerProxy": {
      "ignoreMethods": ["xDomainMessageSender"],
      "ignoreInWatchMode": ["messageNonce"]
    },
    "SystemConfig": {
      "fields": {
        // this overrides the batcherHash method return type (bytes32 -> address) so our discovery detects it as an address
        "batcherHash": {
          "type": "call",
          "method": "function batcherHash() view returns (address)",
          "args": []
        }
      }
    }
  }
}
