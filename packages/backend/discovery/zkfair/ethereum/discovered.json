{
  "name": "zkfair",
  "chain": "ethereum",
  "blockNumber": 18841455,
  "configHash": "0x0c842caf3e79f85c091e3c41b5d139eed63005756a476f89d1fcda10cf4e137f",
  "version": 3,
  "contracts": [
    {
      "name": "BridgeAdminMultiSig",
      "address": "0x0110B1B231aA3b96a94c900eb3056297526AB725",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1702833323,
      "values": {
        "domainSeparator": "0xf520ec0e9b6e67469277c4fd8b218c7ab9354dbc712c22056776eb95e7066b57",
        "getChainId": 1,
        "getOwners": [
          "0x39FcAEb9870cB015f2165e93c51f4663AE970953",
          "0x3226ECf79dc7007063599A334832d015B48aBDBc",
          "0x4dba6F06597Ea29A330C06806FA284610c810295",
          "0xe1229a2716D19eC9aF74017418Fc9E165b80c7aF"
        ],
        "getThreshold": 3,
        "nonce": 0,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "CDKValidium",
      "address": "0x1CbC08bf0D48b18F9f97796c61352b192d1850A5",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x668965757127549f8755D2eEd10494B06420213b",
        "admin": "0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3"
      },
      "implementations": ["0x668965757127549f8755D2eEd10494B06420213b"],
      "sinceTimestamp": 1702879355,
      "values": {
        "_HALT_AGGREGATION_TIMEOUT": 604800,
        "admin": "0x0110B1B231aA3b96a94c900eb3056297526AB725",
        "bridgeAddress": "0x9cb4706e20A18E59a48ffa7616d700A3891e1861",
        "chainID": 42766,
        "dataCommitteeAddress": "0x997CfB0838544f68E59f877EDc905001456F125b",
        "forceBatchTimeout": 432000,
        "forkID": 5,
        "globalExitRootManager": "0x72abD6416Ea2d99ad30C86B90e7409Dc2d1ba40b",
        "isEmergencyState": false,
        "isForcedBatchDisallowed": true,
        "matic": "0x6dfAF52259d494C29596F5Eb16573B105693E78f",
        "networkName": "zkfair",
        "nondeterminsiticPendingState": [],
        "owner": "0x8933Fa0A97f39cd38f56b1887d5cc56cF04F3A88",
        "pendingAdmin": "0x0000000000000000000000000000000000000000",
        "pendingStateTimeout": 432000,
        "rollupVerifier": "0x769E285d2120472c3400A09684B82A842012F46d",
        "trustedAggregator": "0xd6888c41EeAcc94f4A1CEe7A99E1557aa41FA027",
        "trustedAggregatorTimeout": 432000,
        "trustedSequencer": "0x9eed06d1566F0cAfdA3df624E2376864cA84Db6c",
        "trustedSequencerURL": "http://main-rpc-1.zkfair-internal.mainnet:8123",
        "verifyBatchTimeTarget": 1800
      },
      "derivedName": "CDKValidium"
    },
    {
      "name": "Timelock",
      "address": "0x52882c7564fAca480549145fAc4d0b09eD0D9c17",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1702879391,
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x52882c7564fAca480549145fAc4d0b09eD0D9c17",
              "0x75575Dc1adD71eA794A52D83f836a13F7891C527"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x75575Dc1adD71eA794A52D83f836a13F7891C527"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x75575Dc1adD71eA794A52D83f836a13F7891C527"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x75575Dc1adD71eA794A52D83f836a13F7891C527"]
          }
        },
        "cdkValidium": "0x1CbC08bf0D48b18F9f97796c61352b192d1850A5",
        "getMinDelay": 86400
      },
      "derivedName": "CDKValidiumTimelock"
    },
    {
      "name": "GlobalExitRoot",
      "address": "0x72abD6416Ea2d99ad30C86B90e7409Dc2d1ba40b",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xC4CD3D0b31904969a397A98AcE8bDF2A94ba8615",
        "admin": "0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3"
      },
      "implementations": ["0xC4CD3D0b31904969a397A98AcE8bDF2A94ba8615"],
      "sinceTimestamp": 1702879331,
      "values": {
        "bridgeAddress": "0x9cb4706e20A18E59a48ffa7616d700A3891e1861",
        "rollupAddress": "0x1CbC08bf0D48b18F9f97796c61352b192d1850A5"
      },
      "derivedName": "PolygonZkEVMGlobalExitRoot"
    },
    {
      "name": "FflonkVerifier",
      "address": "0x769E285d2120472c3400A09684B82A842012F46d",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1702879247
    },
    {
      "name": "ZkFairOwner",
      "address": "0x8933Fa0A97f39cd38f56b1887d5cc56cF04F3A88",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1702833011,
      "values": {
        "domainSeparator": "0x907ba679dbb2fcfa957fa0d4aa3be2f8145679a39747c81b582a6341f0175bea",
        "getChainId": 1,
        "getOwners": [
          "0x9fAe81C21be8D1Ad91c3617A7b0140dfe0DCe6C7",
          "0x540C913ad8b197152EB041bC56f9c6Ab314D25Ba",
          "0xcf6226d0264496abB69eF8BC1DF366c9E00f5b87",
          "0x4B7f09f4D658638d81Bb2023674B80a9Dd7e9976"
        ],
        "getThreshold": 3,
        "nonce": 0,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "DataAvailabilityCommittee",
      "address": "0x997CfB0838544f68E59f877EDc905001456F125b",
      "unverified": true,
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x63150fA72c1c9fF8Fe4438f8355927D3415b0FDc",
        "admin": "0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3"
      },
      "implementations": ["0x63150fA72c1c9fF8Fe4438f8355927D3415b0FDc"],
      "sinceTimestamp": 1702879319,
      "derivedName": ""
    },
    {
      "name": "Bridge",
      "address": "0x9cb4706e20A18E59a48ffa7616d700A3891e1861",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xEb80283EBc508CF6AaC5E054118954a2BD7fA006",
        "admin": "0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3"
      },
      "implementations": ["0xEb80283EBc508CF6AaC5E054118954a2BD7fA006"],
      "sinceTimestamp": 1702879283,
      "values": {
        "admin": "0xcd14BE1959928BB8c160D11817E2BE2129e2F25F",
        "bridgeFee": 2500000000000000,
        "feeAddress": "0xfED4D68744115A50ed22a6DA32DBA42eCaB5CF8D",
        "gasTokenAddress": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "gasTokenDecimalDiffFactor": 1000000000000,
        "gasTokenMetadata": "0x000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000000000000000000000000000000000000000005457468657200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000034554480000000000000000000000000000000000000000000000000000000000",
        "globalExitRootManager": "0x72abD6416Ea2d99ad30C86B90e7409Dc2d1ba40b",
        "isEmergencyState": false,
        "networkID": 0,
        "polygonZkEVMaddress": "0x1CbC08bf0D48b18F9f97796c61352b192d1850A5"
      },
      "derivedName": "PolygonZkEVMBridge"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1702879259,
      "values": {
        "owner": "0x52882c7564fAca480549145fAc4d0b09eD0D9c17"
      }
    },
    {
      "name": "ZkFairAdmin",
      "address": "0xcd14BE1959928BB8c160D11817E2BE2129e2F25F",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1702832627,
      "values": {
        "domainSeparator": "0x9d22409767fa3e9aa92ef09e471ff6b638895a6cce2402989781ff1f9e0cc451",
        "getChainId": 1,
        "getOwners": [
          "0x4Ea1f0f05E7484Ee85a97303DC88c2dF4288df3e",
          "0x44fb52EB2bdDAf1c8b6D441e0b5DCa123A345292",
          "0x689752C198f0cEbe9993ee3E13AF0e565C068c25",
          "0xa57c2B747193fe3F9CC8bea89103B7d76B8A0c70"
        ],
        "getThreshold": 3,
        "nonce": 0,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    }
  ],
  "eoas": [
    "0x3226ECf79dc7007063599A334832d015B48aBDBc",
    "0x39FcAEb9870cB015f2165e93c51f4663AE970953",
    "0x44fb52EB2bdDAf1c8b6D441e0b5DCa123A345292",
    "0x4B7f09f4D658638d81Bb2023674B80a9Dd7e9976",
    "0x4dba6F06597Ea29A330C06806FA284610c810295",
    "0x4Ea1f0f05E7484Ee85a97303DC88c2dF4288df3e",
    "0x540C913ad8b197152EB041bC56f9c6Ab314D25Ba",
    "0x689752C198f0cEbe9993ee3E13AF0e565C068c25",
    "0x75575Dc1adD71eA794A52D83f836a13F7891C527",
    "0x9eed06d1566F0cAfdA3df624E2376864cA84Db6c",
    "0x9fAe81C21be8D1Ad91c3617A7b0140dfe0DCe6C7",
    "0xa57c2B747193fe3F9CC8bea89103B7d76B8A0c70",
    "0xcf6226d0264496abB69eF8BC1DF366c9E00f5b87",
    "0xd6888c41EeAcc94f4A1CEe7A99E1557aa41FA027",
    "0xe1229a2716D19eC9aF74017418Fc9E165b80c7aF",
    "0xfED4D68744115A50ed22a6DA32DBA42eCaB5CF8D"
  ],
  "abis": {
    "0x0110B1B231aA3b96a94c900eb3056297526AB725": [
      "constructor(address _singleton)"
    ],
    "0x1CbC08bf0D48b18F9f97796c61352b192d1850A5": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x52882c7564fAca480549145fAc4d0b09eD0D9c17": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin, address _cdkValidium)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function cdkValidium() view returns (address)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256 duration)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256 timestamp)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function isOperation(bytes32 id) view returns (bool registered)",
      "function isOperationDone(bytes32 id) view returns (bool done)",
      "function isOperationPending(bytes32 id) view returns (bool pending)",
      "function isOperationReady(bytes32 id) view returns (bool ready)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x668965757127549f8755D2eEd10494B06420213b": [
      "constructor(address _globalExitRootManager, address _matic, address _rollupVerifier, address _bridgeAddress, address _dataCommitteeAddress, uint64 _chainID, uint64 _forkID)",
      "error BatchAlreadyVerified()",
      "error BatchNotSequencedOrNotSequenceEnd()",
      "error ExceedMaxVerifyBatches()",
      "error FinalNumBatchBelowLastVerifiedBatch()",
      "error FinalNumBatchDoesNotMatchPendingState()",
      "error FinalPendingStateNumInvalid()",
      "error ForceBatchNotAllowed()",
      "error ForceBatchTimeoutNotExpired()",
      "error ForceBatchesAlreadyActive()",
      "error ForceBatchesOverflow()",
      "error ForcedDataDoesNotMatch()",
      "error GlobalExitRootNotExist()",
      "error HaltTimeoutNotExpired()",
      "error InitNumBatchAboveLastVerifiedBatch()",
      "error InitNumBatchDoesNotMatchPendingState()",
      "error InvalidProof()",
      "error InvalidRangeBatchTimeTarget()",
      "error InvalidRangeForceBatchTimeout()",
      "error InvalidRangeMultiplierBatchFee()",
      "error NewAccInputHashDoesNotExist()",
      "error NewPendingStateTimeoutMustBeLower()",
      "error NewStateRootNotInsidePrime()",
      "error NewTrustedAggregatorTimeoutMustBeLower()",
      "error NotEnoughMaticAmount()",
      "error OldAccInputHashDoesNotExist()",
      "error OldStateRootDoesNotExist()",
      "error OnlyAdmin()",
      "error OnlyEmergencyState()",
      "error OnlyNotEmergencyState()",
      "error OnlyPendingAdmin()",
      "error OnlyTrustedAggregator()",
      "error OnlyTrustedSequencer()",
      "error PendingStateDoesNotExist()",
      "error PendingStateInvalid()",
      "error PendingStateNotConsolidable()",
      "error PendingStateTimeoutExceedHaltAggregationTimeout()",
      "error SequenceZeroBatches()",
      "error SequencedTimestampBelowForcedTimestamp()",
      "error SequencedTimestampInvalid()",
      "error StoredRootMustBeDifferentThanNewRoot()",
      "error TransactionsLengthAboveMax()",
      "error TrustedAggregatorTimeoutExceedHaltAggregationTimeout()",
      "error TrustedAggregatorTimeoutNotExpired()",
      "event AcceptAdminRole(address newAdmin)",
      "event ActivateForceBatches()",
      "event ConsolidatePendingState(uint64 indexed numBatch, bytes32 stateRoot, uint64 indexed pendingStateNum)",
      "event EmergencyStateActivated()",
      "event EmergencyStateDeactivated()",
      "event ForceBatch(uint64 indexed forceBatchNum, bytes32 lastGlobalExitRoot, address sequencer, bytes transactions)",
      "event Initialized(uint8 version)",
      "event OverridePendingState(uint64 indexed numBatch, bytes32 stateRoot, address indexed aggregator)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ProveNonDeterministicPendingState(bytes32 storedStateRoot, bytes32 provedStateRoot)",
      "event SequenceBatches(uint64 indexed numBatch)",
      "event SequenceForceBatches(uint64 indexed numBatch)",
      "event SetForceBatchTimeout(uint64 newforceBatchTimeout)",
      "event SetMultiplierBatchFee(uint16 newMultiplierBatchFee)",
      "event SetPendingStateTimeout(uint64 newPendingStateTimeout)",
      "event SetTrustedAggregator(address newTrustedAggregator)",
      "event SetTrustedAggregatorTimeout(uint64 newTrustedAggregatorTimeout)",
      "event SetTrustedSequencer(address newTrustedSequencer)",
      "event SetTrustedSequencerURL(string newTrustedSequencerURL)",
      "event SetVerifyBatchTimeTarget(uint64 newVerifyBatchTimeTarget)",
      "event TransferAdminRole(address newPendingAdmin)",
      "event UpdateZkEVMVersion(uint64 numBatch, uint64 forkID, string version)",
      "event VerifyBatches(uint64 indexed numBatch, bytes32 stateRoot, address indexed aggregator)",
      "event VerifyBatchesTrustedAggregator(uint64 indexed numBatch, bytes32 stateRoot, address indexed aggregator)",
      "function acceptAdminRole()",
      "function activateEmergencyState(uint64 sequencedBatchNum)",
      "function activateForceBatches()",
      "function admin() view returns (address)",
      "function batchFee() view returns (uint256)",
      "function batchNumToStateRoot(uint64) view returns (bytes32)",
      "function bridgeAddress() view returns (address)",
      "function calculateRewardPerBatch() view returns (uint256)",
      "function chainID() view returns (uint64)",
      "function checkStateRootInsidePrime(uint256 newStateRoot) pure returns (bool)",
      "function consolidatePendingState(uint64 pendingStateNum)",
      "function dataCommitteeAddress() view returns (address)",
      "function deactivateEmergencyState()",
      "function forceBatch(bytes transactions, uint256 maticAmount)",
      "function forceBatchTimeout() view returns (uint64)",
      "function forcedBatches(uint64) view returns (bytes32)",
      "function forkID() view returns (uint64)",
      "function getForcedBatchFee() view returns (uint256)",
      "function getInputSnarkBytes(uint64 initNumBatch, uint64 finalNewBatch, bytes32 newLocalExitRoot, bytes32 oldStateRoot, bytes32 newStateRoot) view returns (bytes)",
      "function getLastVerifiedBatch() view returns (uint64)",
      "function globalExitRootManager() view returns (address)",
      "function initialize(tuple(address admin, address trustedSequencer, uint64 pendingStateTimeout, address trustedAggregator, uint64 trustedAggregatorTimeout) initializePackedParameters, bytes32 genesisRoot, string _trustedSequencerURL, string _networkName, string _version)",
      "function isEmergencyState() view returns (bool)",
      "function isForcedBatchDisallowed() view returns (bool)",
      "function isPendingStateConsolidable(uint64 pendingStateNum) view returns (bool)",
      "function lastBatchSequenced() view returns (uint64)",
      "function lastForceBatch() view returns (uint64)",
      "function lastForceBatchSequenced() view returns (uint64)",
      "function lastPendingState() view returns (uint64)",
      "function lastPendingStateConsolidated() view returns (uint64)",
      "function lastTimestamp() view returns (uint64)",
      "function lastVerifiedBatch() view returns (uint64)",
      "function matic() view returns (address)",
      "function multiplierBatchFee() view returns (uint16)",
      "function networkName() view returns (string)",
      "function overridePendingState(uint64 initPendingStateNum, uint64 finalPendingStateNum, uint64 initNumBatch, uint64 finalNewBatch, bytes32 newLocalExitRoot, bytes32 newStateRoot, bytes32[24] proof)",
      "function owner() view returns (address)",
      "function pendingAdmin() view returns (address)",
      "function pendingStateTimeout() view returns (uint64)",
      "function pendingStateTransitions(uint256) view returns (uint64 timestamp, uint64 lastVerifiedBatch, bytes32 exitRoot, bytes32 stateRoot)",
      "function proveNonDeterministicPendingState(uint64 initPendingStateNum, uint64 finalPendingStateNum, uint64 initNumBatch, uint64 finalNewBatch, bytes32 newLocalExitRoot, bytes32 newStateRoot, bytes32[24] proof)",
      "function renounceOwnership()",
      "function rollupVerifier() view returns (address)",
      "function sequenceBatches(tuple(bytes32 transactionsHash, bytes32 globalExitRoot, uint64 timestamp, uint64 minForcedTimestamp)[] batches, address l2Coinbase, bytes signaturesAndAddrs)",
      "function sequenceForceBatches(tuple(bytes transactions, bytes32 globalExitRoot, uint64 minForcedTimestamp)[] batches)",
      "function sequencedBatches(uint64) view returns (bytes32 accInputHash, uint64 sequencedTimestamp, uint64 previousLastBatchSequenced)",
      "function setForceBatchTimeout(uint64 newforceBatchTimeout)",
      "function setMultiplierBatchFee(uint16 newMultiplierBatchFee)",
      "function setPendingStateTimeout(uint64 newPendingStateTimeout)",
      "function setTrustedAggregator(address newTrustedAggregator)",
      "function setTrustedAggregatorTimeout(uint64 newTrustedAggregatorTimeout)",
      "function setTrustedSequencer(address newTrustedSequencer)",
      "function setTrustedSequencerURL(string newTrustedSequencerURL)",
      "function setVerifyBatchTimeTarget(uint64 newVerifyBatchTimeTarget)",
      "function transferAdminRole(address newPendingAdmin)",
      "function transferOwnership(address newOwner)",
      "function trustedAggregator() view returns (address)",
      "function trustedAggregatorTimeout() view returns (uint64)",
      "function trustedSequencer() view returns (address)",
      "function trustedSequencerURL() view returns (string)",
      "function verifyBatchTimeTarget() view returns (uint64)",
      "function verifyBatches(uint64 pendingStateNum, uint64 initNumBatch, uint64 finalNewBatch, bytes32 newLocalExitRoot, bytes32 newStateRoot, bytes32[24] proof)",
      "function verifyBatchesTrustedAggregator(uint64 pendingStateNum, uint64 initNumBatch, uint64 finalNewBatch, bytes32 newLocalExitRoot, bytes32 newStateRoot, bytes32[24] proof)"
    ],
    "0x72abD6416Ea2d99ad30C86B90e7409Dc2d1ba40b": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x769E285d2120472c3400A09684B82A842012F46d": [
      "function verifyProof(bytes32[24] proof, uint256[1] pubSignals) view returns (bool)"
    ],
    "0x8933Fa0A97f39cd38f56b1887d5cc56cF04F3A88": [
      "constructor(address _singleton)"
    ],
    "0x997CfB0838544f68E59f877EDc905001456F125b": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x9cb4706e20A18E59a48ffa7616d700A3891e1861": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xb57b9101dEc7dC1635B576fFf71F2f522C970EF3": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xC4CD3D0b31904969a397A98AcE8bDF2A94ba8615": [
      "constructor(address _rollupAddress, address _bridgeAddress)",
      "error OnlyAllowedContracts()",
      "event UpdateGlobalExitRoot(bytes32 indexed mainnetExitRoot, bytes32 indexed rollupExitRoot)",
      "function bridgeAddress() view returns (address)",
      "function getLastGlobalExitRoot() view returns (bytes32)",
      "function globalExitRootMap(bytes32) view returns (uint256)",
      "function lastMainnetExitRoot() view returns (bytes32)",
      "function lastRollupExitRoot() view returns (bytes32)",
      "function rollupAddress() view returns (address)",
      "function updateExitRoot(bytes32 newRoot)"
    ],
    "0xcd14BE1959928BB8c160D11817E2BE2129e2F25F": [
      "constructor(address _singleton)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xEb80283EBc508CF6AaC5E054118954a2BD7fA006": [
      "error AlreadyClaimed()",
      "error AmountDoesNotMatchMsgValue()",
      "error AmountTooSmall()",
      "error DestinationNetworkInvalid()",
      "error EtherTransferFailed()",
      "error GlobalExitRootInvalid()",
      "error InvalidSmtProof()",
      "error MerkleTreeFull()",
      "error MessageFailed()",
      "error MsgValueNotZero()",
      "error NotValidAmount()",
      "error NotValidOwner()",
      "error NotValidSignature()",
      "error NotValidSpender()",
      "error OnlyAdmin()",
      "error OnlyEmergencyState()",
      "error OnlyNotEmergencyState()",
      "error OnlyPolygonZkEVM()",
      "event BridgeEvent(uint8 leafType, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata, uint32 depositCount)",
      "event ClaimEvent(uint32 index, uint32 originNetwork, address originAddress, address destinationAddress, uint256 amount)",
      "event EmergencyStateActivated()",
      "event EmergencyStateDeactivated()",
      "event Initialized(uint8 version)",
      "event NewWrappedToken(uint32 originNetwork, address originTokenAddress, address wrappedTokenAddress, bytes metadata)",
      "function activateEmergencyState()",
      "function admin() view returns (address)",
      "function bridgeAsset(uint32 destinationNetwork, address destinationAddress, uint256 amount, address token, bool forceUpdateGlobalExitRoot, bytes permitData) payable",
      "function bridgeFee() view returns (uint256)",
      "function claimAsset(bytes32[32] smtProof, uint32 index, bytes32 mainnetExitRoot, bytes32 rollupExitRoot, uint32 originNetwork, address originTokenAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes metadata)",
      "function claimedBitMap(uint256) view returns (uint256)",
      "function deactivateEmergencyState()",
      "function depositCount() view returns (uint256)",
      "function feeAddress() view returns (address)",
      "function gasTokenAddress() view returns (address)",
      "function gasTokenDecimalDiffFactor() view returns (uint256)",
      "function gasTokenMetadata() view returns (bytes)",
      "function getDepositRoot() view returns (bytes32)",
      "function getLeafValue(uint8 leafType, uint32 originNetwork, address originAddress, uint32 destinationNetwork, address destinationAddress, uint256 amount, bytes32 metadataHash) pure returns (bytes32)",
      "function getTokenWrappedAddress(uint32 originNetwork, address originTokenAddress) view returns (address)",
      "function globalExitRootManager() view returns (address)",
      "function initialize(uint32 _networkID, address _globalExitRootManager, address _polygonZkEVMaddress, address _admin, uint256 _bridgeFee, address _feeAddress, address _gasTokenAddress, bytes _gasTokenMetadata, uint256 _gasTokenDecimalDiffFactor)",
      "function isClaimed(uint256 index) view returns (bool)",
      "function isEmergencyState() view returns (bool)",
      "function lastUpdatedDepositCount() view returns (uint32)",
      "function networkID() view returns (uint32)",
      "function polygonZkEVMaddress() view returns (address)",
      "function precalculatedWrapperAddress(uint32 originNetwork, address originTokenAddress, string name, string symbol, uint8 decimals) view returns (address)",
      "function setBridgeSettingsFee(address _feeAddress, uint256 _bridgeFee)",
      "function tokenInfoToWrappedToken(bytes32) view returns (address)",
      "function updateGlobalExitRoot()",
      "function verifyMerkleProof(bytes32 leafHash, bytes32[32] smtProof, uint32 index, bytes32 root) pure returns (bool)",
      "function wrappedTokenToTokenInfo(address) view returns (uint32 originNetwork, address originTokenAddress)"
    ]
  }
}
