{
  "name": "degate",
  "blockNumber": 17214834,
  "configHash": "0xba663a352a96baef24d3bff0cd3feb85cfc54b394514cdc284884c195b87a4b0",
  "contracts": [
    {
      "name": "DefaultDepositContract",
      "address": "0x814d0c1903D69EB1c7ceB8F5190B20A06892d1dA",
      "code": "https://etherscan.deth.net/address/0x814d0c1903D69EB1c7ceB8F5190B20A06892d1dA",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "exchange": "0xe63602a9B3DFE983187525AC985Fec4F57B24eD5",
        "owner": "0xd8C695DfAab475f55327Ce269096923EFECa2e0F",
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "ExchangeV3",
      "address": "0xe63602a9B3DFE983187525AC985Fec4F57B24eD5",
      "code": "https://etherscan.deth.net/address/0xe63602a9B3DFE983187525AC985Fec4F57B24eD5",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "allowOnchainTransferFrom": false,
        "domainSeparator": "0x5630f2c00e81e2223458dcd1f7c1a754cd6cc2a258d90b829e325489c7002912",
        "getBlockHeight": 122,
        "getConstants": [
          "21888242871839275222246405745257275088548364400416034343698204186575808495617",
          1000000,
          1296000,
          604800,
          4294967296,
          4294967296,
          604800,
          2592000,
          83,
          1296000,
          "250000000000000000",
          18
        ],
        "getDepositContract": "0x814d0c1903D69EB1c7ceB8F5190B20A06892d1dA",
        "getDomainSeparator": "0x5630f2c00e81e2223458dcd1f7c1a754cd6cc2a258d90b829e325489c7002912",
        "getExchangeStake": 0,
        "getFreeDepositRemained": 4999,
        "getMaxAgeDepositUntilWithdrawable": 1296000,
        "getMerkleAssetRoot": "0x2293bb58e4a6c616064bc707cdff7135150ff9f96eef4af785efce707d4ae5e3",
        "getMerkleRoot": "0x18dc48a35bdec84d448dec791ee03d797cb837f73dc70e94ff53192f0cb2f368",
        "getNumAvailableForcedSlots": 1000000,
        "getProtocolFeeValues": [0, 18, 18, 0, 18],
        "isInWithdrawalMode": false,
        "isShutdown": false,
        "owner": "0x6B937A5920726e70c5bF1d4d4E18EEeEd46FaE83",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "state": [
          1296000,
          "0x5630f2c00e81e2223458dcd1f7c1a754cd6cc2a258d90b829e325489c7002912",
          "0x4d707cae77c5E82a00BF9572A55d3ef3a4e0c458",
          "0x1c602313cDDC68C5789aCb7df0C92a93B0E04C9e",
          "0x0000000000000000000000000000000000000000",
          "0x814d0c1903D69EB1c7ceB8F5190B20A06892d1dA",
          [5000, 4999, 17172113, 1, 4480000000000000],
          "0x18dc48a35bdec84d448dec791ee03d797cb837f73dc70e94ff53192f0cb2f368",
          "0x2293bb58e4a6c616064bc707cdff7135150ff9f96eef4af785efce707d4ae5e3",
          122,
          0,
          [0, 18, 18, 0, 18],
          [0, 0]
        ],
        "version": "0.1.0"
      }
    },
    {
      "name": "LoopringIOExchangeOwner",
      "address": "0x6B937A5920726e70c5bF1d4d4E18EEeEd46FaE83",
      "code": "https://etherscan.deth.net/address/0x6B937A5920726e70c5bF1d4d4E18EEeEd46FaE83",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "open": false,
        "owner": "0xd8C695DfAab475f55327Ce269096923EFECa2e0F",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "target": "0xe63602a9B3DFE983187525AC985Fec4F57B24eD5"
      }
    },
    {
      "name": "LoopringV3",
      "address": "0x4d707cae77c5E82a00BF9572A55d3ef3a4e0c458",
      "code": "https://etherscan.deth.net/address/0x4d707cae77c5E82a00BF9572A55d3ef3a4e0c458",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "blockVerifierAddress": "0x1c602313cDDC68C5789aCb7df0C92a93B0E04C9e",
        "forcedWithdrawalFee": 0,
        "getProtocolFeeValues": 18,
        "lrcAddress": "0x53C8395465A84955c95159814461466053DedEDE",
        "owner": "0xd8C695DfAab475f55327Ce269096923EFECa2e0F",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "protocolFeeBips": 18,
        "protocolFeeVault": "0x7B0d44D5b2eF3A8B168FAfdcc321FAb0D9d5d08C",
        "totalStake": 0
      }
    },
    {
      "name": "DGToken",
      "address": "0x53C8395465A84955c95159814461466053DedEDE",
      "code": "https://etherscan.deth.net/address/0x53C8395465A84955c95159814461466053DedEDE",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "MINTER_ROLE": "0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
        "name": "DeGate Token",
        "paused": false,
        "PAUSER_ROLE": "0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
        "symbol": "DG",
        "totalSupply": "1000000000000000000000000000"
      }
    },
    {
      "name": "MultiSigWallet",
      "address": "0x7B0d44D5b2eF3A8B168FAfdcc321FAb0D9d5d08C",
      "code": "https://etherscan.deth.net/address/0x7B0d44D5b2eF3A8B168FAfdcc321FAb0D9d5d08C",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getConfirmationCount": [3, 3, 0, 3, 2],
        "getConfirmations": [
          [
            "0xf5020ADf433645c451A4809eac0d6F680709f11B",
            "0xB7093FC2d926ADdE48122B70991fe68374879adf",
            "0x3Cd51A933b0803DDCcDF985A7c71C1C7357FE9Eb"
          ],
          [
            "0xB7093FC2d926ADdE48122B70991fe68374879adf",
            "0xC715b8501039d3514787dC55BC09f89c293351e9",
            "0x3Cd51A933b0803DDCcDF985A7c71C1C7357FE9Eb"
          ],
          [],
          [
            "0xf5020ADf433645c451A4809eac0d6F680709f11B",
            "0xC715b8501039d3514787dC55BC09f89c293351e9",
            "0x3Cd51A933b0803DDCcDF985A7c71C1C7357FE9Eb"
          ],
          [
            "0xf5020ADf433645c451A4809eac0d6F680709f11B",
            "0x3Cd51A933b0803DDCcDF985A7c71C1C7357FE9Eb"
          ]
        ],
        "getOwners": [
          "0xf5020ADf433645c451A4809eac0d6F680709f11B",
          "0xeD530f3b8675B0a576DaAe64C004676c65368DfD",
          "0xB7093FC2d926ADdE48122B70991fe68374879adf",
          "0xC715b8501039d3514787dC55BC09f89c293351e9",
          "0x6EF4e54E049A5FffB629063D3a9ee38ac27551C8",
          "0x3Cd51A933b0803DDCcDF985A7c71C1C7357FE9Eb"
        ],
        "isConfirmed": [false, false, false, false, false],
        "MAX_OWNER_COUNT": 50,
        "owners": [
          "0xf5020ADf433645c451A4809eac0d6F680709f11B",
          "0xeD530f3b8675B0a576DaAe64C004676c65368DfD",
          "0xB7093FC2d926ADdE48122B70991fe68374879adf",
          "0xC715b8501039d3514787dC55BC09f89c293351e9",
          "0x6EF4e54E049A5FffB629063D3a9ee38ac27551C8"
        ],
        "required": 4,
        "transactionCount": 86,
        "transactions": [
          [
            "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
            0,
            "0xa9059cbb0000000000000000000000003c1752445a6238cbb1107e4edcef5f71488f86e30000000000000000000000000000000000000000000000000000000000061a80",
            true
          ],
          [
            "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
            0,
            "0xa9059cbb0000000000000000000000003c1752445a6238cbb1107e4edcef5f71488f86e300000000000000000000000000000000000000000000000000000000000927c0",
            true
          ],
          [
            "0x53C8395465A84955c95159814461466053DedEDE",
            0,
            "0xa9059cbb0000000000000000000000003c1752445a6238cbb1107e4edcef5f71488f86e300000000000000000000000000000000000000000665d14f1378fde93c000000",
            false
          ],
          [
            "0x53C8395465A84955c95159814461466053DedEDE",
            0,
            "0xa9059cbb0000000000000000000000003c1752445a6238cbb1107e4edcef5f71488f86e3000000000000000000000000000000000000000000a3c82181f27fca86000000",
            true
          ],
          [
            "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
            0,
            "0xa9059cbb000000000000000000000000cf08f5cf85b074bb1094bdc6007c785d885f88930000000000000000000000000000000000000000000000000000000ba43b7400",
            true
          ]
        ]
      },
      "errors": {
        "getConfirmationCount": "Too many values. Update configuration explore fully",
        "getConfirmations": "Too many values. Update configuration explore fully",
        "isConfirmed": "Too many values. Update configuration explore fully",
        "owners": "Too many values. Update configuration explore fully",
        "transactions": "Too many values. Update configuration explore fully"
      }
    },
    {
      "name": "FiatTokenV2_1",
      "address": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
      "code": "https://etherscan.deth.net/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48,0xa2327a938Febf5FEC13baCFb16Ae10EcBc4cbDCF",
      "upgradeability": {
        "type": "ZeppelinOS proxy",
        "implementation": "0xa2327a938Febf5FEC13baCFb16Ae10EcBc4cbDCF",
        "admin": "0x807a96288A1A408dBC13DE2b1d087d10356395d2"
      },
      "values": {
        "blacklister": "0x5dB0115f3B72d19cEa34dD697cf412Ff86dc7E1b",
        "CANCEL_AUTHORIZATION_TYPEHASH": "0x158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a1597429",
        "currency": "USD",
        "decimals": 6,
        "DOMAIN_SEPARATOR": "0x06c37168a7db5138defc7866392bb87a741f9b3d104deb5094588ce041cae335",
        "masterMinter": "0xE982615d461DD5cD06575BbeA87624fda4e3de17",
        "name": "USD Coin",
        "owner": "0xFcb19e6a322b27c06842A71e8c725399f049AE3a",
        "paused": false,
        "pauser": "0xf0d160DEC1749aFaF5A831668093B1431f7C8527",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "RECEIVE_WITH_AUTHORIZATION_TYPEHASH": "0xd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de8",
        "rescuer": "0x0000000000000000000000000000000000000000",
        "symbol": "USDC",
        "totalSupply": "28712783168324405",
        "TRANSFER_WITH_AUTHORIZATION_TYPEHASH": "0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267",
        "version": "2"
      },
      "errors": {
        "admin": "Execution reverted",
        "implementation": "Execution reverted"
      }
    },
    {
      "name": "MasterMinter",
      "address": "0xE982615d461DD5cD06575BbeA87624fda4e3de17",
      "code": "https://etherscan.deth.net/address/0xE982615d461DD5cD06575BbeA87624fda4e3de17",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "getMinterManager": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "owner": "0xC1d9fe41D19Dd52cb3Ae5d1D3b0030B5D498c704"
      }
    },
    {
      "name": "BlockVerifier",
      "address": "0x1c602313cDDC68C5789aCb7df0C92a93B0E04C9e",
      "code": "https://etherscan.deth.net/address/0x1c602313cDDC68C5789aCb7df0C92a93B0E04C9e",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0xd8C695DfAab475f55327Ce269096923EFECa2e0F",
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      }
    }
  ],
  "eoas": [
    "0x3Cd51A933b0803DDCcDF985A7c71C1C7357FE9Eb",
    "0x5dB0115f3B72d19cEa34dD697cf412Ff86dc7E1b",
    "0x6EF4e54E049A5FffB629063D3a9ee38ac27551C8",
    "0x807a96288A1A408dBC13DE2b1d087d10356395d2",
    "0xB7093FC2d926ADdE48122B70991fe68374879adf",
    "0xC1d9fe41D19Dd52cb3Ae5d1D3b0030B5D498c704",
    "0xC715b8501039d3514787dC55BC09f89c293351e9",
    "0xd8C695DfAab475f55327Ce269096923EFECa2e0F",
    "0xeD530f3b8675B0a576DaAe64C004676c65368DfD",
    "0xf0d160DEC1749aFaF5A831668093B1431f7C8527",
    "0xf5020ADf433645c451A4809eac0d6F680709f11B",
    "0xFcb19e6a322b27c06842A71e8c725399f049AE3a"
  ],
  "abis": {
    "0x1c602313cDDC68C5789aCb7df0C92a93B0E04C9e": [
      "constructor()",
      "event CircuitDisabled(uint8 indexed blockType, uint16 blockSize, uint8 blockVersion)",
      "event CircuitRegistered(uint8 indexed blockType, uint16 blockSize, uint8 blockVersion)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function circuits(uint8, uint16, uint8) view returns (bool registered, bool enabled)",
      "function claimOwnership()",
      "function getVerificationKey(uint8 blockType, uint16 blockSize, uint8 blockVersion) view returns (uint256[18])",
      "function isCircuitEnabled(uint8 blockType, uint16 blockSize, uint8 blockVersion) view returns (bool)",
      "function isCircuitRegistered(uint8 blockType, uint16 blockSize, uint8 blockVersion) view returns (bool)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function verifyProofs(uint8 blockType, uint16 blockSize, uint8 blockVersion, uint256[] publicInputs, uint256[] proofs) view returns (bool)"
    ],
    "0x4d707cae77c5E82a00BF9572A55d3ef3a4e0c458": [
      "constructor(address _lrcAddress, address _protocolFeeVault, address _blockVerifierAddress)",
      "event ExchangeStakeBurned(address exchangeAddr, uint256 amount)",
      "event ExchangeStakeDeposited(address exchangeAddr, uint256 amount)",
      "event ExchangeStakeWithdrawn(address exchangeAddr, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event SettingsUpdated(uint256 time)",
      "function blockVerifierAddress() view returns (address)",
      "function burnExchangeStake(uint256 amount) returns (uint256 burnedLRC)",
      "function claimOwnership()",
      "function depositExchangeStake(address exchangeAddr, uint256 amountLRC) returns (uint256 stakedLRC)",
      "function forcedWithdrawalFee() view returns (uint256)",
      "function getExchangeStake(address exchangeAddr) view returns (uint256)",
      "function getProtocolFeeValues() view returns (uint16 feeBips)",
      "function lrcAddress() view returns (address)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function protocolFeeBips() view returns (uint16)",
      "function protocolFeeVault() view returns (address)",
      "function renounceOwnership()",
      "function totalStake() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function updateProtocolFeeSettings(uint16 _protocolFeeBips)",
      "function updateSettings(address _protocolFeeVault, uint256 _forcedWithdrawalFee)",
      "function withdrawExchangeStake(address recipient, uint256 requestedAmount) returns (uint256 amountLRC)"
    ],
    "0x53C8395465A84955c95159814461466053DedEDE": [
      "constructor()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function MINTER_ROLE() view returns (bytes32)",
      "function PAUSER_ROLE() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function pause()",
      "function paused() view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function unpause()"
    ],
    "0x6B937A5920726e70c5bF1d4d4E18EEeEd46FaE83": [
      "constructor(address _exchange)",
      "event Drained(address to, address token, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PermissionUpdate(address indexed user, bytes4 indexed selector, bool allowed)",
      "event SubmitBlocksAccessOpened(bool open)",
      "event TargetCalled(address target, bytes data)",
      "function canDrain(address drainer, address) view returns (bool)",
      "function claimOwnership()",
      "function drain(address to, address token) returns (uint256 amount)",
      "function grantAccess(address user, bytes4 selector, bool granted)",
      "function hasAccessTo(address user, bytes4 selector) view returns (bool)",
      "function isValidSignature(bytes32 signHash, bytes signature) view returns (bytes4)",
      "function open() view returns (bool)",
      "function openAccessToSubmitBlocks(bool _open)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function permissions(address, bytes4) view returns (bool)",
      "function renounceOwnership()",
      "function submitBlocks(bool isDataCompressed, bytes data)",
      "function target() view returns (address)",
      "function transact(bytes data) payable",
      "function transferOwnership(address newOwner)"
    ],
    "0x7B0d44D5b2eF3A8B168FAfdcc321FAb0D9d5d08C": [
      "function owners(uint256) view returns (address)",
      "function removeOwner(address owner)",
      "function revokeConfirmation(uint256 transactionId)",
      "function isOwner(address) view returns (bool)",
      "function confirmations(uint256, address) view returns (bool)",
      "function getTransactionCount(bool pending, bool executed) view returns (uint256 count)",
      "function addOwner(address owner)",
      "function isConfirmed(uint256 transactionId) view returns (bool)",
      "function getConfirmationCount(uint256 transactionId) view returns (uint256 count)",
      "function transactions(uint256) view returns (address destination, uint256 value, bytes data, bool executed)",
      "function getOwners() view returns (address[])",
      "function getTransactionIds(uint256 from, uint256 to, bool pending, bool executed) view returns (uint256[] _transactionIds)",
      "function getConfirmations(uint256 transactionId) view returns (address[] _confirmations)",
      "function transactionCount() view returns (uint256)",
      "function changeRequirement(uint256 _required)",
      "function confirmTransaction(uint256 transactionId)",
      "function submitTransaction(address destination, uint256 value, bytes data) returns (uint256 transactionId)",
      "function MAX_OWNER_COUNT() view returns (uint256)",
      "function required() view returns (uint256)",
      "function replaceOwner(address owner, address newOwner)",
      "function executeTransaction(uint256 transactionId)",
      "constructor(address[] _owners, uint256 _required)",
      "event Confirmation(address indexed sender, uint256 indexed transactionId)",
      "event Revocation(address indexed sender, uint256 indexed transactionId)",
      "event Submission(uint256 indexed transactionId)",
      "event Execution(uint256 indexed transactionId)",
      "event ExecutionFailure(uint256 indexed transactionId)",
      "event Deposit(address indexed sender, uint256 value)",
      "event OwnerAddition(address indexed owner)",
      "event OwnerRemoval(address indexed owner)",
      "event RequirementChange(uint256 required)"
    ],
    "0x814d0c1903D69EB1c7ceB8F5190B20A06892d1dA": [
      "event CheckBalance(address indexed token, bool checkBalance)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function claimOwnership()",
      "function deposit(address from, address token, uint248 amount, bytes) payable returns (uint248 amountReceived)",
      "function exchange() view returns (address)",
      "function initialize(address _exchange)",
      "function isETH(address addr) pure returns (bool)",
      "function isTokenSupported(address) pure returns (bool)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setCheckBalance(address token, bool checkBalance)",
      "function transfer(address from, address to, address token, uint256 amount) payable",
      "function transferOwnership(address newOwner)",
      "function withdraw(address, address to, address token, uint256 amount) payable"
    ],
    "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48": [
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function implementation() view returns (address)",
      "function changeAdmin(address newAdmin)",
      "function admin() view returns (address)",
      "constructor(address _implementation)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address implementation)"
    ],
    "0xa2327a938Febf5FEC13baCFb16Ae10EcBc4cbDCF": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AuthorizationCanceled(address indexed authorizer, bytes32 indexed nonce)",
      "event AuthorizationUsed(address indexed authorizer, bytes32 indexed nonce)",
      "event Blacklisted(address indexed _account)",
      "event BlacklisterChanged(address indexed newBlacklister)",
      "event Burn(address indexed burner, uint256 amount)",
      "event MasterMinterChanged(address indexed newMasterMinter)",
      "event Mint(address indexed minter, address indexed to, uint256 amount)",
      "event MinterConfigured(address indexed minter, uint256 minterAllowedAmount)",
      "event MinterRemoved(address indexed oldMinter)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RescuerChanged(address indexed newRescuer)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UnBlacklisted(address indexed _account)",
      "event Unpause()",
      "function CANCEL_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function RECEIVE_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function TRANSFER_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function authorizationState(address authorizer, bytes32 nonce) view returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function blacklist(address _account)",
      "function blacklister() view returns (address)",
      "function burn(uint256 _amount)",
      "function cancelAuthorization(address authorizer, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function configureMinter(address minter, uint256 minterAllowedAmount) returns (bool)",
      "function currency() view returns (string)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 decrement) returns (bool)",
      "function increaseAllowance(address spender, uint256 increment) returns (bool)",
      "function initialize(string tokenName, string tokenSymbol, string tokenCurrency, uint8 tokenDecimals, address newMasterMinter, address newPauser, address newBlacklister, address newOwner)",
      "function initializeV2(string newName)",
      "function initializeV2_1(address lostAndFound)",
      "function isBlacklisted(address _account) view returns (bool)",
      "function isMinter(address account) view returns (bool)",
      "function masterMinter() view returns (address)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function minterAllowance(address minter) view returns (uint256)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function receiveWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function removeMinter(address minter) returns (bool)",
      "function rescueERC20(address tokenContract, address to, uint256 amount)",
      "function rescuer() view returns (address)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function transferWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function unBlacklist(address _account)",
      "function unpause()",
      "function updateBlacklister(address _newBlacklister)",
      "function updateMasterMinter(address _newMasterMinter)",
      "function updatePauser(address _newPauser)",
      "function updateRescuer(address newRescuer)",
      "function version() view returns (string)"
    ],
    "0xe63602a9B3DFE983187525AC985Fec4F57B24eD5": [
      "constructor()",
      "event AllowOnchainTransferFrom(bool value)",
      "event BlockSubmitted(uint256 indexed blockIdx, bytes32 merkleRoot, bytes32 publicDataHash)",
      "event BlockVerifierRefreshed(address blockVerifier)",
      "event DepositContractUpdate(address depositContract)",
      "event DepositParamsUpdate(uint256 freeDepositMax, uint256 freeDepositRemained, uint256 freeSlotPerBlock, uint256 depositFee)",
      "event DepositRequested(address from, address to, address token, uint32 tokenId, uint248 amount)",
      "event ExchangeCloned(address exchangeAddress, address owner, bytes32 genesisMerkleRoot)",
      "event ForcedWithdrawalRequested(address owner, address token, uint32 accountID)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ProtocolFeesUpdated(uint16 protocolFeeBips, uint16 previousProtocolFeeBips)",
      "event Shutdown(uint256 timestamp)",
      "event TokenRegistered(address token, uint32 tokenId)",
      "event TransactionApproved(address owner, bytes32 transactionHash)",
      "event TransactionsApproved(address[] owners, bytes32[] transactionHashes)",
      "event WithdrawExchangeFees(address token, address recipient)",
      "event WithdrawalCompleted(uint8 category, address from, address to, address token, uint256 amount)",
      "event WithdrawalFailed(uint8 category, address from, address to, address token, uint256 amount)",
      "event WithdrawalModeActivated(uint256 timestamp)",
      "event WithdrawalRecipientUpdate(address from, address to, address token, uint248 amount, uint32 storageID, address newRecipient)",
      "function allowOnchainTransferFrom() view returns (bool)",
      "function approveTransaction(address from, bytes32 transactionHash)",
      "function approveTransactions(address[] owners, bytes32[] transactionHashes)",
      "function burnExchangeStake()",
      "function claimOwnership()",
      "function deposit(address from, address to, address tokenAddress, uint248 amount, bytes extraData) payable",
      "function domainSeparator() view returns (bytes32)",
      "function forceWithdraw(address from, address token, uint32 accountID) payable",
      "function getAmountWithdrawable(address from, address token) view returns (uint256)",
      "function getBlockHeight() view returns (uint256)",
      "function getBlockInfo(uint256 blockIdx) view returns (tuple(uint32 timestamp, bytes28 blockDataHash))",
      "function getConstants() pure returns (tuple(uint256 SNARK_SCALAR_FIELD, uint256 MAX_OPEN_FORCED_REQUESTS, uint256 MAX_AGE_FORCED_REQUEST_UNTIL_WITHDRAW_MODE, uint256 TIMESTAMP_HALF_WINDOW_SIZE_IN_SECONDS, uint256 MAX_NUM_ACCOUNTS, uint256 MAX_NUM_TOKENS, uint256 MIN_AGE_PROTOCOL_FEES_UNTIL_UPDATED, uint256 MIN_TIME_IN_SHUTDOWN, uint256 TX_DATA_AVAILABILITY_SIZE, uint256 MAX_AGE_DEPOSIT_UNTIL_WITHDRAWABLE_UPPERBOUND, uint256 MAX_FORCED_WITHDRAWAL_FEE, uint256 DEFAULT_PROTOCOL_FEE_BIPS))",
      "function getDepositBalance(address token) view returns (uint248)",
      "function getDepositContract() view returns (address)",
      "function getDomainSeparator() view returns (bytes32)",
      "function getExchangeStake() view returns (uint256)",
      "function getFreeDepositRemained() view returns (uint256)",
      "function getMaxAgeDepositUntilWithdrawable() view returns (uint32)",
      "function getMerkleAssetRoot() view returns (bytes32)",
      "function getMerkleRoot() view returns (bytes32)",
      "function getNumAvailableForcedSlots() view returns (uint256)",
      "function getPendingDepositAmount(address from, address tokenAddress) view returns (uint248)",
      "function getProtocolFeeLastWithdrawnTime(address tokenAddress) view returns (uint256)",
      "function getProtocolFeeValues() view returns (uint32 syncedAt, uint16 protocolFeeBips, uint16 previousProtocolFeeBips, uint32 executeTimeOfNextProtocolFeeBips, uint16 nextProtocolFeeBips)",
      "function getTokenAddress(uint32 tokenID) view returns (address)",
      "function getTokenID(address tokenAddress) view returns (uint32)",
      "function getUnconfirmedBalance(address token) view returns (uint256)",
      "function getWithdrawalRecipient(address from, address to, address token, uint248 amount, uint32 storageID) view returns (address)",
      "function initialize(address _loopring, address _owner, bytes32 _genesisMerkleRoot, bytes32 _genesisMerkleAssetRoot)",
      "function isForcedWithdrawalPending(uint32 accountID, address token) view returns (bool)",
      "function isInWithdrawalMode() view returns (bool)",
      "function isShutdown() view returns (bool)",
      "function isTransactionApproved(address from, bytes32 transactionHash) view returns (bool)",
      "function isUserOrAgent(address from) view returns (bool)",
      "function isWithdrawnInWithdrawalMode(uint32 accountID, address token) view returns (bool)",
      "function notifyForcedRequestTooOld(uint32 accountID, address token)",
      "function onchainTransferFrom(address from, address to, address token, uint256 amount)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function registerToken(address tokenAddress) returns (uint32)",
      "function renounceOwnership()",
      "function setAllowOnchainTransferFrom(bool value)",
      "function setDepositContract(address _depositContract)",
      "function setDepositParams(uint256 freeDepositMax, uint256 freeDepositRemained, uint256 freeSlotPerBlock, uint256 depositFee)",
      "function setMaxAgeDepositUntilWithdrawable(uint32 newValue) returns (uint32)",
      "function setWithdrawalRecipient(address from, address to, address token, uint248 amount, uint32 storageID, address newRecipient)",
      "function shutdown() returns (bool success)",
      "function state() view returns (uint32 maxAgeDepositUntilWithdrawable, bytes32 DOMAIN_SEPARATOR, address loopring, address blockVerifier, address agentRegistry, address depositContract, tuple(uint256 freeDepositMax, uint256 freeDepositRemained, uint256 lastDepositBlockNum, uint256 freeSlotPerBlock, uint256 depositFee) depositState, bytes32 merkleRoot, bytes32 merkleAssetRoot, uint256 numBlocks, uint32 numPendingForcedTransactions, tuple(uint32 syncedAt, uint16 protocolFeeBips, uint16 previousProtocolFeeBips, uint32 executeTimeOfNextProtocolFeeBips, uint16 nextProtocolFeeBips) protocolFeeData, tuple(uint256 shutdownModeStartTime, uint256 withdrawalModeStartTime) modeTime)",
      "function submitBlocks(tuple(uint8 blockType, uint16 blockSize, uint8 blockVersion, bytes data, uint256[8] proof, bool storeBlockInfoOnchain, bytes auxiliaryData, bytes offchainData)[] blocks)",
      "function transferOwnership(address newOwner)",
      "function version() pure returns (string)",
      "function withdrawExchangeFees(address token, address recipient)",
      "function withdrawExchangeStake(address recipient) returns (uint256)",
      "function withdrawFromApprovedWithdrawals(address[] owners, address[] tokens)",
      "function withdrawFromDepositRequest(address from, address token)",
      "function withdrawFromMerkleTree(tuple(tuple(uint32 accountID, address owner, uint256 pubKeyX, uint256 pubKeyY, uint32 nonce) accountLeaf, tuple(uint32 tokenID, uint248 balance) balanceLeaf, uint256[48] accountMerkleProof, uint256[48] balanceMerkleProof) merkleProof)"
    ],
    "0xE982615d461DD5cD06575BbeA87624fda4e3de17": [
      "function incrementMinterAllowance(uint256 _allowanceIncrement) returns (bool)",
      "function setMinterManager(address _newMinterManager)",
      "function decrementMinterAllowance(uint256 _allowanceDecrement) returns (bool)",
      "function owner() view returns (address)",
      "function getMinterManager() view returns (address)",
      "function getWorker(address _controller) view returns (address)",
      "function configureController(address _controller, address _worker)",
      "function configureMinter(uint256 _newAllowance) returns (bool)",
      "function removeMinter() returns (bool)",
      "function transferOwnership(address newOwner)",
      "function removeController(address _controller)",
      "constructor(address _minterManager)",
      "event MinterManagerSet(address indexed _oldMinterManager, address indexed _newMinterManager)",
      "event MinterConfigured(address indexed _msgSender, address indexed _minter, uint256 _allowance)",
      "event MinterRemoved(address indexed _msgSender, address indexed _minter)",
      "event MinterAllowanceIncremented(address indexed _msgSender, address indexed _minter, uint256 _increment, uint256 _newAllowance)",
      "event MinterAllowanceDecremented(address indexed msgSender, address indexed minter, uint256 decrement, uint256 newAllowance)",
      "event ControllerConfigured(address indexed _controller, address indexed _worker)",
      "event ControllerRemoved(address indexed _controller)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ]
  }
}
