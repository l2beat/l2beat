{
  "name": "fraxferry",
  "chain": "ethereum",
  "blockNumber": 19517283,
  "configHash": "0x7fb9ba698f25f469811377b9d12adadd2640d6c452fa4c864b028693bd0f3dcb",
  "version": 3,
  "contracts": [
    {
      "name": "DepositContract",
      "address": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1602667372,
      "values": {
        "get_deposit_count": "0xb60f150000000000",
        "get_deposit_root": "0x39c762c9595de58de3781042036d8a82600fa6ac7587d0c4532f32828444ed90"
      },
      "derivedName": "DepositContract"
    },
    {
      "name": "FeeToSetter",
      "address": "0x18e433c7Bf8A2E1d0197CE5d8f9AFAda1A771360",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1600286876,
      "values": {
        "factory": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
        "feeTo": "0xDAF819c2437a82f9e01f6586207ebF961a7f0970",
        "owner": "0x1a9C8182C09F50C8318d769245beA52c32BE35BC",
        "vestingEnd": 1614556800
      }
    },
    {
      "name": "Timelock",
      "address": "0x1a9C8182C09F50C8318d769245beA52c32BE35BC",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1600107105,
      "values": {
        "admin": "0x408ED6354d4973f66138C91495F2f2FCbd8724C3",
        "delay": 172800,
        "GRACE_PERIOD": 1209600,
        "MAXIMUM_DELAY": 2592000,
        "MINIMUM_DELAY": 172800,
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "FRAXOracleWrapper",
      "address": "0x2A6ddD9401B14d0443d0738B8a78fd5B99829A80",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1628896480,
      "values": {
        "chainlink_frax_eth_decimals": 18,
        "EXTRA_PRECISION": 1000000,
        "getFRAXPrice": [275, 275069240],
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "owner": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "PRICE_PRECISION": 1000000,
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA"
      },
      "derivedName": "FRAXOracleWrapper"
    },
    {
      "name": "sfraxFerryBridgeArbitrum",
      "address": "0x2b4864c2F2A2C275C6C66B90a2ae6BE9fA9cbE47",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1708807463,
      "values": {
        "captain": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "chainid": 1,
        "executeIndex": 0,
        "FEE_MAX": "100000000000000000000",
        "FEE_MIN": "5000000000000000000",
        "FEE_RATE": 10,
        "firstOfficer": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "MIN_WAIT_PERIOD_ADD": 3600,
        "MIN_WAIT_PERIOD_EXECUTE": 79200,
        "noBatches": 1,
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "noTransactions": 0,
        "owner": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "paused": false,
        "REDUCED_DECIMALS": 10000000000,
        "targetChain": 252,
        "targetToken": "0xfc00000000000000000000000000000000000008",
        "token": "0xA663B02CF0a4b149d2aD41910CB81e23e1c41c32"
      },
      "derivedName": "Fraxferry"
    },
    {
      "name": "FRAXShares",
      "address": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1608140560,
      "values": {
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "FRAXStablecoinAdd": "0x0000000000000000000000000000000000000000",
        "FXS_DAO_min": 0,
        "genesis_supply": "100000000000000000000000000",
        "name": "Frax Share",
        "oracle_address": "0xDf81c82A3e02330Bb03C9b31015f32e2dac470dE",
        "owner_address": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "symbol": "FXS",
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
        "totalSupply": "99681495591133609740710857",
        "trackingVotes": true
      }
    },
    {
      "name": "UniswapPairOracle_USDT_WETH",
      "address": "0x3B11DA52030420c663d263Ad4415a8A02E5f8cf8",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1609124846,
      "values": {
        "ALLOW_STALE_CONSULTS": false,
        "blockTimestampLast": 1653530471,
        "canUpdate": true,
        "CONSULT_LENIENCY": 120,
        "pair": "0xecBa967D84fCF0405F6b32Bc45F4d36BfDBB2E81",
        "PERIOD": 600,
        "price0Average": "19720194560496472240398626341041",
        "price0CumulativeLast": "1144207123367880923784665105255313096743",
        "price1Average": "1367123766677071810559390360483767193",
        "price1CumulativeLast": "92496964234498302537502026618092531263121005",
        "token0": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0",
        "token1": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      }
    },
    {
      "name": "fxsFerryBridgeArbitrum",
      "address": "0x4A6d155df9Ec9A1BB3639e6B7B99E46Fb68D42f6",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1708806863,
      "values": {
        "captain": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "chainid": 1,
        "executeIndex": 6,
        "FEE_MAX": "100000000000000000000",
        "FEE_MIN": "1000000000000000000",
        "FEE_RATE": 10,
        "firstOfficer": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "MIN_WAIT_PERIOD_ADD": 3600,
        "MIN_WAIT_PERIOD_EXECUTE": 79200,
        "noBatches": 7,
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "noTransactions": 3,
        "owner": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "paused": false,
        "REDUCED_DECIMALS": 10000000000,
        "targetChain": 252,
        "targetToken": "0xFc00000000000000000000000000000000000002",
        "token": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0"
      },
      "derivedName": "Fraxferry"
    },
    {
      "name": "sfrxFerryBridgeArbitrum",
      "address": "0x5c5f05cF8528FFe925A2264743bFfEdbAB2b0FE3",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1708807391,
      "values": {
        "captain": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "chainid": 1,
        "executeIndex": 1,
        "FEE_MAX": 5000000000000000,
        "FEE_MIN": 4000000000000000,
        "FEE_RATE": 4,
        "firstOfficer": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "MIN_WAIT_PERIOD_ADD": 3600,
        "MIN_WAIT_PERIOD_EXECUTE": 79200,
        "noBatches": 2,
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "noTransactions": 0,
        "owner": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "paused": false,
        "REDUCED_DECIMALS": 10000000000,
        "targetChain": 252,
        "targetToken": "0xFC00000000000000000000000000000000000005",
        "token": "0xac3E018457B222d93114458476f3E3416Abbe38F"
      },
      "derivedName": "Fraxferry"
    },
    {
      "name": "UniswapV2Factory",
      "address": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1588610042,
      "values": {
        "feeTo": "0x0000000000000000000000000000000000000000",
        "feeToSetter": "0x18e433c7Bf8A2E1d0197CE5d8f9AFAda1A771360"
      },
      "derivedName": "UniswapV2Factory"
    },
    {
      "name": "FPI",
      "address": "0x5Ca135cB8527d76e932f34B5145575F9d8cbE08E",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1648578483,
      "values": {
        "decimals": 18,
        "name": "Frax Price Index",
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "owner": "0x6A7efa964Cf6D9Ab3BC3c47eBdDB853A8853C502",
        "symbol": "FPI",
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
        "totalSupply": "84618194004907322624158217"
      },
      "derivedName": "FPI"
    },
    {
      "name": "fraxFerryBridgeArbitrum",
      "address": "0x5e1D94021484642863Ea8E7Cb4F0188e56B18FEE",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1708806563,
      "values": {
        "captain": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "chainid": 1,
        "crewmembers": ["0xBB437059584e30598b3AF0154472E47E6e2a45B9"],
        "executeIndex": 14,
        "FEE_MAX": "100000000000000000000",
        "FEE_MIN": "5000000000000000000",
        "FEE_RATE": 10,
        "firstOfficer": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "MIN_WAIT_PERIOD_ADD": 3600,
        "MIN_WAIT_PERIOD_EXECUTE": 79200,
        "noBatches": 15,
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "noTransactions": 5,
        "owner": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "paused": false,
        "REDUCED_DECIMALS": 10000000000,
        "targetChain": 252,
        "targetToken": "0xFc00000000000000000000000000000000000001",
        "token": "0x853d955aCEf822Db058eb8505911ED77F175b99e"
      },
      "derivedName": "Fraxferry"
    },
    {
      "name": "frxETH",
      "address": "0x5E8422345238F34275888049021821E8E08CAa1f",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1665022895,
      "values": {
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xf76bc0789b1168d8167e9ab7fe582017fc10c446b759047e0b1cb2d4451d7ce6",
        "minters_array": [
          "0xbAFA44EFE7901E04E39Dad13167D089C559c1138",
          "0x8306300ffd616049FD7e4b0354a64Da835c1A81C"
        ],
        "name": "Frax Ether",
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "owner": "0x8306300ffd616049FD7e4b0354a64Da835c1A81C",
        "symbol": "frxETH",
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
        "totalSupply": "282836978323072636255204"
      },
      "derivedName": "frxETH"
    },
    {
      "name": "GnosisSafe",
      "address": "0x6A7efa964Cf6D9Ab3BC3c47eBdDB853A8853C502",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1649111477,
      "values": {
        "domainSeparator": "0xad8568d2acb832c93f03b3afa25e7796825a0766f7d77ead869ff72774844ea9",
        "getChainId": 1,
        "getOwners": [
          "0x6933BCC3e96f1C4d2cb73Cb391d854b18Ab7A4F2",
          "0xcbc616D595D38483e6AdC45C7E426f44bF230928",
          "0x17e06ce6914E3969f7BD37D8b2a563890cA1c96e",
          "0x05FB8eC3C41da95b26fCb85503DaF8B89B89A935",
          "0x6e74053a3798e0fC9a9775F7995316b27f21c4D2"
        ],
        "getThreshold": 3,
        "nonce": 487,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "frxETHMultisig",
      "address": "0x8306300ffd616049FD7e4b0354a64Da835c1A81C",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1665087971,
      "values": {
        "domainSeparator": "0xe6f953a2dfa9b1099dd9a8044ed16ff1a96e72591979e3e7fbfa1e302c81c264",
        "getChainId": 1,
        "getOwners": [
          "0xcbc616D595D38483e6AdC45C7E426f44bF230928",
          "0xc28339c70054bC22255A74E927a0B9e9A475F224",
          "0x6933BCC3e96f1C4d2cb73Cb391d854b18Ab7A4F2",
          "0x05FB8eC3C41da95b26fCb85503DaF8B89B89A935",
          "0x6e74053a3798e0fC9a9775F7995316b27f21c4D2"
        ],
        "getThreshold": 3,
        "nonce": 923,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "GnosisSafe",
      "address": "0x831822660572bd54ebaa065C2acef662a6277D40",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1696358483,
      "values": {
        "domainSeparator": "0x8e5688c829a507077770d246d253892f8b06809b4461c8d0474921ffb8ca15d7",
        "getChainId": 1,
        "getOwners": [
          "0x13Fe84D36d7a507Bb4bdAC6dCaF13a10961fc470",
          "0xcbc616D595D38483e6AdC45C7E426f44bF230928",
          "0x6933BCC3e96f1C4d2cb73Cb391d854b18Ab7A4F2",
          "0x05FB8eC3C41da95b26fCb85503DaF8B89B89A935",
          "0xc28339c70054bC22255A74E927a0B9e9A475F224",
          "0x6e74053a3798e0fC9a9775F7995316b27f21c4D2"
        ],
        "getThreshold": 3,
        "nonce": 35,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "Timelock",
      "address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1608140486,
      "values": {
        "admin": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "delay": 172800,
        "GRACE_PERIOD": 1209600,
        "MAXIMUM_DELAY": 2592000,
        "MINIMUM_DELAY": 172800,
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "FRAXStablecoin",
      "address": "0x853d955aCEf822Db058eb8505911ED77F175b99e",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1608140520,
      "values": {
        "collateral_ratio_paused": true,
        "COLLATERAL_RATIO_PAUSER": "0xb25402418ad555013210365a422f9f1206b2dd00719998db06f8a1fbe014641b",
        "controller_address": "0x0000000000000000000000000000000000000000",
        "creator_address": "0x234D953a9404Bf9DbC3b526271d440cD2870bCd2",
        "decimals": 18,
        "DEFAULT_ADMIN_ADDRESS": "0xa448833bEcE66fD8803ac0c390936C79b5FD6eDf",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "eth_usd_consumer_address": "0xBa6C6EaC41a24F9D39032513f66D738B3559f15a",
        "frax_eth_oracle_address": "0x2A6ddD9401B14d0443d0738B8a78fd5B99829A80",
        "frax_step": 2500,
        "fxs_address": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0",
        "fxs_eth_oracle_address": "0x3B11DA52030420c663d263Ad4415a8A02E5f8cf8",
        "genesis_supply": "2000000000000000000000000",
        "global_collateral_ratio": 945000,
        "globalCollateralValue": "602819497919344547397725875",
        "last_call_time": 1687208423,
        "minting_fee": 9500,
        "name": "Frax",
        "owner_address": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
        "price_band": 10000,
        "price_target": 980000,
        "redemption_fee": 4500,
        "refresh_cooldown": 3600,
        "symbol": "FRAX",
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
        "totalSupply": "649462235510510991027735564",
        "weth_address": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      },
      "derivedName": "FRAXStablecoin"
    },
    {
      "name": "fpisFerryBridgeArbitrum",
      "address": "0x958815f476cD07354c0BC034EE5077B20fD93003",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1708806983,
      "values": {
        "captain": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "chainid": 1,
        "executeIndex": 2,
        "FEE_MAX": "100000000000000000000",
        "FEE_MIN": "5000000000000000000",
        "FEE_RATE": 10,
        "firstOfficer": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "MIN_WAIT_PERIOD_ADD": 3600,
        "MIN_WAIT_PERIOD_EXECUTE": 79200,
        "noBatches": 3,
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "noTransactions": 0,
        "owner": "0x6A7efa964Cf6D9Ab3BC3c47eBdDB853A8853C502",
        "paused": false,
        "REDUCED_DECIMALS": 10000000000,
        "targetChain": 252,
        "targetToken": "0xfc00000000000000000000000000000000000004",
        "token": "0xc2544A32872A91F4A553b404C6950e89De901fdb"
      },
      "derivedName": "Fraxferry"
    },
    {
      "name": "fpiFerryBridgeArbitrum",
      "address": "0x9A576A3d39c589A861B46864C253288bcA428a6c",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1708806923,
      "values": {
        "captain": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "chainid": 1,
        "executeIndex": 1,
        "FEE_MAX": "100000000000000000000",
        "FEE_MIN": "5000000000000000000",
        "FEE_RATE": 10,
        "firstOfficer": "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
        "MIN_WAIT_PERIOD_ADD": 3600,
        "MIN_WAIT_PERIOD_EXECUTE": 79200,
        "noBatches": 1,
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "noTransactions": 0,
        "owner": "0x6A7efa964Cf6D9Ab3BC3c47eBdDB853A8853C502",
        "paused": false,
        "REDUCED_DECIMALS": 10000000000,
        "targetChain": 252,
        "targetToken": "0xFc00000000000000000000000000000000000003",
        "token": "0x5Ca135cB8527d76e932f34B5145575F9d8cbE08E"
      },
      "derivedName": "Fraxferry"
    },
    {
      "name": "StakedFrax",
      "address": "0xA663B02CF0a4b149d2aD41910CB81e23e1c41c32",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1697642351,
      "values": {
        "asset": "0x853d955aCEf822Db058eb8505911ED77F175b99e",
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x9215534876c4f9b64ee9cbc7b70915f8def0270d6a0aacd514b3ccd16f7e1fe4",
        "maxDistributionPerSecondPerAsset": 1666599821,
        "name": "Staked FRAX",
        "pendingTimelockAddress": "0x0000000000000000000000000000000000000000",
        "PRECISION": "1000000000000000000",
        "previewSyncRewards": [
          1711584000,
          1710989471,
          "288749145906825003957483"
        ],
        "REWARDS_CYCLE_LENGTH": 604800,
        "rewardsCycleData": [
          1711584000,
          1710989471,
          "288749145906825003957483"
        ],
        "symbol": "sFRAX",
        "timelockAddress": "0x831822660572bd54ebaa065C2acef662a6277D40",
        "UNDERLYING_PRECISION": "1000000000000000000"
      },
      "derivedName": "StakedFrax"
    },
    {
      "name": "sfrxETH",
      "address": "0xac3E018457B222d93114458476f3E3416Abbe38F",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1665022895,
      "values": {
        "asset": "0x5E8422345238F34275888049021821E8E08CAa1f",
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xe8254029df4a5fbfcf2de75f8fcf68b1060354a363693b1507e1197cc3dcc29b",
        "lastRewardAmount": "155619000000000000000",
        "lastSync": 1710981287,
        "name": "Staked Frax Ether",
        "pricePerShare": "1080255087757885889",
        "rewardsCycleEnd": 1711584000,
        "rewardsCycleLength": 604800,
        "symbol": "sfrxETH",
        "totalAssets": "199473676013042477873838",
        "totalSupply": "184654234239302072583883"
      },
      "derivedName": "sfrxETH"
    },
    {
      "name": "TimelockMultisig",
      "address": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1629667690,
      "values": {
        "domainSeparator": "0x05773792be342e7f8a01c63a9116de35bdf60190cdf42e31c3e1c2e7760b6dca",
        "getChainId": 1,
        "getOwners": [
          "0x6933BCC3e96f1C4d2cb73Cb391d854b18Ab7A4F2",
          "0xcbc616D595D38483e6AdC45C7E426f44bF230928",
          "0x17e06ce6914E3969f7BD37D8b2a563890cA1c96e",
          "0xc8dE9f45601DA8C76158b8CAF3E56E8A037F2228",
          "0x05FB8eC3C41da95b26fCb85503DaF8B89B89A935"
        ],
        "getThreshold": 3,
        "nonce": 5402,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "frxETHMinter",
      "address": "0xbAFA44EFE7901E04E39Dad13167D089C559c1138",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1665022895,
      "values": {
        "DEPOSIT_SIZE": "32000000000000000000",
        "depositContract": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "depositEtherPaused": false,
        "frxETHToken": "0x5E8422345238F34275888049021821E8E08CAa1f",
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "numValidators": 210,
        "owner": "0x8306300ffd616049FD7e4b0354a64Da835c1A81C",
        "RATIO_PRECISION": 1000000,
        "sfrxETHToken": "0xac3E018457B222d93114458476f3E3416Abbe38F",
        "submitPaused": false,
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
        "withholdRatio": 980000
      },
      "derivedName": "frxETHMinter"
    },
    {
      "name": "FPIS",
      "address": "0xc2544A32872A91F4A553b404C6950e89De901fdb",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1648578483,
      "values": {
        "decimals": 18,
        "FPI_TKN": "0x5Ca135cB8527d76e932f34B5145575F9d8cbE08E",
        "minters_array": [],
        "name": "Frax Price Index Share",
        "nominatedOwner": "0x0000000000000000000000000000000000000000",
        "owner": "0x6A7efa964Cf6D9Ab3BC3c47eBdDB853A8853C502",
        "symbol": "FPIS",
        "timelock_address": "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA",
        "totalSupply": "99540925469484135306440000"
      }
    },
    {
      "name": "FeeTo",
      "address": "0xDAF819c2437a82f9e01f6586207ebF961a7f0970",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1600286855,
      "values": {
        "feeRecipient": "0x0000000000000000000000000000000000000000",
        "owner": "0x1a9C8182C09F50C8318d769245beA52c32BE35BC"
      }
    },
    {
      "name": "UniswapV2Pair",
      "address": "0xecBa967D84fCF0405F6b32Bc45F4d36BfDBB2E81",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1608142352,
      "values": {
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xd465cf46e008902eda433425da19133368bf0828f29240e0c7a08a458cf67b29",
        "factory": "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
        "kLast": 0,
        "MINIMUM_LIQUIDITY": 1000,
        "name": "Uniswap V2",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "symbol": "UNI-V2",
        "token0": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0",
        "token1": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "totalSupply": "26152625069643940190"
      },
      "derivedName": "UniswapV2Pair"
    }
  ],
  "eoas": [
    "0x05FB8eC3C41da95b26fCb85503DaF8B89B89A935",
    "0x1144207123367880923784665105255313096743",
    "0x13Fe84D36d7a507Bb4bdAC6dCaF13a10961fc470",
    "0x17e06ce6914E3969f7BD37D8b2a563890cA1c96e",
    "0x234D953a9404Bf9DbC3b526271d440cD2870bCd2",
    "0x6933BCC3e96f1C4d2cb73Cb391d854b18Ab7A4F2",
    "0x6e74053a3798e0fC9a9775F7995316b27f21c4D2",
    "0xa448833bEcE66fD8803ac0c390936C79b5FD6eDf",
    "0xBB437059584e30598b3AF0154472E47E6e2a45B9",
    "0xc28339c70054bC22255A74E927a0B9e9A475F224",
    "0xc8dE9f45601DA8C76158b8CAF3E56E8A037F2228",
    "0xcbc616D595D38483e6AdC45C7E426f44bF230928",
    "0xDf81c82A3e02330Bb03C9b31015f32e2dac470dE",
    "0xFc00000000000000000000000000000000000001",
    "0xFc00000000000000000000000000000000000002",
    "0xFc00000000000000000000000000000000000003",
    "0xfc00000000000000000000000000000000000004",
    "0xFC00000000000000000000000000000000000005",
    "0xfc00000000000000000000000000000000000008"
  ],
  "abis": {
    "0x00000000219ab540356cBB839Cbe05303d7705Fa": [
      "constructor()",
      "event DepositEvent(bytes pubkey, bytes withdrawal_credentials, bytes amount, bytes signature, bytes index)",
      "function deposit(bytes pubkey, bytes withdrawal_credentials, bytes signature, bytes32 deposit_data_root) payable",
      "function get_deposit_count() view returns (bytes)",
      "function get_deposit_root() view returns (bytes32)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)"
    ],
    "0x18e433c7Bf8A2E1d0197CE5d8f9AFAda1A771360": [
      "constructor(address factory_, uint256 vestingEnd_, address owner_, address feeTo_)",
      "function factory() view returns (address)",
      "function feeTo() view returns (address)",
      "function owner() view returns (address)",
      "function setFeeToSetter(address feeToSetter_)",
      "function setOwner(address owner_)",
      "function toggleFees(bool on)",
      "function vestingEnd() view returns (uint256)"
    ],
    "0x1a9C8182C09F50C8318d769245beA52c32BE35BC": [
      "constructor(address admin_, uint256 delay_)",
      "event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event NewAdmin(address indexed newAdmin)",
      "event NewDelay(uint256 indexed newDelay)",
      "event NewPendingAdmin(address indexed newPendingAdmin)",
      "event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function acceptAdmin()",
      "function admin() view returns (address)",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta)",
      "function delay() view returns (uint256)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable returns (bytes)",
      "function pendingAdmin() view returns (address)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) returns (bytes32)",
      "function queuedTransactions(bytes32) view returns (bool)",
      "function setDelay(uint256 delay_)",
      "function setPendingAdmin(address pendingAdmin_)"
    ],
    "0x2A6ddD9401B14d0443d0738B8a78fd5B99829A80": [
      "constructor(address _creator_address, address _timelock_address)",
      "event OwnerChanged(address oldOwner, address newOwner)",
      "event OwnerNominated(address newOwner)",
      "function EXTRA_PRECISION() view returns (uint256)",
      "function PRICE_PRECISION() view returns (uint256)",
      "function acceptOwnership()",
      "function chainlink_frax_eth_decimals() view returns (uint256)",
      "function consult(address token, uint256 amountIn) view returns (uint256 amountOut)",
      "function getFRAXPrice() view returns (uint256 raw_price, uint256 precise_price)",
      "function nominateNewOwner(address _owner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function setChainlinkFRAXETHOracle(address _chainlink_frax_eth_oracle)",
      "function timelock_address() view returns (address)"
    ],
    "0x2b4864c2F2A2C275C6C66B90a2ae6BE9fA9cbE47": [
      "constructor(address _token, uint256 _chainid, address _targetToken, uint256 _targetChain)",
      "event Cancelled(uint256 index, bool cancel)",
      "event Depart(uint256 batchNo, uint256 start, uint256 end, bytes32 hash)",
      "event Disembark(uint256 start, uint256 end, bytes32 hash)",
      "event DisputeBatch(uint256 batchNo, bytes32 hash)",
      "event Embark(address indexed sender, uint256 index, uint256 amount, uint256 amountAfterFee, uint256 timestamp)",
      "event FeeExemptToggled(address addr, bool is_fee_exempt)",
      "event OwnerChanged(address indexed previousOwner, address indexed newOwner)",
      "event OwnerNominated(address indexed newOwner)",
      "event Pause(bool paused)",
      "event RemoveBatch(uint256 batchNo)",
      "event SetCaptain(address indexed previousCaptain, address indexed newCaptain)",
      "event SetCrewmember(address indexed crewmember, bool set)",
      "event SetFee(uint256 previousFeeRate, uint256 feeRate, uint256 previousFeeMin, uint256 feeMin, uint256 previousFeeMax, uint256 feeMax)",
      "event SetFirstOfficer(address indexed previousFirstOfficer, address indexed newFirstOfficer)",
      "event SetMinWaitPeriods(uint256 previousMinWaitAdd, uint256 previousMinWaitExecute, uint256 minWaitAdd, uint256 minWaitExecute)",
      "function FEE_MAX() view returns (uint256)",
      "function FEE_MIN() view returns (uint256)",
      "function FEE_RATE() view returns (uint256)",
      "function MIN_WAIT_PERIOD_ADD() view returns (uint256)",
      "function MIN_WAIT_PERIOD_EXECUTE() view returns (uint256)",
      "function REDUCED_DECIMALS() view returns (uint256)",
      "function acceptOwnership()",
      "function batches(uint256) view returns (uint64 start, uint64 end, uint64 departureTime, uint64 status, bytes32 hash)",
      "function cancelled(uint256) view returns (bool)",
      "function captain() view returns (address)",
      "function chainid() view returns (uint256)",
      "function crewmembers(address) view returns (bool)",
      "function depart(uint256 start, uint256 end, bytes32 hash)",
      "function disembark(tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) batchData)",
      "function disputeBatch(uint256 batchNo, bytes32 hash)",
      "function embark(uint256 amount)",
      "function embarkWithRecipient(uint256 amount, address recipient)",
      "function embarkWithSignature(uint256 _amount, address recipient, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s)",
      "function execute(address _to, uint256 _value, bytes _data) returns (bool, bytes)",
      "function executeIndex() view returns (uint256)",
      "function fee_exempt_addrs(address) view returns (bool)",
      "function firstOfficer() view returns (address)",
      "function getBatchAmount(uint256 start, uint256 end) view returns (uint256 totalAmount)",
      "function getBatchData(uint256 start, uint256 end) view returns (tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) data)",
      "function getNextBatch(uint256 _start, uint256 max) view returns (uint256 start, uint256 end, bytes32 hash)",
      "function getTransactionsHash(uint256 start, uint256 end) view returns (bytes32)",
      "function jettison(uint256 index, bool cancel)",
      "function jettisonGroup(uint256[] indexes, bool cancel)",
      "function noBatches() view returns (uint256)",
      "function noTransactions() view returns (uint256)",
      "function nominateNewOwner(address newOwner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function removeBatches(uint256 batchNo)",
      "function sendTokens(address receiver, uint256 amount)",
      "function setCaptain(address newCaptain)",
      "function setCrewmember(address crewmember, bool set)",
      "function setFee(uint256 _FEE_RATE, uint256 _FEE_MIN, uint256 _FEE_MAX)",
      "function setFirstOfficer(address newFirstOfficer)",
      "function setMinWaitPeriods(uint256 _MIN_WAIT_PERIOD_ADD, uint256 _MIN_WAIT_PERIOD_EXECUTE)",
      "function targetChain() view returns (uint256)",
      "function targetToken() view returns (address)",
      "function toggleFeeExemptAddr(address addr)",
      "function token() view returns (address)",
      "function transactions(uint256) view returns (address user, uint64 amount, uint32 timestamp)",
      "function unPause()"
    ],
    "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0": [
      "constructor(string _name, string _symbol, address _oracle_address, address _owner_address, address _timelock_address)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event FXSBurned(address indexed from, address indexed to, uint256 amount)",
      "event FXSMinted(address indexed from, address indexed to, uint256 amount)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event VoterVotesChanged(address indexed voter, uint256 previousBalance, uint256 newBalance)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function FRAXStablecoinAdd() view returns (address)",
      "function FXS_DAO_min() view returns (uint256)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function checkpoints(address, uint32) view returns (uint32 fromBlock, uint96 votes)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function genesis_supply() view returns (uint256)",
      "function getCurrentVotes(address account) view returns (uint96)",
      "function getPriorVotes(address account, uint256 blockNumber) view returns (uint96)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function numCheckpoints(address) view returns (uint32)",
      "function oracle_address() view returns (address)",
      "function owner_address() view returns (address)",
      "function pool_burn_from(address b_address, uint256 b_amount)",
      "function pool_mint(address m_address, uint256 m_amount)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setFRAXAddress(address frax_contract_address)",
      "function setFXSMinDAO(uint256 min_FXS)",
      "function setOracle(address new_oracle)",
      "function setOwner(address _owner_address)",
      "function setTimelock(address new_timelock)",
      "function symbol() view returns (string)",
      "function timelock_address() view returns (address)",
      "function toggleVotes()",
      "function totalSupply() view returns (uint256)",
      "function trackingVotes() view returns (bool)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)"
    ],
    "0x3B11DA52030420c663d263Ad4415a8A02E5f8cf8": [
      "constructor(address factory, address tokenA, address tokenB, address owner_address, address timelock_address)",
      "function ALLOW_STALE_CONSULTS() view returns (bool)",
      "function CONSULT_LENIENCY() view returns (uint256)",
      "function PERIOD() view returns (uint256)",
      "function blockTimestampLast() view returns (uint32)",
      "function canUpdate() view returns (bool)",
      "function consult(address token, uint256 amountIn) view returns (uint256 amountOut)",
      "function pair() view returns (address)",
      "function price0Average() view returns (uint224 _x)",
      "function price0CumulativeLast() view returns (uint256)",
      "function price1Average() view returns (uint224 _x)",
      "function price1CumulativeLast() view returns (uint256)",
      "function setAllowStaleConsults(bool _allow_stale_consults)",
      "function setConsultLeniency(uint256 _consult_leniency)",
      "function setOwner(address _owner_address)",
      "function setPeriod(uint256 _period)",
      "function setTimelock(address _timelock_address)",
      "function token0() view returns (address)",
      "function token1() view returns (address)",
      "function update()"
    ],
    "0x4A6d155df9Ec9A1BB3639e6B7B99E46Fb68D42f6": [
      "constructor(address _token, uint256 _chainid, address _targetToken, uint256 _targetChain)",
      "event Cancelled(uint256 index, bool cancel)",
      "event Depart(uint256 batchNo, uint256 start, uint256 end, bytes32 hash)",
      "event Disembark(uint256 start, uint256 end, bytes32 hash)",
      "event DisputeBatch(uint256 batchNo, bytes32 hash)",
      "event Embark(address indexed sender, uint256 index, uint256 amount, uint256 amountAfterFee, uint256 timestamp)",
      "event FeeExemptToggled(address addr, bool is_fee_exempt)",
      "event OwnerChanged(address indexed previousOwner, address indexed newOwner)",
      "event OwnerNominated(address indexed newOwner)",
      "event Pause(bool paused)",
      "event RemoveBatch(uint256 batchNo)",
      "event SetCaptain(address indexed previousCaptain, address indexed newCaptain)",
      "event SetCrewmember(address indexed crewmember, bool set)",
      "event SetFee(uint256 previousFeeRate, uint256 feeRate, uint256 previousFeeMin, uint256 feeMin, uint256 previousFeeMax, uint256 feeMax)",
      "event SetFirstOfficer(address indexed previousFirstOfficer, address indexed newFirstOfficer)",
      "event SetMinWaitPeriods(uint256 previousMinWaitAdd, uint256 previousMinWaitExecute, uint256 minWaitAdd, uint256 minWaitExecute)",
      "function FEE_MAX() view returns (uint256)",
      "function FEE_MIN() view returns (uint256)",
      "function FEE_RATE() view returns (uint256)",
      "function MIN_WAIT_PERIOD_ADD() view returns (uint256)",
      "function MIN_WAIT_PERIOD_EXECUTE() view returns (uint256)",
      "function REDUCED_DECIMALS() view returns (uint256)",
      "function acceptOwnership()",
      "function batches(uint256) view returns (uint64 start, uint64 end, uint64 departureTime, uint64 status, bytes32 hash)",
      "function cancelled(uint256) view returns (bool)",
      "function captain() view returns (address)",
      "function chainid() view returns (uint256)",
      "function crewmembers(address) view returns (bool)",
      "function depart(uint256 start, uint256 end, bytes32 hash)",
      "function disembark(tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) batchData)",
      "function disputeBatch(uint256 batchNo, bytes32 hash)",
      "function embark(uint256 amount)",
      "function embarkWithRecipient(uint256 amount, address recipient)",
      "function embarkWithSignature(uint256 _amount, address recipient, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s)",
      "function execute(address _to, uint256 _value, bytes _data) returns (bool, bytes)",
      "function executeIndex() view returns (uint256)",
      "function fee_exempt_addrs(address) view returns (bool)",
      "function firstOfficer() view returns (address)",
      "function getBatchAmount(uint256 start, uint256 end) view returns (uint256 totalAmount)",
      "function getBatchData(uint256 start, uint256 end) view returns (tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) data)",
      "function getNextBatch(uint256 _start, uint256 max) view returns (uint256 start, uint256 end, bytes32 hash)",
      "function getTransactionsHash(uint256 start, uint256 end) view returns (bytes32)",
      "function jettison(uint256 index, bool cancel)",
      "function jettisonGroup(uint256[] indexes, bool cancel)",
      "function noBatches() view returns (uint256)",
      "function noTransactions() view returns (uint256)",
      "function nominateNewOwner(address newOwner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function removeBatches(uint256 batchNo)",
      "function sendTokens(address receiver, uint256 amount)",
      "function setCaptain(address newCaptain)",
      "function setCrewmember(address crewmember, bool set)",
      "function setFee(uint256 _FEE_RATE, uint256 _FEE_MIN, uint256 _FEE_MAX)",
      "function setFirstOfficer(address newFirstOfficer)",
      "function setMinWaitPeriods(uint256 _MIN_WAIT_PERIOD_ADD, uint256 _MIN_WAIT_PERIOD_EXECUTE)",
      "function targetChain() view returns (uint256)",
      "function targetToken() view returns (address)",
      "function toggleFeeExemptAddr(address addr)",
      "function token() view returns (address)",
      "function transactions(uint256) view returns (address user, uint64 amount, uint32 timestamp)",
      "function unPause()"
    ],
    "0x5c5f05cF8528FFe925A2264743bFfEdbAB2b0FE3": [
      "constructor(address _token, uint256 _chainid, address _targetToken, uint256 _targetChain)",
      "event Cancelled(uint256 index, bool cancel)",
      "event Depart(uint256 batchNo, uint256 start, uint256 end, bytes32 hash)",
      "event Disembark(uint256 start, uint256 end, bytes32 hash)",
      "event DisputeBatch(uint256 batchNo, bytes32 hash)",
      "event Embark(address indexed sender, uint256 index, uint256 amount, uint256 amountAfterFee, uint256 timestamp)",
      "event FeeExemptToggled(address addr, bool is_fee_exempt)",
      "event OwnerChanged(address indexed previousOwner, address indexed newOwner)",
      "event OwnerNominated(address indexed newOwner)",
      "event Pause(bool paused)",
      "event RemoveBatch(uint256 batchNo)",
      "event SetCaptain(address indexed previousCaptain, address indexed newCaptain)",
      "event SetCrewmember(address indexed crewmember, bool set)",
      "event SetFee(uint256 previousFeeRate, uint256 feeRate, uint256 previousFeeMin, uint256 feeMin, uint256 previousFeeMax, uint256 feeMax)",
      "event SetFirstOfficer(address indexed previousFirstOfficer, address indexed newFirstOfficer)",
      "event SetMinWaitPeriods(uint256 previousMinWaitAdd, uint256 previousMinWaitExecute, uint256 minWaitAdd, uint256 minWaitExecute)",
      "function FEE_MAX() view returns (uint256)",
      "function FEE_MIN() view returns (uint256)",
      "function FEE_RATE() view returns (uint256)",
      "function MIN_WAIT_PERIOD_ADD() view returns (uint256)",
      "function MIN_WAIT_PERIOD_EXECUTE() view returns (uint256)",
      "function REDUCED_DECIMALS() view returns (uint256)",
      "function acceptOwnership()",
      "function batches(uint256) view returns (uint64 start, uint64 end, uint64 departureTime, uint64 status, bytes32 hash)",
      "function cancelled(uint256) view returns (bool)",
      "function captain() view returns (address)",
      "function chainid() view returns (uint256)",
      "function crewmembers(address) view returns (bool)",
      "function depart(uint256 start, uint256 end, bytes32 hash)",
      "function disembark(tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) batchData)",
      "function disputeBatch(uint256 batchNo, bytes32 hash)",
      "function embark(uint256 amount)",
      "function embarkWithRecipient(uint256 amount, address recipient)",
      "function embarkWithSignature(uint256 _amount, address recipient, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s)",
      "function execute(address _to, uint256 _value, bytes _data) returns (bool, bytes)",
      "function executeIndex() view returns (uint256)",
      "function fee_exempt_addrs(address) view returns (bool)",
      "function firstOfficer() view returns (address)",
      "function getBatchAmount(uint256 start, uint256 end) view returns (uint256 totalAmount)",
      "function getBatchData(uint256 start, uint256 end) view returns (tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) data)",
      "function getNextBatch(uint256 _start, uint256 max) view returns (uint256 start, uint256 end, bytes32 hash)",
      "function getTransactionsHash(uint256 start, uint256 end) view returns (bytes32)",
      "function jettison(uint256 index, bool cancel)",
      "function jettisonGroup(uint256[] indexes, bool cancel)",
      "function noBatches() view returns (uint256)",
      "function noTransactions() view returns (uint256)",
      "function nominateNewOwner(address newOwner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function removeBatches(uint256 batchNo)",
      "function sendTokens(address receiver, uint256 amount)",
      "function setCaptain(address newCaptain)",
      "function setCrewmember(address crewmember, bool set)",
      "function setFee(uint256 _FEE_RATE, uint256 _FEE_MIN, uint256 _FEE_MAX)",
      "function setFirstOfficer(address newFirstOfficer)",
      "function setMinWaitPeriods(uint256 _MIN_WAIT_PERIOD_ADD, uint256 _MIN_WAIT_PERIOD_EXECUTE)",
      "function targetChain() view returns (uint256)",
      "function targetToken() view returns (address)",
      "function toggleFeeExemptAddr(address addr)",
      "function token() view returns (address)",
      "function transactions(uint256) view returns (address user, uint64 amount, uint32 timestamp)",
      "function unPause()"
    ],
    "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f": [
      "constructor(address _feeToSetter)",
      "event PairCreated(address indexed token0, address indexed token1, address pair, uint256)",
      "function allPairs(uint256) view returns (address)",
      "function allPairsLength() view returns (uint256)",
      "function createPair(address tokenA, address tokenB) returns (address pair)",
      "function feeTo() view returns (address)",
      "function feeToSetter() view returns (address)",
      "function getPair(address, address) view returns (address)",
      "function setFeeTo(address _feeTo)",
      "function setFeeToSetter(address _feeToSetter)"
    ],
    "0x5Ca135cB8527d76e932f34B5145575F9d8cbE08E": [
      "constructor(address _creator_address, address _timelock_address)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event MinterAdded(address minter_address)",
      "event MinterRemoved(address minter_address)",
      "event OwnerChanged(address oldOwner, address newOwner)",
      "event OwnerNominated(address newOwner)",
      "event TokenMinterBurned(address indexed from, address indexed to, uint256 amount)",
      "event TokenMinterMinted(address indexed from, address indexed to, uint256 amount)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function acceptOwnership()",
      "function addMinter(address minter_address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function minter_burn_from(address b_address, uint256 b_amount)",
      "function minter_mint(address m_address, uint256 m_amount)",
      "function minters(address) view returns (bool)",
      "function minters_array(uint256) view returns (address)",
      "function name() view returns (string)",
      "function nominateNewOwner(address _owner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function removeMinter(address minter_address)",
      "function symbol() view returns (string)",
      "function timelock_address() view returns (address)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x5e1D94021484642863Ea8E7Cb4F0188e56B18FEE": [
      "constructor(address _token, uint256 _chainid, address _targetToken, uint256 _targetChain)",
      "event Cancelled(uint256 index, bool cancel)",
      "event Depart(uint256 batchNo, uint256 start, uint256 end, bytes32 hash)",
      "event Disembark(uint256 start, uint256 end, bytes32 hash)",
      "event DisputeBatch(uint256 batchNo, bytes32 hash)",
      "event Embark(address indexed sender, uint256 index, uint256 amount, uint256 amountAfterFee, uint256 timestamp)",
      "event FeeExemptToggled(address addr, bool is_fee_exempt)",
      "event OwnerChanged(address indexed previousOwner, address indexed newOwner)",
      "event OwnerNominated(address indexed newOwner)",
      "event Pause(bool paused)",
      "event RemoveBatch(uint256 batchNo)",
      "event SetCaptain(address indexed previousCaptain, address indexed newCaptain)",
      "event SetCrewmember(address indexed crewmember, bool set)",
      "event SetFee(uint256 previousFeeRate, uint256 feeRate, uint256 previousFeeMin, uint256 feeMin, uint256 previousFeeMax, uint256 feeMax)",
      "event SetFirstOfficer(address indexed previousFirstOfficer, address indexed newFirstOfficer)",
      "event SetMinWaitPeriods(uint256 previousMinWaitAdd, uint256 previousMinWaitExecute, uint256 minWaitAdd, uint256 minWaitExecute)",
      "function FEE_MAX() view returns (uint256)",
      "function FEE_MIN() view returns (uint256)",
      "function FEE_RATE() view returns (uint256)",
      "function MIN_WAIT_PERIOD_ADD() view returns (uint256)",
      "function MIN_WAIT_PERIOD_EXECUTE() view returns (uint256)",
      "function REDUCED_DECIMALS() view returns (uint256)",
      "function acceptOwnership()",
      "function batches(uint256) view returns (uint64 start, uint64 end, uint64 departureTime, uint64 status, bytes32 hash)",
      "function cancelled(uint256) view returns (bool)",
      "function captain() view returns (address)",
      "function chainid() view returns (uint256)",
      "function crewmembers(address) view returns (bool)",
      "function depart(uint256 start, uint256 end, bytes32 hash)",
      "function disembark(tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) batchData)",
      "function disputeBatch(uint256 batchNo, bytes32 hash)",
      "function embark(uint256 amount)",
      "function embarkWithRecipient(uint256 amount, address recipient)",
      "function embarkWithSignature(uint256 _amount, address recipient, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s)",
      "function execute(address _to, uint256 _value, bytes _data) returns (bool, bytes)",
      "function executeIndex() view returns (uint256)",
      "function fee_exempt_addrs(address) view returns (bool)",
      "function firstOfficer() view returns (address)",
      "function getBatchAmount(uint256 start, uint256 end) view returns (uint256 totalAmount)",
      "function getBatchData(uint256 start, uint256 end) view returns (tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) data)",
      "function getNextBatch(uint256 _start, uint256 max) view returns (uint256 start, uint256 end, bytes32 hash)",
      "function getTransactionsHash(uint256 start, uint256 end) view returns (bytes32)",
      "function jettison(uint256 index, bool cancel)",
      "function jettisonGroup(uint256[] indexes, bool cancel)",
      "function noBatches() view returns (uint256)",
      "function noTransactions() view returns (uint256)",
      "function nominateNewOwner(address newOwner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function removeBatches(uint256 batchNo)",
      "function sendTokens(address receiver, uint256 amount)",
      "function setCaptain(address newCaptain)",
      "function setCrewmember(address crewmember, bool set)",
      "function setFee(uint256 _FEE_RATE, uint256 _FEE_MIN, uint256 _FEE_MAX)",
      "function setFirstOfficer(address newFirstOfficer)",
      "function setMinWaitPeriods(uint256 _MIN_WAIT_PERIOD_ADD, uint256 _MIN_WAIT_PERIOD_EXECUTE)",
      "function targetChain() view returns (uint256)",
      "function targetToken() view returns (address)",
      "function toggleFeeExemptAddr(address addr)",
      "function token() view returns (address)",
      "function transactions(uint256) view returns (address user, uint64 amount, uint32 timestamp)",
      "function unPause()"
    ],
    "0x5E8422345238F34275888049021821E8E08CAa1f": [
      "constructor(address _creator_address, address _timelock_address)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event MinterAdded(address minter_address)",
      "event MinterRemoved(address minter_address)",
      "event OwnerChanged(address oldOwner, address newOwner)",
      "event OwnerNominated(address newOwner)",
      "event TimelockChanged(address timelock_address)",
      "event TokenMinterBurned(address indexed from, address indexed to, uint256 amount)",
      "event TokenMinterMinted(address indexed from, address indexed to, uint256 amount)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function acceptOwnership()",
      "function addMinter(address minter_address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function minter_burn_from(address b_address, uint256 b_amount)",
      "function minter_mint(address m_address, uint256 m_amount)",
      "function minters(address) view returns (bool)",
      "function minters_array(uint256) view returns (address)",
      "function name() view returns (string)",
      "function nominateNewOwner(address _owner)",
      "function nominatedOwner() view returns (address)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function removeMinter(address minter_address)",
      "function setTimelock(address _timelock_address)",
      "function symbol() view returns (string)",
      "function timelock_address() view returns (address)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x6A7efa964Cf6D9Ab3BC3c47eBdDB853A8853C502": [
      "constructor(address _singleton)"
    ],
    "0x8306300ffd616049FD7e4b0354a64Da835c1A81C": [
      "constructor(address _singleton)"
    ],
    "0x831822660572bd54ebaa065C2acef662a6277D40": [
      "constructor(address _singleton)"
    ],
    "0x8412ebf45bAC1B340BbE8F318b928C466c4E39CA": [
      "constructor(address admin_, uint256 delay_)",
      "event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event NewAdmin(address indexed newAdmin)",
      "event NewDelay(uint256 indexed newDelay)",
      "event NewPendingAdmin(address indexed newPendingAdmin)",
      "event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function acceptAdmin()",
      "function admin() view returns (address)",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta)",
      "function delay() view returns (uint256)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable returns (bytes)",
      "function pendingAdmin() view returns (address)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) returns (bytes32)",
      "function queuedTransactions(bytes32) view returns (bool)",
      "function setDelay(uint256 delay_)",
      "function setPendingAdmin(address pendingAdmin_)"
    ],
    "0x853d955aCEf822Db058eb8505911ED77F175b99e": [
      "constructor(string _name, string _symbol, address _creator_address, address _timelock_address)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event FRAXBurned(address indexed from, address indexed to, uint256 amount)",
      "event FRAXMinted(address indexed from, address indexed to, uint256 amount)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function COLLATERAL_RATIO_PAUSER() view returns (bytes32)",
      "function DEFAULT_ADMIN_ADDRESS() view returns (address)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function addPool(address pool_address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function collateral_ratio_paused() view returns (bool)",
      "function controller_address() view returns (address)",
      "function creator_address() view returns (address)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function eth_usd_consumer_address() view returns (address)",
      "function eth_usd_price() view returns (uint256)",
      "function frax_eth_oracle_address() view returns (address)",
      "function frax_info() view returns (uint256, uint256, uint256, uint256, uint256, uint256, uint256, uint256)",
      "function frax_pools(address) view returns (bool)",
      "function frax_pools_array(uint256) view returns (address)",
      "function frax_price() view returns (uint256)",
      "function frax_step() view returns (uint256)",
      "function fxs_address() view returns (address)",
      "function fxs_eth_oracle_address() view returns (address)",
      "function fxs_price() view returns (uint256)",
      "function genesis_supply() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function globalCollateralValue() view returns (uint256)",
      "function global_collateral_ratio() view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function last_call_time() view returns (uint256)",
      "function minting_fee() view returns (uint256)",
      "function name() view returns (string)",
      "function owner_address() view returns (address)",
      "function pool_burn_from(address b_address, uint256 b_amount)",
      "function pool_mint(address m_address, uint256 m_amount)",
      "function price_band() view returns (uint256)",
      "function price_target() view returns (uint256)",
      "function redemption_fee() view returns (uint256)",
      "function refreshCollateralRatio()",
      "function refresh_cooldown() view returns (uint256)",
      "function removePool(address pool_address)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setController(address _controller_address)",
      "function setETHUSDOracle(address _eth_usd_consumer_address)",
      "function setFRAXEthOracle(address _frax_oracle_addr, address _weth_address)",
      "function setFXSAddress(address _fxs_address)",
      "function setFXSEthOracle(address _fxs_oracle_addr, address _weth_address)",
      "function setFraxStep(uint256 _new_step)",
      "function setMintingFee(uint256 min_fee)",
      "function setOwner(address _owner_address)",
      "function setPriceBand(uint256 _price_band)",
      "function setPriceTarget(uint256 _new_price_target)",
      "function setRedemptionFee(uint256 red_fee)",
      "function setRefreshCooldown(uint256 _new_cooldown)",
      "function setTimelock(address new_timelock)",
      "function symbol() view returns (string)",
      "function timelock_address() view returns (address)",
      "function toggleCollateralRatio()",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function weth_address() view returns (address)"
    ],
    "0x958815f476cD07354c0BC034EE5077B20fD93003": [
      "constructor(address _token, uint256 _chainid, address _targetToken, uint256 _targetChain)",
      "event Cancelled(uint256 index, bool cancel)",
      "event Depart(uint256 batchNo, uint256 start, uint256 end, bytes32 hash)",
      "event Disembark(uint256 start, uint256 end, bytes32 hash)",
      "event DisputeBatch(uint256 batchNo, bytes32 hash)",
      "event Embark(address indexed sender, uint256 index, uint256 amount, uint256 amountAfterFee, uint256 timestamp)",
      "event FeeExemptToggled(address addr, bool is_fee_exempt)",
      "event OwnerChanged(address indexed previousOwner, address indexed newOwner)",
      "event OwnerNominated(address indexed newOwner)",
      "event Pause(bool paused)",
      "event RemoveBatch(uint256 batchNo)",
      "event SetCaptain(address indexed previousCaptain, address indexed newCaptain)",
      "event SetCrewmember(address indexed crewmember, bool set)",
      "event SetFee(uint256 previousFeeRate, uint256 feeRate, uint256 previousFeeMin, uint256 feeMin, uint256 previousFeeMax, uint256 feeMax)",
      "event SetFirstOfficer(address indexed previousFirstOfficer, address indexed newFirstOfficer)",
      "event SetMinWaitPeriods(uint256 previousMinWaitAdd, uint256 previousMinWaitExecute, uint256 minWaitAdd, uint256 minWaitExecute)",
      "function FEE_MAX() view returns (uint256)",
      "function FEE_MIN() view returns (uint256)",
      "function FEE_RATE() view returns (uint256)",
      "function MIN_WAIT_PERIOD_ADD() view returns (uint256)",
      "function MIN_WAIT_PERIOD_EXECUTE() view returns (uint256)",
      "function REDUCED_DECIMALS() view returns (uint256)",
      "function acceptOwnership()",
      "function batches(uint256) view returns (uint64 start, uint64 end, uint64 departureTime, uint64 status, bytes32 hash)",
      "function cancelled(uint256) view returns (bool)",
      "function captain() view returns (address)",
      "function chainid() view returns (uint256)",
      "function crewmembers(address) view returns (bool)",
      "function depart(uint256 start, uint256 end, bytes32 hash)",
      "function disembark(tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) batchData)",
      "function disputeBatch(uint256 batchNo, bytes32 hash)",
      "function embark(uint256 amount)",
      "function embarkWithRecipient(uint256 amount, address recipient)",
      "function embarkWithSignature(uint256 _amount, address recipient, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s)",
      "function execute(address _to, uint256 _value, bytes _data) returns (bool, bytes)",
      "function executeIndex() view returns (uint256)",
      "function fee_exempt_addrs(address) view returns (bool)",
      "function firstOfficer() view returns (address)",
      "function getBatchAmount(uint256 start, uint256 end) view returns (uint256 totalAmount)",
      "function getBatchData(uint256 start, uint256 end) view returns (tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) data)",
      "function getNextBatch(uint256 _start, uint256 max) view returns (uint256 start, uint256 end, bytes32 hash)",
      "function getTransactionsHash(uint256 start, uint256 end) view returns (bytes32)",
      "function jettison(uint256 index, bool cancel)",
      "function jettisonGroup(uint256[] indexes, bool cancel)",
      "function noBatches() view returns (uint256)",
      "function noTransactions() view returns (uint256)",
      "function nominateNewOwner(address newOwner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function removeBatches(uint256 batchNo)",
      "function sendTokens(address receiver, uint256 amount)",
      "function setCaptain(address newCaptain)",
      "function setCrewmember(address crewmember, bool set)",
      "function setFee(uint256 _FEE_RATE, uint256 _FEE_MIN, uint256 _FEE_MAX)",
      "function setFirstOfficer(address newFirstOfficer)",
      "function setMinWaitPeriods(uint256 _MIN_WAIT_PERIOD_ADD, uint256 _MIN_WAIT_PERIOD_EXECUTE)",
      "function targetChain() view returns (uint256)",
      "function targetToken() view returns (address)",
      "function toggleFeeExemptAddr(address addr)",
      "function token() view returns (address)",
      "function transactions(uint256) view returns (address user, uint64 amount, uint32 timestamp)",
      "function unPause()"
    ],
    "0x9A576A3d39c589A861B46864C253288bcA428a6c": [
      "constructor(address _token, uint256 _chainid, address _targetToken, uint256 _targetChain)",
      "event Cancelled(uint256 index, bool cancel)",
      "event Depart(uint256 batchNo, uint256 start, uint256 end, bytes32 hash)",
      "event Disembark(uint256 start, uint256 end, bytes32 hash)",
      "event DisputeBatch(uint256 batchNo, bytes32 hash)",
      "event Embark(address indexed sender, uint256 index, uint256 amount, uint256 amountAfterFee, uint256 timestamp)",
      "event FeeExemptToggled(address addr, bool is_fee_exempt)",
      "event OwnerChanged(address indexed previousOwner, address indexed newOwner)",
      "event OwnerNominated(address indexed newOwner)",
      "event Pause(bool paused)",
      "event RemoveBatch(uint256 batchNo)",
      "event SetCaptain(address indexed previousCaptain, address indexed newCaptain)",
      "event SetCrewmember(address indexed crewmember, bool set)",
      "event SetFee(uint256 previousFeeRate, uint256 feeRate, uint256 previousFeeMin, uint256 feeMin, uint256 previousFeeMax, uint256 feeMax)",
      "event SetFirstOfficer(address indexed previousFirstOfficer, address indexed newFirstOfficer)",
      "event SetMinWaitPeriods(uint256 previousMinWaitAdd, uint256 previousMinWaitExecute, uint256 minWaitAdd, uint256 minWaitExecute)",
      "function FEE_MAX() view returns (uint256)",
      "function FEE_MIN() view returns (uint256)",
      "function FEE_RATE() view returns (uint256)",
      "function MIN_WAIT_PERIOD_ADD() view returns (uint256)",
      "function MIN_WAIT_PERIOD_EXECUTE() view returns (uint256)",
      "function REDUCED_DECIMALS() view returns (uint256)",
      "function acceptOwnership()",
      "function batches(uint256) view returns (uint64 start, uint64 end, uint64 departureTime, uint64 status, bytes32 hash)",
      "function cancelled(uint256) view returns (bool)",
      "function captain() view returns (address)",
      "function chainid() view returns (uint256)",
      "function crewmembers(address) view returns (bool)",
      "function depart(uint256 start, uint256 end, bytes32 hash)",
      "function disembark(tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) batchData)",
      "function disputeBatch(uint256 batchNo, bytes32 hash)",
      "function embark(uint256 amount)",
      "function embarkWithRecipient(uint256 amount, address recipient)",
      "function embarkWithSignature(uint256 _amount, address recipient, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s)",
      "function execute(address _to, uint256 _value, bytes _data) returns (bool, bytes)",
      "function executeIndex() view returns (uint256)",
      "function fee_exempt_addrs(address) view returns (bool)",
      "function firstOfficer() view returns (address)",
      "function getBatchAmount(uint256 start, uint256 end) view returns (uint256 totalAmount)",
      "function getBatchData(uint256 start, uint256 end) view returns (tuple(uint256 startTransactionNo, tuple(address user, uint64 amount, uint32 timestamp)[] transactions) data)",
      "function getNextBatch(uint256 _start, uint256 max) view returns (uint256 start, uint256 end, bytes32 hash)",
      "function getTransactionsHash(uint256 start, uint256 end) view returns (bytes32)",
      "function jettison(uint256 index, bool cancel)",
      "function jettisonGroup(uint256[] indexes, bool cancel)",
      "function noBatches() view returns (uint256)",
      "function noTransactions() view returns (uint256)",
      "function nominateNewOwner(address newOwner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function removeBatches(uint256 batchNo)",
      "function sendTokens(address receiver, uint256 amount)",
      "function setCaptain(address newCaptain)",
      "function setCrewmember(address crewmember, bool set)",
      "function setFee(uint256 _FEE_RATE, uint256 _FEE_MIN, uint256 _FEE_MAX)",
      "function setFirstOfficer(address newFirstOfficer)",
      "function setMinWaitPeriods(uint256 _MIN_WAIT_PERIOD_ADD, uint256 _MIN_WAIT_PERIOD_EXECUTE)",
      "function targetChain() view returns (uint256)",
      "function targetToken() view returns (address)",
      "function toggleFeeExemptAddr(address addr)",
      "function token() view returns (address)",
      "function transactions(uint256) view returns (address user, uint64 amount, uint32 timestamp)",
      "function unPause()"
    ],
    "0xA663B02CF0a4b149d2aD41910CB81e23e1c41c32": [
      "constructor(address _underlying, string _name, string _symbol, uint32 _rewardsCycleLength, uint256 _maxDistributionPerSecondPerAsset, address _timelockAddress)",
      "error AddressIsNotPendingTimelock(address pendingTimelockAddress, address actualAddress)",
      "error AddressIsNotTimelock(address timelockAddress, address actualAddress)",
      "event Approval(address indexed owner, address indexed spender, uint256 amount)",
      "event Deposit(address indexed caller, address indexed owner, uint256 assets, uint256 shares)",
      "event DistributeRewards(uint256 rewardsToDistribute)",
      "event SetMaxDistributionPerSecondPerAsset(uint256 oldMax, uint256 newMax)",
      "event SyncRewards(uint40 cycleEnd, uint40 lastSync, uint216 rewardCycleAmount)",
      "event TimelockTransferStarted(address indexed previousTimelock, address indexed newTimelock)",
      "event TimelockTransferred(address indexed previousTimelock, address indexed newTimelock)",
      "event Transfer(address indexed from, address indexed to, uint256 amount)",
      "event Withdraw(address indexed caller, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PRECISION() view returns (uint256)",
      "function REWARDS_CYCLE_LENGTH() view returns (uint256)",
      "function UNDERLYING_PRECISION() view returns (uint256)",
      "function acceptTransferTimelock()",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function asset() view returns (address)",
      "function balanceOf(address) view returns (uint256)",
      "function calculateRewardsToDistribute(tuple(uint40 cycleEnd, uint40 lastSync, uint216 rewardCycleAmount) _rewardsCycleData, uint256 _deltaTime) view returns (uint256 _rewardToDistribute)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function deposit(uint256 _assets, address _receiver) returns (uint256 _shares)",
      "function depositWithSignature(uint256 _assets, address _receiver, uint256 _deadline, bool _approveMax, uint8 _v, bytes32 _r, bytes32 _s) returns (uint256 _shares)",
      "function lastRewardsDistribution() view returns (uint256)",
      "function maxDeposit(address) view returns (uint256)",
      "function maxDistributionPerSecondPerAsset() view returns (uint256)",
      "function maxMint(address) view returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function mint(uint256 _shares, address _receiver) returns (uint256 _assets)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function pendingTimelockAddress() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewDistributeRewards() view returns (uint256 _rewardToDistribute)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function previewSyncRewards() view returns (tuple(uint40 cycleEnd, uint40 lastSync, uint216 rewardCycleAmount) _newRewardsCycleData)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function pricePerShare() view returns (uint256 _pricePerShare)",
      "function redeem(uint256 _shares, address _receiver, address _owner) returns (uint256 _assets)",
      "function renounceTimelock()",
      "function rewardsCycleData() view returns (uint40 cycleEnd, uint40 lastSync, uint216 rewardCycleAmount)",
      "function setMaxDistributionPerSecondPerAsset(uint256 _maxDistributionPerSecondPerAsset)",
      "function storedTotalAssets() view returns (uint256)",
      "function symbol() view returns (string)",
      "function syncRewardsAndDistribution()",
      "function timelockAddress() view returns (address)",
      "function totalAssets() view returns (uint256 _totalAssets)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferTimelock(address _newTimelock)",
      "function withdraw(uint256 _assets, address _receiver, address _owner) returns (uint256 _shares)"
    ],
    "0xac3E018457B222d93114458476f3E3416Abbe38F": [
      "constructor(address _underlying, uint32 _rewardsCycleLength)",
      "error SyncError()",
      "event Approval(address indexed owner, address indexed spender, uint256 amount)",
      "event Deposit(address indexed caller, address indexed owner, uint256 assets, uint256 shares)",
      "event NewRewardsCycle(uint32 indexed cycleEnd, uint256 rewardAmount)",
      "event Transfer(address indexed from, address indexed to, uint256 amount)",
      "event Withdraw(address indexed caller, address indexed receiver, address indexed owner, uint256 assets, uint256 shares)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function asset() view returns (address)",
      "function balanceOf(address) view returns (uint256)",
      "function convertToAssets(uint256 shares) view returns (uint256)",
      "function convertToShares(uint256 assets) view returns (uint256)",
      "function decimals() view returns (uint8)",
      "function deposit(uint256 assets, address receiver) returns (uint256 shares)",
      "function depositWithSignature(uint256 assets, address receiver, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 shares)",
      "function lastRewardAmount() view returns (uint192)",
      "function lastSync() view returns (uint32)",
      "function maxDeposit(address) view returns (uint256)",
      "function maxMint(address) view returns (uint256)",
      "function maxRedeem(address owner) view returns (uint256)",
      "function maxWithdraw(address owner) view returns (uint256)",
      "function mint(uint256 shares, address receiver) returns (uint256 assets)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function previewDeposit(uint256 assets) view returns (uint256)",
      "function previewMint(uint256 shares) view returns (uint256)",
      "function previewRedeem(uint256 shares) view returns (uint256)",
      "function previewWithdraw(uint256 assets) view returns (uint256)",
      "function pricePerShare() view returns (uint256)",
      "function redeem(uint256 shares, address receiver, address owner) returns (uint256 assets)",
      "function rewardsCycleEnd() view returns (uint32)",
      "function rewardsCycleLength() view returns (uint32)",
      "function symbol() view returns (string)",
      "function syncRewards()",
      "function totalAssets() view returns (uint256)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function withdraw(uint256 assets, address receiver, address owner) returns (uint256 shares)"
    ],
    "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27": [
      "constructor(address _singleton)"
    ],
    "0xbAFA44EFE7901E04E39Dad13167D089C559c1138": [
      "constructor(address depositContractAddress, address frxETHAddress, address sfrxETHAddress, address _owner, address _timelock_address, bytes _withdrawalCredential)",
      "event DepositEtherPaused(bool new_status)",
      "event DepositSent(bytes indexed pubKey, bytes withdrawalCredential)",
      "event ETHSubmitted(address indexed sender, address indexed recipient, uint256 sent_amount, uint256 withheld_amt)",
      "event EmergencyERC20Recovered(address tokenAddress, uint256 tokenAmount)",
      "event EmergencyEtherRecovered(uint256 amount)",
      "event KeysCleared()",
      "event OwnerChanged(address oldOwner, address newOwner)",
      "event OwnerNominated(address newOwner)",
      "event SubmitPaused(bool new_status)",
      "event TimelockChanged(address timelock_address)",
      "event ValidatorAdded(bytes pubKey, bytes withdrawalCredential)",
      "event ValidatorArrayCleared()",
      "event ValidatorRemoved(bytes pubKey, uint256 remove_idx, bool dont_care_about_ordering)",
      "event ValidatorsPopped(uint256 times)",
      "event ValidatorsSwapped(bytes from_pubKey, bytes to_pubKey, uint256 from_idx, uint256 to_idx)",
      "event WithdrawalCredentialSet(bytes _withdrawalCredential)",
      "event WithheldETHMoved(address indexed to, uint256 amount)",
      "event WithholdRatioSet(uint256 newRatio)",
      "function DEPOSIT_SIZE() view returns (uint256)",
      "function RATIO_PRECISION() view returns (uint256)",
      "function acceptOwnership()",
      "function activeValidators(bytes) view returns (bool)",
      "function addValidator(tuple(bytes pubKey, bytes signature, bytes32 depositDataRoot) validator)",
      "function addValidators(tuple(bytes pubKey, bytes signature, bytes32 depositDataRoot)[] validatorArray)",
      "function clearValidatorArray()",
      "function currentWithheldETH() view returns (uint256)",
      "function depositContract() view returns (address)",
      "function depositEther(uint256 max_deposits)",
      "function depositEtherPaused() view returns (bool)",
      "function frxETHToken() view returns (address)",
      "function getValidator(uint256 i) view returns (bytes pubKey, bytes withdrawalCredentials, bytes signature, bytes32 depositDataRoot)",
      "function getValidatorStruct(bytes pubKey, bytes signature, bytes32 depositDataRoot) pure returns (tuple(bytes pubKey, bytes signature, bytes32 depositDataRoot))",
      "function moveWithheldETH(address to, uint256 amount)",
      "function nominateNewOwner(address _owner)",
      "function nominatedOwner() view returns (address)",
      "function numValidators() view returns (uint256)",
      "function owner() view returns (address)",
      "function popValidators(uint256 times)",
      "function recoverERC20(address tokenAddress, uint256 tokenAmount)",
      "function recoverEther(uint256 amount)",
      "function removeValidator(uint256 remove_idx, bool dont_care_about_ordering)",
      "function setTimelock(address _timelock_address)",
      "function setWithdrawalCredential(bytes _new_withdrawal_pubkey)",
      "function setWithholdRatio(uint256 newRatio)",
      "function sfrxETHToken() view returns (address)",
      "function submit() payable",
      "function submitAndDeposit(address recipient) payable returns (uint256 shares)",
      "function submitAndGive(address recipient) payable",
      "function submitPaused() view returns (bool)",
      "function swapValidator(uint256 from_idx, uint256 to_idx)",
      "function timelock_address() view returns (address)",
      "function togglePauseDepositEther()",
      "function togglePauseSubmits()",
      "function withholdRatio() view returns (uint256)"
    ],
    "0xc2544A32872A91F4A553b404C6950e89De901fdb": [
      "constructor(address _creator_address, address _timelock_address, address _fpi_address)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event FPIAddressSet(address addr)",
      "event MinterAdded(address minter_address)",
      "event MinterRemoved(address minter_address)",
      "event OwnerChanged(address oldOwner, address newOwner)",
      "event OwnerNominated(address newOwner)",
      "event TokenMinterBurned(address indexed from, address indexed to, uint256 amount)",
      "event TokenMinterMinted(address indexed from, address indexed to, uint256 amount)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function FPI_TKN() view returns (address)",
      "function acceptOwnership()",
      "function addMinter(address minter_address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function minter_burn_from(address b_address, uint256 b_amount)",
      "function minter_mint(address m_address, uint256 m_amount)",
      "function minters(address) view returns (bool)",
      "function minters_array(uint256) view returns (address)",
      "function name() view returns (string)",
      "function nominateNewOwner(address _owner)",
      "function nominatedOwner() view returns (address)",
      "function owner() view returns (address)",
      "function removeMinter(address minter_address)",
      "function setFPIAddress(address fpi_contract_address)",
      "function symbol() view returns (string)",
      "function timelock_address() view returns (address)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xDAF819c2437a82f9e01f6586207ebF961a7f0970": [
      "constructor(address owner_)",
      "function claim(address pair) returns (uint256 value)",
      "function feeRecipient() view returns (address)",
      "function owner() view returns (address)",
      "function pairAllowStates(address) view returns (uint128 token0DisallowCount, uint128 token1DisallowCount)",
      "function renounce(address pair) returns (uint256 value)",
      "function setFeeRecipient(address feeRecipient_)",
      "function setOwner(address owner_)",
      "function tokenAllowStates(address) view returns (bool allowed, uint128 disallowCount)",
      "function updateTokenAllowState(address token, bool allowed)",
      "function updateTokenAllowStates(address[] tokens, bool allowed)"
    ],
    "0xecBa967D84fCF0405F6b32Bc45F4d36BfDBB2E81": [
      "constructor()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Burn(address indexed sender, uint256 amount0, uint256 amount1, address indexed to)",
      "event Mint(address indexed sender, uint256 amount0, uint256 amount1)",
      "event Swap(address indexed sender, uint256 amount0In, uint256 amount1In, uint256 amount0Out, uint256 amount1Out, address indexed to)",
      "event Sync(uint112 reserve0, uint112 reserve1)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function MINIMUM_LIQUIDITY() view returns (uint256)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function allowance(address, address) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function balanceOf(address) view returns (uint256)",
      "function burn(address to) returns (uint256 amount0, uint256 amount1)",
      "function decimals() view returns (uint8)",
      "function factory() view returns (address)",
      "function getReserves() view returns (uint112 _reserve0, uint112 _reserve1, uint32 _blockTimestampLast)",
      "function initialize(address _token0, address _token1)",
      "function kLast() view returns (uint256)",
      "function mint(address to) returns (uint256 liquidity)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function price0CumulativeLast() view returns (uint256)",
      "function price1CumulativeLast() view returns (uint256)",
      "function skim(address to)",
      "function swap(uint256 amount0Out, uint256 amount1Out, address to, bytes data)",
      "function symbol() view returns (string)",
      "function sync()",
      "function token0() view returns (address)",
      "function token1() view returns (address)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)"
    ]
  }
}
