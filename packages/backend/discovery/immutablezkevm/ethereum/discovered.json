{
  "name": "immutablezkevm",
  "chain": "ethereum",
  "blockNumber": 20491123,
  "configHash": "0x6b6dab3cd65839582c4908c86c7f3aa050e752f18bffbf700efbcfad069ade2e",
  "version": 13,
  "contracts": [
    {
      "name": "AxelarGatewayProxyMultisig",
      "address": "0x4F4495243837681061C4743b74B3eEdf548D56A5",
      "sinceTimestamp": 1640210870,
      "values": { "$immutable": true }
    },
    {
      "name": "RootAxelarBridgeAdaptor",
      "address": "0x4f49B53928A71E553bB1B0F66a5BcB54Fd4E8932",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xdE2BCd3F0297d29c25e83228E5A33C0b43b51Ec8",
          "via": []
        }
      ],
      "sinceTimestamp": 1702962623,
      "values": {
        "$admin": "0xdE2BCd3F0297d29c25e83228E5A33C0b43b51Ec8",
        "$implementation": "0xE2E91C1Ae2873720C3b975a8034e887A35323345",
        "$upgradeCount": 1,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0xD2C37fC6fD89563187f3679304975655e448D192"]
          },
          "0x77eacfcb6207f26b72edc4f15c48e5518843e7e98ccfd7e0d6c16f92ed1fef8d": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0xD2C37fC6fD89563187f3679304975655e448D192"]
          },
          "0x2b5bda39c23731c6890b6a6f985ff1c326c66dc20aa14dc2e50fc5ec656ecc35": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0xD2C37fC6fD89563187f3679304975655e448D192"]
          },
          "0x28a0840e09502c63ed1e83b95421995a3ea654657390bb15ac27b2b85aef53b2": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0xD2C37fC6fD89563187f3679304975655e448D192"]
          }
        },
        "BRIDGE_MANAGER_ROLE": "0x77eacfcb6207f26b72edc4f15c48e5518843e7e98ccfd7e0d6c16f92ed1fef8d",
        "childBridgeAdaptor": "0x4f49B53928A71E553bB1B0F66a5BcB54Fd4E8932",
        "childChainId": "immutable",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "GAS_SERVICE_MANAGER_ROLE": "0x2b5bda39c23731c6890b6a6f985ff1c326c66dc20aa14dc2e50fc5ec656ecc35",
        "gasService": "0x2d5d7d31F671F86C782533cc367F14109a082712",
        "gateway": "0x4F4495243837681061C4743b74B3eEdf548D56A5",
        "initializerAddress": "0xdDA0d9448Ebe3eA43aFecE5Fa6401F5795c19333",
        "rootBridge": "0xBa5E35E26Ae59c7aea6F029B68c6460De2d13eB6",
        "TARGET_MANAGER_ROLE": "0x28a0840e09502c63ed1e83b95421995a3ea654657390bb15ac27b2b85aef53b2"
      },
      "derivedName": "RootAxelarBridgeAdaptor"
    },
    {
      "name": "ChildERC20",
      "address": "0x8804A8aA1F18f23aE8A456dD73806FdA3219FaD1",
      "sinceTimestamp": 1702962467,
      "values": {
        "$immutable": true,
        "bridge": "0x9EA46f553de064ac0A2418ED5f50e85E087D8Fd7",
        "decimals": 18,
        "name": "TEMPLATE",
        "rootToken": "0x000000000000000000000000000000000000007B",
        "symbol": "TPT",
        "totalSupply": 0
      }
    },
    {
      "name": "Bridge",
      "address": "0xBa5E35E26Ae59c7aea6F029B68c6460De2d13eB6",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xdE2BCd3F0297d29c25e83228E5A33C0b43b51Ec8",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["withdrawalQueueActivated"],
      "sinceTimestamp": 1702962563,
      "values": {
        "$admin": "0xdE2BCd3F0297d29c25e83228E5A33C0b43b51Ec8",
        "$implementation": "0x177EaFe0f1F3359375B1728dae0530a75C83E154",
        "$upgradeCount": 1,
        "ADAPTOR_MANAGER_ROLE": "0xa6d0b532cacea090bc411482cd491720e2eac14d48ce5d0402b8851e0bb2aec1",
        "childERC20Bridge": "0xBa5E35E26Ae59c7aea6F029B68c6460De2d13eB6",
        "childETHToken": "0x52A6c53869Ce09a731CD772f245b97A4401d3348",
        "childTokenTemplate": "0x8804A8aA1F18f23aE8A456dD73806FdA3219FaD1",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPOSIT_SIG": "0x87a7811f4bfedea3d341ad165680ae306b01aaeacc205d227629cf157dd9f821",
        "imxCumulativeDepositLimit": "100000000000000000000000000",
        "initializerAddress": "0xdDA0d9448Ebe3eA43aFecE5Fa6401F5795c19333",
        "MAP_TOKEN_SIG": "0x2cef46a936bdc5b7e6e8c71aa04560c41cf7d88bb26901a7e7f4936ff02accad",
        "NATIVE_ETH": "0x0000000000000000000000000000000000000Eee",
        "NATIVE_IMX": "0x0000000000000000000000000000000000000FfF",
        "paused": false,
        "PAUSER_ROLE": "0x539440820030c4994db4e31b6b800deafd503688728f932addfe7a410515c14c",
        "rootBridgeAdaptor": "0x4f49B53928A71E553bB1B0F66a5BcB54Fd4E8932",
        "rootIMXToken": "0xF57e7e7C23978C3cAEC3C3548E3D615c346e79fF",
        "rootWETHToken": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "UNLIMITED_DEPOSIT": 0,
        "UNPAUSER_ROLE": "0x82b32d9ab5100db08aeb9a0e08b422d14851ec118736590462bf9c085a6e9448",
        "VARIABLE_MANAGER_ROLE": "0x5b94a8cd68affa84315f488cc2e6e456f761d334859cae8a073ef8fe13fb0ee6",
        "WITHDRAW_SIG": "0x7a8dc26796a1e50e6e190b70259f58f6a4edd5b22280ceecc82b687b8e982869",
        "withdrawalDelay": 86400,
        "withdrawalQueueActivated": false
      },
      "fieldMeta": {
        "withdrawalDelay": {
          "severity": "MEDIUM",
          "description": "Delay in seconds of any withdrawals submitted after the withdrawal queue is activated."
        },
        "withdrawalQueueActivated": {
          "severity": "LOW",
          "description": "If true, the withdrawal queue is activated and any withdrawals are delayed for a duration defined by withdrawalDelay. It can be manually activated or automatically triggered by the FlowRate mechanism."
        }
      },
      "derivedName": "RootERC20BridgeFlowRate"
    },
    {
      "name": "OwnerMultisig",
      "address": "0xD2C37fC6fD89563187f3679304975655e448D192",
      "template": "GnosisSafe",
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1702945151,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x37AC4a9Bf184aa1130016525631f3Daec11f7b26",
          "0x3d395f623D8954d71132F5caC10778CA275806e0",
          "0x5F1A23A3baB949D7264AfA4E6fbfEB245685E6B5",
          "0xdb6c271060571A96A62E3947E373395C89f765Ba",
          "0xB3669C058ddF26171Fd131D80C801AaEeb1519b8",
          "0x296A19A4e87F5824DBE8DEd53415A4704538bB30",
          "0xbD8Dc294478ec4dAd9f1b4596bf275f4d0309817"
        ],
        "$threshold": 4,
        "domainSeparator": "0x6d4cd80fab6b5f67389fb83fe46f5b27c2fbd48c5c3b58b6979e365d12da62f8",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "4 of 7 (57%)",
        "nonce": 28,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xdE2BCd3F0297d29c25e83228E5A33C0b43b51Ec8",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4f49B53928A71E553bB1B0F66a5BcB54Fd4E8932",
          "via": []
        },
        {
          "permission": "upgrade",
          "target": "0xBa5E35E26Ae59c7aea6F029B68c6460De2d13eB6",
          "via": []
        }
      ],
      "sinceTimestamp": 1702962527,
      "values": {
        "$immutable": true,
        "owner": "0xD2C37fC6fD89563187f3679304975655e448D192"
      }
    }
  ],
  "eoas": [
    { "address": "0x000000000000000000000000000000000000007B" },
    { "address": "0x0000000000000000000000000000000000000Eee" },
    { "address": "0x0000000000000000000000000000000000000FfF" },
    { "address": "0x296A19A4e87F5824DBE8DEd53415A4704538bB30" },
    { "address": "0x37AC4a9Bf184aa1130016525631f3Daec11f7b26" },
    { "address": "0x3d395f623D8954d71132F5caC10778CA275806e0" },
    { "address": "0x52A6c53869Ce09a731CD772f245b97A4401d3348" },
    { "address": "0x5F1A23A3baB949D7264AfA4E6fbfEB245685E6B5" },
    { "address": "0x9EA46f553de064ac0A2418ED5f50e85E087D8Fd7" },
    { "address": "0xB3669C058ddF26171Fd131D80C801AaEeb1519b8" },
    { "address": "0xbD8Dc294478ec4dAd9f1b4596bf275f4d0309817" },
    { "address": "0xdb6c271060571A96A62E3947E373395C89f765Ba" },
    { "address": "0xdDA0d9448Ebe3eA43aFecE5Fa6401F5795c19333" }
  ],
  "abis": {
    "0x177EaFe0f1F3359375B1728dae0530a75C83E154": [
      "constructor(address _initializerAddress)",
      "error AlreadyMapped()",
      "error BalanceInvariantCheckFailed(uint256 actualBalance, uint256 expectedBalance)",
      "error CantMapETH()",
      "error CantMapIMX()",
      "error CantMapWETH()",
      "error ImxDepositLimitExceeded()",
      "error ImxDepositLimitTooLow()",
      "error IndexOutsideWithdrawalQueue(uint256 lengthOfQueue, uint256 requestedIndex)",
      "error InsufficientValue()",
      "error InvalidCapacity()",
      "error InvalidChildChain()",
      "error InvalidData(string reason)",
      "error InvalidRefillRate()",
      "error InvalidToken()",
      "error MixedTokens(address token, address actualToken)",
      "error NoGas()",
      "error NonWrappedNativeTransfer()",
      "error NotBridgeAdaptor()",
      "error NotMapped()",
      "error ProvideAtLeastOneIndex()",
      "error TokenIsZero(address receiver)",
      "error TokenNotSupported()",
      "error UnauthorizedInitializer()",
      "error WithdrawalAlreadyProcessed(address receiver, uint256 index)",
      "error WithdrawalRequestTooEarly(uint256 timeNow, uint256 currentWithdrawalTime)",
      "error WrongInitializer()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event ActivatedWithdrawalQueue(address who)",
      "event AutoActivatedWithdrawalQueue()",
      "event ChildChainERC20Deposit(address indexed rootToken, address indexed childToken, address depositor, address indexed receiver, uint256 amount)",
      "event DeactivatedWithdrawalQueue(address who)",
      "event EnQueuedWithdrawal(address indexed token, address indexed withdrawer, address indexed receiver, uint256 amount, uint256 timestamp, uint256 index)",
      "event IMXDeposit(address indexed rootToken, address depositor, address indexed receiver, uint256 amount)",
      "event Initialized(uint8 version)",
      "event L1TokenMapped(address indexed rootToken, address indexed childToken)",
      "event NativeEthDeposit(address indexed rootToken, address indexed childToken, address depositor, address indexed receiver, uint256 amount)",
      "event NewImxDepositLimit(uint256 oldImxDepositLimit, uint256 newImxDepositLimit)",
      "event Paused(address account)",
      "event ProcessedWithdrawal(address indexed token, address indexed withdrawer, address indexed receiver, uint256 amount, uint256 timestamp, uint256 index)",
      "event QueuedWithdrawal(address indexed token, address indexed withdrawer, address indexed receiver, uint256 amount, bool delayWithdrawalLargeAmount, bool delayWithdrawalUnknownToken, bool withdrawalQueueActivated)",
      "event RateControlThresholdSet(address indexed token, uint256 capacity, uint256 refillRate, uint256 largeTransferThreshold, uint256 previousCapacity, uint256 previousRefillRate, uint256 previousLargeTransferThreshold)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RootBridgeAdaptorUpdated(address oldRootBridgeAdaptor, address newRootBridgeAdaptor)",
      "event RootChainERC20Withdraw(address indexed rootToken, address indexed childToken, address withdrawer, address indexed receiver, uint256 amount)",
      "event RootChainETHWithdraw(address indexed rootToken, address indexed childToken, address withdrawer, address indexed receiver, uint256 amount)",
      "event Unpaused(address account)",
      "event WETHDeposit(address indexed rootToken, address indexed childToken, address depositor, address indexed receiver, uint256 amount)",
      "event WithdrawalDelayUpdated(uint256 delay, uint256 previousDelay)",
      "event WithdrawalForNonFlowRatedToken(address indexed token, uint256 amount)",
      "function ADAPTOR_MANAGER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPOSIT_SIG() view returns (bytes32)",
      "function MAP_TOKEN_SIG() view returns (bytes32)",
      "function NATIVE_ETH() view returns (address)",
      "function NATIVE_IMX() view returns (address)",
      "function PAUSER_ROLE() view returns (bytes32)",
      "function UNLIMITED_DEPOSIT() view returns (uint256)",
      "function UNPAUSER_ROLE() view returns (bytes32)",
      "function VARIABLE_MANAGER_ROLE() view returns (bytes32)",
      "function WITHDRAW_SIG() view returns (bytes32)",
      "function activateWithdrawalQueue()",
      "function childERC20Bridge() view returns (address)",
      "function childETHToken() view returns (address)",
      "function childTokenTemplate() view returns (address)",
      "function deactivateWithdrawalQueue()",
      "function deposit(address rootToken, uint256 amount) payable",
      "function depositETH(uint256 amount) payable",
      "function depositTo(address rootToken, address receiver, uint256 amount) payable",
      "function depositToETH(address receiver, uint256 amount) payable",
      "function finaliseQueuedWithdrawal(address receiver, uint256 index)",
      "function finaliseQueuedWithdrawalsAggregated(address receiver, address token, uint256[] indices)",
      "function findPendingWithdrawals(address receiver, address token, uint256 startIndex, uint256 stopIndex, uint256 maxFind) view returns (tuple(uint256 index, uint256 amount, uint256 timestamp)[] found)",
      "function flowRateBuckets(address) view returns (uint256 capacity, uint256 depth, uint256 refillTime, uint256 refillRate)",
      "function getPendingWithdrawals(address receiver, uint256[] indices) view returns (tuple(address withdrawer, address token, uint256 amount, uint256 timestamp)[] pending)",
      "function getPendingWithdrawalsLength(address receiver) view returns (uint256 length)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantAdaptorManagerRole(address account)",
      "function grantPauserRole(address account)",
      "function grantRole(bytes32 role, address account)",
      "function grantUnpauserRole(address account)",
      "function grantVariableManagerRole(address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function imxCumulativeDepositLimit() view returns (uint256)",
      "function initialize(tuple(address defaultAdmin, address pauser, address unpauser, address variableManager, address adaptorManager) newRoles, address newRootBridgeAdaptor, address newChildERC20Bridge, address newChildTokenTemplate, address newRootIMXToken, address newRootWETHToken, uint256 newImxCumulativeDepositLimit, address rateAdmin)",
      "function initialize(tuple(address defaultAdmin, address pauser, address unpauser, address variableManager, address adaptorManager), address, address, address, address, address, uint256) pure",
      "function initializerAddress() view returns (address)",
      "function largeTransferThresholds(address) view returns (uint256)",
      "function mapToken(address rootToken) payable returns (address)",
      "function onMessageReceive(bytes data)",
      "function pause()",
      "function paused() view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeAdaptorManagerRole(address account)",
      "function revokePauserRole(address account)",
      "function revokeRole(bytes32 role, address account)",
      "function revokeUnpauserRole(address account)",
      "function revokeVariableManagerRole(address account)",
      "function rootBridgeAdaptor() view returns (address)",
      "function rootIMXToken() view returns (address)",
      "function rootTokenToChildToken(address) view returns (address)",
      "function rootWETHToken() view returns (address)",
      "function setRateControlThreshold(address token, uint256 capacity, uint256 refillRate, uint256 largeTransferThreshold)",
      "function setWithdrawalDelay(uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unpause()",
      "function updateImxCumulativeDepositLimit(uint256 newImxCumulativeDepositLimit)",
      "function updateRootBridgeAdaptor(address newRootBridgeAdaptor)",
      "function withdrawalDelay() view returns (uint256)",
      "function withdrawalQueueActivated() view returns (bool)"
    ],
    "0x4F4495243837681061C4743b74B3eEdf548D56A5": [
      "constructor(bytes params)",
      "function getAddress(bytes32 key) view returns (address)",
      "function getBool(bytes32 key) view returns (bool)",
      "function getBytes(bytes32 key) view returns (bytes)",
      "function getInt(bytes32 key) view returns (int256)",
      "function getString(bytes32 key) view returns (string)",
      "function getUint(bytes32 key) view returns (uint256)",
      "function setup(bytes params)"
    ],
    "0x4f49B53928A71E553bB1B0F66a5BcB54Fd4E8932": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x8804A8aA1F18f23aE8A456dD73806FdA3219FaD1": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Initialized(uint8 version)",
      "event MetaTransactionExecuted(address userAddress, address relayerAddress, bytes functionSignature)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function bridge() view returns (address)",
      "function burn(address account, uint256 amount) returns (bool)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function executeMetaTransaction(address userAddress, bytes functionSignature, bytes32 sigR, bytes32 sigS, uint8 sigV) returns (bytes)",
      "function getNonce(address user) view returns (uint256 nonce)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address rootToken_, string name_, string symbol_, uint8 decimals_)",
      "function invalidateNext(uint256 offset)",
      "function mint(address account, uint256 amount) returns (bool)",
      "function name() view returns (string)",
      "function rootToken() view returns (address)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0xBa5E35E26Ae59c7aea6F029B68c6460De2d13eB6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xD2C37fC6fD89563187f3679304975655e448D192": [
      "constructor(address _singleton)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdE2BCd3F0297d29c25e83228E5A33C0b43b51Ec8": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xE2E91C1Ae2873720C3b975a8034e887A35323345": [
      "constructor(address _gateway, address _initializerAddress)",
      "error CallerNotBridge()",
      "error InvalidAddress()",
      "error InvalidChildBridgeAdaptor()",
      "error InvalidChildChain()",
      "error InvalidSourceAddress()",
      "error InvalidSourceChain()",
      "error NoGas()",
      "error NotApprovedByGateway()",
      "error UnauthorizedInitializer()",
      "error UnsupportedOperation()",
      "error ZeroAddresses()",
      "event AdaptorExecute(string sourceChain, string sourceAddress_, bytes payload_)",
      "event AxelarMessageSent(string indexed childChain, string indexed childBridgeAdaptor, bytes indexed payload)",
      "event ChildBridgeAdaptorUpdated(string oldChildBridgeAdaptor, string newChildBridgeAdaptor)",
      "event ChildChainUpdated(string indexed oldChildChain, string indexed newChildChain)",
      "event GasServiceUpdated(address indexed oldGasService, address indexed newGasService)",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RootBridgeUpdated(address indexed oldRootBridge, address indexed newRootBridge)",
      "function BRIDGE_MANAGER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function GAS_SERVICE_MANAGER_ROLE() view returns (bytes32)",
      "function TARGET_MANAGER_ROLE() view returns (bytes32)",
      "function childBridgeAdaptor() view returns (string)",
      "function childChainId() view returns (string)",
      "function execute(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload)",
      "function executeWithToken(bytes32 commandId, string sourceChain, string sourceAddress, bytes payload, string tokenSymbol, uint256 amount)",
      "function gasService() view returns (address)",
      "function gateway() view returns (address)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantBridgeManagerRole(address account)",
      "function grantGasServiceManagerRole(address account)",
      "function grantRole(bytes32 role, address account)",
      "function grantTargetManagerRole(address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(tuple(address defaultAdmin, address bridgeManager, address gasServiceManager, address targetManager) _adaptorRoles, address _rootBridge, string _childChainId, string _childBridgeAdaptor, address _gasService)",
      "function initializerAddress() view returns (address)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeBridgeManagerRole(address account)",
      "function revokeGasServiceManagerRole(address account)",
      "function revokeRole(bytes32 role, address account)",
      "function revokeTargetManagerRole(address account)",
      "function rootBridge() view returns (address)",
      "function sendMessage(bytes payload, address refundRecipient) payable",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateChildBridgeAdaptor(string newChildBridgeAdaptor)",
      "function updateChildChain(string newChildChain)",
      "function updateGasService(address newGasService)",
      "function updateRootBridge(address newRootBridge)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x55dd1039f19d840b39ef504eac8a631b912d707343588aed9ac96bd4e874f837"
  },
  "shapeFilesHash": "0xd03139725da7a90ddc934f324db29bfdcf99b30f55f1e1e28ed09af948c5cf67"
}
