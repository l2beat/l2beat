{
  "name": "shared-zk-stack",
  "chain": "ethereum",
  "blockNumber": 21027403,
  "configHash": "0x1f18f06484ff07fc83113ea85d1c997d67ca5e172ff416a6e13723cb0b7f251d",
  "contracts": [
    {
      "name": "GnosisSafe",
      "address": "0x015318c16AE443a20DE0A776dB06a59F0D279057",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814567,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0xb799FF3DeF706045B5061B22d748E8F52737415d"],
        "$threshold": 1,
        "domainSeparator": "0x33ddaaa186e6ac34fdaaefb13c36d7adab7eb749a53a8416668318a55983e73a",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 1,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x178D8Eb1A1fb81B5102808A83318Bb04C6a9fC6D",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814495,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0xa376AaF645dbd9b4f501B2A8a97bc21DcA15B001"],
        "$threshold": 1,
        "domainSeparator": "0xda5e7f191d2c793c2d812f2ff096bfa495a3af5b448ca04d5cadef2797efe1b9",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 1,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x2A90830083C5Ca1f18d7AA7fCDC2998f93475384",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720813955,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x160669864cDe95c190364ad01eDfbAA32E9DA430"],
        "$threshold": 1,
        "domainSeparator": "0x49133ce38a2610a79aa20b3c525f8411960ecbdf340387df8ad2b3f782551a34",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "EraChainAdminProxy",
      "address": "0x2cf3bD6a9056b39999F3883955E183F655345063",
      "template": "shared-zk-stack/ChainAdmin",
      "sourceHashes": [
        "0x3423f941c413d4f07703ba62723b05600f2a33f8725e8d89a53194efb05f4086"
      ],
      "sinceTimestamp": 1722434735,
      "values": {
        "$immutable": true,
        "owner": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "tokenMultiplierSetter": "0x0000000000000000000000000000000000000000",
        "upgradeTimestamps": [
          { "_protocolVersion": 103079215106, "_upgradeTimestamp": 1722521507 }
        ]
      },
      "fieldMeta": {
        "upgradeTimestamps": {
          "description": "Timestamps for new protocol version upgrades can be registered here (NOT enforced)"
        }
      },
      "derivedName": "ChainAdmin"
    },
    {
      "name": "Safe",
      "address": "0x2e5BE1479cF661eeD9F526b7926eA87F6A5dD6a9",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1728943067,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0xA167ca2984F7e08EFd4DDf9c5a4A21D66c07813E",
          "0xc858a504d6c267fe2d462D240b68A7D939B1fEC9",
          "0xF322467cec88d3CDFa9376B19bD5AD40da665277",
          "0x3Bc72A56F9036B94ad14BF082bF93731e0545255",
          "0x3Ec90fA056A39e7281a5b4c8c044B86667D770e1"
        ],
        "$threshold": 3,
        "domainSeparator": "0x89a4b461d7d0ebc4cbf656eccda8c499236d20a7445adf4d25e2bbc6f9882190",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 1,
        "VERSION": "1.4.1"
      }
    },
    {
      "name": "BridgeHub",
      "address": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x0d42e482e85877d75871eacd767228a9e735bb3e0478cb2b80235d6f428ba055"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
          "via": []
        }
      ],
      "sinceTimestamp": 1717520639,
      "values": {
        "$admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
        "$implementation": "0x509dA1BE24432F8804C4A9FF4a3c3f80284CDd13",
        "$pastUpgrades": [
          [
            "2024-06-04T17:03:59.000Z",
            "0xdbb03a14ea223de3db4ac0916e78123bd0a1dde68e98952326d8382d29ac4d61",
            ["0x12f893689f9603991a8c22C249FFd0509Be95661"]
          ],
          [
            "2024-09-09T13:09:23.000Z",
            "0x21aec24a9df97ce4886d699314be627b0818da4d1987349421fb3df102c43f2b",
            ["0x509dA1BE24432F8804C4A9FF4a3c3f80284CDd13"]
          ]
        ],
        "$upgradeCount": 2,
        "admin": "0x2cf3bD6a9056b39999F3883955E183F655345063",
        "chainsCreated": [
          {
            "chainId": 324,
            "stateTransitionManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x71d84c3404a6ae258E6471d4934B96a2033F9438"
          },
          {
            "chainId": 388,
            "stateTransitionManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0x143524d0ac8D7f35a2133b6B0a7567e0E3393137"
          },
          {
            "chainId": 50104,
            "stateTransitionManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0xE1eeA4D6443b19D373Fe99De838b930Ef0ac2Ad3"
          },
          {
            "chainId": 543210,
            "stateTransitionManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
            "chainGovernance": "0xCA8faaF5BA885fEC8C2c8CD49bADAa7589D173b3"
          }
        ],
        "CronosDiamond": "0x7b2DA4e77BAE0e0d23c53C3BE6650497d0576CFc",
        "CronosSTM": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
        "getHyperchain": [],
        "owner": "0x8f7a9912416e8AdC4D9c21FAe1415D3318A11897",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "sharedBridge": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
        "SophonDiamond": "0x05eDE6aD1f39B7A16C949d5C33a0658c9C7241e3",
        "SophonSTM": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
        "ZeroNetworkDiamond": "0xdbD849acC6bA61F461CB8A41BBaeE2D673CA02d9",
        "ZeroNetworkSTM": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
        "zksyncEraDiamond": "0x32400084C286CF3E17e7B677ea9583e60a000324",
        "zksyncEraSTM": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C"
      },
      "fieldMeta": {
        "chainsCreated": {
          "description": "All new chains created go thorugh the central bridgehub and are thus stored here with their respective STMs."
        }
      },
      "derivedName": "Bridgehub"
    },
    {
      "name": "GenesisUpgrade",
      "address": "0x3dDD7ED2AeC0758310A4C6596522FCAeD108DdA2",
      "sourceHashes": [
        "0xc9967ed702de956442f294c09e62b4c0a2c4c86707e081af1c4ae4b0119ac3fb"
      ],
      "sinceTimestamp": 1717507355,
      "values": { "$immutable": true }
    },
    {
      "name": "Matter Labs Multisig",
      "address": "0x4e4943346848c4867F81dFb37c4cA9C5715A7828",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "description": "Can instantly upgrade all contracts and roles in the zksync Era contracts",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1666872275,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x3F0009D00cc78979d00Eb635490F23E8d6aCc481",
          "0xe79af29d618141Ffef951B240b250d47030D56d7",
          "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc",
          "0x702caCafA54B88e9c54449563Fb2e496e85c78b7",
          "0xFAdb20191Ab38362C50f52909817B74214CA79AE",
          "0xfd03dA3aeb6807a98db96C1704Ea4CFf031BaEd2",
          "0x700DA14328eC2F81053E5B6aAE4803E16BEdF1df"
        ],
        "$threshold": 4,
        "domainSeparator": "0xd3e32b4e9e95656dc35c609ae0fbcc0cea466ebecc8227025a2d3edc728b79fb",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "4 of 7 (57%)",
        "nonce": 158,
        "VERSION": "1.3.0"
      },
      "fieldMeta": {
        "getOwners": {
          "severity": "LOW",
          "description": "Signers of the multisig"
        },
        "getThreshold": {
          "severity": "HIGH",
          "description": "Should be 4/8 per official docs"
        }
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "GnosisSafe",
      "address": "0x538612F6eba6ff80FBD95D60dCDee16b8FfF2c0f",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814339,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x227230CD05e89f41E67df3E5fC61B18411d147A9"],
        "$threshold": 1,
        "domainSeparator": "0x63127490e98ceb540db8dca78eb231476f5b4061dc5139e45031491bae94addf",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x55c671BcE13120387Ded710A1d1b80C0e3d8E857",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814399,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0xD9b0579e2B8387fE153201631EBC4be9dEFA1A6d"],
        "$threshold": 1,
        "domainSeparator": "0x567c3af0158b9327873cbee71998af25aff119723a8693a6fcdba100bf3024e2",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 2,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x590926dBCDfD19627c3BbD2A6Eb96DeC7a3AbF69",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814195,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x0e621b0A275A207211e161Ee997aA80661Bc1bcf"],
        "$threshold": 1,
        "domainSeparator": "0xbb8cfa8774ee78c158a0b696258e52598f6a18e51eeb8e88670c7f80ade08f8c",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "ValidatorTimelock",
      "address": "0x5D8ba173Dc6C3c90C8f7C04C9288BeF5FDbAd06E",
      "sourceHashes": [
        "0x5c435b3eaf489b61e623af2356a751079cfa87c079c12e5d93108d007d3b4c97"
      ],
      "sinceTimestamp": 1717520615,
      "values": {
        "$immutable": true,
        "cronosValidatorsAdded": [
          "0xACBD581D1BedB2F71d2F5F01f881586e0623d591",
          "0xE4F4FdaD61f192EBe9a32b2d2fB47A5802891e14",
          "0xb9d48DaF26F3CBE01A959F09f98E8a2eC8204122",
          "0x7fEA26A181A792B5107ee0a31e434F5dBcbBe0B7"
        ],
        "cronosValidatorsRemoved": [
          "0xE4F4FdaD61f192EBe9a32b2d2fB47A5802891e14",
          "0xACBD581D1BedB2F71d2F5F01f881586e0623d591"
        ],
        "executionDelay": 75600,
        "getName": "ValidatorTimelock",
        "owner": "0x8f7a9912416e8AdC4D9c21FAe1415D3318A11897",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "revertedBlocks": [],
        "sophonTenthBatchTS": 0,
        "sophonValidatorsAdded": [
          "0x4cc87B0A504047967CeD9A955431B3229237e7de",
          "0xf3b07F6744e06cd5074b7D15ed2c33760837CE1f"
        ],
        "sophonValidatorsRemoved": [],
        "stateTransitionManager": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
        "zeronetworkTenthBatchTS": 0,
        "zeronetworkValidatorsAdded": [
          "0x0F9B807d5B0cE12450059B425Dc35C727D65CB2F",
          "0x479B7c95b9509E1A834C994fc94e3581aA8A73B9"
        ],
        "zeronetworkValidatorsRemoved": [],
        "zksyncValidatorsAdded": [
          "0x0D3250c3D5FAcb74Ac15834096397a3Ef790ec99",
          "0x3527439923a63F8C13CF72b8Fe80a77f6e572092"
        ],
        "zksyncValidatorsRemoved": []
      },
      "fieldMeta": {
        "zeronetworkTenthBatchTS": {
          "severity": "MEDIUM",
          "description": "If non-zero, the first batch has been posted."
        },
        "sophonTenthBatchTS": {
          "severity": "MEDIUM",
          "description": "If non-zero, the first batch has been posted."
        }
      },
      "derivedName": "ValidatorTimelock"
    },
    {
      "name": "GnosisSafe",
      "address": "0x6D26874130A174839b9cd8CB87Ed4E09D0c1a5f0",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814051,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x3620B9e7c75E09cCC37458c7B6EE6c23D8Ee4f0f"],
        "$threshold": 1,
        "domainSeparator": "0x34cfad626b7297f5a86f1c6dc31bc8bf00160b739ac22f8c3d3cb092dfb10e8e",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "ProtocolUpgradeHandler",
      "address": "0x8f7a9912416e8AdC4D9c21FAe1415D3318A11897",
      "sourceHashes": [
        "0xe59fe71de493915d874d4d22b4637434d86b42759b4d5fd2dddf4f25cfdd1544"
      ],
      "sinceTimestamp": 1723146059,
      "values": {
        "$immutable": true,
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "emergencyUpgradeBoard": "0xdEFd1eDEE3E8c5965216bd59C866f7f5307C9b29",
        "EXTENDED_LEGAL_VETO_PERIOD": 604800,
        "guardians": "0xD677e09324F8Bb3cC64F009973693f751c33A888",
        "HARD_FREEZE_PERIOD": 604800,
        "L2_PROTOCOL_GOVERNOR": "0x3701fB675bCd4A85eb11A2467628BBe193F6e6A8",
        "lastFreezeStatusInUpgradeCycle": 0,
        "protocolFrozenUntil": 0,
        "securityCouncil": "0xBDFfCC71FE84020238F2990a6D2954e87355De0D",
        "SHARED_BRIDGE": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
        "SOFT_FREEZE_PERIOD": 43200,
        "STANDARD_LEGAL_VETO_PERIOD": 259200,
        "STATE_TRANSITION_MANAGER": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
        "UPGRADE_DELAY_PERIOD": 86400,
        "UPGRADE_WAIT_OR_EXPIRE_PERIOD": 2592000,
        "ZKSYNC_ERA": "0x32400084C286CF3E17e7B677ea9583e60a000324"
      },
      "fieldMeta": {
        "protocolFrozenUntil": {
          "severity": "HIGH",
          "description": "Timestamp until which ALL Hyperchains connected to the main STM are frozen. (Mailbox and Executor facets blocked)"
        }
      },
      "derivedName": "ProtocolUpgradeHandler"
    },
    {
      "name": "ZkFoundationMultisig",
      "address": "0xbC1653bd3829dfEc575AfC3816D4899cd103B51c",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1721665487,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x56B3120c32AE9C3188fafc5Cc542F9c53B0b2222",
          "0x441e5c8910Ef39996B2D01499509861228cbc2d1",
          "0xd5966E3dd25f6086b6aD7D7Fa3292d11b988da95",
          "0x0B2E7ffbcD1E3e6f5034555Fb638889FE7564709",
          "0x610e45F112e0c8a9aA7137677C83E7A198A1b991"
        ],
        "$threshold": 3,
        "domainSeparator": "0xc1ce7878e80d133721dfd6dabac04460cfb8e96b0f8a46b772c445cb13550400",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 5 (60%)",
        "nonce": 3,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "SecurityCouncil",
      "address": "0xBDFfCC71FE84020238F2990a6D2954e87355De0D",
      "sourceHashes": [
        "0x153a01097ad00f13ce2cb9f0178a19858cb44dd75a40132d64d7fb1450cc0bf5"
      ],
      "sinceTimestamp": 1723146191,
      "values": {
        "$immutable": true,
        "APPROVE_UPGRADE_SECURITY_COUNCIL_THRESHOLD": 6,
        "EIP1271_THRESHOLD": 9,
        "eip712Domain": {
          "fields": "0x0f",
          "name": "SecurityCouncil",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0xBDFfCC71FE84020238F2990a6D2954e87355De0D",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "HARD_FREEZE_THRESHOLD": 9,
        "hardFreezeNonce": 0,
        "members": [
          "0x13f07d9BF17615f6a17F272fe1A913168C275A66",
          "0x34Ea62D4b9bBB8AD927eFB6ab31E3Ab3474aC93a",
          "0x35eA56fd9eAd2567F339Eb9564B6940b9DD5653F",
          "0x3888777686F0b0d8c3108fc22ad8DE9E049bE26F",
          "0x69462a81ba94D64c404575f1899a464F123497A2",
          "0x725065b4eB99294BaaE57AdDA9c32e42F453FA8A",
          "0x84BF0Ac41Eeb74373Ddddae8b7055Bf2bD3CE6E0",
          "0x9B39Ea22e838B316Ea7D74e7C4B07d91D51ccA88",
          "0x9B8Be3278B7F0168D82059eb6BAc5991DcdfA803",
          "0xB7aC3A79A23B148c85fba259712c5A1e7ad0ca44",
          "0xc3Abc9f9AA75Be8341E831482cdA0125a7B1A23e",
          "0xFB90Da9DC45378A1B50775Beb03aD10C7E8DC231"
        ],
        "PROTOCOL_UPGRADE_HANDLER": "0x8f7a9912416e8AdC4D9c21FAe1415D3318A11897",
        "RECOMMENDED_SOFT_FREEZE_THRESHOLD": 3,
        "SOFT_FREEZE_CONSERVATIVE_THRESHOLD": 9,
        "softFreezeNonce": 0,
        "softFreezeThreshold": 3,
        "softFreezeThresholdSettingNonce": 0,
        "UNFREEZE_THRESHOLD": 9,
        "unfreezeNonce": 0
      },
      "fieldMeta": {
        "softFreezeNonce": {
          "severity": "HIGH",
          "description": "Increments with each softFreeze (freezes ALL Hyperchains (blocks Mailbox and Executor facets) connected to the main STM for SOFT_FREEZE_PERIOD"
        },
        "hardFreezeNonce": {
          "severity": "HIGH",
          "description": "Increments with each hardFreeze (freezes ALL Hyperchains (blocks Mailbox and Executor facets) connected to the main STM for HARD_FREEZE_PERIOD"
        }
      },
      "derivedName": "SecurityCouncil"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
      "sourceHashes": [
        "0x04a556db1ea1a651e1174247090ad4c7105b455feab1a9672d5c4cd113b9ff0b"
      ],
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x303a465B659cBB0ab36eE643eA362c509EEb5213"
        },
        {
          "permission": "upgrade",
          "target": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C"
        },
        {
          "permission": "upgrade",
          "target": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB"
        }
      ],
      "sinceTimestamp": 1717520627,
      "values": {
        "$immutable": true,
        "owner": "0x8f7a9912416e8AdC4D9c21FAe1415D3318A11897"
      }
    },
    {
      "name": "StateTransitionManager",
      "address": "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x96877e17c5bb84aa94de97c0a9764405e673c26bbf2c649349984d825b326940"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
          "via": []
        }
      ],
      "sinceTimestamp": 1717520663,
      "values": {
        "$admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
        "$implementation": "0xed1Dc7F0Be2B19cb02a2476150C8ea24A37c5274",
        "$pastUpgrades": [
          [
            "2024-06-04T17:04:23.000Z",
            "0x514bbf46d227eee8567825bf5c8ee1855aa8a1916f7fee7b191e2e3d5ecba849",
            ["0x8279B7E48fA074f966385d87AEf29Bd031e54fD5"]
          ],
          [
            "2024-08-06T08:56:59.000Z",
            "0xc1e73b06359759201b76ab7654e0bd49011f33c0230dfc24423985fbf36ea817",
            ["0xed1Dc7F0Be2B19cb02a2476150C8ea24A37c5274"]
          ]
        ],
        "$upgradeCount": 2,
        "admin": "0x2cf3bD6a9056b39999F3883955E183F655345063",
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "genesisUpgrade": "0x3dDD7ED2AeC0758310A4C6596522FCAeD108DdA2",
        "getAllHyperchainChainIDs": [324, 388, 50104, 543210],
        "getAllHyperchains": [
          "0x32400084C286CF3E17e7B677ea9583e60a000324",
          "0x7b2DA4e77BAE0e0d23c53C3BE6650497d0576CFc",
          "0x05eDE6aD1f39B7A16C949d5C33a0658c9C7241e3",
          "0xdbD849acC6bA61F461CB8A41BBaeE2D673CA02d9"
        ],
        "getChainAdmin": [],
        "getSemverProtocolVersion": [0, 24, 2],
        "initialCutHash": "0x88acf7bca5d9b0309546e053ad035bd6d8da5f13f39ca1d8f8ffab1a8d4aa60f",
        "MAX_NUMBER_OF_HYPERCHAINS": 100,
        "owner": "0x8f7a9912416e8AdC4D9c21FAe1415D3318A11897",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "protocolVersion": 103079215106,
        "storedBatchZero": "0x1574fa776dec8da2071e5f20d71840bfcbd82c2bca9ad68680edfedde1710bc4",
        "validatorTimelock": "0x5D8ba173Dc6C3c90C8f7C04C9288BeF5FDbAd06E"
      },
      "derivedName": "StateTransitionManager"
    },
    {
      "name": "ChainAdmin",
      "address": "0xCA8faaF5BA885fEC8C2c8CD49bADAa7589D173b3",
      "template": "shared-zk-stack/ChainAdmin",
      "sourceHashes": [
        "0xefb240f5e06f5ffb38c7e98e9738ecf10381c49716281a3da9d5a1d17438eb4c"
      ],
      "sinceTimestamp": 1729084139,
      "values": {
        "$immutable": true,
        "owner": "0x2e5BE1479cF661eeD9F526b7926eA87F6A5dD6a9",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "tokenMultiplierSetter": "0x0000000000000000000000000000000000000000",
        "upgradeTimestamps": []
      },
      "fieldMeta": {
        "upgradeTimestamps": {
          "description": "Timestamps for new protocol version upgrades can be registered here (NOT enforced)"
        }
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0xCe7a3dFcc35602155809920Ff65e093aa726f6cf",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1720814279,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": ["0x8b0c64CcaB94d4618Ef834F396F622f61F2b013D"],
        "$threshold": 1,
        "domainSeparator": "0x5c8369ad7fcba86448de116769e02200c80a424011c14ba09952def6873dbef7",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 1 (100%)",
        "nonce": 0,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "Guardians",
      "address": "0xD677e09324F8Bb3cC64F009973693f751c33A888",
      "sourceHashes": [
        "0xe702d26fd65786b2e88bd0998f300af1fa11cd1a733a78e5da7ec0699a60e5ce"
      ],
      "sinceTimestamp": 1723146191,
      "values": {
        "$immutable": true,
        "APPROVE_UPGRADE_GUARDIANS_THRESHOLD": 5,
        "CANCEL_L2_GOVERNOR_PROPOSAL_THRESHOLD": 5,
        "EIP1271_THRESHOLD": 5,
        "eip712Domain": {
          "fields": "0x0f",
          "name": "Guardians",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0xD677e09324F8Bb3cC64F009973693f751c33A888",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "EXTEND_LEGAL_VETO_THRESHOLD": 2,
        "members": [
          "0x015318c16AE443a20DE0A776dB06a59F0D279057",
          "0x178D8Eb1A1fb81B5102808A83318Bb04C6a9fC6D",
          "0x2A90830083C5Ca1f18d7AA7fCDC2998f93475384",
          "0x538612F6eba6ff80FBD95D60dCDee16b8FfF2c0f",
          "0x55c671BcE13120387Ded710A1d1b80C0e3d8E857",
          "0x590926dBCDfD19627c3BbD2A6Eb96DeC7a3AbF69",
          "0x6D26874130A174839b9cd8CB87Ed4E09D0c1a5f0",
          "0xCe7a3dFcc35602155809920Ff65e093aa726f6cf"
        ],
        "nonce": 0,
        "PROPOSE_L2_GOVERNOR_PROPOSAL_THRESHOLD": 5,
        "PROTOCOL_UPGRADE_HANDLER": "0x8f7a9912416e8AdC4D9c21FAe1415D3318A11897",
        "ZKSYNC_ERA": "0x32400084C286CF3E17e7B677ea9583e60a000324"
      },
      "derivedName": "Guardians"
    },
    {
      "name": "L1SharedBridge",
      "address": "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0xee3958605e4357a1803d3eb2c6d0d455fdbcc9c550a55b801834030d2a39cef8"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
          "via": []
        }
      ],
      "sinceTimestamp": 1717521479,
      "values": {
        "$admin": "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1",
        "$implementation": "0xb56A8225A745756DD215faf22E4796f373561AcD",
        "$pastUpgrades": [
          [
            "2024-06-04T17:17:59.000Z",
            "0xce3d72f23297a281cb58502dcc6a6c029489316a2faf9c4ef83141b1b254017c",
            ["0xCba1aF8f0bB223b2544F8eB8f69d1c7960f788dB"]
          ],
          [
            "2024-08-26T07:51:11.000Z",
            "0xaec33529b74f8f9d56d7aa568c6358be299228a85e49ea85cb106eca5af7367c",
            ["0xb56A8225A745756DD215faf22E4796f373561AcD"]
          ]
        ],
        "$upgradeCount": 2,
        "admin": "0x2cf3bD6a9056b39999F3883955E183F655345063",
        "BRIDGE_HUB": "0x303a465B659cBB0ab36eE643eA362c509EEb5213",
        "ERA_CHAIN_ID": 324,
        "ERA_DIAMOND_PROXY": "0x32400084C286CF3E17e7B677ea9583e60a000324",
        "legacyBridge": "0x57891966931Eb4Bb6FB81430E6cE0A03AAbDe063",
        "owner": "0x8f7a9912416e8AdC4D9c21FAe1415D3318A11897",
        "paused": false,
        "pendingAdmin": "0x0000000000000000000000000000000000000000",
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "L1SharedBridge"
    },
    {
      "name": "EmergencyUpgradeBoard",
      "address": "0xdEFd1eDEE3E8c5965216bd59C866f7f5307C9b29",
      "sourceHashes": [
        "0x15445918f67256c3edb446079c491b396c922a20fb0dc931fa7aaa6095f19aa6"
      ],
      "sinceTimestamp": 1723146239,
      "values": {
        "$immutable": true,
        "eip712Domain": {
          "fields": "0x0f",
          "name": "EmergencyUpgradeBoard",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0xdEFd1eDEE3E8c5965216bd59C866f7f5307C9b29",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "GUARDIANS": "0xD677e09324F8Bb3cC64F009973693f751c33A888",
        "PROTOCOL_UPGRADE_HANDLER": "0x8f7a9912416e8AdC4D9c21FAe1415D3318A11897",
        "SECURITY_COUNCIL": "0xBDFfCC71FE84020238F2990a6D2954e87355De0D",
        "ZK_FOUNDATION_SAFE": "0xbC1653bd3829dfEc575AfC3816D4899cd103B51c"
      }
    },
    {
      "name": "ChainAdmin",
      "address": "0xE1eeA4D6443b19D373Fe99De838b930Ef0ac2Ad3",
      "template": "shared-zk-stack/ChainAdmin",
      "sourceHashes": [
        "0xefb240f5e06f5ffb38c7e98e9738ecf10381c49716281a3da9d5a1d17438eb4c"
      ],
      "sinceTimestamp": 1729079339,
      "values": {
        "$immutable": true,
        "owner": "0xe4644b6d106A18062344c0A853666bc0B8f052d1",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "tokenMultiplierSetter": "0xe14828E4405239dD331F194F1B7883eeD73bCBF3",
        "upgradeTimestamps": []
      },
      "fieldMeta": {
        "upgradeTimestamps": {
          "description": "Timestamps for new protocol version upgrades can be registered here (NOT enforced)"
        }
      }
    },
    {
      "name": "Safe",
      "address": "0xe4644b6d106A18062344c0A853666bc0B8f052d1",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xfe0725afd3cf2e5fb7627005a6bcf13ef7e35f78034eed2211edbffdb6a9aab5",
        "0x7d388119a66f3eae147d748f86136f073d907d6b36f7e87e9363c4c7a2899a8a"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1729249919,
      "values": {
        "$immutable": false,
        "$implementation": "0x41675C099F32341bf84BFc5382aF534df5C7461a",
        "$members": [
          "0x3b6036d410cA018661324766680674921a8b2d89",
          "0x20719Abd2E63518e68D30a295388cAd6B542dCEf",
          "0x14574dfC6B7aF658c5033BA95673864947956521",
          "0x90E10C37d8d9e854e7775B0069728642A1F88610",
          "0x7f413262Cb811B034d077d9184b5Efda6943f2c3",
          "0xd89b0f620E0C72BD82e0447dE07FB0A0Abe01F69"
        ],
        "$threshold": 3,
        "domainSeparator": "0x4ee440c593310d163ce5ee409e8b60941e58aa6b74d5cf7b249e342d0e5189fd",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 6 (50%)",
        "nonce": 1,
        "VERSION": "1.4.1"
      }
    }
  ],
  "eoas": [
    { "address": "0x0000000000000000000000000000000000000000" },
    { "address": "0x0B2E7ffbcD1E3e6f5034555Fb638889FE7564709" },
    { "address": "0x0D3250c3D5FAcb74Ac15834096397a3Ef790ec99" },
    { "address": "0x0e621b0A275A207211e161Ee997aA80661Bc1bcf" },
    { "address": "0x0F9B807d5B0cE12450059B425Dc35C727D65CB2F" },
    { "address": "0x143524d0ac8D7f35a2133b6B0a7567e0E3393137" },
    { "address": "0x14574dfC6B7aF658c5033BA95673864947956521" },
    { "address": "0x160669864cDe95c190364ad01eDfbAA32E9DA430" },
    { "address": "0x20719Abd2E63518e68D30a295388cAd6B542dCEf" },
    { "address": "0x227230CD05e89f41E67df3E5fC61B18411d147A9" },
    { "address": "0x3068415e0F857A5eEd03302A1F7E44f67468d2Bc" },
    { "address": "0x3527439923a63F8C13CF72b8Fe80a77f6e572092" },
    { "address": "0x3620B9e7c75E09cCC37458c7B6EE6c23D8Ee4f0f" },
    { "address": "0x3701fB675bCd4A85eb11A2467628BBe193F6e6A8" },
    { "address": "0x3b6036d410cA018661324766680674921a8b2d89" },
    { "address": "0x3Bc72A56F9036B94ad14BF082bF93731e0545255" },
    { "address": "0x3Ec90fA056A39e7281a5b4c8c044B86667D770e1" },
    { "address": "0x3F0009D00cc78979d00Eb635490F23E8d6aCc481" },
    { "address": "0x441e5c8910Ef39996B2D01499509861228cbc2d1" },
    { "address": "0x479B7c95b9509E1A834C994fc94e3581aA8A73B9" },
    { "address": "0x4cc87B0A504047967CeD9A955431B3229237e7de" },
    { "address": "0x56B3120c32AE9C3188fafc5Cc542F9c53B0b2222" },
    { "address": "0x610e45F112e0c8a9aA7137677C83E7A198A1b991" },
    { "address": "0x700DA14328eC2F81053E5B6aAE4803E16BEdF1df" },
    { "address": "0x702caCafA54B88e9c54449563Fb2e496e85c78b7" },
    { "address": "0x71d84c3404a6ae258E6471d4934B96a2033F9438" },
    { "address": "0x7f413262Cb811B034d077d9184b5Efda6943f2c3" },
    { "address": "0x7fEA26A181A792B5107ee0a31e434F5dBcbBe0B7" },
    { "address": "0x8b0c64CcaB94d4618Ef834F396F622f61F2b013D" },
    { "address": "0x90E10C37d8d9e854e7775B0069728642A1F88610" },
    { "address": "0xA167ca2984F7e08EFd4DDf9c5a4A21D66c07813E" },
    { "address": "0xa376AaF645dbd9b4f501B2A8a97bc21DcA15B001" },
    { "address": "0xACBD581D1BedB2F71d2F5F01f881586e0623d591" },
    { "address": "0xb799FF3DeF706045B5061B22d748E8F52737415d" },
    { "address": "0xb9d48DaF26F3CBE01A959F09f98E8a2eC8204122" },
    { "address": "0xc858a504d6c267fe2d462D240b68A7D939B1fEC9" },
    { "address": "0xd5966E3dd25f6086b6aD7D7Fa3292d11b988da95" },
    { "address": "0xd89b0f620E0C72BD82e0447dE07FB0A0Abe01F69" },
    { "address": "0xD9b0579e2B8387fE153201631EBC4be9dEFA1A6d" },
    { "address": "0xe14828E4405239dD331F194F1B7883eeD73bCBF3" },
    { "address": "0xE4F4FdaD61f192EBe9a32b2d2fB47A5802891e14" },
    { "address": "0xe79af29d618141Ffef951B240b250d47030D56d7" },
    { "address": "0xF322467cec88d3CDFa9376B19bD5AD40da665277" },
    { "address": "0xf3b07F6744e06cd5074b7D15ed2c33760837CE1f" },
    { "address": "0xFAdb20191Ab38362C50f52909817B74214CA79AE" },
    { "address": "0xfd03dA3aeb6807a98db96C1704Ea4CFf031BaEd2" }
  ],
  "abis": {
    "0x015318c16AE443a20DE0A776dB06a59F0D279057": [
      "constructor(address _singleton)"
    ],
    "0x178D8Eb1A1fb81B5102808A83318Bb04C6a9fC6D": [
      "constructor(address _singleton)"
    ],
    "0x2A90830083C5Ca1f18d7AA7fCDC2998f93475384": [
      "constructor(address _singleton)"
    ],
    "0x2cf3bD6a9056b39999F3883955E183F655345063": [
      "constructor(address _initialOwner, address _initialTokenMultiplierSetter)",
      "event CallExecuted(tuple(address target, uint256 value, bytes data) _call, bool _success, bytes _returnData)",
      "event NewTokenMultiplierSetter(address _oldTokenMultiplierSetter, address _newTokenMultiplierSetter)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event UpdateUpgradeTimestamp(uint256 indexed _protocolVersion, uint256 _upgradeTimestamp)",
      "function acceptOwnership()",
      "function multicall(tuple(address target, uint256 value, bytes data)[] _calls, bool _requireSuccess) payable",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function protocolVersionToUpgradeTimestamp(uint256 protocolVersion) view returns (uint256 upgradeTimestamp)",
      "function renounceOwnership()",
      "function setTokenMultiplier(address _chainContract, uint128 _nominator, uint128 _denominator)",
      "function setTokenMultiplierSetter(address _tokenMultiplierSetter)",
      "function setUpgradeTimestamp(uint256 _protocolVersion, uint256 _upgradeTimestamp)",
      "function tokenMultiplierSetter() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0x2e5BE1479cF661eeD9F526b7926eA87F6A5dD6a9": [
      "constructor(address _singleton)"
    ],
    "0x303a465B659cBB0ab36eE643eA362c509EEb5213": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x3dDD7ED2AeC0758310A4C6596522FCAeD108DdA2": [
      "event NewL2BootloaderBytecodeHash(bytes32 indexed previousBytecodeHash, bytes32 indexed newBytecodeHash)",
      "event NewL2DefaultAccountBytecodeHash(bytes32 indexed previousBytecodeHash, bytes32 indexed newBytecodeHash)",
      "event NewProtocolVersion(uint256 indexed previousProtocolVersion, uint256 indexed newProtocolVersion)",
      "event NewVerifier(address indexed oldVerifier, address indexed newVerifier)",
      "event NewVerifierParams(tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) oldVerifierParams, tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) newVerifierParams)",
      "event UpgradeComplete(uint256 indexed newProtocolVersion, bytes32 indexed l2UpgradeTxHash, tuple(tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) l2ProtocolUpgradeTx, bytes[] factoryDeps, bytes32 bootloaderHash, bytes32 defaultAccountHash, address verifier, tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) verifierParams, bytes l1ContractsUpgradeCalldata, bytes postUpgradeCalldata, uint256 upgradeTimestamp, uint256 newProtocolVersion) upgrade)",
      "function upgrade(tuple(tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) l2ProtocolUpgradeTx, bytes[] factoryDeps, bytes32 bootloaderHash, bytes32 defaultAccountHash, address verifier, tuple(bytes32 recursionNodeLevelVkHash, bytes32 recursionLeafLevelVkHash, bytes32 recursionCircuitsSetVksHash) verifierParams, bytes l1ContractsUpgradeCalldata, bytes postUpgradeCalldata, uint256 upgradeTimestamp, uint256 newProtocolVersion) _proposedUpgrade) returns (bytes32)"
    ],
    "0x41675C099F32341bf84BFc5382aF534df5C7461a": [
      "constructor()",
      "event AddedOwner(address indexed owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address indexed handler)",
      "event ChangedGuard(address indexed guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address indexed module)",
      "event EnabledModule(address indexed module)",
      "event ExecutionFailure(bytes32 indexed txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 indexed txHash, uint256 payment)",
      "event RemovedOwner(address indexed owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x4e4943346848c4867F81dFb37c4cA9C5715A7828": [
      "constructor(address _singleton)"
    ],
    "0x509dA1BE24432F8804C4A9FF4a3c3f80284CDd13": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event NewAdmin(address indexed oldAdmin, address indexed newAdmin)",
      "event NewChain(uint256 indexed chainId, address stateTransitionManager, address indexed chainGovernance)",
      "event NewPendingAdmin(address indexed oldPendingAdmin, address indexed newPendingAdmin)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "function acceptAdmin()",
      "function acceptOwnership()",
      "function addStateTransitionManager(address _stateTransitionManager)",
      "function addToken(address _token)",
      "function admin() view returns (address)",
      "function baseToken(uint256 _chainId) view returns (address)",
      "function createNewChain(uint256 _chainId, address _stateTransitionManager, address _baseToken, uint256 _salt, address _admin, bytes _initData) returns (uint256)",
      "function getHyperchain(uint256 _chainId) view returns (address)",
      "function initialize(address _owner)",
      "function l2TransactionBaseCost(uint256 _chainId, uint256 _gasPrice, uint256 _l2GasLimit, uint256 _l2GasPerPubdataByteLimit) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function proveL1ToL2TransactionStatus(uint256 _chainId, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof, uint8 _status) view returns (bool)",
      "function proveL2LogInclusion(uint256 _chainId, uint256 _batchNumber, uint256 _index, tuple(uint8 l2ShardId, bool isService, uint16 txNumberInBatch, address sender, bytes32 key, bytes32 value) _log, bytes32[] _proof) view returns (bool)",
      "function proveL2MessageInclusion(uint256 _chainId, uint256 _batchNumber, uint256 _index, tuple(uint16 txNumberInBatch, address sender, bytes data) _message, bytes32[] _proof) view returns (bool)",
      "function removeStateTransitionManager(address _stateTransitionManager)",
      "function renounceOwnership()",
      "function requestL2TransactionDirect(tuple(uint256 chainId, uint256 mintValue, address l2Contract, uint256 l2Value, bytes l2Calldata, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, bytes[] factoryDeps, address refundRecipient) _request) payable returns (bytes32 canonicalTxHash)",
      "function requestL2TransactionTwoBridges(tuple(uint256 chainId, uint256 mintValue, uint256 l2Value, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, address refundRecipient, address secondBridgeAddress, uint256 secondBridgeValue, bytes secondBridgeCalldata) _request) payable returns (bytes32 canonicalTxHash)",
      "function setPendingAdmin(address _newPendingAdmin)",
      "function setSharedBridge(address _sharedBridge)",
      "function sharedBridge() view returns (address)",
      "function stateTransitionManager(uint256 _chainId) view returns (address)",
      "function stateTransitionManagerIsRegistered(address _stateTransitionManager) view returns (bool)",
      "function tokenIsRegistered(address _token) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause()"
    ],
    "0x538612F6eba6ff80FBD95D60dCDee16b8FfF2c0f": [
      "constructor(address _singleton)"
    ],
    "0x55c671BcE13120387Ded710A1d1b80C0e3d8E857": [
      "constructor(address _singleton)"
    ],
    "0x590926dBCDfD19627c3BbD2A6Eb96DeC7a3AbF69": [
      "constructor(address _singleton)"
    ],
    "0x5D8ba173Dc6C3c90C8f7C04C9288BeF5FDbAd06E": [
      "constructor(address _initialOwner, uint32 _executionDelay, uint256 _eraChainId)",
      "error AddressAlreadyValidator(uint256 _chainId)",
      "error ValidatorDoesNotExist(uint256 _chainId)",
      "event BlockCommit(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlockExecution(uint256 indexed batchNumber, bytes32 indexed batchHash, bytes32 indexed commitment)",
      "event BlocksRevert(uint256 totalBatchesCommitted, uint256 totalBatchesVerified, uint256 totalBatchesExecuted)",
      "event BlocksVerification(uint256 indexed previousLastVerifiedBatch, uint256 indexed currentLastVerifiedBatch)",
      "event NewExecutionDelay(uint256 _newExecutionDelay)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ValidatorAdded(uint256 indexed _chainId, address _addedValidator)",
      "event ValidatorRemoved(uint256 indexed _chainId, address _removedValidator)",
      "function acceptOwnership()",
      "function addValidator(uint256 _chainId, address _newValidator)",
      "function commitBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 bootloaderHeapInitialContentsHash, bytes32 eventsQueueStateHash, bytes systemLogs, bytes pubdataCommitments)[] _newBatchesData)",
      "function commitBatchesSharedBridge(uint256 _chainId, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, uint64 timestamp, uint64 indexRepeatedStorageChanges, bytes32 newStateRoot, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 bootloaderHeapInitialContentsHash, bytes32 eventsQueueStateHash, bytes systemLogs, bytes pubdataCommitments)[] _newBatchesData)",
      "function executeBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _newBatchesData)",
      "function executeBatchesSharedBridge(uint256 _chainId, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[] _newBatchesData)",
      "function executionDelay() view returns (uint32)",
      "function getCommittedBatchTimestamp(uint256 _chainId, uint256 _l2BatchNumber) view returns (uint256)",
      "function getName() view returns (string)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function proveBatches(tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[], tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof))",
      "function proveBatchesSharedBridge(uint256 _chainId, tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment), tuple(uint64 batchNumber, bytes32 batchHash, uint64 indexRepeatedStorageChanges, uint256 numberOfLayer1Txs, bytes32 priorityOperationsHash, bytes32 l2LogsTreeRoot, uint256 timestamp, bytes32 commitment)[], tuple(uint256[] recursiveAggregationInput, uint256[] serializedProof))",
      "function removeValidator(uint256 _chainId, address _validator)",
      "function renounceOwnership()",
      "function revertBatches(uint256)",
      "function revertBatchesSharedBridge(uint256 _chainId, uint256)",
      "function setExecutionDelay(uint32 _executionDelay)",
      "function setStateTransitionManager(address _stateTransitionManager)",
      "function stateTransitionManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function validators(uint256 _chainId, address _validator) view returns (bool)"
    ],
    "0x6D26874130A174839b9cd8CB87Ed4E09D0c1a5f0": [
      "constructor(address _singleton)"
    ],
    "0x8f7a9912416e8AdC4D9c21FAe1415D3318A11897": [
      "constructor(address _securityCouncil, address _guardians, address _emergencyUpgradeBoard, address _l2ProtocolGovernor, address _ZKsyncEra, address _stateTransitionManager, address _bridgeHub, address _sharedBridge)",
      "event ChangeEmergencyUpgradeBoard(address indexed _emergencyUpgradeBoardBefore, address indexed _emergencyUpgradeBoardAfter)",
      "event ChangeGuardians(address indexed _guardiansBefore, address indexed _guardiansAfter)",
      "event ChangeSecurityCouncil(address indexed _securityCouncilBefore, address indexed _securityCouncilAfter)",
      "event EmergencyUpgradeExecuted(bytes32 indexed _id)",
      "event HardFreeze(uint256 _protocolFrozenUntil)",
      "event ReinforceFreeze()",
      "event ReinforceFreezeOneChain(uint256 _chainId)",
      "event ReinforceUnfreeze()",
      "event ReinforceUnfreezeOneChain(uint256 _chainId)",
      "event SoftFreeze(uint256 _protocolFrozenUntil)",
      "event Unfreeze()",
      "event UpgradeApprovedByGuardians(bytes32 indexed _id)",
      "event UpgradeApprovedBySecurityCouncil(bytes32 indexed _id)",
      "event UpgradeExecuted(bytes32 indexed _id)",
      "event UpgradeLegalVetoExtended(bytes32 indexed _id)",
      "event UpgradeStarted(bytes32 indexed _id, tuple(tuple(address target, uint256 value, bytes data)[] calls, address executor, bytes32 salt) _proposal)",
      "function BRIDGE_HUB() view returns (address)",
      "function L2_PROTOCOL_GOVERNOR() view returns (address)",
      "function SHARED_BRIDGE() view returns (address)",
      "function STATE_TRANSITION_MANAGER() view returns (address)",
      "function ZKSYNC_ERA() view returns (address)",
      "function approveUpgradeGuardians(bytes32 _id)",
      "function approveUpgradeSecurityCouncil(bytes32 _id)",
      "function emergencyUpgradeBoard() view returns (address)",
      "function execute(tuple(tuple(address target, uint256 value, bytes data)[] calls, address executor, bytes32 salt) _proposal) payable",
      "function executeEmergencyUpgrade(tuple(tuple(address target, uint256 value, bytes data)[] calls, address executor, bytes32 salt) _proposal) payable",
      "function extendLegalVeto(bytes32 _id)",
      "function guardians() view returns (address)",
      "function hardFreeze()",
      "function lastFreezeStatusInUpgradeCycle() view returns (uint8)",
      "function protocolFrozenUntil() view returns (uint256)",
      "function reinforceFreeze()",
      "function reinforceFreezeOneChain(uint256 _chainId)",
      "function reinforceUnfreeze()",
      "function reinforceUnfreezeOneChain(uint256 _chainId)",
      "function securityCouncil() view returns (address)",
      "function softFreeze()",
      "function startUpgrade(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _proof, tuple(tuple(address target, uint256 value, bytes data)[] calls, address executor, bytes32 salt) _proposal)",
      "function unfreeze()",
      "function updateEmergencyUpgradeBoard(address _newEmergencyUpgradeBoard)",
      "function updateGuardians(address _newGuardians)",
      "function updateSecurityCouncil(address _newSecurityCouncil)",
      "function upgradeState(bytes32 _id) view returns (uint8)",
      "function upgradeStatus(bytes32 upgradeId) view returns (uint48 creationTimestamp, uint48 securityCouncilApprovalTimestamp, bool guardiansApproval, bool guardiansExtendedLegalVeto, bool executed)"
    ],
    "0xb56A8225A745756DD215faf22E4796f373561AcD": [
      "constructor(address _l1WethAddress, address _bridgehub, uint256 _eraChainId, address _eraDiamondProxy)",
      "event BridgehubDepositBaseTokenInitiated(uint256 indexed chainId, address indexed from, address l1Token, uint256 amount)",
      "event BridgehubDepositFinalized(uint256 indexed chainId, bytes32 indexed txDataHash, bytes32 indexed l2DepositTxHash)",
      "event BridgehubDepositInitiated(uint256 indexed chainId, bytes32 indexed txDataHash, address indexed from, address to, address l1Token, uint256 amount)",
      "event ClaimedFailedDepositSharedBridge(uint256 indexed chainId, address indexed to, address indexed l1Token, uint256 amount)",
      "event Initialized(uint8 version)",
      "event LegacyDepositInitiated(uint256 indexed chainId, bytes32 indexed l2DepositTxHash, address indexed from, address to, address l1Token, uint256 amount)",
      "event NewAdmin(address indexed oldAdmin, address indexed newAdmin)",
      "event NewPendingAdmin(address indexed oldPendingAdmin, address indexed newPendingAdmin)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event WithdrawalFinalizedSharedBridge(uint256 indexed chainId, address indexed to, address indexed l1Token, uint256 amount)",
      "function BRIDGE_HUB() view returns (address)",
      "function ERA_CHAIN_ID() view returns (uint256)",
      "function ERA_DIAMOND_PROXY() view returns (address)",
      "function L1_WETH_TOKEN() view returns (address)",
      "function acceptAdmin()",
      "function acceptOwnership()",
      "function admin() view returns (address)",
      "function bridgehubConfirmL2Transaction(uint256 _chainId, bytes32 _txDataHash, bytes32 _txHash)",
      "function bridgehubDeposit(uint256 _chainId, address _prevMsgSender, uint256 _l2Value, bytes _data) payable returns (tuple(bytes32 magicValue, address l2Contract, bytes l2Calldata, bytes[] factoryDeps, bytes32 txDataHash) request)",
      "function bridgehubDepositBaseToken(uint256 _chainId, address _prevMsgSender, address _l1Token, uint256 _amount) payable",
      "function chainBalance(uint256 chainId, address l1Token) view returns (uint256 balance)",
      "function claimFailedDeposit(uint256 _chainId, address _depositSender, address _l1Token, uint256 _amount, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function claimFailedDepositLegacyErc20Bridge(address _depositSender, address _l1Token, uint256 _amount, bytes32 _l2TxHash, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes32[] _merkleProof)",
      "function depositHappened(uint256 chainId, bytes32 l2DepositTxHash) view returns (bytes32 depositDataHash)",
      "function depositLegacyErc20Bridge(address _prevMsgSender, address _l2Receiver, address _l1Token, uint256 _amount, uint256 _l2TxGasLimit, uint256 _l2TxGasPerPubdataByte, address _refundRecipient) payable returns (bytes32 l2TxHash)",
      "function finalizeWithdrawal(uint256 _chainId, uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof)",
      "function finalizeWithdrawalLegacyErc20Bridge(uint256 _l2BatchNumber, uint256 _l2MessageIndex, uint16 _l2TxNumberInBatch, bytes _message, bytes32[] _merkleProof) returns (address l1Receiver, address l1Token, uint256 amount)",
      "function initialize(address _owner)",
      "function initializeChainGovernance(uint256 _chainId, address _l2BridgeAddress)",
      "function isWithdrawalFinalized(uint256 chainId, uint256 l2BatchNumber, uint256 l2ToL1MessageNumber) view returns (bool isFinalized)",
      "function l2BridgeAddress(uint256 chainId) view returns (address l2Bridge)",
      "function legacyBridge() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingAdmin() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function receiveEth(uint256 _chainId) payable",
      "function reinitializeChainGovernance(uint256 _chainId, address _l2BridgeAddress)",
      "function renounceOwnership()",
      "function safeTransferFundsFromLegacy(address _token, address _target, uint256 _targetChainId, uint256 _gasPerToken)",
      "function setEraLegacyBridgeLastDepositTime(uint256 _eraLegacyBridgeLastDepositBatch, uint256 _eraLegacyBridgeLastDepositTxNumber)",
      "function setEraPostDiamondUpgradeFirstBatch(uint256 _eraPostDiamondUpgradeFirstBatch)",
      "function setEraPostLegacyBridgeUpgradeFirstBatch(uint256 _eraPostLegacyBridgeUpgradeFirstBatch)",
      "function setL1Erc20Bridge(address _legacyBridge)",
      "function setPendingAdmin(address _newPendingAdmin)",
      "function transferFundsFromLegacy(address _token, address _target, uint256 _targetChainId)",
      "function transferOwnership(address newOwner)",
      "function unpause()"
    ],
    "0xbC1653bd3829dfEc575AfC3816D4899cd103B51c": [
      "constructor(address _singleton)"
    ],
    "0xBDFfCC71FE84020238F2990a6D2954e87355De0D": [
      "constructor(address _protocolUpgradeHandler, address[] _members)",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "event EIP712DomainChanged()",
      "function APPROVE_UPGRADE_SECURITY_COUNCIL_THRESHOLD() view returns (uint256)",
      "function EIP1271_THRESHOLD() view returns (uint256)",
      "function HARD_FREEZE_THRESHOLD() view returns (uint256)",
      "function PROTOCOL_UPGRADE_HANDLER() view returns (address)",
      "function RECOMMENDED_SOFT_FREEZE_THRESHOLD() view returns (uint256)",
      "function SOFT_FREEZE_CONSERVATIVE_THRESHOLD() view returns (uint256)",
      "function UNFREEZE_THRESHOLD() view returns (uint256)",
      "function approveUpgradeSecurityCouncil(bytes32 _id, address[] _signers, bytes[] _signatures)",
      "function checkSignatures(bytes32 _digest, address[] _signers, bytes[] _signatures, uint256 _threshold) view",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function hardFreeze(uint256 _validUntil, address[] _signers, bytes[] _signatures)",
      "function hardFreezeNonce() view returns (uint256)",
      "function isValidSignature(bytes32 _digest, bytes _signature) view returns (bytes4)",
      "function members(uint256) view returns (address)",
      "function setSoftFreezeThreshold(uint256 _threshold, uint256 _validUntil, address[] _signers, bytes[] _signatures)",
      "function softFreeze(uint256 _validUntil, address[] _signers, bytes[] _signatures)",
      "function softFreezeNonce() view returns (uint256)",
      "function softFreezeThreshold() view returns (uint256)",
      "function softFreezeThresholdSettingNonce() view returns (uint256)",
      "function unfreeze(uint256 _validUntil, address[] _signers, bytes[] _signatures)",
      "function unfreezeNonce() view returns (uint256)"
    ],
    "0xC2a36181fB524a6bEfE639aFEd37A67e77d62cf1": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xc2eE6b6af7d616f6e27ce7F4A451Aedc2b0F5f5C": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xCA8faaF5BA885fEC8C2c8CD49bADAa7589D173b3": [
      "constructor(address _initialOwner, address _initialTokenMultiplierSetter)",
      "error NoCallsProvided()",
      "error Unauthorized(address caller)",
      "error ZeroAddress()",
      "event CallExecuted(tuple(address target, uint256 value, bytes data) _call, bool _success, bytes _returnData)",
      "event NewTokenMultiplierSetter(address _oldTokenMultiplierSetter, address _newTokenMultiplierSetter)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event UpdateUpgradeTimestamp(uint256 indexed _protocolVersion, uint256 _upgradeTimestamp)",
      "function acceptOwnership()",
      "function multicall(tuple(address target, uint256 value, bytes data)[] _calls, bool _requireSuccess) payable",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function protocolVersionToUpgradeTimestamp(uint256 protocolVersion) view returns (uint256 upgradeTimestamp)",
      "function renounceOwnership()",
      "function setTokenMultiplier(address _chainContract, uint128 _nominator, uint128 _denominator)",
      "function setTokenMultiplierSetter(address _tokenMultiplierSetter)",
      "function setUpgradeTimestamp(uint256 _protocolVersion, uint256 _upgradeTimestamp)",
      "function tokenMultiplierSetter() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xCe7a3dFcc35602155809920Ff65e093aa726f6cf": [
      "constructor(address _singleton)"
    ],
    "0xD677e09324F8Bb3cC64F009973693f751c33A888": [
      "constructor(address _protocolUpgradeHandler, address _ZKsyncEra, address[] _members)",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "event EIP712DomainChanged()",
      "function APPROVE_UPGRADE_GUARDIANS_THRESHOLD() view returns (uint256)",
      "function CANCEL_L2_GOVERNOR_PROPOSAL_THRESHOLD() view returns (uint256)",
      "function EIP1271_THRESHOLD() view returns (uint256)",
      "function EXTEND_LEGAL_VETO_THRESHOLD() view returns (uint256)",
      "function PROPOSE_L2_GOVERNOR_PROPOSAL_THRESHOLD() view returns (uint256)",
      "function PROTOCOL_UPGRADE_HANDLER() view returns (address)",
      "function ZKSYNC_ERA() view returns (address)",
      "function approveUpgradeGuardians(bytes32 _id, address[] _signers, bytes[] _signatures)",
      "function cancelL2GovernorProposal(tuple(address[] targets, uint256[] values, bytes[] calldatas, string description) _l2Proposal, tuple(address to, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, address refundRecipient, uint256 txMintValue) _txRequest, address[] _signers, bytes[] _signatures) payable",
      "function checkSignatures(bytes32 _digest, address[] _signers, bytes[] _signatures, uint256 _threshold) view",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function extendLegalVeto(bytes32 _id, address[] _signers, bytes[] _signatures)",
      "function hashL2Proposal(tuple(address[] targets, uint256[] values, bytes[] calldatas, string description) _l2Proposal) pure returns (uint256 proposalId)",
      "function isValidSignature(bytes32 _digest, bytes _signature) view returns (bytes4)",
      "function members(uint256) view returns (address)",
      "function nonce() view returns (uint256)",
      "function proposeL2GovernorProposal(tuple(address[] targets, uint256[] values, bytes[] calldatas, string description) _l2Proposal, tuple(address to, uint256 l2GasLimit, uint256 l2GasPerPubdataByteLimit, address refundRecipient, uint256 txMintValue) _txRequest, address[] _signers, bytes[] _signatures) payable"
    ],
    "0xD7f9f54194C633F36CCD5F3da84ad4a1c38cB2cB": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdEFd1eDEE3E8c5965216bd59C866f7f5307C9b29": [
      "constructor(address _protocolUpgradeHandler, address _securityCouncil, address _guardians, address _zkFoundation)",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "event EIP712DomainChanged()",
      "function GUARDIANS() view returns (address)",
      "function PROTOCOL_UPGRADE_HANDLER() view returns (address)",
      "function SECURITY_COUNCIL() view returns (address)",
      "function ZK_FOUNDATION_SAFE() view returns (address)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function executeEmergencyUpgrade(tuple(address target, uint256 value, bytes data)[] _calls, bytes32 _salt, bytes _guardiansSignatures, bytes _securityCouncilSignatures, bytes _zkFoundationSignatures)"
    ],
    "0xE1eeA4D6443b19D373Fe99De838b930Ef0ac2Ad3": [
      "constructor(address _initialOwner, address _initialTokenMultiplierSetter)",
      "error NoCallsProvided()",
      "error Unauthorized(address caller)",
      "error ZeroAddress()",
      "event CallExecuted(tuple(address target, uint256 value, bytes data) _call, bool _success, bytes _returnData)",
      "event NewTokenMultiplierSetter(address _oldTokenMultiplierSetter, address _newTokenMultiplierSetter)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event UpdateUpgradeTimestamp(uint256 indexed _protocolVersion, uint256 _upgradeTimestamp)",
      "function acceptOwnership()",
      "function multicall(tuple(address target, uint256 value, bytes data)[] _calls, bool _requireSuccess) payable",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function protocolVersionToUpgradeTimestamp(uint256 protocolVersion) view returns (uint256 upgradeTimestamp)",
      "function renounceOwnership()",
      "function setTokenMultiplier(address _chainContract, uint128 _nominator, uint128 _denominator)",
      "function setTokenMultiplierSetter(address _tokenMultiplierSetter)",
      "function setUpgradeTimestamp(uint256 _protocolVersion, uint256 _upgradeTimestamp)",
      "function tokenMultiplierSetter() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xe4644b6d106A18062344c0A853666bc0B8f052d1": [
      "constructor(address _singleton)"
    ],
    "0xed1Dc7F0Be2B19cb02a2476150C8ea24A37c5274": [
      "constructor(address _bridgehub, uint256 _maxNumberOfHyperchains)",
      "event Initialized(uint8 version)",
      "event NewAdmin(address indexed oldAdmin, address indexed newAdmin)",
      "event NewChainCreationParams(address genesisUpgrade, bytes32 genesisBatchHash, uint64 genesisIndexRepeatedStorageChanges, bytes32 genesisBatchCommitment, bytes32 newInitialCutHash)",
      "event NewHyperchain(uint256 indexed _chainId, address indexed _hyperchainContract)",
      "event NewPendingAdmin(address indexed oldPendingAdmin, address indexed newPendingAdmin)",
      "event NewProtocolVersion(uint256 indexed oldProtocolVersion, uint256 indexed newProtocolVersion)",
      "event NewUpgradeCutData(uint256 indexed protocolVersion, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCutData)",
      "event NewUpgradeCutHash(uint256 indexed protocolVersion, bytes32 indexed upgradeCutHash)",
      "event NewValidatorTimelock(address indexed oldValidatorTimelock, address indexed newValidatorTimelock)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event SetChainIdUpgrade(address indexed _hyperchain, tuple(uint256 txType, uint256 from, uint256 to, uint256 gasLimit, uint256 gasPerPubdataByteLimit, uint256 maxFeePerGas, uint256 maxPriorityFeePerGas, uint256 paymaster, uint256 nonce, uint256 value, uint256[4] reserved, bytes data, bytes signature, uint256[] factoryDeps, bytes paymasterInput, bytes reservedDynamic) _l2Transaction, uint256 indexed _protocolVersion)",
      "function BRIDGE_HUB() view returns (address)",
      "function MAX_NUMBER_OF_HYPERCHAINS() view returns (uint256)",
      "function acceptAdmin()",
      "function acceptOwnership()",
      "function admin() view returns (address)",
      "function changeFeeParams(uint256 _chainId, tuple(uint8 pubdataPricingMode, uint32 batchOverheadL1Gas, uint32 maxPubdataPerBatch, uint32 maxL2GasPerBatch, uint32 priorityTxMaxPubdata, uint64 minimalL2GasPrice) _newFeeParams)",
      "function createNewChain(uint256 _chainId, address _baseToken, address _sharedBridge, address _admin, bytes _diamondCut)",
      "function executeUpgrade(uint256 _chainId, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)",
      "function freezeChain(uint256 _chainId)",
      "function genesisUpgrade() view returns (address)",
      "function getAllHyperchainChainIDs() view returns (uint256[])",
      "function getAllHyperchains() view returns (address[] chainAddresses)",
      "function getChainAdmin(uint256 _chainId) view returns (address)",
      "function getHyperchain(uint256 _chainId) view returns (address chainAddress)",
      "function getSemverProtocolVersion() view returns (uint32, uint32, uint32)",
      "function initialCutHash() view returns (bytes32)",
      "function initialize(tuple(address owner, address validatorTimelock, tuple(address genesisUpgrade, bytes32 genesisBatchHash, uint64 genesisIndexRepeatedStorageChanges, bytes32 genesisBatchCommitment, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCut) chainCreationParams, uint256 protocolVersion) _initializeData)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function protocolVersion() view returns (uint256)",
      "function protocolVersionDeadline(uint256 _protocolVersion) view returns (uint256)",
      "function protocolVersionIsActive(uint256 _protocolVersion) view returns (bool)",
      "function registerAlreadyDeployedHyperchain(uint256 _chainId, address _hyperchain)",
      "function renounceOwnership()",
      "function revertBatches(uint256 _chainId, uint256 _newLastBatch)",
      "function setChainCreationParams(tuple(address genesisUpgrade, bytes32 genesisBatchHash, uint64 genesisIndexRepeatedStorageChanges, bytes32 genesisBatchCommitment, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) diamondCut) _chainCreationParams)",
      "function setNewVersionUpgrade(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _cutData, uint256 _oldProtocolVersion, uint256 _oldProtocolVersionDeadline, uint256 _newProtocolVersion)",
      "function setPendingAdmin(address _newPendingAdmin)",
      "function setPorterAvailability(uint256 _chainId, bool _zkPorterIsAvailable)",
      "function setPriorityTxMaxGasLimit(uint256 _chainId, uint256 _maxGasLimit)",
      "function setProtocolVersionDeadline(uint256 _protocolVersion, uint256 _timestamp)",
      "function setTokenMultiplier(uint256 _chainId, uint128 _nominator, uint128 _denominator)",
      "function setUpgradeDiamondCut(tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _cutData, uint256 _oldProtocolVersion)",
      "function setValidator(uint256 _chainId, address _validator, bool _active)",
      "function setValidatorTimelock(address _validatorTimelock)",
      "function storedBatchZero() view returns (bytes32)",
      "function transferOwnership(address newOwner)",
      "function unfreezeChain(uint256 _chainId)",
      "function upgradeChainFromVersion(uint256 _chainId, uint256 _oldProtocolVersion, tuple(tuple(address facet, uint8 action, bool isFreezable, bytes4[] selectors)[] facetCuts, address initAddress, bytes initCalldata) _diamondCut)",
      "function upgradeCutHash(uint256 protocolVersion) view returns (bytes32 cutHash)",
      "function validatorTimelock() view returns (address)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x18527e82c3800311291da7323caa876f588cde67692c1c84d5ecb5161da61359",
    "shared-zk-stack/ChainAdmin": "0xa36468d83d1747402043ad56e8297c53596d5ea03f59d8d8a73c19d08db830ce"
  }
}
