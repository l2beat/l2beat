{
  "name": "shared-zk-stack",
  "chain": "zksync2",
  "blockNumber": 55181277,
  "configHash": "0xcbdfd7bffd456db4f68afda070e2483816e220205312b7333ac165a3130cd90f",
  "contracts": [
    {
      "name": "ZkTokenGovernor",
      "address": "0x10560f8B7eE37571AD7E3702EEb12Bc422036E89",
      "template": "shared-zk-stack/ZkGovernor",
      "sourceHashes": [
        "0x3d8c2d3bcd396a14d951c81ad0c163139768c7439152292846ce2ef8a34affe8"
      ],
      "description": "Governance contract allowing for token voting (simple majority) with the ZK token through delegates. This contract is used for Token Program Proposals (TPPs) usually targeting the ZK token on ZKsync Era. At least 21M ZK tokens are necessary to start a proposal (for delegates) and a 630M quorum of voted tokens must be met to succeed.",
      "issuedPermissions": [
        {
          "permission": "configure",
          "to": "0xcd2753Bd3829dfeC575AFC3816d4899CD103C62D",
          "description": "make direct proposals without owning ZK tokens. In propose-guarded mode, this address is the ONLY allowed proposer. Propose-guarded mode is currently set to false.",
          "via": []
        },
        {
          "permission": "configure",
          "to": "0xe788e09324F8bb3cc64f009973693f751C33b999",
          "description": "cancel proposals while they are pending (after having been proposed) or active (during the voting period).",
          "via": []
        }
      ],
      "receivedPermissions": [
        {
          "permission": "configure",
          "from": "0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6",
          "description": "cancel queued transactions."
        },
        {
          "permission": "configure",
          "from": "0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6",
          "description": "execute transactions that are ready."
        },
        {
          "permission": "configure",
          "from": "0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6",
          "description": "propose transactions."
        },
        {
          "permission": "configure",
          "from": "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E",
          "description": "grant the MINTER_ROLE to arbitrary addresses, thus controlling the minting of the ZK token.",
          "via": [
            {
              "address": "0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6",
              "delay": 259200
            }
          ]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6",
          "delay": 259200
        }
      ],
      "ignoreInWatchMode": ["clock"],
      "sinceTimestamp": 1723145395,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          }
        },
        "BALLOT_TYPEHASH": "0x150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f",
        "clock": 1738595258,
        "CLOCK_MODE": "mode=timestamp",
        "COUNTING_MODE": "support=bravo&quorum=for&params=fractional",
        "currentQuorum": "630000000000000000000000000",
        "currentQuorum_MTokens": "630",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "ZkTokenGovernor",
          "version": "1",
          "chainId": 324,
          "verifyingContract": "0x10560f8B7eE37571AD7E3702EEb12Bc422036E89",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "EXTENDED_BALLOT_TYPEHASH": "0xb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af88",
        "isProposeGuarded": false,
        "lateQuorumVoteExtension": 604800,
        "name": "ZkTokenGovernor",
        "proposalCreatedCount": 0,
        "proposalQueuedCount": 2,
        "proposalThreshold": "21000000000000000000000000",
        "proposalThreshold_MTokens": "21",
        "PROPOSE_GUARDIAN": "0xcd2753Bd3829dfeC575AFC3816d4899CD103C62D",
        "state": [],
        "timelock": "0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6",
        "token": "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E",
        "version": "1",
        "VETO_GUARDIAN": "0xe788e09324F8bb3cc64f009973693f751C33b999",
        "votingDelay": 604800,
        "votingPeriod": 604800
      },
      "derivedName": "ZkTokenGovernor",
      "usedTypes": [{ "typeCaster": "Undecimal", "arg": { "decimals": 24 } }]
    },
    {
      "name": "ProtocolTimelockController",
      "address": "0x3701fB675bCd4A85eb11A2467628BBe193F6e6A8",
      "template": "shared-zk-stack/TimelockController",
      "sourceHashes": [
        "0x2d84b1bb959469a8ddf00b906d14914c4b3e902442e41cd94f6c6b48f845c77f"
      ],
      "description": "Timelock contract that can send L2->L1 transactions to start a proposal in the ProtocolUpgradeHandler on Ethereum (L2_SENDER_ROLE). This timelock has a minimum delay of 0s.",
      "issuedPermissions": [
        {
          "permission": "configure",
          "to": "0x76705327e682F2d96943280D99464Ab61219e34f",
          "description": "cancel queued transactions.",
          "via": []
        },
        {
          "permission": "configure",
          "to": "0x76705327e682F2d96943280D99464Ab61219e34f",
          "description": "execute transactions that are ready.",
          "via": []
        },
        {
          "permission": "configure",
          "to": "0x76705327e682F2d96943280D99464Ab61219e34f",
          "description": "propose transactions.",
          "via": []
        }
      ],
      "sinceTimestamp": 1723144916,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x3701fB675bCd4A85eb11A2467628BBe193F6e6A8"]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x76705327e682F2d96943280D99464Ab61219e34f"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x76705327e682F2d96943280D99464Ab61219e34f"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x76705327e682F2d96943280D99464Ab61219e34f"]
          }
        },
        "Canceller": ["0x76705327e682F2d96943280D99464Ab61219e34f"],
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "Executor": ["0x76705327e682F2d96943280D99464Ab61219e34f"],
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 0,
        "getMinDelay_formatted": "0s",
        "Proposer": ["0x76705327e682F2d96943280D99464Ab61219e34f"],
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimelockController"
    },
    {
      "name": "TokenTimelockController",
      "address": "0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6",
      "template": "shared-zk-stack/TimelockController",
      "sourceHashes": [
        "0x2d84b1bb959469a8ddf00b906d14914c4b3e902442e41cd94f6c6b48f845c77f"
      ],
      "description": "Timelock contract allowing the queueing of transactions with a minimum delay of 3d.",
      "issuedPermissions": [
        {
          "permission": "configure",
          "to": "0x10560f8B7eE37571AD7E3702EEb12Bc422036E89",
          "description": "cancel queued transactions.",
          "via": []
        },
        {
          "permission": "configure",
          "to": "0x10560f8B7eE37571AD7E3702EEb12Bc422036E89",
          "description": "execute transactions that are ready.",
          "via": []
        },
        {
          "permission": "configure",
          "to": "0x10560f8B7eE37571AD7E3702EEb12Bc422036E89",
          "description": "propose transactions.",
          "via": []
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "configure",
          "from": "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E",
          "description": "grant the MINTER_ROLE to arbitrary addresses, thus controlling the minting of the ZK token."
        }
      ],
      "sinceTimestamp": 1723145391,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6"]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x10560f8B7eE37571AD7E3702EEb12Bc422036E89"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x10560f8B7eE37571AD7E3702EEb12Bc422036E89"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x10560f8B7eE37571AD7E3702EEb12Bc422036E89"]
          }
        },
        "Canceller": ["0x10560f8B7eE37571AD7E3702EEb12Bc422036E89"],
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "Executor": ["0x10560f8B7eE37571AD7E3702EEb12Bc422036E89"],
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 259200,
        "getMinDelay_formatted": "3d",
        "Proposer": ["0x10560f8B7eE37571AD7E3702EEb12Bc422036E89"],
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimelockController"
    },
    {
      "name": "ZkGovOpsGovernor",
      "address": "0x496869a7575A1f907D1C5B1eca28e4e9E382afAb",
      "template": "shared-zk-stack/ZkGovernor",
      "sourceHashes": [
        "0x7132507bdacfea50a991d23f4b78d18a03a78fe5a265fd7a07397c4f6ce93399"
      ],
      "description": "Governance contract allowing for token voting (simple majority) with the ZK token through delegates. This contract is used for Governance Advisory Proposals (GAPs) that are not executable onchain. At least 21M ZK tokens are necessary to start a proposal and a 630M quorum of voted tokens must be met to succeed.",
      "issuedPermissions": [
        {
          "permission": "configure",
          "to": "0xe788e09324F8bb3cc64f009973693f751C33b999",
          "description": "cancel proposals while they are pending (after having been proposed) or active (during the voting period).",
          "via": []
        }
      ],
      "receivedPermissions": [
        {
          "permission": "configure",
          "from": "0xC3e970cB015B5FC36edDf293D2370ef5D00F7a19",
          "description": "cancel queued transactions."
        },
        {
          "permission": "configure",
          "from": "0xC3e970cB015B5FC36edDf293D2370ef5D00F7a19",
          "description": "execute transactions that are ready."
        },
        {
          "permission": "configure",
          "from": "0xC3e970cB015B5FC36edDf293D2370ef5D00F7a19",
          "description": "propose transactions."
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0xC3e970cB015B5FC36edDf293D2370ef5D00F7a19",
          "delay": 259200
        }
      ],
      "ignoreInWatchMode": ["clock"],
      "sinceTimestamp": 1723145514,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          }
        },
        "BALLOT_TYPEHASH": "0x150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f",
        "clock": 1738595258,
        "CLOCK_MODE": "mode=timestamp",
        "COUNTING_MODE": "support=bravo&quorum=for&params=fractional",
        "currentQuorum": "630000000000000000000000000",
        "currentQuorum_MTokens": "630",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "ZkGovOpsGovernor",
          "version": "1",
          "chainId": 324,
          "verifyingContract": "0x496869a7575A1f907D1C5B1eca28e4e9E382afAb",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "EXTENDED_BALLOT_TYPEHASH": "0xb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af88",
        "lateQuorumVoteExtension": 604800,
        "name": "ZkGovOpsGovernor",
        "proposalCreatedCount": 0,
        "proposalQueuedCount": 2,
        "proposalThreshold": "21000000000000000000000000",
        "proposalThreshold_MTokens": "21",
        "state": [],
        "timelock": "0xC3e970cB015B5FC36edDf293D2370ef5D00F7a19",
        "token": "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E",
        "version": "1",
        "VETO_GUARDIAN": "0xe788e09324F8bb3cc64f009973693f751C33b999",
        "votingDelay": 604800,
        "votingPeriod": 604800
      },
      "derivedName": "ZkGovOpsGovernor",
      "usedTypes": [{ "typeCaster": "Undecimal", "arg": { "decimals": 24 } }]
    },
    {
      "name": "ZkToken",
      "address": "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E",
      "template": "shared-zk-stack/ZkToken",
      "sourceHashes": [
        "0x993403059c5620e6c91110514f9f4a2f2331c55dab587699c67c19edddab92ad",
        "0x3a3b3a9708ad3a6179afe0f24a1426254e558d14bbaa4f155ed0db49027b2099"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The ZK token contract on ZKsync Era. Mintable through access control roles. Used for voting in the ZK stack governance system.",
      "issuedPermissions": [
        {
          "permission": "configure",
          "to": "0x10560f8B7eE37571AD7E3702EEb12Bc422036E89",
          "description": "grant the MINTER_ROLE to arbitrary addresses, thus controlling the minting of the ZK token.",
          "via": [
            {
              "address": "0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6",
              "delay": 259200
            }
          ]
        },
        {
          "permission": "configure",
          "to": "0xA08b9912416E8aDc4D9C21Fae1415d3318A129A8",
          "description": "control all roles in the ZkToken access control, including the minter roles.",
          "via": []
        },
        {
          "permission": "upgrade",
          "to": "0xA08b9912416E8aDc4D9C21Fae1415d3318A129A8",
          "via": [{ "address": "0xdB1E46B448e68a5E35CB693a99D59f784aD115CC" }]
        }
      ],
      "ignoreInWatchMode": ["clock", "totalSupply"],
      "sinceTimestamp": 1716317326,
      "values": {
        "$admin": "0xdB1E46B448e68a5E35CB693a99D59f784aD115CC",
        "$implementation": "0x01a6715d3560241E09E865a46122bf347A576c09",
        "$pastUpgrades": [
          [
            "2024-05-21T18:48:46.000Z",
            "0x5bfce59c2ad18019ef20d58a3f1ec496cdc85537fc9564c932f7dcbbb2a15b56",
            ["0x3931e73ebA79a7C898D3b0e02c7C62bA4F11cB14"]
          ],
          [
            "2024-06-10T09:25:38.000Z",
            "0xa6bc022ba0f60ac6f10a6efb84b261e9ca1b327a611bdd7a1f4d37cc9b027a3c",
            ["0x01a6715d3560241E09E865a46122bf347A576c09"]
          ]
        ],
        "$upgradeCount": 2,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0xA08b9912416E8aDc4D9C21Fae1415d3318A129A8"]
          },
          "MINTER_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6"]
          },
          "BURNER_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "MINTER_ROLE": {
            "adminRole": "MINTER_ADMIN_ROLE",
            "members": [
              "0xa97fBc75CcbC7d4353C4D2676ed18Cd0C5AaF7e6",
              "0xD78dc27D4dB8f428C67f542216a2b23663838405",
              "0x21b27952f8621f54f3CB652630E122Ec81dd2dc1",
              "0x0Ad50686C159040E57ddcE137Db0b63c67473450",
              "0x0681E3808a0aA12004fb815ebB4515DC823cfbb4",
              "0x66Fd4FC8FA52c9bec2AbA368047A0b27e24ecfe4",
              "0xb294F411cB52c7C6B6c0B0b61DBDf398a8b0725d",
              "0xf29D698E74EF1904BCFDb20Ed38f9F3EF0A89E5b",
              "0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6",
              "0xe546AEaaC57584da7554e7F88154DeDAD30A82b0",
              "0x11791c6249631555cEb75CB39128789E3954c2EC",
              "0x3BC3f64d084bE6d3336f10340DC8424290FFc4ab",
              "0xDa2fBE31Fd47Af741bdB3dBC4eb662dA0107D33a",
              "0x6b689B93B368c7C25E6e5ecaeAb23C11F8C2c392",
              "0x2CC6c7b1a59A23fB3faCAFe4A3791C5c8A58Cbcc",
              "0xD375A20d93C2F7C6a83B19C5ae153cF2C6e09ba9",
              "0x2ADa5C15BC4FEE97EC2463ce4F8E4557174B8Dcf",
              "0x4E86e74237Eb1f9432810eB5ab5861368d2f5964",
              "0x178bFf5A197FB4499526D04Db602C45cEDCA40a9"
            ]
          },
          "BURNER_ROLE": { "adminRole": "BURNER_ADMIN_ROLE", "members": [] }
        },
        "BURNER_ADMIN_ROLE": "0xc8d1ad9d415224b751d781cc8214ccfe7c47716e13229475443f04f1ebddadc6",
        "BURNER_ROLE": "0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
        "clock": 1738595258,
        "CLOCK_MODE": "mode=timestamp",
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DefaultAdmin": ["0xA08b9912416E8aDc4D9C21Fae1415d3318A129A8"],
        "DELEGATION_TYPEHASH": "0x1c1f5657b6ac36a65c3e5b65a5634cd09b7ef90b4242a880c395b82e476db0ac",
        "DOMAIN_SEPARATOR": "0x6e2ba8dffae8c5e86024561f23979a6140fe63a80e3c29168c0c570e59bdf622",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "ZKsync",
          "version": "1",
          "chainId": 324,
          "verifyingContract": "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "MINTER_ADMIN_ROLE": "0x70480ee89cb38eff00b7d23da25713d52ce19c6ed428691d22c58b2f615e3d67",
        "MINTER_ROLE": "0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
        "MinterAdmin": ["0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6"],
        "name": "ZKsync",
        "symbol": "ZK",
        "totalSupply": "12468942832985200000000000000"
      },
      "derivedName": "ZkTokenV2"
    },
    {
      "name": "ZkProtocolGovernor",
      "address": "0x76705327e682F2d96943280D99464Ab61219e34f",
      "template": "shared-zk-stack/ZkGovernor",
      "sourceHashes": [
        "0x82c5a05996248ee29f451f121ff0f973a3b17f7c7a8ed31878d30c5eaa51b245"
      ],
      "description": "Main Governance contract allowing for token voting (simple majority) with the ZK token through delegates. This contract is used for protocol upgrade proposals (ZIPs) that start on ZKsync Era, go through Ethereum Layer 1 and can - from there - target all L1 and L2 contracts. At least 21M ZK tokens are necessary to start a proposal and a 630M quorum of voted tokens must be met to succeed.",
      "receivedPermissions": [
        {
          "permission": "configure",
          "from": "0x3701fB675bCd4A85eb11A2467628BBe193F6e6A8",
          "description": "cancel queued transactions."
        },
        {
          "permission": "configure",
          "from": "0x3701fB675bCd4A85eb11A2467628BBe193F6e6A8",
          "description": "execute transactions that are ready."
        },
        {
          "permission": "configure",
          "from": "0x3701fB675bCd4A85eb11A2467628BBe193F6e6A8",
          "description": "propose transactions."
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0x3701fB675bCd4A85eb11A2467628BBe193F6e6A8"
        }
      ],
      "ignoreInWatchMode": ["clock"],
      "sinceTimestamp": 1723144920,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          }
        },
        "BALLOT_TYPEHASH": "0x150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f",
        "clock": 1738595258,
        "CLOCK_MODE": "mode=timestamp",
        "COUNTING_MODE": "support=bravo&quorum=for&params=fractional",
        "currentQuorum": "630000000000000000000000000",
        "currentQuorum_MTokens": "630",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "ZkProtocolGovernor",
          "version": "1",
          "chainId": 324,
          "verifyingContract": "0x76705327e682F2d96943280D99464Ab61219e34f",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "EXTENDED_BALLOT_TYPEHASH": "0xb3b3f3b703cd84ce352197dcff232b1b5d3cfb2025ce47cf04742d0651f1af88",
        "lateQuorumVoteExtension": 604800,
        "name": "ZkProtocolGovernor",
        "proposalCreatedCount": 0,
        "proposalQueuedCount": 4,
        "proposalThreshold": "21000000000000000000000000",
        "proposalThreshold_MTokens": "21",
        "state": [],
        "timelock": "0x3701fB675bCd4A85eb11A2467628BBe193F6e6A8",
        "token": "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E",
        "version": "1",
        "votingDelay": 604800,
        "votingPeriod": 604800
      },
      "derivedName": "ZkProtocolGovernor",
      "usedTypes": [{ "typeCaster": "Undecimal", "arg": { "decimals": 24 } }]
    },
    {
      "name": "GovOpsTimelockController",
      "address": "0xC3e970cB015B5FC36edDf293D2370ef5D00F7a19",
      "template": "shared-zk-stack/TimelockController",
      "sourceHashes": [
        "0x2d84b1bb959469a8ddf00b906d14914c4b3e902442e41cd94f6c6b48f845c77f"
      ],
      "description": "Timelock contract allowing the queueing of transactions with a minimum delay of 3d.",
      "issuedPermissions": [
        {
          "permission": "configure",
          "to": "0x496869a7575A1f907D1C5B1eca28e4e9E382afAb",
          "description": "cancel queued transactions.",
          "via": []
        },
        {
          "permission": "configure",
          "to": "0x496869a7575A1f907D1C5B1eca28e4e9E382afAb",
          "description": "execute transactions that are ready.",
          "via": []
        },
        {
          "permission": "configure",
          "to": "0x496869a7575A1f907D1C5B1eca28e4e9E382afAb",
          "description": "propose transactions.",
          "via": []
        }
      ],
      "sinceTimestamp": 1723145510,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xC3e970cB015B5FC36edDf293D2370ef5D00F7a19"]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x496869a7575A1f907D1C5B1eca28e4e9E382afAb"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x496869a7575A1f907D1C5B1eca28e4e9E382afAb"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x496869a7575A1f907D1C5B1eca28e4e9E382afAb"]
          }
        },
        "Canceller": ["0x496869a7575A1f907D1C5B1eca28e4e9E382afAb"],
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "Executor": ["0x496869a7575A1f907D1C5B1eca28e4e9E382afAb"],
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 259200,
        "getMinDelay_formatted": "3d",
        "Proposer": ["0x496869a7575A1f907D1C5B1eca28e4e9E382afAb"],
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimelockController"
    },
    {
      "name": "ZkTokenProxyAdmin",
      "address": "0xdB1E46B448e68a5E35CB693a99D59f784aD115CC",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0xf944f88083f41ff959fefbdcd6fc3ae633692b072b8497fb14cbdd843eded490"
      ],
      "displayName": "ProxyAdmin",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "from": "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E"
        }
      ],
      "sinceTimestamp": 1716317321,
      "values": {
        "$immutable": true,
        "owner": "0xA08b9912416E8aDc4D9C21Fae1415d3318A129A8"
      },
      "derivedName": "ProxyAdmin"
    }
  ],
  "eoas": [
    {
      "name": "ProtocolUpgradeHandler_l2Alias",
      "address": "0xA08b9912416E8aDc4D9C21Fae1415d3318A129A8",
      "receivedPermissions": [
        {
          "permission": "configure",
          "from": "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E",
          "description": "control all roles in the ZkToken access control, including the minter roles."
        },
        {
          "permission": "upgrade",
          "from": "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E",
          "via": [{ "address": "0xdB1E46B448e68a5E35CB693a99D59f784aD115CC" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "from": "0xdB1E46B448e68a5E35CB693a99D59f784aD115CC"
        }
      ]
    },
    {
      "name": "ZKFoundationMultisig_l2Alias",
      "address": "0xcd2753Bd3829dfeC575AFC3816d4899CD103C62D",
      "receivedPermissions": [
        {
          "permission": "configure",
          "from": "0x10560f8B7eE37571AD7E3702EEb12Bc422036E89",
          "description": "make direct proposals without owning ZK tokens. In propose-guarded mode, this address is the ONLY allowed proposer. Propose-guarded mode is currently set to false."
        }
      ]
    },
    {
      "name": "Guardians_l2Alias",
      "address": "0xe788e09324F8bb3cc64f009973693f751C33b999",
      "receivedPermissions": [
        {
          "permission": "configure",
          "from": "0x10560f8B7eE37571AD7E3702EEb12Bc422036E89",
          "description": "cancel proposals while they are pending (after having been proposed) or active (during the voting period)."
        },
        {
          "permission": "configure",
          "from": "0x496869a7575A1f907D1C5B1eca28e4e9E382afAb",
          "description": "cancel proposals while they are pending (after having been proposed) or active (during the voting period)."
        }
      ]
    }
  ],
  "abis": {
    "0x01a6715d3560241E09E865a46122bf347A576c09": [
      "error DelegateSignatureExpired(uint256 expiry)",
      "error DelegateSignatureIsInvalid()",
      "error ERC6372InconsistentClock()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function BURNER_ADMIN_ROLE() view returns (bytes32)",
      "function BURNER_ROLE() view returns (bytes32)",
      "function CLOCK_MODE() view returns (string)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DELEGATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function MINTER_ADMIN_ROLE() view returns (bytes32)",
      "function MINTER_ROLE() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(address _from, uint256 _amount)",
      "function checkpoints(address account, uint32 pos) view returns (tuple(uint32 fromBlock, uint224 votes))",
      "function clock() view returns (uint48)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegateOnBehalf(address _signer, address _delegatee, uint256 _expiry, bytes _signature)",
      "function delegates(address account) view returns (address)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
      "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getVotes(address account) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address _admin, address _mintReceiver, uint256 _mintAmount)",
      "function initializeV2()",
      "function mint(address _to, uint256 _amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function numCheckpoints(address account) view returns (uint32)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x10560f8B7eE37571AD7E3702EEb12Bc422036E89": [
      "constructor(tuple(string name, address token, address timelock, uint48 initialVotingDelay, uint32 initialVotingPeriod, uint256 initialProposalThreshold, uint224 initialQuorum, uint64 initialVoteExtension, address vetoGuardian, address proposeGuardian, bool isProposeGuarded) params)",
      "error Empty()",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "error Unauthorized()",
      "error UncancelableProposalState()",
      "event EIP712DomainChanged()",
      "event IsProposeGuardedToggled(bool oldState, bool newState)",
      "event LateQuorumVoteExtensionSet(uint64 oldVoteExtension, uint64 newVoteExtension)",
      "event ProposalCanceled(uint256 proposalId)",
      "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
      "event ProposalExecuted(uint256 proposalId)",
      "event ProposalExtended(uint256 indexed proposalId, uint64 extendedDeadline)",
      "event ProposalQueued(uint256 proposalId, uint256 eta)",
      "event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold)",
      "event QuorumUpdated(uint256 oldQuorum, uint256 newQuorum)",
      "event TimelockChange(address oldTimelock, address newTimelock)",
      "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
      "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
      "event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay)",
      "event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod)",
      "function BALLOT_TYPEHASH() view returns (bytes32)",
      "function CLOCK_MODE() view returns (string)",
      "function COUNTING_MODE() pure returns (string)",
      "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
      "function PROPOSE_GUARDIAN() view returns (address)",
      "function VETO_GUARDIAN() view returns (address)",
      "function cancel(address[] _targets, uint256[] _values, bytes[] _calldatas, bytes32 _descriptionHash) returns (uint256)",
      "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
      "function castVoteBySig(uint256 proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) returns (uint256)",
      "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
      "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
      "function castVoteWithReasonAndParamsBySig(uint256 _proposalId, uint8 _support, string _reason, bytes _params, uint8 _v, bytes32 _r, bytes32 _s) returns (uint256)",
      "function clock() view returns (uint48)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
      "function fractionalVoteNonce(address) view returns (uint128)",
      "function getVotes(address account, uint256 timepoint) view returns (uint256)",
      "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
      "function hasVoted(uint256 proposalId, address account) view returns (bool)",
      "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
      "function isProposeGuarded() view returns (bool)",
      "function lateQuorumVoteExtension() view returns (uint64)",
      "function name() view returns (string)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function proposalDeadline(uint256 _proposalId) view returns (uint256)",
      "function proposalEta(uint256 proposalId) view returns (uint256)",
      "function proposalProposer(uint256 proposalId) view returns (address)",
      "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
      "function proposalThreshold() view returns (uint256)",
      "function proposalVotes(uint256 proposalId) view returns (uint256 againstVotes, uint256 forVotes, uint256 abstainVotes)",
      "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
      "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
      "function quorum(uint256 _voteStart) view returns (uint256)",
      "function relay(address target, uint256 value, bytes data) payable",
      "function setIsProposeGuarded(bool _isProposeGuarded)",
      "function setLateQuorumVoteExtension(uint64 newVoteExtension)",
      "function setProposalThreshold(uint256 newProposalThreshold)",
      "function setQuorum(uint224 _amount)",
      "function setVotingDelay(uint256 newVotingDelay)",
      "function setVotingPeriod(uint256 newVotingPeriod)",
      "function state(uint256 _proposalId) view returns (uint8)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function timelock() view returns (address)",
      "function token() view returns (address)",
      "function updateTimelock(address newTimelock)",
      "function version() view returns (string)",
      "function voteWeightCast(uint256 proposalId, address account) view returns (uint128)",
      "function votingDelay() view returns (uint256)",
      "function votingPeriod() view returns (uint256)"
    ],
    "0x3701fB675bCd4A85eb11A2467628BBe193F6e6A8": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x3E21c654B545Bf6236DC08236169DcF13dA4dDd6": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x496869a7575A1f907D1C5B1eca28e4e9E382afAb": [
      "constructor(tuple(string name, address token, address timelock, uint48 initialVotingDelay, uint32 initialVotingPeriod, uint256 initialProposalThreshold, uint224 initialQuorum, uint64 initialVoteExtension, address vetoGuardian) _params)",
      "error Empty()",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "error Unauthorized()",
      "error UncancelableProposalState()",
      "event EIP712DomainChanged()",
      "event LateQuorumVoteExtensionSet(uint64 oldVoteExtension, uint64 newVoteExtension)",
      "event ProposalCanceled(uint256 proposalId)",
      "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
      "event ProposalExecuted(uint256 proposalId)",
      "event ProposalExtended(uint256 indexed proposalId, uint64 extendedDeadline)",
      "event ProposalQueued(uint256 proposalId, uint256 eta)",
      "event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold)",
      "event QuorumUpdated(uint256 oldQuorum, uint256 newQuorum)",
      "event TimelockChange(address oldTimelock, address newTimelock)",
      "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
      "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
      "event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay)",
      "event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod)",
      "function BALLOT_TYPEHASH() view returns (bytes32)",
      "function CLOCK_MODE() view returns (string)",
      "function COUNTING_MODE() pure returns (string)",
      "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
      "function VETO_GUARDIAN() view returns (address)",
      "function cancel(address[] _targets, uint256[] _values, bytes[] _calldatas, bytes32 _descriptionHash) returns (uint256)",
      "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
      "function castVoteBySig(uint256 proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) returns (uint256)",
      "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
      "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
      "function castVoteWithReasonAndParamsBySig(uint256 _proposalId, uint8 _support, string _reason, bytes _params, uint8 _v, bytes32 _r, bytes32 _s) returns (uint256)",
      "function clock() view returns (uint48)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
      "function fractionalVoteNonce(address) view returns (uint128)",
      "function getVotes(address account, uint256 timepoint) view returns (uint256)",
      "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
      "function hasVoted(uint256 proposalId, address account) view returns (bool)",
      "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
      "function lateQuorumVoteExtension() view returns (uint64)",
      "function name() view returns (string)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function proposalDeadline(uint256 _proposalId) view returns (uint256)",
      "function proposalEta(uint256 proposalId) view returns (uint256)",
      "function proposalProposer(uint256 proposalId) view returns (address)",
      "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
      "function proposalThreshold() view returns (uint256)",
      "function proposalVotes(uint256 proposalId) view returns (uint256 againstVotes, uint256 forVotes, uint256 abstainVotes)",
      "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
      "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
      "function quorum(uint256 _voteStart) view returns (uint256)",
      "function relay(address target, uint256 value, bytes data) payable",
      "function setLateQuorumVoteExtension(uint64 newVoteExtension)",
      "function setProposalThreshold(uint256 newProposalThreshold)",
      "function setQuorum(uint224 _amount)",
      "function setVotingDelay(uint256 newVotingDelay)",
      "function setVotingPeriod(uint256 newVotingPeriod)",
      "function state(uint256 _proposalId) view returns (uint8)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function timelock() view returns (address)",
      "function token() view returns (address)",
      "function updateTimelock(address newTimelock)",
      "function version() view returns (string)",
      "function voteWeightCast(uint256 proposalId, address account) view returns (uint128)",
      "function votingDelay() view returns (uint256)",
      "function votingPeriod() view returns (uint256)"
    ],
    "0x5A7d6b2F92C77FAD6CCaBd7EE0624E64907Eaf3E": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x76705327e682F2d96943280D99464Ab61219e34f": [
      "constructor(string _name, address _token, address _timelock, uint48 _initialVotingDelay, uint32 _initialVotingPeriod, uint256 _initialProposalThreshold, uint224 _initialQuorum, uint64 _initialVoteExtension)",
      "error Empty()",
      "error InvalidShortString()",
      "error StringTooLong(string str)",
      "event EIP712DomainChanged()",
      "event LateQuorumVoteExtensionSet(uint64 oldVoteExtension, uint64 newVoteExtension)",
      "event ProposalCanceled(uint256 proposalId)",
      "event ProposalCreated(uint256 proposalId, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 voteStart, uint256 voteEnd, string description)",
      "event ProposalExecuted(uint256 proposalId)",
      "event ProposalExtended(uint256 indexed proposalId, uint64 extendedDeadline)",
      "event ProposalQueued(uint256 proposalId, uint256 eta)",
      "event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold)",
      "event QuorumUpdated(uint256 oldQuorum, uint256 newQuorum)",
      "event TimelockChange(address oldTimelock, address newTimelock)",
      "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason)",
      "event VoteCastWithParams(address indexed voter, uint256 proposalId, uint8 support, uint256 weight, string reason, bytes params)",
      "event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay)",
      "event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod)",
      "function BALLOT_TYPEHASH() view returns (bytes32)",
      "function CLOCK_MODE() view returns (string)",
      "function COUNTING_MODE() pure returns (string)",
      "function EXTENDED_BALLOT_TYPEHASH() view returns (bytes32)",
      "function cancel(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
      "function castVote(uint256 proposalId, uint8 support) returns (uint256)",
      "function castVoteBySig(uint256 proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s) returns (uint256)",
      "function castVoteWithReason(uint256 proposalId, uint8 support, string reason) returns (uint256)",
      "function castVoteWithReasonAndParams(uint256 proposalId, uint8 support, string reason, bytes params) returns (uint256)",
      "function castVoteWithReasonAndParamsBySig(uint256 _proposalId, uint8 _support, string _reason, bytes _params, uint8 _v, bytes32 _r, bytes32 _s) returns (uint256)",
      "function clock() view returns (uint48)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function execute(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) payable returns (uint256)",
      "function fractionalVoteNonce(address) view returns (uint128)",
      "function getVotes(address account, uint256 timepoint) view returns (uint256)",
      "function getVotesWithParams(address account, uint256 timepoint, bytes params) view returns (uint256)",
      "function hasVoted(uint256 proposalId, address account) view returns (bool)",
      "function hashProposal(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) pure returns (uint256)",
      "function lateQuorumVoteExtension() view returns (uint64)",
      "function name() view returns (string)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function proposalDeadline(uint256 _proposalId) view returns (uint256)",
      "function proposalEta(uint256 proposalId) view returns (uint256)",
      "function proposalProposer(uint256 proposalId) view returns (address)",
      "function proposalSnapshot(uint256 proposalId) view returns (uint256)",
      "function proposalThreshold() view returns (uint256)",
      "function proposalVotes(uint256 proposalId) view returns (uint256 againstVotes, uint256 forVotes, uint256 abstainVotes)",
      "function propose(address[] targets, uint256[] values, bytes[] calldatas, string description) returns (uint256)",
      "function queue(address[] targets, uint256[] values, bytes[] calldatas, bytes32 descriptionHash) returns (uint256)",
      "function quorum(uint256 _voteStart) view returns (uint256)",
      "function relay(address target, uint256 value, bytes data) payable",
      "function setLateQuorumVoteExtension(uint64 newVoteExtension)",
      "function setProposalThreshold(uint256 newProposalThreshold)",
      "function setQuorum(uint224 _amount)",
      "function setVotingDelay(uint256 newVotingDelay)",
      "function setVotingPeriod(uint256 newVotingPeriod)",
      "function state(uint256 _proposalId) view returns (uint8)",
      "function supportsInterface(bytes4 _interfaceId) view returns (bool)",
      "function timelock() view returns (address)",
      "function token() view returns (address)",
      "function updateTimelock(address newTimelock)",
      "function version() view returns (string)",
      "function voteWeightCast(uint256 proposalId, address account) view returns (uint128)",
      "function votingDelay() view returns (uint256)",
      "function votingPeriod() view returns (uint256)"
    ],
    "0xC3e970cB015B5FC36edDf293D2370ef5D00F7a19": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0xdB1E46B448e68a5E35CB693a99D59f784aD115CC": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x02855da1dcadbd7374c349e817243f8de621b62b46c5027276c46dd8fabb38ab",
    "shared-zk-stack/TimelockController": "0x38f43b8c36d40f49fb5bb1617228d17380aba0b12091b134579e30bc355e8123",
    "shared-zk-stack/ZkGovernor": "0xc5df0dc32cd88ab7d0221d702c91c8ecde126c7f21d95e4cb5cbaa49ab70d398",
    "shared-zk-stack/ZkToken": "0x0832f7cc461e7c92cecaf38b20aed1c119a1d91d0a01085cc260c38ad27031f1"
  }
}
