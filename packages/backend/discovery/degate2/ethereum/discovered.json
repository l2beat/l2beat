{
  "name": "degate2",
  "chain": "ethereum",
  "blockNumber": 18554408,
  "configHash": "0x7f8ce44079225523e10d861f2c029725746778c39b3fbdb838206a5ceaedf024",
  "version": 3,
  "contracts": [
    {
      "name": "LoopringIOExchangeOwner",
      "address": "0x2CFd271e9b4d0344Fd2Aa0cb1ffd4f6b85c0B215",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1693304819,
      "values": {
        "blockSubmitters": ["0x4e3FE240B50A445fc6137a6363aC3593Af173b8a"],
        "open": false,
        "owner": "0xacD3A62F3eED1BfE4fF0eC8240d645c1F5477F82",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "target": "0x9C8f884B15a1fcd5B4bcEb8647DC2D15165906c7"
      },
      "derivedName": "LoopringIOExchangeOwner"
    },
    {
      "name": "LoopringV3",
      "address": "0x5F412bf72ceE6ceB3e9f8b0F966429b59255a9B7",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1693304687,
      "values": {
        "blockVerifierAddress": "0x707B12e8921b442D4015eb03c86E66F3b8042Dd2",
        "forcedWithdrawalFee": "10000000000000000",
        "getProtocolFeeValues": 18,
        "lrcAddress": "0x53C8395465A84955c95159814461466053DedEDE",
        "owner": "0xacD3A62F3eED1BfE4fF0eC8240d645c1F5477F82",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "protocolFeeBips": 18,
        "protocolFeeVault": "0x7B0d44D5b2eF3A8B168FAfdcc321FAb0D9d5d08C",
        "totalStake": 0
      }
    },
    {
      "name": "BlockVerifier",
      "address": "0x707B12e8921b442D4015eb03c86E66F3b8042Dd2",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1693304675,
      "values": {
        "owner": "0xacD3A62F3eED1BfE4fF0eC8240d645c1F5477F82",
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "FeeVault",
      "address": "0x7B0d44D5b2eF3A8B168FAfdcc321FAb0D9d5d08C",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1614841682,
      "values": {
        "getOwners": [
          "0xf5020ADf433645c451A4809eac0d6F680709f11B",
          "0xeD530f3b8675B0a576DaAe64C004676c65368DfD",
          "0xB7093FC2d926ADdE48122B70991fe68374879adf",
          "0xC715b8501039d3514787dC55BC09f89c293351e9",
          "0x6EF4e54E049A5FffB629063D3a9ee38ac27551C8",
          "0x3Cd51A933b0803DDCcDF985A7c71C1C7357FE9Eb"
        ],
        "MAX_OWNER_COUNT": 50,
        "required": 4,
        "transactionCount": 105
      },
      "derivedName": "MultiSigWallet"
    },
    {
      "name": "ExchangeV3",
      "address": "0x9C8f884B15a1fcd5B4bcEb8647DC2D15165906c7",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1693304795,
      "values": {
        "allowOnchainTransferFrom": false,
        "domainSeparator": "0xe28bada2629b92fae534318e0ab97ecdfab14b258848e76b6e6282f6fbbdb0dd",
        "getBlockHeight": 669,
        "getConstants": [
          "21888242871839275222246405745257275088548364400416034343698204186575808495617",
          1000000,
          1296000,
          604800,
          4294967296,
          4294967296,
          604800,
          2592000,
          83,
          1296000,
          "250000000000000000",
          18
        ],
        "getDepositContract": "0xF13e21653AEB763595D5E4baA1dC115689Da49b9",
        "getDomainSeparator": "0xe28bada2629b92fae534318e0ab97ecdfab14b258848e76b6e6282f6fbbdb0dd",
        "getExchangeStake": 0,
        "getFreeDepositRemained": 4999,
        "getMaxAgeDepositUntilWithdrawable": 1296000,
        "getMerkleAssetRoot": "0x283ac2bab64178991cdb4156f843b367540c45c11400983c570a1bd56ef6a6e3",
        "getMerkleRoot": "0x1b679a6541cc6fff615954e4fd3bac89b29feb4ad7878d2d93e2c91d46740a09",
        "getNumAvailableForcedSlots": 1000000,
        "getProtocolFeeValues": [0, 18, 18, 0, 18],
        "isInWithdrawalMode": false,
        "isShutdown": true,
        "loopringV3": "0x5F412bf72ceE6ceB3e9f8b0F966429b59255a9B7",
        "owner": "0x2CFd271e9b4d0344Fd2Aa0cb1ffd4f6b85c0B215",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "shutdownTriggered": [
          {
            "timestamp": 1699762379
          }
        ],
        "state": [
          1296000,
          "0xe28bada2629b92fae534318e0ab97ecdfab14b258848e76b6e6282f6fbbdb0dd",
          "0x5F412bf72ceE6ceB3e9f8b0F966429b59255a9B7",
          "0x707B12e8921b442D4015eb03c86E66F3b8042Dd2",
          "0x0000000000000000000000000000000000000000",
          "0xF13e21653AEB763595D5E4baA1dC115689Da49b9",
          [5000, 4999, 18345986, 1, 4480000000000000],
          "0x1b679a6541cc6fff615954e4fd3bac89b29feb4ad7878d2d93e2c91d46740a09",
          "0x283ac2bab64178991cdb4156f843b367540c45c11400983c570a1bd56ef6a6e3",
          669,
          0,
          [0, 18, 18, 0, 18],
          [1699762379, 0]
        ],
        "version": "0.1.0"
      },
      "derivedName": "ExchangeV3"
    },
    {
      "name": "DefaultDepositContract",
      "address": "0xF13e21653AEB763595D5E4baA1dC115689Da49b9",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1693304807,
      "values": {
        "exchange": "0x9C8f884B15a1fcd5B4bcEb8647DC2D15165906c7",
        "owner": "0xacD3A62F3eED1BfE4fF0eC8240d645c1F5477F82",
        "pendingOwner": "0x0000000000000000000000000000000000000000"
      }
    }
  ],
  "eoas": [
    "0x3Cd51A933b0803DDCcDF985A7c71C1C7357FE9Eb",
    "0x4e3FE240B50A445fc6137a6363aC3593Af173b8a",
    "0x6EF4e54E049A5FffB629063D3a9ee38ac27551C8",
    "0xacD3A62F3eED1BfE4fF0eC8240d645c1F5477F82",
    "0xB7093FC2d926ADdE48122B70991fe68374879adf",
    "0xC715b8501039d3514787dC55BC09f89c293351e9",
    "0xeD530f3b8675B0a576DaAe64C004676c65368DfD",
    "0xf5020ADf433645c451A4809eac0d6F680709f11B"
  ],
  "abis": {
    "0x2CFd271e9b4d0344Fd2Aa0cb1ffd4f6b85c0B215": [
      "constructor(address _exchange)",
      "event Drained(address to, address token, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PermissionUpdate(address indexed user, bytes4 indexed selector, bool allowed)",
      "event SubmitBlocksAccessOpened(bool open)",
      "event TargetCalled(address target, bytes data)",
      "function canDrain(address drainer, address) view returns (bool)",
      "function claimOwnership()",
      "function drain(address to, address token) returns (uint256 amount)",
      "function grantAccess(address user, bytes4 selector, bool granted)",
      "function hasAccessTo(address user, bytes4 selector) view returns (bool)",
      "function isValidSignature(bytes32 signHash, bytes signature) view returns (bytes4)",
      "function open() view returns (bool)",
      "function openAccessToSubmitBlocks(bool _open)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function permissions(address, bytes4) view returns (bool)",
      "function renounceOwnership()",
      "function submitBlocks(bool isDataCompressed, bytes data)",
      "function target() view returns (address)",
      "function transact(bytes data) payable",
      "function transferOwnership(address newOwner)"
    ],
    "0x5F412bf72ceE6ceB3e9f8b0F966429b59255a9B7": [
      "constructor(address _lrcAddress, address _protocolFeeVault, address _blockVerifierAddress)",
      "event ExchangeStakeBurned(address exchangeAddr, uint256 amount)",
      "event ExchangeStakeDeposited(address exchangeAddr, uint256 amount)",
      "event ExchangeStakeWithdrawn(address exchangeAddr, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event SettingsUpdated(uint256 time)",
      "function blockVerifierAddress() view returns (address)",
      "function burnExchangeStake(uint256 amount) returns (uint256 burnedLRC)",
      "function claimOwnership()",
      "function depositExchangeStake(address exchangeAddr, uint256 amountLRC) returns (uint256 stakedLRC)",
      "function forcedWithdrawalFee() view returns (uint256)",
      "function getExchangeStake(address exchangeAddr) view returns (uint256)",
      "function getProtocolFeeValues() view returns (uint16 feeBips)",
      "function lrcAddress() view returns (address)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function protocolFeeBips() view returns (uint16)",
      "function protocolFeeVault() view returns (address)",
      "function renounceOwnership()",
      "function totalStake() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function updateProtocolFeeSettings(uint16 _protocolFeeBips)",
      "function updateSettings(address _protocolFeeVault, uint256 _forcedWithdrawalFee)",
      "function withdrawExchangeStake(address recipient, uint256 requestedAmount) returns (uint256 amountLRC)"
    ],
    "0x707B12e8921b442D4015eb03c86E66F3b8042Dd2": [
      "constructor()",
      "event CircuitDisabled(uint8 indexed blockType, uint16 blockSize, uint8 blockVersion)",
      "event CircuitRegistered(uint8 indexed blockType, uint16 blockSize, uint8 blockVersion)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function circuits(uint8, uint16, uint8) view returns (bool registered, bool enabled)",
      "function claimOwnership()",
      "function getVerificationKey(uint8 blockType, uint16 blockSize, uint8 blockVersion) view returns (uint256[18])",
      "function isCircuitEnabled(uint8 blockType, uint16 blockSize, uint8 blockVersion) view returns (bool)",
      "function isCircuitRegistered(uint8 blockType, uint16 blockSize, uint8 blockVersion) view returns (bool)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function verifyProofs(uint8 blockType, uint16 blockSize, uint8 blockVersion, uint256[] publicInputs, uint256[] proofs) view returns (bool)"
    ],
    "0x7B0d44D5b2eF3A8B168FAfdcc321FAb0D9d5d08C": [
      "function owners(uint256) view returns (address)",
      "function removeOwner(address owner)",
      "function revokeConfirmation(uint256 transactionId)",
      "function isOwner(address) view returns (bool)",
      "function confirmations(uint256, address) view returns (bool)",
      "function getTransactionCount(bool pending, bool executed) view returns (uint256 count)",
      "function addOwner(address owner)",
      "function isConfirmed(uint256 transactionId) view returns (bool)",
      "function getConfirmationCount(uint256 transactionId) view returns (uint256 count)",
      "function transactions(uint256) view returns (address destination, uint256 value, bytes data, bool executed)",
      "function getOwners() view returns (address[])",
      "function getTransactionIds(uint256 from, uint256 to, bool pending, bool executed) view returns (uint256[] _transactionIds)",
      "function getConfirmations(uint256 transactionId) view returns (address[] _confirmations)",
      "function transactionCount() view returns (uint256)",
      "function changeRequirement(uint256 _required)",
      "function confirmTransaction(uint256 transactionId)",
      "function submitTransaction(address destination, uint256 value, bytes data) returns (uint256 transactionId)",
      "function MAX_OWNER_COUNT() view returns (uint256)",
      "function required() view returns (uint256)",
      "function replaceOwner(address owner, address newOwner)",
      "function executeTransaction(uint256 transactionId)",
      "constructor(address[] _owners, uint256 _required)",
      "event Confirmation(address indexed sender, uint256 indexed transactionId)",
      "event Revocation(address indexed sender, uint256 indexed transactionId)",
      "event Submission(uint256 indexed transactionId)",
      "event Execution(uint256 indexed transactionId)",
      "event ExecutionFailure(uint256 indexed transactionId)",
      "event Deposit(address indexed sender, uint256 value)",
      "event OwnerAddition(address indexed owner)",
      "event OwnerRemoval(address indexed owner)",
      "event RequirementChange(uint256 required)"
    ],
    "0x9C8f884B15a1fcd5B4bcEb8647DC2D15165906c7": [
      "constructor()",
      "event AllowOnchainTransferFrom(bool value)",
      "event BlockSubmitted(uint256 indexed blockIdx, bytes32 merkleRoot, bytes32 publicDataHash)",
      "event BlockVerifierRefreshed(address blockVerifier)",
      "event DepositContractUpdate(address depositContract)",
      "event DepositParamsUpdate(uint256 freeDepositMax, uint256 freeDepositRemained, uint256 freeSlotPerBlock, uint256 depositFee)",
      "event DepositRequested(address from, address to, address token, uint32 tokenId, uint248 amount)",
      "event ExchangeCloned(address exchangeAddress, address owner, bytes32 genesisMerkleRoot)",
      "event ForcedWithdrawalRequested(address owner, address token, uint32 accountID)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ProtocolFeesUpdated(uint16 protocolFeeBips, uint16 previousProtocolFeeBips)",
      "event Shutdown(uint256 timestamp)",
      "event TokenRegistered(address token, uint32 tokenId)",
      "event TransactionApproved(address owner, bytes32 transactionHash)",
      "event TransactionsApproved(address[] owners, bytes32[] transactionHashes)",
      "event WithdrawExchangeFees(address token, address recipient)",
      "event WithdrawalCompleted(uint8 category, address from, address to, address token, uint256 amount)",
      "event WithdrawalFailed(uint8 category, address from, address to, address token, uint256 amount)",
      "event WithdrawalModeActivated(uint256 timestamp)",
      "event WithdrawalRecipientUpdate(address from, address to, address token, uint248 amount, uint32 storageID, address newRecipient)",
      "function allowOnchainTransferFrom() view returns (bool)",
      "function approveTransaction(address from, bytes32 transactionHash)",
      "function approveTransactions(address[] owners, bytes32[] transactionHashes)",
      "function burnExchangeStake()",
      "function claimOwnership()",
      "function deposit(address from, address to, address tokenAddress, uint248 amount, bytes extraData) payable",
      "function domainSeparator() view returns (bytes32)",
      "function forceWithdraw(address from, address token, uint32 accountID) payable",
      "function getAmountWithdrawable(address from, address token) view returns (uint256)",
      "function getBlockHeight() view returns (uint256)",
      "function getBlockInfo(uint256 blockIdx) view returns (tuple(uint32 timestamp, bytes28 blockDataHash))",
      "function getConstants() pure returns (tuple(uint256 SNARK_SCALAR_FIELD, uint256 MAX_OPEN_FORCED_REQUESTS, uint256 MAX_AGE_FORCED_REQUEST_UNTIL_WITHDRAW_MODE, uint256 TIMESTAMP_HALF_WINDOW_SIZE_IN_SECONDS, uint256 MAX_NUM_ACCOUNTS, uint256 MAX_NUM_TOKENS, uint256 MIN_AGE_PROTOCOL_FEES_UNTIL_UPDATED, uint256 MIN_TIME_IN_SHUTDOWN, uint256 TX_DATA_AVAILABILITY_SIZE, uint256 MAX_AGE_DEPOSIT_UNTIL_WITHDRAWABLE_UPPERBOUND, uint256 MAX_FORCED_WITHDRAWAL_FEE, uint256 DEFAULT_PROTOCOL_FEE_BIPS))",
      "function getDepositBalance(address token) view returns (uint248)",
      "function getDepositContract() view returns (address)",
      "function getDomainSeparator() view returns (bytes32)",
      "function getExchangeStake() view returns (uint256)",
      "function getFreeDepositRemained() view returns (uint256)",
      "function getMaxAgeDepositUntilWithdrawable() view returns (uint32)",
      "function getMerkleAssetRoot() view returns (bytes32)",
      "function getMerkleRoot() view returns (bytes32)",
      "function getNumAvailableForcedSlots() view returns (uint256)",
      "function getPendingDepositAmount(address from, address tokenAddress) view returns (uint248)",
      "function getProtocolFeeLastWithdrawnTime(address tokenAddress) view returns (uint256)",
      "function getProtocolFeeValues() view returns (uint32 syncedAt, uint16 protocolFeeBips, uint16 previousProtocolFeeBips, uint32 executeTimeOfNextProtocolFeeBips, uint16 nextProtocolFeeBips)",
      "function getTokenAddress(uint32 tokenID) view returns (address)",
      "function getTokenID(address tokenAddress) view returns (uint32)",
      "function getUnconfirmedBalance(address token) view returns (uint256)",
      "function getWithdrawalRecipient(address from, address to, address token, uint248 amount, uint32 storageID) view returns (address)",
      "function initialize(address _loopring, address _owner, bytes32 _genesisMerkleRoot, bytes32 _genesisMerkleAssetRoot)",
      "function isForcedWithdrawalPending(uint32 accountID, address token) view returns (bool)",
      "function isInWithdrawalMode() view returns (bool)",
      "function isShutdown() view returns (bool)",
      "function isTransactionApproved(address from, bytes32 transactionHash) view returns (bool)",
      "function isUserOrAgent(address from) view returns (bool)",
      "function isWithdrawnInWithdrawalMode(uint32 accountID, address token) view returns (bool)",
      "function notifyForcedRequestTooOld(uint32 accountID, address token)",
      "function onchainTransferFrom(address from, address to, address token, uint256 amount)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function registerToken(address tokenAddress) returns (uint32)",
      "function renounceOwnership()",
      "function setAllowOnchainTransferFrom(bool value)",
      "function setDepositContract(address _depositContract)",
      "function setDepositParams(uint256 freeDepositMax, uint256 freeDepositRemained, uint256 freeSlotPerBlock, uint256 depositFee)",
      "function setMaxAgeDepositUntilWithdrawable(uint32 newValue) returns (uint32)",
      "function setWithdrawalRecipient(address from, address to, address token, uint248 amount, uint32 storageID, address newRecipient)",
      "function shutdown() returns (bool success)",
      "function state() view returns (uint32 maxAgeDepositUntilWithdrawable, bytes32 DOMAIN_SEPARATOR, address loopring, address blockVerifier, address agentRegistry, address depositContract, tuple(uint256 freeDepositMax, uint256 freeDepositRemained, uint256 lastDepositBlockNum, uint256 freeSlotPerBlock, uint256 depositFee) depositState, bytes32 merkleRoot, bytes32 merkleAssetRoot, uint256 numBlocks, uint32 numPendingForcedTransactions, tuple(uint32 syncedAt, uint16 protocolFeeBips, uint16 previousProtocolFeeBips, uint32 executeTimeOfNextProtocolFeeBips, uint16 nextProtocolFeeBips) protocolFeeData, tuple(uint256 shutdownModeStartTime, uint256 withdrawalModeStartTime) modeTime)",
      "function submitBlocks(tuple(uint8 blockType, uint16 blockSize, uint8 blockVersion, bytes data, uint256[8] proof, bool storeBlockInfoOnchain, bytes auxiliaryData, bytes offchainData)[] blocks)",
      "function transferOwnership(address newOwner)",
      "function version() pure returns (string)",
      "function withdrawExchangeFees(address token, address recipient)",
      "function withdrawExchangeStake(address recipient) returns (uint256)",
      "function withdrawFromApprovedWithdrawals(address[] owners, address[] tokens)",
      "function withdrawFromDepositRequest(address from, address token)",
      "function withdrawFromMerkleTree(tuple(tuple(uint32 accountID, address owner, uint256 pubKeyX, uint256 pubKeyY, uint32 nonce) accountLeaf, tuple(uint32 tokenID, uint248 balance) balanceLeaf, uint256[48] accountMerkleProof, uint256[48] balanceMerkleProof) merkleProof)"
    ],
    "0xF13e21653AEB763595D5E4baA1dC115689Da49b9": [
      "event CheckBalance(address indexed token, bool checkBalance)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function claimOwnership()",
      "function deposit(address from, address token, uint248 amount, bytes) payable returns (uint248 amountReceived)",
      "function exchange() view returns (address)",
      "function initialize(address _exchange)",
      "function isETH(address addr) pure returns (bool)",
      "function isTokenSupported(address) pure returns (bool)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function renounceOwnership()",
      "function setCheckBalance(address token, bool checkBalance)",
      "function transfer(address from, address to, address token, uint256 amount) payable",
      "function transferOwnership(address newOwner)",
      "function withdraw(address, address to, address token, uint256 amount) payable"
    ]
  }
}
