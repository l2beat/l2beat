{
  "$schema": "../../config.schema.json",
  "chain": "ethereum",
  "name": "hypr",
  "initialAddresses": [
    "0x2e5687010b5f62Ad0ef84370325bC91DED2724fe",
    "0x5F67587FB3f1736a5a91C10E3EeB7cA92117177B"
  ],
  "names": {
    "0xBB08cf90DEb93492b463f1Ee5DA9453e51643586": "SystemConfig",
    "0x3E4F4Eb77a9c1f88c0e1F5aDCc9d3521Ce157FdD": "L2OutputOracle",
    "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746": "LyraMultisig",
    "0x9f6F58F07863D72C47D001066C65528C27D3AE19": "L1CrossDomainMessenger",
    "0x1bBde518ad01BaABFE30020407A7630FB17B545d": "L1StandardBridge",
    "0xba1ac896F3b7cB273daE94bF9A6291A432e826c7": "OptimismPortal",
    "0x28fB4D0e436874F4107948E358df3C242De06788": "ChallengerMultisig",
    "0xeA078231B0ED94F816E57960423af6d028529b09": "AddressManager"
  },
  "overrides": {
    "OptimismPortal": {
      "ignoreMethods": ["isOutputFinalized"],
      "ignoreInWatchMode": ["params"]
    },
    "L2OutputOracle": {
      "ignoreMethods": [
        "getL2OutputAfter",
        "getL2OutputIndexAfter",
        "getL2Output",
        "computeL2Timestamp"
      ],
      "ignoreInWatchMode": [
        "nextBlockNumber",
        "nextOutputIndex",
        "latestBlockNumber",
        "latestOutputIndex"
      ],
      "fields": {
        "deletedOutputs": {
          "type": "stateFromEvent",
          "event": "OutputsDeleted",
          "returnParams": ["prevNextOutputIndex", "newNextOutputIndex"]
        }
      }
    },
    "LyraMultisig": {
      "ignoreInWatchMode": ["nonce"]
    },
    "L1CrossDomainMessenger": {
      "ignoreMethods": ["xDomainMessageSender"],
      "ignoreInWatchMode": ["messageNonce"]
    },
    "SystemConfig": {
      "fields": {
        // this overrides the batcherHash method return type (bytes32 -> address) so our discovery detects it as an address
        "batcherHash": {
          "type": "call",
          "method": "function batcherHash() view returns (address)",
          "args": []
        },
        "opStackDA": {
          "type": "opStackDA",
          "sequencerAddress": "{{ batcherHash }}"
        },
        "sequencerInbox": {
          "type": "opStackSequencerInbox",
          "sequencerAddress": "{{ batcherHash }}"
        }
      }
    }
  }
}
