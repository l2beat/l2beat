{
  "name": "synapse",
  "blockNumber": 17620009,
  "configHash": "0xf6fd397c277b530df44de6f2593a809c10d246777a0332922654d1c19c1c9a3e",
  "version": 1,
  "contracts": [
    {
      "name": "SynapseBridge",
      "address": "0x2796317b0fF8538F253012862c06787Adfb8cEb6",
      "code": "https://etherscan.deth.net/address/0x2796317b0fF8538F253012862c06787Adfb8cEb6,0x31fe393815822edacBd81C2262467402199EFD0D",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x31fe393815822edacBd81C2262467402199EFD0D",
        "admin": "0x7B3C1f09088Bdc9f136178E170aC668C8Ed095f2"
      },
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55"]
          },
          "NODEGROUP_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x230A1AC45690B9Ae1176389434610B9526d2f21b"]
          },
          "GOVERNANCE_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55"]
          }
        },
        "bridgeVersion": 6,
        "chainGasAmount": 0,
        "paused": false,
        "startBlockNumber": 0,
        "WETH_ADDRESS": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"
      }
    },
    {
      "name": "TimelockController",
      "address": "0x647489df0673E17dB3163c47d5233EBB6F5cAc70",
      "code": "https://etherscan.deth.net/address/0x647489df0673E17dB3163c47d5233EBB6F5cAc70",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x647489df0673E17dB3163c47d5233EBB6F5cAc70",
              "0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55"]
          }
        },
        "getMinDelay": 180
      }
    },
    {
      "name": "Bridge Multisig",
      "address": "0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55",
      "code": "https://etherscan.deth.net/address/0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0x8c2034447704652155262224ded80d817537f663fe2aa23efb2f627783672c6c",
        "getChainId": 1,
        "getOwners": [
          "0xb3DAD3C24A861b84fDF380B212662620627D4e15",
          "0x9Ce9dc8B12E264F00e80F35326040C75201C38f3",
          "0x0d745Ad687F2b1E1941569f09f612F60ad4aD5BC"
        ],
        "getThreshold": 2,
        "nonce": 724,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x7B3C1f09088Bdc9f136178E170aC668C8Ed095f2",
      "code": "https://etherscan.deth.net/address/0x7B3C1f09088Bdc9f136178E170aC668C8Ed095f2",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0x647489df0673E17dB3163c47d5233EBB6F5cAc70"
      }
    }
  ],
  "eoas": [
    "0x0d745Ad687F2b1E1941569f09f612F60ad4aD5BC",
    "0x230A1AC45690B9Ae1176389434610B9526d2f21b",
    "0x9Ce9dc8B12E264F00e80F35326040C75201C38f3",
    "0xb3DAD3C24A861b84fDF380B212662620627D4e15"
  ],
  "abis": {
    "0x2796317b0fF8538F253012862c06787Adfb8cEb6": [
      "constructor(address initialLogic, address initialAdmin, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x31fe393815822edacBd81C2262467402199EFD0D": [
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event TokenDeposit(address indexed to, uint256 chainId, address token, uint256 amount)",
      "event TokenDepositAndSwap(address indexed to, uint256 chainId, address token, uint256 amount, uint8 tokenIndexFrom, uint8 tokenIndexTo, uint256 minDy, uint256 deadline)",
      "event TokenMint(address indexed to, address token, uint256 amount, uint256 fee, bytes32 indexed kappa)",
      "event TokenMintAndSwap(address indexed to, address token, uint256 amount, uint256 fee, uint8 tokenIndexFrom, uint8 tokenIndexTo, uint256 minDy, uint256 deadline, bool swapSuccess, bytes32 indexed kappa)",
      "event TokenRedeem(address indexed to, uint256 chainId, address token, uint256 amount)",
      "event TokenRedeemAndRemove(address indexed to, uint256 chainId, address token, uint256 amount, uint8 swapTokenIndex, uint256 swapMinAmount, uint256 swapDeadline)",
      "event TokenRedeemAndSwap(address indexed to, uint256 chainId, address token, uint256 amount, uint8 tokenIndexFrom, uint8 tokenIndexTo, uint256 minDy, uint256 deadline)",
      "event TokenRedeemV2(bytes32 indexed to, uint256 chainId, address token, uint256 amount)",
      "event TokenWithdraw(address indexed to, address token, uint256 amount, uint256 fee, bytes32 indexed kappa)",
      "event TokenWithdrawAndRemove(address indexed to, address token, uint256 amount, uint256 fee, uint8 swapTokenIndex, uint256 swapMinAmount, uint256 swapDeadline, bool swapSuccess, bytes32 indexed kappa)",
      "event Unpaused(address account)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function GOVERNANCE_ROLE() view returns (bytes32)",
      "function NODEGROUP_ROLE() view returns (bytes32)",
      "function WETH_ADDRESS() view returns (address)",
      "function addKappas(bytes32[] kappas)",
      "function bridgeVersion() view returns (uint256)",
      "function chainGasAmount() view returns (uint256)",
      "function deposit(address to, uint256 chainId, address token, uint256 amount)",
      "function depositAndSwap(address to, uint256 chainId, address token, uint256 amount, uint8 tokenIndexFrom, uint8 tokenIndexTo, uint256 minDy, uint256 deadline)",
      "function getFeeBalance(address tokenAddress) view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize()",
      "function kappaExists(bytes32 kappa) view returns (bool)",
      "function mint(address to, address token, uint256 amount, uint256 fee, bytes32 kappa)",
      "function mintAndSwap(address to, address token, uint256 amount, uint256 fee, address pool, uint8 tokenIndexFrom, uint8 tokenIndexTo, uint256 minDy, uint256 deadline, bytes32 kappa)",
      "function pause()",
      "function paused() view returns (bool)",
      "function redeem(address to, uint256 chainId, address token, uint256 amount)",
      "function redeemAndRemove(address to, uint256 chainId, address token, uint256 amount, uint8 swapTokenIndex, uint256 swapMinAmount, uint256 swapDeadline)",
      "function redeemAndSwap(address to, uint256 chainId, address token, uint256 amount, uint8 tokenIndexFrom, uint8 tokenIndexTo, uint256 minDy, uint256 deadline)",
      "function redeemV2(bytes32 to, uint256 chainId, address token, uint256 amount)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setChainGasAmount(uint256 amount)",
      "function setWethAddress(address _wethAddress)",
      "function startBlockNumber() view returns (uint256)",
      "function unpause()",
      "function withdraw(address to, address token, uint256 amount, uint256 fee, bytes32 kappa)",
      "function withdrawAndRemove(address to, address token, uint256 amount, uint256 fee, address pool, uint8 swapTokenIndex, uint256 swapMinAmount, uint256 swapDeadline, bytes32 kappa)",
      "function withdrawFees(address token, address to)"
    ],
    "0x647489df0673E17dB3163c47d5233EBB6F5cAc70": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] datas, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256 duration)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256 timestamp)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] datas, bytes32 predecessor, bytes32 salt) pure returns (bytes32 hash)",
      "function isOperation(bytes32 id) view returns (bool pending)",
      "function isOperationDone(bytes32 id) view returns (bool done)",
      "function isOperationPending(bytes32 id) view returns (bool pending)",
      "function isOperationReady(bytes32 id) view returns (bool ready)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] datas, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x67F60b0891EBD842Ebe55E4CCcA1098d7Aac1A55": [
      "constructor(address _masterCopy)"
    ],
    "0x7B3C1f09088Bdc9f136178E170aC668C8Ed095f2": [
      "constructor(address owner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ]
  }
}
