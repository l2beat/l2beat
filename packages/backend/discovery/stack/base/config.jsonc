{
  "$schema": "../../../../discovery/schemas/config.schema.json",
  "chain": "base",
  "name": "stack",
  "initialAddresses": ["0xbA256039AEdaD407692D8Deb366308BE6Bb2515C"],
  "names": {
    "0xbA256039AEdaD407692D8Deb366308BE6Bb2515C": "L1StandardBridge",
    "0x752BE2A1c6DBe40884D7851CDC58c9cA54DCBD3E": "OptimismPortal",
    "0xCC61c26901E719B73273C1484e337cBAB84369EF": "L2OutputOracle",
    "0x727a91e8251A262A4ad5F2D5811c6cD862961759": "L1CrossDomainMessenger",
    "0x52c901666Cfc8AeE9b46A3b7C101688351529B37": "SystemConfig",
    "0x7dCe2FEE5e30EFf298cD3d9B92649f00EBDfc104": "StackMultisig"
  },
  "overrides": {
    "0x4200000000000000000000000000000000000010": {
      "ignoreDiscovery": true
    },
    "0x4200000000000000000000000000000000000007": {
      "ignoreDiscovery": true
    },
    "OptimismPortal": {
      "ignoreMethods": ["isOutputFinalized"],
      "ignoreInWatchMode": ["params"]
    },
    "L2OutputOracle": {
      "ignoreMethods": [
        "getL2OutputAfter",
        "getL2OutputIndexAfter",
        "getL2Output",
        "computeL2Timestamp"
      ],
      "ignoreInWatchMode": [
        "nextBlockNumber",
        "nextOutputIndex",
        "latestBlockNumber",
        "latestOutputIndex"
      ],
      "fields": {
        "deletedOutputs": {
          "type": "stateFromEvent",
          "event": "OutputsDeleted",
          "returnParams": ["prevNextOutputIndex", "newNextOutputIndex"]
        }
      }
    },
    "StackMultisig": {
      "ignoreInWatchMode": ["nonce"]
    },
    "L1CrossDomainMessenger": {
      "ignoreMethods": ["xDomainMessageSender"],
      "ignoreInWatchMode": ["messageNonce"]
    },
    "SystemConfig": {
      "fields": {
        // this overrides the batcherHash method return type (bytes32 -> address) so our discovery detects it as an address
        "batcherHash": {
          "type": "call",
          "method": "function batcherHash() view returns (address)",
          "args": []
        },
        "opStackDA": {
          "type": "opStackDA",
          "sequencerAddress": "{{ batcherHash }}"
        },
        "sequencerInbox": {
          "type": "opStackSequencerInbox",
          "sequencerAddress": "{{ batcherHash }}"
        }
      },
      "ignoreInWatchMode": ["scalar"]
    }
  }
}
