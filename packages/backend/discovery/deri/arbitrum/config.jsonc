{
  "$schema": "../../../../discovery/schemas/config.v2.schema.json",
  "chain": "arbitrum",
  "name": "deri",
  "initialAddresses": [
    "0x846387C3D6001F74170455B1074D01f05eB3067a",
    "0xD4FE46D2533E7d03382ac6cACF0547F336e59DC0",
    "0xB155C77a440DA7c282993a89FeA609598293017A",
    "0xa8f6bB820eaD521cf834B7b371cFe025bdacEE99"
  ],
  "names": {
    "0x846387C3D6001F74170455B1074D01f05eB3067a": "RollupProxy",
    "0xD4FE46D2533E7d03382ac6cACF0547F336e59DC0": "Bridge",
    "0x383eFE8D410285c5CbE1B4F296022640759aA834": "ChallengeManager",
    "0xA597e0212971e65f53f288Ff1fFd26A6C8201f83": "Outbox",
    "0xe347C1223381b9Dcd6c0F61cf81c90175A7Bae77": "SequencerInbox",
    "0x0611b78A42903a537BE7a2f9a8783BE39AC63cD9": "UpgradeExecutor",
    "0xB155C77a440DA7c282993a89FeA609598293017A": "L1ERC20Gateway",
    "0xa8f6bB820eaD521cf834B7b371cFe025bdacEE99": "L1CustomGateway"
  },
  "overrides": {
    "ChallengeManager": {
      "ignoreMethods": ["challenges"]
    },
    "RollupProxy": {
      "ignoreMethods": [
        // Execution reverted
        "proxiableUUID"
      ],
      "ignoreInWatchMode": [
        "firstUnresolvedNode",
        "latestConfirmed",
        "latestNodeCreated"
      ],
      "fields": {
        // when this changes, it means the validators have changed
        "setValidatorCount": {
          "handler": {
            "type": "eventCount",
            "topics": [
              // event OwnerFunctionCalled(uint256 indexed id);
              "0xea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456e",
              // id == 6 is emitted inside setValidator()
              "0x0000000000000000000000000000000000000000000000000000000000000006"
            ]
          }
        },
        "challenges": {
          "handler": {
            "type": "stateFromEvent",
            "event": "RollupChallengeStarted",
            "returnParams": [
              "challengeIndex",
              "asserter",
              "challenger",
              "challengedNode"
            ]
          }
        },
        "validators": {
          "handler": {
            "type": "arbitrumActors",
            "actorType": "validator"
          }
        }
      }
    },
    "Outbox": {
      "ignoreMethods": ["spent", "isSpent"]
    },
    "Bridge": {
      "ignoreMethods": ["sequencerInboxAccs", "delayedInboxAccs"],
      "ignoreInWatchMode": [
        "delayedMessageCount",
        "sequencerMessageCount",
        "sequencerReportedSubMessageCount"
      ]
    },
    "SequencerInbox": {
      "ignoreMethods": ["inboxAccs"],
      "ignoreInWatchMode": ["batchCount", "totalDelayedMessagesRead"],
      "fields": {
        // getting sequencers from the contract is too complex at the moment
        // so we hardcode it in config .ts
        // this field will notify us in case of changes
        "IS_HARDCODED_SEQUENCER_BATCH_POSTER": {
          "handler": {
            "type": "call",
            "method": "function isBatchPoster(address) external view returns (bool)",
            "args": ["0x02c903F5c76F3f00c1F659702Bd76DF30470bBEE"]
          }
        },
        "sequencerVersion": {
          "handler": {
            "type": "arbitrumSequencerVersion"
          }
        },
        // when this changes, it means the sequencers have changed
        "setIsBatchPosterCount": {
          "handler": {
            "type": "eventCount",
            "topics": [
              // event OwnerFunctionCalled(uint256 indexed id);
              "0xea8787f128d10b2cc0317b0c3960f9ad447f7f6c1ed189db1083ccffd20f456e",
              // id == 6 is emitted inside setValidator()
              "0x0000000000000000000000000000000000000000000000000000000000000001"
            ]
          }
        },
        "batchPosters": {
          "handler": {
            "type": "arbitrumActors",
            "actorType": "batchPoster"
          }
        },
        "keySetUpdates": {
          "handler": {
            "type": "eventCount",
            "topics": [
              // SetValidKeyset(bytes32,bytes)
              "0xabca9b7986bc22ad0160eb0cb88ae75411eacfba4052af0b457a9335ef655722"
            ]
          }
        }
      }
    },
    "UpgradeExecutor": {
      "fields": {
        "accessControl": {
          "handler": {
            "type": "accessControl"
          }
        }
      }
    }
  }
}
