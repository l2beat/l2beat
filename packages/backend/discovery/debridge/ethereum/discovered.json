{
  "name": "debridge",
  "blockNumber": 17619637,
  "configHash": "0x9ae2dcdfb4b7d5ed7cbf076e5dd20318c538a0cf43747ee8f7dd41f35c21d647",
  "version": 1,
  "contracts": [
    {
      "name": "DeBridgeGate",
      "address": "0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
      "code": "https://etherscan.deth.net/address/0x43dE2d77BF8027e25dBD179B491e8d64f38398aA,0x797161BCC625155D2302251404ccB93c2632658e",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x797161BCC625155D2302251404ccB93c2632658e",
        "admin": "0xE4427af3555CD9303D728C491364FAdFDD7494Fe"
      },
      "values": {
        "BPS_DENOMINATOR": 10000,
        "callProxy": "0x8a0C79F5532f3b2a16AD1E4282A5DAF81928a824",
        "deBridgeTokenDeployer": "0x8244d6Ffe0695B30b2bAD424683Ee3bc534Ea464",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DEPLOY_PREFIX": 2,
        "excessConfirmations": 3,
        "feeContractUpdater": "0x0000000000000000000000000000000000000000",
        "feeProxy": "0xC2bAC0DB5B18B0c3225581Ba14BD0B448c623636",
        "gap0": 0,
        "gap1": "0x0000000000000000000000000000000000000000",
        "getChainId": 1,
        "globalFixedNativeFee": 1000000000000000,
        "globalTransferFeeBps": 10,
        "GOVMONITORING_ROLE": "0x2b36fa99e118fa8485d488becf749a974743fbeb6a7aa57e663893bf5d69a3c1",
        "lockedClaim": 1,
        "nonce": 11970,
        "paused": false,
        "signatureVerifier": "0x949b3B3c098348b879C9e4F15cecc8046d9C8A8c",
        "SUBMISSION_PREFIX": 1,
        "version": 421,
        "weth": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "wethGate": "0xFCf83648b8cDeF62e5d03319a6f1FCE16e4D6A59"
      },
      "derivedName": "DeBridgeGate"
    },
    {
      "name": "Admin Multisig",
      "address": "0x6bec1faF33183e1Bc316984202eCc09d46AC92D5",
      "code": "https://etherscan.deth.net/address/0x6bec1faF33183e1Bc316984202eCc09d46AC92D5,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0x1e756d21e24d2471c566451e17756f6febc40c36cb31d6437730beb1c93c306c",
        "getChainId": 1,
        "getOwners": [
          "0xbA7cE717928A6C51ab530aD9AdB69bA6E76D09B5",
          "0xC351f905d810Cb33c54fE771e1bE4ec5A5048c2D",
          "0xD4Aa80C7a35B2C996Ef3F83baf91D5721c86dA2C",
          "0x874B1d14bF4FE455C9eCAcDf66b629e10664c6E1",
          "0xE9666D80e5617bA1470E2cA09F2D9B0C8CCd56B7",
          "0x6f572a24c5C009fC8C844Fab5352edf79F132FBD",
          "0xd725E456D5beD8275E297C4Dd11135e3C5cDe544",
          "0x24C0E1C19c8eC997b781dF4B4A0f812aE9667c96"
        ],
        "getThreshold": 5,
        "nonce": 37,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "DeBridgeTokenDeployer",
      "address": "0x8244d6Ffe0695B30b2bAD424683Ee3bc534Ea464",
      "code": "https://etherscan.deth.net/address/0x8244d6Ffe0695B30b2bAD424683Ee3bc534Ea464,0x4c7CA8fcFFE77281A8B81D4580CFf8257d785491",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x4c7CA8fcFFE77281A8B81D4580CFf8257d785491",
        "admin": "0xE4427af3555CD9303D728C491364FAdFDD7494Fe"
      },
      "values": {
        "debridgeAddress": "0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
        "deBridgeTokenAdmin": "0x6bec1faF33183e1Bc316984202eCc09d46AC92D5",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "implementation": "0xf8A2902c0a5f817F5e22C82f453538d3f0734C2b",
        "tokenImplementation": "0xf8A2902c0a5f817F5e22C82f453538d3f0734C2b",
        "version": 110
      }
    },
    {
      "name": "CallProxy",
      "address": "0x8a0C79F5532f3b2a16AD1E4282A5DAF81928a824",
      "code": "https://etherscan.deth.net/address/0x8a0C79F5532f3b2a16AD1E4282A5DAF81928a824,0xBd3d657AE87671eC6f8D6272A9f431a7c4a9B6f8",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xBd3d657AE87671eC6f8D6272A9f431a7c4a9B6f8",
        "admin": "0xE4427af3555CD9303D728C491364FAdFDD7494Fe"
      },
      "values": {
        "DEBRIDGE_GATE_ROLE": "0xd5a6101e940ba33e226d2395b16238ab3063d7ee83d7b3ff59cb92988b395437",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "submissionChainIdFrom": 0,
        "submissionNativeSender": "0x",
        "version": 423
      }
    },
    {
      "name": "SignatureVerifier",
      "address": "0x949b3B3c098348b879C9e4F15cecc8046d9C8A8c",
      "code": "https://etherscan.deth.net/address/0x949b3B3c098348b879C9e4F15cecc8046d9C8A8c,0xfE7De3c1e1BD252C67667B56347cABFC6df08dF4",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xfE7De3c1e1BD252C67667B56347cABFC6df08dF4",
        "admin": "0xE4427af3555CD9303D728C491364FAdFDD7494Fe"
      },
      "values": {
        "confirmationThreshold": 3,
        "currentBlock": 17619615,
        "debridgeAddress": "0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "excessConfirmations": 3,
        "minConfirmations": 8,
        "oracles": [
          "0x4bC16662A2cE381E7bb54Dc577c05619C5E67526",
          "0x1c0720B124e7251e881a0fbCfe259d085C59f205",
          "0x573F5E2940789B378BA09cf7d3fD010C422a9ff5",
          "0x59CE95b8955F0E7Be128d5Af77161B36f6084214",
          "0xbCF516826eD7F3b0E487C7ca6A87b3b4EccDD4DC",
          "0xf27Af436A6F2d9C64B4CA40a483eC46acDc33fe8",
          "0x6436BBcA322b8cD0c56d8b9aD7837b13960dA426",
          "0x874f46124C1DAaD4749B94f82eD142754826240E",
          "0xDD523FD4DebcF0dB6f0B2c2D30D075CaaeE023e0",
          "0x83f81E7f9E284AAFFEDED797008663595f7342bF",
          "0x4CA2191cDE585d65EB6AFC09D23D60b8A0AB677D",
          "0xebec9bc53f9C65f69DB8591B9f240BbCDb563c54"
        ],
        "requiredOraclesCount": 0,
        "submissionsInBlock": 1,
        "version": 201
      },
      "derivedName": "SignatureVerifier"
    },
    {
      "name": "GnosisSafe",
      "address": "0xa0D6062Be29710c666aE850395Ac1A2AeCd14885",
      "code": "https://etherscan.deth.net/address/0xa0D6062Be29710c666aE850395Ac1A2AeCd14885,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0xd9512e4bd742ce576138697d48c92dcc7b1776e492c423a4c0c37e3aa6999b8e",
        "getChainId": 1,
        "getOwners": [
          "0x360f6cF86D3ed3c77E79dA6cE374aff842DfB0A0",
          "0xd725E456D5beD8275E297C4Dd11135e3C5cDe544",
          "0x24C0E1C19c8eC997b781dF4B4A0f812aE9667c96"
        ],
        "getThreshold": 2,
        "nonce": 0,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "SimpleFeeProxy",
      "address": "0xC2bAC0DB5B18B0c3225581Ba14BD0B448c623636",
      "code": "https://etherscan.deth.net/address/0xC2bAC0DB5B18B0c3225581Ba14BD0B448c623636,0x37a52ddb753c924f8C914de65ef00b5210Caa83C",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x37a52ddb753c924f8C914de65ef00b5210Caa83C",
        "admin": "0xE4427af3555CD9303D728C491364FAdFDD7494Fe"
      },
      "values": {
        "debridgeGate": "0x43dE2d77BF8027e25dBD179B491e8d64f38398aA",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "getChainId": 1,
        "paused": false,
        "treasury": "0xa0D6062Be29710c666aE850395Ac1A2AeCd14885",
        "version": 400
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xE4427af3555CD9303D728C491364FAdFDD7494Fe",
      "code": "https://etherscan.deth.net/address/0xE4427af3555CD9303D728C491364FAdFDD7494Fe",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0x6bec1faF33183e1Bc316984202eCc09d46AC92D5"
      }
    },
    {
      "name": "DeBridgeToken",
      "address": "0xf8A2902c0a5f817F5e22C82f453538d3f0734C2b",
      "code": "https://etherscan.deth.net/address/0xf8A2902c0a5f817F5e22C82f453538d3f0734C2b",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "decimals": 18,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "DOMAIN_SEPARATOR": "0xddb9f829e4c5b922e0a0cab9be2a4e8f1a760c32dbdc2472288cf6c7b3e22142",
        "MINTER_ROLE": "0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
        "name": "deBridge d",
        "paused": false,
        "PAUSER_ROLE": "0x65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "symbol": "ded",
        "totalSupply": 0
      }
    }
  ],
  "eoas": [
    "0x1c0720B124e7251e881a0fbCfe259d085C59f205",
    "0x24C0E1C19c8eC997b781dF4B4A0f812aE9667c96",
    "0x360f6cF86D3ed3c77E79dA6cE374aff842DfB0A0",
    "0x4bC16662A2cE381E7bb54Dc577c05619C5E67526",
    "0x4CA2191cDE585d65EB6AFC09D23D60b8A0AB677D",
    "0x573F5E2940789B378BA09cf7d3fD010C422a9ff5",
    "0x59CE95b8955F0E7Be128d5Af77161B36f6084214",
    "0x6436BBcA322b8cD0c56d8b9aD7837b13960dA426",
    "0x6f572a24c5C009fC8C844Fab5352edf79F132FBD",
    "0x83f81E7f9E284AAFFEDED797008663595f7342bF",
    "0x874B1d14bF4FE455C9eCAcDf66b629e10664c6E1",
    "0x874f46124C1DAaD4749B94f82eD142754826240E",
    "0xbA7cE717928A6C51ab530aD9AdB69bA6E76D09B5",
    "0xbCF516826eD7F3b0E487C7ca6A87b3b4EccDD4DC",
    "0xC351f905d810Cb33c54fE771e1bE4ec5A5048c2D",
    "0xD4Aa80C7a35B2C996Ef3F83baf91D5721c86dA2C",
    "0xd725E456D5beD8275E297C4Dd11135e3C5cDe544",
    "0xDD523FD4DebcF0dB6f0B2c2D30D075CaaeE023e0",
    "0xE9666D80e5617bA1470E2cA09F2D9B0C8CCd56B7",
    "0xebec9bc53f9C65f69DB8591B9f240BbCDb563c54",
    "0xf27Af436A6F2d9C64B4CA40a483eC46acDc33fe8"
  ],
  "abis": {
    "0x37a52ddb753c924f8C914de65ef00b5210Caa83C": [
      "error AdminBadRole()",
      "error EmptyTreasuryAddress()",
      "error EthTransferFailed()",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Unpaused(address account)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function debridgeGate() view returns (address)",
      "function getChainId() view returns (uint256 cid)",
      "function getDebridgeId(uint256 _chainId, address _tokenAddress) pure returns (bytes32)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getbDebridgeId(uint256 _chainId, bytes _tokenAddress) pure returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address _debridgeGate, address _treasury)",
      "function pause()",
      "function paused() view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setDebridgeGate(address _debridgeGate)",
      "function setTreasury(address _treasury)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function treasury() view returns (address)",
      "function unpause()",
      "function version() pure returns (uint256)",
      "function withdrawFee(address _tokenAddress)",
      "function withdrawNativeFee()"
    ],
    "0x43dE2d77BF8027e25dBD179B491e8d64f38398aA": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x4c7CA8fcFFE77281A8B81D4580CFf8257d785491": [
      "error AdminBadRole()",
      "error DeBridgeGateBadRole()",
      "error DeployedAlready()",
      "error WrongArgument()",
      "event DeBridgeTokenDeployed(address asset, string name, string symbol, uint8 decimals)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function deBridgeTokenAdmin() view returns (address)",
      "function debridgeAddress() view returns (address)",
      "function deployAsset(bytes32 _debridgeId, string _name, string _symbol, uint8 _decimals) returns (address deBridgeTokenAddress)",
      "function getDeployedAssetAddress(bytes32) view returns (address)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function implementation() view returns (address)",
      "function initialize(address _tokenImplementation, address _deBridgeTokenAdmin, address _debridgeAddress)",
      "function overridedTokens(bytes32) view returns (bool accept, string name, string symbol)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function setDeBridgeTokenAdmin(address _deBridgeTokenAdmin)",
      "function setDebridgeAddress(address _debridgeAddress)",
      "function setOverridedTokenInfo(bytes32[] _debridgeIds, tuple(bool accept, string name, string symbol)[] _tokens)",
      "function setTokenImplementation(address _impl)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function tokenImplementation() view returns (address)",
      "function version() pure returns (uint256)"
    ],
    "0x6bec1faF33183e1Bc316984202eCc09d46AC92D5": [
      "constructor(address _singleton)"
    ],
    "0x797161BCC625155D2302251404ccB93c2632658e": [
      "constructor()",
      "error AdminBadRole()",
      "error AssetAlreadyExist()",
      "error DebridgeNotFound()",
      "error EthTransferFailed()",
      "error FeeContractUpdaterBadRole()",
      "error FeeProxyBadRole()",
      "error GovMonitoringBadRole()",
      "error InvalidTokenToSend()",
      "error NotEnoughReserves()",
      "error NotSupportedFixedFee()",
      "error ProposedFeeTooHigh()",
      "error SignatureInvalidV()",
      "error SubmissionBlocked()",
      "error SubmissionUsed()",
      "error TransferAmountNotCoverFees()",
      "error TransferAmountTooHigh()",
      "error WrongArgument()",
      "error WrongArgumentLength()",
      "error WrongAutoArgument()",
      "error WrongChainFrom()",
      "error WrongChainTo()",
      "error ZeroAddress()",
      "event AutoRequestExecuted(bytes32 submissionId, bool indexed success, address callProxy)",
      "event Blocked(bytes32 submissionId)",
      "event CallProxyUpdated(address callProxy)",
      "event ChainSupportUpdated(uint256 chainId, bool isSupported, bool isChainFrom)",
      "event ChainsSupportUpdated(uint256 chainIds, tuple(uint256 fixedNativeFee, bool isSupported, uint16 transferFeeBps) chainSupportInfo, bool isChainFrom)",
      "event Claimed(bytes32 submissionId, bytes32 indexed debridgeId, uint256 amount, address indexed receiver, uint256 nonce, uint256 indexed chainIdFrom, bytes autoParams, bool isNativeToken)",
      "event FixedNativeFeeAutoUpdated(uint256 globalFixedNativeFee)",
      "event FixedNativeFeeUpdated(uint256 globalFixedNativeFee, uint256 globalTransferFeeBps)",
      "event MonitoringClaimEvent(bytes32 submissionId, uint256 lockedOrMintedAmount, uint256 totalSupply)",
      "event MonitoringSendEvent(bytes32 submissionId, uint256 nonce, uint256 lockedOrMintedAmount, uint256 totalSupply)",
      "event PairAdded(bytes32 debridgeId, address tokenAddress, bytes nativeAddress, uint256 indexed nativeChainId, uint256 maxAmount, uint16 minReservesBps)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Sent(bytes32 submissionId, bytes32 indexed debridgeId, uint256 amount, bytes receiver, uint256 nonce, uint256 indexed chainIdTo, uint32 referralCode, tuple(uint256 receivedAmount, uint256 fixFee, uint256 transferFee, bool useAssetFee, bool isNativeToken) feeParams, bytes autoParams, address nativeSender)",
      "event Unblocked(bytes32 submissionId)",
      "event Unpaused(address account)",
      "event WithdrawnFee(bytes32 debridgeId, uint256 fee)",
      "function BPS_DENOMINATOR() view returns (uint256)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DEPLOY_PREFIX() view returns (uint256)",
      "function GOVMONITORING_ROLE() view returns (bytes32)",
      "function SUBMISSION_PREFIX() view returns (uint256)",
      "function autoUpdateFixedNativeFee(uint256 _globalFixedNativeFee)",
      "function blockSubmission(bytes32[] _submissionIds, bool isBlocked)",
      "function callProxy() view returns (address)",
      "function claim(bytes32 _debridgeId, uint256 _amount, uint256 _chainIdFrom, address _receiver, uint256 _nonce, bytes _signatures, bytes _autoParams)",
      "function deBridgeTokenDeployer() view returns (address)",
      "function deployNewAsset(bytes _nativeTokenAddress, uint256 _nativeChainId, string _name, string _symbol, uint8 _decimals, bytes _signatures)",
      "function excessConfirmations() view returns (uint8)",
      "function feeContractUpdater() view returns (address)",
      "function feeDiscount(address) view returns (uint16 discountFixBps, uint16 discountTransferBps)",
      "function feeProxy() view returns (address)",
      "function gap0() view returns (uint256)",
      "function gap1() view returns (address)",
      "function getAmountThreshold(bytes32) view returns (uint256)",
      "function getChainFromConfig(uint256) view returns (uint256 fixedNativeFee, bool isSupported, uint16 transferFeeBps)",
      "function getChainId() view returns (uint256 cid)",
      "function getChainToConfig(uint256) view returns (uint256 fixedNativeFee, bool isSupported, uint16 transferFeeBps)",
      "function getDebridge(bytes32) view returns (uint256 chainId, uint256 maxAmount, uint256 balance, uint256 lockedInStrategies, address tokenAddress, uint16 minReservesBps, bool exist)",
      "function getDebridgeChainAssetFixedFee(bytes32 _debridgeId, uint256 _chainId) view returns (uint256)",
      "function getDebridgeFeeInfo(bytes32) view returns (uint256 collectedFees, uint256 withdrawnFees)",
      "function getDebridgeId(uint256 _chainId, address _tokenAddress) pure returns (bytes32)",
      "function getDeployId(bytes32 _debridgeId, string _name, string _symbol, uint8 _decimals) pure returns (bytes32)",
      "function getNativeInfo(address) view returns (uint256 nativeChainId, bytes nativeAddress)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getSubmissionIdFrom(bytes32 _debridgeId, uint256 _chainIdFrom, uint256 _amount, address _receiver, uint256 _nonce, tuple(uint256 executionFee, uint256 flags, address fallbackAddress, bytes data, bytes nativeSender) _autoParams, bool _hasAutoParams, address _sender) view returns (bytes32)",
      "function getbDebridgeId(uint256 _chainId, bytes _tokenAddress) pure returns (bytes32)",
      "function globalFixedNativeFee() view returns (uint256)",
      "function globalTransferFeeBps() view returns (uint16)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(uint8 _excessConfirmations, address _weth)",
      "function isBlockedSubmission(bytes32) view returns (bool)",
      "function isSubmissionUsed(bytes32) view returns (bool)",
      "function lockedClaim() view returns (uint256)",
      "function nonce() view returns (uint256)",
      "function pause()",
      "function paused() view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function send(address _tokenAddress, uint256 _amount, uint256 _chainIdTo, bytes _receiver, bytes _permitEnvelope, bool _useAssetFee, uint32 _referralCode, bytes _autoParams) payable returns (bytes32 submissionId)",
      "function sendMessage(uint256 _chainIdTo, bytes _targetContractAddress, bytes _targetContractCalldata, uint256 _flags, uint32 _referralCode) payable returns (bytes32 submissionId)",
      "function sendMessage(uint256 _chainIdTo, bytes _targetContractAddress, bytes _targetContractCalldata) payable returns (bytes32 submissionId)",
      "function setCallProxy(address _callProxy)",
      "function setChainSupport(uint256 _chainId, bool _isSupported, bool _isChainFrom)",
      "function setDeBridgeTokenDeployer(address _deBridgeTokenDeployer)",
      "function setFeeContractUpdater(address _value)",
      "function setFeeProxy(address _feeProxy)",
      "function setSignatureVerifier(address _verifier)",
      "function setWethGate(address _wethGate)",
      "function signatureVerifier() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unpause()",
      "function updateAsset(bytes32 _debridgeId, uint256 _maxAmount, uint16 _minReservesBps, uint256 _amountThreshold)",
      "function updateAssetFixedFees(bytes32 _debridgeId, uint256[] _supportedChainIds, uint256[] _assetFeesInfo)",
      "function updateChainSupport(uint256[] _chainIds, tuple(uint256 fixedNativeFee, bool isSupported, uint16 transferFeeBps)[] _chainSupportInfo, bool _isChainFrom)",
      "function updateExcessConfirmations(uint8 _excessConfirmations)",
      "function updateFeeDiscount(address _address, uint16 _discountFixBps, uint16 _discountTransferBps)",
      "function updateGlobalFee(uint256 _globalFixedNativeFee, uint16 _globalTransferFeeBps)",
      "function version() pure returns (uint256)",
      "function weth() view returns (address)",
      "function wethGate() view returns (address)",
      "function withdrawFee(bytes32 _debridgeId)"
    ],
    "0x8244d6Ffe0695B30b2bAD424683Ee3bc534Ea464": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8a0C79F5532f3b2a16AD1E4282A5DAF81928a824": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x949b3B3c098348b879C9e4F15cecc8046d9C8A8c": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xa0D6062Be29710c666aE850395Ac1A2AeCd14885": [
      "constructor(address _singleton)"
    ],
    "0xBd3d657AE87671eC6f8D6272A9f431a7c4a9B6f8": [
      "error CallFailed()",
      "error CallProxyBadRole()",
      "error DeBridgeGateBadRole()",
      "error ExternalCallFailed()",
      "error Locked()",
      "error NotEnoughSafeTxGas()",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEBRIDGE_GATE_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function call(address _reserveAddress, address _receiver, bytes _data, uint256 _flags, bytes _nativeSender, uint256 _chainIdFrom) payable returns (bool _result)",
      "function callERC20(address _token, address _reserveAddress, address _receiver, bytes _data, uint256 _flags, bytes _nativeSender, uint256 _chainIdFrom) returns (bool _result)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize()",
      "function multiSend(bytes transactions) payable",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function submissionChainIdFrom() view returns (uint256)",
      "function submissionNativeSender() view returns (bytes)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function version() pure returns (uint256)"
    ],
    "0xC2bAC0DB5B18B0c3225581Ba14BD0B448c623636": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xE4427af3555CD9303D728C491364FAdFDD7494Fe": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xf8A2902c0a5f817F5e22C82f453538d3f0734C2b": [
      "error MinterBadRole()",
      "error PauserBadRole()",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event Unpaused(address account)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function MINTER_ROLE() view returns (bytes32)",
      "function PAUSER_ROLE() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 _amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string name_, string symbol_, uint8 decimals_, address admin, address[] minters)",
      "function mint(address _receiver, uint256 _amount)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function pause()",
      "function paused() view returns (bool)",
      "function permit(address _owner, address _spender, uint256 _value, uint256 _deadline, uint8 _v, bytes32 _r, bytes32 _s)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function unpause()"
    ],
    "0xfE7De3c1e1BD252C67667B56347cABFC6df08dF4": [
      "error AdminBadRole()",
      "error DeBridgeGateBadRole()",
      "error DuplicateSignatures()",
      "error LowMinConfirmations()",
      "error NotConfirmedByRequiredOracles()",
      "error NotConfirmedThreshold()",
      "error OracleAlreadyExist()",
      "error OracleBadRole()",
      "error OracleNotFound()",
      "error SignatureInvalidLength()",
      "error SignatureInvalidV()",
      "error SubmissionNotConfirmed()",
      "error WrongArgument()",
      "event AddOracle(address oracle, bool required)",
      "event Confirmed(bytes32 submissionId, address operator)",
      "event DeployApproved(bytes32 deployId)",
      "event DeployConfirmed(bytes32 deployId, address operator)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event SubmissionApproved(bytes32 submissionId)",
      "event UpdateOracle(address oracle, bool required, bool isValid)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function addOracles(address[] _oracles, bool[] _required)",
      "function confirmationThreshold() view returns (uint8)",
      "function currentBlock() view returns (uint40)",
      "function debridgeAddress() view returns (address)",
      "function excessConfirmations() view returns (uint8)",
      "function getOracleInfo(address) view returns (bool exist, bool isValid, bool required)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(uint8 _minConfirmations, uint8 _confirmationThreshold, uint8 _excessConfirmations, address _debridgeAddress)",
      "function isValidSignature(bytes32 _submissionId, bytes _signature) view returns (bool)",
      "function minConfirmations() view returns (uint8)",
      "function oracleAddresses(uint256) view returns (address)",
      "function renounceRole(bytes32 role, address account)",
      "function requiredOraclesCount() view returns (uint8)",
      "function revokeRole(bytes32 role, address account)",
      "function setDebridgeAddress(address _debridgeAddress)",
      "function setExcessConfirmations(uint8 _excessConfirmations)",
      "function setMinConfirmations(uint8 _minConfirmations)",
      "function setThreshold(uint8 _confirmationThreshold)",
      "function submissionsInBlock() view returns (uint40)",
      "function submit(bytes32 _submissionId, bytes _signatures, uint8 _excessConfirmations)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateOracle(address _oracle, bool _isValid, bool _required)",
      "function version() pure returns (uint256)"
    ]
  }
}
