{
  "name": "scroll",
  "chain": "ethereum",
  "blockNumber": 18832875,
  "configHash": "0x350d76cfe048e4bf4fc7f9d51cbbf4fc491c827194bcab19da2d77e2477fa1a7",
  "version": 3,
  "contracts": [
    {
      "name": "L1MessageQueue",
      "address": "0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xBC9D741501A20F962756C95BF906b4abffadcf8F",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0xBC9D741501A20F962756C95BF906b4abffadcf8F"],
      "sinceTimestamp": 1696782311,
      "values": {
        "enforcedTxGateway": "0x0000000000000000000000000000000000000000",
        "gasOracle": "0x987e300fDfb06093859358522a79098848C33852",
        "maxGasLimit": 10000000,
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "nextCrossDomainMessageIndex": 88054,
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "pendingQueueIndex": 87945,
        "scrollChain": "0xa13BAF47339d63B743e7Da8741db5456DAc1E556"
      },
      "derivedName": "L1MessageQueue"
    },
    {
      "name": "TimelockFast",
      "address": "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696782479,
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x0e58939204eEDa84F796FBc86840A50af10eC4F4",
              "0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 86400,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimelockController"
    },
    {
      "name": "TimelockSlow",
      "address": "0x1A658B88fD0a3c82fa1a0609fCDbD32e7dd4aB9C",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696782479,
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x1A658B88fD0a3c82fa1a0609fCDbD32e7dd4aB9C",
              "0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 1209600,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimelockController"
    },
    {
      "name": "ExecutorMultisig",
      "address": "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1696661687,
      "values": {
        "domainSeparator": "0xe9a5efc52797721f6bd4d9839b18dcdc4162a6e91c2fe8ce6e0d679f65e814a4",
        "getChainId": 1,
        "getOwners": [
          "0xEe9bb388d320F4305af6a4a1a70c862D3F4d0D5B",
          "0xFcf1f182FC79047d99e5db0d7113c0EfE2EC9402",
          "0x0c5cc5155b346453154059aD9d2Ff695dB92f774",
          "0xd7bC70ecf344C279eB78C8899Ba5538e2e3A0632",
          "0xdA66Df3920091eF4B54782B9463587c314DAdD41"
        ],
        "getThreshold": 1,
        "nonce": 2,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "Whitelist",
      "address": "0x259204DDd2bA29bD9b1B9A5c9B093f73d7EAcf37",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696782311,
      "values": {
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "whitelisted": ["0x21b8a9F5a4640c3FC13E19C48e776173e1210995"]
      },
      "derivedName": "Whitelist"
    },
    {
      "name": "PlonkVerifier",
      "address": "0x4B8Aa8A96078689384DAb49691E9bA51F9d2F9E1",
      "unverified": true,
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696780751,
      "derivedName": ""
    },
    {
      "name": "ZkEvmVerifierV1",
      "address": "0x585DfaD7bF4099E011D185E266907A8ab60DAD2D",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696782311,
      "values": {
        "plonkVerifier": "0x4B8Aa8A96078689384DAb49691E9bA51F9d2F9E1"
      }
    },
    {
      "name": "L2ERC1155GatewayFallback",
      "address": "0x62597Cc19703aF10B58feF87B0d5D29eFE263bcc",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696927307,
      "values": {
        "owner": "0xF9062b8a30e0d7722960e305049FA50b86ba6253"
      },
      "derivedName": "Fallback"
    },
    {
      "name": "L1ERC721Gateway",
      "address": "0x6260aF48e8948617b8FA17F4e5CEa2d21D21554B",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xDE3be7C2AA151D1E152DDfcBf0962FcDf5323DAe",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0xDE3be7C2AA151D1E152DDfcBf0962FcDf5323DAe"],
      "sinceTimestamp": 1696782323,
      "values": {
        "counterpart": "0x7bC08E1c04fb41d75F1410363F0c5746Eae80582",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "L1ERC721Gateway"
    },
    {
      "name": "L2CustomERC20GatewayFallback",
      "address": "0x64CCBE37c9A82D85A1F2E74649b7A42923067988",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696927307,
      "values": {
        "owner": "0xF9062b8a30e0d7722960e305049FA50b86ba6253"
      },
      "derivedName": "Fallback"
    },
    {
      "name": "L2TokenFactoryFallback",
      "address": "0x66e5312EDeEAef6e80759A0F789e7914Fb401484",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696927307,
      "values": {
        "owner": "0xF9062b8a30e0d7722960e305049FA50b86ba6253"
      },
      "derivedName": "Fallback"
    },
    {
      "name": "L1ScrollMessenger",
      "address": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xAf2F898a8680cb52766ABE0588ebe6b9bFe37845",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0xAf2F898a8680cb52766ABE0588ebe6b9bFe37845"],
      "sinceTimestamp": 1696782323,
      "values": {
        "counterpart": "0x781e90f1c8Fc4611c9b7497C3B47F99Ef6969CbC",
        "feeVault": "0x8FA3b4570B4C96f8036C13b64971BA65867eEB48",
        "maxReplayTimes": 3,
        "messageQueue": "0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "paused": false,
        "rollup": "0xa13BAF47339d63B743e7Da8741db5456DAc1E556",
        "xDomainMessageSender": "0x0000000000000000000000000000000000000001"
      },
      "derivedName": "L1ScrollMessenger"
    },
    {
      "name": "L2ETHGatewayFallback",
      "address": "0x6EA73e05AdC79974B931123675ea8F78FfdacDF0",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696927307,
      "values": {
        "owner": "0xF9062b8a30e0d7722960e305049FA50b86ba6253"
      },
      "derivedName": "Fallback"
    },
    {
      "name": "L2WETHGatewayFallback",
      "address": "0x7003E7B7186f0E6601203b99F7B8DECBfA391cf9",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696927307,
      "values": {
        "owner": "0xF9062b8a30e0d7722960e305049FA50b86ba6253"
      },
      "derivedName": "Fallback"
    },
    {
      "name": "EnforcedTxGateway",
      "address": "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x642af405bF64660665B37977449C9C536B806318",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0x642af405bF64660665B37977449C9C536B806318"],
      "sinceTimestamp": 1696782323,
      "values": {
        "DOMAIN_SEPARATOR": "0x4ba6355a403460269233dc486e88f1f91f64c2c97dc065c7ee1782de423fd902",
        "eip712Domain": [
          "0x0f",
          "EnforcedTxGateway",
          "1",
          1,
          "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          []
        ],
        "feeVault": "0x8FA3b4570B4C96f8036C13b64971BA65867eEB48",
        "messageQueue": "0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "paused": true
      },
      "derivedName": "EnforcedTxGateway"
    },
    {
      "name": "L2ScrollMessengerFallback",
      "address": "0x781e90f1c8Fc4611c9b7497C3B47F99Ef6969CbC",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696927307,
      "values": {
        "owner": "0xF9062b8a30e0d7722960e305049FA50b86ba6253"
      },
      "derivedName": "Fallback"
    },
    {
      "name": "ScrollOwner",
      "address": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696782479,
      "values": {
        "accessControl": {
          "roles": {
            "DEFAULT_ADMIN_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": ["0x1A658B88fD0a3c82fa1a0609fCDbD32e7dd4aB9C"]
            },
            "SECURITY_COUNCIL_NO_DELAY_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"]
            },
            "SCROLL_MULTISIG_NO_DELAY_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"]
            },
            "EMERGENCY_MULTISIG_NO_DELAY_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": ["0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc"]
            },
            "TIMELOCK_1DAY_DELAY_TOLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": ["0x0e58939204eEDa84F796FBc86840A50af10eC4F4"]
            },
            "TIMELOCK_7DAY_DELAY_ROLE": {
              "adminRole": "DEFAULT_ADMIN_ROLE",
              "members": ["0xDC1d1189Da69Ae2016E4976A43De20972D349B1b"]
            }
          },
          "targets": {
            "0xEB803eb3F501998126bf37bB823646Ed3D59d072": {
              "upgrade(address,address)": ["SECURITY_COUNCIL_NO_DELAY_ROLE"],
              "upgradeAndCall(address,address,bytes)": [
                "SECURITY_COUNCIL_NO_DELAY_ROLE"
              ]
            },
            "0xa13BAF47339d63B743e7Da8741db5456DAc1E556": {
              "revertBatch(bytes,uint256)": [
                "SCROLL_MULTISIG_NO_DELAY_ROLE",
                "EMERGENCY_MULTISIG_NO_DELAY_ROLE"
              ],
              "removeSequencer(address)": [
                "SCROLL_MULTISIG_NO_DELAY_ROLE",
                "EMERGENCY_MULTISIG_NO_DELAY_ROLE"
              ],
              "removeProver(address)": [
                "SCROLL_MULTISIG_NO_DELAY_ROLE",
                "EMERGENCY_MULTISIG_NO_DELAY_ROLE"
              ],
              "setPause(bool)": [
                "SCROLL_MULTISIG_NO_DELAY_ROLE",
                "EMERGENCY_MULTISIG_NO_DELAY_ROLE"
              ],
              "addSequencer(address)": ["TIMELOCK_1DAY_DELAY_TOLE"],
              "addProver(address)": ["TIMELOCK_1DAY_DELAY_TOLE"],
              "updateMaxNumTxInChunk(uint256)": ["TIMELOCK_7DAY_DELAY_ROLE"]
            },
            "0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B": {
              "updateGasOracle(address)": ["TIMELOCK_1DAY_DELAY_TOLE"],
              "updateMaxGasLimit(uint256)": ["TIMELOCK_1DAY_DELAY_TOLE"]
            },
            "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367": {
              "setPause(bool)": [
                "SCROLL_MULTISIG_NO_DELAY_ROLE",
                "EMERGENCY_MULTISIG_NO_DELAY_ROLE"
              ],
              "updateMaxReplayTimes(uint256)": ["TIMELOCK_1DAY_DELAY_TOLE"]
            },
            "0x987e300fDfb06093859358522a79098848C33852": {
              "setIntrinsicParams(uint64,uint64,uint64,uint64)": [
                "SCROLL_MULTISIG_NO_DELAY_ROLE",
                "EMERGENCY_MULTISIG_NO_DELAY_ROLE"
              ]
            },
            "0x259204DDd2bA29bD9b1B9A5c9B093f73d7EAcf37": {
              "updateWhitelistStatus(address[],bool)": [
                "TIMELOCK_1DAY_DELAY_TOLE"
              ]
            },
            "0xA2Ab526e5C5491F10FC05A55F064BF9F7CEf32a0": {
              "updateVerifier(uint64,address)": [
                "SECURITY_COUNCIL_NO_DELAY_ROLE",
                "TIMELOCK_7DAY_DELAY_ROLE"
              ]
            },
            "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6": {
              "setERC20Gateway(address[],address[])": [
                "TIMELOCK_1DAY_DELAY_TOLE"
              ]
            },
            "0xb2b10a289A229415a124EFDeF310C10cb004B6ff": {
              "updateTokenMapping(address,address)": [
                "TIMELOCK_1DAY_DELAY_TOLE"
              ]
            },
            "0x6260aF48e8948617b8FA17F4e5CEa2d21D21554B": {
              "updateTokenMapping(address,address)": [
                "TIMELOCK_1DAY_DELAY_TOLE"
              ]
            },
            "0xb94f7F6ABcb811c5Ac709dE14E37590fcCd975B6": {
              "updateTokenMapping(address,address)": [
                "TIMELOCK_1DAY_DELAY_TOLE"
              ]
            },
            "0xf1AF3b23DE0A5Ca3CAb7261cb0061C0D779A5c7B": {
              "updateCircleCaller(address)": ["TIMELOCK_7DAY_DELAY_ROLE"],
              "pauseDeposit(bool)": ["TIMELOCK_7DAY_DELAY_ROLE"],
              "pauseWithdraw(bool)": ["TIMELOCK_7DAY_DELAY_ROLE"]
            },
            "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d": {
              "setPause(bool)": [
                "SCROLL_MULTISIG_NO_DELAY_ROLE",
                "EMERGENCY_MULTISIG_NO_DELAY_ROLE"
              ]
            }
          }
        },
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000"
      },
      "derivedName": "ScrollOwner"
    },
    {
      "name": "L1WETHGateway",
      "address": "0x7AC440cAe8EB6328de4fA621163a792c1EA9D4fE",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xd3c42158682D55E082EaBe08a29F7515A97cA307",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0xd3c42158682D55E082EaBe08a29F7515A97cA307"],
      "sinceTimestamp": 1696782323,
      "values": {
        "counterpart": "0x7003E7B7186f0E6601203b99F7B8DECBfA391cf9",
        "l2WETH": "0x5300000000000000000000000000000000000004",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
      },
      "derivedName": "L1WETHGateway"
    },
    {
      "name": "L2ERC721GatewayFallback",
      "address": "0x7bC08E1c04fb41d75F1410363F0c5746Eae80582",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696927307,
      "values": {
        "owner": "0xF9062b8a30e0d7722960e305049FA50b86ba6253"
      },
      "derivedName": "Fallback"
    },
    {
      "name": "L1ETHGateway",
      "address": "0x7F2b8C31F88B6006c382775eea88297Ec1e3E905",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1fcbE079c4Bbab37406daB7Dfd35AcAe37D5C55d",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0x1fcbE079c4Bbab37406daB7Dfd35AcAe37D5C55d"],
      "sinceTimestamp": 1696782323,
      "values": {
        "counterpart": "0x6EA73e05AdC79974B931123675ea8F78FfdacDF0",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
      }
    },
    {
      "name": "FeeVaultMultisig",
      "address": "0x8FA3b4570B4C96f8036C13b64971BA65867eEB48",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1696661975,
      "values": {
        "domainSeparator": "0x6de3852a7023a7bbf3cfe5ef762e1a4e088df670ad27867cbaecde81a0061a94",
        "getChainId": 1,
        "getOwners": [
          "0x0c5cc5155b346453154059aD9d2Ff695dB92f774",
          "0xFcf1f182FC79047d99e5db0d7113c0EfE2EC9402",
          "0x9337B41709c1C2B938Cb460ea3fA9DB586B172E0",
          "0xfc31892C5500AbE00974280b28907BaA9190E384"
        ],
        "getThreshold": 2,
        "nonce": 18,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "L2GasPriceOracle",
      "address": "0x987e300fDfb06093859358522a79098848C33852",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xfDF1eE0098168eaa61BF87Db68C39c85151a4E9E",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0xfDF1eE0098168eaa61BF87Db68C39c85151a4E9E"],
      "sinceTimestamp": 1696782311,
      "values": {
        "intrinsicParams": [21000, 53000, 4, 16],
        "l2BaseFee": 420000000,
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "whitelist": "0x259204DDd2bA29bD9b1B9A5c9B093f73d7EAcf37"
      },
      "derivedName": "L2GasPriceOracle"
    },
    {
      "name": "ScrollChain",
      "address": "0xa13BAF47339d63B743e7Da8741db5456DAc1E556",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x2E07f0FBA71709bb5e1f045b02152E45B451D75f",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0x2E07f0FBA71709bb5e1f045b02152E45B451D75f"],
      "sinceTimestamp": 1696782323,
      "values": {
        "lastFinalizedBatchIndex": 38376,
        "layer2ChainId": 534352,
        "maxNumTxInChunk": 100,
        "messageQueue": "0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "paused": false,
        "provers": [
          "0x356483dC32B004f32Ea0Ce58F7F88879886e9074",
          "0x69d79Fc4Ae89E4DA80D719e26a435621F75B7f06"
        ],
        "revertedBatches": [],
        "sequencers": [
          "0xcF2898225ED05Be911D3709d9417e86E0b4Cfc8f",
          "0x2ce8B4A516ebBc8B425764a867B742F76C2244c7"
        ],
        "verifier": "0xA2Ab526e5C5491F10FC05A55F064BF9F7CEf32a0"
      },
      "derivedName": "ScrollChain"
    },
    {
      "name": "MultipleVersionRollupVerifier",
      "address": "0xA2Ab526e5C5491F10FC05A55F064BF9F7CEf32a0",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696782311,
      "values": {
        "latestVerifier": [0, "0x585DfaD7bF4099E011D185E266907A8ab60DAD2D"],
        "legacyVerifiers": [],
        "legacyVerifiersLength": 0,
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "scrollChain": "0xa13BAF47339d63B743e7Da8741db5456DAc1E556"
      },
      "derivedName": "MultipleVersionRollupVerifier"
    },
    {
      "name": "L1CustomERC20Gateway",
      "address": "0xb2b10a289A229415a124EFDeF310C10cb004B6ff",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xBAd002fB13adFfcbCba57a4d4a43886f3F4C56cb",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0xBAd002fB13adFfcbCba57a4d4a43886f3F4C56cb"],
      "sinceTimestamp": 1696782323,
      "values": {
        "counterpart": "0x64CCBE37c9A82D85A1F2E74649b7A42923067988",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
      },
      "derivedName": "L1CustomERC20Gateway"
    },
    {
      "name": "L1ERC1155Gateway",
      "address": "0xb94f7F6ABcb811c5Ac709dE14E37590fcCd975B6",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xCb4638620E4C6DeCef26374e71b0dd4871863593",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0xCb4638620E4C6DeCef26374e71b0dd4871863593"],
      "sinceTimestamp": 1696782323,
      "values": {
        "counterpart": "0x62597Cc19703aF10B58feF87B0d5D29eFE263bcc",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "L1ERC1155Gateway"
    },
    {
      "name": "EmergencyMultisig",
      "address": "0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1696661411,
      "values": {
        "domainSeparator": "0x7fefd60c480c008b3e78bd9438ded85b15722eff470797839b69ed8f36a54f6b",
        "getChainId": 1,
        "getOwners": [
          "0x0c5cc5155b346453154059aD9d2Ff695dB92f774",
          "0xEe9bb388d320F4305af6a4a1a70c862D3F4d0D5B",
          "0xFcf1f182FC79047d99e5db0d7113c0EfE2EC9402",
          "0xd7bC70ecf344C279eB78C8899Ba5538e2e3A0632",
          "0xdA66Df3920091eF4B54782B9463587c314DAdD41"
        ],
        "getThreshold": 2,
        "nonce": 61,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "L2TokenImplementationFallback",
      "address": "0xC7d86908ccf644Db7C69437D5852CedBC1aD3f69",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696927307,
      "values": {
        "owner": "0xF9062b8a30e0d7722960e305049FA50b86ba6253"
      },
      "derivedName": "Fallback"
    },
    {
      "name": "L1StandardERC20Gateway",
      "address": "0xD8A791fE2bE73eb6E6cF1eb0cb3F36adC9B3F8f9",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x9218732389D80f9b8723C3f32a38865B7a63564A",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0x9218732389D80f9b8723C3f32a38865B7a63564A"],
      "sinceTimestamp": 1696782323,
      "values": {
        "counterpart": "0xE2b4795039517653c5Ae8C2A9BFdd783b48f447A",
        "l2TokenFactory": "0x66e5312EDeEAef6e80759A0F789e7914Fb401484",
        "l2TokenImplementation": "0xC7d86908ccf644Db7C69437D5852CedBC1aD3f69",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6"
      }
    },
    {
      "name": "TimelockMid",
      "address": "0xDC1d1189Da69Ae2016E4976A43De20972D349B1b",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696782479,
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0xDC1d1189Da69Ae2016E4976A43De20972D349B1b",
              "0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe"]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 604800,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimelockController"
    },
    {
      "name": "L2StandardERC20GatewayFallback",
      "address": "0xE2b4795039517653c5Ae8C2A9BFdd783b48f447A",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696927307,
      "values": {
        "owner": "0xF9062b8a30e0d7722960e305049FA50b86ba6253"
      },
      "derivedName": "Fallback"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xEB803eb3F501998126bf37bB823646Ed3D59d072",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1696782311,
      "values": {
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6"
      }
    },
    {
      "name": "ScrollMultisig",
      "address": "0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1696660175,
      "values": {
        "domainSeparator": "0x0b2d8b018b82a6f3df3603b40beb281bc01da06566bbb8ecc16a0f0a2dbea20f",
        "getChainId": 1,
        "getOwners": [
          "0xFCf6364F5157901f533DD3615A5d8c375F13c072",
          "0xE2e6345baAD18f779167443Dc4886495507b3249",
          "0xEbbeeAA424AE904508465a41c927Be594C43Dc68",
          "0xfc31892C5500AbE00974280b28907BaA9190E384",
          "0x9337B41709c1C2B938Cb460ea3fA9DB586B172E0"
        ],
        "getThreshold": 4,
        "nonce": 3,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "L1USDCGateway",
      "address": "0xf1AF3b23DE0A5Ca3CAb7261cb0061C0D779A5c7B",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x6667123b5017AAB9945F73345848B82D7A953AA8",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0x6667123b5017AAB9945F73345848B82D7A953AA8"],
      "sinceTimestamp": 1696919351,
      "values": {
        "circleCaller": "0x0000000000000000000000000000000000000000",
        "counterpart": "0x33B60d5Dd260d453cAC3782b0bDC01ce84672142",
        "depositPaused": false,
        "l2USDC": "0x06eFdBFf2a14a7c8E15944D1F4A48F9F95F663A4",
        "messenger": "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6",
        "router": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6",
        "totalBridgedUSDC": 12152053453119,
        "withdrawPaused": false
      },
      "derivedName": "L1USDCGateway"
    },
    {
      "name": "L1GatewayRouter",
      "address": "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xb93Ac04010Bd61F45BF492022A5b49a902F798F3",
        "admin": "0xEB803eb3F501998126bf37bB823646Ed3D59d072"
      },
      "implementations": ["0xb93Ac04010Bd61F45BF492022A5b49a902F798F3"],
      "sinceTimestamp": 1696782323,
      "values": {
        "defaultERC20Gateway": "0xD8A791fE2bE73eb6E6cF1eb0cb3F36adC9B3F8f9",
        "ethGateway": "0x7F2b8C31F88B6006c382775eea88297Ec1e3E905",
        "gatewayInContext": "0x0000000000000000000000000000000000000000",
        "owner": "0x798576400F7D662961BA15C6b3F3d813447a26a6"
      },
      "derivedName": "L1GatewayRouter"
    }
  ],
  "eoas": [
    "0x0000000000000000000000000000000000000001",
    "0x06eFdBFf2a14a7c8E15944D1F4A48F9F95F663A4",
    "0x0c5cc5155b346453154059aD9d2Ff695dB92f774",
    "0x21b8a9F5a4640c3FC13E19C48e776173e1210995",
    "0x2ce8B4A516ebBc8B425764a867B742F76C2244c7",
    "0x33B60d5Dd260d453cAC3782b0bDC01ce84672142",
    "0x356483dC32B004f32Ea0Ce58F7F88879886e9074",
    "0x5300000000000000000000000000000000000004",
    "0x69d79Fc4Ae89E4DA80D719e26a435621F75B7f06",
    "0x9337B41709c1C2B938Cb460ea3fA9DB586B172E0",
    "0xcF2898225ED05Be911D3709d9417e86E0b4Cfc8f",
    "0xd7bC70ecf344C279eB78C8899Ba5538e2e3A0632",
    "0xdA66Df3920091eF4B54782B9463587c314DAdD41",
    "0xE2e6345baAD18f779167443Dc4886495507b3249",
    "0xEbbeeAA424AE904508465a41c927Be594C43Dc68",
    "0xEe9bb388d320F4305af6a4a1a70c862D3F4d0D5B",
    "0xF9062b8a30e0d7722960e305049FA50b86ba6253",
    "0xfc31892C5500AbE00974280b28907BaA9190E384",
    "0xFcf1f182FC79047d99e5db0d7113c0EfE2EC9402",
    "0xFCf6364F5157901f533DD3615A5d8c375F13c072"
  ],
  "abis": {
    "0x0d7E906BD9cAFa154b048cFa766Cc1E54E39AF9B": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x0e58939204eEDa84F796FBc86840A50af10eC4F4": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x1A658B88fD0a3c82fa1a0609fCDbD32e7dd4aB9C": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x1fcbE079c4Bbab37406daB7Dfd35AcAe37D5C55d": [
      "constructor()",
      "event DepositETH(address indexed from, address indexed to, uint256 amount, bytes data)",
      "event FinalizeWithdrawETH(address indexed from, address indexed to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundETH(address indexed recipient, uint256 amount)",
      "function counterpart() view returns (address)",
      "function depositETH(uint256 _amount, uint256 _gasLimit) payable",
      "function depositETH(address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositETHAndCall(address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function finalizeWithdrawETH(address _from, address _to, uint256 _amount, bytes _data) payable",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0x1FF1fc1BB4d1f081f6E0a7E7E3240F3ECC5B236f": [
      "constructor(address _singleton)"
    ],
    "0x259204DDd2bA29bD9b1B9A5c9B093f73d7EAcf37": [
      "constructor(address _owner)",
      "event OwnershipTransferred(address indexed _oldOwner, address indexed _newOwner)",
      "event WhitelistStatusChanged(address indexed _account, bool _status)",
      "function isSenderAllowed(address _sender) view returns (bool)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address _newOwner)",
      "function updateWhitelistStatus(address[] _accounts, bool _status)"
    ],
    "0x2E07f0FBA71709bb5e1f045b02152E45B451D75f": [
      "constructor(uint64 _chainId)",
      "event CommitBatch(uint256 indexed batchIndex, bytes32 indexed batchHash)",
      "event FinalizeBatch(uint256 indexed batchIndex, bytes32 indexed batchHash, bytes32 stateRoot, bytes32 withdrawRoot)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RevertBatch(uint256 indexed batchIndex, bytes32 indexed batchHash)",
      "event Unpaused(address account)",
      "event UpdateMaxNumTxInChunk(uint256 oldMaxNumTxInChunk, uint256 newMaxNumTxInChunk)",
      "event UpdateProver(address indexed account, bool status)",
      "event UpdateSequencer(address indexed account, bool status)",
      "event UpdateVerifier(address indexed oldVerifier, address indexed newVerifier)",
      "function addProver(address _account)",
      "function addSequencer(address _account)",
      "function commitBatch(uint8 _version, bytes _parentBatchHeader, bytes[] _chunks, bytes _skippedL1MessageBitmap)",
      "function committedBatches(uint256) view returns (bytes32)",
      "function finalizeBatchWithProof(bytes _batchHeader, bytes32 _prevStateRoot, bytes32 _postStateRoot, bytes32 _withdrawRoot, bytes _aggrProof)",
      "function finalizedStateRoots(uint256) view returns (bytes32)",
      "function importGenesisBatch(bytes _batchHeader, bytes32 _stateRoot)",
      "function initialize(address _messageQueue, address _verifier, uint256 _maxNumTxInChunk)",
      "function isBatchFinalized(uint256 _batchIndex) view returns (bool)",
      "function isProver(address) view returns (bool)",
      "function isSequencer(address) view returns (bool)",
      "function lastFinalizedBatchIndex() view returns (uint256)",
      "function layer2ChainId() view returns (uint64)",
      "function maxNumTxInChunk() view returns (uint256)",
      "function messageQueue() view returns (address)",
      "function owner() view returns (address)",
      "function paused() view returns (bool)",
      "function removeProver(address _account)",
      "function removeSequencer(address _account)",
      "function renounceOwnership()",
      "function revertBatch(bytes _batchHeader, uint256 _count)",
      "function setPause(bool _status)",
      "function transferOwnership(address newOwner)",
      "function updateMaxNumTxInChunk(uint256 _maxNumTxInChunk)",
      "function updateVerifier(address _newVerifier)",
      "function verifier() view returns (address)",
      "function withdrawRoots(uint256) view returns (bytes32)"
    ],
    "0x585DfaD7bF4099E011D185E266907A8ab60DAD2D": [
      "constructor(address _verifier)",
      "error VerificationFailed()",
      "function plonkVerifier() view returns (address)",
      "function verify(bytes aggrProof, bytes32 publicInputHash) view"
    ],
    "0x62597Cc19703aF10B58feF87B0d5D29eFE263bcc": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function execute(address _target, bytes _data) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function withdraw(address _token, uint256 _amount, address _recipient)"
    ],
    "0x6260aF48e8948617b8FA17F4e5CEa2d21D21554B": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x642af405bF64660665B37977449C9C536B806318": [
      "constructor()",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event UpdateFeeVault(address _oldFeeVault, address _newFeeVault)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function feeVault() view returns (address)",
      "function initialize(address _queue, address _feeVault)",
      "function messageQueue() view returns (address)",
      "function nonces(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function paused() view returns (bool)",
      "function renounceOwnership()",
      "function sendTransaction(address _target, uint256 _value, uint256 _gasLimit, bytes _data) payable",
      "function sendTransaction(address _sender, address _target, uint256 _value, uint256 _gasLimit, bytes _data, uint256 _deadline, bytes _signature, address _refundAddress) payable",
      "function setPause(bool _status)",
      "function transferOwnership(address newOwner)",
      "function updateFeeVault(address _newFeeVault)"
    ],
    "0x64CCBE37c9A82D85A1F2E74649b7A42923067988": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function execute(address _target, bytes _data) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function withdraw(address _token, uint256 _amount, address _recipient)"
    ],
    "0x6667123b5017AAB9945F73345848B82D7A953AA8": [
      "constructor(address _l1USDC, address _l2USDC)",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "function burnAllLockedUSDC()",
      "function circleCaller() view returns (address)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function depositPaused() view returns (bool)",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address) view returns (address)",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function l1USDC() view returns (address)",
      "function l2USDC() view returns (address)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function pauseDeposit(bool _paused)",
      "function pauseWithdraw(bool _paused)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function totalBridgedUSDC() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function updateCircleCaller(address _caller)",
      "function withdrawPaused() view returns (bool)"
    ],
    "0x66e5312EDeEAef6e80759A0F789e7914Fb401484": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function execute(address _target, bytes _data) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function withdraw(address _token, uint256 _amount, address _recipient)"
    ],
    "0x6774Bcbd5ceCeF1336b5300fb5186a12DDD8b367": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x6EA73e05AdC79974B931123675ea8F78FfdacDF0": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function execute(address _target, bytes _data) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function withdraw(address _token, uint256 _amount, address _recipient)"
    ],
    "0x7003E7B7186f0E6601203b99F7B8DECBfA391cf9": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function execute(address _target, bytes _data) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function withdraw(address _token, uint256 _amount, address _recipient)"
    ],
    "0x72CAcBcfDe2d1e19122F8A36a4d6676cd39d7A5d": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x781e90f1c8Fc4611c9b7497C3B47F99Ef6969CbC": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function execute(address _target, bytes _data) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function withdraw(address _token, uint256 _amount, address _recipient)"
    ],
    "0x798576400F7D662961BA15C6b3F3d813447a26a6": [
      "constructor()",
      "event GrantAccess(bytes32 indexed role, address indexed target, bytes4[] selectors)",
      "event RevokeAccess(bytes32 indexed role, address indexed target, bytes4[] selectors)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function callableRoles(address _target, bytes4 _selector) view returns (bytes32[] _roles)",
      "function execute(address _target, uint256 _value, bytes _data, bytes32 _role) payable",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getRoleMember(bytes32 role, uint256 index) view returns (address)",
      "function getRoleMemberCount(bytes32 role) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateAccess(address _target, bytes4[] _selectors, bytes32 _role, bool _status)"
    ],
    "0x7AC440cAe8EB6328de4fA621163a792c1EA9D4fE": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x7bC08E1c04fb41d75F1410363F0c5746Eae80582": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function execute(address _target, bytes _data) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function withdraw(address _token, uint256 _amount, address _recipient)"
    ],
    "0x7F2b8C31F88B6006c382775eea88297Ec1e3E905": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x8FA3b4570B4C96f8036C13b64971BA65867eEB48": [
      "constructor(address _singleton)"
    ],
    "0x9218732389D80f9b8723C3f32a38865B7a63564A": [
      "constructor()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address _l1Token) view returns (address)",
      "function initialize(address _counterpart, address _router, address _messenger, address _l2TokenImplementation, address _l2TokenFactory)",
      "function l2TokenFactory() view returns (address)",
      "function l2TokenImplementation() view returns (address)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0x987e300fDfb06093859358522a79098848C33852": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xa13BAF47339d63B743e7Da8741db5456DAc1E556": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xA2Ab526e5C5491F10FC05A55F064BF9F7CEf32a0": [
      "constructor(address _verifier)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event UpdateVerifier(uint256 startBatchIndex, address verifier)",
      "function getVerifier(uint256 _batchIndex) view returns (address)",
      "function initialize(address _scrollChain)",
      "function latestVerifier() view returns (uint64 startBatchIndex, address verifier)",
      "function legacyVerifiers(uint256) view returns (uint64 startBatchIndex, address verifier)",
      "function legacyVerifiersLength() view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function scrollChain() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateVerifier(uint64 _startBatchIndex, address _verifier)",
      "function verifyAggregateProof(uint256 _batchIndex, bytes _aggrProof, bytes32 _publicInputHash) view"
    ],
    "0xAf2F898a8680cb52766ABE0588ebe6b9bFe37845": [
      "constructor()",
      "event FailedRelayedMessage(bytes32 indexed messageHash)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RelayedMessage(bytes32 indexed messageHash)",
      "event SentMessage(address indexed sender, address indexed target, uint256 value, uint256 messageNonce, uint256 gasLimit, bytes message)",
      "event Unpaused(address account)",
      "event UpdateFeeVault(address _oldFeeVault, address _newFeeVault)",
      "event UpdateMaxReplayTimes(uint256 oldMaxReplayTimes, uint256 newMaxReplayTimes)",
      "function counterpart() view returns (address)",
      "function dropMessage(address _from, address _to, uint256 _value, uint256 _messageNonce, bytes _message)",
      "function feeVault() view returns (address)",
      "function initialize(address _counterpart, address _feeVault, address _rollup, address _messageQueue)",
      "function isL1MessageDropped(bytes32) view returns (bool)",
      "function isL2MessageExecuted(bytes32) view returns (bool)",
      "function maxReplayTimes() view returns (uint256)",
      "function messageQueue() view returns (address)",
      "function messageSendTimestamp(bytes32) view returns (uint256)",
      "function owner() view returns (address)",
      "function paused() view returns (bool)",
      "function prevReplayIndex(uint256) view returns (uint256)",
      "function relayMessageWithProof(address _from, address _to, uint256 _value, uint256 _nonce, bytes _message, tuple(uint256 batchIndex, bytes merkleProof) _proof)",
      "function renounceOwnership()",
      "function replayMessage(address _from, address _to, uint256 _value, uint256 _messageNonce, bytes _message, uint32 _newGasLimit, address _refundAddress) payable",
      "function replayStates(bytes32) view returns (uint128 times, uint128 lastIndex)",
      "function rollup() view returns (address)",
      "function sendMessage(address _to, uint256 _value, bytes _message, uint256 _gasLimit, address _refundAddress) payable",
      "function sendMessage(address _to, uint256 _value, bytes _message, uint256 _gasLimit) payable",
      "function setPause(bool _status)",
      "function transferOwnership(address newOwner)",
      "function updateFeeVault(address _newFeeVault)",
      "function updateMaxReplayTimes(uint256 _newMaxReplayTimes)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0xb2b10a289A229415a124EFDeF310C10cb004B6ff": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xb93Ac04010Bd61F45BF492022A5b49a902F798F3": [
      "constructor()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event DepositETH(address indexed from, address indexed to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawETH(address indexed from, address indexed to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "event RefundETH(address indexed recipient, uint256 amount)",
      "event SetDefaultERC20Gateway(address indexed oldDefaultERC20Gateway, address indexed newDefaultERC20Gateway)",
      "event SetERC20Gateway(address indexed token, address indexed oldGateway, address indexed newGateway)",
      "event SetETHGateway(address indexed oldETHGateway, address indexed newEthGateway)",
      "function ERC20Gateway(address) view returns (address)",
      "function defaultERC20Gateway() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function depositETH(uint256 _amount, uint256 _gasLimit) payable",
      "function depositETH(address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositETHAndCall(address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function ethGateway() view returns (address)",
      "function finalizeWithdrawERC20(address, address, address, address, uint256, bytes) payable",
      "function finalizeWithdrawETH(address, address, uint256, bytes) payable",
      "function gatewayInContext() view returns (address)",
      "function getERC20Gateway(address _token) view returns (address)",
      "function getL2ERC20Address(address _l1Address) view returns (address)",
      "function initialize(address _ethGateway, address _defaultERC20Gateway)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function requestERC20(address _sender, address _token, uint256 _amount) returns (uint256)",
      "function setDefaultERC20Gateway(address _newDefaultERC20Gateway)",
      "function setERC20Gateway(address[] _tokens, address[] _gateways)",
      "function setETHGateway(address _newEthGateway)",
      "function transferOwnership(address newOwner)"
    ],
    "0xb94f7F6ABcb811c5Ac709dE14E37590fcCd975B6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xBAd002fB13adFfcbCba57a4d4a43886f3F4C56cb": [
      "constructor()",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "event UpdateTokenMapping(address indexed l1Token, address indexed oldL2Token, address indexed newL2Token)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address _l1Token) view returns (address)",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function tokenMapping(address) view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateTokenMapping(address _l1Token, address _l2Token)"
    ],
    "0xBC9D741501A20F962756C95BF906b4abffadcf8F": [
      "constructor()",
      "event DequeueTransaction(uint256 startIndex, uint256 count, uint256 skippedBitmap)",
      "event DropTransaction(uint256 index)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event QueueTransaction(address indexed sender, address indexed target, uint256 value, uint64 queueIndex, uint256 gasLimit, bytes data)",
      "event UpdateEnforcedTxGateway(address indexed _oldGateway, address indexed _newGateway)",
      "event UpdateGasOracle(address indexed _oldGasOracle, address indexed _newGasOracle)",
      "event UpdateMaxGasLimit(uint256 _oldMaxGasLimit, uint256 _newMaxGasLimit)",
      "function appendCrossDomainMessage(address _target, uint256 _gasLimit, bytes _data)",
      "function appendEnforcedTransaction(address _sender, address _target, uint256 _value, uint256 _gasLimit, bytes _data)",
      "function calculateIntrinsicGasFee(bytes _calldata) view returns (uint256)",
      "function computeTransactionHash(address _sender, uint256 _queueIndex, uint256 _value, address _target, uint256 _gasLimit, bytes _data) pure returns (bytes32)",
      "function dropCrossDomainMessage(uint256 _index)",
      "function enforcedTxGateway() view returns (address)",
      "function estimateCrossDomainMessageFee(uint256 _gasLimit) view returns (uint256)",
      "function gasOracle() view returns (address)",
      "function getCrossDomainMessage(uint256 _queueIndex) view returns (bytes32)",
      "function initialize(address _messenger, address _scrollChain, address _enforcedTxGateway, address _gasOracle, uint256 _maxGasLimit)",
      "function isMessageDropped(uint256 _queueIndex) view returns (bool)",
      "function isMessageSkipped(uint256 _queueIndex) view returns (bool)",
      "function maxGasLimit() view returns (uint256)",
      "function messageQueue(uint256) view returns (bytes32)",
      "function messenger() view returns (address)",
      "function nextCrossDomainMessageIndex() view returns (uint256)",
      "function owner() view returns (address)",
      "function pendingQueueIndex() view returns (uint256)",
      "function popCrossDomainMessage(uint256 _startIndex, uint256 _count, uint256 _skippedBitmap)",
      "function renounceOwnership()",
      "function scrollChain() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateEnforcedTxGateway(address _newGateway)",
      "function updateGasOracle(address _newGasOracle)",
      "function updateMaxGasLimit(uint256 _newMaxGasLimit)"
    ],
    "0xbdA143d49da40C2cDA27c40edfBbe8A0D4AE0cBc": [
      "constructor(address _singleton)"
    ],
    "0xC7d86908ccf644Db7C69437D5852CedBC1aD3f69": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function execute(address _target, bytes _data) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function withdraw(address _token, uint256 _amount, address _recipient)"
    ],
    "0xCb4638620E4C6DeCef26374e71b0dd4871863593": [
      "constructor()",
      "event BatchDepositERC1155(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256[] _tokenIds, uint256[] _amounts)",
      "event BatchRefundERC1155(address indexed token, address indexed recipient, uint256[] tokenIds, uint256[] amounts)",
      "event DepositERC1155(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _tokenId, uint256 _amount)",
      "event FinalizeBatchWithdrawERC1155(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256[] _tokenIds, uint256[] _amounts)",
      "event FinalizeWithdrawERC1155(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _tokenId, uint256 _amount)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC1155(address indexed token, address indexed recipient, uint256 tokenId, uint256 amount)",
      "event UpdateTokenMapping(address indexed l1Token, address indexed oldL2Token, address indexed newL2Token)",
      "function batchDepositERC1155(address _token, uint256[] _tokenIds, uint256[] _amounts, uint256 _gasLimit) payable",
      "function batchDepositERC1155(address _token, address _to, uint256[] _tokenIds, uint256[] _amounts, uint256 _gasLimit) payable",
      "function counterpart() view returns (address)",
      "function depositERC1155(address _token, address _to, uint256 _tokenId, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC1155(address _token, uint256 _tokenId, uint256 _amount, uint256 _gasLimit) payable",
      "function finalizeBatchWithdrawERC1155(address _l1Token, address _l2Token, address _from, address _to, uint256[] _tokenIds, uint256[] _amounts)",
      "function finalizeWithdrawERC1155(address _l1Token, address _l2Token, address _from, address _to, uint256 _tokenId, uint256 _amount)",
      "function initialize(address _counterpart, address _messenger)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function tokenMapping(address) view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateTokenMapping(address _l1Token, address _l2Token)"
    ],
    "0xd3c42158682D55E082EaBe08a29F7515A97cA307": [
      "constructor(address _WETH, address _l2WETH)",
      "event DepositERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event FinalizeWithdrawERC20(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC20(address indexed token, address indexed recipient, uint256 amount)",
      "function WETH() view returns (address)",
      "function counterpart() view returns (address)",
      "function depositERC20(address _token, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20(address _token, address _to, uint256 _amount, uint256 _gasLimit) payable",
      "function depositERC20AndCall(address _token, address _to, uint256 _amount, bytes _data, uint256 _gasLimit) payable",
      "function finalizeWithdrawERC20(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getL2ERC20Address(address) view returns (address)",
      "function initialize(address _counterpart, address _router, address _messenger)",
      "function l2WETH() view returns (address)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xD8A791fE2bE73eb6E6cF1eb0cb3F36adC9B3F8f9": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xDC1d1189Da69Ae2016E4976A43De20972D349B1b": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0xDE3be7C2AA151D1E152DDfcBf0962FcDf5323DAe": [
      "constructor()",
      "event BatchDepositERC721(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256[] _tokenIds)",
      "event BatchRefundERC721(address indexed token, address indexed recipient, uint256[] tokenIds)",
      "event DepositERC721(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _tokenId)",
      "event FinalizeBatchWithdrawERC721(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256[] _tokenIds)",
      "event FinalizeWithdrawERC721(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _tokenId)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RefundERC721(address indexed token, address indexed recipient, uint256 tokenId)",
      "event UpdateTokenMapping(address indexed l1Token, address indexed oldL2Token, address indexed newL2Token)",
      "function batchDepositERC721(address _token, address _to, uint256[] _tokenIds, uint256 _gasLimit) payable",
      "function batchDepositERC721(address _token, uint256[] _tokenIds, uint256 _gasLimit) payable",
      "function counterpart() view returns (address)",
      "function depositERC721(address _token, address _to, uint256 _tokenId, uint256 _gasLimit) payable",
      "function depositERC721(address _token, uint256 _tokenId, uint256 _gasLimit) payable",
      "function finalizeBatchWithdrawERC721(address _l1Token, address _l2Token, address _from, address _to, uint256[] _tokenIds)",
      "function finalizeWithdrawERC721(address _l1Token, address _l2Token, address _from, address _to, uint256 _tokenId)",
      "function initialize(address _counterpart, address _messenger)",
      "function messenger() view returns (address)",
      "function onDropMessage(bytes _message) payable",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function router() view returns (address)",
      "function tokenMapping(address) view returns (address)",
      "function transferOwnership(address newOwner)",
      "function updateTokenMapping(address _l1Token, address _l2Token)"
    ],
    "0xE2b4795039517653c5Ae8C2A9BFdd783b48f447A": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function execute(address _target, bytes _data) payable",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function withdraw(address _token, uint256 _amount, address _recipient)"
    ],
    "0xEB803eb3F501998126bf37bB823646Ed3D59d072": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xEfc9D1096fb65c832207E5e7F13C2D1102244dbe": [
      "constructor(address _singleton)"
    ],
    "0xf1AF3b23DE0A5Ca3CAb7261cb0061C0D779A5c7B": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xF8B1378579659D8F7EE5f3C929c2f3E332E41Fd6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xfDF1eE0098168eaa61BF87Db68C39c85151a4E9E": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event IntrinsicParamsUpdated(uint256 txGas, uint256 txGasContractCreation, uint256 zeroGas, uint256 nonZeroGas)",
      "event L2BaseFeeUpdated(uint256 oldL2BaseFee, uint256 newL2BaseFee)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event UpdateWhitelist(address _oldWhitelist, address _newWhitelist)",
      "function calculateIntrinsicGasFee(bytes _message) view returns (uint256)",
      "function estimateCrossDomainMessageFee(uint256 _gasLimit) view returns (uint256)",
      "function initialize(uint64 _txGas, uint64 _txGasContractCreation, uint64 _zeroGas, uint64 _nonZeroGas)",
      "function intrinsicParams() view returns (uint64 txGas, uint64 txGasContractCreation, uint64 zeroGas, uint64 nonZeroGas)",
      "function l2BaseFee() view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setIntrinsicParams(uint64 _txGas, uint64 _txGasContractCreation, uint64 _zeroGas, uint64 _nonZeroGas)",
      "function setL2BaseFee(uint256 _newL2BaseFee)",
      "function transferOwnership(address newOwner)",
      "function updateWhitelist(address _newWhitelist)",
      "function whitelist() view returns (address)"
    ]
  }
}
