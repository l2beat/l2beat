{
  "name": "xdai",
  "chain": "ethereum",
  "blockNumber": 21429285,
  "configHash": "0x59ffd13a471a781fe21e38e7e993c0f120a7cb7c91414a2d694aa5b8f3b8327d",
  "contracts": [
    {
      "name": "Unitroller",
      "address": "0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B",
      "sourceHashes": [
        "0x93e7b06711b20eb09e1ef39a6ce1cdfb32c906612442c2c31590ab8d5495c920"
      ],
      "sinceTimestamp": 1557191237,
      "values": {
        "$immutable": true,
        "admin": "0x6d903f6003cca6255D85CcA4D3B5E5146dC33925",
        "comptrollerImplementation": "0xBafE01ff935C7305907c33BF824352eE5979B526",
        "pendingAdmin": "0x0000000000000000000000000000000000000000",
        "pendingComptrollerImplementation": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "GnosisBridgeGovernanceMultisig",
      "address": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0xd5a33441170541b7df25812e0e3dff6562b2f09ab835a6b431cb9e7198a47605",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016"
        },
        {
          "permission": "upgrade",
          "target": "0xe1579dEbdD2DF16Ebdb9db8694391fa74EeA201E"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1600956399,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43",
          "0xb8173f558f75EE263013fd6294177bf75279a21e",
          "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992",
          "0xf59E447E97bC03c2B0C5719e2E551F0B15b724e5",
          "0xA07888742c18d7e658132AE0148fF205fFF46481",
          "0x1685324Bf373670ad5C9c56bd88A1dc1C063b0f9",
          "0x0101016044726994aFd16f4A99f0d960090D35e7",
          "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893",
          "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8",
          "0x839395e20bbB182fa440d08F850E6c7A8f6F0780",
          "0xd945325557f1FB4374fBf10Ae86D385632Df870A",
          "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd",
          "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97",
          "0xd26a3F686D43f2A62BA9eaE2ff77e9f516d945B9",
          "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B",
          "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54"
        ],
        "$threshold": 8,
        "domainSeparator": "0x877c70937e5670b3f50eb943a4e9d65fbd9bc8ce060659a7dc0543885a0ca59e",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "8 of 16 (50%)",
        "nonce": 84,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "SDaiForeignBridge",
      "address": "0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016",
      "sourceHashes": [
        "0x781decea1d7b5174464b57449f32ada83d1c1b7e12bdfa47eb9d00a41a36c839",
        "0xc9e17870eb8594989459b35217d292000a746beaf237f82e703d3de4b55cc4d2"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["maxAvailablePerTx"],
      "sinceTimestamp": 1539028166,
      "values": {
        "$admin": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "$implementation": "0x166124b75c798Cedf1B43655E9B5284eBd5203DB",
        "$pastUpgrades": [
          [
            "2018-10-08T19:50:23.000Z",
            "0x01d8eeea7ea146970fb4fbe8991d6118f8f41a779b06c69041d32362575f1eda",
            ["0x710d6eC2b0948dEf1f423Ec77B51b6a55847D2C5"]
          ],
          [
            "2018-12-19T12:49:42.000Z",
            "0x29fdf4418b3ab5b5380e7ad0259278b1bbab18e121438c9c9d69ac6091f44a00",
            ["0x0D3726e5a9f37234D6B55216fC971D30F150a60F"]
          ],
          [
            "2019-12-25T13:53:49.000Z",
            "0x003ae91dc06c549cc28cdf47294abeb545577e119b98f6b6e631940a744a3356",
            ["0x75Df5AF045d91108662D8080fD1FEFAd6aA0bb59"]
          ],
          [
            "2020-03-31T11:16:05.000Z",
            "0x9f50cee64b4e729b7bd61630ed174ea3c7e47e3db1403d9828a9736b2ad7ce79",
            ["0xd40355B17643Bc26554c9A9BBC95b5CAbd92C2CD"]
          ],
          [
            "2020-04-16T15:59:27.000Z",
            "0xd0c3c92c94e05bc71256055ce8c4c993e047f04e04f3283a04e4cb077b71f6c6",
            ["0x83c2E0E3B5328E599a3cBa95d97090fA7d0FDE8b"]
          ],
          [
            "2020-05-12T14:05:38.000Z",
            "0x0f8ee640cb733e48ef1011554cb36945492f8cd40b5111417d1f54f30633f986",
            ["0x7E7669bdff02F2eE75b68B91FB81c2B38F9228C2"]
          ],
          [
            "2021-10-06T18:49:32.000Z",
            "0xb4afa1efcf12ba7907458062704efcc5658af3da5d36a4b4d4035af431d9df19",
            ["0xEeE4f8dB4410beBD74A76cB711D096c5E66d0473"]
          ],
          [
            "2023-09-20T07:33:35.000Z",
            "0x291d48fdfd430165b2b7f62c3ae806ea28ab34b4dc8a2e4d7d01693f19b780c9",
            ["0x166124b75c798Cedf1B43655E9B5284eBd5203DB"]
          ]
        ],
        "$upgradeCount": 8,
        "dailyLimit": "10000000000000000000000000",
        "daiToken": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "decimalShift": 0,
        "deployedAtBlock": 6478428,
        "erc20token": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "executionDailyLimit": "15000000000000000000000000",
        "executionMaxPerTx": "10000000000000000000000000",
        "gasPrice": 100000000000,
        "getBridgeInterfacesVersion": { "major": 6, "minor": 1, "patch": 0 },
        "getBridgeMode": "0x18762d46",
        "getTrustedForwarder": "0x0000000000000000000000000000000000000000",
        "implementation": "0x166124b75c798Cedf1B43655E9B5284eBd5203DB",
        "isInitialized": true,
        "maxAvailablePerTx": "9865603079013541013696953",
        "maxPerTx": "9999999000000000000000000",
        "minPerTx": 5000000000000000,
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "proxyOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "requiredBlockConfirmations": 20,
        "requiredSignatures": 4,
        "sDaiToken": "0x83F20F44975D03b1b09e64809B757c47f942BEeA",
        "upgradeabilityOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "validatorContract": "0xe1579dEbdD2DF16Ebdb9db8694391fa74EeA201E",
        "version": 8,
        "versionRecipient": "1.0.1"
      },
      "derivedName": "XDaiForeignBridge"
    },
    {
      "name": "GnosisSafe",
      "address": "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1686042107,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xD1aA7F557af9cC5Ba4Daf87D923d712fdAf1D709",
          "0x4743BA328C28dbC2b8B4e083b92cB4baA047494b",
          "0x3b3Cd747Ab7bf2BE3b950693deeDe8a0B96C4fF0"
        ],
        "$threshold": 2,
        "domainSeparator": "0xaee10730379a3d6df2303789b1843342698bd85d618cdf13a5f75b84e16d88eb",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 3 (67%)",
        "nonce": 16,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "Timelock",
      "address": "0x6d903f6003cca6255D85CcA4D3B5E5146dC33925",
      "sourceHashes": [
        "0xe3b901cb5aa1c82bbd5408f2a10b05f9a2b9f5bfd5521f848d92e119b3467acd"
      ],
      "sinceTimestamp": 1570830762,
      "values": {
        "$immutable": true,
        "admin": "0xc0Da02939E1441F497fd74F78cE7Decb17B66529",
        "delay": 172800,
        "GRACE_PERIOD": 1209600,
        "MAXIMUM_DELAY": 2592000,
        "MINIMUM_DELAY": 172800,
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "GovernorBravoDelegate",
      "address": "0x6F6e4785c97885d26466945055d4Ae8931bE6f7a",
      "sourceHashes": [
        "0xe12f0a355d23057435bbc528c9daf0ce020af3320436f84b9fe25e1d99a15318"
      ],
      "sinceTimestamp": 1723235891,
      "values": {
        "$immutable": true,
        "admin": "0x0000000000000000000000000000000000000000",
        "BALLOT_TYPEHASH": "0x150214d74d59b7d1e90c73fc22ef3d991dd0a76b046543d4d80ab92d2a50328f",
        "BALLOT_WITH_REASON_TYPEHASH": "0x61550a894bd041be3cb7ce7ed747abee6eca83842eee10ff98891711d55a697f",
        "comp": "0x0000000000000000000000000000000000000000",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "implementation": "0x0000000000000000000000000000000000000000",
        "initialProposalId": 0,
        "MAX_PROPOSAL_THRESHOLD": "100000000000000000000000",
        "MAX_VOTING_DELAY": 40320,
        "MAX_VOTING_PERIOD": 80640,
        "MIN_PROPOSAL_THRESHOLD": "1000000000000000000000",
        "MIN_VOTING_DELAY": 1,
        "MIN_VOTING_PERIOD": 5760,
        "name": "Compound Governor Bravo",
        "pendingAdmin": "0x0000000000000000000000000000000000000000",
        "PROPOSAL_TYPEHASH": "0x57d9fd6239d20c73142a900e416ed61133538fe1307d003c08333cfe81794c2a",
        "proposalCount": 0,
        "proposalGuardian": {
          "account": "0x0000000000000000000000000000000000000000",
          "expiration": 0
        },
        "proposalMaxOperations": 10,
        "proposalThreshold": 0,
        "quorumVotes": "400000000000000000000000",
        "state": [],
        "timelock": "0x0000000000000000000000000000000000000000",
        "votingDelay": 0,
        "votingPeriod": 0,
        "whitelistGuardian": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "GovernorBravoDelegate"
    },
    {
      "name": "Comptroller",
      "address": "0xBafE01ff935C7305907c33BF824352eE5979B526",
      "sourceHashes": [
        "0x626b76e9fccba33d81b68c33a97685786202185b7d35d6fba6d5817e7d917907"
      ],
      "sinceTimestamp": 1633988477,
      "values": {
        "_borrowGuardianPaused": false,
        "_mintGuardianPaused": false,
        "$immutable": true,
        "admin": "0xA8F4514E4dB0cE95E30142cC8bAa5E6c921e16a5",
        "allMarkets": [],
        "borrowCapGuardian": "0x0000000000000000000000000000000000000000",
        "closeFactorMantissa": 0,
        "compInitialIndex": "1000000000000000000000000000000000000",
        "compRate": 0,
        "comptrollerImplementation": "0x0000000000000000000000000000000000000000",
        "getAllMarkets": [],
        "getCompAddress": "0xc00e94Cb662C3520282E6f5717214004A7f26888",
        "isComptroller": true,
        "liquidationIncentiveMantissa": 0,
        "maxAssets": 0,
        "oracle": "0x0000000000000000000000000000000000000000",
        "pauseGuardian": "0x0000000000000000000000000000000000000000",
        "pendingAdmin": "0x0000000000000000000000000000000000000000",
        "pendingComptrollerImplementation": "0x0000000000000000000000000000000000000000",
        "proposal65FixExecuted": false,
        "seizeGuardianPaused": false,
        "transferGuardianPaused": false
      },
      "derivedName": "Comptroller"
    },
    {
      "name": "Comp",
      "address": "0xc00e94Cb662C3520282E6f5717214004A7f26888",
      "sourceHashes": [
        "0xface33f588d07cf7b8c64c6200efc11c45d45332a47c27e8c49859d6bc5c8001"
      ],
      "sinceTimestamp": 1583280535,
      "values": {
        "$immutable": true,
        "decimals": 18,
        "DELEGATION_TYPEHASH": "0xe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "name": "Compound",
        "symbol": "COMP",
        "totalSupply": "10000000000000000000000000"
      }
    },
    {
      "name": "GovernorBravoDelegator",
      "address": "0xc0Da02939E1441F497fd74F78cE7Decb17B66529",
      "sourceHashes": [
        "0xabbf3599e76eb3f332639e8a5e77266e05665e1afda44c92cd6c8be997a70c2c"
      ],
      "sinceTimestamp": 1615316879,
      "values": {
        "$immutable": true,
        "admin": "0x6d903f6003cca6255D85CcA4D3B5E5146dC33925",
        "implementation": "0x6F6e4785c97885d26466945055d4Ae8931bE6f7a",
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "BridgeValidators",
      "address": "0xe1579dEbdD2DF16Ebdb9db8694391fa74EeA201E",
      "sourceHashes": [
        "0x781decea1d7b5174464b57449f32ada83d1c1b7e12bdfa47eb9d00a41a36c839",
        "0x7123b263360e368977fbfb7da550817b9a4807849090a69d6415b0b1bb33b398"
      ],
      "proxyType": "Eternal Storage proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
          "via": []
        }
      ],
      "sinceTimestamp": 1539028018,
      "values": {
        "$admin": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "$implementation": "0x6943A218d58135793F1FE619414eD476C37ad65a",
        "$pastUpgrades": [
          [
            "2018-10-08T19:48:08.000Z",
            "0x6dbedab00bc4840c459ba44c856c3aa1e7be5acd0c4a4602620a457979e7c4ee",
            ["0xd760E016226836cC02E329aDDBB6821945Dd5100"]
          ],
          [
            "2019-12-25T13:53:35.000Z",
            "0x721841ce7ca52a0a5ed23f1f4093fdd1dac4e538bcace263f0b59008885d2f34",
            ["0x6943A218d58135793F1FE619414eD476C37ad65a"]
          ]
        ],
        "$upgradeCount": 2,
        "deployedAtBlock": 6478417,
        "F_ADDR": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF",
        "getBridgeValidatorsInterfacesVersion": {
          "major": 2,
          "minor": 3,
          "patch": 0
        },
        "implementation": "0x6943A218d58135793F1FE619414eD476C37ad65a",
        "isInitialized": true,
        "owner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "proxyOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "requiredSignatures": 4,
        "upgradeabilityOwner": "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6",
        "validatorCount": 7,
        "validatorList": [
          "0x90776017057b84bc47D7e7383b65C463C80a6cdd",
          "0xfA98B60E02A61B6590f073cAD56e68326652d094",
          "0x97630E2aE609D4104aBdA91F3066C556403182dd",
          "0x587C0d02B40822f15f05301d87c16f6a08AaDDde",
          "0x1312E98995bbCc30fc63Db3cef807e20CDd33dca",
          "0x4D1c96B9A49C4469A0b720a22b74b034EDdFe051",
          "0xc073C8E5ED9Aa11CF6776C69b3e13b259Ba9F506"
        ],
        "version": 2
      },
      "derivedName": "BridgeValidators"
    },
    {
      "name": "DaiForeignBridge",
      "address": "0xEeE4f8dB4410beBD74A76cB711D096c5E66d0473",
      "sourceHashes": [
        "0xcb87e015ffbef1673d8778ea9b1172914c7fc9f9c57dc71e126ad5b0fb9bda62"
      ],
      "sinceTimestamp": 1633444035,
      "values": {
        "$immutable": true,
        "cDaiToken": "0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643",
        "compToken": "0xc00e94Cb662C3520282E6f5717214004A7f26888",
        "comptroller": "0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B",
        "dailyLimit": 0,
        "daiToken": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "decimalShift": 0,
        "deployedAtBlock": 0,
        "erc20token": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "executionDailyLimit": 0,
        "executionMaxPerTx": 0,
        "gasPrice": 0,
        "getBridgeInterfacesVersion": { "major": 6, "minor": 1, "patch": 0 },
        "getBridgeMode": "0x18762d46",
        "getTrustedForwarder": "0x0000000000000000000000000000000000000000",
        "isInitialized": false,
        "maxAvailablePerTx": 0,
        "maxPerTx": 0,
        "minPerTx": 0,
        "owner": "0x0000000000000000000000000000000000000000",
        "requiredBlockConfirmations": 0,
        "requiredSignatures": "EXPECT_REVERT",
        "validatorContract": "0x0000000000000000000000000000000000000000",
        "versionRecipient": "1.0.1"
      },
      "derivedName": "XDaiForeignBridge"
    }
  ],
  "eoas": [
    { "address": "0x0000000000000000000000000000000000000000" },
    { "address": "0x0101016044726994aFd16f4A99f0d960090D35e7" },
    { "address": "0x10DD75875a2a8a284529Ae7223B1aCE410d606bd" },
    { "address": "0x1312E98995bbCc30fc63Db3cef807e20CDd33dca" },
    { "address": "0x1685324Bf373670ad5C9c56bd88A1dc1C063b0f9" },
    { "address": "0x3b3Cd747Ab7bf2BE3b950693deeDe8a0B96C4fF0" },
    { "address": "0x4743BA328C28dbC2b8B4e083b92cB4baA047494b" },
    { "address": "0x4D1c96B9A49C4469A0b720a22b74b034EDdFe051" },
    { "address": "0x57B11cC8F93f2cfeC4c1C5B95213f17cAD81332B" },
    { "address": "0x587C0d02B40822f15f05301d87c16f6a08AaDDde" },
    { "address": "0x5b10cE4DDD27F57d4D432D409A5321219cbA7893" },
    { "address": "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54" },
    { "address": "0x80BA18503a1Fa16Ea22F3ef1Af23e2994EaC1d97" },
    { "address": "0x839395e20bbB182fa440d08F850E6c7A8f6F0780" },
    { "address": "0x90776017057b84bc47D7e7383b65C463C80a6cdd" },
    { "address": "0x97630E2aE609D4104aBdA91F3066C556403182dd" },
    { "address": "0xA07888742c18d7e658132AE0148fF205fFF46481" },
    { "address": "0xA8F4514E4dB0cE95E30142cC8bAa5E6c921e16a5" },
    { "address": "0xb8173f558f75EE263013fd6294177bf75279a21e" },
    { "address": "0xc073C8E5ED9Aa11CF6776C69b3e13b259Ba9F506" },
    { "address": "0xc44caeb7F0724A156806664d2361fD6f32a2d2C8" },
    { "address": "0xD1aA7F557af9cC5Ba4Daf87D923d712fdAf1D709" },
    { "address": "0xd26a3F686D43f2A62BA9eaE2ff77e9f516d945B9" },
    { "address": "0xd945325557f1FB4374fBf10Ae86D385632Df870A" },
    { "address": "0xDdf2d07267EAF2cE3E13ee4319bE1F34D55ed992" },
    { "address": "0xf59E447E97bC03c2B0C5719e2E551F0B15b724e5" },
    { "address": "0xfA98B60E02A61B6590f073cAD56e68326652d094" },
    { "address": "0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF" }
  ],
  "abis": {
    "0x166124b75c798Cedf1B43655E9B5284eBd5203DB": [
      "function relayTokens(address _receiver, uint256 _amount)",
      "function invest(address _token)",
      "function refillBridge()",
      "function payInterest(address _token, uint256 _amount)",
      "function erc20token() view returns (address)",
      "function executeSignaturesGSN(bytes message, bytes signatures, uint256 maxTokensFee)",
      "function relayedMessages(bytes32 _txHash) view returns (bool)",
      "function totalSpentPerDay(uint256 _day) view returns (uint256)",
      "function sDaiToken() pure returns (address)",
      "function isInitialized() view returns (bool)",
      "function setExecutionDailyLimit(uint256 _dailyLimit)",
      "function getCurrentDay() view returns (uint256)",
      "function requiredBlockConfirmations() view returns (uint256)",
      "function executeSignatures(bytes message, bytes signatures)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function executionDailyLimit() view returns (uint256)",
      "function minInterestPaid(address _token) view returns (uint256)",
      "function versionRecipient() view returns (string)",
      "function totalExecutedPerDay(uint256 _day) view returns (uint256)",
      "function minCashThreshold(address _token) view returns (uint256)",
      "function isTrustedForwarder(address forwarder) view returns (bool)",
      "function dailyLimit() view returns (uint256)",
      "function claimTokens(address _token, address _to)",
      "function initialize(address _validatorContract, address _erc20token, uint256 _requiredBlockConfirmations, uint256 _gasPrice, uint256[3] _dailyLimitMaxPerTxMinPerTxArray, uint256[2] _homeDailyLimitHomeMaxPerTxArray, address _owner, int256 _decimalShift, address _bridgeOnOtherSide) returns (bool)",
      "function investDai()",
      "function setPayMaster(address _paymaster)",
      "function withinExecutionLimit(uint256 _amount) view returns (bool)",
      "function executionMaxPerTx() view returns (uint256)",
      "function requiredSignatures() view returns (uint256)",
      "function owner() view returns (address)",
      "function setInterestReceiver(address _token, address _receiver)",
      "function maxAvailablePerTx() view returns (uint256)",
      "function validatorContract() view returns (address)",
      "function deployedAtBlock() view returns (uint256)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function setMinPerTx(uint256 _minPerTx)",
      "function setMinInterestPaid(address _token, uint256 _minInterestPaid)",
      "function setMinCashThreshold(address _token, uint256 _minCashThreshold)",
      "function interestReceiver(address _token) view returns (address)",
      "function setRequiredBlockConfirmations(uint256 _blockConfirmations)",
      "function setDailyLimit(uint256 _dailyLimit)",
      "function previewWithdraw(address _token, uint256 _amount) view returns (uint256)",
      "function daiToken() pure returns (address)",
      "function setGasPrice(uint256 _gasPrice)",
      "function setMaxPerTx(uint256 _maxPerTx)",
      "function interestAmount(address _token) view returns (uint256)",
      "function initializeInterest(address _token, uint256 _minCashThreshold, uint256 _minInterestPaid, address _interestReceiver)",
      "function getTrustedForwarder() view returns (address)",
      "function investedAmount(address _token) view returns (uint256)",
      "function isInterestEnabled(address _token) view returns (bool)",
      "function setTrustedForwarder(address _trustedForwarder)",
      "function decimalShift() view returns (int256)",
      "function minPerTx() view returns (uint256)",
      "function withinLimit(uint256 _amount) view returns (bool)",
      "function setExecutionMaxPerTx(uint256 _maxPerTx)",
      "function transferOwnership(address newOwner)",
      "function disableInterest(address _token)",
      "function maxPerTx() view returns (uint256)",
      "function gasPrice() view returns (uint256)",
      "event PaidInterest(address indexed token, address to, uint256 value)",
      "event RelayedMessage(address recipient, uint256 value, bytes32 transactionHash)",
      "event UserRequestForAffirmation(address recipient, uint256 value)",
      "event DailyLimitChanged(uint256 newLimit)",
      "event ExecutionDailyLimitChanged(uint256 newLimit)",
      "event GasPriceChanged(uint256 gasPrice)",
      "event RequiredBlockConfirmationChanged(uint256 requiredBlockConfirmations)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0x3d9819210A31b4961b30EF54bE2aeD79B9c9Cd3B": [
      "function pendingAdmin() view returns (address)",
      "function _setPendingAdmin(address newPendingAdmin) returns (uint256)",
      "function comptrollerImplementation() view returns (address)",
      "function _acceptImplementation() returns (uint256)",
      "function pendingComptrollerImplementation() view returns (address)",
      "function _setPendingImplementation(address newPendingImplementation) returns (uint256)",
      "function _acceptAdmin() returns (uint256)",
      "function admin() view returns (address)",
      "constructor()",
      "event NewPendingImplementation(address oldPendingImplementation, address newPendingImplementation)",
      "event NewImplementation(address oldImplementation, address newImplementation)",
      "event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin)",
      "event NewAdmin(address oldAdmin, address newAdmin)",
      "event Failure(uint256 error, uint256 info, uint256 detail)"
    ],
    "0x42F38ec5A75acCEc50054671233dfAC9C0E7A3F6": [
      "constructor(address _masterCopy)"
    ],
    "0x4aa42145Aa6Ebf72e164C9bBC74fbD3788045016": [
      "function proxyOwner() view returns (address)",
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0x4b5F5231e2F08Ad49d79Ce5672A8339a63Cfbd43": [
      "constructor(address _singleton)"
    ],
    "0x6943A218d58135793F1FE619414eD476C37ad65a": [
      "function validatorCount() view returns (uint256)",
      "function getBridgeValidatorsInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function isInitialized() view returns (bool)",
      "function removeValidator(address _validator)",
      "function addValidator(address _validator)",
      "function initialize(uint256 _requiredSignatures, address[] _initialValidators, address _owner) returns (bool)",
      "function validatorList() view returns (address[])",
      "function setRequiredSignatures(uint256 _requiredSignatures)",
      "function requiredSignatures() view returns (uint256)",
      "function getNextValidator(address _address) view returns (address)",
      "function owner() view returns (address)",
      "function isValidatorDuty(address _validator) view returns (bool)",
      "function deployedAtBlock() view returns (uint256)",
      "function upgradeToV230()",
      "function F_ADDR() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function isValidator(address _validator) view returns (bool)",
      "event ValidatorAdded(address indexed validator)",
      "event ValidatorRemoved(address indexed validator)",
      "event RequiredSignaturesChanged(uint256 requiredSignatures)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ],
    "0x6d903f6003cca6255D85CcA4D3B5E5146dC33925": [
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable returns (bytes)",
      "function acceptAdmin()",
      "function pendingAdmin() view returns (address)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) returns (bytes32)",
      "function setPendingAdmin(address pendingAdmin_)",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta)",
      "function delay() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function setDelay(uint256 delay_)",
      "function queuedTransactions(bytes32) view returns (bool)",
      "function admin() view returns (address)",
      "constructor(address admin_, uint256 delay_)",
      "event NewAdmin(address indexed newAdmin)",
      "event NewPendingAdmin(address indexed newPendingAdmin)",
      "event NewDelay(uint256 indexed newDelay)",
      "event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)"
    ],
    "0x6F6e4785c97885d26466945055d4Ae8931bE6f7a": [
      "event NewAdmin(address oldAdmin, address newAdmin)",
      "event NewImplementation(address oldImplementation, address newImplementation)",
      "event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin)",
      "event ProposalCanceled(uint256 id)",
      "event ProposalCreated(uint256 id, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 startBlock, uint256 endBlock, string description)",
      "event ProposalExecuted(uint256 id)",
      "event ProposalGuardianSet(address oldProposalGuardian, uint96 oldProposalGuardianExpiry, address newProposalGuardian, uint256 newProposalGuardianExpiry)",
      "event ProposalQueued(uint256 id, uint256 eta)",
      "event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold)",
      "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 votes, string reason)",
      "event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay)",
      "event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod)",
      "event WhitelistAccountExpirationSet(address account, uint256 expiration)",
      "event WhitelistGuardianSet(address oldGuardian, address newGuardian)",
      "function BALLOT_TYPEHASH() view returns (bytes32)",
      "function BALLOT_WITH_REASON_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function MAX_PROPOSAL_THRESHOLD() view returns (uint256)",
      "function MAX_VOTING_DELAY() view returns (uint256)",
      "function MAX_VOTING_PERIOD() view returns (uint256)",
      "function MIN_PROPOSAL_THRESHOLD() view returns (uint256)",
      "function MIN_VOTING_DELAY() view returns (uint256)",
      "function MIN_VOTING_PERIOD() view returns (uint256)",
      "function PROPOSAL_TYPEHASH() view returns (bytes32)",
      "function _acceptAdmin()",
      "function _initiate(address governorAlpha)",
      "function _setPendingAdmin(address newPendingAdmin)",
      "function _setProposalGuardian(tuple(address account, uint96 expiration) newProposalGuardian)",
      "function _setProposalThreshold(uint256 newProposalThreshold)",
      "function _setVotingDelay(uint256 newVotingDelay)",
      "function _setVotingPeriod(uint256 newVotingPeriod)",
      "function _setWhitelistAccountExpiration(address account, uint256 expiration)",
      "function _setWhitelistGuardian(address account)",
      "function admin() view returns (address)",
      "function cancel(uint256 proposalId)",
      "function castVote(uint256 proposalId, uint8 support)",
      "function castVoteBySig(uint256 proposalId, uint8 support, uint8 v, bytes32 r, bytes32 s)",
      "function castVoteWithReason(uint256 proposalId, uint8 support, string reason)",
      "function castVoteWithReasonBySig(uint256 proposalId, uint8 support, string reason, uint8 v, bytes32 r, bytes32 s)",
      "function comp() view returns (address)",
      "function execute(uint256 proposalId) payable",
      "function getActions(uint256 proposalId) view returns (address[] targets, uint256[] values, string[] signatures, bytes[] calldatas)",
      "function getReceipt(uint256 proposalId, address voter) view returns (tuple(bool hasVoted, uint8 support, uint96 votes))",
      "function implementation() view returns (address)",
      "function initialProposalId() view returns (uint256)",
      "function initialize(address timelock_, address comp_, uint256 votingPeriod_, uint256 votingDelay_, uint256 proposalThreshold_)",
      "function isWhitelisted(address account) view returns (bool)",
      "function latestProposalIds(address) view returns (uint256)",
      "function name() view returns (string)",
      "function pendingAdmin() view returns (address)",
      "function proposalCount() view returns (uint256)",
      "function proposalGuardian() view returns (address account, uint96 expiration)",
      "function proposalMaxOperations() view returns (uint256)",
      "function proposalThreshold() view returns (uint256)",
      "function proposals(uint256) view returns (uint256 id, address proposer, uint256 eta, uint256 startBlock, uint256 endBlock, uint256 forVotes, uint256 againstVotes, uint256 abstainVotes, bool canceled, bool executed)",
      "function propose(address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, string description) returns (uint256)",
      "function proposeBySig(address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, string description, uint256 proposalId, uint8 v, bytes32 r, bytes32 s) returns (uint256)",
      "function queue(uint256 proposalId)",
      "function quorumVotes() view returns (uint256)",
      "function state(uint256 proposalId) view returns (uint8)",
      "function timelock() view returns (address)",
      "function votingDelay() view returns (uint256)",
      "function votingPeriod() view returns (uint256)",
      "function whitelistAccountExpirations(address) view returns (uint256)",
      "function whitelistGuardian() view returns (address)"
    ],
    "0xBafE01ff935C7305907c33BF824352eE5979B526": [
      "constructor()",
      "event ActionPaused(string action, bool pauseState)",
      "event ActionPaused(address cToken, string action, bool pauseState)",
      "event CompAccruedAdjusted(address indexed user, uint256 oldCompAccrued, uint256 newCompAccrued)",
      "event CompBorrowSpeedUpdated(address indexed cToken, uint256 newSpeed)",
      "event CompGranted(address recipient, uint256 amount)",
      "event CompReceivableUpdated(address indexed user, uint256 oldCompReceivable, uint256 newCompReceivable)",
      "event CompSupplySpeedUpdated(address indexed cToken, uint256 newSpeed)",
      "event ContributorCompSpeedUpdated(address indexed contributor, uint256 newSpeed)",
      "event DistributedBorrowerComp(address indexed cToken, address indexed borrower, uint256 compDelta, uint256 compBorrowIndex)",
      "event DistributedSupplierComp(address indexed cToken, address indexed supplier, uint256 compDelta, uint256 compSupplyIndex)",
      "event Failure(uint256 error, uint256 info, uint256 detail)",
      "event MarketEntered(address cToken, address account)",
      "event MarketExited(address cToken, address account)",
      "event MarketListed(address cToken)",
      "event NewBorrowCap(address indexed cToken, uint256 newBorrowCap)",
      "event NewBorrowCapGuardian(address oldBorrowCapGuardian, address newBorrowCapGuardian)",
      "event NewCloseFactor(uint256 oldCloseFactorMantissa, uint256 newCloseFactorMantissa)",
      "event NewCollateralFactor(address cToken, uint256 oldCollateralFactorMantissa, uint256 newCollateralFactorMantissa)",
      "event NewLiquidationIncentive(uint256 oldLiquidationIncentiveMantissa, uint256 newLiquidationIncentiveMantissa)",
      "event NewPauseGuardian(address oldPauseGuardian, address newPauseGuardian)",
      "event NewPriceOracle(address oldPriceOracle, address newPriceOracle)",
      "function _become(address unitroller)",
      "function _borrowGuardianPaused() view returns (bool)",
      "function _grantComp(address recipient, uint256 amount)",
      "function _mintGuardianPaused() view returns (bool)",
      "function _setBorrowCapGuardian(address newBorrowCapGuardian)",
      "function _setBorrowPaused(address cToken, bool state) returns (bool)",
      "function _setCloseFactor(uint256 newCloseFactorMantissa) returns (uint256)",
      "function _setCollateralFactor(address cToken, uint256 newCollateralFactorMantissa) returns (uint256)",
      "function _setCompSpeeds(address[] cTokens, uint256[] supplySpeeds, uint256[] borrowSpeeds)",
      "function _setContributorCompSpeed(address contributor, uint256 compSpeed)",
      "function _setLiquidationIncentive(uint256 newLiquidationIncentiveMantissa) returns (uint256)",
      "function _setMarketBorrowCaps(address[] cTokens, uint256[] newBorrowCaps)",
      "function _setMintPaused(address cToken, bool state) returns (bool)",
      "function _setPauseGuardian(address newPauseGuardian) returns (uint256)",
      "function _setPriceOracle(address newOracle) returns (uint256)",
      "function _setSeizePaused(bool state) returns (bool)",
      "function _setTransferPaused(bool state) returns (bool)",
      "function _supportMarket(address cToken) returns (uint256)",
      "function accountAssets(address, uint256) view returns (address)",
      "function admin() view returns (address)",
      "function allMarkets(uint256) view returns (address)",
      "function borrowAllowed(address cToken, address borrower, uint256 borrowAmount) returns (uint256)",
      "function borrowCapGuardian() view returns (address)",
      "function borrowCaps(address) view returns (uint256)",
      "function borrowGuardianPaused(address) view returns (bool)",
      "function borrowVerify(address cToken, address borrower, uint256 borrowAmount)",
      "function checkMembership(address account, address cToken) view returns (bool)",
      "function claimComp(address holder, address[] cTokens)",
      "function claimComp(address[] holders, address[] cTokens, bool borrowers, bool suppliers)",
      "function claimComp(address holder)",
      "function closeFactorMantissa() view returns (uint256)",
      "function compAccrued(address) view returns (uint256)",
      "function compBorrowSpeeds(address) view returns (uint256)",
      "function compBorrowState(address) view returns (uint224 index, uint32 block)",
      "function compBorrowerIndex(address, address) view returns (uint256)",
      "function compContributorSpeeds(address) view returns (uint256)",
      "function compInitialIndex() view returns (uint224)",
      "function compRate() view returns (uint256)",
      "function compReceivable(address) view returns (uint256)",
      "function compSpeeds(address) view returns (uint256)",
      "function compSupplierIndex(address, address) view returns (uint256)",
      "function compSupplySpeeds(address) view returns (uint256)",
      "function compSupplyState(address) view returns (uint224 index, uint32 block)",
      "function comptrollerImplementation() view returns (address)",
      "function enterMarkets(address[] cTokens) returns (uint256[])",
      "function exitMarket(address cTokenAddress) returns (uint256)",
      "function fixBadAccruals(address[] affectedUsers, uint256[] amounts)",
      "function getAccountLiquidity(address account) view returns (uint256, uint256, uint256)",
      "function getAllMarkets() view returns (address[])",
      "function getAssetsIn(address account) view returns (address[])",
      "function getBlockNumber() view returns (uint256)",
      "function getCompAddress() view returns (address)",
      "function getHypotheticalAccountLiquidity(address account, address cTokenModify, uint256 redeemTokens, uint256 borrowAmount) view returns (uint256, uint256, uint256)",
      "function isComptroller() view returns (bool)",
      "function isDeprecated(address cToken) view returns (bool)",
      "function lastContributorBlock(address) view returns (uint256)",
      "function liquidateBorrowAllowed(address cTokenBorrowed, address cTokenCollateral, address liquidator, address borrower, uint256 repayAmount) returns (uint256)",
      "function liquidateBorrowVerify(address cTokenBorrowed, address cTokenCollateral, address liquidator, address borrower, uint256 actualRepayAmount, uint256 seizeTokens)",
      "function liquidateCalculateSeizeTokens(address cTokenBorrowed, address cTokenCollateral, uint256 actualRepayAmount) view returns (uint256, uint256)",
      "function liquidationIncentiveMantissa() view returns (uint256)",
      "function markets(address) view returns (bool isListed, uint256 collateralFactorMantissa, bool isComped)",
      "function maxAssets() view returns (uint256)",
      "function mintAllowed(address cToken, address minter, uint256 mintAmount) returns (uint256)",
      "function mintGuardianPaused(address) view returns (bool)",
      "function mintVerify(address cToken, address minter, uint256 actualMintAmount, uint256 mintTokens)",
      "function oracle() view returns (address)",
      "function pauseGuardian() view returns (address)",
      "function pendingAdmin() view returns (address)",
      "function pendingComptrollerImplementation() view returns (address)",
      "function proposal65FixExecuted() view returns (bool)",
      "function redeemAllowed(address cToken, address redeemer, uint256 redeemTokens) returns (uint256)",
      "function redeemVerify(address cToken, address redeemer, uint256 redeemAmount, uint256 redeemTokens)",
      "function repayBorrowAllowed(address cToken, address payer, address borrower, uint256 repayAmount) returns (uint256)",
      "function repayBorrowVerify(address cToken, address payer, address borrower, uint256 actualRepayAmount, uint256 borrowerIndex)",
      "function seizeAllowed(address cTokenCollateral, address cTokenBorrowed, address liquidator, address borrower, uint256 seizeTokens) returns (uint256)",
      "function seizeGuardianPaused() view returns (bool)",
      "function seizeVerify(address cTokenCollateral, address cTokenBorrowed, address liquidator, address borrower, uint256 seizeTokens)",
      "function transferAllowed(address cToken, address src, address dst, uint256 transferTokens) returns (uint256)",
      "function transferGuardianPaused() view returns (bool)",
      "function transferVerify(address cToken, address src, address dst, uint256 transferTokens)",
      "function updateContributorRewards(address contributor)"
    ],
    "0xc00e94Cb662C3520282E6f5717214004A7f26888": [
      "constructor(address account)",
      "event Approval(address indexed owner, address indexed spender, uint256 amount)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event Transfer(address indexed from, address indexed to, uint256 amount)",
      "function DELEGATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function allowance(address account, address spender) view returns (uint256)",
      "function approve(address spender, uint256 rawAmount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function checkpoints(address, uint32) view returns (uint32 fromBlock, uint96 votes)",
      "function decimals() view returns (uint8)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address) view returns (address)",
      "function getCurrentVotes(address account) view returns (uint96)",
      "function getPriorVotes(address account, uint256 blockNumber) view returns (uint96)",
      "function name() view returns (string)",
      "function nonces(address) view returns (uint256)",
      "function numCheckpoints(address) view returns (uint32)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address dst, uint256 rawAmount) returns (bool)",
      "function transferFrom(address src, address dst, uint256 rawAmount) returns (bool)"
    ],
    "0xc0Da02939E1441F497fd74F78cE7Decb17B66529": [
      "constructor(address timelock_, address comp_, address admin_, address implementation_, uint256 votingPeriod_, uint256 votingDelay_, uint256 proposalThreshold_)",
      "event NewAdmin(address oldAdmin, address newAdmin)",
      "event NewImplementation(address oldImplementation, address newImplementation)",
      "event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin)",
      "event ProposalCanceled(uint256 id)",
      "event ProposalCreated(uint256 id, address proposer, address[] targets, uint256[] values, string[] signatures, bytes[] calldatas, uint256 startBlock, uint256 endBlock, string description)",
      "event ProposalExecuted(uint256 id)",
      "event ProposalQueued(uint256 id, uint256 eta)",
      "event ProposalThresholdSet(uint256 oldProposalThreshold, uint256 newProposalThreshold)",
      "event VoteCast(address indexed voter, uint256 proposalId, uint8 support, uint256 votes, string reason)",
      "event VotingDelaySet(uint256 oldVotingDelay, uint256 newVotingDelay)",
      "event VotingPeriodSet(uint256 oldVotingPeriod, uint256 newVotingPeriod)",
      "function _setImplementation(address implementation_)",
      "function admin() view returns (address)",
      "function implementation() view returns (address)",
      "function pendingAdmin() view returns (address)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xe1579dEbdD2DF16Ebdb9db8694391fa74EeA201E": [
      "function proxyOwner() view returns (address)",
      "function upgradeTo(uint256 version, address implementation)",
      "function version() view returns (uint256)",
      "function implementation() view returns (address)",
      "function upgradeabilityOwner() view returns (address)",
      "function upgradeToAndCall(uint256 version, address implementation, bytes data) payable",
      "function transferProxyOwnership(address newOwner)",
      "event ProxyOwnershipTransferred(address previousOwner, address newOwner)",
      "event Upgraded(uint256 version, address indexed implementation)"
    ],
    "0xEeE4f8dB4410beBD74A76cB711D096c5E66d0473": [
      "function relayTokens(address _receiver, uint256 _amount)",
      "function invest(address _token)",
      "function erc20token() view returns (address)",
      "function executeSignaturesGSN(bytes message, bytes signatures, uint256 maxTokensFee)",
      "function relayedMessages(bytes32 _txHash) view returns (bool)",
      "function totalSpentPerDay(uint256 _day) view returns (uint256)",
      "function isInitialized() view returns (bool)",
      "function setExecutionDailyLimit(uint256 _dailyLimit)",
      "function getCurrentDay() view returns (uint256)",
      "function requiredBlockConfirmations() view returns (uint256)",
      "function executeSignatures(bytes message, bytes signatures)",
      "function getBridgeMode() pure returns (bytes4 _data)",
      "function executionDailyLimit() view returns (uint256)",
      "function minInterestPaid(address _token) view returns (uint256)",
      "function versionRecipient() view returns (string)",
      "function totalExecutedPerDay(uint256 _day) view returns (uint256)",
      "function minCashThreshold(address _token) view returns (uint256)",
      "function isTrustedForwarder(address forwarder) view returns (bool)",
      "function comptroller() pure returns (address)",
      "function compToken() pure returns (address)",
      "function dailyLimit() view returns (uint256)",
      "function claimTokens(address _token, address _to)",
      "function migrateTo_6_1_0(address _interestReceiver)",
      "function initialize(address _validatorContract, address _erc20token, uint256 _requiredBlockConfirmations, uint256 _gasPrice, uint256[3] _dailyLimitMaxPerTxMinPerTxArray, uint256[2] _homeDailyLimitHomeMaxPerTxArray, address _owner, int256 _decimalShift, address _bridgeOnOtherSide) returns (bool)",
      "function investDai()",
      "function claimCompAndPay()",
      "function setPayMaster(address _paymaster)",
      "function withinExecutionLimit(uint256 _amount) view returns (bool)",
      "function executionMaxPerTx() view returns (uint256)",
      "function requiredSignatures() view returns (uint256)",
      "function owner() view returns (address)",
      "function setInterestReceiver(address _token, address _receiver)",
      "function maxAvailablePerTx() view returns (uint256)",
      "function validatorContract() view returns (address)",
      "function deployedAtBlock() view returns (uint256)",
      "function getBridgeInterfacesVersion() pure returns (uint64 major, uint64 minor, uint64 patch)",
      "function setMinPerTx(uint256 _minPerTx)",
      "function setMinInterestPaid(address _token, uint256 _minInterestPaid)",
      "function setMinCashThreshold(address _token, uint256 _minCashThreshold)",
      "function interestReceiver(address _token) view returns (address)",
      "function setRequiredBlockConfirmations(uint256 _blockConfirmations)",
      "function setDailyLimit(uint256 _dailyLimit)",
      "function cDaiToken() pure returns (address)",
      "function daiToken() pure returns (address)",
      "function setGasPrice(uint256 _gasPrice)",
      "function setMaxPerTx(uint256 _maxPerTx)",
      "function interestAmount(address _token) view returns (uint256)",
      "function initializeInterest(address _token, uint256 _minCashThreshold, uint256 _minInterestPaid, address _interestReceiver)",
      "function getTrustedForwarder() view returns (address)",
      "function investedAmount(address _token) view returns (uint256)",
      "function payInterest(address _token)",
      "function isInterestEnabled(address _token) view returns (bool)",
      "function setTrustedForwarder(address _trustedForwarder)",
      "function decimalShift() view returns (int256)",
      "function minPerTx() view returns (uint256)",
      "function withinLimit(uint256 _amount) view returns (bool)",
      "function setExecutionMaxPerTx(uint256 _maxPerTx)",
      "function transferOwnership(address newOwner)",
      "function disableInterest(address _token)",
      "function maxPerTx() view returns (uint256)",
      "function gasPrice() view returns (uint256)",
      "event PaidInterest(address indexed token, address to, uint256 value)",
      "event RelayedMessage(address recipient, uint256 value, bytes32 transactionHash)",
      "event UserRequestForAffirmation(address recipient, uint256 value)",
      "event DailyLimitChanged(uint256 newLimit)",
      "event ExecutionDailyLimitChanged(uint256 newLimit)",
      "event GasPriceChanged(uint256 gasPrice)",
      "event RequiredBlockConfirmationChanged(uint256 requiredBlockConfirmations)",
      "event OwnershipTransferred(address previousOwner, address newOwner)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x18527e82c3800311291da7323caa876f588cde67692c1c84d5ecb5161da61359"
  }
}
