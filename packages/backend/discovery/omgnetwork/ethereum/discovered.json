{
  "name": "omgnetwork",
  "blockNumber": 16154924,
  "configHash": "0x0c3bcfa66ce09ac47db140bc1c5c82697a39ee216151e692c0d121133ff982ac",
  "contracts": [
    {
      "name": "Erc20Vault",
      "address": "0x070cB1270A4B2bA53c81CeF89d0FD584Ed4F430B",
      "code": "https://etherscan.deth.net/address/0x070cB1270A4B2bA53c81CeF89d0FD584Ed4F430B",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "depositVerifiers": [
          "0xD876aeb3a443FBC03B7349AAc115E9054563CD82",
          "0x0000000000000000000000000000000000000000"
        ],
        "getEffectiveDepositVerifier": "0xD876aeb3a443FBC03B7349AAc115E9054563CD82",
        "newDepositVerifierMaturityTimestamp": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
      }
    },
    {
      "name": "PlasmaFramework",
      "address": "0x0D4C1222f5e839a911e2053860e45F18921D72ac",
      "code": "https://etherscan.deth.net/address/0x0D4C1222f5e839a911e2053860e45F18921D72ac",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "authority": "0x22405c1782913fb676bc74Ef54a60727B0e1026F",
        "CHILD_BLOCK_INTERVAL": 1000,
        "childBlockInterval": 1000,
        "getMaintainer": "0x27b4C9e627F66eB3c7Bf0E98751Bd721615D3B21",
        "getVersion": "1.0.4+a69c763",
        "isChildChainActivated": true,
        "isDeposit": [],
        "minExitPeriod": 604800,
        "nextChildBlock": 5282000,
        "nextDeposit": 1,
        "nextDepositBlock": 5281001,
        "version": "1.0.4+a69c763"
      }
    },
    {
      "name": "EthVault",
      "address": "0x3Eed23eA148D356a72CA695DBCe2fceb40a32ce0",
      "code": "https://etherscan.deth.net/address/0x3Eed23eA148D356a72CA695DBCe2fceb40a32ce0",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "depositVerifiers": [
          "0x649f37203c365DE759c8fc8CA35beBF5448F70Be",
          "0x0000000000000000000000000000000000000000"
        ],
        "getEffectiveDepositVerifier": "0x649f37203c365DE759c8fc8CA35beBF5448F70Be",
        "newDepositVerifierMaturityTimestamp": "57896044618658097711785492504343953926634992332820282019728792003956564819968",
        "safeGasStipend": 2300
      }
    },
    {
      "name": "PaymentExitGame",
      "address": "0x48d7A6bbc428bca019A560cF3e8EA5364395Aad3",
      "code": "https://etherscan.deth.net/address/0x48d7A6bbc428bca019A560cF3e8EA5364395Aad3",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "BOND_LOWER_BOUND_DIVISOR": 2,
        "BOND_UPPER_BOUND_MULTIPLIER": 2,
        "INITIAL_BOND_SIZE": "14000000000000000",
        "INITIAL_IFE_BOND_SIZE": "37000000000000000",
        "INITIAL_PB_BOND_SIZE": "28000000000000000",
        "piggybackBondSize": "28000000000000000",
        "startIFEBondSize": "37000000000000000",
        "startStandardExitBondSize": "14000000000000000"
      }
    },
    {
      "name": "ETHDepositVerifier",
      "address": "0x649f37203c365DE759c8fc8CA35beBF5448F70Be",
      "unverified": true,
      "code": "https://etherscan.deth.net/address/0x649f37203c365DE759c8fc8CA35beBF5448F70Be",
      "upgradeability": {
        "type": "immutable"
      },
      "derivedName": ""
    },
    {
      "name": "ERC20DepositVerifier",
      "address": "0xD876aeb3a443FBC03B7349AAc115E9054563CD82",
      "unverified": true,
      "code": "https://etherscan.deth.net/address/0xD876aeb3a443FBC03B7349AAc115E9054563CD82",
      "upgradeability": {
        "type": "immutable"
      },
      "derivedName": ""
    }
  ],
  "eoas": [
    "0x22405c1782913fb676bc74Ef54a60727B0e1026F",
    "0x27b4C9e627F66eB3c7Bf0E98751Bd721615D3B21"
  ],
  "abis": {
    "0x070cB1270A4B2bA53c81CeF89d0FD584Ed4F430B": [
      "function depositVerifiers(uint256) view returns (address)",
      "function setDepositVerifier(address _verifier)",
      "function getEffectiveDepositVerifier() view returns (address)",
      "function deposit(bytes depositTx)",
      "function newDepositVerifierMaturityTimestamp() view returns (uint256)",
      "function withdraw(address receiver, address token, uint256 amount)",
      "constructor(address _framework)",
      "event Erc20Withdrawn(address indexed receiver, address indexed token, uint256 amount)",
      "event DepositCreated(address indexed depositor, uint256 indexed blknum, address indexed token, uint256 amount)",
      "event SetDepositVerifierCalled(address nextDepositVerifier)"
    ],
    "0x0D4C1222f5e839a911e2053860e45F18921D72ac": [
      "function getVersion() view returns (string)",
      "function isChildChainActivated() view returns (bool)",
      "function getNextExit(uint256 vaultId, address token) view returns (uint256)",
      "function exitsQueues(bytes32) view returns (address)",
      "function childBlockInterval() view returns (uint256)",
      "function addExitQueue(uint256 vaultId, address token)",
      "function getMaintainer() view returns (address)",
      "function nextChildBlock() view returns (uint256)",
      "function deactivateNonReentrant()",
      "function version() view returns (string)",
      "function isExitGameSafeToUse(address _contract) view returns (bool)",
      "function registerVault(uint256 _vaultId, address _vaultAddress)",
      "function flagOutputFinalized(bytes32 outputId, uint160 exitId)",
      "function outputsFinalizations(bytes32) view returns (uint160)",
      "function setVersion(string _version)",
      "function enqueue(uint256 vaultId, address token, uint64 exitableAt, tuple(uint64 blockNum, uint16 txIndex, uint16 outputIndex) txPos, uint160 exitId, address exitProcessor) returns (uint256)",
      "function nextDepositBlock() view returns (uint256)",
      "function protocols(uint256 _txType) view returns (uint8)",
      "function vaults(uint256 _vaultId) view returns (address)",
      "function isOutputFinalized(bytes32 outputId) view returns (bool)",
      "function batchFlagOutputsFinalized(bytes32[] outputIds, uint160 exitId)",
      "function activateChildChain()",
      "function exitGameToTxType(address _exitGame) view returns (uint256)",
      "function CHILD_BLOCK_INTERVAL() view returns (uint256)",
      "function nextDeposit() view returns (uint256)",
      "function exitGames(uint256 _txType) view returns (address)",
      "function submitBlock(bytes32 _blockRoot)",
      "function submitDepositBlock(bytes32 _blockRoot) returns (uint256)",
      "function authority() view returns (address)",
      "function isAnyInputFinalizedByOtherExit(bytes32[] _outputIds, uint160 exitId) view returns (bool)",
      "function hasExitQueue(uint256 vaultId, address token) view returns (bool)",
      "function delegations(bytes32) view returns (address)",
      "function minExitPeriod() view returns (uint256)",
      "function processExits(uint256 vaultId, address token, uint160 topExitId, uint256 maxExitsToProcess)",
      "function vaultToId(address _vaultAddress) view returns (uint256)",
      "function isDeposit(uint256 blockNum) view returns (bool)",
      "function blocks(uint256) view returns (bytes32 root, uint256 timestamp)",
      "function registerExitGame(uint256 _txType, address _contract, uint8 _protocol)",
      "function activateNonReentrant()",
      "constructor(uint256 _minExitPeriod, uint256 _initialImmuneVaults, uint256 _initialImmuneExitGames, address _authority, address _maintainer)",
      "event BlockSubmitted(uint256 blknum)",
      "event ChildChainActivated(address authority)",
      "event ExitQueueAdded(uint256 vaultId, address token)",
      "event ProcessedExitsNum(uint256 processedNum, uint256 vaultId, address token)",
      "event ExitQueued(uint160 indexed exitId, uint256 priority)",
      "event ExitGameRegistered(uint256 txType, address exitGameAddress, uint8 protocol)",
      "event VaultRegistered(uint256 vaultId, address vaultAddress)"
    ],
    "0x3Eed23eA148D356a72CA695DBCe2fceb40a32ce0": [
      "function depositVerifiers(uint256) view returns (address)",
      "function setDepositVerifier(address _verifier)",
      "function getEffectiveDepositVerifier() view returns (address)",
      "function deposit(bytes _depositTx) payable",
      "function newDepositVerifierMaturityTimestamp() view returns (uint256)",
      "function safeGasStipend() view returns (uint256)",
      "function withdraw(address receiver, uint256 amount)",
      "constructor(address _framework, uint256 _safeGasStipend)",
      "event EthWithdrawn(address indexed receiver, uint256 amount)",
      "event WithdrawFailed(address indexed receiver, uint256 amount)",
      "event DepositCreated(address indexed depositor, uint256 indexed blknum, address indexed token, uint256 amount)",
      "event SetDepositVerifierCalled(address nextDepositVerifier)"
    ],
    "0x48d7A6bbc428bca019A560cF3e8EA5364395Aad3": [
      "function standardExits(uint160[] exitIds) view returns (tuple(bool exitable, uint256 utxoPos, bytes32 outputId, address exitTarget, uint256 amount, uint256 bondSize)[])",
      "function updateStartStandardExitBondSize(uint128 newBondSize)",
      "function challengeInFlightExitOutputSpent(tuple(bytes inFlightTx, bytes inFlightTxInclusionProof, uint256 outputUtxoPos, bytes challengingTx, uint16 challengingTxInputIndex, bytes challengingTxWitness, bytes32 senderData) args)",
      "function updatePiggybackBondSize(uint128 newBondSize)",
      "function respondToNonCanonicalChallenge(bytes inFlightTx, uint256 inFlightTxPos, bytes inFlightTxInclusionProof)",
      "function piggybackBondSize() view returns (uint128)",
      "function startInFlightExit(tuple(bytes inFlightTx, bytes[] inputTxs, uint256[] inputUtxosPos, bytes[] inputTxsInclusionProofs, bytes[] inFlightTxWitnesses) args) payable",
      "function processExit(uint160 exitId, uint256, address token)",
      "function startStandardExit(tuple(uint256 utxoPos, bytes rlpOutputTx, bytes outputTxInclusionProof) args) payable",
      "function startIFEBondSize() view returns (uint128)",
      "function INITIAL_PB_BOND_SIZE() view returns (uint128)",
      "function getInFlightExitId(bytes _txBytes) pure returns (uint160)",
      "function BOND_LOWER_BOUND_DIVISOR() view returns (uint16)",
      "function BOND_UPPER_BOUND_MULTIPLIER() view returns (uint16)",
      "function piggybackInFlightExitOnOutput(tuple(bytes inFlightTx, uint16 outputIndex) args) payable",
      "function updateStartIFEBondSize(uint128 newBondSize)",
      "function getStandardExitId(bool _isDeposit, bytes _txBytes, uint256 _utxoPos) pure returns (uint160)",
      "function deleteNonPiggybackedInFlightExit(uint160 exitId)",
      "function challengeInFlightExitInputSpent(tuple(bytes inFlightTx, uint16 inFlightTxInputIndex, bytes challengingTx, uint16 challengingTxInputIndex, bytes challengingTxWitness, bytes inputTx, uint256 inputUtxoPos, bytes32 senderData) args)",
      "function INITIAL_BOND_SIZE() view returns (uint128)",
      "function INITIAL_IFE_BOND_SIZE() view returns (uint128)",
      "function inFlightExits(uint160[] exitIds) view returns (tuple(bool isCanonical, uint64 exitStartTimestamp, uint256 exitMap, uint256 position, tuple(bytes32 outputId, address exitTarget, address token, uint256 amount, uint256 piggybackBondSize)[4] inputs, tuple(bytes32 outputId, address exitTarget, address token, uint256 amount, uint256 piggybackBondSize)[4] outputs, address bondOwner, uint256 bondSize, uint256 oldestCompetitorPosition)[])",
      "function challengeStandardExit(tuple(uint160 exitId, bytes exitingTx, bytes challengeTx, uint16 inputIndex, bytes witness, bytes32 senderData) args)",
      "function piggybackInFlightExitOnInput(tuple(bytes inFlightTx, uint16 inputIndex) args) payable",
      "function challengeInFlightExitNotCanonical(tuple(bytes inputTx, uint256 inputUtxoPos, bytes inFlightTx, uint16 inFlightTxInputIndex, bytes competingTx, uint16 competingTxInputIndex, uint256 competingTxPos, bytes competingTxInclusionProof, bytes competingTxWitness) args)",
      "function startStandardExitBondSize() view returns (uint128)",
      "constructor(tuple(address framework, uint256 ethVaultId, uint256 erc20VaultId, address spendingConditionRegistry, address stateTransitionVerifier, uint256 supportTxType, uint256 safeGasStipend) args)",
      "event IFEBondUpdated(uint128 bondSize)",
      "event PiggybackBondUpdated(uint128 bondSize)",
      "event InFlightExitStarted(address indexed initiator, bytes32 indexed txHash)",
      "event InFlightExitInputPiggybacked(address indexed exitTarget, bytes32 indexed txHash, uint16 inputIndex)",
      "event InFlightExitOmitted(uint160 indexed exitId, address token)",
      "event InFlightBondReturnFailed(address indexed receiver, uint256 amount)",
      "event InFlightExitOutputWithdrawn(uint160 indexed exitId, uint16 outputIndex)",
      "event InFlightExitInputWithdrawn(uint160 indexed exitId, uint16 inputIndex)",
      "event InFlightExitOutputPiggybacked(address indexed exitTarget, bytes32 indexed txHash, uint16 outputIndex)",
      "event InFlightExitChallenged(address indexed challenger, bytes32 indexed txHash, uint256 challengeTxPosition)",
      "event InFlightExitChallengeResponded(address indexed challenger, bytes32 indexed txHash, uint256 challengeTxPosition)",
      "event InFlightExitInputBlocked(address indexed challenger, bytes32 indexed txHash, uint16 inputIndex)",
      "event InFlightExitOutputBlocked(address indexed challenger, bytes32 indexed txHash, uint16 outputIndex)",
      "event InFlightExitDeleted(uint160 indexed exitId)",
      "event StandardExitBondUpdated(uint128 bondSize)",
      "event ExitStarted(address indexed owner, uint160 exitId)",
      "event ExitChallenged(uint256 indexed utxoPos)",
      "event ExitOmitted(uint160 indexed exitId)",
      "event ExitFinalized(uint160 indexed exitId)",
      "event BondReturnFailed(address indexed receiver, uint256 amount)"
    ]
  }
}
