{
  "$schema": "../../../../discovery/schemas/config.v2.schema.json",
  "chain": "ethereum",
  "name": "orderly",
  "initialAddresses": [
    "0xe07eA0436100918F157DF35D01dCE5c11b16D1F1",
    "0x934Ab59Ef14b638653b1C0FEf7aB9a72186393DC"
  ],
  "names": {
    "0xe07eA0436100918F157DF35D01dCE5c11b16D1F1": "L1StandardBridge",
    "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746": "OrderlyMultisig",
    "0x886B187C3D293B1449A3A0F23Ca9e2269E0f2664": "SystemConfig",
    "0xc76543A64666d9a073FaEF4e75F651c88e7DBC08": "L1CrossDomainMessenger",
    "0x91493a61ab83b62943E6dCAa5475Dd330704Cc84": "OptimismPortal",
    "0x5e76821C3c1AbB9fD6E310224804556C61D860e0": "L2OutputOracle",
    "0x87630a802a3789463eC4b00f89b27b1e9f6b92e9": "AddressManager",
    "0xcE10372313Ca39Fbf75A09e7f4c0E57F070259f4": "ChallengerMultisig"
  },
  "overrides": {
    "OptimismPortal": {
      "ignoreMethods": ["isOutputFinalized"],
      "ignoreInWatchMode": ["params"]
    },
    "L2OutputOracle": {
      "ignoreMethods": [
        "getL2OutputAfter",
        "getL2OutputIndexAfter",
        "getL2Output",
        "computeL2Timestamp"
      ],
      "ignoreInWatchMode": [
        "nextBlockNumber",
        "nextOutputIndex",
        "latestBlockNumber",
        "latestOutputIndex"
      ],
      "fields": {
        "deletedOutputs": {
          "handler": {
            "type": "stateFromEvent",
            "event": "OutputsDeleted",
            "returnParams": ["prevNextOutputIndex", "newNextOutputIndex"]
          }
        }
      }
    },
    "OrderlyMultisig": {
      "ignoreInWatchMode": ["nonce"]
    },
    "L1CrossDomainMessenger": {
      "ignoreMethods": ["xDomainMessageSender"],
      "ignoreInWatchMode": ["messageNonce"]
    },
    "SystemConfig": {
      "fields": {
        // this overrides the batcherHash method return type (bytes32 -> address) so our discovery detects it as an address
        "batcherHash": {
          "handler": {
            "type": "call",
            "method": "function batcherHash() view returns (address)",
            "args": []
          }
        },
        "opStackDA": {
          "handler": {
            "type": "opStackDA",
            "sequencerAddress": "{{ batcherHash }}"
          }
        },
        "sequencerInbox": {
          "handler": {
            "type": "opStackSequencerInbox",
            "sequencerAddress": "{{ batcherHash }}"
          }
        },
        "scalar": {
          "description": "A system configuration parameter used as dynamic L2 gas overhead in the L2 fee calculation.",
          "severity": "LOW"
        }
      },
      "ignoreInWatchMode": ["overhead", "scalar"]
    }
  }
}
