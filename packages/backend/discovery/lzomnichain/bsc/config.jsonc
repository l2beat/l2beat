{
  "$schema": "../../config.schema.json",
  "chain": "bsc",
  "name": "lzomnichain",
  "initialAddresses": ["0x4D73AdB72bC3DD368966edD0f0b2148401A178E2"],
  "names": {
    "0x4D73AdB72bC3DD368966edD0f0b2148401A178E2": "UltraLightNodeV2",
    "0x3c2269811836af69497E5F486A85D7316753cf62": "Endpoint",
    "0x8D452629c5FfCDDE407069da48c096e1F8beF22c": "LayerZero Multisig",
    "0x6694340fc020c5E6B96567843da2df01b2CE1eb6": "Stargate Bridge",
    "0xB0D502E938ed5f4df2E681fE6E419ff29631d62b": "Stargate Token"
  },
  "overrides": {
    "Stargate Bridge": {
      "ignoreDiscovery": true
    },
    "Stargate Token": {
      "ignoreDiscovery": true
    },
    "Endpoint": {
      "ignoreInWatchMode": ["isReceivingPayload", "isSendingPayload"],
      "fields": {
        "libraryLookup": {
          "type": "array",
          "method": "libraryLookup",
          "startIndex": 1,
          "length": "{{ latestVersion }}",
          // ignoring because discovered.json gets clattered with ULNv1 and ULNv2RADAR.
          "ignoreRelative": true
        }
      }
    },
    "LayerZero Multisig": {
      "ignoreInWatchMode": ["nonce"]
    },
    "UltraLightNodeV2": {
      "fields": {
        "chainAddressSizeMap": {
          "type": "stateFromEvent",
          "event": "SetChainAddressSize",
          "returnParams": ["chainId", "size"],
          "groupBy": "chainId",
          "onlyValue": true
        },
        "ulnLookup": {
          "type": "stateFromEvent",
          "event": "SetRemoteUln",
          "returnParams": ["chainId", "uln"],
          "groupBy": "chainId",
          "onlyValue": true
        },
        "defaultAppConfig": {
          "type": "stateFromEvent",
          "event": "SetDefaultConfigForChainId",
          "returnParams": [
            "chainId",
            "inboundProofLib",
            "inboundBlockConfirm",
            "outboundProofType",
            "outboundBlockConfirm",
            "oracle",
            "relayer"
          ],
          "groupBy": "chainId",
          "onlyValue": true
        },
        "defaultAdapterParams": {
          "type": "stateFromEvent",
          "event": "SetDefaultAdapterParamsForChainId",
          "returnParams": ["chainId", "proofType", "adapterParams"],
          "groupBy": "chainId",
          "onlyValue": true
        },
        "inboundProofLibrary": {
          "type": "stateFromEvent",
          "event": "AddInboundProofLibraryForChain",
          "returnParams": ["chainId", "lib"],
          "groupBy": "chainId",
          "onlyValue": true,
          "multipleInGroup": true
        },
        "supportedOutboundProof": {
          "type": "stateFromEvent",
          "event": "EnableSupportedOutboundProof",
          "returnParams": ["chainId", "proofType"],
          "groupBy": "chainId",
          "onlyValue": true,
          "multipleInGroup": true
        }
      }
    }
  }
}
