{
  "name": "lzomnichain",
  "chain": "polygonzkevm",
  "blockNumber": 12848751,
  "configHash": "0x710026b5135b5d108b40faf49d9063aa0102a28e3c1346da5da9851d474cdc27",
  "version": 10,
  "contracts": [
    {
      "name": "",
      "address": "0x2D61DCDD36F10b22176E0433B86F74567d529aAa",
      "unverified": true,
      "sinceTimestamp": 1679974014,
      "values": { "$immutable": true }
    },
    {
      "name": "",
      "address": "0x6F475642a6e85809B1c36Fa62763669b1b48DD5B",
      "unverified": true,
      "sinceTimestamp": 1679974072,
      "values": { "$immutable": true }
    },
    {
      "name": "LayerZeroMultisig_pzkevm",
      "address": "0x8df01A9F8bE5776F4280B7056e13A0Fc0E007827",
      "template": "GnosisSafe",
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1712271299,
      "values": {
        "$immutable": false,
        "$implementation": "0x3E5c63644E683549055b9Be8653de26E0B4CD36E",
        "$multisigThreshold": "2 of 4 (50%)",
        "domainSeparator": "0xe1cb4394c03df39d0d0d616a14a46acd94d4358f3439b1d5bd0d7c60910315b9",
        "getChainId": 1101,
        "getOwners": [
          "0xBb6633cc267951E938F9B6421E4F54aa5b2c1936",
          "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e",
          "0x67FC8c432448f9a8d541C17579EF7a142378d5aD",
          "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327"
        ],
        "getThreshold": 2,
        "GnosisSafe_modules": [],
        "nonce": 35,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafeL2"
    },
    {
      "name": "Endpoint",
      "address": "0x9740FF91F1985D8d2B71494aE1A2f723bb3Ed9E4",
      "ignoreInWatchMode": ["isReceivingPayload", "isSendingPayload"],
      "sinceTimestamp": 1679974014,
      "values": {
        "$immutable": true,
        "BLOCK_VERSION": 65535,
        "chainId": 158,
        "DEFAULT_VERSION": 0,
        "defaultReceiveLibraryAddress": "0xFe7C30860D01e28371D40434806F4A8fcDD3A098",
        "defaultReceiveVersion": 1,
        "defaultSendLibrary": "0xFe7C30860D01e28371D40434806F4A8fcDD3A098",
        "defaultSendVersion": 1,
        "getChainId": 158,
        "isReceivingPayload": false,
        "isSendingPayload": false,
        "latestVersion": 3,
        "libraryLookup": [
          "0xFe7C30860D01e28371D40434806F4A8fcDD3A098",
          "0x8161B3B224Cd6ce37cC20BE61607C3E19eC2A8A6",
          "0x23ec43e2b8f9aE21D895eEa5a1a9c444fe301044"
        ],
        "owner": "0x8df01A9F8bE5776F4280B7056e13A0Fc0E007827"
      },
      "derivedName": "Endpoint"
    },
    {
      "name": "UltraLightNodeV2",
      "address": "0xFe7C30860D01e28371D40434806F4A8fcDD3A098",
      "ignoreInWatchMode": [
        "chainAddressSizeMap",
        "defaultAppConfig",
        "defaultAdapterParams",
        "inboundProofLibrary",
        "supportedOutboundProof",
        "ulnLookup"
      ],
      "sinceTimestamp": 1679974014,
      "values": {
        "$immutable": true,
        "CONFIG_TYPE_INBOUND_BLOCK_CONFIRMATIONS": 2,
        "CONFIG_TYPE_INBOUND_PROOF_LIBRARY_VERSION": 1,
        "CONFIG_TYPE_ORACLE": 6,
        "CONFIG_TYPE_OUTBOUND_BLOCK_CONFIRMATIONS": 5,
        "CONFIG_TYPE_OUTBOUND_PROOF_TYPE": 4,
        "CONFIG_TYPE_RELAYER": 3,
        "endpoint": "0x9740FF91F1985D8d2B71494aE1A2f723bb3Ed9E4",
        "layerZeroToken": "0x0000000000000000000000000000000000000000",
        "localChainId": 158,
        "nonceContract": "0x2D61DCDD36F10b22176E0433B86F74567d529aAa",
        "owner": "0x8df01A9F8bE5776F4280B7056e13A0Fc0E007827",
        "treasuryContract": "0x6F475642a6e85809B1c36Fa62763669b1b48DD5B",
        "treasuryZROFees": 0
      },
      "errors": {
        "chainAddressSizeMap": "processing response error (body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":87,\\\"error\\\":{\\\"code\\\":-32602,\\\"message\\\":\\\"logs are limited to a 10000 block range\\\"}}\", error={\"code\":-32602}, requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0xc40e6f\\\",\\\"address\\\":\\\"0xfe7c30860d01e28371d40434806f4a8fcdd3a098\\\",\\\"topics\\\":[[\\\"0x0611bb2107e385b79ec826fff8ecc1c1248a7aae3c875c96668f8cfbf1734220\\\",\\\"0x4a5695eee2a74d548d5f5c485a3de99ace99e3b664c8e30a90f49be6ebb54932\\\",\\\"0x5a76432853a0871c4e780def7f3ffc7912339b53f022ac31127fe5ff84a36fa1\\\",\\\"0x802d55279d51813cb7a9a98e8fd2d7bec5346cb830901c11b85d1650cb857e9a\\\",\\\"0xec23bee6f88cfecebb09d6aaaed66f0ce110debc1f61117c8270a7116597df9a\\\",\\\"0x0dad975e1d2fbe771c95cdcc7be9a1e61181de7173abe0a32b8f8f83140873e5\\\"]]}],\\\"id\\\":87,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://polygonzkevm-mainnet.g.alchemy.com/v2/Tb7-JFJ5vrKo7CF_rNpc4iTKqe3WBH32\", code=SERVER_ERROR, version=web/5.7.1)",
        "defaultAdapterParams": "processing response error (body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":87,\\\"error\\\":{\\\"code\\\":-32602,\\\"message\\\":\\\"logs are limited to a 10000 block range\\\"}}\", error={\"code\":-32602}, requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0xc40e6f\\\",\\\"address\\\":\\\"0xfe7c30860d01e28371d40434806f4a8fcdd3a098\\\",\\\"topics\\\":[[\\\"0x0611bb2107e385b79ec826fff8ecc1c1248a7aae3c875c96668f8cfbf1734220\\\",\\\"0x4a5695eee2a74d548d5f5c485a3de99ace99e3b664c8e30a90f49be6ebb54932\\\",\\\"0x5a76432853a0871c4e780def7f3ffc7912339b53f022ac31127fe5ff84a36fa1\\\",\\\"0x802d55279d51813cb7a9a98e8fd2d7bec5346cb830901c11b85d1650cb857e9a\\\",\\\"0xec23bee6f88cfecebb09d6aaaed66f0ce110debc1f61117c8270a7116597df9a\\\",\\\"0x0dad975e1d2fbe771c95cdcc7be9a1e61181de7173abe0a32b8f8f83140873e5\\\"]]}],\\\"id\\\":87,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://polygonzkevm-mainnet.g.alchemy.com/v2/Tb7-JFJ5vrKo7CF_rNpc4iTKqe3WBH32\", code=SERVER_ERROR, version=web/5.7.1)",
        "defaultAppConfig": "processing response error (body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":87,\\\"error\\\":{\\\"code\\\":-32602,\\\"message\\\":\\\"logs are limited to a 10000 block range\\\"}}\", error={\"code\":-32602}, requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0xc40e6f\\\",\\\"address\\\":\\\"0xfe7c30860d01e28371d40434806f4a8fcdd3a098\\\",\\\"topics\\\":[[\\\"0x0611bb2107e385b79ec826fff8ecc1c1248a7aae3c875c96668f8cfbf1734220\\\",\\\"0x4a5695eee2a74d548d5f5c485a3de99ace99e3b664c8e30a90f49be6ebb54932\\\",\\\"0x5a76432853a0871c4e780def7f3ffc7912339b53f022ac31127fe5ff84a36fa1\\\",\\\"0x802d55279d51813cb7a9a98e8fd2d7bec5346cb830901c11b85d1650cb857e9a\\\",\\\"0xec23bee6f88cfecebb09d6aaaed66f0ce110debc1f61117c8270a7116597df9a\\\",\\\"0x0dad975e1d2fbe771c95cdcc7be9a1e61181de7173abe0a32b8f8f83140873e5\\\"]]}],\\\"id\\\":87,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://polygonzkevm-mainnet.g.alchemy.com/v2/Tb7-JFJ5vrKo7CF_rNpc4iTKqe3WBH32\", code=SERVER_ERROR, version=web/5.7.1)",
        "inboundProofLibrary": "processing response error (body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":87,\\\"error\\\":{\\\"code\\\":-32602,\\\"message\\\":\\\"logs are limited to a 10000 block range\\\"}}\", error={\"code\":-32602}, requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0xc40e6f\\\",\\\"address\\\":\\\"0xfe7c30860d01e28371d40434806f4a8fcdd3a098\\\",\\\"topics\\\":[[\\\"0x0611bb2107e385b79ec826fff8ecc1c1248a7aae3c875c96668f8cfbf1734220\\\",\\\"0x4a5695eee2a74d548d5f5c485a3de99ace99e3b664c8e30a90f49be6ebb54932\\\",\\\"0x5a76432853a0871c4e780def7f3ffc7912339b53f022ac31127fe5ff84a36fa1\\\",\\\"0x802d55279d51813cb7a9a98e8fd2d7bec5346cb830901c11b85d1650cb857e9a\\\",\\\"0xec23bee6f88cfecebb09d6aaaed66f0ce110debc1f61117c8270a7116597df9a\\\",\\\"0x0dad975e1d2fbe771c95cdcc7be9a1e61181de7173abe0a32b8f8f83140873e5\\\"]]}],\\\"id\\\":87,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://polygonzkevm-mainnet.g.alchemy.com/v2/Tb7-JFJ5vrKo7CF_rNpc4iTKqe3WBH32\", code=SERVER_ERROR, version=web/5.7.1)",
        "supportedOutboundProof": "processing response error (body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":87,\\\"error\\\":{\\\"code\\\":-32602,\\\"message\\\":\\\"logs are limited to a 10000 block range\\\"}}\", error={\"code\":-32602}, requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0xc40e6f\\\",\\\"address\\\":\\\"0xfe7c30860d01e28371d40434806f4a8fcdd3a098\\\",\\\"topics\\\":[[\\\"0x0611bb2107e385b79ec826fff8ecc1c1248a7aae3c875c96668f8cfbf1734220\\\",\\\"0x4a5695eee2a74d548d5f5c485a3de99ace99e3b664c8e30a90f49be6ebb54932\\\",\\\"0x5a76432853a0871c4e780def7f3ffc7912339b53f022ac31127fe5ff84a36fa1\\\",\\\"0x802d55279d51813cb7a9a98e8fd2d7bec5346cb830901c11b85d1650cb857e9a\\\",\\\"0xec23bee6f88cfecebb09d6aaaed66f0ce110debc1f61117c8270a7116597df9a\\\",\\\"0x0dad975e1d2fbe771c95cdcc7be9a1e61181de7173abe0a32b8f8f83140873e5\\\"]]}],\\\"id\\\":87,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://polygonzkevm-mainnet.g.alchemy.com/v2/Tb7-JFJ5vrKo7CF_rNpc4iTKqe3WBH32\", code=SERVER_ERROR, version=web/5.7.1)",
        "ulnLookup": "processing response error (body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":87,\\\"error\\\":{\\\"code\\\":-32602,\\\"message\\\":\\\"logs are limited to a 10000 block range\\\"}}\", error={\"code\":-32602}, requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0xc40e6f\\\",\\\"address\\\":\\\"0xfe7c30860d01e28371d40434806f4a8fcdd3a098\\\",\\\"topics\\\":[[\\\"0x0611bb2107e385b79ec826fff8ecc1c1248a7aae3c875c96668f8cfbf1734220\\\",\\\"0x4a5695eee2a74d548d5f5c485a3de99ace99e3b664c8e30a90f49be6ebb54932\\\",\\\"0x5a76432853a0871c4e780def7f3ffc7912339b53f022ac31127fe5ff84a36fa1\\\",\\\"0x802d55279d51813cb7a9a98e8fd2d7bec5346cb830901c11b85d1650cb857e9a\\\",\\\"0xec23bee6f88cfecebb09d6aaaed66f0ce110debc1f61117c8270a7116597df9a\\\",\\\"0x0dad975e1d2fbe771c95cdcc7be9a1e61181de7173abe0a32b8f8f83140873e5\\\"]]}],\\\"id\\\":87,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://polygonzkevm-mainnet.g.alchemy.com/v2/Tb7-JFJ5vrKo7CF_rNpc4iTKqe3WBH32\", code=SERVER_ERROR, version=web/5.7.1)"
      },
      "derivedName": "UltraLightNodeV2"
    }
  ],
  "eoas": [
    { "address": "0x0000000000000000000000000000000000000000" },
    { "address": "0x67FC8c432448f9a8d541C17579EF7a142378d5aD" },
    { "address": "0x73E9c017Ad37e2113e709D8070Cc9E1b28180e1e" },
    { "address": "0x9F403140Bc0574D7d36eA472b82DAa1Bbd4eF327" },
    { "address": "0xBb6633cc267951E938F9B6421E4F54aa5b2c1936" }
  ],
  "abis": {
    "0x3E5c63644E683549055b9Be8653de26E0B4CD36E": [
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeModuleTransaction(address module, address to, uint256 value, bytes data, uint8 operation)",
      "event SafeMultiSigTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures, bytes additionalInfo)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0x8df01A9F8bE5776F4280B7056e13A0Fc0E007827": [
      "constructor(address _singleton)"
    ],
    "0x9740FF91F1985D8d2B71494aE1A2f723bb3Ed9E4": [
      "constructor(uint16 _chainId)",
      "event DefaultReceiveVersionSet(uint16 version)",
      "event DefaultSendVersionSet(uint16 version)",
      "event NewLibraryVersionAdded(uint16 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event PayloadCleared(uint16 srcChainId, bytes srcAddress, uint64 nonce, address dstAddress)",
      "event PayloadStored(uint16 srcChainId, bytes srcAddress, address dstAddress, uint64 nonce, bytes payload, bytes reason)",
      "event UaForceResumeReceive(uint16 chainId, bytes srcAddress)",
      "event UaReceiveVersionSet(address ua, uint16 version)",
      "event UaSendVersionSet(address ua, uint16 version)",
      "function BLOCK_VERSION() view returns (uint16)",
      "function DEFAULT_VERSION() view returns (uint16)",
      "function chainId() view returns (uint16)",
      "function defaultReceiveLibraryAddress() view returns (address)",
      "function defaultReceiveVersion() view returns (uint16)",
      "function defaultSendLibrary() view returns (address)",
      "function defaultSendVersion() view returns (uint16)",
      "function estimateFees(uint16 _dstChainId, address _userApplication, bytes _payload, bool _payInZRO, bytes _adapterParams) view returns (uint256 nativeFee, uint256 zroFee)",
      "function forceResumeReceive(uint16 _srcChainId, bytes _srcAddress)",
      "function getChainId() view returns (uint16)",
      "function getConfig(uint16 _version, uint16 _chainId, address _userApplication, uint256 _configType) view returns (bytes)",
      "function getInboundNonce(uint16 _srcChainId, bytes _srcAddress) view returns (uint64)",
      "function getOutboundNonce(uint16 _dstChainId, address _srcAddress) view returns (uint64)",
      "function getReceiveLibraryAddress(address _userApplication) view returns (address receiveLibraryAddress)",
      "function getReceiveVersion(address _userApplication) view returns (uint16)",
      "function getSendLibraryAddress(address _userApplication) view returns (address sendLibraryAddress)",
      "function getSendVersion(address _userApplication) view returns (uint16)",
      "function hasStoredPayload(uint16 _srcChainId, bytes _srcAddress) view returns (bool)",
      "function inboundNonce(uint16, bytes) view returns (uint64)",
      "function isReceivingPayload() view returns (bool)",
      "function isSendingPayload() view returns (bool)",
      "function latestVersion() view returns (uint16)",
      "function libraryLookup(uint16) view returns (address)",
      "function newVersion(address _newLayerZeroLibraryAddress)",
      "function outboundNonce(uint16, address) view returns (uint64)",
      "function owner() view returns (address)",
      "function receivePayload(uint16 _srcChainId, bytes _srcAddress, address _dstAddress, uint64 _nonce, uint256 _gasLimit, bytes _payload)",
      "function renounceOwnership()",
      "function retryPayload(uint16 _srcChainId, bytes _srcAddress, bytes _payload)",
      "function send(uint16 _dstChainId, bytes _destination, bytes _payload, address _refundAddress, address _zroPaymentAddress, bytes _adapterParams) payable",
      "function setConfig(uint16 _version, uint16 _chainId, uint256 _configType, bytes _config)",
      "function setDefaultReceiveVersion(uint16 _newDefaultReceiveVersion)",
      "function setDefaultSendVersion(uint16 _newDefaultSendVersion)",
      "function setReceiveVersion(uint16 _newVersion)",
      "function setSendVersion(uint16 _newVersion)",
      "function storedPayload(uint16, bytes) view returns (uint64 payloadLength, address dstAddress, bytes32 payloadHash)",
      "function transferOwnership(address newOwner)",
      "function uaConfigLookup(address) view returns (uint16 sendVersion, uint16 receiveVersion, address receiveLibraryAddress, address sendLibrary)"
    ],
    "0xFe7C30860D01e28371D40434806F4A8fcDD3A098": [
      "constructor(address _endpoint, address _nonceContract, uint16 _localChainId)",
      "event AddInboundProofLibraryForChain(uint16 indexed chainId, address lib)",
      "event AppConfigUpdated(address indexed userApplication, uint256 indexed configType, bytes newConfig)",
      "event EnableSupportedOutboundProof(uint16 indexed chainId, uint16 proofType)",
      "event HashReceived(uint16 indexed srcChainId, address indexed oracle, bytes32 lookupHash, bytes32 blockData, uint256 confirmations)",
      "event InvalidDst(uint16 indexed srcChainId, bytes srcAddress, address indexed dstAddress, uint64 nonce, bytes32 payloadHash)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Packet(bytes payload)",
      "event PacketReceived(uint16 indexed srcChainId, bytes srcAddress, address indexed dstAddress, uint64 nonce, bytes32 payloadHash)",
      "event RelayerParams(bytes adapterParams, uint16 outboundProofType)",
      "event SetChainAddressSize(uint16 indexed chainId, uint256 size)",
      "event SetDefaultAdapterParamsForChainId(uint16 indexed chainId, uint16 indexed proofType, bytes adapterParams)",
      "event SetDefaultConfigForChainId(uint16 indexed chainId, uint16 inboundProofLib, uint64 inboundBlockConfirm, address relayer, uint16 outboundProofType, uint64 outboundBlockConfirm, address oracle)",
      "event SetLayerZeroToken(address indexed tokenAddress)",
      "event SetRemoteUln(uint16 indexed chainId, bytes32 uln)",
      "event SetTreasury(address indexed treasuryAddress)",
      "event WithdrawNative(address indexed msgSender, address indexed to, uint256 amount)",
      "event WithdrawZRO(address indexed msgSender, address indexed to, uint256 amount)",
      "function CONFIG_TYPE_INBOUND_BLOCK_CONFIRMATIONS() view returns (uint256)",
      "function CONFIG_TYPE_INBOUND_PROOF_LIBRARY_VERSION() view returns (uint256)",
      "function CONFIG_TYPE_ORACLE() view returns (uint256)",
      "function CONFIG_TYPE_OUTBOUND_BLOCK_CONFIRMATIONS() view returns (uint256)",
      "function CONFIG_TYPE_OUTBOUND_PROOF_TYPE() view returns (uint256)",
      "function CONFIG_TYPE_RELAYER() view returns (uint256)",
      "function accruedNativeFee(address _address) view returns (uint256)",
      "function addInboundProofLibraryForChain(uint16 _chainId, address _library)",
      "function appConfig(address, uint16) view returns (uint16 inboundProofLibraryVersion, uint64 inboundBlockConfirmations, address relayer, uint16 outboundProofType, uint64 outboundBlockConfirmations, address oracle)",
      "function chainAddressSizeMap(uint16) view returns (uint256)",
      "function defaultAdapterParams(uint16, uint16) view returns (bytes)",
      "function defaultAppConfig(uint16) view returns (uint16 inboundProofLibraryVersion, uint64 inboundBlockConfirmations, address relayer, uint16 outboundProofType, uint64 outboundBlockConfirmations, address oracle)",
      "function enableSupportedOutboundProof(uint16 _chainId, uint16 _proofType)",
      "function endpoint() view returns (address)",
      "function estimateFees(uint16 _dstChainId, address _ua, bytes _payload, bool _payInZRO, bytes _adapterParams) view returns (uint256 nativeFee, uint256 zroFee)",
      "function getAppConfig(uint16 _remoteChainId, address _ua) view returns (tuple(uint16 inboundProofLibraryVersion, uint64 inboundBlockConfirmations, address relayer, uint16 outboundProofType, uint64 outboundBlockConfirmations, address oracle))",
      "function getConfig(uint16 _remoteChainId, address _ua, uint256 _configType) view returns (bytes)",
      "function getOutboundNonce(uint16 _chainId, bytes _path) view returns (uint64)",
      "function hashLookup(address, uint16, bytes32, bytes32) view returns (uint256)",
      "function inboundProofLibrary(uint16, uint16) view returns (address)",
      "function layerZeroToken() view returns (address)",
      "function localChainId() view returns (uint16)",
      "function maxInboundProofLibrary(uint16) view returns (uint16)",
      "function nativeFees(address) view returns (uint256)",
      "function nonceContract() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function send(address _ua, uint64, uint16 _dstChainId, bytes _path, bytes _payload, address _refundAddress, address _zroPaymentAddress, bytes _adapterParams) payable",
      "function setChainAddressSize(uint16 _chainId, uint256 _size)",
      "function setConfig(uint16 _remoteChainId, address _ua, uint256 _configType, bytes _config)",
      "function setDefaultAdapterParamsForChainId(uint16 _chainId, uint16 _proofType, bytes _adapterParams)",
      "function setDefaultConfigForChainId(uint16 _chainId, uint16 _inboundProofLibraryVersion, uint64 _inboundBlockConfirmations, address _relayer, uint16 _outboundProofType, uint64 _outboundBlockConfirmations, address _oracle)",
      "function setLayerZeroToken(address _layerZeroToken)",
      "function setRemoteUln(uint16 _remoteChainId, bytes32 _remoteUln)",
      "function setTreasury(address _treasury)",
      "function supportedOutboundProof(uint16, uint16) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function treasuryContract() view returns (address)",
      "function treasuryZROFees() view returns (uint256)",
      "function ulnLookup(uint16) view returns (bytes32)",
      "function updateHash(uint16 _srcChainId, bytes32 _lookupHash, uint256 _confirmations, bytes32 _blockData)",
      "function validateTransactionProof(uint16 _srcChainId, address _dstAddress, uint256 _gasLimit, bytes32 _lookupHash, bytes32 _blockData, bytes _transactionProof)",
      "function withdrawNative(address _to, uint256 _amount)",
      "function withdrawZRO(address _to, uint256 _amount)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x823d9bb52bd0e7a9dfeeece48e618be135caafb55759baf679e645906cd76f24"
  },
  "shapeFilesHash": "0xd03139725da7a90ddc934f324db29bfdcf99b30f55f1e1e28ed09af948c5cf67"
}
