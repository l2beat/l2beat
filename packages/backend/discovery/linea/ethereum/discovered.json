{
  "name": "linea",
  "chain": "ethereum",
  "blockNumber": 18618865,
  "configHash": "0x32afc6b115e3f460d66d7650302ece2ff7e5dd478565b934dc21e0e75963d04c",
  "version": 3,
  "contracts": [
    {
      "name": "ERC20Bridge",
      "address": "0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x6ccfD65b0b14F67259C77Ca6267104e058dDB292",
        "admin": "0x5B0bb17755FBa06028530682E2FD5bc373931768"
      },
      "implementations": ["0x6ccfD65b0b14F67259C77Ca6267104e058dDB292"],
      "sinceTimestamp": 1691067875,
      "values": {
        "messageService": "0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "remoteSender": "0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
        "sourceChainId": 1,
        "targetChainId": 59144,
        "tokenBeacon": "0x971f46a2852d11D59dbF0909e837cfd06f357DeB"
      },
      "derivedName": "TokenBridge"
    },
    {
      "name": "PlonkVerifierFullLarge",
      "address": "0x2eDEa64BB8b45Fd87c05dC89286f1a60F4f4BEE0",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1697036915
    },
    {
      "name": "BridgedToken",
      "address": "0x36f274C1C197F277EA3C57859729398FCc8a3763",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691067827,
      "values": {
        "_decimals": 0,
        "bridge": "0x0000000000000000000000000000000000000000",
        "decimals": 0,
        "DOMAIN_SEPARATOR": "0x3c2cd540b452637fdaef67438674b505a06d5b5a7d0d30cd3c8b7eb57d2f980f",
        "eip712Domain": [
          "0x0f",
          "",
          "",
          1,
          "0x36f274C1C197F277EA3C57859729398FCc8a3763",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          []
        ],
        "name": "",
        "symbol": "",
        "totalSupply": 0
      }
    },
    {
      "name": "USDCBridgeProxyAdmin",
      "address": "0x41fAD3Df1B07B647D120D055259E474fE8046eb5",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691086259,
      "values": {
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "name": "USDCBridge",
      "address": "0x504A330327A089d8364C4ab3811Ee26976d388ce",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x0eC393209674090368C592A591B25811e490BF36",
        "admin": "0x41fAD3Df1B07B647D120D055259E474fE8046eb5"
      },
      "implementations": ["0x0eC393209674090368C592A591B25811e490BF36"],
      "sinceTimestamp": 1691086271,
      "values": {
        "balance": 14311940294779,
        "messageService": "0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "remoteUSDCBridge": "0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A"
      },
      "derivedName": "L1USDCBridge"
    },
    {
      "name": "ERC20BridgeProxyAdmin",
      "address": "0x5B0bb17755FBa06028530682E2FD5bc373931768",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691067863,
      "values": {
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "name": "PlonkVerifierFull",
      "address": "0x6312E56c17e1011dD0821558034a77BB60D06e1B",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1697036471
    },
    {
      "name": "AdminMultisig",
      "address": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": ["0xF24f1DC519d88246809B660eb56D94048575d083"]
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1689149759,
      "values": {
        "domainSeparator": "0xf720f1fd8bfacb497aa1c16a19a7f17ba6e7bfba9ae23c73812ce40727956e08",
        "getChainId": 1,
        "getOwners": [
          "0x497515578b0BE54d2f0f32cF3F08B85Bf8cEB6aB",
          "0x239d9B860399366F8d25F6e2962Fb2B9D070aEFE",
          "0x12d674b7eCc0302977E956Cd2d5AC8D030fdbea9",
          "0x5822D8457c00FB82203918ED92907b935B9D40AE",
          "0x36a0b60162d7F407d74bd1def01410D20437F87B",
          "0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4",
          "0xab23f8E6c3288952fdf193A17ad49b15F5EE55A1",
          "0xB4dAebe4D01f467701F95f0196fc29033c54dBcb"
        ],
        "getThreshold": 4,
        "nonce": 33,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "ERC20UpgradableBeacon",
      "address": "0x971f46a2852d11D59dbF0909e837cfd06f357DeB",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691067839,
      "values": {
        "implementation": "0x36f274C1C197F277EA3C57859729398FCc8a3763",
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3"
      },
      "derivedName": "UpgradeableBeacon"
    },
    {
      "name": "MultiSend",
      "address": "0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1621955912
    },
    {
      "name": "zkEVM",
      "address": "0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xb32c3D0dDb0063FfB15E8a50b40cC62230D820B3",
        "admin": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6"
      },
      "implementations": ["0xb32c3D0dDb0063FfB15E8a50b40cC62230D820B3"],
      "sinceTimestamp": 1689159923,
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "OPERATOR_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x9228624C3185FCBcf24c1c9dB76D8Bef5f5DAd64"]
          },
          "RATE_LIMIT_SETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_MANAGER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          }
        },
        "currentPeriodAmountInWei": "83287000000000000",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "GENERAL_PAUSE_TYPE": "0x06193bb948d6b7a6fcbe51c193ccf2183bb5d979b6ae5d3a6971b8851461d3b0",
        "generalPause": false,
        "INBOX_STATUS_RECEIVED": 1,
        "INBOX_STATUS_UNKNOWN": 0,
        "L1_L2_PAUSE_TYPE": "0x9a80e24e463f00a8763c4dcec6a92d07d33272fa5db895d8589be70dccb002df",
        "l1l2Pause": false,
        "L2_L1_PAUSE_TYPE": "0x21ea2f4fee4bcb623de15ac222ea5c1464307d884f23394b78ddc07f9c9c7cd8",
        "l2l1Pause": false,
        "limitInWei": "18750000000000000000000",
        "OPERATOR_ROLE": "0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
        "OUTBOX_STATUS_RECEIVED": 2,
        "OUTBOX_STATUS_SENT": 1,
        "OUTBOX_STATUS_UNKNOWN": 0,
        "PAUSE_MANAGER_ROLE": "0x356a809dfdea9198dd76fb76bf6d403ecf13ea675eb89e1eda2db2c4a4676a26",
        "periodInSeconds": 86400,
        "PROVING_SYSTEM_PAUSE_TYPE": "0x3a56b1bd788a764cbd923badb6d0719f21f520455285bf6877e636d08708878d",
        "RATE_LIMIT_SETTER_ROLE": "0x1185e52d62bfbbea270e57d3d09733d221b53ab7a18bae82bb3c6c74bab16d82",
        "sender": "0x00000000000000000000000000000000075BCd15",
        "verifiers": [
          "0x1111111111111111111111111111111111111111",
          "0x1111111111111111111111111111111111111111",
          "0x0000000000000000000000000000000000000000",
          "0x1111111111111111111111111111111111111111",
          "0x1111111111111111111111111111111111111111",
          "0x0000000000000000000000000000000000000000",
          "0x6312E56c17e1011dD0821558034a77BB60D06e1B",
          "0x2eDEa64BB8b45Fd87c05dC89286f1a60F4f4BEE0",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000"
        ]
      },
      "derivedName": "ZkEvmV2"
    },
    {
      "name": "Timelock",
      "address": "0xd6B95c960779c72B8C6752119849318E5d550574",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1689150959,
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xd6B95c960779c72B8C6752119849318E5d550574"]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 0,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimeLock"
    },
    {
      "name": "Roles",
      "address": "0xF24f1DC519d88246809B660eb56D94048575d083",
      "upgradeability": {
        "type": "gnosis safe zodiac module",
        "avatar": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "target": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "guard": "0x0000000000000000000000000000000000000000",
        "modules": []
      },
      "sinceTimestamp": 1700506439,
      "values": {
        "avatar": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "getGuard": "0x0000000000000000000000000000000000000000",
        "guard": "0x0000000000000000000000000000000000000000",
        "multisend": "0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761",
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "roles": {
          "defaultRoles": {},
          "roles": {}
        },
        "target": "0x892bb7EeD71efB060ab90140e7825d8127991DD3"
      },
      "derivedName": "Roles"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1689158711,
      "values": {
        "owner": "0xd6B95c960779c72B8C6752119849318E5d550574"
      }
    }
  ],
  "eoas": [
    "0x00000000000000000000000000000000075BCd15",
    "0x1111111111111111111111111111111111111111",
    "0x12d674b7eCc0302977E956Cd2d5AC8D030fdbea9",
    "0x239d9B860399366F8d25F6e2962Fb2B9D070aEFE",
    "0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
    "0x36a0b60162d7F407d74bd1def01410D20437F87B",
    "0x497515578b0BE54d2f0f32cF3F08B85Bf8cEB6aB",
    "0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4",
    "0x5822D8457c00FB82203918ED92907b935B9D40AE",
    "0x9228624C3185FCBcf24c1c9dB76D8Bef5f5DAd64",
    "0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A",
    "0xab23f8E6c3288952fdf193A17ad49b15F5EE55A1",
    "0xB4dAebe4D01f467701F95f0196fc29033c54dBcb"
  ],
  "abis": {
    "0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x0eC393209674090368C592A591B25811e490BF36": [
      "error AmountTooBig(uint256 amount, uint256 limit)",
      "error NoBurnCapabilities(address addr)",
      "error NotFromRemoteUSDCBridge(address sender, address remoteUSDCBridge)",
      "error NotMessageService(address addr, address messageService)",
      "error RemoteUSDCBridgeAlreadySet(address remoteUSDCBridge)",
      "error RemoteUSDCBridgeNotSet()",
      "error SameMessageServiceAddr(address messageService)",
      "error SenderBalanceTooLow(uint256 amount, uint256 balance)",
      "error ZeroAddressNotAllowed(address addr)",
      "error ZeroAmountNotAllowed(uint256 amount)",
      "event Deposited(address indexed depositor, uint256 amount, address indexed to)",
      "event Initialized(uint8 version)",
      "event MessageServiceUpdated(address indexed oldAddress, address indexed newAddress)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event ReceivedFromOtherLayer(address indexed recipient, uint256 indexed amount)",
      "event RemoteUSDCBridgeSet(address indexed newRemoteUSDCBridge)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function balance() view returns (uint256)",
      "function changeMessageService(address newMessageService)",
      "function deposit(uint256 amount) payable",
      "function depositTo(uint256 amount, address to) payable",
      "function initialize(address _messageService, address _usdc)",
      "function messageService() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function receiveFromOtherLayer(address recipient, uint256 amount)",
      "function remoteUSDCBridge() view returns (address)",
      "function renounceOwnership()",
      "function rescueTransfer(address to, uint256 amount)",
      "function setRemoteUSDCBridge(address _remoteUSDCBridge)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function usdc() view returns (address)"
    ],
    "0x2eDEa64BB8b45Fd87c05dC89286f1a60F4f4BEE0": [
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)"
    ],
    "0x36f274C1C197F277EA3C57859729398FCc8a3763": [
      "constructor()",
      "error OnlyBridge(address bridgeAddress)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function _decimals() view returns (uint8)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function bridge() view returns (address)",
      "function burn(address _account, uint256 _amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string _tokenName, string _tokenSymbol, uint8 _tokenDecimals)",
      "function mint(address _recipient, uint256 _amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x41fAD3Df1B07B647D120D055259E474fE8046eb5": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x504A330327A089d8364C4ab3811Ee26976d388ce": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x5B0bb17755FBa06028530682E2FD5bc373931768": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x6312E56c17e1011dD0821558034a77BB60D06e1B": [
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)"
    ],
    "0x6ccfD65b0b14F67259C77Ca6267104e058dDB292": [
      "constructor()",
      "error AlreadyBridgedToken(address token)",
      "error AlreadyBrigedToNativeTokenSet(address token)",
      "error CallerIsNotMessageService()",
      "error InvalidPermitData(bytes4 permitData, bytes4 permitSelector)",
      "error NotReserved(address token)",
      "error PermitNotAllowingBridge(address spender)",
      "error PermitNotFromSender(address owner)",
      "error RemoteTokenBridgeAlreadySet(address remoteTokenBridge)",
      "error ReservedToken(address token)",
      "error SenderNotAuthorized()",
      "error StatusAddressNotAllowed(address token)",
      "error TokenNotDeployed(address token)",
      "error ZeroAddressNotAllowed()",
      "error ZeroAmountNotAllowed(uint256 amount)",
      "event BridgingFinalized(address indexed nativeToken, address indexed bridgedToken, uint256 indexed amount, address recipient)",
      "event BridgingInitiated(address indexed sender, address recipient, address indexed token, uint256 indexed amount)",
      "event CustomContractSet(address indexed nativeToken, address indexed customContract, address indexed setBy)",
      "event DeploymentConfirmed(address[] tokens, address indexed confirmedBy)",
      "event Initialized(uint8 version)",
      "event MessageServiceUpdated(address indexed newMessageService, address indexed oldMessageService, address indexed setBy)",
      "event NewToken(address indexed token)",
      "event NewTokenDeployed(address indexed bridgedToken, address indexed nativeToken)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RemoteTokenBridgeSet(address indexed remoteTokenBridge, address indexed setBy)",
      "event TokenDeployed(address indexed token)",
      "event TokenReserved(address indexed token)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function bridgeToken(address _token, uint256 _amount, address _recipient) payable",
      "function bridgeTokenWithPermit(address _token, uint256 _amount, address _recipient, bytes _permitData) payable",
      "function bridgedToNativeToken(address) view returns (address)",
      "function completeBridging(address _nativeToken, uint256 _amount, address _recipient, uint256 _chainId, bytes _tokenMetadata)",
      "function confirmDeployment(address[] _tokens) payable",
      "function initialize(address _securityCouncil, address _messageService, address _tokenBeacon, uint256 _sourceChainId, uint256 _targetChainId, address[] _reservedTokens)",
      "function messageService() view returns (address)",
      "function nativeToBridgedToken(uint256, address) view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function remoteSender() view returns (address)",
      "function removeReserved(address _token)",
      "function renounceOwnership()",
      "function setCustomContract(address _nativeToken, address _targetContract)",
      "function setDeployed(address[] _nativeTokens)",
      "function setMessageService(address _messageService)",
      "function setRemoteTokenBridge(address _remoteTokenBridge)",
      "function setReserved(address _token)",
      "function sourceChainId() view returns (uint256)",
      "function targetChainId() view returns (uint256)",
      "function tokenBeacon() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()"
    ],
    "0x892bb7EeD71efB060ab90140e7825d8127991DD3": [
      "constructor(address _singleton)"
    ],
    "0x971f46a2852d11D59dbF0909e837cfd06f357DeB": [
      "constructor(address implementation_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)"
    ],
    "0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761": [
      "constructor()",
      "function multiSend(bytes transactions) payable"
    ],
    "0xb32c3D0dDb0063FfB15E8a50b40cC62230D820B3": [
      "constructor()",
      "error BlockTimestampError()",
      "error EmptyBlock()",
      "error EmptyBlockDataArray()",
      "error FeePaymentFailed(address recipient)",
      "error FeeTooLow()",
      "error InvalidProof()",
      "error InvalidProofType()",
      "error IsNotPaused(bytes32 pauseType)",
      "error IsPaused(bytes32 pauseType)",
      "error L1L2MessageNotSent(bytes32 messageHash)",
      "error LimitIsZero()",
      "error MemoryOutOfBounds(uint256 inde)",
      "error MessageAlreadyReceived(bytes32 messageHash)",
      "error MessageAlreadySent()",
      "error MessageDoesNotExistOrHasAlreadyBeenClaimed()",
      "error MessageSendingFailed(address destination)",
      "error NotList()",
      "error PeriodIsZero()",
      "error ProofIsEmpty()",
      "error RateLimitExceeded()",
      "error StartingRootHashDoesNotMatch()",
      "error TransactionShort()",
      "error UnknownTransactionType()",
      "error ValueSentTooLow()",
      "error ValueShouldBeGreaterThanFee()",
      "error WrongBytesLength()",
      "error ZeroAddressNotAllowed()",
      "event AmountUsedInPeriodReset(address indexed resettingAddress)",
      "event BlockFinalized(uint256 indexed blockNumber, bytes32 indexed stateRootHash)",
      "event BlocksVerificationDone(uint256 indexed lastBlockFinalized, bytes32 startingRootHash, bytes32 finalRootHash)",
      "event Initialized(uint8 version)",
      "event L1L2MessagesReceivedOnL2(bytes32[] messageHashes)",
      "event L2L1MessageHashAddedToInbox(bytes32 indexed messageHash)",
      "event LimitAmountChanged(address indexed amountChangeBy, uint256 amount, bool amountUsedLoweredToLimit, bool usedAmountResetToZero)",
      "event MessageClaimed(bytes32 indexed _messageHash)",
      "event MessageSent(address indexed _from, address indexed _to, uint256 _fee, uint256 _value, uint256 _nonce, bytes _calldata, bytes32 indexed _messageHash)",
      "event Paused(address messageSender, bytes32 pauseType)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event UnPaused(address messageSender, bytes32 pauseType)",
      "event VerifierAddressChanged(address indexed verifierAddress, uint256 indexed proofType, address indexed verifierSetBy)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function GENERAL_PAUSE_TYPE() view returns (bytes32)",
      "function INBOX_STATUS_RECEIVED() view returns (uint8)",
      "function INBOX_STATUS_UNKNOWN() view returns (uint8)",
      "function L1_L2_PAUSE_TYPE() view returns (bytes32)",
      "function L2_L1_PAUSE_TYPE() view returns (bytes32)",
      "function OPERATOR_ROLE() view returns (bytes32)",
      "function OUTBOX_STATUS_RECEIVED() view returns (uint8)",
      "function OUTBOX_STATUS_SENT() view returns (uint8)",
      "function OUTBOX_STATUS_UNKNOWN() view returns (uint8)",
      "function PAUSE_MANAGER_ROLE() view returns (bytes32)",
      "function PROVING_SYSTEM_PAUSE_TYPE() view returns (bytes32)",
      "function RATE_LIMIT_SETTER_ROLE() view returns (bytes32)",
      "function claimMessage(address _from, address _to, uint256 _fee, uint256 _value, address _feeRecipient, bytes _calldata, uint256 _nonce)",
      "function currentL2BlockNumber() view returns (uint256)",
      "function currentPeriodAmountInWei() view returns (uint256)",
      "function currentPeriodEnd() view returns (uint256)",
      "function currentTimestamp() view returns (uint256)",
      "function finalizeBlocks(tuple(bytes32 blockRootHash, uint32 l2BlockTimestamp, bytes[] transactions, bytes32[] l2ToL1MsgHashes, bytes fromAddresses, uint16[] batchReceptionIndices)[] _blocksData, bytes _proof, uint256 _proofType, bytes32 _parentStateRootHash)",
      "function finalizeBlocksWithoutProof(tuple(bytes32 blockRootHash, uint32 l2BlockTimestamp, bytes[] transactions, bytes32[] l2ToL1MsgHashes, bytes fromAddresses, uint16[] batchReceptionIndices)[] _blocksData)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function inboxL2L1MessageStatus(bytes32) view returns (uint256)",
      "function initialize(bytes32 _initialStateRootHash, uint256 _initialL2BlockNumber, address _defaultVerifier, address _securityCouncil, address[] _operators, uint256 _rateLimitPeriodInSeconds, uint256 _rateLimitAmountInWei)",
      "function limitInWei() view returns (uint256)",
      "function nextMessageNumber() view returns (uint256)",
      "function outboxL1L2MessageStatus(bytes32) view returns (uint256)",
      "function pauseByType(bytes32 _pauseType)",
      "function pauseTypeStatuses(bytes32) view returns (bool)",
      "function periodInSeconds() view returns (uint256)",
      "function renounceRole(bytes32 role, address account)",
      "function resetAmountUsedInPeriod()",
      "function resetRateLimitAmount(uint256 _amount)",
      "function revokeRole(bytes32 role, address account)",
      "function sendMessage(address _to, uint256 _fee, bytes _calldata) payable",
      "function sender() view returns (address)",
      "function setVerifierAddress(address _newVerifierAddress, uint256 _proofType)",
      "function stateRootHashes(uint256) view returns (bytes32)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unPauseByType(bytes32 _pauseType)",
      "function verifiers(uint256) view returns (address)"
    ],
    "0xd19d4B5d358258f05D7B411E21A1460D11B0876F": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xd6B95c960779c72B8C6752119849318E5d550574": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xF24f1DC519d88246809B660eb56D94048575d083": [
      "constructor(address _owner, address _avatar, address _target)",
      "error ArraysDifferentLength()",
      "error ModuleTransactionFailed()",
      "error NoMembership()",
      "error SetUpModulesAlreadyCalled()",
      "event AssignRoles(address module, uint16[] roles, bool[] memberOf)",
      "event AvatarSet(address indexed previousAvatar, address indexed newAvatar)",
      "event ChangedGuard(address guard)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RolesModSetup(address indexed initiator, address indexed owner, address indexed avatar, address target)",
      "event SetDefaultRole(address module, uint16 defaultRole)",
      "event SetMultisendAddress(address multisendAddress)",
      "event TargetSet(address indexed previousTarget, address indexed newTarget)",
      "function allowTarget(uint16 role, address targetAddress, uint8 options)",
      "function assignRoles(address module, uint16[] _roles, bool[] memberOf)",
      "function avatar() view returns (address)",
      "function defaultRoles(address) view returns (uint16)",
      "function disableModule(address prevModule, address module)",
      "function enableModule(address module)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool, bytes)",
      "function execTransactionWithRole(address to, uint256 value, bytes data, uint8 operation, uint16 role, bool shouldRevert) returns (bool success)",
      "function execTransactionWithRoleReturnData(address to, uint256 value, bytes data, uint8 operation, uint16 role, bool shouldRevert) returns (bool success, bytes returnData)",
      "function getGuard() view returns (address _guard)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function guard() view returns (address)",
      "function isModuleEnabled(address _module) view returns (bool)",
      "function multisend() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function revokeTarget(uint16 role, address targetAddress)",
      "function scopeAllowFunction(uint16 role, address targetAddress, bytes4 functionSig, uint8 options)",
      "function scopeFunction(uint16 role, address targetAddress, bytes4 functionSig, bool[] isParamScoped, uint8[] paramType, uint8[] paramComp, bytes[] compValue, uint8 options)",
      "function scopeFunctionExecutionOptions(uint16 role, address targetAddress, bytes4 functionSig, uint8 options)",
      "function scopeParameter(uint16 role, address targetAddress, bytes4 functionSig, uint256 paramIndex, uint8 paramType, uint8 paramComp, bytes compValue)",
      "function scopeParameterAsOneOf(uint16 role, address targetAddress, bytes4 functionSig, uint256 paramIndex, uint8 paramType, bytes[] compValues)",
      "function scopeRevokeFunction(uint16 role, address targetAddress, bytes4 functionSig)",
      "function scopeTarget(uint16 role, address targetAddress)",
      "function setAvatar(address _avatar)",
      "function setDefaultRole(address module, uint16 role)",
      "function setGuard(address _guard)",
      "function setMultisend(address _multisend)",
      "function setTarget(address _target)",
      "function setUp(bytes initParams)",
      "function target() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unscopeParameter(uint16 role, address targetAddress, bytes4 functionSig, uint8 paramIndex)"
    ],
    "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ]
  }
}
