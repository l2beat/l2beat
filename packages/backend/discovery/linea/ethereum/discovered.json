{
  "name": "linea",
  "chain": "ethereum",
  "blockNumber": 21078909,
  "configHash": "0x662643b938e5eec82dd83a02389fd5e96ce033ad36f2b1a31bdfafe9f86e8251",
  "contracts": [
    {
      "name": "ERC20Bridge",
      "address": "0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
      "sourceHashes": [
        "0x36a2777510f3b20063560bdcb7f657da283bcfdc484a19b0a0f77d18f6a8b5e1",
        "0x4c5d4e5696bc435eefd0ba909c6a8a7748c4c49260fcb51a360f07af3c38d76f"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xd6B95c960779c72B8C6752119849318E5d550574",
          "via": [
            {
              "address": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
              "delay": 0
            }
          ]
        }
      ],
      "sinceTimestamp": 1691067875,
      "values": {
        "$admin": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
        "$implementation": "0xd52c09E67aF3BE0977B52b4817366e9BaB5dCFA2",
        "$pastUpgrades": [
          [
            "2023-08-03T13:04:35.000Z",
            "0xbc08c4596eeee0a2e2527f03c0f2e85ec9e76e062b5f86eb435a67bca8f21122",
            ["0x6ccfD65b0b14F67259C77Ca6267104e058dDB292"]
          ],
          [
            "2024-06-05T11:49:35.000Z",
            "0x497bdab1d3fb97eed72a55fc6e3672694195b08f949c2e0e84ea4b36428ee9c6",
            ["0xd52c09E67aF3BE0977B52b4817366e9BaB5dCFA2"]
          ]
        ],
        "$upgradeCount": 2,
        "messageService": "0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "remoteSender": "0x353012dc4a9A6cF55c941bADC267f82004A8ceB9",
        "sourceChainId": 1,
        "targetChainId": 59144,
        "tokenBeacon": "0x971f46a2852d11D59dbF0909e837cfd06f357DeB"
      },
      "derivedName": "TokenBridge"
    },
    {
      "name": "BridgedToken",
      "address": "0x36f274C1C197F277EA3C57859729398FCc8a3763",
      "sourceHashes": [
        "0x8a6c3f5b047664111c8f981a4cb5d8a79c5652771665343ffdd15ae64fa253bf"
      ],
      "sinceTimestamp": 1691067827,
      "values": {
        "_decimals": 0,
        "$immutable": true,
        "bridge": "0x0000000000000000000000000000000000000000",
        "decimals": 0,
        "DOMAIN_SEPARATOR": "0x3c2cd540b452637fdaef67438674b505a06d5b5a7d0d30cd3c8b7eb57d2f980f",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "",
          "version": "",
          "chainId": 1,
          "verifyingContract": "0x36f274C1C197F277EA3C57859729398FCc8a3763",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "name": "",
        "symbol": "",
        "totalSupply": 0
      }
    },
    {
      "name": "USDCBridgeProxyAdmin",
      "address": "0x41fAD3Df1B07B647D120D055259E474fE8046eb5",
      "sourceHashes": [
        "0x31b987ba8db4fc147856ec1375d9df4f40d58c4dc97e16be5b38ee2e3c3cc6f9"
      ],
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x504A330327A089d8364C4ab3811Ee26976d388ce"
        }
      ],
      "sinceTimestamp": 1691086259,
      "values": {
        "$immutable": true,
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "name": "USDCBridge",
      "address": "0x504A330327A089d8364C4ab3811Ee26976d388ce",
      "sourceHashes": [
        "0x6d1bbfb1ed7d88848e594dc11366fbed3d53c5a507022c04dbeea72ef549cd6a",
        "0x27a9694e3bfad3a6ec23be7f15d8e6093b4d3a12eba4d10de0d9c660f5a47d30"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x41fAD3Df1B07B647D120D055259E474fE8046eb5",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["balance"],
      "sinceTimestamp": 1691086271,
      "values": {
        "$admin": "0x41fAD3Df1B07B647D120D055259E474fE8046eb5",
        "$implementation": "0x0eC393209674090368C592A591B25811e490BF36",
        "$pastUpgrades": [
          [
            "2023-08-03T18:11:11.000Z",
            "0xa93648a8d01d65bea363bc2f6e19897e42f9af999370c07cb2a0ea6a5401b6b0",
            ["0x16Db542C30fB3519D11CF8F632077c62c1a944fd"]
          ],
          [
            "2023-09-01T20:25:47.000Z",
            "0xe752ce539119fc11af6239e8b26a79d80c9e84cec19ac6aca060f466853f5b7d",
            ["0x0eC393209674090368C592A591B25811e490BF36"]
          ]
        ],
        "$upgradeCount": 2,
        "balance": 30865176278955,
        "messageService": "0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "paused": false,
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "remoteUSDCBridge": "0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A"
      },
      "derivedName": "L1USDCBridge"
    },
    {
      "name": "AdminMultisig",
      "address": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1689149759,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x497515578b0BE54d2f0f32cF3F08B85Bf8cEB6aB",
          "0x239d9B860399366F8d25F6e2962Fb2B9D070aEFE",
          "0x12d674b7eCc0302977E956Cd2d5AC8D030fdbea9",
          "0x5822D8457c00FB82203918ED92907b935B9D40AE",
          "0x9376c137AF5124FFc39bD8940A3D88D1cd508992",
          "0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4",
          "0xab23f8E6c3288952fdf193A17ad49b15F5EE55A1",
          "0xB4dAebe4D01f467701F95f0196fc29033c54dBcb"
        ],
        "$threshold": 4,
        "domainSeparator": "0xf720f1fd8bfacb497aa1c16a19a7f17ba6e7bfba9ae23c73812ce40727956e08",
        "getChainId": 1,
        "GnosisSafe_modules": ["0xF24f1DC519d88246809B660eb56D94048575d083"],
        "multisigThreshold": "4 of 8 (50%)",
        "nonce": 51,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "ERC20UpgradableBeacon",
      "address": "0x971f46a2852d11D59dbF0909e837cfd06f357DeB",
      "sourceHashes": [
        "0x02777a2575f23718a66224f10ac65db704c8c844f66d08dd5f9afd58b869f133"
      ],
      "sinceTimestamp": 1691067839,
      "values": {
        "$immutable": true,
        "implementation": "0x36f274C1C197F277EA3C57859729398FCc8a3763",
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3"
      },
      "derivedName": "UpgradeableBeacon"
    },
    {
      "name": "MultiSend",
      "address": "0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761",
      "sourceHashes": [
        "0x3b1182a0432445f884d447d11823ec4b120a198eeaa3d9f3024384d87ee77cf1"
      ],
      "sinceTimestamp": 1621955912,
      "values": { "$immutable": true }
    },
    {
      "name": "VerifierProofType3",
      "address": "0xBfF4a03A355eEF7dA720bBC7878F9BdBBE81fe6F",
      "sourceHashes": [
        "0x47f89dc90dfffe4c8914bdac8b7c92bc4cbee0df1bf52f3926e43fe0934a2ff4"
      ],
      "sinceTimestamp": 1721038943,
      "values": { "$immutable": true },
      "derivedName": "PlonkVerifierForMultiTypeDataAggregation"
    },
    {
      "name": "zkEVM",
      "address": "0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
      "sourceHashes": [
        "0x36a2777510f3b20063560bdcb7f657da283bcfdc484a19b0a0f77d18f6a8b5e1",
        "0x6eace22f38b33b52c0608ca553753365c7aaa2ac2e9efba018e6f2c4864b9e40"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xd6B95c960779c72B8C6752119849318E5d550574",
          "via": [
            {
              "address": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
              "delay": 0
            }
          ]
        }
      ],
      "ignoreInWatchMode": [
        "currentPeriodAmountInWei",
        "currentL2StoredL1MessageNumber",
        "currentL2StoredL1RollingHash",
        "currentFinalizedShnarf",
        "currentFinalizedState"
      ],
      "sinceTimestamp": 1689159923,
      "values": {
        "$admin": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
        "$implementation": "0x1825242411792536469Cbb5843fd27Ce3e9e583A",
        "$pastUpgrades": [
          [
            "2023-07-12T11:05:23.000Z",
            "0x3564f15a274bdc49a6ad8af161113d20a678d87efbd3d708540a9b4d026f1122",
            ["0xE8f627df6Cb02e415b2e6d6e112323BD269b4706"]
          ],
          [
            "2023-07-12T12:57:47.000Z",
            "0x8ee4253600d68665e8d52a522d8ba7136639187b87f8079b881de9e6d1f20d2a",
            ["0xE8f627df6Cb02e415b2e6d6e112323BD269b4706"]
          ],
          [
            "2023-07-15T13:31:23.000Z",
            "0x628efc29f5b2267f23cf613720003fafe671ee47db60b4f6610f5ae1ab838555",
            ["0x4c8d4Ce72afAA417d1F7E833725FdB4E793cd6b3"]
          ],
          [
            "2023-08-08T16:58:47.000Z",
            "0xdff29a7f65b6bec4e8288673a5ca55e12081b4d55879e600817484f28c5a80b1",
            ["0xb32c3D0dDb0063FfB15E8a50b40cC62230D820B3"]
          ],
          [
            "2024-02-13T08:39:59.000Z",
            "0xb4ed5b2646e45744945a4fc51da0e5e687ffe26f570b7aa3abb7b1fd4a460ea4",
            ["0xAA4b3a9515c921996Abe7930bF75Eff7466a4457"]
          ],
          [
            "2024-03-26T10:29:47.000Z",
            "0x565c77e109aac4df41d81457bdfbdd17782d8bca9a1330c68a271c64f35d05e5",
            ["0x934Dd4C63E285551CEceF8459103554D0096c179"]
          ],
          [
            "2024-06-05T11:49:35.000Z",
            "0x497bdab1d3fb97eed72a55fc6e3672694195b08f949c2e0e84ea4b36428ee9c6",
            ["0x53fC68bFfC03D17804e5A901DE42d1eeF2e64562"]
          ],
          [
            "2024-10-29T15:35:47.000Z",
            "0x0970f422c80627f28916f9c5583ff6298070893debd191ead0cf39778e4bae14",
            ["0x1825242411792536469Cbb5843fd27Ce3e9e583A"]
          ]
        ],
        "$upgradeCount": 8,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "OPERATOR_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": [
              "0x46d2F319fd42165D4318F099E143dEA8124E9E3e",
              "0x52FF08F313A00A54e3Beffb5C4a7F7446eFb6754"
            ]
          },
          "RATE_LIMIT_SETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_MANAGER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "VERIFIER_SETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0xd6B95c960779c72B8C6752119849318E5d550574"]
          }
        },
        "currentFinalizedShnarf": "0x29a59b1a7cca950c1b83c59432dc131eed3b12392922673c6f1b996a88f88849",
        "currentFinalizedState": "0xa846fe92ca2b505d1bd3e6e69b6656f9b55016d4bccd3e8d0d999da3945dbb64",
        "currentL2StoredL1MessageNumber": 626080,
        "currentL2StoredL1RollingHash": "0xc2453f13443df7f6fd1a09328e1ed9aca29edf668321fb8376948908127c22ac",
        "currentPeriodAmountInWei": "8309700000000000000",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "GENERAL_PAUSE_TYPE": 1,
        "generalPause": false,
        "GENESIS_SHNARF": "0x47452a1b9ebadfe02bdd02f580fa1eba17680d57eec968a591644d05d78ee84f",
        "INBOX_STATUS_RECEIVED": 1,
        "INBOX_STATUS_UNKNOWN": 0,
        "L1_L2_PAUSE_TYPE": 2,
        "l1l2Pause": false,
        "L2_L1_PAUSE_TYPE": 3,
        "l2l1Pause": false,
        "limitInWei": "18750000000000000000000",
        "OPERATOR_ROLE": "0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
        "OUTBOX_STATUS_RECEIVED": 2,
        "OUTBOX_STATUS_SENT": 1,
        "OUTBOX_STATUS_UNKNOWN": 0,
        "PAUSE_MANAGER_ROLE": "0x356a809dfdea9198dd76fb76bf6d403ecf13ea675eb89e1eda2db2c4a4676a26",
        "periodInSeconds": 86400,
        "provenCompressedBlocksWithoutProof": [2242752],
        "PROVING_SYSTEM_PAUSE_TYPE": 4,
        "RATE_LIMIT_SETTER_ROLE": "0x1185e52d62bfbbea270e57d3d09733d221b53ab7a18bae82bb3c6c74bab16d82",
        "sender": "0x0000000000000000000000000000000000000000",
        "systemMigrationBlock": 19219000,
        "VERIFIER_SETTER_ROLE": "0x32937fd5162e282df7e9a14a5073a2425321c7966eaf70ed6c838a1006d84c4c",
        "verifiers": [
          "0x1111111111111111111111111111111111111111",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000",
          "0xBfF4a03A355eEF7dA720bBC7878F9BdBBE81fe6F",
          "0x1111111111111111111111111111111111111111",
          "0x0000000000000000000000000000000000000000",
          "0x1111111111111111111111111111111111111111",
          "0x1111111111111111111111111111111111111111",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000"
        ]
      },
      "fieldMeta": {
        "verifiers": {
          "description": "Mapping of proof type to ZK Plonk Verifier contract"
        }
      },
      "derivedName": "LineaRollup"
    },
    {
      "name": "Timelock",
      "address": "0xd6B95c960779c72B8C6752119849318E5d550574",
      "sourceHashes": [
        "0xaf04cf94ef4bf759d6466fa262a5e8e54f6d5c9652286fe5d71c9a904de27e5c"
      ],
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319",
          "via": [{ "address": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6" }]
        },
        {
          "permission": "upgrade",
          "target": "0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
          "via": [{ "address": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "target": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6"
        }
      ],
      "sinceTimestamp": 1689150959,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xd6B95c960779c72B8C6752119849318E5d550574"]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 0,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimeLock"
    },
    {
      "name": "Roles",
      "address": "0xF24f1DC519d88246809B660eb56D94048575d083",
      "sourceHashes": [
        "0x699a67bde09c0d73c29ec9de66133bfee484544494865d954ac01f9736efed30"
      ],
      "proxyType": "gnosis safe zodiac module",
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "target": "0x892bb7EeD71efB060ab90140e7825d8127991DD3"
        }
      ],
      "sinceTimestamp": 1700506439,
      "values": {
        "$immutable": false,
        "avatar": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "getGuard": "0x0000000000000000000000000000000000000000",
        "guard": "0x0000000000000000000000000000000000000000",
        "multisend": "0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761",
        "owner": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "roles": {
          "defaultRoles": {},
          "roles": {
            "1": {
              "members": { "0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8": true },
              "targets": {
                "0xd19d4B5d358258f05D7B411E21A1460D11B0876F": {
                  "clearance": "Function",
                  "options": "None"
                },
                "0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319": {
                  "clearance": "Function",
                  "options": "None"
                },
                "0x504A330327A089d8364C4ab3811Ee26976d388ce": {
                  "clearance": "Function",
                  "options": "None"
                }
              },
              "functions": {
                "0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319": {
                  "pause()": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  }
                },
                "0x504A330327A089d8364C4ab3811Ee26976d388ce": {
                  "pause()": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  }
                },
                "0xd19d4B5d358258f05D7B411E21A1460D11B0876F": {
                  "pauseByType(uint8)": {
                    "options": "None",
                    "wildcarded": true,
                    "parameters": []
                  }
                }
              },
              "compValues": {},
              "compValuesOneOf": {}
            }
          }
        },
        "target": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "ZodiacModule_avatar": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
        "ZodiacModule_guard": "0x0000000000000000000000000000000000000000",
        "ZodiacModule_modules": ["0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8"],
        "ZodiacModule_target": "0x892bb7EeD71efB060ab90140e7825d8127991DD3"
      },
      "derivedName": "Roles"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x68f689a23d3badd91255602a1eb13d4789baedc16d904c3103244642fc78ca8f"
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319"
        },
        {
          "permission": "upgrade",
          "target": "0xd19d4B5d358258f05D7B411E21A1460D11B0876F"
        }
      ],
      "sinceTimestamp": 1689158711,
      "values": {
        "$immutable": true,
        "owner": "0xd6B95c960779c72B8C6752119849318E5d550574"
      }
    }
  ],
  "eoas": [
    { "address": "0x0000000000000000000000000000000000000000" },
    { "address": "0x1111111111111111111111111111111111111111" },
    { "address": "0x12d674b7eCc0302977E956Cd2d5AC8D030fdbea9" },
    { "address": "0x239d9B860399366F8d25F6e2962Fb2B9D070aEFE" },
    { "address": "0x353012dc4a9A6cF55c941bADC267f82004A8ceB9" },
    { "address": "0x453B3A4b4d64B4E6f472A306c3D4Fc318C34bbA8" },
    { "address": "0x46d2F319fd42165D4318F099E143dEA8124E9E3e" },
    { "address": "0x497515578b0BE54d2f0f32cF3F08B85Bf8cEB6aB" },
    { "address": "0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4" },
    { "address": "0x52FF08F313A00A54e3Beffb5C4a7F7446eFb6754" },
    { "address": "0x5822D8457c00FB82203918ED92907b935B9D40AE" },
    { "address": "0x9376c137AF5124FFc39bD8940A3D88D1cd508992" },
    { "address": "0xA2Ee6Fce4ACB62D95448729cDb781e3BEb62504A" },
    { "address": "0xab23f8E6c3288952fdf193A17ad49b15F5EE55A1" },
    { "address": "0xB4dAebe4D01f467701F95f0196fc29033c54dBcb" }
  ],
  "abis": {
    "0x051F1D88f0aF5763fB888eC4378b4D8B29ea3319": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x0eC393209674090368C592A591B25811e490BF36": [
      "error AmountTooBig(uint256 amount, uint256 limit)",
      "error NoBurnCapabilities(address addr)",
      "error NotFromRemoteUSDCBridge(address sender, address remoteUSDCBridge)",
      "error NotMessageService(address addr, address messageService)",
      "error RemoteUSDCBridgeAlreadySet(address remoteUSDCBridge)",
      "error RemoteUSDCBridgeNotSet()",
      "error SameMessageServiceAddr(address messageService)",
      "error SenderBalanceTooLow(uint256 amount, uint256 balance)",
      "error ZeroAddressNotAllowed(address addr)",
      "error ZeroAmountNotAllowed(uint256 amount)",
      "event Deposited(address indexed depositor, uint256 amount, address indexed to)",
      "event Initialized(uint8 version)",
      "event MessageServiceUpdated(address indexed oldAddress, address indexed newAddress)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event ReceivedFromOtherLayer(address indexed recipient, uint256 indexed amount)",
      "event RemoteUSDCBridgeSet(address indexed newRemoteUSDCBridge)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function balance() view returns (uint256)",
      "function changeMessageService(address newMessageService)",
      "function deposit(uint256 amount) payable",
      "function depositTo(uint256 amount, address to) payable",
      "function initialize(address _messageService, address _usdc)",
      "function messageService() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function receiveFromOtherLayer(address recipient, uint256 amount)",
      "function remoteUSDCBridge() view returns (address)",
      "function renounceOwnership()",
      "function rescueTransfer(address to, uint256 amount)",
      "function setRemoteUSDCBridge(address _remoteUSDCBridge)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function usdc() view returns (address)"
    ],
    "0x1825242411792536469Cbb5843fd27Ce3e9e583A": [
      "constructor()",
      "error BlobSubmissionDataIsMissing()",
      "error BytesLengthNotMultipleOf32()",
      "error BytesLengthNotMultipleOfTwo(uint256 bytesLength)",
      "error DataAlreadySubmitted(bytes32 currentDataHash)",
      "error DataStartingBlockDoesNotMatch(uint256 expected, uint256 actual)",
      "error EmptyBlobData()",
      "error EmptyBlobDataAtIndex(uint256 index)",
      "error EmptySubmissionData()",
      "error FeePaymentFailed(address recipient)",
      "error FeeTooLow()",
      "error FinalBlockDoesNotMatchShnarfFinalBlock(uint256 expected, uint256 actual)",
      "error FinalBlockNumberLessThanOrEqualToLastFinalizedBlock(uint256 finalBlockNumber, uint256 lastFinalizedBlock)",
      "error FinalBlockStateEqualsZeroHash()",
      "error FinalShnarfWrong(bytes32 expected, bytes32 value)",
      "error FinalizationInTheFuture(uint256 l2BlockTimestamp, uint256 currentBlockTimestamp)",
      "error FinalizationStateIncorrect(bytes32 expected, bytes32 value)",
      "error FirstBlockGreaterThanFinalBlock(uint256 firstBlockNumber, uint256 finalBlockNumber)",
      "error FirstBlockLessThanOrEqualToLastFinalizedBlock(uint256 firstBlockNumber, uint256 lastFinalizedBlock)",
      "error FirstByteIsNotZero()",
      "error InvalidMerkleProof()",
      "error InvalidProof()",
      "error InvalidProofType()",
      "error IsNotPaused(uint256 pauseType)",
      "error IsPaused(uint256 pauseType)",
      "error L1RollingHashDoesNotExistOnL1(uint256 messageNumber, bytes32 rollingHash)",
      "error L2MerkleRootAlreadyAnchored(bytes32 merkleRoot)",
      "error L2MerkleRootDoesNotExist()",
      "error LastFinalizedShnarfWrong(bytes32 expected, bytes32 actual)",
      "error LimitIsZero()",
      "error MessageAlreadyClaimed(uint256 messageIndex)",
      "error MessageDoesNotExistOrHasAlreadyBeenClaimed(bytes32 messageHash)",
      "error MessageSendingFailed(address destination)",
      "error MissingMessageNumberForRollingHash(bytes32 rollingHash)",
      "error MissingRollingHashForMessageNumber(uint256 messageNumber)",
      "error ParentStateRootHashInvalid(bytes32 expected, bytes32 actual)",
      "error PeriodIsZero()",
      "error PointEvaluationFailed()",
      "error PointEvaluationResponseInvalid(uint256 fieldElements, uint256 blsCurveModulus)",
      "error PrecompileReturnDataLengthWrong(uint256 expected, uint256 actual)",
      "error ProofIsEmpty()",
      "error ProofLengthDifferentThanMerkleDepth(uint256 actual, uint256 expected)",
      "error RateLimitExceeded()",
      "error ReentrantCall()",
      "error ShnarfAndFinalBlockNumberLengthsMismatched(uint256 shnarfsLength, uint256 finalBlockNumbers)",
      "error SnarkHashIsZeroHash()",
      "error StartingRootHashDoesNotMatch()",
      "error ValueSentTooLow()",
      "error ZeroAddressNotAllowed()",
      "event AmountUsedInPeriodReset(address indexed resettingAddress)",
      "event BlockFinalized(uint256 indexed blockNumber, bytes32 indexed stateRootHash, bool indexed finalizedWithProof)",
      "event BlocksVerificationDone(uint256 indexed lastBlockFinalized, bytes32 startingRootHash, bytes32 finalRootHash)",
      "event DataFinalized(uint256 indexed lastBlockFinalized, bytes32 indexed startingRootHash, bytes32 indexed finalRootHash, bool withProof)",
      "event DataSubmittedV2(bytes32 indexed shnarf, uint256 indexed startBlock, uint256 indexed endBlock)",
      "event Initialized(uint8 version)",
      "event L1L2MessagesReceivedOnL2(bytes32[] messageHashes)",
      "event L2L1MessageHashAddedToInbox(bytes32 indexed messageHash)",
      "event L2MerkleRootAdded(bytes32 indexed l2MerkleRoot, uint256 indexed treeDepth)",
      "event L2MessagingBlockAnchored(uint256 indexed l2Block)",
      "event LimitAmountChanged(address indexed amountChangeBy, uint256 amount, bool amountUsedLoweredToLimit, bool usedAmountResetToZero)",
      "event MessageClaimed(bytes32 indexed _messageHash)",
      "event MessageSent(address indexed _from, address indexed _to, uint256 _fee, uint256 _value, uint256 _nonce, bytes _calldata, bytes32 indexed _messageHash)",
      "event Paused(address messageSender, uint256 indexed pauseType)",
      "event RateLimitInitialized(uint256 periodInSeconds, uint256 limitInWei, uint256 currentPeriodEnd)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RollingHashUpdated(uint256 indexed messageNumber, bytes32 indexed rollingHash, bytes32 indexed messageHash)",
      "event SystemMigrationBlockInitialized(uint256 systemMigrationBlock)",
      "event UnPaused(address messageSender, uint256 indexed pauseType)",
      "event VerifierAddressChanged(address indexed verifierAddress, uint256 indexed proofType, address indexed verifierSetBy, address oldVerifierAddress)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function GENERAL_PAUSE_TYPE() view returns (uint8)",
      "function GENESIS_SHNARF() view returns (bytes32)",
      "function INBOX_STATUS_RECEIVED() view returns (uint8)",
      "function INBOX_STATUS_UNKNOWN() view returns (uint8)",
      "function L1_L2_PAUSE_TYPE() view returns (uint8)",
      "function L2_L1_PAUSE_TYPE() view returns (uint8)",
      "function OPERATOR_ROLE() view returns (bytes32)",
      "function OUTBOX_STATUS_RECEIVED() view returns (uint8)",
      "function OUTBOX_STATUS_SENT() view returns (uint8)",
      "function OUTBOX_STATUS_UNKNOWN() view returns (uint8)",
      "function PAUSE_MANAGER_ROLE() view returns (bytes32)",
      "function PROVING_SYSTEM_PAUSE_TYPE() view returns (uint8)",
      "function RATE_LIMIT_SETTER_ROLE() view returns (bytes32)",
      "function VERIFIER_SETTER_ROLE() view returns (bytes32)",
      "function claimMessage(address _from, address _to, uint256 _fee, uint256 _value, address _feeRecipient, bytes _calldata, uint256 _nonce)",
      "function claimMessageWithProof(tuple(bytes32[] proof, uint256 messageNumber, uint32 leafIndex, address from, address to, uint256 fee, uint256 value, address feeRecipient, bytes32 merkleRoot, bytes data) _params)",
      "function currentFinalizedShnarf() view returns (bytes32)",
      "function currentFinalizedState() view returns (bytes32)",
      "function currentL2BlockNumber() view returns (uint256)",
      "function currentL2StoredL1MessageNumber() view returns (uint256)",
      "function currentL2StoredL1RollingHash() view returns (bytes32)",
      "function currentPeriodAmountInWei() view returns (uint256)",
      "function currentPeriodEnd() view returns (uint256)",
      "function currentTimestamp() view returns (uint256)",
      "function dataEndingBlock(bytes32 dataHash) view returns (uint256 endingBlock)",
      "function dataFinalStateRootHashes(bytes32 dataHash) view returns (bytes32 finalStateRootHash)",
      "function dataParents(bytes32 dataHash) view returns (bytes32 parentHash)",
      "function dataShnarfHashes(bytes32 dataHash) view returns (bytes32 shnarfHash)",
      "function dataStartingBlock(bytes32 dataHash) view returns (uint256 startingBlock)",
      "function finalizeBlocksWithProof(bytes _aggregatedProof, uint256 _proofType, tuple(bytes32 parentStateRootHash, bytes32 lastFinalizedShnarf, uint256 finalBlockInData, tuple(bytes32 parentShnarf, bytes32 snarkHash, bytes32 finalStateRootHash, bytes32 dataEvaluationPoint, bytes32 dataEvaluationClaim) shnarfData, uint256 lastFinalizedTimestamp, uint256 finalTimestamp, bytes32 lastFinalizedL1RollingHash, bytes32 l1RollingHash, uint256 lastFinalizedL1RollingHashMessageNumber, uint256 l1RollingHashMessageNumber, uint256 l2MerkleTreesDepth, bytes32[] l2MerkleRoots, bytes l2MessagingBlocksOffsets) _finalizationData)",
      "function finalizeBlocksWithoutProof(tuple(bytes32 parentStateRootHash, bytes32 lastFinalizedShnarf, uint256 finalBlockInData, tuple(bytes32 parentShnarf, bytes32 snarkHash, bytes32 finalStateRootHash, bytes32 dataEvaluationPoint, bytes32 dataEvaluationClaim) shnarfData, uint256 lastFinalizedTimestamp, uint256 finalTimestamp, bytes32 lastFinalizedL1RollingHash, bytes32 l1RollingHash, uint256 lastFinalizedL1RollingHashMessageNumber, uint256 l1RollingHashMessageNumber, uint256 l2MerkleTreesDepth, bytes32[] l2MerkleRoots, bytes l2MessagingBlocksOffsets) _finalizationData)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function inboxL2L1MessageStatus(bytes32 messageHash) view returns (uint256 messageStatus)",
      "function initialize(bytes32 _initialStateRootHash, uint256 _initialL2BlockNumber, address _defaultVerifier, address _securityCouncil, address[] _operators, uint256 _rateLimitPeriodInSeconds, uint256 _rateLimitAmountInWei, uint256 _genesisTimestamp)",
      "function initializeParentShnarfsAndFinalizedState(bytes32[] _shnarfs, uint256[] _finalBlockNumbers)",
      "function isMessageClaimed(uint256 _messageNumber) view returns (bool)",
      "function isPaused(uint8 _pauseType) view returns (bool)",
      "function l2MerkleRootsDepths(bytes32 merkleRoot) view returns (uint256 treeDepth)",
      "function limitInWei() view returns (uint256)",
      "function nextMessageNumber() view returns (uint256)",
      "function outboxL1L2MessageStatus(bytes32 messageHash) view returns (uint256 messageStatus)",
      "function pauseByType(uint8 _pauseType)",
      "function pauseTypeStatuses(bytes32 pauseType) view returns (bool pauseStatus)",
      "function periodInSeconds() view returns (uint256)",
      "function renounceRole(bytes32 role, address account)",
      "function resetAmountUsedInPeriod()",
      "function resetRateLimitAmount(uint256 _amount)",
      "function revokeRole(bytes32 role, address account)",
      "function rollingHashes(uint256 messageNumber) view returns (bytes32 rollingHash)",
      "function sendMessage(address _to, uint256 _fee, bytes _calldata) payable",
      "function sender() view returns (address addr)",
      "function setVerifierAddress(address _newVerifierAddress, uint256 _proofType)",
      "function shnarfFinalBlockNumbers(bytes32 shnarf) view returns (uint256 finalBlockNumber)",
      "function stateRootHashes(uint256 blockNumber) view returns (bytes32 stateRootHash)",
      "function submitBlobs(tuple(tuple(bytes32 finalStateRootHash, uint256 firstBlockInData, uint256 finalBlockInData, bytes32 snarkHash) submissionData, uint256 dataEvaluationClaim, bytes kzgCommitment, bytes kzgProof)[] _blobSubmissionData, bytes32 _parentShnarf, bytes32 _finalBlobShnarf)",
      "function submitDataAsCalldata(tuple(bytes32 finalStateRootHash, uint256 firstBlockInData, uint256 finalBlockInData, bytes32 snarkHash, bytes compressedData) _submissionData, bytes32 _parentShnarf, bytes32 _expectedShnarf)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function systemMigrationBlock() view returns (uint256)",
      "function unPauseByType(uint8 _pauseType)",
      "function unsetVerifierAddress(uint256 _proofType)",
      "function verifiers(uint256 proofType) view returns (address verifierAddress)"
    ],
    "0x36f274C1C197F277EA3C57859729398FCc8a3763": [
      "constructor()",
      "error OnlyBridge(address bridgeAddress)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function _decimals() view returns (uint8)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function bridge() view returns (address)",
      "function burn(address _account, uint256 _amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string _tokenName, string _tokenSymbol, uint8 _tokenDecimals)",
      "function mint(address _recipient, uint256 _amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)"
    ],
    "0x41fAD3Df1B07B647D120D055259E474fE8046eb5": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x504A330327A089d8364C4ab3811Ee26976d388ce": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x892bb7EeD71efB060ab90140e7825d8127991DD3": [
      "constructor(address _singleton)"
    ],
    "0x971f46a2852d11D59dbF0909e837cfd06f357DeB": [
      "constructor(address implementation_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)"
    ],
    "0xA238CBeb142c10Ef7Ad8442C6D1f9E89e07e7761": [
      "constructor()",
      "function multiSend(bytes transactions) payable"
    ],
    "0xBfF4a03A355eEF7dA720bBC7878F9BdBBE81fe6F": [
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool success)"
    ],
    "0xd19d4B5d358258f05D7B411E21A1460D11B0876F": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xd52c09E67aF3BE0977B52b4817366e9BaB5dCFA2": [
      "constructor()",
      "error AlreadyBridgedToken(address token)",
      "error AlreadyBrigedToNativeTokenSet(address token)",
      "error CallerIsNotMessageService()",
      "error DecimalsAreUnknown(address token)",
      "error InvalidPermitData(bytes4 permitData, bytes4 permitSelector)",
      "error NativeToBridgedTokenAlreadySet(address token)",
      "error NotReserved(address token)",
      "error PermitNotAllowingBridge(address spender)",
      "error PermitNotFromSender(address owner)",
      "error RemoteTokenBridgeAlreadySet(address remoteTokenBridge)",
      "error ReservedToken(address token)",
      "error SenderNotAuthorized()",
      "error StatusAddressNotAllowed(address token)",
      "error TokenNotDeployed(address token)",
      "error ZeroAddressNotAllowed()",
      "error ZeroAmountNotAllowed(uint256 amount)",
      "event BridgingFinalized(address indexed nativeToken, address indexed bridgedToken, uint256 indexed amount, address recipient)",
      "event BridgingFinalizedV2(address indexed nativeToken, address indexed bridgedToken, uint256 amount, address indexed recipient)",
      "event BridgingInitiated(address indexed sender, address recipient, address indexed token, uint256 indexed amount)",
      "event BridgingInitiatedV2(address indexed sender, address indexed recipient, address indexed token, uint256 amount)",
      "event CustomContractSet(address indexed nativeToken, address indexed customContract, address indexed setBy)",
      "event DeploymentConfirmed(address[] tokens, address indexed confirmedBy)",
      "event Initialized(uint8 version)",
      "event MessageServiceUpdated(address indexed newMessageService, address indexed oldMessageService, address indexed setBy)",
      "event NewToken(address indexed token)",
      "event NewTokenDeployed(address indexed bridgedToken, address indexed nativeToken)",
      "event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RemoteTokenBridgeSet(address indexed remoteTokenBridge, address indexed setBy)",
      "event ReservationRemoved(address indexed token)",
      "event TokenDeployed(address indexed token)",
      "event TokenReserved(address indexed token)",
      "event Unpaused(address account)",
      "function acceptOwnership()",
      "function bridgeToken(address _token, uint256 _amount, address _recipient) payable",
      "function bridgeTokenWithPermit(address _token, uint256 _amount, address _recipient, bytes _permitData) payable",
      "function bridgedToNativeToken(address) view returns (address)",
      "function completeBridging(address _nativeToken, uint256 _amount, address _recipient, uint256 _chainId, bytes _tokenMetadata)",
      "function confirmDeployment(address[] _tokens) payable",
      "function initialize(address _securityCouncil, address _messageService, address _tokenBeacon, uint256 _sourceChainId, uint256 _targetChainId, address[] _reservedTokens)",
      "function messageService() view returns (address)",
      "function nativeToBridgedToken(uint256, address) view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingOwner() view returns (address)",
      "function remoteSender() view returns (address)",
      "function removeReserved(address _token)",
      "function renounceOwnership()",
      "function setCustomContract(address _nativeToken, address _targetContract)",
      "function setDeployed(address[] _nativeTokens)",
      "function setMessageService(address _messageService)",
      "function setRemoteTokenBridge(address _remoteTokenBridge)",
      "function setReserved(address _token)",
      "function sourceChainId() view returns (uint256)",
      "function targetChainId() view returns (uint256)",
      "function tokenBeacon() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()"
    ],
    "0xd6B95c960779c72B8C6752119849318E5d550574": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xF24f1DC519d88246809B660eb56D94048575d083": [
      "constructor(address _owner, address _avatar, address _target)",
      "error ArraysDifferentLength()",
      "error ModuleTransactionFailed()",
      "error NoMembership()",
      "error SetUpModulesAlreadyCalled()",
      "event AssignRoles(address module, uint16[] roles, bool[] memberOf)",
      "event AvatarSet(address indexed previousAvatar, address indexed newAvatar)",
      "event ChangedGuard(address guard)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event RolesModSetup(address indexed initiator, address indexed owner, address indexed avatar, address target)",
      "event SetDefaultRole(address module, uint16 defaultRole)",
      "event SetMultisendAddress(address multisendAddress)",
      "event TargetSet(address indexed previousTarget, address indexed newTarget)",
      "function allowTarget(uint16 role, address targetAddress, uint8 options)",
      "function assignRoles(address module, uint16[] _roles, bool[] memberOf)",
      "function avatar() view returns (address)",
      "function defaultRoles(address) view returns (uint16)",
      "function disableModule(address prevModule, address module)",
      "function enableModule(address module)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool, bytes)",
      "function execTransactionWithRole(address to, uint256 value, bytes data, uint8 operation, uint16 role, bool shouldRevert) returns (bool success)",
      "function execTransactionWithRoleReturnData(address to, uint256 value, bytes data, uint8 operation, uint16 role, bool shouldRevert) returns (bool success, bytes returnData)",
      "function getGuard() view returns (address _guard)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function guard() view returns (address)",
      "function isModuleEnabled(address _module) view returns (bool)",
      "function multisend() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function revokeTarget(uint16 role, address targetAddress)",
      "function scopeAllowFunction(uint16 role, address targetAddress, bytes4 functionSig, uint8 options)",
      "function scopeFunction(uint16 role, address targetAddress, bytes4 functionSig, bool[] isParamScoped, uint8[] paramType, uint8[] paramComp, bytes[] compValue, uint8 options)",
      "function scopeFunctionExecutionOptions(uint16 role, address targetAddress, bytes4 functionSig, uint8 options)",
      "function scopeParameter(uint16 role, address targetAddress, bytes4 functionSig, uint256 paramIndex, uint8 paramType, uint8 paramComp, bytes compValue)",
      "function scopeParameterAsOneOf(uint16 role, address targetAddress, bytes4 functionSig, uint256 paramIndex, uint8 paramType, bytes[] compValues)",
      "function scopeRevokeFunction(uint16 role, address targetAddress, bytes4 functionSig)",
      "function scopeTarget(uint16 role, address targetAddress)",
      "function setAvatar(address _avatar)",
      "function setDefaultRole(address module, uint16 role)",
      "function setGuard(address _guard)",
      "function setMultisend(address _multisend)",
      "function setTarget(address _target)",
      "function setUp(bytes initParams)",
      "function target() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unscopeParameter(uint16 role, address targetAddress, bytes4 functionSig, uint8 paramIndex)"
    ],
    "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x171ea6062ecb94d6e7913ecd058660d724f0bcc40120cd2c11b836e5c0450091",
    "GnosisSafe": "0x18527e82c3800311291da7323caa876f588cde67692c1c84d5ecb5161da61359"
  }
}
