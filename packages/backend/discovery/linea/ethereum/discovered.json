{
  "name": "linea",
  "blockNumber": 17768617,
  "configHash": "0x2335858d3e21a17a6b4c4cbb0cef0af8634d87307265f83de8afbf778c4108f9",
  "version": 1,
  "contracts": [
    {
      "name": "AdminMultisig",
      "address": "0x892bb7EeD71efB060ab90140e7825d8127991DD3",
      "code": "https://etherscan.deth.net/address/0x892bb7EeD71efB060ab90140e7825d8127991DD3,0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"
      },
      "values": {
        "domainSeparator": "0xf720f1fd8bfacb497aa1c16a19a7f17ba6e7bfba9ae23c73812ce40727956e08",
        "getChainId": 1,
        "getOwners": [
          "0x12d674b7eCc0302977E956Cd2d5AC8D030fdbea9",
          "0x5822D8457c00FB82203918ED92907b935B9D40AE",
          "0x36a0b60162d7F407d74bd1def01410D20437F87B",
          "0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4",
          "0x41a4bf7B4f6D38CFB7AAbDb95A8C5f0137D06B35",
          "0xab23f8E6c3288952fdf193A17ad49b15F5EE55A1",
          "0xB38B764fDe235F4e665b01c9630B9D8088ffeEA2",
          "0xB4dAebe4D01f467701F95f0196fc29033c54dBcb"
        ],
        "getThreshold": 3,
        "nonce": 10,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "PlonkVerifierFullLarge",
      "address": "0xa4F1155202D36348097b7488b0D2365fA91f8CaC",
      "code": "https://etherscan.deth.net/address/0xa4F1155202D36348097b7488b0D2365fA91f8CaC",
      "upgradeability": {
        "type": "immutable"
      }
    },
    {
      "name": "PlonkVerifierFull",
      "address": "0xc01E6807DB9Fb9cC75E9Fe622ba8e7f3eB9f2B32",
      "code": "https://etherscan.deth.net/address/0xc01E6807DB9Fb9cC75E9Fe622ba8e7f3eB9f2B32",
      "upgradeability": {
        "type": "immutable"
      }
    },
    {
      "name": "zkEVM",
      "address": "0xd19d4B5d358258f05D7B411E21A1460D11B0876F",
      "code": "https://etherscan.deth.net/address/0xd19d4B5d358258f05D7B411E21A1460D11B0876F,0x4c8d4Ce72afAA417d1F7E833725FdB4E793cd6b3",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x4c8d4Ce72afAA417d1F7E833725FdB4E793cd6b3",
        "admin": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6"
      },
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "OPERATOR_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x9228624C3185FCBcf24c1c9dB76D8Bef5f5DAd64"]
          },
          "RATE_LIMIT_SETTER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "PAUSE_MANAGER_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          }
        },
        "currentPeriodAmountInWei": "54621130537025442928",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "GENERAL_PAUSE_TYPE": "0x06193bb948d6b7a6fcbe51c193ccf2183bb5d979b6ae5d3a6971b8851461d3b0",
        "generalPause": false,
        "INBOX_STATUS_RECEIVED": 1,
        "INBOX_STATUS_UNKNOWN": 0,
        "L1_L2_PAUSE_TYPE": "0x9a80e24e463f00a8763c4dcec6a92d07d33272fa5db895d8589be70dccb002df",
        "l1l2Pause": false,
        "L2_L1_PAUSE_TYPE": "0x21ea2f4fee4bcb623de15ac222ea5c1464307d884f23394b78ddc07f9c9c7cd8",
        "l2l1Pause": false,
        "limitInWei": "400000000000000000000",
        "OPERATOR_ROLE": "0x97667070c54ef182b0f5858b034beac1b6f3089aa2d3188bb1e8929f4fa9b929",
        "OUTBOX_STATUS_RECEIVED": 2,
        "OUTBOX_STATUS_SENT": 1,
        "OUTBOX_STATUS_UNKNOWN": 0,
        "PAUSE_MANAGER_ROLE": "0x356a809dfdea9198dd76fb76bf6d403ecf13ea675eb89e1eda2db2c4a4676a26",
        "periodInSeconds": 86400,
        "PROVING_SYSTEM_PAUSE_TYPE": "0x3a56b1bd788a764cbd923badb6d0719f21f520455285bf6877e636d08708878d",
        "RATE_LIMIT_SETTER_ROLE": "0x1185e52d62bfbbea270e57d3d09733d221b53ab7a18bae82bb3c6c74bab16d82",
        "sender": "0x00000000000000000000000000000000075BCd15",
        "verifiers": [
          "0xc01E6807DB9Fb9cC75E9Fe622ba8e7f3eB9f2B32",
          "0xa4F1155202D36348097b7488b0D2365fA91f8CaC",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000"
        ]
      },
      "derivedName": "ZkEvmV2"
    },
    {
      "name": "Timelock",
      "address": "0xd6B95c960779c72B8C6752119849318E5d550574",
      "code": "https://etherscan.deth.net/address/0xd6B95c960779c72B8C6752119849318E5d550574",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xd6B95c960779c72B8C6752119849318E5d550574"]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0x892bb7EeD71efB060ab90140e7825d8127991DD3"]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 0,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimeLock"
    },
    {
      "name": "ProxyAdmin",
      "address": "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
      "code": "https://etherscan.deth.net/address/0xF5058616517C068C7b8c7EbC69FF636Ade9066d6",
      "upgradeability": {
        "type": "immutable"
      },
      "values": {
        "owner": "0xd6B95c960779c72B8C6752119849318E5d550574"
      }
    }
  ],
  "eoas": [
    "0x00000000000000000000000000000000075BCd15",
    "0x12d674b7eCc0302977E956Cd2d5AC8D030fdbea9",
    "0x36a0b60162d7F407d74bd1def01410D20437F87B",
    "0x41a4bf7B4f6D38CFB7AAbDb95A8C5f0137D06B35",
    "0x4CB4da1D1C198E506031C0Aa8480BA8b57C0fAD4",
    "0x5822D8457c00FB82203918ED92907b935B9D40AE",
    "0x9228624C3185FCBcf24c1c9dB76D8Bef5f5DAd64",
    "0xab23f8E6c3288952fdf193A17ad49b15F5EE55A1",
    "0xB38B764fDe235F4e665b01c9630B9D8088ffeEA2",
    "0xB4dAebe4D01f467701F95f0196fc29033c54dBcb"
  ],
  "abis": {
    "0x4c8d4Ce72afAA417d1F7E833725FdB4E793cd6b3": [
      "constructor()",
      "error BlockTimestampError()",
      "error EmptyBlock()",
      "error FeePaymentFailed(address recipient)",
      "error FeeTooLow()",
      "error InvalidProof()",
      "error InvalidProofType()",
      "error IsNotPaused(bytes32 pauseType)",
      "error IsPaused(bytes32 pauseType)",
      "error L1L2MessageNotSent(bytes32 messageHash)",
      "error LimitIsZero()",
      "error MemoryOutOfBounds(uint256 inde)",
      "error MessageAlreadyReceived(bytes32 messageHash)",
      "error MessageAlreadySent()",
      "error MessageDoesNotExistOrHasAlreadyBeenClaimed()",
      "error MessageSendingFailed(address destination)",
      "error NotList()",
      "error PeriodIsZero()",
      "error ProofIsEmpty()",
      "error RateLimitExceeded()",
      "error StartingRootHashDoesNotMatch()",
      "error TransactionShort()",
      "error UnknownTransactionType()",
      "error ValueSentTooLow()",
      "error ValueShouldBeGreaterThanFee()",
      "error WrongBytesLength()",
      "error ZeroAddressNotAllowed()",
      "event AmountUsedInPeriodReset(address indexed resettingAddress)",
      "event BlockFinalized(uint256 indexed blockNumber, bytes32 indexed stateRootHash)",
      "event BlocksVerificationDone(uint256 indexed lastBlockFinalized, bytes32 startingRootHash, bytes32 finalRootHash)",
      "event Initialized(uint8 version)",
      "event L1L2MessagesReceivedOnL2(bytes32[] messageHashes)",
      "event L2L1MessageHashAddedToInbox(bytes32 indexed messageHash)",
      "event LimitAmountChanged(address indexed amountChangeBy, uint256 amount, bool amountUsedLoweredToLimit, bool usedAmountResetToZero)",
      "event MessageClaimed(bytes32 indexed _messageHash)",
      "event MessageSent(address indexed _from, address indexed _to, uint256 _fee, uint256 _value, uint256 _nonce, bytes _calldata, bytes32 indexed _messageHash)",
      "event Paused(address messageSender, bytes32 pauseType)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event UnPaused(address messageSender, bytes32 pauseType)",
      "event VerifierAddressChanged(address indexed verifierAddress, uint256 indexed proofType, address indexed verifierSetBy)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function GENERAL_PAUSE_TYPE() view returns (bytes32)",
      "function INBOX_STATUS_RECEIVED() view returns (uint8)",
      "function INBOX_STATUS_UNKNOWN() view returns (uint8)",
      "function L1_L2_PAUSE_TYPE() view returns (bytes32)",
      "function L2_L1_PAUSE_TYPE() view returns (bytes32)",
      "function OPERATOR_ROLE() view returns (bytes32)",
      "function OUTBOX_STATUS_RECEIVED() view returns (uint8)",
      "function OUTBOX_STATUS_SENT() view returns (uint8)",
      "function OUTBOX_STATUS_UNKNOWN() view returns (uint8)",
      "function PAUSE_MANAGER_ROLE() view returns (bytes32)",
      "function PROVING_SYSTEM_PAUSE_TYPE() view returns (bytes32)",
      "function RATE_LIMIT_SETTER_ROLE() view returns (bytes32)",
      "function claimMessage(address _from, address _to, uint256 _fee, uint256 _value, address _feeRecipient, bytes _calldata, uint256 _nonce)",
      "function currentL2BlockNumber() view returns (uint256)",
      "function currentPeriodAmountInWei() view returns (uint256)",
      "function currentPeriodEnd() view returns (uint256)",
      "function currentTimestamp() view returns (uint256)",
      "function finalizeBlocks(tuple(bytes32 blockRootHash, uint32 l2BlockTimestamp, bytes[] transactions, bytes32[] l2ToL1MsgHashes, bytes fromAddresses, uint16[] batchReceptionIndices)[] _blocksData, bytes _proof, uint256 _proofType, bytes32 _parentStateRootHash)",
      "function finalizeBlocksWithoutProof(tuple(bytes32 blockRootHash, uint32 l2BlockTimestamp, bytes[] transactions, bytes32[] l2ToL1MsgHashes, bytes fromAddresses, uint16[] batchReceptionIndices)[] _blocksData)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function inboxL2L1MessageStatus(bytes32) view returns (uint256)",
      "function initialize(bytes32 _initialStateRootHash, uint256 _initialL2BlockNumber, address _defaultVerifier, address _securityCouncil, address[] _operators, uint256 _rateLimitPeriodInSeconds, uint256 _rateLimitAmountInWei)",
      "function limitInWei() view returns (uint256)",
      "function nextMessageNumber() view returns (uint256)",
      "function outboxL1L2MessageStatus(bytes32) view returns (uint256)",
      "function pauseByType(bytes32 _pauseType)",
      "function pauseTypeStatuses(bytes32) view returns (bool)",
      "function periodInSeconds() view returns (uint256)",
      "function renounceRole(bytes32 role, address account)",
      "function resetAmountUsedInPeriod()",
      "function resetRateLimitAmount(uint256 _amount)",
      "function revokeRole(bytes32 role, address account)",
      "function sendMessage(address _to, uint256 _fee, bytes _calldata) payable",
      "function sender() view returns (address)",
      "function setVerifierAddress(address _newVerifierAddress, uint256 _proofType)",
      "function stateRootHashes(uint256) view returns (bytes32)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unPauseByType(bytes32 _pauseType)",
      "function verifiers(uint256) view returns (address)"
    ],
    "0x892bb7EeD71efB060ab90140e7825d8127991DD3": [
      "constructor(address _singleton)"
    ],
    "0xa4F1155202D36348097b7488b0D2365fA91f8CaC": [
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool)"
    ],
    "0xc01E6807DB9Fb9cC75E9Fe622ba8e7f3eB9f2B32": [
      "function Verify(bytes proof, uint256[] public_inputs) view returns (bool)"
    ],
    "0xd19d4B5d358258f05D7B411E21A1460D11B0876F": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xd6B95c960779c72B8C6752119849318E5d550574": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xF5058616517C068C7b8c7EbC69FF636Ade9066d6": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ]
  }
}
