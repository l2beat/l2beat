{
  "name": "portal",
  "chain": "ethereum",
  "blockNumber": 20089055,
  "configHash": "0x195ddce914e9f413f3a0b36e6718ae330961a2e3419eab147ab0fb6cec090d8b",
  "contracts": [
    {
      "name": "TokenImplementation",
      "address": "0x0fD04a68d3c3A692d6Fa30384D1A87Ef93554eE6",
      "sourceHashes": [
        "0xbc51a6f7503c2dccc97bd5b0fe777fa354d9c7f8a017bffcdb16119f293f0619"
      ],
      "sinceTimestamp": 1663610147,
      "values": {
        "$immutable": true,
        "chainId": 0,
        "decimals": 0,
        "DOMAIN_SEPARATOR": "0x0cf2c709fa7ea9acd67676f52f3dbf86e5aff34b6cdc82219ec4212ea2e0569f",
        "eip712Domain": {
          "domainFields": "0x1f",
          "domainName": "",
          "domainVersion": "1",
          "domainChainId": 1,
          "domainVerifyingContract": "0x0fD04a68d3c3A692d6Fa30384D1A87Ef93554eE6",
          "domainSalt": "0xbf53adb76067fdab0d008aef3ad8b28bbb63c2ce4c2b63394ede73f01a70c865",
          "domainExtensions": []
        },
        "name": "",
        "nativeContract": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "owner": "0x0000000000000000000000000000000000000000",
        "symbol": "",
        "totalSupply": 0
      },
      "derivedName": "TokenImplementation"
    },
    {
      "name": "WormholeRelayer",
      "address": "0x27428DD2d3DD32A4D7f7C497eAaa23130d894911",
      "sourceHashes": [
        "0xd3fe13cb32b323dcf9f1e5c9c334577136633345e2d376340b4cd18d44231968",
        "0x54a3c2ca728fd6aafdaa31a7f0d44cffbdfaa544fba87e938e3447de88b9f006"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1686938183,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x90995DBd1aae85872451b50A569dE947D34ac4ee",
        "$pastUpgrades": [
          [
            "2023-06-16T17:56:23.000Z",
            "0x4ee56249f741ef28f4180f1b47a3f524e988d0f4dd58d18f18c41b88ba77513d",
            ["0x25688636CEc6CE0F1434b1e7dd0A223F3f258336"]
          ],
          [
            "2023-06-16T17:56:23.000Z",
            "0x4ee56249f741ef28f4180f1b47a3f524e988d0f4dd58d18f18c41b88ba77513d",
            ["0x00337a31aEE3Ed37f5D5FBF892031d0090Da2EeF"]
          ],
          [
            "2023-11-16T18:42:23.000Z",
            "0x1bb74012ac308d136388b6e5c7dc8cd86e50e7e68cbc468c7a872cb79bbdb54f",
            ["0x90995DBd1aae85872451b50A569dE947D34ac4ee"]
          ]
        ],
        "$upgradeCount": 3,
        "getDefaultDeliveryProvider": "0x7A0a53847776f7e94Cc35742971aCb2217b0Db81"
      }
    },
    {
      "name": "TokenBridge",
      "address": "0x3ee18B2214AFF97000D974cf647E7C347E8fa585",
      "sourceHashes": [
        "0x7576cd5bf86b934451cc67ed4b42d74b94ea9ecd6e990ec3dca27d9d339c35cd",
        "0x06093cab28394b5790c0a8281474cd818235258958a294ecad796fb89e7d017c"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1631535967,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x381752f5458282d317d12C30D2Bd4D6E1FD8841e",
        "$pastUpgrades": [
          [
            "2021-09-13T12:26:07.000Z",
            "0x581152516c6f4e1cc2acd6d1ad5372bd0325835fb53086f364f487086f42223e",
            ["0x51e9027eaBE500466cAA0F4Be882afC4446C4eFE"]
          ],
          [
            "2021-09-13T12:26:07.000Z",
            "0x581152516c6f4e1cc2acd6d1ad5372bd0325835fb53086f364f487086f42223e",
            ["0x6c4c12987303b2c94b2C76c612Fc5F4D2F0360F7"]
          ],
          [
            "2021-11-01T16:56:25.000Z",
            "0xda175307299342c37d73da16d4ff725efc2548646b354a436f13cf9d7294dc9c",
            ["0x67145cdb0d69678e9c48106F646C1b7ef69813A4"]
          ],
          [
            "2022-01-27T16:35:52.000Z",
            "0xd52dad3dcd2412fed086ff08a67b8169ba84be9b4ab20c4ec779057e41664d67",
            ["0x91175AEE6dAc41B9C1f749ded077568aD93B84Ca"]
          ],
          [
            "2022-07-08T17:04:13.000Z",
            "0xbaee117671f50a2ab1b37a6cfdd96cae9210311fc37feca9b9fdf18c69ed4943",
            ["0xB203b2057E2F08aDCE8F73Cc99709Ffdd8EDffEa"]
          ],
          [
            "2022-08-24T17:35:44.000Z",
            "0x3bd3c23ca32a38b5ca289b6b72585a7ea8432510c4bad5ad6f99ba2a672fae02",
            ["0x76364611e457b1f97cd58FfC332DDC7561a193F6"]
          ],
          [
            "2022-09-01T14:23:24.000Z",
            "0x681919e52611294f53e270f03a6615fe624deebfba3aa6de7bc842bd64b1d3b9",
            ["0xfA71B241B168d2876722c6D8856d3E4F311B8C1e"]
          ],
          [
            "2022-09-12T15:54:42.000Z",
            "0xb2146071324342840895340d0937e72c79e662a406d08bdca2c4452ea988dda3",
            ["0xADE06bc75Dc1FC3fB7442e0CFb8Ca544B23aF789"]
          ],
          [
            "2022-09-20T16:24:59.000Z",
            "0xf7f4e4b0a70a1f043074418fe6a394d05c0438e0a79f40000fdd8b648ce2e473",
            ["0x299b4F6066d231521d11FAE8331fb1A4fe794F58"]
          ],
          [
            "2023-10-17T19:13:23.000Z",
            "0x5423123fcd6beecabec2a2b7d37596af24fcc91a4a64b8c0156579d3c58ef1a7",
            ["0x381752f5458282d317d12C30D2Bd4D6E1FD8841e"]
          ]
        ],
        "$upgradeCount": 10,
        "chainId": 2,
        "evmChainId": 1,
        "finality": 1,
        "governanceChainId": 1,
        "governanceContract": "0x0000000000000000000000000000000000000000000000000000000000000004",
        "implementation": "0x0fD04a68d3c3A692d6Fa30384D1A87Ef93554eE6",
        "isFork": false,
        "tokenImplementation": "0x0fD04a68d3c3A692d6Fa30384D1A87Ef93554eE6",
        "WETH": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "wormhole": "0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B"
      },
      "derivedName": "BridgeImplementation"
    },
    {
      "name": "NFTBridge",
      "address": "0x6FFd7EdE62328b3Af38FCD61461Bbfc52F5651fE",
      "sourceHashes": [
        "0x5314b46db0c40bea82cf9911a6e5095ae83c56a23e45191a1768a647210cc2b6",
        "0xe8f857d15277c4009dd17c5e936579a00645b4b99609769258bc629c3ea1821b"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1632219043,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x3e41904B3766F4cCEb145Cc53D75fEB61722a96C",
        "$pastUpgrades": [
          [
            "2021-09-21T10:10:43.000Z",
            "0x530e89e24dbc466ca0f0f34d3ecebe95b826aff05bd3ed1987339a56abb6e322",
            ["0xeF31003B774B45963FEa40bdF8653994f991AeAa"]
          ],
          [
            "2021-09-21T10:10:43.000Z",
            "0x530e89e24dbc466ca0f0f34d3ecebe95b826aff05bd3ed1987339a56abb6e322",
            ["0x19AA39217dE9F568cdEb4141be1654670862a596"]
          ],
          [
            "2022-03-08T21:44:45.000Z",
            "0xeb3961df5f626e674d19bc89bf8e00fd79ad74c2bb87fb697179e19c4a44da7d",
            ["0x516f156987fb1C7763b31EA0e8a07d23077f7e04"]
          ],
          [
            "2022-07-08T17:03:44.000Z",
            "0xa4b9b97cff3216131a9c9993b1b1e63ad1cc2c3ea4a07c68ebdf6f2deca55156",
            ["0x29C502cF186012734c5F8861C4004C27c55578df"]
          ],
          [
            "2022-09-12T15:55:50.000Z",
            "0x109eb543ddab9e000e44c0c65f5b9ea1e14a0167ae79997b5413d1edd618af23",
            ["0x3e41904B3766F4cCEb145Cc53D75fEB61722a96C"]
          ]
        ],
        "$upgradeCount": 5,
        "chainId": 2,
        "evmChainId": 1,
        "finality": 15,
        "governanceChainId": 1,
        "governanceContract": "0x0000000000000000000000000000000000000000000000000000000000000004",
        "implementation": "0xEc4d807Cd33a48A7C8Cd73D09B41Aa5160B3a7fc",
        "isFork": false,
        "tokenImplementation": "0xEc4d807Cd33a48A7C8Cd73D09B41Aa5160B3a7fc",
        "wormhole": "0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B"
      },
      "derivedName": "NFTBridgeImplementation"
    },
    {
      "name": "DeliveryProviderImplementation",
      "address": "0x7A0a53847776f7e94Cc35742971aCb2217b0Db81",
      "sourceHashes": [
        "0xa69df53f9d2492a90cb9aeda1ddfd617ce00c5c63dfc2d2baa0413a87ffaf34c",
        "0x8c018dd994ea0c4acd43c9628405cfd46ff5a65f234b1ea8c7e765983f49c6b3"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x59278F587D4cFcDCbbc08019060be7231c37ddc2",
          "via": []
        }
      ],
      "sinceTimestamp": 1686937559,
      "values": {
        "$admin": "0x59278F587D4cFcDCbbc08019060be7231c37ddc2",
        "$implementation": "0x0b89ccD6b803CCEC4f0E0fBeFAeE1f7d16e734e2",
        "$pastUpgrades": [
          [
            "2023-06-16T17:45:59.000Z",
            "0xda80ae732c6c6567b33ce8805c12ba5c1b21d3094ea8eb272bd51157419ed219",
            ["0xedd08D4363820603fb1B261F7667B8ee170c37a5"]
          ],
          [
            "2023-06-16T17:45:59.000Z",
            "0xda80ae732c6c6567b33ce8805c12ba5c1b21d3094ea8eb272bd51157419ed219",
            ["0x401d3A2ec0a071e2A8f8Fc9B4C69313C1a04540c"]
          ],
          [
            "2023-11-07T19:13:23.000Z",
            "0x3e54828f7538d9259f50addac33d3779a48a72f1ac3cedffa062cf89b1351e41",
            ["0x0b89ccD6b803CCEC4f0E0fBeFAeE1f7d16e734e2"]
          ]
        ],
        "$upgradeCount": 3,
        "chainId": 2,
        "coreRelayer": "0x27428DD2d3DD32A4D7f7C497eAaa23130d894911",
        "getRewardAddress": "0x53207E216540125e322CdA8A693b0b89576DEb46",
        "getSupportedKeys": 6,
        "owner": "0x59278F587D4cFcDCbbc08019060be7231c37ddc2",
        "pendingOwner": "0x0000000000000000000000000000000000000000",
        "pricingWallet": "0xE8af07A8Eff87B99B7C8C2c18ea95a1FE86D0ACD",
        "rewardAddress": "0x53207E216540125e322CdA8A693b0b89576DEb46"
      }
    },
    {
      "name": "WormholeCore",
      "address": "0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B",
      "sourceHashes": [
        "0xbc0d1c916444d8aca6243193c89589feac3c1a53cef31ddc8516d094fc6d33bd",
        "0xb51bdb80364d69b22f5cafd3aee42a605a60f5fc3116509bea8352fbfa04c532"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1628093444,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x3c3d457f1522D3540AB3325Aa5f1864E34cBA9D0",
        "$pastUpgrades": [
          [
            "2021-08-04T16:10:44.000Z",
            "0x01b299d4b52d7df2504157717a895ec5bbe3277038c8918f379997e82c54cd47",
            ["0x736D2A394f7810C17b3c6fEd017d5BC7D60c077d"]
          ],
          [
            "2022-07-08T17:04:44.000Z",
            "0x9a85c37061db3244e4415d27436128423592b52700a5bb3f11cf3c05bc555bba",
            ["0x8C0041566e0bc27Efe285a9E98D0B4217a46809c"]
          ],
          [
            "2022-09-12T15:52:42.000Z",
            "0x02b94b33becc2fd94e42d4e2142cec7d83b8212f642516abccea0462391b676a",
            ["0x3c3d457f1522D3540AB3325Aa5f1864E34cBA9D0"]
          ]
        ],
        "$upgradeCount": 3,
        "chainId": 2,
        "evmChainId": 1,
        "getCurrentGuardianSetIndex": 4,
        "getGuardianSetExpiry": 0,
        "governanceChainId": 1,
        "governanceContract": "0x0000000000000000000000000000000000000000000000000000000000000004",
        "guardianSet": [
          [
            "0x5893B5A76c3f739645648885bDCcC06cd70a3Cd3",
            "0xfF6CB952589BDE862c25Ef4392132fb9D4A42157",
            "0x114De8460193bdf3A2fCf81f86a09765F4762fD1",
            "0x107A0086b32d7A0977926A205131d8731D39cbEB",
            "0x8C82B2fd82FaeD2711d59AF0F2499D16e726f6b2",
            "0x11b39756C042441BE6D8650b69b54EbE715E2343",
            "0x54Ce5B4D348fb74B958e8966e2ec3dBd4958a7cd",
            "0x15e7cAF07C4e3DC8e7C469f92C8Cd88FB8005a20",
            "0x74a3bf913953D695260D88BC1aA25A4eeE363ef0",
            "0x000aC0076727b35FBea2dAc28fEE5cCB0fEA768e",
            "0xAF45Ced136b9D9e24903464AE889F5C8a723FC14",
            "0xf93124b7c738843CBB89E864c862c38cddCccF95",
            "0xD2CC37A4dc036a8D232b48f62cDD4731412f4890",
            "0xDA798F6896A3331F64b48c12D1D57Fd9cbe70811",
            "0x71AA1BE1D36CaFE3867910F99C09e347899C19C3",
            "0x8192b6E7387CCd768277c17DAb1b7a5027c0b3Cf",
            "0x178e21ad2E77AE06711549CFBB1f9c7a9d8096e8",
            "0x5E1487F35515d02A92753504a8D75471b9f49EdB",
            "0x6FbEBc898F403E4773E95feB15E80C9A99c8348d"
          ],
          0
        ],
        "isFork": false,
        "messageFee": 0,
        "quorum": [
          1, 1, 2, 3, 3, 4, 5, 5, 6, 7, 7, 8, 9, 9, 10, 11, 11, 12, 13, 13, 14,
          15, 15, 16, 17, 17, 18, 19, 19, 20
        ]
      },
      "derivedName": "Implementation"
    },
    {
      "name": "CircleIntegration",
      "address": "0xAaDA05BD399372f0b0463744C09113c137636f6a",
      "sourceHashes": [
        "0xf187201e5a871c786c5af625380fa89f1c530c0458b5b697b29219ed50cf0ea8",
        "0xc5187968f2cb1166db32924199e148c88684177ee3c51e0b7ceb5905febb2bcd"
      ],
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1682018903,
      "values": {
        "$admin": "0x0000000000000000000000000000000000000000",
        "$implementation": "0x37f26277B1927c6bEDbD94e5C21C337A706af31c",
        "$pastUpgrades": [
          [
            "2023-04-20T19:28:23.000Z",
            "0x036aa3cc2247feeac78205c83e7c33fe937b7c40d0b193c6135dd3d8e8b0f49b",
            ["0x52e3C3D0Ca2fa372263289836c4E258C34a4523B"]
          ],
          [
            "2023-04-20T19:28:23.000Z",
            "0x036aa3cc2247feeac78205c83e7c33fe937b7c40d0b193c6135dd3d8e8b0f49b",
            ["0x37f26277B1927c6bEDbD94e5C21C337A706af31c"]
          ]
        ],
        "$upgradeCount": 2,
        "chainId": 2,
        "circleBridge": "0xBd3fa81B58Ba92a82136038B25aDec7066af3155",
        "circleIntegrationImplementation": "0xa55315b5310bf674eccfe6b1537c17f7ef4a55b90365ed70e8fbff08e4f1c35e",
        "circleTokenMinter": "0xc4922d64a24675E16e1586e3e3Aa56C06fABe907",
        "circleTransmitter": "0x0a992d191DEeC32aFe36203Ad87D7d289a738F81",
        "evmChain": 1,
        "governanceChainId": 1,
        "governanceContract": "0x0000000000000000000000000000000000000000000000000000000000000004",
        "localDomain": 0,
        "wormhole": "0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B",
        "wormholeFinality": 1
      },
      "derivedName": "CircleIntegrationImplementation"
    },
    {
      "name": "NFTImplementation",
      "address": "0xEc4d807Cd33a48A7C8Cd73D09B41Aa5160B3a7fc",
      "sourceHashes": [
        "0xbd754d5f19a23f887be96d26d6641438fa86acafaf29bb3828188cef3fd571e6"
      ],
      "sinceTimestamp": 1632218833,
      "values": {
        "$immutable": true,
        "chainId": 0,
        "getApproved": [],
        "name": "",
        "nativeContract": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "owner": "0x0000000000000000000000000000000000000000",
        "ownerOf": [],
        "symbol": "",
        "tokenURI": []
      }
    }
  ],
  "eoas": [
    {
      "address": "0x0000000000000000000000000000000000000000",
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x27428DD2d3DD32A4D7f7C497eAaa23130d894911"
        },
        {
          "permission": "upgrade",
          "target": "0x3ee18B2214AFF97000D974cf647E7C347E8fa585"
        },
        {
          "permission": "upgrade",
          "target": "0x6FFd7EdE62328b3Af38FCD61461Bbfc52F5651fE"
        },
        {
          "permission": "upgrade",
          "target": "0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B"
        },
        {
          "permission": "upgrade",
          "target": "0xAaDA05BD399372f0b0463744C09113c137636f6a"
        }
      ]
    },
    { "address": "0x000aC0076727b35FBea2dAc28fEE5cCB0fEA768e" },
    { "address": "0x107A0086b32d7A0977926A205131d8731D39cbEB" },
    { "address": "0x114De8460193bdf3A2fCf81f86a09765F4762fD1" },
    { "address": "0x11b39756C042441BE6D8650b69b54EbE715E2343" },
    { "address": "0x15e7cAF07C4e3DC8e7C469f92C8Cd88FB8005a20" },
    { "address": "0x178e21ad2E77AE06711549CFBB1f9c7a9d8096e8" },
    { "address": "0x53207E216540125e322CdA8A693b0b89576DEb46" },
    { "address": "0x54Ce5B4D348fb74B958e8966e2ec3dBd4958a7cd" },
    { "address": "0x5893B5A76c3f739645648885bDCcC06cd70a3Cd3" },
    {
      "address": "0x59278F587D4cFcDCbbc08019060be7231c37ddc2",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x7A0a53847776f7e94Cc35742971aCb2217b0Db81"
        }
      ]
    },
    { "address": "0x5E1487F35515d02A92753504a8D75471b9f49EdB" },
    { "address": "0x6FbEBc898F403E4773E95feB15E80C9A99c8348d" },
    { "address": "0x71AA1BE1D36CaFE3867910F99C09e347899C19C3" },
    { "address": "0x74a3bf913953D695260D88BC1aA25A4eeE363ef0" },
    { "address": "0x8192b6E7387CCd768277c17DAb1b7a5027c0b3Cf" },
    { "address": "0x8C82B2fd82FaeD2711d59AF0F2499D16e726f6b2" },
    { "address": "0xAF45Ced136b9D9e24903464AE889F5C8a723FC14" },
    { "address": "0xD2CC37A4dc036a8D232b48f62cDD4731412f4890" },
    { "address": "0xDA798F6896A3331F64b48c12D1D57Fd9cbe70811" },
    { "address": "0xE8af07A8Eff87B99B7C8C2c18ea95a1FE86D0ACD" },
    { "address": "0xf93124b7c738843CBB89E864c862c38cddCccF95" },
    { "address": "0xfF6CB952589BDE862c25Ef4392132fb9D4A42157" }
  ],
  "abis": {
    "0x0b89ccD6b803CCEC4f0E0fBeFAeE1f7d16e734e2": [
      "error AddressIsZero()",
      "error CallerMustBeOwner()",
      "error CallerMustBeOwnerOrPricingWallet()",
      "error CallerMustBePendingOwner()",
      "error CallerNotApproved(address msgSender)",
      "error ChainIdIsZero()",
      "error ExceedsMaximumBudget(uint16 targetChain, uint256 exceedingValue, uint256 maximumBudget)",
      "error FailedToInitializeImplementation(string reason)",
      "error GasPriceIsZero()",
      "error ImplementationAlreadyInitialized()",
      "error MaxRefundGreaterThanGasLimitCost(uint256 maxRefund, uint256 gasLimitCost)",
      "error MaxRefundGreaterThanGasLimitCostOnSourceChain(uint256 maxRefund, uint256 gasLimitCost)",
      "error NativeCurrencyPriceIsZero()",
      "error Overflow(uint256 value, uint256 max)",
      "error PriceIsZero(uint16 chain)",
      "error UnexpectedExecutionParamsVersion(uint8 version, uint8 expectedVersion)",
      "error UnsupportedExecutionParamsVersion(uint8 version)",
      "error WrongChainId()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event AssetConversionBufferUpdated(uint16 targetChain, uint16 buffer, uint16 bufferDenominator)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ChainSupportUpdated(uint16 targetChain, bool isSupported)",
      "event ContractUpgraded(address indexed oldContract, address indexed newContract)",
      "event DeliverGasOverheadUpdated(uint256 indexed oldGasOverhead, uint256 indexed newGasOverhead)",
      "event OwnershipTransfered(address indexed oldOwner, address indexed newOwner)",
      "event RewardAddressUpdated(address indexed newAddress)",
      "event TargetChainAddressUpdated(uint16 indexed targetChain, bytes32 indexed newAddress)",
      "event Upgraded(address indexed implementation)",
      "event WormholeRelayerUpdated(address coreRelayer)",
      "function assetConversionBuffer(uint16 targetChain) view returns (uint16 buffer, uint16 bufferDenominator)",
      "function chainId() view returns (uint16)",
      "function confirmOwnershipTransferRequest()",
      "function coreRelayer() view returns (address)",
      "function deliverGasOverhead(uint16 targetChain) view returns (uint256)",
      "function gasPrice(uint16 targetChain) view returns (uint256)",
      "function getRewardAddress() view returns (address)",
      "function getSupportedKeys() view returns (uint256 bitmap)",
      "function getTargetChainAddress(uint16 targetChain) view returns (bytes32 deliveryProviderAddress)",
      "function initialize()",
      "function isChainSupported(uint16 targetChain) view returns (bool supported)",
      "function isInitialized(address impl) view returns (bool)",
      "function isMessageKeyTypeSupported(uint8 keyType) view returns (bool supported)",
      "function maximumBudget(uint16 targetChain) view returns (uint256)",
      "function nativeCurrencyPrice(uint16 targetChain) view returns (uint256)",
      "function owner() view returns (address)",
      "function pendingOwner() view returns (address)",
      "function pricingWallet() view returns (address)",
      "function quoteAssetConversion(uint16 targetChain, uint256 currentChainAmount) view returns (uint256 targetChainAmount)",
      "function quoteDeliveryOverhead(uint16 targetChain) view returns (uint256 nativePriceQuote)",
      "function quoteDeliveryPrice(uint16 targetChain, uint256 receiverValue, bytes encodedExecutionParams) view returns (uint256 nativePriceQuote, bytes encodedExecutionInfo)",
      "function quoteEvmDeliveryPrice(uint16 targetChain, uint256 gasLimit, uint256 receiverValue) view returns (uint256 nativePriceQuote, uint256 targetChainRefundPerUnitGasUnused)",
      "function quoteGasCost(uint16 targetChain, uint256 gasAmount) view returns (uint256 totalCost)",
      "function quoteGasPrice(uint16 targetChain) view returns (uint256 price)",
      "function rewardAddress() view returns (address)",
      "function submitOwnershipTransferRequest(uint16 thisRelayerChainId, address newOwner)",
      "function targetChainAddress(uint16 targetChain) view returns (bytes32)",
      "function updateAssetConversionBuffer(uint16 targetChain, uint16 buffer, uint16 bufferDenominator)",
      "function updateAssetConversionBuffers(tuple(uint16 chainId, uint16 buffer, uint16 bufferDenominator)[] updates)",
      "function updateConfig(tuple(bool updateAssetConversionBuffer, bool updateDeliverGasOverhead, bool updatePrice, bool updateTargetChainAddress, bool updateMaximumBudget, bool updateSupportedChain, bool isSupported, uint16 chainId, uint16 buffer, uint16 bufferDenominator, uint256 newGasOverhead, uint256 gasPrice, uint256 nativeCurrencyPrice, bytes32 targetChainAddress, uint256 maximumTotalBudget)[] updates, tuple(bool updateWormholeRelayer, bool updateRewardAddress, bool updateSupportedKeyTypes, address coreRelayer, address rewardAddress, uint256 supportedKeyTypesBitmap) coreConfig)",
      "function updateDeliverGasOverhead(uint16 chainId, uint256 newGasOverhead)",
      "function updateDeliverGasOverheads(tuple(uint16 chainId, uint256 newGasOverhead)[] overheadUpdates)",
      "function updateMaximumBudget(uint16 targetChain, uint256 maximumTotalBudget)",
      "function updateMaximumBudgets(tuple(uint16 chainId, uint256 maximumTotalBudget)[] updates)",
      "function updatePrice(uint16 updateChainId, uint256 updateGasPrice, uint256 updateNativeCurrencyPrice)",
      "function updatePrices(tuple(uint16 chainId, uint256 gasPrice, uint256 nativeCurrencyPrice)[] updates)",
      "function updatePricingWallet(address newPricingWallet)",
      "function updateRewardAddress(address newAddress)",
      "function updateSupportedChain(uint16 targetChain, bool isSupported)",
      "function updateSupportedChains(tuple(uint16 chainId, bool isSupported)[] updates)",
      "function updateSupportedMessageKeyTypes(uint8 keyType, bool supported)",
      "function updateTargetChainAddress(uint16 targetChain, bytes32 newAddress)",
      "function updateTargetChainAddresses(tuple(uint16 chainId, bytes32 targetChainAddress)[] updates)",
      "function updateWormholeRelayer(address newAddress)",
      "function upgrade(uint16 deliveryProviderChainId, address newImplementation)"
    ],
    "0x0fD04a68d3c3A692d6Fa30384D1A87Ef93554eE6": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner_, address spender_) view returns (uint256)",
      "function approve(address spender_, uint256 amount_) returns (bool)",
      "function balanceOf(address account_) view returns (uint256)",
      "function burn(address account_, uint256 amount_)",
      "function chainId() view returns (uint16)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender_, uint256 subtractedValue_) returns (bool)",
      "function eip712Domain() view returns (bytes1 domainFields, string domainName, string domainVersion, uint256 domainChainId, address domainVerifyingContract, bytes32 domainSalt, uint256[] domainExtensions)",
      "function increaseAllowance(address spender_, uint256 addedValue_) returns (bool)",
      "function initialize(string name_, string symbol_, uint8 decimals_, uint64 sequence_, address owner_, uint16 chainId_, bytes32 nativeContract_)",
      "function mint(address account_, uint256 amount_)",
      "function name() view returns (string)",
      "function nativeContract() view returns (bytes32)",
      "function nonces(address owner_) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner_, address spender_, uint256 value_, uint256 deadline_, uint8 v_, bytes32 r_, bytes32 s_)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient_, uint256 amount_) returns (bool)",
      "function transferFrom(address sender_, address recipient_, uint256 amount_) returns (bool)",
      "function updateDetails(string name_, string symbol_, uint64 sequence_)"
    ],
    "0x27428DD2d3DD32A4D7f7C497eAaa23130d894911": [
      "constructor(address impl)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x37f26277B1927c6bEDbD94e5C21C337A706af31c": [
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ContractUpgraded(address indexed oldContract, address indexed newContract)",
      "event Redeemed(uint16 indexed emitterChainId, bytes32 indexed emitterAddress, uint64 indexed sequence)",
      "event Upgraded(address indexed implementation)",
      "event WormholeFinalityUpdated(uint8 indexed oldFinality, uint8 indexed newFinality)",
      "function addressToBytes32(address address_) pure returns (bytes32)",
      "function chainId() view returns (uint16)",
      "function circleBridge() view returns (address)",
      "function circleIntegrationImplementation() pure returns (bytes32)",
      "function circleTokenMinter() view returns (address)",
      "function circleTransmitter() view returns (address)",
      "function decodeDepositWithPayload(bytes encoded) pure returns (tuple(bytes32 token, uint256 amount, uint32 sourceDomain, uint32 targetDomain, uint64 nonce, bytes32 fromAddress, bytes32 mintRecipient, bytes payload) message)",
      "function encodeDepositWithPayload(tuple(bytes32 token, uint256 amount, uint32 sourceDomain, uint32 targetDomain, uint64 nonce, bytes32 fromAddress, bytes32 mintRecipient, bytes payload) message) pure returns (bytes)",
      "function evmChain() view returns (uint256)",
      "function fetchLocalTokenAddress(uint32 sourceDomain, bytes32 sourceToken) view returns (bytes32)",
      "function getChainIdFromDomain(uint32 domain) view returns (uint16)",
      "function getDomainFromChainId(uint16 chainId_) view returns (uint32)",
      "function getRegisteredEmitter(uint16 emitterChainId) view returns (bytes32)",
      "function governanceChainId() view returns (uint16)",
      "function governanceContract() view returns (bytes32)",
      "function initialize()",
      "function isAcceptedToken(address token) view returns (bool)",
      "function isInitialized(address impl) view returns (bool)",
      "function isMessageConsumed(bytes32 hash) view returns (bool)",
      "function localDomain() view returns (uint32)",
      "function redeemTokensWithPayload(tuple(bytes encodedWormholeMessage, bytes circleBridgeMessage, bytes circleAttestation) params) returns (tuple(bytes32 token, uint256 amount, uint32 sourceDomain, uint32 targetDomain, uint64 nonce, bytes32 fromAddress, bytes32 mintRecipient, bytes payload) depositInfo)",
      "function registerEmitterAndDomain(bytes encodedMessage)",
      "function transferTokensWithPayload(tuple(address token, uint256 amount, uint16 targetChain, bytes32 mintRecipient) transferParams, uint32 batchId, bytes payload) payable returns (uint64 messageSequence)",
      "function updateWormholeFinality(bytes encodedMessage)",
      "function upgradeContract(bytes encodedMessage)",
      "function verifyGovernanceMessage(bytes encodedMessage, uint8 action) view returns (bytes32 messageHash, bytes payload)",
      "function wormhole() view returns (address)",
      "function wormholeFinality() view returns (uint8)"
    ],
    "0x381752f5458282d317d12C30D2Bd4D6E1FD8841e": [
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ContractUpgraded(address indexed oldContract, address indexed newContract)",
      "event TransferRedeemed(uint16 indexed emitterChainId, bytes32 indexed emitterAddress, uint64 indexed sequence)",
      "event Upgraded(address indexed implementation)",
      "function WETH() view returns (address)",
      "function _parseTransferCommon(bytes encoded) pure returns (tuple(uint8 payloadID, uint256 amount, bytes32 tokenAddress, uint16 tokenChain, bytes32 to, uint16 toChain, uint256 fee) transfer)",
      "function attestToken(address tokenAddress, uint32 nonce) payable returns (uint64 sequence)",
      "function bridgeContracts(uint16 chainId_) view returns (bytes32)",
      "function chainId() view returns (uint16)",
      "function completeTransfer(bytes encodedVm)",
      "function completeTransferAndUnwrapETH(bytes encodedVm)",
      "function completeTransferAndUnwrapETHWithPayload(bytes encodedVm) returns (bytes)",
      "function completeTransferWithPayload(bytes encodedVm) returns (bytes)",
      "function createWrapped(bytes encodedVm) returns (address token)",
      "function encodeAssetMeta(tuple(uint8 payloadID, bytes32 tokenAddress, uint16 tokenChain, uint8 decimals, bytes32 symbol, bytes32 name) meta) pure returns (bytes encoded)",
      "function encodeTransfer(tuple(uint8 payloadID, uint256 amount, bytes32 tokenAddress, uint16 tokenChain, bytes32 to, uint16 toChain, uint256 fee) transfer) pure returns (bytes encoded)",
      "function encodeTransferWithPayload(tuple(uint8 payloadID, uint256 amount, bytes32 tokenAddress, uint16 tokenChain, bytes32 to, uint16 toChain, bytes32 fromAddress, bytes payload) transfer) pure returns (bytes encoded)",
      "function evmChainId() view returns (uint256)",
      "function finality() view returns (uint8)",
      "function governanceActionIsConsumed(bytes32 hash) view returns (bool)",
      "function governanceChainId() view returns (uint16)",
      "function governanceContract() view returns (bytes32)",
      "function implementation() view returns (address)",
      "function initialize()",
      "function isFork() view returns (bool)",
      "function isInitialized(address impl) view returns (bool)",
      "function isTransferCompleted(bytes32 hash) view returns (bool)",
      "function isWrappedAsset(address token) view returns (bool)",
      "function outstandingBridged(address token) view returns (uint256)",
      "function parseAssetMeta(bytes encoded) pure returns (tuple(uint8 payloadID, bytes32 tokenAddress, uint16 tokenChain, uint8 decimals, bytes32 symbol, bytes32 name) meta)",
      "function parsePayloadID(bytes encoded) pure returns (uint8 payloadID)",
      "function parseRecoverChainId(bytes encodedRecoverChainId) pure returns (tuple(bytes32 module, uint8 action, uint256 evmChainId, uint16 newChainId) rci)",
      "function parseRegisterChain(bytes encoded) pure returns (tuple(bytes32 module, uint8 action, uint16 chainId, uint16 emitterChainID, bytes32 emitterAddress) chain)",
      "function parseTransfer(bytes encoded) pure returns (tuple(uint8 payloadID, uint256 amount, bytes32 tokenAddress, uint16 tokenChain, bytes32 to, uint16 toChain, uint256 fee) transfer)",
      "function parseTransferWithPayload(bytes encoded) pure returns (tuple(uint8 payloadID, uint256 amount, bytes32 tokenAddress, uint16 tokenChain, bytes32 to, uint16 toChain, bytes32 fromAddress, bytes payload) transfer)",
      "function parseUpgrade(bytes encoded) pure returns (tuple(bytes32 module, uint8 action, uint16 chainId, bytes32 newContract) chain)",
      "function registerChain(bytes encodedVM)",
      "function submitRecoverChainId(bytes encodedVM)",
      "function tokenImplementation() view returns (address)",
      "function transferTokens(address token, uint256 amount, uint16 recipientChain, bytes32 recipient, uint256 arbiterFee, uint32 nonce) payable returns (uint64 sequence)",
      "function transferTokensWithPayload(address token, uint256 amount, uint16 recipientChain, bytes32 recipient, uint32 nonce, bytes payload) payable returns (uint64 sequence)",
      "function updateWrapped(bytes encodedVm) returns (address token)",
      "function upgrade(bytes encodedVM)",
      "function wormhole() view returns (address)",
      "function wrapAndTransferETH(uint16 recipientChain, bytes32 recipient, uint256 arbiterFee, uint32 nonce) payable returns (uint64 sequence)",
      "function wrapAndTransferETHWithPayload(uint16 recipientChain, bytes32 recipient, uint32 nonce, bytes payload) payable returns (uint64 sequence)",
      "function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) view returns (address)"
    ],
    "0x3c3d457f1522D3540AB3325Aa5f1864E34cBA9D0": [
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ContractUpgraded(address indexed oldContract, address indexed newContract)",
      "event GuardianSetAdded(uint32 indexed index)",
      "event LogMessagePublished(address indexed sender, uint64 sequence, uint32 nonce, bytes payload, uint8 consistencyLevel)",
      "event Upgraded(address indexed implementation)",
      "function chainId() view returns (uint16)",
      "function evmChainId() view returns (uint256)",
      "function getCurrentGuardianSetIndex() view returns (uint32)",
      "function getGuardianSet(uint32 index) view returns (tuple(address[] keys, uint32 expirationTime))",
      "function getGuardianSetExpiry() view returns (uint32)",
      "function governanceActionIsConsumed(bytes32 hash) view returns (bool)",
      "function governanceChainId() view returns (uint16)",
      "function governanceContract() view returns (bytes32)",
      "function initialize()",
      "function isFork() view returns (bool)",
      "function isInitialized(address impl) view returns (bool)",
      "function messageFee() view returns (uint256)",
      "function nextSequence(address emitter) view returns (uint64)",
      "function parseAndVerifyVM(bytes encodedVM) view returns (tuple(uint8 version, uint32 timestamp, uint32 nonce, uint16 emitterChainId, bytes32 emitterAddress, uint64 sequence, uint8 consistencyLevel, bytes payload, uint32 guardianSetIndex, tuple(bytes32 r, bytes32 s, uint8 v, uint8 guardianIndex)[] signatures, bytes32 hash) vm, bool valid, string reason)",
      "function parseContractUpgrade(bytes encodedUpgrade) pure returns (tuple(bytes32 module, uint8 action, uint16 chain, address newContract) cu)",
      "function parseGuardianSetUpgrade(bytes encodedUpgrade) pure returns (tuple(bytes32 module, uint8 action, uint16 chain, tuple(address[] keys, uint32 expirationTime) newGuardianSet, uint32 newGuardianSetIndex) gsu)",
      "function parseRecoverChainId(bytes encodedRecoverChainId) pure returns (tuple(bytes32 module, uint8 action, uint256 evmChainId, uint16 newChainId) rci)",
      "function parseSetMessageFee(bytes encodedSetMessageFee) pure returns (tuple(bytes32 module, uint8 action, uint16 chain, uint256 messageFee) smf)",
      "function parseTransferFees(bytes encodedTransferFees) pure returns (tuple(bytes32 module, uint8 action, uint16 chain, uint256 amount, bytes32 recipient) tf)",
      "function parseVM(bytes encodedVM) pure returns (tuple(uint8 version, uint32 timestamp, uint32 nonce, uint16 emitterChainId, bytes32 emitterAddress, uint64 sequence, uint8 consistencyLevel, bytes payload, uint32 guardianSetIndex, tuple(bytes32 r, bytes32 s, uint8 v, uint8 guardianIndex)[] signatures, bytes32 hash) vm)",
      "function publishMessage(uint32 nonce, bytes payload, uint8 consistencyLevel) payable returns (uint64 sequence)",
      "function quorum(uint256 numGuardians) pure returns (uint256 numSignaturesRequiredForQuorum)",
      "function submitContractUpgrade(bytes _vm)",
      "function submitNewGuardianSet(bytes _vm)",
      "function submitRecoverChainId(bytes _vm)",
      "function submitSetMessageFee(bytes _vm)",
      "function submitTransferFees(bytes _vm)",
      "function verifySignatures(bytes32 hash, tuple(bytes32 r, bytes32 s, uint8 v, uint8 guardianIndex)[] signatures, tuple(address[] keys, uint32 expirationTime) guardianSet) pure returns (bool valid, string reason)",
      "function verifyVM(tuple(uint8 version, uint32 timestamp, uint32 nonce, uint16 emitterChainId, bytes32 emitterAddress, uint64 sequence, uint8 consistencyLevel, bytes payload, uint32 guardianSetIndex, tuple(bytes32 r, bytes32 s, uint8 v, uint8 guardianIndex)[] signatures, bytes32 hash) vm) view returns (bool valid, string reason)"
    ],
    "0x3e41904B3766F4cCEb145Cc53D75fEB61722a96C": [
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ContractUpgraded(address indexed oldContract, address indexed newContract)",
      "event Upgraded(address indexed implementation)",
      "function bridgeContracts(uint16 chainId_) view returns (bytes32)",
      "function chainId() view returns (uint16)",
      "function completeTransfer(bytes encodedVm)",
      "function encodeTransfer(tuple(bytes32 tokenAddress, uint16 tokenChain, bytes32 symbol, bytes32 name, uint256 tokenID, string uri, bytes32 to, uint16 toChain) transfer) pure returns (bytes encoded)",
      "function evmChainId() view returns (uint256)",
      "function finality() view returns (uint8)",
      "function governanceActionIsConsumed(bytes32 hash) view returns (bool)",
      "function governanceChainId() view returns (uint16)",
      "function governanceContract() view returns (bytes32)",
      "function implementation() view returns (address)",
      "function initialize()",
      "function isFork() view returns (bool)",
      "function isInitialized(address impl) view returns (bool)",
      "function isTransferCompleted(bytes32 hash) view returns (bool)",
      "function isWrappedAsset(address token) view returns (bool)",
      "function onERC721Received(address operator, address, uint256, bytes) view returns (bytes4)",
      "function parseRecoverChainId(bytes encodedRecoverChainId) pure returns (tuple(bytes32 module, uint8 action, uint256 evmChainId, uint16 newChainId) rci)",
      "function parseRegisterChain(bytes encoded) pure returns (tuple(bytes32 module, uint8 action, uint16 chainId, uint16 emitterChainID, bytes32 emitterAddress) chain)",
      "function parseTransfer(bytes encoded) pure returns (tuple(bytes32 tokenAddress, uint16 tokenChain, bytes32 symbol, bytes32 name, uint256 tokenID, string uri, bytes32 to, uint16 toChain) transfer)",
      "function parseUpgrade(bytes encoded) pure returns (tuple(bytes32 module, uint8 action, uint16 chainId, bytes32 newContract) chain)",
      "function registerChain(bytes encodedVM)",
      "function splCache(uint256 tokenId) view returns (tuple(bytes32 name, bytes32 symbol))",
      "function submitRecoverChainId(bytes encodedVM)",
      "function tokenImplementation() view returns (address)",
      "function transferNFT(address token, uint256 tokenID, uint16 recipientChain, bytes32 recipient, uint32 nonce) payable returns (uint64 sequence)",
      "function upgrade(bytes encodedVM)",
      "function wormhole() view returns (address)",
      "function wrappedAsset(uint16 tokenChainId, bytes32 tokenAddress) view returns (address)"
    ],
    "0x3ee18B2214AFF97000D974cf647E7C347E8fa585": [
      "constructor(address implementation, bytes initData)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x6FFd7EdE62328b3Af38FCD61461Bbfc52F5651fE": [
      "constructor(address implementation, bytes initData)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x7A0a53847776f7e94Cc35742971aCb2217b0Db81": [
      "constructor(address implementation, bytes initData)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x90995DBd1aae85872451b50A569dE947D34ac4ee": [
      "constructor(address wormhole)",
      "error ChainAlreadyRegistered(uint16 chainId, bytes32 registeredWormholeRelayerContract)",
      "error ContractUpgradeFailed(bytes failure)",
      "error DeliveryProviderCannotReceivePayment()",
      "error DeliveryProviderDoesNotSupportMessageKeyType(uint8 keyType)",
      "error DeliveryProviderDoesNotSupportTargetChain(address relayer, uint16 chainId)",
      "error GovernanceActionAlreadyConsumed(bytes32 hash)",
      "error InsufficientRelayerFunds(uint256 msgValue, uint256 minimum)",
      "error InvalidDefaultDeliveryProvider(bytes32 defaultDeliveryProvider)",
      "error InvalidDeliveryVaa(string reason)",
      "error InvalidEmitter(bytes32 emitter, bytes32 registered, uint16 chainId)",
      "error InvalidFork()",
      "error InvalidGovernanceChainId(uint16 parsed, uint16 expected)",
      "error InvalidGovernanceContract(bytes32 parsed, bytes32 expected)",
      "error InvalidGovernanceVM(string reason)",
      "error InvalidMsgValue(uint256 msgValue, uint256 totalFee)",
      "error InvalidOverrideGasLimit()",
      "error InvalidOverrideReceiverValue()",
      "error InvalidPayloadAction(uint8 parsed, uint8 expected)",
      "error InvalidPayloadChainId(uint16 parsed, uint16 expected)",
      "error InvalidPayloadId(uint8 parsed, uint8 expected)",
      "error InvalidPayloadLength(uint256 received, uint256 expected)",
      "error InvalidPayloadModule(bytes32 parsed, bytes32 expected)",
      "error MessageKeysLengthDoesNotMatchMessagesLength(uint256 keys, uint256 vaas)",
      "error NotAnEvmAddress(bytes32)",
      "error ReentrantDelivery(address msgSender, address lockedBy)",
      "error TargetChainIsNotThisChain(uint16 targetChain)",
      "error TooManyMessageKeys(uint256 numMessageKeys)",
      "error UnexpectedExecutionInfoVersion(uint8 version, uint8 expectedVersion)",
      "error VaaKeysDoNotMatchVaas(uint8 index)",
      "error VersionMismatchOverride(uint8 instructionVersion, uint8 overrideVersion)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event ContractUpgraded(address indexed oldContract, address indexed newContract)",
      "event Delivery(address indexed recipientContract, uint16 indexed sourceChain, uint64 indexed sequence, bytes32 deliveryVaaHash, uint8 status, uint256 gasUsed, uint8 refundStatus, bytes additionalStatusInfo, bytes overridesInfo)",
      "event SendEvent(uint64 indexed sequence, uint256 deliveryQuote, uint256 paymentForExtraReceiverValue)",
      "event Upgraded(address indexed implementation)",
      "function checkAndExecuteUpgradeMigration()",
      "function deliver(bytes[] encodedVMs, bytes encodedDeliveryVAA, address relayerRefundAddress, bytes deliveryOverrides) payable",
      "function deliveryAttempted(bytes32 deliveryHash) view returns (bool attempted)",
      "function deliveryFailureBlock(bytes32 deliveryHash) view returns (uint256 blockNumber)",
      "function deliverySuccessBlock(bytes32 deliveryHash) view returns (uint256 blockNumber)",
      "function forward(uint16 targetChain, bytes32 targetAddress, bytes payload, uint256 receiverValue, uint256, bytes encodedExecutionParameters, uint16 refundChain, bytes32 refundAddress, address deliveryProviderAddress, tuple(uint16 chainId, bytes32 emitterAddress, uint64 sequence)[] vaaKeys, uint8 consistencyLevel) payable",
      "function forwardPayloadToEvm(uint16 targetChain, address targetAddress, bytes payload, uint256 receiverValue, uint256 gasLimit) payable",
      "function forwardToEvm(uint16 targetChain, address targetAddress, bytes payload, uint256 receiverValue, uint256 paymentForExtraReceiverValue, uint256 gasLimit, uint16 refundChain, address refundAddress, address deliveryProviderAddress, tuple(uint16 chainId, bytes32 emitterAddress, uint64 sequence)[] vaaKeys, uint8 consistencyLevel) payable",
      "function forwardVaasToEvm(uint16 targetChain, address targetAddress, bytes payload, uint256 receiverValue, uint256 gasLimit, tuple(uint16 chainId, bytes32 emitterAddress, uint64 sequence)[] vaaKeys) payable",
      "function getDefaultDeliveryProvider() view returns (address deliveryProvider)",
      "function getRegisteredWormholeRelayerContract(uint16 chainId) view returns (bytes32)",
      "function initialize(address defaultDeliveryProvider)",
      "function quoteDeliveryPrice(uint16 targetChain, uint256 receiverValue, bytes encodedExecutionParameters, address deliveryProviderAddress) view returns (uint256 nativePriceQuote, bytes encodedExecutionInfo)",
      "function quoteEVMDeliveryPrice(uint16 targetChain, uint256 receiverValue, uint256 gasLimit, address deliveryProviderAddress) view returns (uint256 nativePriceQuote, uint256 targetChainRefundPerGasUnused)",
      "function quoteEVMDeliveryPrice(uint16 targetChain, uint256 receiverValue, uint256 gasLimit) view returns (uint256 nativePriceQuote, uint256 targetChainRefundPerGasUnused)",
      "function quoteNativeForChain(uint16 targetChain, uint256 currentChainAmount, address deliveryProviderAddress) view returns (uint256 targetChainAmount)",
      "function registerWormholeRelayerContract(bytes encodedVm)",
      "function resend(tuple(uint16 chainId, bytes32 emitterAddress, uint64 sequence) deliveryVaaKey, uint16 targetChain, uint256 newReceiverValue, bytes newEncodedExecutionParameters, address newDeliveryProviderAddress) payable returns (uint64 sequence)",
      "function resendToEvm(tuple(uint16 chainId, bytes32 emitterAddress, uint64 sequence) deliveryVaaKey, uint16 targetChain, uint256 newReceiverValue, uint256 newGasLimit, address newDeliveryProviderAddress) payable returns (uint64 sequence)",
      "function send(uint16 targetChain, bytes32 targetAddress, bytes payload, uint256 receiverValue, uint256 paymentForExtraReceiverValue, bytes encodedExecutionParameters, uint16 refundChain, bytes32 refundAddress, address deliveryProviderAddress, tuple(uint16 chainId, bytes32 emitterAddress, uint64 sequence)[] vaaKeys, uint8 consistencyLevel) payable returns (uint64 sequence)",
      "function send(uint16 targetChain, bytes32 targetAddress, bytes payload, uint256 receiverValue, uint256 paymentForExtraReceiverValue, bytes encodedExecutionParameters, uint16 refundChain, bytes32 refundAddress, address deliveryProviderAddress, tuple(uint8 keyType, bytes encodedKey)[] messageKeys, uint8 consistencyLevel) payable returns (uint64 sequence)",
      "function sendPayloadToEvm(uint16 targetChain, address targetAddress, bytes payload, uint256 receiverValue, uint256 gasLimit, uint16 refundChain, address refundAddress) payable returns (uint64 sequence)",
      "function sendPayloadToEvm(uint16 targetChain, address targetAddress, bytes payload, uint256 receiverValue, uint256 gasLimit) payable returns (uint64 sequence)",
      "function sendToEvm(uint16 targetChain, address targetAddress, bytes payload, uint256 receiverValue, uint256 paymentForExtraReceiverValue, uint256 gasLimit, uint16 refundChain, address refundAddress, address deliveryProviderAddress, tuple(uint16 chainId, bytes32 emitterAddress, uint64 sequence)[] vaaKeys, uint8 consistencyLevel) payable returns (uint64 sequence)",
      "function sendToEvm(uint16 targetChain, address targetAddress, bytes payload, uint256 receiverValue, uint256 paymentForExtraReceiverValue, uint256 gasLimit, uint16 refundChain, address refundAddress, address deliveryProviderAddress, tuple(uint8 keyType, bytes encodedKey)[] messageKeys, uint8 consistencyLevel) payable returns (uint64 sequence)",
      "function sendVaasToEvm(uint16 targetChain, address targetAddress, bytes payload, uint256 receiverValue, uint256 gasLimit, tuple(uint16 chainId, bytes32 emitterAddress, uint64 sequence)[] vaaKeys) payable returns (uint64 sequence)",
      "function sendVaasToEvm(uint16 targetChain, address targetAddress, bytes payload, uint256 receiverValue, uint256 gasLimit, tuple(uint16 chainId, bytes32 emitterAddress, uint64 sequence)[] vaaKeys, uint16 refundChain, address refundAddress) payable returns (uint64 sequence)",
      "function setDefaultDeliveryProvider(bytes encodedVm)",
      "function submitContractUpgrade(bytes encodedVm)"
    ],
    "0x98f3c9e6E3fAce36bAAd05FE09d375Ef1464288B": [
      "constructor(address implementation, bytes initData)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xAaDA05BD399372f0b0463744C09113c137636f6a": [
      "constructor(address implementation, bytes initData)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xEc4d807Cd33a48A7C8Cd73D09B41Aa5160B3a7fc": [
      "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
      "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
      "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
      "function approve(address to, uint256 tokenId)",
      "function balanceOf(address owner_) view returns (uint256)",
      "function burn(uint256 tokenId)",
      "function chainId() view returns (uint16)",
      "function getApproved(uint256 tokenId) view returns (address)",
      "function initialize(string name_, string symbol_, address owner_, uint16 chainId_, bytes32 nativeContract_)",
      "function isApprovedForAll(address owner_, address operator) view returns (bool)",
      "function mint(address to, uint256 tokenId, string uri)",
      "function name() view returns (string)",
      "function nativeContract() view returns (bytes32)",
      "function owner() view returns (address)",
      "function ownerOf(uint256 tokenId) view returns (address)",
      "function safeTransferFrom(address from, address to, uint256 tokenId)",
      "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
      "function setApprovalForAll(address operator, bool approved)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function tokenURI(uint256 tokenId) view returns (string)",
      "function transferFrom(address from, address to, uint256 tokenId)"
    ]
  },
  "usedTemplates": {}
}
