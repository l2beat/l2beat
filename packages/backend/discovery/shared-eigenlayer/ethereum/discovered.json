{
  "name": "shared-eigenlayer",
  "chain": "ethereum",
  "blockNumber": 20912724,
  "configHash": "0xf33bc24a9b31fe178eed08ff32ec7e944375ad6817ae20cb4e8a90fdcd7a251a",
  "contracts": [
    {
      "name": "DepositContract",
      "address": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
      "ignoreInWatchMode": ["get_deposit_count", "get_deposit_root"],
      "sinceTimestamp": 1602667372,
      "values": {
        "$immutable": true,
        "get_deposit_count": "0xab1a1a0000000000",
        "get_deposit_root": "0x94dccdd2e3ce3165a9dc8930bd85c1dc196f975b9e77af720c3454c09bfc7a4c"
      },
      "derivedName": "DepositContract"
    },
    {
      "name": "PauserRegistry",
      "address": "0x0c431C66F4dE941d089625E5B423D00707977060",
      "sinceTimestamp": 1686348935,
      "values": {
        "$immutable": true,
        "pausers": [
          "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
          "0x5050389572f2d220ad927CcbeA0D406831012390",
          "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
        ],
        "unpauser": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      },
      "derivedName": "PauserRegistry"
    },
    {
      "name": "StrategiesBeacon",
      "address": "0x0ed6703C298d28aE0878d1b28e88cA87F9662fE9",
      "descriptions": [
        "UpgradeableBeacon managing the single implementation for all strategies deployed via StrategyFactory."
      ],
      "sinceTimestamp": 1723232219,
      "values": {
        "$immutable": true,
        "implementation": "0xe9FA8F904d97854C7389b68923262ADCC6C27827",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      },
      "derivedName": "UpgradeableBeacon"
    },
    {
      "name": "TokenHopper",
      "address": "0x0ffC6AC10515EE0F83fEE71FCaf5Ea5805256563",
      "descriptions": [
        "Minter of the bEIGEN (and thus EIGEN) token. Can execute a predefined payload in predefined intervals (configured by the Owner)."
      ],
      "ignoreInWatchMode": ["latestPress", "canPress"],
      "sinceTimestamp": 1727895695,
      "values": {
        "$immutable": true,
        "canPress": false,
        "getHopperConfiguration": {
          "token": "0xec53bF9167f50cDEB3Ae105f56099aaaB9061F83",
          "startTime": 1727308800,
          "cooldownSeconds": 604800,
          "actionGenerator": "0x99E6a294349072F9873081Cde9AC9eeb7Fd1F9dE",
          "doesExpire": false,
          "expirationTimestamp": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        },
        "isExpired": false,
        "latestPress": 1728065387,
        "owner": "0xbb00DDa2832850a43840A3A86515E3Fe226865F2"
      },
      "fieldMeta": {
        "latestPress": {
          "severity": "LOW",
          "description": "Timestamp of the latest press. A button-press makes a call (calldata and cooldown are defined by the owner). Anyone can press the button at the defined time intervals."
        },
        "getHopperConfiguration": {
          "severity": "MEDIUM",
          "description": "Current configuration of the TokenHopper, like calldata executed at each button-press (actionGenerator), target (token) and cooldownSeconds."
        }
      },
      "derivedName": "TokenHopper"
    },
    {
      "name": "AVSDirectory",
      "address": "0x135DDa560e946695d6f155dACaFC6f1F25C1F5AF",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["avs"],
      "sinceTimestamp": 1711141931,
      "values": {
        "$admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
        "$implementation": "0xdAbdB3Cd346B7D5F5779b0B614EdE1CC9DcBA5b7",
        "$pastUpgrades": [
          [
            "2024-03-22T21:12:11.000Z",
            ["0xdAbdB3Cd346B7D5F5779b0B614EdE1CC9DcBA5b7"]
          ]
        ],
        "$upgradeCount": 1,
        "avs": [
          "0x870679E138bCdf293b7Ff14dD44b70FC97e12fc0",
          "0xD25c2c5802198CB8541987b73A8db4c9BCaE5cC7",
          "0x9FC952BdCbB7Daca7d420fA55b942405B073A89d",
          "0x71a77037870169d47aad6c2C9360861A4C0df2bF",
          "0x6026b61bDD2252160691CB3F6005B6B72E0Ec044",
          "0x35F4f28A8d3Ff20EEd10e087e8F96Ea2641E6AA2",
          "0x23221c5bB90C7c57ecc1E75513e2E4257673F0ef",
          "0xed2f4d90b073128ae6769a9A8D51547B1Df766C8",
          "0xE5445838C475A2980e6a88054ff1514230b83aEb",
          "0xd50E0931703302B080880C45148F5D83ea66aE2a",
          "0xF7fcff55d5FDAf2C3Bbeb140Be5e62a2c7D26Db3",
          "0xB6827E919b55B45290cf54F006EE4a231e06F088",
          "0x1DE75EaAb2df55d467494A172652579E6FA4540E",
          "0x07E26BF8060e33fA3771d88128b75493750515c1",
          "0x1F2c296448f692af840843d993fFC0546619Dcdb",
          "0x22CAc0e6A1465F043428e8AeF737b3cb09D0eEDa",
          "0xe8E59c6C8B56F2c178f63BCFC4ce5e5e2359c8fc",
          "0xb3AcAF09a1B801E36655B786da4EAA6aE9F5DC37",
          "0x18343Aa10e3D2F3A861e5649627324aEAD987Adf",
          "0xCE06c5fe42d22fF827A519396583Fd9f5176E3D3",
          "0xE7D0894Ac9266f5cbe8f8E750aC6cbe128FbbeB7",
          "0x84AdF221Af49E67DB62C5B16d86aFcaD2eF0b262",
          "0xb19f05CDc5EF266766AC1287A1EeF29283058773",
          "0x2d86E90ED40a034C753931eE31b1bD5E1970113d",
          "0x75195699F659ed67083691c2C48F23d0B907b559",
          "0xA5bD40e5406CB2d2440Db1D1bcF9dfD022B6C124",
          "0x8EF368e31cd0b51941bf85bC11D8C71589489Fe4",
          "0xd75c834B09ec626992Ff3Ce388AE7115791Fb282"
        ],
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "domainSeparator": "0x8ceb9367dd5eb661ead5bb90d8bfd836c1293d5fd67da541d446e1954349df40",
        "OPERATOR_AVS_REGISTRATION_TYPEHASH": "0xda2c89bafdd34776a2b8bb9c83c82f419e20cc8c67207f70edd58249b92661bd",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060"
      },
      "derivedName": "AVSDirectory"
    },
    {
      "name": "EIGEN Timelock",
      "address": "0x2520C6b2C1FBE1813AB5c7c1018CDa39529e9FF2",
      "sinceTimestamp": 1697499563,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0x2520C6b2C1FBE1813AB5c7c1018CDa39529e9FF2",
              "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xbb00DDa2832850a43840A3A86515E3Fe226865F2"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": ["0xbb00DDa2832850a43840A3A86515E3Fe226865F2"]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0xbb00DDa2832850a43840A3A86515E3Fe226865F2",
              "0xBE1685C81aA44FF9FB319dD389addd9374383e90"
            ]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 864000,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimelockController"
    },
    {
      "name": "EigenLayerExecutorMultisig",
      "address": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
      "template": "GnosisSafe",
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1686681203,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF",
          "0xFEA47018D632A77bA579846c840d5706705Dc598"
        ],
        "$threshold": 1,
        "domainSeparator": "0xbc80366740d76b8af95de2e845557588b8a3dc40db68b5b15b8f1cb36a4c7e45",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 2 (50%)",
        "nonce": 18,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "DelegationManager",
      "address": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
          "via": []
        }
      ],
      "sinceTimestamp": 1686348935,
      "values": {
        "$admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
        "$implementation": "0x1784BE6401339Fc0Fedf7E9379409f5c1BfE9dda",
        "$pastUpgrades": [
          [
            "2023-06-09T22:15:35.000Z",
            ["0x1f96861fEFa1065a5A96F20Deb6D8DC3ff48F7f9"]
          ],
          [
            "2023-06-09T22:16:35.000Z",
            ["0xf97E97649Da958d290e84E6D571c32F4b7F475e4"]
          ],
          [
            "2024-04-08T16:35:59.000Z",
            ["0x1784BE6401339Fc0Fedf7E9379409f5c1BfE9dda"]
          ]
        ],
        "$upgradeCount": 3,
        "beaconChainETHStrategy": "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
        "DELEGATION_APPROVAL_TYPEHASH": "0x14bde674c9f64b2ad00eaaee4a8bed1fabef35c7507e3c5b9cfc9436909a2dad",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "domainSeparator": "0x9bba7f98dd592dbd3fdbeef9fdebb4e19f8661950cb5dcc435fcad7824975fe1",
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "MAX_STAKER_OPT_OUT_WINDOW_BLOCKS": 1296000,
        "MAX_WITHDRAWAL_DELAY_BLOCKS": 216000,
        "minWithdrawalDelayBlocks": 50400,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "STAKER_DELEGATION_TYPEHASH": "0x39111bc4a4d688e1f685123d7497d4615370152a8ee4a0593e647bd06ad8bb0b",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      },
      "derivedName": "DelegationManager"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x3f5Ab2D4418d38568705bFd6672630fCC3435CC9",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x83E9115d334D248Ce39a6f36144aEaB5b3456e75"
        }
      ],
      "sinceTimestamp": 1710958955,
      "values": {
        "$immutable": true,
        "owner": "0xd6EC41E453C5E7dA5494f4d51A053Ab571712E6f"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x5050389572f2d220ad927CcbeA0D406831012390",
      "template": "GnosisSafe",
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1686325811,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xEFca484E497a9de170Da32abfa11650957dD2a95",
          "0x2E158da11961426E2A1Cc9e79f40244486b6845C",
          "0x9C7E495F6220c2Eccf19Ce73a2d1d486D53296E4",
          "0x4a3CD82B73821d075799680AcDff3e884B726777",
          "0xA935b0d2a529abb7F048CB56dd8B876ed5d8bD99",
          "0x34D64c402cA43C1c4B368e16130C64aC245718C6",
          "0x3C20b05f44ef008A5b848761e58e5Ca9594163e9",
          "0x82328b7Cd136296bac5c56079A64E58a44d790e2",
          "0x726b2EF6a771f452Cb1b1ac3C3acF5A46b99c02B",
          "0xcC82E76106647C921Ed3a6Af869740cce98EC0C7",
          "0x1084c2e1E33632c4cB0e7C4f15c64b19d7fB1256",
          "0xcf09EA5E7625E6E3F3345CACa1d288CcD1F39084",
          "0xEb94033d1331931cC0539C480Ca39Bf5f6916E89",
          "0x57af860e3a1C16641CDDDa92898266D2df7Dfa71"
        ],
        "$threshold": 1,
        "domainSeparator": "0xfbfd4ff7bef5c0320a947b1a9f8c619140699fe97b75752b6683fab61bd6c249",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "1 of 14 (7%)",
        "nonce": 18,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "UpgradeableBeacon",
      "address": "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073",
      "sinceTimestamp": 1686348959,
      "values": {
        "$immutable": true,
        "implementation": "0x6D225e974Fa404D25Ffb84eD6E242Ffa18eF6430",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "StrategyFactory",
      "address": "0x5e4C39Ad7A3E881585e383dB9827EB4811f6F647",
      "proxyType": "EIP1967 proxy",
      "descriptions": [
        "Factory contract for permissionless strategy creation via beacon proxies."
      ],
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
          "via": []
        }
      ],
      "sinceTimestamp": 1723232243,
      "values": {
        "$admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
        "$implementation": "0x3e07cc2D34C8E0965f5BA45Ac1E960e535155c74",
        "$pastUpgrades": [
          [
            "2024-08-09T19:37:23.000Z",
            ["0x3e07cc2D34C8E0965f5BA45Ac1E960e535155c74"]
          ]
        ],
        "$upgradeCount": 1,
        "owner": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyBeacon": "0x0ed6703C298d28aE0878d1b28e88cA87F9662fE9",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      },
      "derivedName": "StrategyFactory"
    },
    {
      "name": "EigenPod",
      "address": "0x6D225e974Fa404D25Ffb84eD6E242Ffa18eF6430",
      "sinceTimestamp": 1724181107,
      "values": {
        "$immutable": true,
        "activeValidatorCount": 0,
        "currentCheckpoint": {
          "beaconBlockRoot": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "proofsRemaining": 0,
          "podBalanceGwei": 0,
          "balanceDeltasGwei": 0
        },
        "currentCheckpointTimestamp": 0,
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "ethPOS": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "GENESIS_TIME": 1606824023,
        "lastCheckpointTimestamp": 0,
        "podOwner": "0x0000000000000000000000000000000000000000",
        "proofSubmitter": "0x0000000000000000000000000000000000000000",
        "withdrawableRestakedExecutionLayerGwei": 0
      }
    },
    {
      "name": "RewardsCoordinator",
      "address": "0x7750d328b314EfFa365A0402CcfD489B80B0adda",
      "proxyType": "EIP1967 proxy",
      "descriptions": [
        "Manages the distribution of rewards (arbitrary tokens, EIGEN) to restakers and commission to operators."
      ],
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
          "via": []
        }
      ],
      "sinceTimestamp": 1721406755,
      "values": {
        "$admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
        "$implementation": "0xb6738A8E7793D44c5895B6A6F2a62F6bF86Ba8d2",
        "$pastUpgrades": [
          [
            "2024-07-19T16:32:35.000Z",
            ["0x5bf7c13D5FAdba224ECB3D5C0a67A231D1628785"]
          ],
          [
            "2024-09-28T05:46:11.000Z",
            ["0xb6738A8E7793D44c5895B6A6F2a62F6bF86Ba8d2"]
          ]
        ],
        "$upgradeCount": 2,
        "activationDelay": 604800,
        "beaconChainETHStrategy": "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
        "CALCULATION_INTERVAL_SECONDS": 604800,
        "delegationManager": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "domainSeparator": "0xdc66bf3c6fc5af0167275d317f59c04eb40cdc83022c80f21b5e7bb76e991066",
        "GENESIS_REWARDS_TIMESTAMP": 1710979200,
        "globalOperatorCommissionBips": 1000,
        "MAX_FUTURE_LENGTH": 2592000,
        "MAX_RETROACTIVE_LENGTH": 14515200,
        "MAX_REWARDS_DURATION": 6048000,
        "owner": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "paused": 2,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "rewardsUpdater": "0x8f94F55fD8c9E090296283137C303fE97d32A9e2",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      },
      "derivedName": "RewardsCoordinator"
    },
    {
      "name": "bEIGEN token",
      "address": "0x83E9115d334D248Ce39a6f36144aEaB5b3456e75",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x3f5Ab2D4418d38568705bFd6672630fCC3435CC9",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1710958955,
      "values": {
        "$admin": "0x3f5Ab2D4418d38568705bFd6672630fCC3435CC9",
        "$implementation": "0xF2b225815F70c9b327DC9db758A36c92A4279b17",
        "$pastUpgrades": [
          [
            "2024-03-20T18:22:35.000Z",
            ["0xB91c69Af3eE022bd0a59Da082945914BFDcEFFE3"]
          ],
          [
            "2024-09-28T18:27:23.000Z",
            ["0xF2b225815F70c9b327DC9db758A36c92A4279b17"]
          ]
        ],
        "$upgradeCount": 2,
        "CLOCK_MODE": "mode=timestamp",
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x5dd88b27402a52ec3e227839f0f448d699f04c912202aa0d2b25bb86127a6e96",
        "EIGEN": "0xec53bF9167f50cDEB3Ae105f56099aaaB9061F83",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "bEIGEN",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0x83E9115d334D248Ce39a6f36144aEaB5b3456e75",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "Minters": ["0x0ffC6AC10515EE0F83fEE71FCaf5Ea5805256563"],
        "name": "Backing Eigen",
        "owner": "0xbb00DDa2832850a43840A3A86515E3Fe226865F2",
        "symbol": "bEIGEN",
        "totalSupply": "1683946032397180984615384624",
        "transferRestrictionsDisabledAfter": 0
      },
      "fieldMeta": {
        "transferRestrictionsDisabledAfter": {
          "severity": "HIGH",
          "description": "Timestamp after which transfer restrictions (whitelist) are disabled. Preset to uint256 max. Restrictions disabled if == 0."
        }
      },
      "derivedName": "BackingEigen"
    },
    {
      "name": "StrategyManager",
      "address": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
          "via": []
        }
      ],
      "sinceTimestamp": 1686348947,
      "values": {
        "$admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
        "$implementation": "0x70f44C13944d49a236E3cD7a94f48f5daB6C619b",
        "$pastUpgrades": [
          [
            "2023-06-09T22:15:47.000Z",
            ["0x1f96861fEFa1065a5A96F20Deb6D8DC3ff48F7f9"]
          ],
          [
            "2023-06-09T22:16:35.000Z",
            ["0x5d25EEf8CfEdaA47d31fE2346726dE1c21e342Fb"]
          ],
          [
            "2024-04-08T16:35:59.000Z",
            ["0x70f44C13944d49a236E3cD7a94f48f5daB6C619b"]
          ]
        ],
        "$upgradeCount": 3,
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "DEPOSIT_TYPEHASH": "0x4337f82d142e41f2a8c10547cd8c859bddb92262a61058e77842e24d9dea9224",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "domainSeparator": "0xdaba058ab21f198a04ec80cf0d39f943660a92a99bda5de5016f923f7e4962ef",
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "strategyWhitelister": "0x5e4C39Ad7A3E881585e383dB9827EB4811f6F647"
      },
      "derivedName": "StrategyManager"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x135DDa560e946695d6f155dACaFC6f1F25C1F5AF"
        },
        {
          "permission": "upgrade",
          "target": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A"
        },
        {
          "permission": "upgrade",
          "target": "0x5e4C39Ad7A3E881585e383dB9827EB4811f6F647"
        },
        {
          "permission": "upgrade",
          "target": "0x7750d328b314EfFa365A0402CcfD489B80B0adda"
        },
        {
          "permission": "upgrade",
          "target": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
        },
        {
          "permission": "upgrade",
          "target": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338"
        },
        {
          "permission": "upgrade",
          "target": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd"
        }
      ],
      "sinceTimestamp": 1686348935,
      "values": {
        "$immutable": true,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "EigenPodManager",
      "address": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["numPods"],
      "sinceTimestamp": 1686348947,
      "values": {
        "$admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
        "$implementation": "0x731A0aD160e407393Ff662231Add6Dd145AD3FEa",
        "$pastUpgrades": [
          [
            "2023-06-09T22:15:47.000Z",
            ["0x1f96861fEFa1065a5A96F20Deb6D8DC3ff48F7f9"]
          ],
          [
            "2023-06-09T22:16:47.000Z",
            ["0xEB86a5c40FdE917E6feC440aBbCDc80E3862e111"]
          ],
          [
            "2024-04-08T16:35:59.000Z",
            ["0xe4297e3DaDBc7D99e26a2954820f514CB50C5762"]
          ],
          [
            "2024-09-04T16:00:47.000Z",
            ["0x731A0aD160e407393Ff662231Add6Dd145AD3FEa"]
          ]
        ],
        "$upgradeCount": 4,
        "beaconChainETHStrategy": "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
        "delegationManager": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "eigenPodBeacon": "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073",
        "ethPOS": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "numPods": 32237,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      },
      "derivedName": "EigenPodManager"
    },
    {
      "name": "RewardAllStakersActionGenerator",
      "address": "0x99E6a294349072F9873081Cde9AC9eeb7Fd1F9dE",
      "descriptions": [
        "Generates calldata for the TokenHopper to mint EIGEN and send it to the RewardsCoordinator for distribution to all stakers."
      ],
      "sinceTimestamp": 1727895359,
      "values": {
        "$immutable": true,
        "amounts": ["321855128516280769230770", "965565385548842307692308"],
        "bEIGEN": "0x83E9115d334D248Ce39a6f36144aEaB5b3456e75",
        "CALCULATION_INTERVAL_SECONDS": 604800,
        "EIGEN": "0xec53bF9167f50cDEB3Ae105f56099aaaB9061F83",
        "firstSubmissionStartTimestamp": 1723680000,
        "firstSubmissionTriggerCutoff": 1727913600,
        "rewardsCoordinator": "0x7750d328b314EfFa365A0402CcfD489B80B0adda"
      },
      "derivedName": "RewardAllStakersActionGenerator"
    },
    {
      "name": "Timelock",
      "address": "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF",
      "sinceTimestamp": 1686370679,
      "values": {
        "$immutable": true,
        "admin": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "delay": 864000,
        "GRACE_PERIOD": 1209600,
        "MAXIMUM_DELAY": 2592000,
        "MINIMUM_DELAY": 172800,
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xB8915E195121f2B5D989Ec5727fd47a5259F1CEC",
      "receivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xec53bF9167f50cDEB3Ae105f56099aaaB9061F83"
        }
      ],
      "sinceTimestamp": 1697499563,
      "values": {
        "$immutable": true,
        "owner": "0x2520C6b2C1FBE1813AB5c7c1018CDa39529e9FF2"
      }
    },
    {
      "name": "EigenLayerTokenMultisig",
      "address": "0xbb00DDa2832850a43840A3A86515E3Fe226865F2",
      "template": "GnosisSafe",
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1697498675,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xc13Ce61C12C0eF93b4165400491A719918Af1c6c",
          "0x60bbde47423D62F6d7658bb3654869dfA397bF3D",
          "0x7cF4888613F744aB4f3bD688eF54E6B31F92A09B",
          "0x76d3A362313BAd49B6380B75aB7fC142a3EFf835",
          "0x30dd80F21aD9222Ce8f33b429fC0Fe25655Fe88a",
          "0xb82C36F6C5a3CD345C0954d90c68e26528014aDD"
        ],
        "$threshold": 3,
        "domainSeparator": "0x1402d1fac147648503e0981151b32afe3fec9a5207c84371b09867cbdc7a67a2",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 6 (50%)",
        "nonce": 72,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "EigenLayerOperationsMultisig",
      "address": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
      "template": "GnosisSafe",
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1686327791,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xdC541e2B4adD96888b2C79006F49A9748A4f1bDF",
          "0xa2425B00F9A9457AEdd51d4C36d9917eA1Aa7a02",
          "0xb7Ae34BB33da55f12797e793E01e63a17B11d108",
          "0x27ff193A6A1574A611E21c39FDA636fA1d61ba30",
          "0x422e2F724faFE75F3635458aD7D3Ac803DCD7ff1",
          "0xe7fFd467F7526abf9c8796EDeE0AD30110419127"
        ],
        "$threshold": 3,
        "domainSeparator": "0x34c8be0f1205a420b291c5ce97375b669d2d120e32d7aa5ea9f2497a0fbcc3e2",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 6 (50%)",
        "nonce": 61,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "bEIGEN Timelock",
      "address": "0xd6EC41E453C5E7dA5494f4d51A053Ab571712E6f",
      "sinceTimestamp": 1710955187,
      "values": {
        "$immutable": true,
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "TIMELOCK_ADMIN_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0xd6EC41E453C5E7dA5494f4d51A053Ab571712E6f",
              "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
            ]
          },
          "PROPOSER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0xbb00DDa2832850a43840A3A86515E3Fe226865F2",
              "0x5b73C5498c1E3b4dbA84de0F1833c4a029d90519"
            ]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0xbb00DDa2832850a43840A3A86515E3Fe226865F2",
              "0x5b73C5498c1E3b4dbA84de0F1833c4a029d90519"
            ]
          },
          "CANCELLER_ROLE": {
            "adminRole": "TIMELOCK_ADMIN_ROLE",
            "members": [
              "0xbb00DDa2832850a43840A3A86515E3Fe226865F2",
              "0x5b73C5498c1E3b4dbA84de0F1833c4a029d90519",
              "0xBE1685C81aA44FF9FB319dD389addd9374383e90"
            ]
          }
        },
        "CANCELLER_ROLE": "0xfd643c72710c63c0180259aba6b2d05451e3591a24e58b62239378085726f783",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63",
        "getMinDelay": 2073600,
        "PROPOSER_ROLE": "0xb09aa5aeb3702cfd50b6b62bc4532604938f21248a27a1d5ca736082b6819cc1",
        "TIMELOCK_ADMIN_ROLE": "0x5f58e3a2316349923ce3780f8d587db2d72378aed66a8261c916544fa6846ca5"
      },
      "derivedName": "TimelockController"
    },
    {
      "name": "Slasher",
      "address": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
          "via": []
        }
      ],
      "sinceTimestamp": 1686348947,
      "values": {
        "$admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
        "$implementation": "0xF3234220163a757edf1E11a8a085638D9B236614",
        "$pastUpgrades": [
          [
            "2023-06-09T22:15:47.000Z",
            ["0x1f96861fEFa1065a5A96F20Deb6D8DC3ff48F7f9"]
          ],
          [
            "2023-06-09T22:16:35.000Z",
            ["0xef31c292801f24f16479DD83197F1E6AeBb8d6d8"]
          ],
          [
            "2024-04-08T16:35:59.000Z",
            ["0xF3234220163a757edf1E11a8a085638D9B236614"]
          ]
        ],
        "$upgradeCount": 3,
        "delegation": "0x0000000000000000000000000000000000000000",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "Slasher"
    },
    {
      "name": "StrategyBase",
      "address": "0xe9FA8F904d97854C7389b68923262ADCC6C27827",
      "sinceTimestamp": 1723232207,
      "values": {
        "$immutable": true,
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "paused": 0,
        "pauserRegistry": "0x0000000000000000000000000000000000000000",
        "sharesToUnderlying": [],
        "sharesToUnderlyingView": [],
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": 0,
        "underlyingToken": "0x0000000000000000000000000000000000000000",
        "underlyingToShares": [],
        "underlyingToSharesView": []
      }
    },
    {
      "name": "EIGEN token",
      "address": "0xec53bF9167f50cDEB3Ae105f56099aaaB9061F83",
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0xB8915E195121f2B5D989Ec5727fd47a5259F1CEC",
          "via": []
        }
      ],
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1697499563,
      "values": {
        "$admin": "0xB8915E195121f2B5D989Ec5727fd47a5259F1CEC",
        "$implementation": "0x17f56E911C279bad67eDC08acbC9cf3DC4eF26A0",
        "$pastUpgrades": [
          [
            "2023-10-16T23:39:23.000Z",
            ["0xB0e9a10f09ED4304df238624d014205B0786572F"]
          ],
          [
            "2024-03-20T00:37:35.000Z",
            ["0xfe288960BEb8b189303f49B070CB0bA52e44cF32"]
          ],
          [
            "2024-04-04T16:39:23.000Z",
            ["0x7EC354C84680112d3cfF1544ec1Eb19ca583700b"]
          ],
          [
            "2024-09-28T18:27:23.000Z",
            ["0x17f56E911C279bad67eDC08acbC9cf3DC4eF26A0"]
          ]
        ],
        "$upgradeCount": 4,
        "bEIGEN": "0x83E9115d334D248Ce39a6f36144aEaB5b3456e75",
        "CLOCK_MODE": "mode=timestamp",
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xb02444d2dadc9e25bc38100c9cf14cc5e25f7e6f14581d071671d81340d3c978",
        "eip712Domain": {
          "fields": "0x0f",
          "name": "EIGEN",
          "version": "1",
          "chainId": 1,
          "verifyingContract": "0xec53bF9167f50cDEB3Ae105f56099aaaB9061F83",
          "salt": "0x0000000000000000000000000000000000000000000000000000000000000000",
          "extensions": []
        },
        "name": "Eigen",
        "owner": "0xbb00DDa2832850a43840A3A86515E3Fe226865F2",
        "symbol": "EIGEN",
        "totalSupply": "1683946032397180984615384624",
        "transferRestrictionsDisabledAfter": 0
      },
      "fieldMeta": {
        "transferRestrictionsDisabledAfter": {
          "severity": "HIGH",
          "description": "Timestamp after which transfer restrictions (whitelist) are disabled. Preset to uint256 max. Restrictions disabled if == 0."
        }
      },
      "derivedName": "Eigen"
    },
    {
      "name": "EigenLayerCommunityMultisig",
      "address": "0xFEA47018D632A77bA579846c840d5706705Dc598",
      "template": "GnosisSafe",
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1686680867,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x17919FAC7024d5b770322E5Cb81607D247654116",
          "0x34C37613e1680efD9e203C979658e1d058b4B2BC",
          "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
          "0x80cb2DA66A3ccb6064f16B15B6ae11d8E089C6D7",
          "0x313011Ee87b12700E29B0D1136Ae3d64665F3939",
          "0x97b4A6E0471A7c5906fF1Cc2a5970ed569B04815",
          "0x65C4799061c0D1e3E87ADdB65b02E92a558F842F",
          "0xe37756BEdDC89e94A8d557fd5b95a4D2a57e9D60",
          "0x8ffCF07A59631f0578f3E84B51C48cF0dEADCd95",
          "0xAF4D94Cd299211de542530399290877E2c85F061",
          "0xe8F09A9D42aEA0a3B393aD06F25CF512eA51707e",
          "0x6A662c5DdCe0b76BD081b8A4ec3A4F8a671b0b1f",
          "0x33E816008E7bc7798A73d0eaa640CC24f34d1626"
        ],
        "$threshold": 9,
        "domainSeparator": "0x80ea1f4244338ed9d96d172e60fd4459f4a8237651f29e743de9096eefa5c0fa",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "9 of 13 (69%)",
        "nonce": 4,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    }
  ],
  "eoas": [
    { "address": "0x0000000000000000000000000000000000000000" },
    { "address": "0x1084c2e1E33632c4cB0e7C4f15c64b19d7fB1256" },
    { "address": "0x17919FAC7024d5b770322E5Cb81607D247654116" },
    { "address": "0x27ff193A6A1574A611E21c39FDA636fA1d61ba30" },
    { "address": "0x2E158da11961426E2A1Cc9e79f40244486b6845C" },
    { "address": "0x30dd80F21aD9222Ce8f33b429fC0Fe25655Fe88a" },
    { "address": "0x313011Ee87b12700E29B0D1136Ae3d64665F3939" },
    { "address": "0x33E816008E7bc7798A73d0eaa640CC24f34d1626" },
    { "address": "0x34C37613e1680efD9e203C979658e1d058b4B2BC" },
    { "address": "0x34D64c402cA43C1c4B368e16130C64aC245718C6" },
    { "address": "0x3C20b05f44ef008A5b848761e58e5Ca9594163e9" },
    { "address": "0x422e2F724faFE75F3635458aD7D3Ac803DCD7ff1" },
    { "address": "0x4a3CD82B73821d075799680AcDff3e884B726777" },
    { "address": "0x57af860e3a1C16641CDDDa92898266D2df7Dfa71" },
    { "address": "0x5b73C5498c1E3b4dbA84de0F1833c4a029d90519" },
    { "address": "0x60bbde47423D62F6d7658bb3654869dfA397bF3D" },
    { "address": "0x65C4799061c0D1e3E87ADdB65b02E92a558F842F" },
    { "address": "0x6A662c5DdCe0b76BD081b8A4ec3A4F8a671b0b1f" },
    { "address": "0x726b2EF6a771f452Cb1b1ac3C3acF5A46b99c02B" },
    { "address": "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54" },
    { "address": "0x76d3A362313BAd49B6380B75aB7fC142a3EFf835" },
    { "address": "0x7cF4888613F744aB4f3bD688eF54E6B31F92A09B" },
    { "address": "0x80cb2DA66A3ccb6064f16B15B6ae11d8E089C6D7" },
    { "address": "0x82328b7Cd136296bac5c56079A64E58a44d790e2" },
    { "address": "0x8f94F55fD8c9E090296283137C303fE97d32A9e2" },
    { "address": "0x8ffCF07A59631f0578f3E84B51C48cF0dEADCd95" },
    { "address": "0x97b4A6E0471A7c5906fF1Cc2a5970ed569B04815" },
    { "address": "0x9C7E495F6220c2Eccf19Ce73a2d1d486D53296E4" },
    { "address": "0xa2425B00F9A9457AEdd51d4C36d9917eA1Aa7a02" },
    { "address": "0xA935b0d2a529abb7F048CB56dd8B876ed5d8bD99" },
    { "address": "0xAF4D94Cd299211de542530399290877E2c85F061" },
    { "address": "0xb7Ae34BB33da55f12797e793E01e63a17B11d108" },
    { "address": "0xb82C36F6C5a3CD345C0954d90c68e26528014aDD" },
    { "address": "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0" },
    { "address": "0xc13Ce61C12C0eF93b4165400491A719918Af1c6c" },
    { "address": "0xcC82E76106647C921Ed3a6Af869740cce98EC0C7" },
    { "address": "0xcf09EA5E7625E6E3F3345CACa1d288CcD1F39084" },
    { "address": "0xdC541e2B4adD96888b2C79006F49A9748A4f1bDF" },
    { "address": "0xe37756BEdDC89e94A8d557fd5b95a4D2a57e9D60" },
    { "address": "0xe7fFd467F7526abf9c8796EDeE0AD30110419127" },
    { "address": "0xe8F09A9D42aEA0a3B393aD06F25CF512eA51707e" },
    { "address": "0xEb94033d1331931cC0539C480Ca39Bf5f6916E89" },
    { "address": "0xEFca484E497a9de170Da32abfa11650957dD2a95" }
  ],
  "abis": {
    "0x00000000219ab540356cBB839Cbe05303d7705Fa": [
      "constructor()",
      "event DepositEvent(bytes pubkey, bytes withdrawal_credentials, bytes amount, bytes signature, bytes index)",
      "function deposit(bytes pubkey, bytes withdrawal_credentials, bytes signature, bytes32 deposit_data_root) payable",
      "function get_deposit_count() view returns (bytes)",
      "function get_deposit_root() view returns (bytes32)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)"
    ],
    "0x0c431C66F4dE941d089625E5B423D00707977060": [
      "constructor(address[] _pausers, address _unpauser)",
      "event PauserStatusChanged(address pauser, bool canPause)",
      "event UnpauserChanged(address previousUnpauser, address newUnpauser)",
      "function isPauser(address) view returns (bool)",
      "function setIsPauser(address newPauser, bool canPause)",
      "function setUnpauser(address newUnpauser)",
      "function unpauser() view returns (address)"
    ],
    "0x0ed6703C298d28aE0878d1b28e88cA87F9662fE9": [
      "constructor(address implementation_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)"
    ],
    "0x0ffC6AC10515EE0F83fEE71FCaf5Ea5805256563": [
      "constructor(tuple(address token, uint256 startTime, uint256 cooldownSeconds, address actionGenerator, bool doesExpire, uint256 expirationTimestamp) config, address initialOwner)",
      "event ButtonPressed(address indexed caller, uint256 newCooldownHorizon)",
      "event FundsRetrieved(uint256 amount)",
      "event HopperLoaded(tuple(address token, uint256 startTime, uint256 cooldownSeconds, address actionGenerator, bool doesExpire, uint256 expirationTimestamp) config)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function canPress() view returns (bool)",
      "function getHopperConfiguration() view returns (tuple(address token, uint256 startTime, uint256 cooldownSeconds, address actionGenerator, bool doesExpire, uint256 expirationTimestamp))",
      "function isExpired() view returns (bool)",
      "function latestPress() view returns (uint256)",
      "function owner() view returns (address)",
      "function pressButton()",
      "function renounceOwnership()",
      "function retrieveFunds()",
      "function transferOwnership(address newOwner)"
    ],
    "0x135DDa560e946695d6f155dACaFC6f1F25C1F5AF": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x1784BE6401339Fc0Fedf7E9379409f5c1BfE9dda": [
      "constructor(address _strategyManager, address _slasher, address _eigenPodManager)",
      "event Initialized(uint8 version)",
      "event MinWithdrawalDelayBlocksSet(uint256 previousValue, uint256 newValue)",
      "event OperatorDetailsModified(address indexed operator, tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) newOperatorDetails)",
      "event OperatorMetadataURIUpdated(address indexed operator, string metadataURI)",
      "event OperatorRegistered(address indexed operator, tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) operatorDetails)",
      "event OperatorSharesDecreased(address indexed operator, address staker, address strategy, uint256 shares)",
      "event OperatorSharesIncreased(address indexed operator, address staker, address strategy, uint256 shares)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event StakerDelegated(address indexed staker, address indexed operator)",
      "event StakerForceUndelegated(address indexed staker, address indexed operator)",
      "event StakerUndelegated(address indexed staker, address indexed operator)",
      "event StrategyWithdrawalDelayBlocksSet(address strategy, uint256 previousValue, uint256 newValue)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "event WithdrawalCompleted(bytes32 withdrawalRoot)",
      "event WithdrawalMigrated(bytes32 oldWithdrawalRoot, bytes32 newWithdrawalRoot)",
      "event WithdrawalQueued(bytes32 withdrawalRoot, tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares) withdrawal)",
      "function DELEGATION_APPROVAL_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function MAX_STAKER_OPT_OUT_WINDOW_BLOCKS() view returns (uint256)",
      "function MAX_WITHDRAWAL_DELAY_BLOCKS() view returns (uint256)",
      "function STAKER_DELEGATION_TYPEHASH() view returns (bytes32)",
      "function beaconChainETHStrategy() view returns (address)",
      "function calculateCurrentStakerDelegationDigestHash(address staker, address operator, uint256 expiry) view returns (bytes32)",
      "function calculateDelegationApprovalDigestHash(address staker, address operator, address _delegationApprover, bytes32 approverSalt, uint256 expiry) view returns (bytes32)",
      "function calculateStakerDelegationDigestHash(address staker, uint256 _stakerNonce, address operator, uint256 expiry) view returns (bytes32)",
      "function calculateWithdrawalRoot(tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares) withdrawal) pure returns (bytes32)",
      "function completeQueuedWithdrawal(tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares) withdrawal, address[] tokens, uint256 middlewareTimesIndex, bool receiveAsTokens)",
      "function completeQueuedWithdrawals(tuple(address staker, address delegatedTo, address withdrawer, uint256 nonce, uint32 startBlock, address[] strategies, uint256[] shares)[] withdrawals, address[][] tokens, uint256[] middlewareTimesIndexes, bool[] receiveAsTokens)",
      "function cumulativeWithdrawalsQueued(address) view returns (uint256)",
      "function decreaseDelegatedShares(address staker, address strategy, uint256 shares)",
      "function delegateTo(address operator, tuple(bytes signature, uint256 expiry) approverSignatureAndExpiry, bytes32 approverSalt)",
      "function delegateToBySignature(address staker, address operator, tuple(bytes signature, uint256 expiry) stakerSignatureAndExpiry, tuple(bytes signature, uint256 expiry) approverSignatureAndExpiry, bytes32 approverSalt)",
      "function delegatedTo(address) view returns (address)",
      "function delegationApprover(address operator) view returns (address)",
      "function delegationApproverSaltIsSpent(address, bytes32) view returns (bool)",
      "function domainSeparator() view returns (bytes32)",
      "function earningsReceiver(address operator) view returns (address)",
      "function eigenPodManager() view returns (address)",
      "function getDelegatableShares(address staker) view returns (address[], uint256[])",
      "function getOperatorShares(address operator, address[] strategies) view returns (uint256[])",
      "function getWithdrawalDelay(address[] strategies) view returns (uint256)",
      "function increaseDelegatedShares(address staker, address strategy, uint256 shares)",
      "function initialize(address initialOwner, address _pauserRegistry, uint256 initialPausedStatus, uint256 _minWithdrawalDelayBlocks, address[] _strategies, uint256[] _withdrawalDelayBlocks)",
      "function isDelegated(address staker) view returns (bool)",
      "function isOperator(address operator) view returns (bool)",
      "function migrateQueuedWithdrawals(tuple(address[] strategies, uint256[] shares, address staker, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress)[] withdrawalsToMigrate)",
      "function minWithdrawalDelayBlocks() view returns (uint256)",
      "function modifyOperatorDetails(tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) newOperatorDetails)",
      "function operatorDetails(address operator) view returns (tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks))",
      "function operatorShares(address, address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function pendingWithdrawals(bytes32) view returns (bool)",
      "function queueWithdrawals(tuple(address[] strategies, uint256[] shares, address withdrawer)[] queuedWithdrawalParams) returns (bytes32[])",
      "function registerAsOperator(tuple(address earningsReceiver, address delegationApprover, uint32 stakerOptOutWindowBlocks) registeringOperatorDetails, string metadataURI)",
      "function renounceOwnership()",
      "function setMinWithdrawalDelayBlocks(uint256 newMinWithdrawalDelayBlocks)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setStrategyWithdrawalDelayBlocks(address[] strategies, uint256[] withdrawalDelayBlocks)",
      "function slasher() view returns (address)",
      "function stakerNonce(address) view returns (uint256)",
      "function stakerOptOutWindowBlocks(address operator) view returns (uint256)",
      "function strategyManager() view returns (address)",
      "function strategyWithdrawalDelayBlocks(address) view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function undelegate(address staker) returns (bytes32[] withdrawalRoots)",
      "function unpause(uint256 newPausedStatus)",
      "function updateOperatorMetadataURI(string metadataURI)"
    ],
    "0x17f56E911C279bad67eDC08acbC9cf3DC4eF26A0": [
      "constructor(address _bEIGEN)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event Mint(address indexed minter, uint256 amount)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event SetAllowedFrom(address indexed from, bool isAllowedFrom)",
      "event SetAllowedTo(address indexed to, bool isAllowedTo)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event TransferRestrictionsDisabled()",
      "function CLOCK_MODE() pure returns (string)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function allowedFrom(address) view returns (bool)",
      "function allowedTo(address) view returns (bool)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function bEIGEN() view returns (address)",
      "function balanceOf(address account) view returns (uint256)",
      "function checkpoints(address account, uint32 pos) view returns (tuple(uint32 fromBlock, uint224 votes))",
      "function clock() view returns (uint48)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address account) view returns (address)",
      "function disableTransferRestrictions()",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
      "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
      "function getVotes(address account) view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address initialOwner, address[] minters, uint256[] mintingAllowances, uint256[] mintAllowedAfters)",
      "function mint()",
      "function mintAllowedAfter(address) view returns (uint256)",
      "function mintingAllowance(address) view returns (uint256)",
      "function multisend(address[] receivers, uint256[] amounts)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function numCheckpoints(address account) view returns (uint32)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceOwnership()",
      "function setAllowedFrom(address from, bool isAllowedFrom)",
      "function setAllowedTo(address to, bool isAllowedTo)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function transferRestrictionsDisabledAfter() view returns (uint256)",
      "function unwrap(uint256 amount)",
      "function wrap(uint256 amount)"
    ],
    "0x2520C6b2C1FBE1813AB5c7c1018CDa39529e9FF2": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0x369e6F597e22EaB55fFb173C6d9cD234BD699111": [
      "constructor(address _singleton)"
    ],
    "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x3e07cc2D34C8E0965f5BA45Ac1E960e535155c74": [
      "constructor(address _strategyManager)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event StrategyBeaconModified(address previousBeacon, address newBeacon)",
      "event StrategySetForToken(address token, address strategy)",
      "event TokenBlacklisted(address token)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function blacklistTokens(address[] tokens)",
      "function deployNewStrategy(address token) returns (address newStrategy)",
      "function deployedStrategies(address) view returns (address)",
      "function initialize(address _initialOwner, address _pauserRegistry, uint256 _initialPausedStatus, address _strategyBeacon)",
      "function isBlacklisted(address) view returns (bool)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function removeStrategiesFromWhitelist(address[] strategiesToRemoveFromWhitelist)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setThirdPartyTransfersForbidden(address strategy, bool value)",
      "function strategyBeacon() view returns (address)",
      "function strategyManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function whitelistStrategies(address[] strategiesToWhitelist, bool[] thirdPartyTransfersForbiddenValues)"
    ],
    "0x3f5Ab2D4418d38568705bFd6672630fCC3435CC9": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x5050389572f2d220ad927CcbeA0D406831012390": [
      "constructor(address _singleton)"
    ],
    "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073": [
      "constructor(address implementation_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)"
    ],
    "0x5e4C39Ad7A3E881585e383dB9827EB4811f6F647": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x6D225e974Fa404D25Ffb84eD6E242Ffa18eF6430": [
      "constructor(address _ethPOS, address _eigenPodManager, uint64 _GENESIS_TIME)",
      "event CheckpointCreated(uint64 indexed checkpointTimestamp, bytes32 indexed beaconBlockRoot, uint256 validatorCount)",
      "event CheckpointFinalized(uint64 indexed checkpointTimestamp, int256 totalShareDeltaWei)",
      "event EigenPodStaked(bytes pubkey)",
      "event Initialized(uint8 version)",
      "event NonBeaconChainETHReceived(uint256 amountReceived)",
      "event ProofSubmitterUpdated(address prevProofSubmitter, address newProofSubmitter)",
      "event RestakedBeaconChainETHWithdrawn(address indexed recipient, uint256 amount)",
      "event ValidatorBalanceUpdated(uint40 validatorIndex, uint64 balanceTimestamp, uint64 newValidatorBalanceGwei)",
      "event ValidatorCheckpointed(uint64 indexed checkpointTimestamp, uint40 indexed validatorIndex)",
      "event ValidatorRestaked(uint40 validatorIndex)",
      "event ValidatorWithdrawn(uint64 indexed checkpointTimestamp, uint40 indexed validatorIndex)",
      "function GENESIS_TIME() view returns (uint64)",
      "function activeValidatorCount() view returns (uint256)",
      "function checkpointBalanceExitedGwei(uint64) view returns (uint64)",
      "function currentCheckpoint() view returns (tuple(bytes32 beaconBlockRoot, uint24 proofsRemaining, uint64 podBalanceGwei, int128 balanceDeltasGwei))",
      "function currentCheckpointTimestamp() view returns (uint64)",
      "function eigenPodManager() view returns (address)",
      "function ethPOS() view returns (address)",
      "function getParentBlockRoot(uint64 timestamp) view returns (bytes32)",
      "function initialize(address _podOwner)",
      "function lastCheckpointTimestamp() view returns (uint64)",
      "function podOwner() view returns (address)",
      "function proofSubmitter() view returns (address)",
      "function recoverTokens(address[] tokenList, uint256[] amountsToWithdraw, address recipient)",
      "function setProofSubmitter(address newProofSubmitter)",
      "function stake(bytes pubkey, bytes signature, bytes32 depositDataRoot) payable",
      "function startCheckpoint(bool revertIfNoBalance)",
      "function validatorPubkeyHashToInfo(bytes32 validatorPubkeyHash) view returns (tuple(uint64 validatorIndex, uint64 restakedBalanceGwei, uint64 lastCheckpointedAt, uint8 status))",
      "function validatorPubkeyToInfo(bytes validatorPubkey) view returns (tuple(uint64 validatorIndex, uint64 restakedBalanceGwei, uint64 lastCheckpointedAt, uint8 status))",
      "function validatorStatus(bytes validatorPubkey) view returns (uint8)",
      "function validatorStatus(bytes32 pubkeyHash) view returns (uint8)",
      "function verifyCheckpointProofs(tuple(bytes32 balanceContainerRoot, bytes proof) balanceContainerProof, tuple(bytes32 pubkeyHash, bytes32 balanceRoot, bytes proof)[] proofs)",
      "function verifyStaleBalance(uint64 beaconTimestamp, tuple(bytes32 beaconStateRoot, bytes proof) stateRootProof, tuple(bytes32[] validatorFields, bytes proof) proof)",
      "function verifyWithdrawalCredentials(uint64 beaconTimestamp, tuple(bytes32 beaconStateRoot, bytes proof) stateRootProof, uint40[] validatorIndices, bytes[] validatorFieldsProofs, bytes32[][] validatorFields)",
      "function withdrawRestakedBeaconChainETH(address recipient, uint256 amountWei)",
      "function withdrawableRestakedExecutionLayerGwei() view returns (uint64)"
    ],
    "0x70f44C13944d49a236E3cD7a94f48f5daB6C619b": [
      "constructor(address _delegation, address _eigenPodManager, address _slasher)",
      "event Deposit(address staker, address token, address strategy, uint256 shares)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event StrategyAddedToDepositWhitelist(address strategy)",
      "event StrategyRemovedFromDepositWhitelist(address strategy)",
      "event StrategyWhitelisterChanged(address previousAddress, address newAddress)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "event UpdatedThirdPartyTransfersForbidden(address strategy, bool value)",
      "function DEPOSIT_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function addShares(address staker, address token, address strategy, uint256 shares)",
      "function addStrategiesToDepositWhitelist(address[] strategiesToWhitelist, bool[] thirdPartyTransfersForbiddenValues)",
      "function calculateWithdrawalRoot(tuple(address[] strategies, uint256[] shares, address staker, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress) queuedWithdrawal) pure returns (bytes32)",
      "function delegation() view returns (address)",
      "function depositIntoStrategy(address strategy, address token, uint256 amount) returns (uint256 shares)",
      "function depositIntoStrategyWithSignature(address strategy, address token, uint256 amount, address staker, uint256 expiry, bytes signature) returns (uint256 shares)",
      "function domainSeparator() view returns (bytes32)",
      "function eigenPodManager() view returns (address)",
      "function getDeposits(address staker) view returns (address[], uint256[])",
      "function initialize(address initialOwner, address initialStrategyWhitelister, address _pauserRegistry, uint256 initialPausedStatus)",
      "function migrateQueuedWithdrawal(tuple(address[] strategies, uint256[] shares, address staker, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress) queuedWithdrawal) returns (bool, bytes32)",
      "function nonces(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function removeShares(address staker, address strategy, uint256 shares)",
      "function removeStrategiesFromDepositWhitelist(address[] strategiesToRemoveFromWhitelist)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setStrategyWhitelister(address newStrategyWhitelister)",
      "function setThirdPartyTransfersForbidden(address strategy, bool value)",
      "function slasher() view returns (address)",
      "function stakerStrategyList(address, uint256) view returns (address)",
      "function stakerStrategyListLength(address staker) view returns (uint256)",
      "function stakerStrategyShares(address, address) view returns (uint256)",
      "function strategyIsWhitelistedForDeposit(address) view returns (bool)",
      "function strategyWhitelister() view returns (address)",
      "function thirdPartyTransfersForbidden(address) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function withdrawSharesAsTokens(address recipient, address strategy, uint256 shares, address token)",
      "function withdrawalRootPending(bytes32) view returns (bool)"
    ],
    "0x731A0aD160e407393Ff662231Add6Dd145AD3FEa": [
      "constructor(address _ethPOS, address _eigenPodBeacon, address _strategyManager, address _slasher, address _delegationManager)",
      "event BeaconChainETHDeposited(address indexed podOwner, uint256 amount)",
      "event BeaconChainETHWithdrawalCompleted(address indexed podOwner, uint256 shares, uint96 nonce, address delegatedAddress, address withdrawer, bytes32 withdrawalRoot)",
      "event Initialized(uint8 version)",
      "event NewTotalShares(address indexed podOwner, int256 newTotalShares)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event PodDeployed(address indexed eigenPod, address indexed podOwner)",
      "event PodSharesUpdated(address indexed podOwner, int256 sharesDelta)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function addShares(address podOwner, uint256 shares) returns (uint256)",
      "function beaconChainETHStrategy() view returns (address)",
      "function createPod() returns (address)",
      "function delegationManager() view returns (address)",
      "function eigenPodBeacon() view returns (address)",
      "function ethPOS() view returns (address)",
      "function getPod(address podOwner) view returns (address)",
      "function hasPod(address podOwner) view returns (bool)",
      "function initialize(address initialOwner, address _pauserRegistry, uint256 _initPausedStatus)",
      "function numPods() view returns (uint256)",
      "function owner() view returns (address)",
      "function ownerToPod(address) view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function podOwnerShares(address) view returns (int256)",
      "function recordBeaconChainETHBalanceUpdate(address podOwner, int256 sharesDelta)",
      "function removeShares(address podOwner, uint256 shares)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function slasher() view returns (address)",
      "function stake(bytes pubkey, bytes signature, bytes32 depositDataRoot) payable",
      "function strategyManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function withdrawSharesAsTokens(address podOwner, address destination, uint256 shares)"
    ],
    "0x7750d328b314EfFa365A0402CcfD489B80B0adda": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x83E9115d334D248Ce39a6f36144aEaB5b3456e75": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x858646372CC42E1A627fcE94aa7A7033e7CF075A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x99E6a294349072F9873081Cde9AC9eeb7Fd1F9dE": [
      "constructor(address _rewardsCoordinator, uint32 _firstSubmissionStartTimestamp, uint256 _firstSubmissionTriggerCutoff, uint256[2] _amounts, tuple(address strategy, uint96 multiplier)[][2] _strategiesAndMultipliers, address _bEIGEN, address _EIGEN)",
      "function CALCULATION_INTERVAL_SECONDS() view returns (uint32)",
      "function EIGEN() view returns (address)",
      "function amounts(uint256) view returns (uint256)",
      "function bEIGEN() view returns (address)",
      "function firstSubmissionStartTimestamp() view returns (uint32)",
      "function firstSubmissionTriggerCutoff() view returns (uint256)",
      "function generateHopperActions(address hopper, address) view returns (tuple(address target, bytes callData)[])",
      "function rewardsCoordinator() view returns (address)",
      "function strategiesAndMultipliers(uint256, uint256) view returns (address strategy, uint96 multiplier)"
    ],
    "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF": [
      "constructor(address admin_, uint256 delay_)",
      "event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event NewAdmin(address indexed newAdmin)",
      "event NewDelay(uint256 indexed newDelay)",
      "event NewPendingAdmin(address indexed newPendingAdmin)",
      "event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function acceptAdmin()",
      "function admin() view returns (address)",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta)",
      "function delay() view returns (uint256)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable returns (bytes)",
      "function pendingAdmin() view returns (address)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) returns (bytes32)",
      "function queuedTransactions(bytes32) view returns (bool)",
      "function setDelay(uint256 delay_)",
      "function setPendingAdmin(address pendingAdmin_)"
    ],
    "0xb6738A8E7793D44c5895B6A6F2a62F6bF86Ba8d2": [
      "constructor(address _delegationManager, address _strategyManager, uint32 _CALCULATION_INTERVAL_SECONDS, uint32 _MAX_REWARDS_DURATION, uint32 _MAX_RETROACTIVE_LENGTH, uint32 _MAX_FUTURE_LENGTH, uint32 __GENESIS_REWARDS_TIMESTAMP)",
      "event AVSRewardsSubmissionCreated(address indexed avs, uint256 indexed submissionNonce, bytes32 indexed rewardsSubmissionHash, tuple(tuple(address strategy, uint96 multiplier)[] strategiesAndMultipliers, address token, uint256 amount, uint32 startTimestamp, uint32 duration) rewardsSubmission)",
      "event ActivationDelaySet(uint32 oldActivationDelay, uint32 newActivationDelay)",
      "event ClaimerForSet(address indexed earner, address indexed oldClaimer, address indexed claimer)",
      "event DistributionRootDisabled(uint32 indexed rootIndex)",
      "event DistributionRootSubmitted(uint32 indexed rootIndex, bytes32 indexed root, uint32 indexed rewardsCalculationEndTimestamp, uint32 activatedAt)",
      "event GlobalCommissionBipsSet(uint16 oldGlobalCommissionBips, uint16 newGlobalCommissionBips)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event RewardsClaimed(bytes32 root, address indexed earner, address indexed claimer, address indexed recipient, address token, uint256 claimedAmount)",
      "event RewardsForAllSubmitterSet(address indexed rewardsForAllSubmitter, bool indexed oldValue, bool indexed newValue)",
      "event RewardsSubmissionForAllCreated(address indexed submitter, uint256 indexed submissionNonce, bytes32 indexed rewardsSubmissionHash, tuple(tuple(address strategy, uint96 multiplier)[] strategiesAndMultipliers, address token, uint256 amount, uint32 startTimestamp, uint32 duration) rewardsSubmission)",
      "event RewardsSubmissionForAllEarnersCreated(address indexed tokenHopper, uint256 indexed submissionNonce, bytes32 indexed rewardsSubmissionHash, tuple(tuple(address strategy, uint96 multiplier)[] strategiesAndMultipliers, address token, uint256 amount, uint32 startTimestamp, uint32 duration) rewardsSubmission)",
      "event RewardsUpdaterSet(address indexed oldRewardsUpdater, address indexed newRewardsUpdater)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function CALCULATION_INTERVAL_SECONDS() view returns (uint32)",
      "function GENESIS_REWARDS_TIMESTAMP() view returns (uint32)",
      "function MAX_FUTURE_LENGTH() view returns (uint32)",
      "function MAX_RETROACTIVE_LENGTH() view returns (uint32)",
      "function MAX_REWARDS_DURATION() view returns (uint32)",
      "function activationDelay() view returns (uint32)",
      "function beaconChainETHStrategy() view returns (address)",
      "function calculateEarnerLeafHash(tuple(address earner, bytes32 earnerTokenRoot) leaf) pure returns (bytes32)",
      "function calculateTokenLeafHash(tuple(address token, uint256 cumulativeEarnings) leaf) pure returns (bytes32)",
      "function checkClaim(tuple(uint32 rootIndex, uint32 earnerIndex, bytes earnerTreeProof, tuple(address earner, bytes32 earnerTokenRoot) earnerLeaf, uint32[] tokenIndices, bytes[] tokenTreeProofs, tuple(address token, uint256 cumulativeEarnings)[] tokenLeaves) claim) view returns (bool)",
      "function claimerFor(address) view returns (address)",
      "function createAVSRewardsSubmission(tuple(tuple(address strategy, uint96 multiplier)[] strategiesAndMultipliers, address token, uint256 amount, uint32 startTimestamp, uint32 duration)[] rewardsSubmissions)",
      "function createRewardsForAllEarners(tuple(tuple(address strategy, uint96 multiplier)[] strategiesAndMultipliers, address token, uint256 amount, uint32 startTimestamp, uint32 duration)[] rewardsSubmissions)",
      "function createRewardsForAllSubmission(tuple(tuple(address strategy, uint96 multiplier)[] strategiesAndMultipliers, address token, uint256 amount, uint32 startTimestamp, uint32 duration)[] rewardsSubmissions)",
      "function cumulativeClaimed(address, address) view returns (uint256)",
      "function currRewardsCalculationEndTimestamp() view returns (uint32)",
      "function delegationManager() view returns (address)",
      "function disableRoot(uint32 rootIndex)",
      "function domainSeparator() view returns (bytes32)",
      "function getCurrentClaimableDistributionRoot() view returns (tuple(bytes32 root, uint32 rewardsCalculationEndTimestamp, uint32 activatedAt, bool disabled))",
      "function getCurrentDistributionRoot() view returns (tuple(bytes32 root, uint32 rewardsCalculationEndTimestamp, uint32 activatedAt, bool disabled))",
      "function getDistributionRootAtIndex(uint256 index) view returns (tuple(bytes32 root, uint32 rewardsCalculationEndTimestamp, uint32 activatedAt, bool disabled))",
      "function getDistributionRootsLength() view returns (uint256)",
      "function getRootIndexFromHash(bytes32 rootHash) view returns (uint32)",
      "function globalOperatorCommissionBips() view returns (uint16)",
      "function initialize(address initialOwner, address _pauserRegistry, uint256 initialPausedStatus, address _rewardsUpdater, uint32 _activationDelay, uint16 _globalCommissionBips)",
      "function isAVSRewardsSubmissionHash(address, bytes32) view returns (bool)",
      "function isRewardsForAllSubmitter(address) view returns (bool)",
      "function isRewardsSubmissionForAllEarnersHash(address, bytes32) view returns (bool)",
      "function isRewardsSubmissionForAllHash(address, bytes32) view returns (bool)",
      "function operatorCommissionBips(address operator, address avs) view returns (uint16)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function processClaim(tuple(uint32 rootIndex, uint32 earnerIndex, bytes earnerTreeProof, tuple(address earner, bytes32 earnerTokenRoot) earnerLeaf, uint32[] tokenIndices, bytes[] tokenTreeProofs, tuple(address token, uint256 cumulativeEarnings)[] tokenLeaves) claim, address recipient)",
      "function renounceOwnership()",
      "function rewardsUpdater() view returns (address)",
      "function setActivationDelay(uint32 _activationDelay)",
      "function setClaimerFor(address claimer)",
      "function setGlobalOperatorCommission(uint16 _globalCommissionBips)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setRewardsForAllSubmitter(address _submitter, bool _newValue)",
      "function setRewardsUpdater(address _rewardsUpdater)",
      "function strategyManager() view returns (address)",
      "function submissionNonce(address) view returns (uint256)",
      "function submitRoot(bytes32 root, uint32 rewardsCalculationEndTimestamp)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)"
    ],
    "0xB8915E195121f2B5D989Ec5727fd47a5259F1CEC": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xbb00DDa2832850a43840A3A86515E3Fe226865F2": [
      "constructor(address _singleton)"
    ],
    "0xBE1685C81aA44FF9FB319dD389addd9374383e90": [
      "constructor(address _singleton)"
    ],
    "0xd6EC41E453C5E7dA5494f4d51A053Ab571712E6f": [
      "constructor(uint256 minDelay, address[] proposers, address[] executors, address admin)",
      "event CallExecuted(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data)",
      "event CallSalt(bytes32 indexed id, bytes32 salt)",
      "event CallScheduled(bytes32 indexed id, uint256 indexed index, address target, uint256 value, bytes data, bytes32 predecessor, uint256 delay)",
      "event Cancelled(bytes32 indexed id)",
      "event MinDelayChange(uint256 oldDuration, uint256 newDuration)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "function CANCELLER_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function PROPOSER_ROLE() view returns (bytes32)",
      "function TIMELOCK_ADMIN_ROLE() view returns (bytes32)",
      "function cancel(bytes32 id)",
      "function execute(address target, uint256 value, bytes payload, bytes32 predecessor, bytes32 salt) payable",
      "function executeBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) payable",
      "function getMinDelay() view returns (uint256)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function getTimestamp(bytes32 id) view returns (uint256)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function hashOperation(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function hashOperationBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt) pure returns (bytes32)",
      "function isOperation(bytes32 id) view returns (bool)",
      "function isOperationDone(bytes32 id) view returns (bool)",
      "function isOperationPending(bytes32 id) view returns (bool)",
      "function isOperationReady(bytes32 id) view returns (bool)",
      "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
      "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function schedule(address target, uint256 value, bytes data, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function scheduleBatch(address[] targets, uint256[] values, bytes[] payloads, bytes32 predecessor, bytes32 salt, uint256 delay)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateDelay(uint256 newDelay)"
    ],
    "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdAbdB3Cd346B7D5F5779b0B614EdE1CC9DcBA5b7": [
      "constructor(address _delegation)",
      "event AVSMetadataURIUpdated(address indexed avs, string metadataURI)",
      "event Initialized(uint8 version)",
      "event OperatorAVSRegistrationStatusUpdated(address indexed operator, address indexed avs, uint8 status)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function OPERATOR_AVS_REGISTRATION_TYPEHASH() view returns (bytes32)",
      "function avsOperatorStatus(address, address) view returns (uint8)",
      "function calculateOperatorAVSRegistrationDigestHash(address operator, address avs, bytes32 salt, uint256 expiry) view returns (bytes32)",
      "function cancelSalt(bytes32 salt)",
      "function delegation() view returns (address)",
      "function deregisterOperatorFromAVS(address operator)",
      "function domainSeparator() view returns (bytes32)",
      "function initialize(address initialOwner, address _pauserRegistry, uint256 initialPausedStatus)",
      "function operatorSaltIsSpent(address, bytes32) view returns (bool)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function registerOperatorToAVS(address operator, tuple(bytes signature, bytes32 salt, uint256 expiry) operatorSignature)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function updateAVSMetadataURI(string metadataURI)"
    ],
    "0xe9FA8F904d97854C7389b68923262ADCC6C27827": [
      "constructor(address _strategyManager)",
      "event ExchangeRateEmitted(uint256 rate)",
      "event Initialized(uint8 version)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event StrategyTokenSet(address token, uint8 decimals)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function deposit(address token, uint256 amount) returns (uint256 newShares)",
      "function explanation() pure returns (string)",
      "function initialize(address _underlyingToken, address _pauserRegistry)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function shares(address user) view returns (uint256)",
      "function sharesToUnderlying(uint256 amountShares) view returns (uint256)",
      "function sharesToUnderlyingView(uint256 amountShares) view returns (uint256)",
      "function strategyManager() view returns (address)",
      "function totalShares() view returns (uint256)",
      "function underlyingToShares(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToSharesView(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToken() view returns (address)",
      "function unpause(uint256 newPausedStatus)",
      "function userUnderlying(address user) returns (uint256)",
      "function userUnderlyingView(address user) view returns (uint256)",
      "function withdraw(address recipient, address token, uint256 amountShares)"
    ],
    "0xec53bF9167f50cDEB3Ae105f56099aaaB9061F83": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xF2b225815F70c9b327DC9db758A36c92A4279b17": [
      "constructor(address _EIGEN)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Backed()",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event EIP712DomainChanged()",
      "event Initialized(uint8 version)",
      "event IsMinterModified(address indexed minterAddress, bool newStatus)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event SetAllowedFrom(address indexed from, bool isAllowedFrom)",
      "event SetAllowedTo(address indexed to, bool isAllowedTo)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event TransferRestrictionsDisabled()",
      "function CLOCK_MODE() pure returns (string)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function EIGEN() view returns (address)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function allowedFrom(address) view returns (bool)",
      "function allowedTo(address) view returns (bool)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function checkpoints(address account, uint32 pos) view returns (tuple(uint32 fromBlock, uint224 votes))",
      "function clock() view returns (uint48)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address account) view returns (address)",
      "function disableTransferRestrictions()",
      "function eip712Domain() view returns (bytes1 fields, string name, string version, uint256 chainId, address verifyingContract, bytes32 salt, uint256[] extensions)",
      "function getPastTotalSupply(uint256 timepoint) view returns (uint256)",
      "function getPastVotes(address account, uint256 timepoint) view returns (uint256)",
      "function getVotes(address account) view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address initialOwner)",
      "function isMinter(address) view returns (bool)",
      "function mint(address to, uint256 amount)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function numCheckpoints(address account) view returns (uint32)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceOwnership()",
      "function setAllowedFrom(address from, bool isAllowedFrom)",
      "function setAllowedTo(address to, bool isAllowedTo)",
      "function setIsMinter(address minterAddress, bool newStatus)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function transferRestrictionsDisabledAfter() view returns (uint256)"
    ],
    "0xF3234220163a757edf1E11a8a085638D9B236614": [
      "constructor(address, address)",
      "event FrozenStatusReset(address indexed previouslySlashedAddress)",
      "event Initialized(uint8 version)",
      "event MiddlewareTimesAdded(address operator, uint256 index, uint32 stalestUpdateBlock, uint32 latestServeUntilBlock)",
      "event OperatorFrozen(address indexed slashedOperator, address indexed slashingContract)",
      "event OptedIntoSlashing(address indexed operator, address indexed contractAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event SlashingAbilityRevoked(address indexed operator, address indexed contractAddress, uint32 contractCanSlashOperatorUntilBlock)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function canSlash(address, address) view returns (bool)",
      "function canWithdraw(address, uint32, uint256) returns (bool)",
      "function contractCanSlashOperatorUntilBlock(address, address) view returns (uint32)",
      "function delegation() view returns (address)",
      "function freezeOperator(address)",
      "function getCorrectValueForInsertAfter(address, uint32) view returns (uint256)",
      "function getMiddlewareTimesIndexServeUntilBlock(address, uint32) view returns (uint32)",
      "function getMiddlewareTimesIndexStalestUpdateBlock(address, uint32) view returns (uint32)",
      "function initialize(address, address, uint256)",
      "function isFrozen(address) view returns (bool)",
      "function latestUpdateBlock(address, address) view returns (uint32)",
      "function middlewareTimesLength(address) view returns (uint256)",
      "function operatorToMiddlewareTimes(address, uint256) view returns (tuple(uint32 stalestUpdateBlock, uint32 latestServeUntilBlock))",
      "function operatorWhitelistedContractsLinkedListEntry(address, address) view returns (bool, uint256, uint256)",
      "function operatorWhitelistedContractsLinkedListSize(address) view returns (uint256)",
      "function optIntoSlashing(address)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function recordFirstStakeUpdate(address, uint32)",
      "function recordLastStakeUpdateAndRevokeSlashingAbility(address, uint32)",
      "function recordStakeUpdate(address, uint32, uint32, uint256)",
      "function renounceOwnership()",
      "function resetFrozenStatus(address[])",
      "function setPauserRegistry(address newPauserRegistry)",
      "function strategyManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function whitelistedContractDetails(address, address) view returns (tuple(uint32 registrationMayBeginAtBlock, uint32 contractCanSlashOperatorUntilBlock, uint32 latestUpdateBlock))"
    ],
    "0xFEA47018D632A77bA579846c840d5706705Dc598": [
      "constructor(address _singleton)"
    ]
  },
  "usedTemplates": {
    "GnosisSafe": "0x55dd1039f19d840b39ef504eac8a631b912d707343588aed9ac96bd4e874f837"
  },
  "shapeFilesHash": "0xe0f207ecc129c923626e6f93ed1bbc718cc7b8b510ffc1d6b69d0e1d62e7f70f"
}
