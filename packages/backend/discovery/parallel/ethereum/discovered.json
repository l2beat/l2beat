{
  "name": "parallel",
  "chain": "ethereum",
  "blockNumber": 18962479,
  "configHash": "0x2b4f3c389aa29b8108f41d6c144a193cf3a3f5d01ed5795026b7493c5fa37c5c",
  "version": 3,
  "contracts": [
    {
      "name": "OneStepProofEntry",
      "address": "0x09824fe72BFF474d16D9c2774432E381BBD60662",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701972923,
      "values": {
        "prover0": "0xDf94F0474F205D086dbc2e66D69a856FCf520622",
        "proverHostIo": "0x99a2A31300816C1FA3f40818AC9280fe7271F878",
        "proverMath": "0x89AF7C4C2198c426cFe6E86de0680A0850503e06",
        "proverMem": "0x4811500e0d376Fa8d2EA3CCb7c61E0afB4F5A7f1"
      }
    },
    {
      "name": "Inbox",
      "address": "0x12485B9d469c1D51d05b5C39e009D50eF0170cF7",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1162084C3C6575121146582Db5BE43189e8CEe6b",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0x1162084C3C6575121146582Db5BE43189e8CEe6b"],
      "sinceTimestamp": 1704125939,
      "values": {
        "allowListEnabled": false,
        "bridge": "0x5a961c7D162195a9Dc5a357Cc168b0694283382E",
        "getProxyAdmin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d",
        "maxDataSize": 117964,
        "paused": false,
        "sequencerInbox": "0xb4795A0edae98d7820C37F06f6b858e7acb51DF8"
      }
    },
    {
      "name": "L1WETHGateway",
      "address": "0x150286BdbE7C8Cd23D41a8e1e64438e0dc04dc3d",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xa86996bED19547f7dEf22a087dD61b5F9Fb6C684",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0xa86996bED19547f7dEf22a087dD61b5F9Fb6C684"],
      "sinceTimestamp": 1704126935,
      "values": {
        "counterpartGateway": "0x2bc118eC75c4154DC164Ee663E09F5F83232b1DC",
        "inbox": "0x12485B9d469c1D51d05b5C39e009D50eF0170cF7",
        "l2Weth": "0xe3bb30f7742eC97Be5D60789A2b1273e462C0287",
        "router": "0x5D657b905275F36AD62C3d5C36966975613aFB96"
      },
      "derivedName": "L1WethGateway"
    },
    {
      "name": "",
      "address": "0x27C7Bfd2cC11429e9b80c443b42FDBe4754F6c91",
      "unverified": true,
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701973211
    },
    {
      "name": "ChallengeManager",
      "address": "0x28c32059d7e6147cf5257DFC127f7258beA1cdf4",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xEe9E5546A11Cb5b4A86e92DA05f2ef75C26E4754",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0xEe9E5546A11Cb5b4A86e92DA05f2ef75C26E4754"],
      "sinceTimestamp": 1704125939,
      "values": {
        "bridge": "0x5a961c7D162195a9Dc5a357Cc168b0694283382E",
        "osp": "0x09824fe72BFF474d16D9c2774432E381BBD60662",
        "resultReceiver": "0x6594085ca55a2B3a5fAD1C57A270D060eEa99877",
        "sequencerInbox": "0xb4795A0edae98d7820C37F06f6b858e7acb51DF8",
        "totalChallengesCreated": 0
      },
      "derivedName": "ChallengeManager"
    },
    {
      "name": "ValidatorUtils",
      "address": "0x2b0E04Dc90e3fA58165CB41E2834B44A56E766aF",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701973151
    },
    {
      "name": "RollupEventInbox",
      "address": "0x36E5DE57f862cf5bA28624845faB8c2fF6Aa41d2",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x13BE515E44Eefaf3eBEFAD684F1FBB574Ac0A494",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0x13BE515E44Eefaf3eBEFAD684F1FBB574Ac0A494"],
      "sinceTimestamp": 1704125939,
      "values": {
        "bridge": "0x5a961c7D162195a9Dc5a357Cc168b0694283382E",
        "rollup": "0x6594085ca55a2B3a5fAD1C57A270D060eEa99877"
      }
    },
    {
      "name": "",
      "address": "0x4811500e0d376Fa8d2EA3CCb7c61E0afB4F5A7f1",
      "unverified": true,
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701972755
    },
    {
      "name": "GnosisSafe",
      "address": "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1680797639,
      "values": {
        "domainSeparator": "0x0f634ad56005ddbd68dc52233931a858f740b8ab706671c42b055efef561257e",
        "getChainId": 1,
        "getOwners": [
          "0xa4000bDD2bB92ce6750b31F1eeda47Bd1cB8e6e4",
          "0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f",
          "0xa0C600a6e85bf225958FFAcC70B5FDDF9A059038",
          "0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C",
          "0x4D8007a0E9f293e62E2b0F43C6Cf4C4B9e135BAe"
        ],
        "getThreshold": 3,
        "nonce": 9,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "Bridge",
      "address": "0x5a961c7D162195a9Dc5a357Cc168b0694283382E",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1c6ACCd9d66f3B993928E7439c9A2d67b94a445F",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0x1c6ACCd9d66f3B993928E7439c9A2d67b94a445F"],
      "sinceTimestamp": 1704125939,
      "values": {
        "activeOutbox": "0x0000000000000000000000000000000000000000",
        "allowedDelayedInboxList": [
          "0x12485B9d469c1D51d05b5C39e009D50eF0170cF7",
          "0x36E5DE57f862cf5bA28624845faB8c2fF6Aa41d2"
        ],
        "allowedOutboxList": ["0xB6e0586616ebE79b2F86dDB32048c500D23b3AC3"],
        "delayedMessageCount": 273,
        "rollup": "0x6594085ca55a2B3a5fAD1C57A270D060eEa99877",
        "sequencerInbox": "0xb4795A0edae98d7820C37F06f6b858e7acb51DF8",
        "sequencerMessageCount": 38,
        "sequencerReportedSubMessageCount": 281
      },
      "derivedName": "Bridge"
    },
    {
      "name": "L1GatewayRouter",
      "address": "0x5D657b905275F36AD62C3d5C36966975613aFB96",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x6525137BfF366fbc0A89E3e5A4d244B5A0090a6D",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0x6525137BfF366fbc0A89E3e5A4d244B5A0090a6D"],
      "sinceTimestamp": 1704126935,
      "values": {
        "counterpartGateway": "0xb0A6d4ddE9f8B8f0763b34834589BF38607c7778",
        "defaultGateway": "0x6Eb9240d4add111D5Fc81b10Ff12eECabcf9752d",
        "inbox": "0x12485B9d469c1D51d05b5C39e009D50eF0170cF7",
        "owner": "0xD368b8dC5cB6fA26A53b7588db9A87E509A72d89",
        "router": "0x0000000000000000000000000000000000000000",
        "whitelist": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "RollupProxy",
      "address": "0x6594085ca55a2B3a5fAD1C57A270D060eEa99877",
      "upgradeability": {
        "type": "Arbitrum proxy",
        "admin": "0xD368b8dC5cB6fA26A53b7588db9A87E509A72d89",
        "adminImplementation": "0x0aE4dD666748bF0F6dB5c149Eab1D8aD27820A6A",
        "userImplementation": "0x660ea1675F7323dC3Ba0c8dDFB593225Eb01E3C1"
      },
      "implementations": [
        "0x0aE4dD666748bF0F6dB5c149Eab1D8aD27820A6A",
        "0x660ea1675F7323dC3Ba0c8dDFB593225Eb01E3C1"
      ],
      "sinceTimestamp": 1704125939,
      "values": {
        "baseStake": "100000000000000000",
        "bridge": "0x5a961c7D162195a9Dc5a357Cc168b0694283382E",
        "chainId": 1024,
        "challengeManager": "0x28c32059d7e6147cf5257DFC127f7258beA1cdf4",
        "challenges": [],
        "confirmPeriodBlocks": 43200,
        "currentRequiredStake": "100000000000000000",
        "extraChallengeTimeBlocks": 40320,
        "firstUnresolvedNode": 2,
        "inbox": "0x12485B9d469c1D51d05b5C39e009D50eF0170cF7",
        "isERC20Enabled": false,
        "lastStakeBlock": 18914041,
        "latestConfirmed": 1,
        "latestNodeCreated": 37,
        "loserStakeEscrow": "0x0000000000000000000000000000000000000000",
        "minimumAssertionPeriod": 75,
        "outbox": "0xB6e0586616ebE79b2F86dDB32048c500D23b3AC3",
        "owner": "0xD368b8dC5cB6fA26A53b7588db9A87E509A72d89",
        "paused": false,
        "rollupDeploymentBlock": 18913722,
        "rollupEventInbox": "0x36E5DE57f862cf5bA28624845faB8c2fF6Aa41d2",
        "sequencerInbox": "0xb4795A0edae98d7820C37F06f6b858e7acb51DF8",
        "setValidatorCount": 1,
        "stakerCount": 1,
        "stakeToken": "0x0000000000000000000000000000000000000000",
        "totalWithdrawableFunds": 0,
        "VALIDATOR_AFK_BLOCKS": 45818,
        "validatorUtils": "0x2b0E04Dc90e3fA58165CB41E2834B44A56E766aF",
        "validatorWalletCreator": "0x9CAd81628aB7D8e239F1A5B497313341578c5F71",
        "validatorWhitelistDisabled": false,
        "wasmModuleRoot": "0x0754e09320c381566cc0449904c377a52bd34a6b9404432e80afd573b67f7b17",
        "zombieAddress": [],
        "zombieCount": 0,
        "zombieLatestStakedNode": []
      },
      "derivedName": "RollupProxy"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1704125939,
      "values": {
        "owner": "0xD368b8dC5cB6fA26A53b7588db9A87E509A72d89"
      }
    },
    {
      "name": "L1ERC20Gateway",
      "address": "0x6Eb9240d4add111D5Fc81b10Ff12eECabcf9752d",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xf43bce5D32742FFC862eA182b0b5544CbDBB0F02",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0xf43bce5D32742FFC862eA182b0b5544CbDBB0F02"],
      "sinceTimestamp": 1704126935,
      "values": {
        "cloneableProxyHash": "0xce61ab08155a3a368bfd165ba9e1151d023608a155fce1ec0d87bba89a59cb4d",
        "counterpartGateway": "0x70Bace2e1cc06E7A96D5d23681A66a9eA6938436",
        "inbox": "0x12485B9d469c1D51d05b5C39e009D50eF0170cF7",
        "l2BeaconProxyFactory": "0x533Ebf8893c5bB7DDe47938507e239789E299a5f",
        "router": "0x5D657b905275F36AD62C3d5C36966975613aFB96",
        "whitelist": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "L1ERC20Gateway"
    },
    {
      "name": "",
      "address": "0x89AF7C4C2198c426cFe6E86de0680A0850503e06",
      "unverified": true,
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701972815
    },
    {
      "name": "",
      "address": "0x99a2A31300816C1FA3f40818AC9280fe7271F878",
      "unverified": true,
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701972863
    },
    {
      "name": "ValidatorWalletCreator",
      "address": "0x9CAd81628aB7D8e239F1A5B497313341578c5F71",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701973211,
      "values": {
        "owner": "0x7A9D9dAdDd745897c06e8664E1DC2702B6E6f341",
        "template": "0x27C7Bfd2cC11429e9b80c443b42FDBe4754F6c91"
      }
    },
    {
      "name": "L1CustomGateway",
      "address": "0xa1c86E2362dba0525075622af6d5f739B1304D45",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xedB05ED1a37750833fBE85b808c872D841d00859",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0xedB05ED1a37750833fBE85b808c872D841d00859"],
      "sinceTimestamp": 1704126935,
      "values": {
        "counterpartGateway": "0x41db2C19bCaEe5e47aF56B0994D330c8a029F2d2",
        "inbox": "0x12485B9d469c1D51d05b5C39e009D50eF0170cF7",
        "owner": "0xD368b8dC5cB6fA26A53b7588db9A87E509A72d89",
        "router": "0x5D657b905275F36AD62C3d5C36966975613aFB96",
        "whitelist": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "L1CustomGateway"
    },
    {
      "name": "SequencerInbox",
      "address": "0xb4795A0edae98d7820C37F06f6b858e7acb51DF8",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x873484Ba63353C8b71210ce123B465512d408B27",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0x873484Ba63353C8b71210ce123B465512d408B27"],
      "sinceTimestamp": 1704125939,
      "values": {
        "batchCount": 38,
        "bridge": "0x5a961c7D162195a9Dc5a357Cc168b0694283382E",
        "DATA_AUTHENTICATED_FLAG": "0x40",
        "HEADER_LENGTH": 40,
        "IS_HARDCODED_SEQUENCER_BATCH_POSTER": true,
        "maxDataSize": 117964,
        "maxTimeVariation": [5760, 48, 86400, 3600],
        "rollup": "0x6594085ca55a2B3a5fAD1C57A270D060eEa99877",
        "setIsBatchPosterCount": 1,
        "totalDelayedMessagesRead": 271
      },
      "derivedName": "SequencerInbox"
    },
    {
      "name": "Outbox",
      "address": "0xB6e0586616ebE79b2F86dDB32048c500D23b3AC3",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x2a6DD4433ffa96dc1755814FC0d9cc83A5F68DeC",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0x2a6DD4433ffa96dc1755814FC0d9cc83A5F68DeC"],
      "sinceTimestamp": 1704125939,
      "values": {
        "bridge": "0x5a961c7D162195a9Dc5a357Cc168b0694283382E",
        "l2ToL1BatchNum": 0,
        "l2ToL1Block": 0,
        "l2ToL1EthBlock": 0,
        "l2ToL1OutputId": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "l2ToL1Sender": "0x0000000000000000000000000000000000000000",
        "l2ToL1Timestamp": 0,
        "OUTBOX_VERSION": 2,
        "rollup": "0x6594085ca55a2B3a5fAD1C57A270D060eEa99877"
      },
      "derivedName": "Outbox"
    },
    {
      "name": "UpgradeExecutor",
      "address": "0xD368b8dC5cB6fA26A53b7588db9A87E509A72d89",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x6c21303F5986180B1394d2C89f3e883890E2867b",
        "admin": "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d"
      },
      "implementations": ["0x6c21303F5986180B1394d2C89f3e883890E2867b"],
      "sinceTimestamp": 1704125939,
      "values": {
        "accessControl": {
          "DEFAULT_ADMIN_ROLE": {
            "adminRole": "DEFAULT_ADMIN_ROLE",
            "members": []
          },
          "ADMIN_ROLE": {
            "adminRole": "ADMIN_ROLE",
            "members": ["0xD368b8dC5cB6fA26A53b7588db9A87E509A72d89"]
          },
          "EXECUTOR_ROLE": {
            "adminRole": "ADMIN_ROLE",
            "members": [
              "0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C",
              "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746"
            ]
          }
        },
        "ADMIN_ROLE": "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63"
      },
      "derivedName": "UpgradeExecutor"
    },
    {
      "name": "",
      "address": "0xDf94F0474F205D086dbc2e66D69a856FCf520622",
      "unverified": true,
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1701972707
    }
  ],
  "eoas": [
    "0x2bc118eC75c4154DC164Ee663E09F5F83232b1DC",
    "0x3840f487A17A41100DD1Bf0946c34f132a57Fd5f",
    "0x41db2C19bCaEe5e47aF56B0994D330c8a029F2d2",
    "0x4D8007a0E9f293e62E2b0F43C6Cf4C4B9e135BAe",
    "0x533Ebf8893c5bB7DDe47938507e239789E299a5f",
    "0x70Bace2e1cc06E7A96D5d23681A66a9eA6938436",
    "0x7A9D9dAdDd745897c06e8664E1DC2702B6E6f341",
    "0xa0C600a6e85bf225958FFAcC70B5FDDF9A059038",
    "0xa4000bDD2bB92ce6750b31F1eeda47Bd1cB8e6e4",
    "0xb0A6d4ddE9f8B8f0763b34834589BF38607c7778",
    "0xe3bb30f7742eC97Be5D60789A2b1273e462C0287",
    "0xefCf0c8faFB425997870f845e26fC6cA6EE6dD5C"
  ],
  "abis": {
    "0x09824fe72BFF474d16D9c2774432E381BBD60662": [
      "constructor(address prover0_, address proverMem_, address proverMath_, address proverHostIo_)",
      "function proveOneStep(tuple(uint256 maxInboxMessagesRead, address bridge) execCtx, uint256 machineStep, bytes32 beforeHash, bytes proof) view returns (bytes32 afterHash)",
      "function prover0() view returns (address)",
      "function proverHostIo() view returns (address)",
      "function proverMath() view returns (address)",
      "function proverMem() view returns (address)"
    ],
    "0x0aE4dD666748bF0F6dB5c149Eab1D8aD27820A6A": [
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event NodeConfirmed(uint64 indexed nodeNum, bytes32 blockHash, bytes32 sendRoot)",
      "event NodeCreated(uint64 indexed nodeNum, bytes32 indexed parentNodeHash, bytes32 indexed nodeHash, bytes32 executionHash, tuple(tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) beforeState, tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) afterState, uint64 numBlocks) assertion, bytes32 afterInboxBatchAcc, bytes32 wasmModuleRoot, uint256 inboxMaxCount)",
      "event NodeRejected(uint64 indexed nodeNum)",
      "event OwnerFunctionCalled(uint256 indexed id)",
      "event Paused(address account)",
      "event RollupChallengeStarted(uint64 indexed challengeIndex, address asserter, address challenger, uint64 challengedNode)",
      "event RollupInitialized(bytes32 machineHash, uint256 chainId)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "event UpgradedSecondary(address indexed implementation)",
      "event UserStakeUpdated(address indexed user, uint256 initialBalance, uint256 finalBalance)",
      "event UserWithdrawableFundsUpdated(address indexed user, uint256 initialBalance, uint256 finalBalance)",
      "function _stakerMap(address) view returns (uint256 amountStaked, uint64 index, uint64 latestStakedNode, uint64 currentChallenge, bool isStaked)",
      "function amountStaked(address staker) view returns (uint256)",
      "function baseStake() view returns (uint256)",
      "function bridge() view returns (address)",
      "function chainId() view returns (uint256)",
      "function challengeManager() view returns (address)",
      "function confirmPeriodBlocks() view returns (uint64)",
      "function createNitroMigrationGenesis(tuple(tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) beforeState, tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) afterState, uint64 numBlocks) assertion)",
      "function currentChallenge(address staker) view returns (uint64)",
      "function extraChallengeTimeBlocks() view returns (uint64)",
      "function firstUnresolvedNode() view returns (uint64)",
      "function forceConfirmNode(uint64 nodeNum, bytes32 blockHash, bytes32 sendRoot)",
      "function forceCreateNode(uint64 prevNode, uint256 prevNodeInboxMaxCount, tuple(tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) beforeState, tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) afterState, uint64 numBlocks) assertion, bytes32 expectedNodeHash)",
      "function forceRefundStaker(address[] staker)",
      "function forceResolveChallenge(address[] stakerA, address[] stakerB)",
      "function getNode(uint64 nodeNum) view returns (tuple(bytes32 stateHash, bytes32 challengeHash, bytes32 confirmData, uint64 prevNum, uint64 deadlineBlock, uint64 noChildConfirmedBeforeBlock, uint64 stakerCount, uint64 childStakerCount, uint64 firstChildBlock, uint64 latestChildNumber, uint64 createdAtBlock, bytes32 nodeHash))",
      "function getNodeCreationBlockForLogLookup(uint64 nodeNum) view returns (uint256)",
      "function getStaker(address staker) view returns (tuple(uint256 amountStaked, uint64 index, uint64 latestStakedNode, uint64 currentChallenge, bool isStaked))",
      "function getStakerAddress(uint64 stakerNum) view returns (address)",
      "function inbox() view returns (address)",
      "function initialize(tuple(uint64 confirmPeriodBlocks, uint64 extraChallengeTimeBlocks, address stakeToken, uint256 baseStake, bytes32 wasmModuleRoot, address owner, address loserStakeEscrow, uint256 chainId, string chainConfig, uint64 genesisBlockNum, tuple(uint256 delayBlocks, uint256 futureBlocks, uint256 delaySeconds, uint256 futureSeconds) sequencerInboxMaxTimeVariation) config, tuple(address bridge, address sequencerInbox, address inbox, address outbox, address rollupEventInbox, address challengeManager, address rollupAdminLogic, address rollupUserLogic, address validatorUtils, address validatorWalletCreator) connectedContracts)",
      "function isStaked(address staker) view returns (bool)",
      "function isStakedOnLatestConfirmed(address staker) view returns (bool)",
      "function isValidator(address) view returns (bool)",
      "function isZombie(address staker) view returns (bool)",
      "function lastStakeBlock() view returns (uint64)",
      "function latestConfirmed() view returns (uint64)",
      "function latestNodeCreated() view returns (uint64)",
      "function latestStakedNode(address staker) view returns (uint64)",
      "function loserStakeEscrow() view returns (address)",
      "function minimumAssertionPeriod() view returns (uint256)",
      "function nodeHasStaker(uint64 nodeNum, address staker) view returns (bool)",
      "function outbox() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function proxiableUUID() view returns (bytes32)",
      "function removeOldOutbox(address _outbox)",
      "function resume()",
      "function rollupDeploymentBlock() view returns (uint256)",
      "function rollupEventInbox() view returns (address)",
      "function sequencerInbox() view returns (address)",
      "function setBaseStake(uint256 newBaseStake)",
      "function setConfirmPeriodBlocks(uint64 newConfirmPeriod)",
      "function setDelayedInbox(address _inbox, bool _enabled)",
      "function setExtraChallengeTimeBlocks(uint64 newExtraTimeBlocks)",
      "function setInbox(address newInbox)",
      "function setLoserStakeEscrow(address newLoserStakerEscrow)",
      "function setMinimumAssertionPeriod(uint256 newPeriod)",
      "function setOutbox(address _outbox)",
      "function setOwner(address newOwner)",
      "function setSequencerInbox(address _sequencerInbox)",
      "function setStakeToken(address newStakeToken)",
      "function setValidator(address[] _validator, bool[] _val)",
      "function setValidatorWhitelistDisabled(bool _validatorWhitelistDisabled)",
      "function setWasmModuleRoot(bytes32 newWasmModuleRoot)",
      "function stakeToken() view returns (address)",
      "function stakerCount() view returns (uint64)",
      "function totalWithdrawableFunds() view returns (uint256)",
      "function upgradeBeacon(address beacon, address newImplementation)",
      "function upgradeSecondaryTo(address newImplementation)",
      "function upgradeSecondaryToAndCall(address newImplementation, bytes data) payable",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function validatorUtils() view returns (address)",
      "function validatorWalletCreator() view returns (address)",
      "function validatorWhitelistDisabled() view returns (bool)",
      "function wasmModuleRoot() view returns (bytes32)",
      "function withdrawableFunds(address user) view returns (uint256)",
      "function zombieAddress(uint256 zombieNum) view returns (address)",
      "function zombieCount() view returns (uint256)",
      "function zombieLatestStakedNode(uint256 zombieNum) view returns (uint64)"
    ],
    "0x1162084C3C6575121146582Db5BE43189e8CEe6b": [
      "constructor(uint256 _maxDataSize)",
      "error DataTooLarge(uint256 dataLength, uint256 maxDataLength)",
      "error GasLimitTooLarge()",
      "error InsufficientSubmissionCost(uint256 expected, uint256 actual)",
      "error InsufficientValue(uint256 expected, uint256 actual)",
      "error L1Forked()",
      "error NotAllowedOrigin(address origin)",
      "error NotForked()",
      "error NotOrigin()",
      "error NotOwner(address sender, address owner)",
      "error NotRollupOrOwner(address sender, address rollup, address owner)",
      "error RetryableData(address from, address to, uint256 l2CallValue, uint256 deposit, uint256 maxSubmissionCost, address excessFeeRefundAddress, address callValueRefundAddress, uint256 gasLimit, uint256 maxFeePerGas, bytes data)",
      "event AllowListAddressSet(address indexed user, bool val)",
      "event AllowListEnabledUpdated(bool isEnabled)",
      "event InboxMessageDelivered(uint256 indexed messageNum, bytes data)",
      "event InboxMessageDeliveredFromOrigin(uint256 indexed messageNum)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "function allowListEnabled() view returns (bool)",
      "function bridge() view returns (address)",
      "function calculateRetryableSubmissionFee(uint256 dataLength, uint256 baseFee) view returns (uint256)",
      "function createRetryableTicket(address to, uint256 l2CallValue, uint256 maxSubmissionCost, address excessFeeRefundAddress, address callValueRefundAddress, uint256 gasLimit, uint256 maxFeePerGas, bytes data) payable returns (uint256)",
      "function createRetryableTicketNoRefundAliasRewrite(address to, uint256 l2CallValue, uint256 maxSubmissionCost, address excessFeeRefundAddress, address callValueRefundAddress, uint256 gasLimit, uint256 maxFeePerGas, bytes data) payable returns (uint256)",
      "function depositEth(uint256) payable returns (uint256)",
      "function depositEth() payable returns (uint256)",
      "function getProxyAdmin() view returns (address)",
      "function initialize(address _bridge, address _sequencerInbox)",
      "function isAllowed(address) view returns (bool)",
      "function maxDataSize() view returns (uint256)",
      "function pause()",
      "function paused() view returns (bool)",
      "function postUpgradeInit(address)",
      "function sendContractTransaction(uint256 gasLimit, uint256 maxFeePerGas, address to, uint256 value, bytes data) returns (uint256)",
      "function sendL1FundedContractTransaction(uint256 gasLimit, uint256 maxFeePerGas, address to, bytes data) payable returns (uint256)",
      "function sendL1FundedUnsignedTransaction(uint256 gasLimit, uint256 maxFeePerGas, uint256 nonce, address to, bytes data) payable returns (uint256)",
      "function sendL1FundedUnsignedTransactionToFork(uint256 gasLimit, uint256 maxFeePerGas, uint256 nonce, address to, bytes data) payable returns (uint256)",
      "function sendL2Message(bytes messageData) returns (uint256)",
      "function sendL2MessageFromOrigin(bytes messageData) returns (uint256)",
      "function sendUnsignedTransaction(uint256 gasLimit, uint256 maxFeePerGas, uint256 nonce, address to, uint256 value, bytes data) returns (uint256)",
      "function sendUnsignedTransactionToFork(uint256 gasLimit, uint256 maxFeePerGas, uint256 nonce, address to, uint256 value, bytes data) returns (uint256)",
      "function sendWithdrawEthToFork(uint256 gasLimit, uint256 maxFeePerGas, uint256 nonce, uint256 value, address withdrawTo) returns (uint256)",
      "function sequencerInbox() view returns (address)",
      "function setAllowList(address[] user, bool[] val)",
      "function setAllowListEnabled(bool _allowListEnabled)",
      "function unpause()",
      "function unsafeCreateRetryableTicket(address to, uint256 l2CallValue, uint256 maxSubmissionCost, address excessFeeRefundAddress, address callValueRefundAddress, uint256 gasLimit, uint256 maxFeePerGas, bytes data) payable returns (uint256)"
    ],
    "0x12485B9d469c1D51d05b5C39e009D50eF0170cF7": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x13BE515E44Eefaf3eBEFAD684F1FBB574Ac0A494": [
      "constructor()",
      "error AlreadyInit()",
      "error HadZeroInit()",
      "error NotOwner(address sender, address owner)",
      "error RollupNotChanged()",
      "event InboxMessageDelivered(uint256 indexed messageNum, bytes data)",
      "event InboxMessageDeliveredFromOrigin(uint256 indexed messageNum)",
      "function bridge() view returns (address)",
      "function initialize(address _bridge)",
      "function rollup() view returns (address)",
      "function rollupInitialized(uint256 chainId, string chainConfig)",
      "function updateRollupAddress()"
    ],
    "0x150286BdbE7C8Cd23D41a8e1e64438e0dc04dc3d": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x1c6ACCd9d66f3B993928E7439c9A2d67b94a445F": [
      "error BadSequencerMessageNumber(uint256 stored, uint256 received)",
      "error InvalidOutboxSet(address outbox)",
      "error NotContract(address addr)",
      "error NotDelayedInbox(address sender)",
      "error NotOutbox(address sender)",
      "error NotRollupOrOwner(address sender, address rollup, address owner)",
      "error NotSequencerInbox(address sender)",
      "event BridgeCallTriggered(address indexed outbox, address indexed to, uint256 value, bytes data)",
      "event InboxToggle(address indexed inbox, bool enabled)",
      "event MessageDelivered(uint256 indexed messageIndex, bytes32 indexed beforeInboxAcc, address inbox, uint8 kind, address sender, bytes32 messageDataHash, uint256 baseFeeL1, uint64 timestamp)",
      "event OutboxToggle(address indexed outbox, bool enabled)",
      "event RollupUpdated(address rollup)",
      "event SequencerInboxUpdated(address newSequencerInbox)",
      "function acceptFundsFromOldBridge() payable",
      "function activeOutbox() view returns (address)",
      "function allowedDelayedInboxList(uint256) view returns (address)",
      "function allowedDelayedInboxes(address inbox) view returns (bool)",
      "function allowedOutboxList(uint256) view returns (address)",
      "function allowedOutboxes(address outbox) view returns (bool)",
      "function delayedInboxAccs(uint256) view returns (bytes32)",
      "function delayedMessageCount() view returns (uint256)",
      "function enqueueDelayedMessage(uint8 kind, address sender, bytes32 messageDataHash) payable returns (uint256)",
      "function enqueueSequencerMessage(bytes32 dataHash, uint256 afterDelayedMessagesRead, uint256 prevMessageCount, uint256 newMessageCount) returns (uint256 seqMessageIndex, bytes32 beforeAcc, bytes32 delayedAcc, bytes32 acc)",
      "function executeCall(address to, uint256 value, bytes data) returns (bool success, bytes returnData)",
      "function initialize(address rollup_)",
      "function rollup() view returns (address)",
      "function sequencerInbox() view returns (address)",
      "function sequencerInboxAccs(uint256) view returns (bytes32)",
      "function sequencerMessageCount() view returns (uint256)",
      "function sequencerReportedSubMessageCount() view returns (uint256)",
      "function setDelayedInbox(address inbox, bool enabled)",
      "function setOutbox(address outbox, bool enabled)",
      "function setSequencerInbox(address _sequencerInbox)",
      "function setSequencerReportedSubMessageCount(uint256 newMsgCount)",
      "function submitBatchSpendingReport(address sender, bytes32 messageDataHash) returns (uint256)",
      "function updateRollupAddress(address _rollup)"
    ],
    "0x28c32059d7e6147cf5257DFC127f7258beA1cdf4": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x2a6DD4433ffa96dc1755814FC0d9cc83A5F68DeC": [
      "error AlreadyInit()",
      "error AlreadySpent(uint256 index)",
      "error BadPostUpgradeInit()",
      "error BridgeCallFailed()",
      "error HadZeroInit()",
      "error MerkleProofTooLong(uint256 actualLength, uint256 maxProofLength)",
      "error NotOwner(address sender, address owner)",
      "error NotRollup(address sender, address rollup)",
      "error PathNotMinimal(uint256 index, uint256 maxIndex)",
      "error ProofTooLong(uint256 proofLength)",
      "error RollupNotChanged()",
      "error SimulationOnlyEntrypoint()",
      "error UnknownRoot(bytes32 root)",
      "event OutBoxTransactionExecuted(address indexed to, address indexed l2Sender, uint256 indexed zero, uint256 transactionIndex)",
      "event SendRootUpdated(bytes32 indexed outputRoot, bytes32 indexed l2BlockHash)",
      "function OUTBOX_VERSION() view returns (uint128)",
      "function bridge() view returns (address)",
      "function calculateItemHash(address l2Sender, address to, uint256 l2Block, uint256 l1Block, uint256 l2Timestamp, uint256 value, bytes data) pure returns (bytes32)",
      "function calculateMerkleRoot(bytes32[] proof, uint256 path, bytes32 item) pure returns (bytes32)",
      "function executeTransaction(bytes32[] proof, uint256 index, address l2Sender, address to, uint256 l2Block, uint256 l1Block, uint256 l2Timestamp, uint256 value, bytes data)",
      "function executeTransactionSimulation(uint256 index, address l2Sender, address to, uint256 l2Block, uint256 l1Block, uint256 l2Timestamp, uint256 value, bytes data)",
      "function initialize(address _bridge)",
      "function isSpent(uint256 index) view returns (bool)",
      "function l2ToL1BatchNum() pure returns (uint256)",
      "function l2ToL1Block() view returns (uint256)",
      "function l2ToL1EthBlock() view returns (uint256)",
      "function l2ToL1OutputId() view returns (bytes32)",
      "function l2ToL1Sender() view returns (address)",
      "function l2ToL1Timestamp() view returns (uint256)",
      "function postUpgradeInit()",
      "function rollup() view returns (address)",
      "function roots(bytes32) view returns (bytes32)",
      "function spent(uint256) view returns (bytes32)",
      "function updateRollupAddress()",
      "function updateSendRoot(bytes32 root, bytes32 l2BlockHash)"
    ],
    "0x2b0E04Dc90e3fA58165CB41E2834B44A56E766aF": [
      "function areUnresolvedNodesLinear(address rollup) view returns (bool)",
      "function checkDecidableNextNode(address rollup) view returns (uint8)",
      "function findNodeConflict(address rollup, uint64 node1, uint64 node2, uint256 maxDepth) view returns (tuple(uint8 ty, uint64 node1, uint64 node2))",
      "function findStakerConflict(address rollup, address staker1, address staker2, uint256 maxDepth) view returns (tuple(uint8 ty, uint64 node1, uint64 node2))",
      "function getStakers(address rollup, uint64 startIndex, uint64 max) view returns (address[], bool hasMore)",
      "function latestStaked(address rollup, address staker) view returns (uint64, tuple(bytes32 stateHash, bytes32 challengeHash, bytes32 confirmData, uint64 prevNum, uint64 deadlineBlock, uint64 noChildConfirmedBeforeBlock, uint64 stakerCount, uint64 childStakerCount, uint64 firstChildBlock, uint64 latestChildNumber, uint64 createdAtBlock, bytes32 nodeHash))",
      "function refundableStakers(address rollup) view returns (address[])",
      "function requireConfirmable(address rollup) view",
      "function requireRejectable(address rollup) view",
      "function stakedNodes(address rollup, address staker) view returns (uint64[])",
      "function timedOutChallenges(address rollup, uint64 startIndex, uint64 max) view returns (uint64[], bool hasMore)"
    ],
    "0x36E5DE57f862cf5bA28624845faB8c2fF6Aa41d2": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x4a4962275DF8C60a80d3a25faEc5AA7De116A746": [
      "constructor(address _singleton)"
    ],
    "0x5a961c7D162195a9Dc5a357Cc168b0694283382E": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x5D657b905275F36AD62C3d5C36966975613aFB96": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x6525137BfF366fbc0A89E3e5A4d244B5A0090a6D": [
      "event DefaultGatewayUpdated(address newDefaultGateway)",
      "event GatewaySet(address indexed l1Token, address indexed gateway)",
      "event TransferRouted(address indexed token, address indexed _userFrom, address indexed _userTo, address gateway)",
      "event TxToL2(address indexed _from, address indexed _to, uint256 indexed _seqNum, bytes _data)",
      "event WhitelistSourceUpdated(address newSource)",
      "function calculateL2TokenAddress(address l1ERC20) view returns (address)",
      "function counterpartGateway() view returns (address)",
      "function defaultGateway() view returns (address)",
      "function finalizeInboundTransfer(address, address, address, uint256, bytes) payable",
      "function getGateway(address _token) view returns (address gateway)",
      "function getOutboundCalldata(address _token, address _from, address _to, uint256 _amount, bytes _data) view returns (bytes)",
      "function inbox() view returns (address)",
      "function initialize(address _owner, address _defaultGateway, address, address _counterpartGateway, address _inbox)",
      "function l1TokenToGateway(address) view returns (address)",
      "function outboundTransfer(address _token, address _to, uint256 _amount, uint256 _maxGas, uint256 _gasPriceBid, bytes _data) payable returns (bytes)",
      "function outboundTransferCustomRefund(address _token, address _refundTo, address _to, uint256 _amount, uint256 _maxGas, uint256 _gasPriceBid, bytes _data) payable returns (bytes)",
      "function owner() view returns (address)",
      "function postUpgradeInit()",
      "function router() view returns (address)",
      "function setDefaultGateway(address newL1DefaultGateway, uint256 _maxGas, uint256 _gasPriceBid, uint256 _maxSubmissionCost) payable returns (uint256)",
      "function setGateway(address _gateway, uint256 _maxGas, uint256 _gasPriceBid, uint256 _maxSubmissionCost, address _creditBackAddress) payable returns (uint256)",
      "function setGateway(address _gateway, uint256 _maxGas, uint256 _gasPriceBid, uint256 _maxSubmissionCost) payable returns (uint256)",
      "function setGateways(address[] _token, address[] _gateway, uint256 _maxGas, uint256 _gasPriceBid, uint256 _maxSubmissionCost) payable returns (uint256)",
      "function setOwner(address newOwner)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function updateWhitelistSource(address newSource)",
      "function whitelist() view returns (address)"
    ],
    "0x6594085ca55a2B3a5fAD1C57A270D060eEa99877": [
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "event UpgradedSecondary(address indexed implementation)",
      "function initializeProxy(tuple(uint64 confirmPeriodBlocks, uint64 extraChallengeTimeBlocks, address stakeToken, uint256 baseStake, bytes32 wasmModuleRoot, address owner, address loserStakeEscrow, uint256 chainId, string chainConfig, uint64 genesisBlockNum, tuple(uint256 delayBlocks, uint256 futureBlocks, uint256 delaySeconds, uint256 futureSeconds) sequencerInboxMaxTimeVariation) config, tuple(address bridge, address sequencerInbox, address inbox, address outbox, address rollupEventInbox, address challengeManager, address rollupAdminLogic, address rollupUserLogic, address validatorUtils, address validatorWalletCreator) connectedContracts)"
    ],
    "0x660ea1675F7323dC3Ba0c8dDFB593225Eb01E3C1": [
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event NodeConfirmed(uint64 indexed nodeNum, bytes32 blockHash, bytes32 sendRoot)",
      "event NodeCreated(uint64 indexed nodeNum, bytes32 indexed parentNodeHash, bytes32 indexed nodeHash, bytes32 executionHash, tuple(tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) beforeState, tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) afterState, uint64 numBlocks) assertion, bytes32 afterInboxBatchAcc, bytes32 wasmModuleRoot, uint256 inboxMaxCount)",
      "event NodeRejected(uint64 indexed nodeNum)",
      "event Paused(address account)",
      "event RollupChallengeStarted(uint64 indexed challengeIndex, address asserter, address challenger, uint64 challengedNode)",
      "event RollupInitialized(bytes32 machineHash, uint256 chainId)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "event UpgradedSecondary(address indexed implementation)",
      "event UserStakeUpdated(address indexed user, uint256 initialBalance, uint256 finalBalance)",
      "event UserWithdrawableFundsUpdated(address indexed user, uint256 initialBalance, uint256 finalBalance)",
      "function VALIDATOR_AFK_BLOCKS() view returns (uint256)",
      "function _stakerMap(address) view returns (uint256 amountStaked, uint64 index, uint64 latestStakedNode, uint64 currentChallenge, bool isStaked)",
      "function addToDeposit(address stakerAddress) payable",
      "function amountStaked(address staker) view returns (uint256)",
      "function baseStake() view returns (uint256)",
      "function bridge() view returns (address)",
      "function chainId() view returns (uint256)",
      "function challengeManager() view returns (address)",
      "function completeChallenge(uint256 challengeIndex, address winningStaker, address losingStaker)",
      "function confirmNextNode(bytes32 blockHash, bytes32 sendRoot)",
      "function confirmPeriodBlocks() view returns (uint64)",
      "function countStakedZombies(uint64 nodeNum) view returns (uint256)",
      "function countZombiesStakedOnChildren(uint64 nodeNum) view returns (uint256)",
      "function createChallenge(address[2] stakers, uint64[2] nodeNums, uint8[2] machineStatuses, tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals)[2] globalStates, uint64 numBlocks, bytes32 secondExecutionHash, uint256[2] proposedBlocks, bytes32[2] wasmModuleRoots)",
      "function currentChallenge(address staker) view returns (uint64)",
      "function currentRequiredStake() view returns (uint256)",
      "function extraChallengeTimeBlocks() view returns (uint64)",
      "function firstUnresolvedNode() view returns (uint64)",
      "function getNode(uint64 nodeNum) view returns (tuple(bytes32 stateHash, bytes32 challengeHash, bytes32 confirmData, uint64 prevNum, uint64 deadlineBlock, uint64 noChildConfirmedBeforeBlock, uint64 stakerCount, uint64 childStakerCount, uint64 firstChildBlock, uint64 latestChildNumber, uint64 createdAtBlock, bytes32 nodeHash))",
      "function getNodeCreationBlockForLogLookup(uint64 nodeNum) view returns (uint256)",
      "function getStaker(address staker) view returns (tuple(uint256 amountStaked, uint64 index, uint64 latestStakedNode, uint64 currentChallenge, bool isStaked))",
      "function getStakerAddress(uint64 stakerNum) view returns (address)",
      "function inbox() view returns (address)",
      "function initialize(address _stakeToken) view",
      "function isERC20Enabled() view returns (bool)",
      "function isStaked(address staker) view returns (bool)",
      "function isStakedOnLatestConfirmed(address staker) view returns (bool)",
      "function isValidator(address) view returns (bool)",
      "function isZombie(address staker) view returns (bool)",
      "function lastStakeBlock() view returns (uint64)",
      "function latestConfirmed() view returns (uint64)",
      "function latestNodeCreated() view returns (uint64)",
      "function latestStakedNode(address staker) view returns (uint64)",
      "function loserStakeEscrow() view returns (address)",
      "function minimumAssertionPeriod() view returns (uint256)",
      "function newStakeOnExistingNode(uint64 nodeNum, bytes32 nodeHash) payable",
      "function newStakeOnNewNode(tuple(tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) beforeState, tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) afterState, uint64 numBlocks) assertion, bytes32 expectedNodeHash, uint256 prevNodeInboxMaxCount) payable",
      "function nodeHasStaker(uint64 nodeNum, address staker) view returns (bool)",
      "function outbox() view returns (address)",
      "function owner() view returns (address)",
      "function paused() view returns (bool)",
      "function proxiableUUID() view returns (bytes32)",
      "function reduceDeposit(uint256 target)",
      "function rejectNextNode(address stakerAddress)",
      "function removeOldZombies(uint256 startIndex)",
      "function removeWhitelistAfterFork()",
      "function removeWhitelistAfterValidatorAfk()",
      "function removeZombie(uint256 zombieNum, uint256 maxNodes)",
      "function requireUnresolved(uint256 nodeNum) view",
      "function requireUnresolvedExists() view",
      "function requiredStake(uint256 blockNumber, uint64 firstUnresolvedNodeNum, uint64 latestCreatedNode) view returns (uint256)",
      "function returnOldDeposit(address stakerAddress)",
      "function rollupDeploymentBlock() view returns (uint256)",
      "function rollupEventInbox() view returns (address)",
      "function sequencerInbox() view returns (address)",
      "function stakeOnExistingNode(uint64 nodeNum, bytes32 nodeHash)",
      "function stakeOnNewNode(tuple(tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) beforeState, tuple(tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) globalState, uint8 machineStatus) afterState, uint64 numBlocks) assertion, bytes32 expectedNodeHash, uint256 prevNodeInboxMaxCount)",
      "function stakeToken() view returns (address)",
      "function stakerCount() view returns (uint64)",
      "function totalWithdrawableFunds() view returns (uint256)",
      "function validatorUtils() view returns (address)",
      "function validatorWalletCreator() view returns (address)",
      "function validatorWhitelistDisabled() view returns (bool)",
      "function wasmModuleRoot() view returns (bytes32)",
      "function withdrawStakerFunds() returns (uint256)",
      "function withdrawableFunds(address user) view returns (uint256)",
      "function zombieAddress(uint256 zombieNum) view returns (address)",
      "function zombieCount() view returns (uint256)",
      "function zombieLatestStakedNode(uint256 zombieNum) view returns (uint64)"
    ],
    "0x6c21303F5986180B1394d2C89f3e883890E2867b": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event TargetCallExecuted(address indexed target, uint256 value, bytes data)",
      "event UpgradeExecuted(address indexed upgrade, uint256 value, bytes data)",
      "function ADMIN_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function execute(address upgrade, bytes upgradeCallData) payable",
      "function executeCall(address target, bytes targetCallData) payable",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin, address[] executors)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0x6d4bE7c1a618D43bE4a1Bd7F8eC8E079Ff52Fb4d": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x6Eb9240d4add111D5Fc81b10Ff12eECabcf9752d": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x873484Ba63353C8b71210ce123B465512d408B27": [
      "constructor(uint256 _maxDataSize)",
      "error AlreadyInit()",
      "error AlreadyValidDASKeyset(bytes32)",
      "error BadSequencerNumber(uint256 stored, uint256 received)",
      "error DataNotAuthenticated()",
      "error DataTooLarge(uint256 dataLength, uint256 maxDataLength)",
      "error DelayedBackwards()",
      "error DelayedTooFar()",
      "error ForceIncludeBlockTooSoon()",
      "error ForceIncludeTimeTooSoon()",
      "error HadZeroInit()",
      "error IncorrectMessagePreimage()",
      "error NoSuchKeyset(bytes32)",
      "error NotBatchPoster()",
      "error NotForked()",
      "error NotOrigin()",
      "error NotOwner(address sender, address owner)",
      "error RollupNotChanged()",
      "event InboxMessageDelivered(uint256 indexed messageNum, bytes data)",
      "event InboxMessageDeliveredFromOrigin(uint256 indexed messageNum)",
      "event InvalidateKeyset(bytes32 indexed keysetHash)",
      "event OwnerFunctionCalled(uint256 indexed id)",
      "event SequencerBatchData(uint256 indexed batchSequenceNumber, bytes data)",
      "event SequencerBatchDelivered(uint256 indexed batchSequenceNumber, bytes32 indexed beforeAcc, bytes32 indexed afterAcc, bytes32 delayedAcc, uint256 afterDelayedMessagesRead, tuple(uint64 minTimestamp, uint64 maxTimestamp, uint64 minBlockNumber, uint64 maxBlockNumber) timeBounds, uint8 dataLocation)",
      "event SetValidKeyset(bytes32 indexed keysetHash, bytes keysetBytes)",
      "function DATA_AUTHENTICATED_FLAG() view returns (bytes1)",
      "function HEADER_LENGTH() view returns (uint256)",
      "function addSequencerL2Batch(uint256 sequenceNumber, bytes data, uint256 afterDelayedMessagesRead, address gasRefunder, uint256 prevMessageCount, uint256 newMessageCount)",
      "function addSequencerL2BatchFromOrigin(uint256 sequenceNumber, bytes data, uint256 afterDelayedMessagesRead, address gasRefunder)",
      "function addSequencerL2BatchFromOrigin(uint256 sequenceNumber, bytes data, uint256 afterDelayedMessagesRead, address gasRefunder, uint256 prevMessageCount, uint256 newMessageCount)",
      "function batchCount() view returns (uint256)",
      "function bridge() view returns (address)",
      "function dasKeySetInfo(bytes32) view returns (bool isValidKeyset, uint64 creationBlock)",
      "function forceInclusion(uint256 _totalDelayedMessagesRead, uint8 kind, uint64[2] l1BlockAndTime, uint256 baseFeeL1, address sender, bytes32 messageDataHash)",
      "function getKeysetCreationBlock(bytes32 ksHash) view returns (uint256)",
      "function inboxAccs(uint256 index) view returns (bytes32)",
      "function initialize(address bridge_, tuple(uint256 delayBlocks, uint256 futureBlocks, uint256 delaySeconds, uint256 futureSeconds) maxTimeVariation_)",
      "function invalidateKeysetHash(bytes32 ksHash)",
      "function isBatchPoster(address) view returns (bool)",
      "function isSequencer(address) view returns (bool)",
      "function isValidKeysetHash(bytes32 ksHash) view returns (bool)",
      "function maxDataSize() view returns (uint256)",
      "function maxTimeVariation() view returns (uint256 delayBlocks, uint256 futureBlocks, uint256 delaySeconds, uint256 futureSeconds)",
      "function removeDelayAfterFork()",
      "function rollup() view returns (address)",
      "function setIsBatchPoster(address addr, bool isBatchPoster_)",
      "function setIsSequencer(address addr, bool isSequencer_)",
      "function setMaxTimeVariation(tuple(uint256 delayBlocks, uint256 futureBlocks, uint256 delaySeconds, uint256 futureSeconds) maxTimeVariation_)",
      "function setValidKeyset(bytes keysetBytes)",
      "function totalDelayedMessagesRead() view returns (uint256)",
      "function updateRollupAddress()"
    ],
    "0x9CAd81628aB7D8e239F1A5B497313341578c5F71": [
      "constructor()",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event TemplateUpdated()",
      "event WalletCreated(address indexed walletAddress, address indexed executorAddress, address indexed ownerAddress, address adminProxy)",
      "function createWallet(address[] initialExecutorAllowedDests) returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setTemplate(address _template)",
      "function template() view returns (address)",
      "function transferOwnership(address newOwner)"
    ],
    "0xa1c86E2362dba0525075622af6d5f739B1304D45": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xa86996bED19547f7dEf22a087dD61b5F9Fb6C684": [
      "event DepositInitiated(address l1Token, address indexed _from, address indexed _to, uint256 indexed _sequenceNumber, uint256 _amount)",
      "event TxToL2(address indexed _from, address indexed _to, uint256 indexed _seqNum, bytes _data)",
      "event WithdrawRedirected(address indexed from, address indexed to, uint256 indexed exitNum, bytes newData, bytes data, bool madeExternalCall)",
      "event WithdrawalFinalized(address l1Token, address indexed _from, address indexed _to, uint256 indexed _exitNum, uint256 _amount)",
      "function calculateL2TokenAddress(address l1ERC20) view returns (address)",
      "function counterpartGateway() view returns (address)",
      "function encodeWithdrawal(uint256 _exitNum, address _initialDestination) pure returns (bytes32)",
      "function finalizeInboundTransfer(address _token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getExternalCall(uint256 _exitNum, address _initialDestination, bytes _initialData) view returns (address target, bytes data)",
      "function getOutboundCalldata(address _l1Token, address _from, address _to, uint256 _amount, bytes _data) view returns (bytes outboundCalldata)",
      "function inbox() view returns (address)",
      "function initialize(address _l2Counterpart, address _l1Router, address _inbox, address _l1Weth, address _l2Weth)",
      "function l1Weth() view returns (address)",
      "function l2Weth() view returns (address)",
      "function outboundTransfer(address _l1Token, address _to, uint256 _amount, uint256 _maxGas, uint256 _gasPriceBid, bytes _data) payable returns (bytes res)",
      "function outboundTransferCustomRefund(address _l1Token, address _refundTo, address _to, uint256 _amount, uint256 _maxGas, uint256 _gasPriceBid, bytes _data) payable returns (bytes res)",
      "function postUpgradeInit()",
      "function redirectedExits(bytes32) view returns (bool isExit, address _newTo, bytes _newData)",
      "function router() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferExitAndCall(uint256 _exitNum, address _initialDestination, address _newDestination, bytes _newData, bytes _data)"
    ],
    "0xb4795A0edae98d7820C37F06f6b858e7acb51DF8": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xB6e0586616ebE79b2F86dDB32048c500D23b3AC3": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xD368b8dC5cB6fA26A53b7588db9A87E509A72d89": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xedB05ED1a37750833fBE85b808c872D841d00859": [
      "event DepositInitiated(address l1Token, address indexed _from, address indexed _to, uint256 indexed _sequenceNumber, uint256 _amount)",
      "event TokenSet(address indexed l1Address, address indexed l2Address)",
      "event TxToL2(address indexed _from, address indexed _to, uint256 indexed _seqNum, bytes _data)",
      "event WithdrawRedirected(address indexed from, address indexed to, uint256 indexed exitNum, bytes newData, bytes data, bool madeExternalCall)",
      "event WithdrawalFinalized(address l1Token, address indexed _from, address indexed _to, uint256 indexed _exitNum, uint256 _amount)",
      "function calculateL2TokenAddress(address l1ERC20) view returns (address)",
      "function counterpartGateway() view returns (address)",
      "function encodeWithdrawal(uint256 _exitNum, address _initialDestination) pure returns (bytes32)",
      "function finalizeInboundTransfer(address _token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function forceRegisterTokenToL2(address[] _l1Addresses, address[] _l2Addresses, uint256 _maxGas, uint256 _gasPriceBid, uint256 _maxSubmissionCost) payable returns (uint256)",
      "function getExternalCall(uint256 _exitNum, address _initialDestination, bytes _initialData) view returns (address target, bytes data)",
      "function getOutboundCalldata(address _l1Token, address _from, address _to, uint256 _amount, bytes _data) view returns (bytes outboundCalldata)",
      "function inbox() view returns (address)",
      "function initialize(address _l1Counterpart, address _l1Router, address _inbox, address _owner)",
      "function l1ToL2Token(address) view returns (address)",
      "function outboundTransfer(address _l1Token, address _to, uint256 _amount, uint256 _maxGas, uint256 _gasPriceBid, bytes _data) payable returns (bytes res)",
      "function outboundTransferCustomRefund(address _l1Token, address _refundTo, address _to, uint256 _amount, uint256 _maxGas, uint256 _gasPriceBid, bytes _data) payable returns (bytes res)",
      "function owner() view returns (address)",
      "function postUpgradeInit()",
      "function redirectedExits(bytes32) view returns (bool isExit, address _newTo, bytes _newData)",
      "function registerTokenToL2(address _l2Address, uint256 _maxGas, uint256 _gasPriceBid, uint256 _maxSubmissionCost, address _creditBackAddress) payable returns (uint256)",
      "function registerTokenToL2(address _l2Address, uint256 _maxGas, uint256 _gasPriceBid, uint256 _maxSubmissionCost) payable returns (uint256)",
      "function router() view returns (address)",
      "function setOwner(address newOwner)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferExitAndCall(uint256 _exitNum, address _initialDestination, address _newDestination, bytes _newData, bytes _data)",
      "function whitelist() view returns (address)"
    ],
    "0xEe9E5546A11Cb5b4A86e92DA05f2ef75C26E4754": [
      "event Bisected(uint64 indexed challengeIndex, bytes32 indexed challengeRoot, uint256 challengedSegmentStart, uint256 challengedSegmentLength, bytes32[] chainHashes)",
      "event ChallengeEnded(uint64 indexed challengeIndex, uint8 kind)",
      "event ExecutionChallengeBegun(uint64 indexed challengeIndex, uint256 blockSteps)",
      "event InitiatedChallenge(uint64 indexed challengeIndex, tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) startState, tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals) endState)",
      "event OneStepProofCompleted(uint64 indexed challengeIndex)",
      "function bisectExecution(uint64 challengeIndex, tuple(uint256 oldSegmentsStart, uint256 oldSegmentsLength, bytes32[] oldSegments, uint256 challengePosition) selection, bytes32[] newSegments)",
      "function bridge() view returns (address)",
      "function challengeExecution(uint64 challengeIndex, tuple(uint256 oldSegmentsStart, uint256 oldSegmentsLength, bytes32[] oldSegments, uint256 challengePosition) selection, uint8[2] machineStatuses, bytes32[2] globalStateHashes, uint256 numSteps)",
      "function challengeInfo(uint64 challengeIndex) view returns (tuple(tuple(address addr, uint256 timeLeft) current, tuple(address addr, uint256 timeLeft) next, uint256 lastMoveTimestamp, bytes32 wasmModuleRoot, bytes32 challengeStateHash, uint64 maxInboxMessages, uint8 mode))",
      "function challenges(uint256) view returns (tuple(address addr, uint256 timeLeft) current, tuple(address addr, uint256 timeLeft) next, uint256 lastMoveTimestamp, bytes32 wasmModuleRoot, bytes32 challengeStateHash, uint64 maxInboxMessages, uint8 mode)",
      "function clearChallenge(uint64 challengeIndex)",
      "function createChallenge(bytes32 wasmModuleRoot_, uint8[2] startAndEndMachineStatuses_, tuple(bytes32[2] bytes32Vals, uint64[2] u64Vals)[2] startAndEndGlobalStates_, uint64 numBlocks, address asserter_, address challenger_, uint256 asserterTimeLeft_, uint256 challengerTimeLeft_) returns (uint64)",
      "function currentResponder(uint64 challengeIndex) view returns (address)",
      "function initialize(address resultReceiver_, address sequencerInbox_, address bridge_, address osp_)",
      "function isTimedOut(uint64 challengeIndex) view returns (bool)",
      "function oneStepProveExecution(uint64 challengeIndex, tuple(uint256 oldSegmentsStart, uint256 oldSegmentsLength, bytes32[] oldSegments, uint256 challengePosition) selection, bytes proof)",
      "function osp() view returns (address)",
      "function resultReceiver() view returns (address)",
      "function sequencerInbox() view returns (address)",
      "function timeout(uint64 challengeIndex)",
      "function totalChallengesCreated() view returns (uint64)"
    ],
    "0xf43bce5D32742FFC862eA182b0b5544CbDBB0F02": [
      "event DepositInitiated(address l1Token, address indexed _from, address indexed _to, uint256 indexed _sequenceNumber, uint256 _amount)",
      "event TxToL2(address indexed _from, address indexed _to, uint256 indexed _seqNum, bytes _data)",
      "event WithdrawRedirected(address indexed from, address indexed to, uint256 indexed exitNum, bytes newData, bytes data, bool madeExternalCall)",
      "event WithdrawalFinalized(address l1Token, address indexed _from, address indexed _to, uint256 indexed _exitNum, uint256 _amount)",
      "function calculateL2TokenAddress(address l1ERC20) view returns (address)",
      "function cloneableProxyHash() view returns (bytes32)",
      "function counterpartGateway() view returns (address)",
      "function encodeWithdrawal(uint256 _exitNum, address _initialDestination) pure returns (bytes32)",
      "function finalizeInboundTransfer(address _token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getExternalCall(uint256 _exitNum, address _initialDestination, bytes _initialData) view returns (address target, bytes data)",
      "function getOutboundCalldata(address _token, address _from, address _to, uint256 _amount, bytes _data) view returns (bytes outboundCalldata)",
      "function inbox() view returns (address)",
      "function initialize(address _l2Counterpart, address _router, address _inbox, bytes32 _cloneableProxyHash, address _l2BeaconProxyFactory)",
      "function l2BeaconProxyFactory() view returns (address)",
      "function outboundTransfer(address _l1Token, address _to, uint256 _amount, uint256 _maxGas, uint256 _gasPriceBid, bytes _data) payable returns (bytes res)",
      "function outboundTransferCustomRefund(address _l1Token, address _refundTo, address _to, uint256 _amount, uint256 _maxGas, uint256 _gasPriceBid, bytes _data) payable returns (bytes res)",
      "function postUpgradeInit()",
      "function redirectedExits(bytes32) view returns (bool isExit, address _newTo, bytes _newData)",
      "function router() view returns (address)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function transferExitAndCall(uint256 _exitNum, address _initialDestination, address _newDestination, bytes _newData, bytes _data)",
      "function whitelist() view returns (address)"
    ]
  }
}
