{
  "name": "eigenlayer",
  "chain": "ethereum",
  "blockNumber": 18940531,
  "configHash": "0x3974e7d1766b73f35e185f57197c0de5a5132487debf8d399ff6bdaf89b76e80",
  "version": 3,
  "contracts": [
    {
      "name": "DepositContract",
      "address": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1602667372,
      "values": {
        "get_deposit_count": "0x8499110000000000",
        "get_deposit_root": "0xfeac8ead126abc7dae612804a0e2ca27f2be2af04a171fb9024b8f2d17f00626"
      }
    },
    {
      "name": "PauserRegistry",
      "address": "0x0c431C66F4dE941d089625E5B423D00707977060",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686348935,
      "values": {
        "unpauser": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "swETH-Strategy",
      "address": "0x0Fe4F44beE93503346A3Ac9EE5A26b130a5796d6",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "200000000000000000000000",
          "200000000000000000000000"
        ],
        "maxPerDeposit": "200000000000000000000000",
        "maxTotalDeposits": "200000000000000000000000",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "114115637388189204452901",
        "underlyingToken": "0xf951E335afb289353dc249e82926178EaC7DEd78"
      },
      "derivedName": "StrategyBaseTVLLimits"
    },
    {
      "name": "ankrETH-Strategy",
      "address": "0x13760F50a9d7377e4F20CB8CF9e4c26586c658ff",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "200000000000000000000000",
          "200000000000000000000000"
        ],
        "maxPerDeposit": "200000000000000000000000",
        "maxTotalDeposits": "200000000000000000000000",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "980627544214885347522",
        "underlyingToken": "0xE95A203B1a91a908F9B9CE46459d101078c2c3cb"
      },
      "derivedName": "StrategyBaseTVLLimits"
    },
    {
      "name": "rETH-Strategy",
      "address": "0x1BeE69b7dFFfA4E2d53C2a2Df135C388AD25dCD2",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1686349019,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "200000000000000000000000",
          "200000000000000000000000"
        ],
        "maxPerDeposit": "200000000000000000000000",
        "maxTotalDeposits": "200000000000000000000000",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "53657218352539511010189",
        "underlyingToken": "0xae78736Cd615f374D3085123A210448E74Fc6393"
      },
      "derivedName": "StrategyBaseTVLLimits"
    },
    {
      "name": "GnosisSafe",
      "address": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686681203,
      "values": {
        "domainSeparator": "0xbc80366740d76b8af95de2e845557588b8a3dc40db68b5b15b8f1cb36a4c7e45",
        "getChainId": 1,
        "getOwners": [
          "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF",
          "0xFEA47018D632A77bA579846c840d5706705Dc598"
        ],
        "getThreshold": 1,
        "nonce": 3,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "DelegationManager",
      "address": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xf97E97649Da958d290e84E6D571c32F4b7F475e4",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xf97E97649Da958d290e84E6D571c32F4b7F475e4"],
      "sinceTimestamp": 1686348935,
      "values": {
        "DELEGATION_TYPEHASH": "0xb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c",
        "DOMAIN_SEPARATOR": "0x9bba7f98dd592dbd3fdbeef9fdebb4e19f8661950cb5dcc435fcad7824975fe1",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      },
      "derivedName": "DelegationManager"
    },
    {
      "name": "cbETH-Strategy",
      "address": "0x54945180dB7943c0ed0FEE7EdaB2Bd24620256bc",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1686349019,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "200000000000000000000000",
          "200000000000000000000000"
        ],
        "maxPerDeposit": "200000000000000000000000",
        "maxTotalDeposits": "200000000000000000000000",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "27127472259348371550941",
        "underlyingToken": "0xBe9895146f7AF43049ca1c1AE358B0541Ea49704"
      },
      "derivedName": "StrategyBaseTVLLimits"
    },
    {
      "name": "osETH-Strategy",
      "address": "0x57ba429517c3473B6d34CA9aCd56c0e735b94c02",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "200000000000000000000000",
          "200000000000000000000000"
        ],
        "maxPerDeposit": "200000000000000000000000",
        "maxTotalDeposits": "200000000000000000000000",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "15694327098602740402168",
        "underlyingToken": "0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38"
      },
      "derivedName": "StrategyBaseTVLLimits"
    },
    {
      "name": "UpgradeableBeacon",
      "address": "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686348959,
      "values": {
        "implementation": "0x5c86e9609fbBc1B754D0FD5a4963Fdf0F5b99dA7",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "EigenPod",
      "address": "0x5c86e9609fbBc1B754D0FD5a4963Fdf0F5b99dA7",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686348959,
      "values": {
        "delayedWithdrawalRouter": "0x7Fe7E9CC0F274d2435AD5d56D5fa73E47F6A23D8",
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "ethPOS": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "hasRestaked": false,
        "mostRecentWithdrawalBlockNumber": 0,
        "podOwner": "0x0000000000000000000000000000000000000000",
        "REQUIRED_BALANCE_GWEI": 31000000000,
        "REQUIRED_BALANCE_WEI": "31000000000000000000",
        "restakedExecutionLayerGwei": 0
      }
    },
    {
      "name": "wBETH-Strategy",
      "address": "0x7CA911E83dabf90C90dD3De5411a10F1A6112184",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "200000000000000000000000",
          "200000000000000000000000"
        ],
        "maxPerDeposit": "200000000000000000000000",
        "maxTotalDeposits": "200000000000000000000000",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "13724068051403208200856",
        "underlyingToken": "0xa2E3356610840701BDf5611a53974510Ae27E2e1"
      },
      "derivedName": "StrategyBaseTVLLimits"
    },
    {
      "name": "DelayedWithdrawalRouter",
      "address": "0x7Fe7E9CC0F274d2435AD5d56D5fa73E47F6A23D8",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x44Bcb0E01CD0C5060D4Bb1A07b42580EF983E2AF",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0x44Bcb0E01CD0C5060D4Bb1A07b42580EF983E2AF"],
      "sinceTimestamp": 1686348959,
      "values": {
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "MAX_WITHDRAWAL_DELAY_BLOCKS": 50400,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "withdrawalDelayBlocks": 50400
      }
    },
    {
      "name": "StrategyManager",
      "address": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x5d25EEf8CfEdaA47d31fE2346726dE1c21e342Fb",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0x5d25EEf8CfEdaA47d31fE2346726dE1c21e342Fb"],
      "sinceTimestamp": 1686348947,
      "values": {
        "beaconChainETHStrategy": "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "DEPOSIT_TYPEHASH": "0x0a564d4cfe5cb0d4ee082aab2ca54b8c48e129485a8f7c77766ab5ef0c3566f1",
        "DOMAIN_SEPARATOR": "0xdaba058ab21f198a04ec80cf0d39f943660a92a99bda5de5016f923f7e4962ef",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "eigenPodManager": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
        "MAX_WITHDRAWAL_DELAY_BLOCKS": 50400,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 1,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "strategies": [
          "0x54945180dB7943c0ed0FEE7EdaB2Bd24620256bc",
          "0x93c4b944D05dfe6df7645A86cd2206016c51564D",
          "0x1BeE69b7dFFfA4E2d53C2a2Df135C388AD25dCD2",
          "0x9d7eD45EE2E8FC5482fa2428f15C971e6369011d",
          "0x13760F50a9d7377e4F20CB8CF9e4c26586c658ff",
          "0xa4C637e0F704745D182e4D38cAb7E7485321d059",
          "0x57ba429517c3473B6d34CA9aCd56c0e735b94c02",
          "0x0Fe4F44beE93503346A3Ac9EE5A26b130a5796d6",
          "0x7CA911E83dabf90C90dD3De5411a10F1A6112184"
        ],
        "strategyWhitelister": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "withdrawalDelayBlocks": 50400
      },
      "derivedName": "StrategyManager"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686348935,
      "values": {
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111"
      }
    },
    {
      "name": "EigenPodManager",
      "address": "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xEB86a5c40FdE917E6feC440aBbCDc80E3862e111",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xEB86a5c40FdE917E6feC440aBbCDc80E3862e111"],
      "sinceTimestamp": 1686348947,
      "values": {
        "beaconChainOracle": "0x0000000000000000000000000000000000000000",
        "eigenPodBeacon": "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073",
        "ethPOS": "0x00000000219ab540356cBB839Cbe05303d7705Fa",
        "maxPods": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "numPods": 4698,
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": 30,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "slasher": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      }
    },
    {
      "name": "stETH-Strategy",
      "address": "0x93c4b944D05dfe6df7645A86cd2206016c51564D",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1686349019,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "200000000000000000000000",
          "200000000000000000000000"
        ],
        "maxPerDeposit": "200000000000000000000000",
        "maxTotalDeposits": "200000000000000000000000",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "195505049858163898851372",
        "underlyingToken": "0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84"
      },
      "derivedName": "StrategyBaseTVLLimits"
    },
    {
      "name": "ETHx-Strategy",
      "address": "0x9d7eD45EE2E8FC5482fa2428f15C971e6369011d",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "200000000000000000000000",
          "200000000000000000000000"
        ],
        "maxPerDeposit": "200000000000000000000000",
        "maxTotalDeposits": "200000000000000000000000",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "49287887835749921265370",
        "underlyingToken": "0xA35b1B31Ce002FBF2058D22F30f95D405200A15b"
      },
      "derivedName": "StrategyBaseTVLLimits"
    },
    {
      "name": "OETH-Strategy",
      "address": "0xa4C637e0F704745D182e4D38cAb7E7485321d059",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3"],
      "sinceTimestamp": 1701791243,
      "values": {
        "explanation": "Base Strategy implementation to inherit from for more complex implementations",
        "getTVLLimits": [
          "200000000000000000000000",
          "200000000000000000000000"
        ],
        "maxPerDeposit": "200000000000000000000000",
        "maxTotalDeposits": "200000000000000000000000",
        "paused": 0,
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A",
        "totalShares": "11303271791854234006729",
        "underlyingToken": "0x856c4Efb76C1D1AE02e20CEB03A2A6a08b0b8dC3"
      },
      "derivedName": "StrategyBaseTVLLimits"
    },
    {
      "name": "Timelock",
      "address": "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1686370679,
      "values": {
        "admin": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
        "delay": 864000,
        "GRACE_PERIOD": 1209600,
        "MAXIMUM_DELAY": 2592000,
        "MINIMUM_DELAY": 172800,
        "pendingAdmin": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0xBE1685C81aA44FF9FB319dD389addd9374383e90",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686327791,
      "values": {
        "domainSeparator": "0x34c8be0f1205a420b291c5ce97375b669d2d120e32d7aa5ea9f2497a0fbcc3e2",
        "getChainId": 1,
        "getOwners": [
          "0xe479a0839F13117f42142AD6cE71B49a97c1c928",
          "0x422e2F724faFE75F3635458aD7D3Ac803DCD7ff1",
          "0xeD7Ef087d1C01ecCA9a9688a44aaeDDEf4ea560E",
          "0x7e0b47E52b567fB6717f8ACAeD3F4591759F22fF",
          "0xe7fFd467F7526abf9c8796EDeE0AD30110419127"
        ],
        "getThreshold": 3,
        "nonce": 16,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "Slasher",
      "address": "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xef31c292801f24f16479DD83197F1E6AeBb8d6d8",
        "admin": "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444"
      },
      "implementations": ["0xef31c292801f24f16479DD83197F1E6AeBb8d6d8"],
      "sinceTimestamp": 1686348947,
      "values": {
        "delegation": "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A",
        "owner": "0x369e6F597e22EaB55fFb173C6d9cD234BD699111",
        "paused": "115792089237316195423570985008687907853269984665640564039457584007913129639935",
        "pauserRegistry": "0x0c431C66F4dE941d089625E5B423D00707977060",
        "strategyManager": "0x858646372CC42E1A627fcE94aa7A7033e7CF075A"
      },
      "derivedName": "Slasher"
    },
    {
      "name": "GnosisSafe",
      "address": "0xFEA47018D632A77bA579846c840d5706705Dc598",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686680867,
      "values": {
        "domainSeparator": "0x80ea1f4244338ed9d96d172e60fd4459f4a8237651f29e743de9096eefa5c0fa",
        "getChainId": 1,
        "getOwners": [
          "0x17919FAC7024d5b770322E5Cb81607D247654116",
          "0x34C37613e1680efD9e203C979658e1d058b4B2BC",
          "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
          "0x80cb2DA66A3ccb6064f16B15B6ae11d8E089C6D7",
          "0x313011Ee87b12700E29B0D1136Ae3d64665F3939",
          "0x97b4A6E0471A7c5906fF1Cc2a5970ed569B04815",
          "0x65C4799061c0D1e3E87ADdB65b02E92a558F842F",
          "0xe37756BEdDC89e94A8d557fd5b95a4D2a57e9D60",
          "0x8ffCF07A59631f0578f3E84B51C48cF0dEADCd95",
          "0xAF4D94Cd299211de542530399290877E2c85F061",
          "0xe8F09A9D42aEA0a3B393aD06F25CF512eA51707e",
          "0x6A662c5DdCe0b76BD081b8A4ec3A4F8a671b0b1f",
          "0x33E816008E7bc7798A73d0eaa640CC24f34d1626"
        ],
        "getThreshold": 9,
        "nonce": 3,
        "VERSION": "1.3.0"
      }
    }
  ],
  "eoas": [
    "0x17919FAC7024d5b770322E5Cb81607D247654116",
    "0x313011Ee87b12700E29B0D1136Ae3d64665F3939",
    "0x33E816008E7bc7798A73d0eaa640CC24f34d1626",
    "0x34C37613e1680efD9e203C979658e1d058b4B2BC",
    "0x422e2F724faFE75F3635458aD7D3Ac803DCD7ff1",
    "0x65C4799061c0D1e3E87ADdB65b02E92a558F842F",
    "0x6A662c5DdCe0b76BD081b8A4ec3A4F8a671b0b1f",
    "0x72Ff26D9517324eEFA89A48B75c5df41132c4f54",
    "0x7e0b47E52b567fB6717f8ACAeD3F4591759F22fF",
    "0x80cb2DA66A3ccb6064f16B15B6ae11d8E089C6D7",
    "0x8ffCF07A59631f0578f3E84B51C48cF0dEADCd95",
    "0x97b4A6E0471A7c5906fF1Cc2a5970ed569B04815",
    "0xAF4D94Cd299211de542530399290877E2c85F061",
    "0xbeaC0eeEeeeeEEeEeEEEEeeEEeEeeeEeeEEBEaC0",
    "0xe37756BEdDC89e94A8d557fd5b95a4D2a57e9D60",
    "0xe479a0839F13117f42142AD6cE71B49a97c1c928",
    "0xe7fFd467F7526abf9c8796EDeE0AD30110419127",
    "0xe8F09A9D42aEA0a3B393aD06F25CF512eA51707e",
    "0xeD7Ef087d1C01ecCA9a9688a44aaeDDEf4ea560E"
  ],
  "abis": {
    "0x00000000219ab540356cBB839Cbe05303d7705Fa": [
      "constructor()",
      "event DepositEvent(bytes pubkey, bytes withdrawal_credentials, bytes amount, bytes signature, bytes index)",
      "function deposit(bytes pubkey, bytes withdrawal_credentials, bytes signature, bytes32 deposit_data_root) payable",
      "function get_deposit_count() view returns (bytes)",
      "function get_deposit_root() view returns (bytes32)",
      "function supportsInterface(bytes4 interfaceId) pure returns (bool)"
    ],
    "0x0c431C66F4dE941d089625E5B423D00707977060": [
      "constructor(address[] _pausers, address _unpauser)",
      "event PauserStatusChanged(address pauser, bool canPause)",
      "event UnpauserChanged(address previousUnpauser, address newUnpauser)",
      "function isPauser(address) view returns (bool)",
      "function setIsPauser(address newPauser, bool canPause)",
      "function setUnpauser(address newUnpauser)",
      "function unpauser() view returns (address)"
    ],
    "0x0Fe4F44beE93503346A3Ac9EE5A26b130a5796d6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x13760F50a9d7377e4F20CB8CF9e4c26586c658ff": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x1BeE69b7dFFfA4E2d53C2a2Df135C388AD25dCD2": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x369e6F597e22EaB55fFb173C6d9cD234BD699111": [
      "constructor(address _singleton)"
    ],
    "0x39053D51B77DC0d36036Fc1fCc8Cb819df8Ef37A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x44Bcb0E01CD0C5060D4Bb1A07b42580EF983E2AF": [
      "constructor(address _eigenPodManager)",
      "event DelayedWithdrawalCreated(address podOwner, address recipient, uint256 amount, uint256 index)",
      "event DelayedWithdrawalsClaimed(address recipient, uint256 amountClaimed, uint256 delayedWithdrawalsCompleted)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "event WithdrawalDelayBlocksSet(uint256 previousValue, uint256 newValue)",
      "function MAX_WITHDRAWAL_DELAY_BLOCKS() view returns (uint256)",
      "function canClaimDelayedWithdrawal(address user, uint256 index) view returns (bool)",
      "function claimDelayedWithdrawals(uint256 maxNumberOfDelayedWithdrawalsToClaim)",
      "function claimDelayedWithdrawals(address recipient, uint256 maxNumberOfDelayedWithdrawalsToClaim)",
      "function createDelayedWithdrawal(address podOwner, address recipient) payable",
      "function eigenPodManager() view returns (address)",
      "function getClaimableUserDelayedWithdrawals(address user) view returns (tuple(uint224 amount, uint32 blockCreated)[])",
      "function getUserDelayedWithdrawals(address user) view returns (tuple(uint224 amount, uint32 blockCreated)[])",
      "function initialize(address initOwner, address _pauserRegistry, uint256 initPausedStatus, uint256 _withdrawalDelayBlocks)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setWithdrawalDelayBlocks(uint256 newValue)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function userDelayedWithdrawalByIndex(address user, uint256 index) view returns (tuple(uint224 amount, uint32 blockCreated))",
      "function userWithdrawals(address user) view returns (tuple(uint256 delayedWithdrawalsCompleted, tuple(uint224 amount, uint32 blockCreated)[] delayedWithdrawals))",
      "function userWithdrawalsLength(address user) view returns (uint256)",
      "function withdrawalDelayBlocks() view returns (uint256)"
    ],
    "0x54945180dB7943c0ed0FEE7EdaB2Bd24620256bc": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x57ba429517c3473B6d34CA9aCd56c0e735b94c02": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x5a2a4F2F3C18f09179B6703e63D9eDD165909073": [
      "constructor(address implementation_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)"
    ],
    "0x5c86e9609fbBc1B754D0FD5a4963Fdf0F5b99dA7": [
      "constructor(address _ethPOS, address _delayedWithdrawalRouter, address _eigenPodManager, uint256 _REQUIRED_BALANCE_WEI)",
      "event EigenPodStaked(bytes pubkey)",
      "event FullWithdrawalRedeemed(uint40 validatorIndex, address indexed recipient, uint64 withdrawalAmountGwei)",
      "event Initialized(uint8 version)",
      "event PartialWithdrawalRedeemed(uint40 validatorIndex, address indexed recipient, uint64 partialWithdrawalAmountGwei)",
      "event RestakedBeaconChainETHWithdrawn(address indexed recipient, uint256 amount)",
      "event ValidatorOvercommitted(uint40 validatorIndex)",
      "event ValidatorRestaked(uint40 validatorIndex)",
      "function REQUIRED_BALANCE_GWEI() view returns (uint64)",
      "function REQUIRED_BALANCE_WEI() view returns (uint256)",
      "function delayedWithdrawalRouter() view returns (address)",
      "function eigenPodManager() view returns (address)",
      "function ethPOS() view returns (address)",
      "function hasRestaked() view returns (bool)",
      "function initialize(address _podOwner)",
      "function mostRecentWithdrawalBlockNumber() view returns (uint64)",
      "function podOwner() view returns (address)",
      "function provenPartialWithdrawal(uint40, uint64) view returns (bool)",
      "function restakedExecutionLayerGwei() view returns (uint64)",
      "function stake(bytes pubkey, bytes signature, bytes32 depositDataRoot) payable",
      "function validatorStatus(uint40) view returns (uint8)",
      "function verifyAndProcessWithdrawal(tuple(bytes blockHeaderProof, bytes withdrawalProof, bytes slotProof, bytes executionPayloadProof, bytes blockNumberProof, uint64 blockHeaderRootIndex, uint64 withdrawalIndex, bytes32 blockHeaderRoot, bytes32 blockBodyRoot, bytes32 slotRoot, bytes32 blockNumberRoot, bytes32 executionPayloadRoot) withdrawalProofs, bytes validatorFieldsProof, bytes32[] validatorFields, bytes32[] withdrawalFields, uint256 beaconChainETHStrategyIndex, uint64 oracleBlockNumber)",
      "function verifyOvercommittedStake(uint40 validatorIndex, tuple(bytes validatorFieldsProof, bytes validatorBalanceProof, bytes32 balanceRoot) proofs, bytes32[] validatorFields, uint256 beaconChainETHStrategyIndex, uint64 oracleBlockNumber)",
      "function verifyWithdrawalCredentialsAndBalance(uint64 oracleBlockNumber, uint40 validatorIndex, tuple(bytes validatorFieldsProof, bytes validatorBalanceProof, bytes32 balanceRoot) proofs, bytes32[] validatorFields)",
      "function withdrawBeforeRestaking()",
      "function withdrawRestakedBeaconChainETH(address recipient, uint256 amountWei)"
    ],
    "0x5d25EEf8CfEdaA47d31fE2346726dE1c21e342Fb": [
      "constructor(address _delegation, address _eigenPodManager, address _slasher)",
      "event Deposit(address depositor, address token, address strategy, uint256 shares)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event ShareWithdrawalQueued(address depositor, uint96 nonce, address strategy, uint256 shares)",
      "event StrategyAddedToDepositWhitelist(address strategy)",
      "event StrategyRemovedFromDepositWhitelist(address strategy)",
      "event StrategyWhitelisterChanged(address previousAddress, address newAddress)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "event WithdrawalCompleted(address indexed depositor, uint96 nonce, address indexed withdrawer, bytes32 withdrawalRoot)",
      "event WithdrawalDelayBlocksSet(uint256 previousValue, uint256 newValue)",
      "event WithdrawalQueued(address depositor, uint96 nonce, address withdrawer, address delegatedAddress, bytes32 withdrawalRoot)",
      "function DEPOSIT_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function MAX_WITHDRAWAL_DELAY_BLOCKS() view returns (uint256)",
      "function addStrategiesToDepositWhitelist(address[] strategiesToWhitelist)",
      "function beaconChainETHSharesToDecrementOnWithdrawal(address) view returns (uint256)",
      "function beaconChainETHStrategy() view returns (address)",
      "function calculateWithdrawalRoot(tuple(address[] strategies, uint256[] shares, address depositor, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress) queuedWithdrawal) pure returns (bytes32)",
      "function completeQueuedWithdrawal(tuple(address[] strategies, uint256[] shares, address depositor, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress) queuedWithdrawal, address[] tokens, uint256 middlewareTimesIndex, bool receiveAsTokens)",
      "function completeQueuedWithdrawals(tuple(address[] strategies, uint256[] shares, address depositor, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress)[] queuedWithdrawals, address[][] tokens, uint256[] middlewareTimesIndexes, bool[] receiveAsTokens)",
      "function delegation() view returns (address)",
      "function depositBeaconChainETH(address staker, uint256 amount)",
      "function depositIntoStrategy(address strategy, address token, uint256 amount) returns (uint256 shares)",
      "function depositIntoStrategyWithSignature(address strategy, address token, uint256 amount, address staker, uint256 expiry, bytes signature) returns (uint256 shares)",
      "function eigenPodManager() view returns (address)",
      "function getDeposits(address depositor) view returns (address[], uint256[])",
      "function initialize(address initialOwner, address initialStrategyWhitelister, address _pauserRegistry, uint256 initialPausedStatus, uint256 _withdrawalDelayBlocks)",
      "function nonces(address) view returns (uint256)",
      "function numWithdrawalsQueued(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function queueWithdrawal(uint256[] strategyIndexes, address[] strategies, uint256[] shares, address withdrawer, bool undelegateIfPossible) returns (bytes32)",
      "function recordOvercommittedBeaconChainETH(address overcommittedPodOwner, uint256 beaconChainETHStrategyIndex, uint256 amount)",
      "function removeStrategiesFromDepositWhitelist(address[] strategiesToRemoveFromWhitelist)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setStrategyWhitelister(address newStrategyWhitelister)",
      "function setWithdrawalDelayBlocks(uint256 _withdrawalDelayBlocks)",
      "function slashQueuedWithdrawal(address recipient, tuple(address[] strategies, uint256[] shares, address depositor, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, uint32 withdrawalStartBlock, address delegatedAddress) queuedWithdrawal, address[] tokens, uint256[] indicesToSkip)",
      "function slashShares(address slashedAddress, address recipient, address[] strategies, address[] tokens, uint256[] strategyIndexes, uint256[] shareAmounts)",
      "function slasher() view returns (address)",
      "function stakerStrategyList(address, uint256) view returns (address)",
      "function stakerStrategyListLength(address staker) view returns (uint256)",
      "function stakerStrategyShares(address, address) view returns (uint256)",
      "function strategyIsWhitelistedForDeposit(address) view returns (bool)",
      "function strategyWhitelister() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function undelegate()",
      "function unpause(uint256 newPausedStatus)",
      "function withdrawalDelayBlocks() view returns (uint256)",
      "function withdrawalRootPending(bytes32) view returns (bool)"
    ],
    "0x7CA911E83dabf90C90dD3De5411a10F1A6112184": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x7Fe7E9CC0F274d2435AD5d56D5fa73E47F6A23D8": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x858646372CC42E1A627fcE94aa7A7033e7CF075A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x8b9566AdA63B64d1E1dcF1418b43fd1433b72444": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x91E677b07F7AF907ec9a428aafA9fc14a0d3A338": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x93c4b944D05dfe6df7645A86cd2206016c51564D": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x9d7eD45EE2E8FC5482fa2428f15C971e6369011d": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xa4C637e0F704745D182e4D38cAb7E7485321d059": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xA6Db1A8C5a981d1536266D2a393c5F8dDb210EAF": [
      "constructor(address admin_, uint256 delay_)",
      "event CancelTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event ExecuteTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "event NewAdmin(address indexed newAdmin)",
      "event NewDelay(uint256 indexed newDelay)",
      "event NewPendingAdmin(address indexed newPendingAdmin)",
      "event QueueTransaction(bytes32 indexed txHash, address indexed target, uint256 value, string signature, bytes data, uint256 eta)",
      "function GRACE_PERIOD() view returns (uint256)",
      "function MAXIMUM_DELAY() view returns (uint256)",
      "function MINIMUM_DELAY() view returns (uint256)",
      "function acceptAdmin()",
      "function admin() view returns (address)",
      "function cancelTransaction(address target, uint256 value, string signature, bytes data, uint256 eta)",
      "function delay() view returns (uint256)",
      "function executeTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) payable returns (bytes)",
      "function pendingAdmin() view returns (address)",
      "function queueTransaction(address target, uint256 value, string signature, bytes data, uint256 eta) returns (bytes32)",
      "function queuedTransactions(bytes32) view returns (bool)",
      "function setDelay(uint256 delay_)",
      "function setPendingAdmin(address pendingAdmin_)"
    ],
    "0xBE1685C81aA44FF9FB319dD389addd9374383e90": [
      "constructor(address _singleton)"
    ],
    "0xD92145c07f8Ed1D392c1B88017934E301CC1c3Cd": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xdfdA04f980bE6A64E3607c95Ca26012Ab9aA46d3": [
      "constructor(address _strategyManager)",
      "event Initialized(uint8 version)",
      "event MaxPerDepositUpdated(uint256 previousValue, uint256 newValue)",
      "event MaxTotalDepositsUpdated(uint256 previousValue, uint256 newValue)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function deposit(address token, uint256 amount) returns (uint256 newShares)",
      "function explanation() pure returns (string)",
      "function getTVLLimits() view returns (uint256, uint256)",
      "function initialize(uint256 _maxPerDeposit, uint256 _maxTotalDeposits, address _underlyingToken, address _pauserRegistry)",
      "function initialize(address _underlyingToken, address _pauserRegistry)",
      "function maxPerDeposit() view returns (uint256)",
      "function maxTotalDeposits() view returns (uint256)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function setTVLLimits(uint256 newMaxPerDeposit, uint256 newMaxTotalDeposits)",
      "function shares(address user) view returns (uint256)",
      "function sharesToUnderlying(uint256 amountShares) view returns (uint256)",
      "function sharesToUnderlyingView(uint256 amountShares) view returns (uint256)",
      "function strategyManager() view returns (address)",
      "function totalShares() view returns (uint256)",
      "function underlyingToShares(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToSharesView(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToken() view returns (address)",
      "function unpause(uint256 newPausedStatus)",
      "function userUnderlying(address user) returns (uint256)",
      "function userUnderlyingView(address user) view returns (uint256)",
      "function withdraw(address depositor, address token, uint256 amountShares)"
    ],
    "0xEB86a5c40FdE917E6feC440aBbCDc80E3862e111": [
      "constructor(address _ethPOS, address _eigenPodBeacon, address _strategyManager, address _slasher)",
      "event BeaconChainETHDeposited(address indexed podOwner, uint256 amount)",
      "event BeaconOracleUpdated(address indexed newOracleAddress)",
      "event Initialized(uint8 version)",
      "event MaxPodsUpdated(uint256 previousValue, uint256 newValue)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event PodDeployed(address indexed eigenPod, address indexed podOwner)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function beaconChainOracle() view returns (address)",
      "function createPod()",
      "function eigenPodBeacon() view returns (address)",
      "function ethPOS() view returns (address)",
      "function getBeaconChainStateRoot(uint64 blockNumber) view returns (bytes32)",
      "function getPod(address podOwner) view returns (address)",
      "function hasPod(address podOwner) view returns (bool)",
      "function initialize(uint256 _maxPods, address _beaconChainOracle, address initialOwner, address _pauserRegistry, uint256 _initPausedStatus)",
      "function maxPods() view returns (uint256)",
      "function numPods() view returns (uint256)",
      "function owner() view returns (address)",
      "function ownerToPod(address) view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function recordOvercommittedBeaconChainETH(address podOwner, uint256 beaconChainETHStrategyIndex, uint256 amount)",
      "function renounceOwnership()",
      "function restakeBeaconChainETH(address podOwner, uint256 amount)",
      "function setMaxPods(uint256 newMaxPods)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function slasher() view returns (address)",
      "function stake(bytes pubkey, bytes signature, bytes32 depositDataRoot) payable",
      "function strategyManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function updateBeaconChainOracle(address newBeaconChainOracle)",
      "function withdrawRestakedBeaconChainETH(address podOwner, address recipient, uint256 amount)"
    ],
    "0xef31c292801f24f16479DD83197F1E6AeBb8d6d8": [
      "constructor(address _strategyManager, address _delegation)",
      "event FrozenStatusReset(address indexed previouslySlashedAddress)",
      "event Initialized(uint8 version)",
      "event MiddlewareTimesAdded(address operator, uint256 index, uint32 stalestUpdateBlock, uint32 latestServeUntilBlock)",
      "event OperatorFrozen(address indexed slashedOperator, address indexed slashingContract)",
      "event OptedIntoSlashing(address indexed operator, address indexed contractAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event SlashingAbilityRevoked(address indexed operator, address indexed contractAddress, uint32 contractCanSlashOperatorUntilBlock)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function canSlash(address toBeSlashed, address slashingContract) view returns (bool)",
      "function canWithdraw(address operator, uint32 withdrawalStartBlock, uint256 middlewareTimesIndex) view returns (bool)",
      "function contractCanSlashOperatorUntilBlock(address operator, address serviceContract) view returns (uint32)",
      "function delegation() view returns (address)",
      "function freezeOperator(address toBeFrozen)",
      "function getCorrectValueForInsertAfter(address operator, uint32 updateBlock) view returns (uint256)",
      "function getMiddlewareTimesIndexBlock(address operator, uint32 index) view returns (uint32)",
      "function getMiddlewareTimesIndexServeUntilBlock(address operator, uint32 index) view returns (uint32)",
      "function getPreviousWhitelistedContractByUpdate(address operator, uint256 node) view returns (bool, uint256)",
      "function initialize(address initialOwner, address _pauserRegistry, uint256 initialPausedStatus)",
      "function isFrozen(address staker) view returns (bool)",
      "function latestUpdateBlock(address operator, address serviceContract) view returns (uint32)",
      "function middlewareTimesLength(address operator) view returns (uint256)",
      "function operatorToMiddlewareTimes(address operator, uint256 arrayIndex) view returns (tuple(uint32 stalestUpdateBlock, uint32 latestServeUntilBlock))",
      "function operatorWhitelistedContractsLinkedListEntry(address operator, address node) view returns (bool, uint256, uint256)",
      "function operatorWhitelistedContractsLinkedListSize(address operator) view returns (uint256)",
      "function optIntoSlashing(address contractAddress)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function recordFirstStakeUpdate(address operator, uint32 serveUntilBlock)",
      "function recordLastStakeUpdateAndRevokeSlashingAbility(address operator, uint32 serveUntilBlock)",
      "function recordStakeUpdate(address operator, uint32 updateBlock, uint32 serveUntilBlock, uint256 insertAfter)",
      "function renounceOwnership()",
      "function resetFrozenStatus(address[] frozenAddresses)",
      "function setPauserRegistry(address newPauserRegistry)",
      "function strategyManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function whitelistedContractDetails(address operator, address serviceContract) view returns (tuple(uint32 contractCanSlashOperatorUntilBlock, uint32 latestUpdateBlock))"
    ],
    "0xf97E97649Da958d290e84E6D571c32F4b7F475e4": [
      "constructor(address _strategyManager, address _slasher)",
      "event Initialized(uint8 version)",
      "event OnDelegationReceivedCallFailure(address indexed delegationTerms, bytes32 returnData)",
      "event OnDelegationWithdrawnCallFailure(address indexed delegationTerms, bytes32 returnData)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PauserRegistrySet(address pauserRegistry, address newPauserRegistry)",
      "event RegisterAsOperator(address indexed operator, address indexed delegationTerms)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function DELEGATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function decreaseDelegatedShares(address staker, address[] strategies, uint256[] shares)",
      "function delegateTo(address operator)",
      "function delegateToBySignature(address staker, address operator, uint256 expiry, bytes signature)",
      "function delegatedTo(address) view returns (address)",
      "function delegationTerms(address) view returns (address)",
      "function increaseDelegatedShares(address staker, address strategy, uint256 shares)",
      "function initialize(address initialOwner, address _pauserRegistry, uint256 initialPausedStatus)",
      "function isDelegated(address staker) view returns (bool)",
      "function isNotDelegated(address staker) view returns (bool)",
      "function isOperator(address operator) view returns (bool)",
      "function nonces(address) view returns (uint256)",
      "function operatorShares(address, address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function pauseAll()",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function registerAsOperator(address dt)",
      "function renounceOwnership()",
      "function setPauserRegistry(address newPauserRegistry)",
      "function slasher() view returns (address)",
      "function strategyManager() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function undelegate(address staker)",
      "function unpause(uint256 newPausedStatus)"
    ],
    "0xFEA47018D632A77bA579846c840d5706705Dc598": [
      "constructor(address _singleton)"
    ]
  }
}
