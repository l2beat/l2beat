{
  "name": "mxc",
  "chain": "arbitrum",
  "blockNumber": 231407345,
  "configHash": "0x3134efe881b170a9d308505fb2d8555e4f9fd879f0f184a06511db2340e3ea57",
  "version": 9,
  "contracts": [
    {
      "name": "MxcL1Contract?",
      "address": "0x54D8864e8855A7B66eE42B8F2Eaa0F2E06bd641a",
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": [
        "getBlockFee",
        "getConfig",
        "getProposeReward",
        "getStateVariables",
        "state"
      ],
      "sinceTimestamp": 1689165595,
      "values": {
        "$admin": "0x5D9f59F49B5E5C83c1776c5ADD039a3C955d3B02",
        "$implementation": "0xEe4Cd2139B65b5C38A438B63BdcfeCBF28D88e25",
        "addressManager": "0x931A8fFCcdA64dC441bcca81Bd65Dc0C3d42Af74",
        "getBlockFee": "100000000000000000",
        "getConfig": {
          "chainId": 18686,
          "maxNumProposedBlocks": 604800,
          "ringBufferSize": 604810,
          "maxVerificationsPerTx": 10,
          "blockMaxGasLimit": 6000000,
          "maxTransactionsPerBlock": 79,
          "maxBytesPerTxList": 120000,
          "txListCacheExpiry": 0,
          "proofCooldownPeriod": 7200,
          "systemProofCooldownPeriod": 3600,
          "realProofSkipSize": 0,
          "ethDepositGas": 21000,
          "ethDepositMaxFee": "100000000000000000",
          "minEthDepositsPerBlock": 1,
          "maxEthDepositsPerBlock": 32,
          "maxEthDepositAmount": "10000000000000000000000",
          "minEthDepositAmount": "100000000000000000",
          "relaySignalRoot": false
        },
        "getProposeReward": "4420000000000000000",
        "getStateVariables": {
          "blockFee": 10000000,
          "accBlockFees": 5215560000196,
          "genesisHeight": 110450693,
          "genesisTimestamp": 1689165595,
          "numBlocks": 521893,
          "proofTimeIssued": 48429053,
          "proofTimeTarget": 101,
          "lastVerifiedBlockId": 140,
          "accProposedAt": 889820530882632,
          "nextEthDepositToProcess": 0,
          "numEthDeposits": 0
        },
        "owner": "0xC6D7522f7B012b22Bc365C9C43b3DBf13B9aAfF9",
        "state": {
          "totalStakeMxcTokenBalances": "5947830399998040000000000",
          "genesisHeight": 110450693,
          "genesisTimestamp": 1689165595,
          "adjustmentQuotient": 32000,
          "prevBaseFee": 13365,
          "proposerElectionTimeoutOffset": 0,
          "accProposedAt": 889820530882632,
          "accBlockFees": 5215560000196,
          "numBlocks": 521893,
          "proveMetaReward": 0,
          "blockFee": 10000000,
          "proofTimeIssued": 48429053,
          "lastVerifiedBlockId": 140,
          "proofTimeTarget": 101
        }
      },
      "derivedName": "ProxiedMxcL1"
    },
    {
      "name": "AddressManager?",
      "address": "0x931A8fFCcdA64dC441bcca81Bd65Dc0C3d42Af74",
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1689143056,
      "values": {
        "$admin": "0x5D9f59F49B5E5C83c1776c5ADD039a3C955d3B02",
        "$implementation": "0x07FB797c4B7a471CBFB350AC2044031e13B69897",
        "owner": "0xC6D7522f7B012b22Bc365C9C43b3DBf13B9aAfF9"
      },
      "derivedName": "ProxiedAddressManager"
    },
    {
      "name": "Bridge?",
      "address": "0xA9c5519a7c1d85fB6d6695853787964a0D3d49A6",
      "proxyType": "EIP1967 proxy",
      "ignoreInWatchMode": ["context"],
      "sinceTimestamp": 1689143141,
      "values": {
        "$admin": "0x5D9f59F49B5E5C83c1776c5ADD039a3C955d3B02",
        "$implementation": "0xd1e769572A2D2Fdc3B61622A38cD1A359881e8cC",
        "addressManager": "0x931A8fFCcdA64dC441bcca81Bd65Dc0C3d42Af74",
        "context": {
          "msgHash": "0x0000000000000000000000000000000000000000000000000000000000000001",
          "sender": "0x0000000000000000000000000000000000000001",
          "srcChainId": "115792089237316195423570985008687907853269984665640564039457584007913129639935"
        },
        "owner": "0xC6D7522f7B012b22Bc365C9C43b3DBf13B9aAfF9"
      },
      "derivedName": "ProxiedBridge"
    },
    {
      "name": "SignalService",
      "address": "0xB612eb073ebc8638b8E445D7F15f02400e1d99d8",
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1689143186,
      "values": {
        "$admin": "0x5D9f59F49B5E5C83c1776c5ADD039a3C955d3B02",
        "$implementation": "0x26b946C69F411AE27692BbCD05A398BDDB07F7AA",
        "addressManager": "0x931A8fFCcdA64dC441bcca81Bd65Dc0C3d42Af74",
        "owner": "0xC6D7522f7B012b22Bc365C9C43b3DBf13B9aAfF9"
      },
      "derivedName": "ProxiedSignalService"
    },
    {
      "name": "TokenVault?",
      "address": "0xC31a6C0C1087BBB6E6660F27014aD1321591c641",
      "proxyType": "EIP1967 proxy",
      "sinceTimestamp": 1689143164,
      "values": {
        "$admin": "0x5D9f59F49B5E5C83c1776c5ADD039a3C955d3B02",
        "$implementation": "0x83B6c66865C7DdfB9e81Aca8d14a9b31b02EF78C",
        "addressManager": "0x931A8fFCcdA64dC441bcca81Bd65Dc0C3d42Af74",
        "owner": "0xC6D7522f7B012b22Bc365C9C43b3DBf13B9aAfF9"
      },
      "derivedName": "ProxiedTokenVault"
    }
  ],
  "eoas": [
    { "address": "0x0000000000000000000000000000000000000001" },
    {
      "address": "0x5D9f59F49B5E5C83c1776c5ADD039a3C955d3B02",
      "assignedPermissions": { "admin": {} }
    },
    { "address": "0xC6D7522f7B012b22Bc365C9C43b3DBf13B9aAfF9" }
  ],
  "abis": {
    "0x07FB797c4B7a471CBFB350AC2044031e13B69897": [
      "error EOAOwnerAddressNotAllowed()",
      "event AddressSet(uint256 indexed _domain, bytes32 indexed _name, address _newAddress, address _oldAddress)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getAddress(uint256 domain, bytes32 name) view returns (address addr)",
      "function init()",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setAddress(uint256 domain, bytes32 name, address newAddress)",
      "function transferOwnership(address newOwner)"
    ],
    "0x26b946C69F411AE27692BbCD05A398BDDB07F7AA": [
      "error B_NULL_APP_ADDR()",
      "error B_WRONG_CHAIN_ID()",
      "error B_ZERO_SIGNAL()",
      "error RESOLVER_DENIED()",
      "error RESOLVER_INVALID_ADDR()",
      "error RESOLVER_ZERO_ADDR(uint256 chainId, bytes32 name)",
      "event AddressManagerChanged(address addressManager)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addressManager() view returns (address)",
      "function getSignalSlot(address app, bytes32 signal) pure returns (bytes32 signalSlot)",
      "function init(address _addressManager)",
      "function isSignalReceived(uint256 srcChainId, address app, bytes32 signal, bytes proof) view returns (bool)",
      "function isSignalSent(address app, bytes32 signal) view returns (bool)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function resolve(uint256 chainId, bytes32 name, bool allowZeroAddress) view returns (address)",
      "function resolve(bytes32 name, bool allowZeroAddress) view returns (address)",
      "function sendSignal(bytes32 signal) returns (bytes32 storageSlot)",
      "function setAddressManager(address newAddressManager)",
      "function transferOwnership(address newOwner)"
    ],
    "0x54D8864e8855A7B66eE42B8F2Eaa0F2E06bd641a": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x83B6c66865C7DdfB9e81Aca8d14a9b31b02EF78C": [
      "error RESOLVER_DENIED()",
      "error RESOLVER_INVALID_ADDR()",
      "error RESOLVER_ZERO_ADDR(uint256 chainId, bytes32 name)",
      "error TOKENVAULT_CANONICAL_TOKEN_NOT_FOUND()",
      "error TOKENVAULT_INVALID_AMOUNT()",
      "error TOKENVAULT_INVALID_OWNER()",
      "error TOKENVAULT_INVALID_SENDER()",
      "error TOKENVAULT_INVALID_SRC_CHAIN_ID()",
      "error TOKENVAULT_INVALID_TO()",
      "error TOKENVAULT_INVALID_TOKEN()",
      "error TOKENVAULT_INVALID_VALUE()",
      "error TOKENVAULT_MESSAGE_NOT_FAILED()",
      "event AddressManagerChanged(address addressManager)",
      "event BridgedERC20Deployed(uint256 indexed srcChainId, address indexed canonicalToken, address indexed bridgedToken, string canonicalTokenSymbol, string canonicalTokenName, uint8 canonicalTokenDecimal)",
      "event ERC20Received(bytes32 indexed msgHash, address indexed from, address indexed to, uint256 srcChainId, address token, uint256 amount)",
      "event ERC20Released(bytes32 indexed msgHash, address indexed from, address token, uint256 amount)",
      "event ERC20Sent(bytes32 indexed msgHash, address indexed from, address indexed to, uint256 destChainId, address token, uint256 amount)",
      "event EtherReleased(address indexed to, uint256 amount)",
      "event EtherSent(bytes32 indexed msgHash, address indexed from, address indexed to, uint256 destChainId, uint256 amount)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addressManager() view returns (address)",
      "function bridgedToCanonical(address bridgedAddress) view returns (uint256 chainId, address addr, uint8 decimals, string symbol, string name)",
      "function canonicalToBridged(uint256 chainId, address canonicalAddress) view returns (address bridgedAddress)",
      "function depositToWETH() payable",
      "function init(address addressManager)",
      "function isBridgedToken(address tokenAddress) view returns (bool isBridged)",
      "function messageDeposits(bytes32 msgHash) view returns (address token, uint256 amount)",
      "function owner() view returns (address)",
      "function receiveERC20(tuple(uint256 chainId, address addr, uint8 decimals, string symbol, string name) canonicalToken, address from, address to, uint256 amount)",
      "function receiveMXC(address to, uint256 amount)",
      "function receiveWETH(address to, uint256 amount)",
      "function releaseERC20(tuple(uint256 id, address sender, uint256 srcChainId, uint256 destChainId, address owner, address to, address refundAddress, uint256 depositValue, uint256 callValue, uint256 processingFee, uint256 gasLimit, bytes data, string memo) message, bytes proof)",
      "function releaseEther(address recipient, uint256 amount)",
      "function releaseEther(uint256 amount)",
      "function renounceOwnership()",
      "function resolve(uint256 chainId, bytes32 name, bool allowZeroAddress) view returns (address)",
      "function resolve(bytes32 name, bool allowZeroAddress) view returns (address)",
      "function sendERC20(uint256 destChainId, address to, address token, uint256 amount, uint256 gasLimit, uint256 processingFee, address refundAddress, string memo) payable",
      "function setAddressManager(address newAddressManager)",
      "function transferOwnership(address newOwner)"
    ],
    "0x931A8fFCcdA64dC441bcca81Bd65Dc0C3d42Af74": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xA9c5519a7c1d85fB6d6695853787964a0D3d49A6": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xB612eb073ebc8638b8E445D7F15f02400e1d99d8": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xC31a6C0C1087BBB6E6660F27014aD1321591c641": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd1e769572A2D2Fdc3B61622A38cD1A359881e8cC": [
      "error B_CANNOT_RECEIVE()",
      "error B_DENIED()",
      "error B_DENIED()",
      "error B_ERC20_CANNOT_RECEIVE()",
      "error B_ETHER_RELEASED_ALREADY()",
      "error B_ETHER_RELEASED_ALREADY()",
      "error B_EV_DO_NOT_BURN()",
      "error B_EV_NOT_AUTHORIZED()",
      "error B_EV_PARAM()",
      "error B_FAILED_TRANSFER()",
      "error B_FORBIDDEN()",
      "error B_FORBIDDEN()",
      "error B_GAS_LIMIT()",
      "error B_GAS_LIMIT()",
      "error B_INCORRECT_VALUE()",
      "error B_INCORRECT_VALUE()",
      "error B_INIT_PARAM_ERROR()",
      "error B_MSG_HASH_NULL()",
      "error B_MSG_HASH_NULL()",
      "error B_MSG_NON_RETRIABLE()",
      "error B_MSG_NON_RETRIABLE()",
      "error B_MSG_NOT_FAILED()",
      "error B_MSG_NOT_FAILED()",
      "error B_NULL_APP_ADDR()",
      "error B_OWNER_IS_NULL()",
      "error B_OWNER_IS_NULL()",
      "error B_OWNER_IS_NULL()",
      "error B_SIGNAL_NOT_RECEIVED()",
      "error B_SIGNAL_NOT_RECEIVED()",
      "error B_STATUS_MISMATCH()",
      "error B_STATUS_MISMATCH()",
      "error B_WRONG_CHAIN_ID()",
      "error B_WRONG_CHAIN_ID()",
      "error B_WRONG_CHAIN_ID()",
      "error B_WRONG_CHAIN_ID()",
      "error B_WRONG_CHAIN_ID()",
      "error B_WRONG_TO_ADDRESS()",
      "error B_WRONG_TO_ADDRESS()",
      "error B_ZERO_SIGNAL()",
      "error RESOLVER_DENIED()",
      "error RESOLVER_INVALID_ADDR()",
      "error RESOLVER_ZERO_ADDR(uint256 chainId, bytes32 name)",
      "event AddressManagerChanged(address addressManager)",
      "event DestChainEnabled(uint256 indexed chainId, bool enabled)",
      "event EtherReleased(bytes32 indexed msgHash, address to, uint256 amount)",
      "event Initialized(uint8 version)",
      "event MessageSent(bytes32 indexed msgHash, tuple(uint256 id, address sender, uint256 srcChainId, uint256 destChainId, address owner, address to, address refundAddress, uint256 depositValue, uint256 callValue, uint256 processingFee, uint256 gasLimit, bytes data, string memo) message)",
      "event MessageStatusChanged(bytes32 indexed msgHash, uint8 status, address transactor)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event SignalSent(address sender, bytes32 msgHash)",
      "function addressManager() view returns (address)",
      "function context() view returns (tuple(bytes32 msgHash, address sender, uint256 srcChainId))",
      "function getMessageStatus(bytes32 msgHash) view returns (uint8)",
      "function getMessageStatusSlot(bytes32 msgHash) pure returns (bytes32)",
      "function hashMessage(tuple(uint256 id, address sender, uint256 srcChainId, uint256 destChainId, address owner, address to, address refundAddress, uint256 depositValue, uint256 callValue, uint256 processingFee, uint256 gasLimit, bytes data, string memo) message) pure returns (bytes32)",
      "function init(address _addressManager)",
      "function isDestChainEnabled(uint256 _chainId) view returns (bool enabled)",
      "function isEtherReleased(bytes32 msgHash) view returns (bool)",
      "function isMessageFailed(bytes32 msgHash, uint256 destChainId, bytes proof) view returns (bool)",
      "function isMessageReceived(bytes32 msgHash, uint256 srcChainId, bytes proof) view returns (bool)",
      "function isMessageSent(bytes32 msgHash) view returns (bool)",
      "function owner() view returns (address)",
      "function processMessage(tuple(uint256 id, address sender, uint256 srcChainId, uint256 destChainId, address owner, address to, address refundAddress, uint256 depositValue, uint256 callValue, uint256 processingFee, uint256 gasLimit, bytes data, string memo) message, bytes proof)",
      "function releaseEther(tuple(uint256 id, address sender, uint256 srcChainId, uint256 destChainId, address owner, address to, address refundAddress, uint256 depositValue, uint256 callValue, uint256 processingFee, uint256 gasLimit, bytes data, string memo) message, bytes proof)",
      "function renounceOwnership()",
      "function resolve(uint256 chainId, bytes32 name, bool allowZeroAddress) view returns (address)",
      "function resolve(bytes32 name, bool allowZeroAddress) view returns (address)",
      "function retryMessage(tuple(uint256 id, address sender, uint256 srcChainId, uint256 destChainId, address owner, address to, address refundAddress, uint256 depositValue, uint256 callValue, uint256 processingFee, uint256 gasLimit, bytes data, string memo) message, bool isLastAttempt)",
      "function sendMessage(tuple(uint256 id, address sender, uint256 srcChainId, uint256 destChainId, address owner, address to, address refundAddress, uint256 depositValue, uint256 callValue, uint256 processingFee, uint256 gasLimit, bytes data, string memo) message) payable returns (bytes32 msgHash)",
      "function setAddressManager(address newAddressManager)",
      "function transferOwnership(address newOwner)"
    ],
    "0xEe4Cd2139B65b5C38A438B63BdcfeCBF28D88e25": [
      "error L1_ALREADY_PROVEN()",
      "error L1_ALREADY_PROVEN()",
      "error L1_BLOCK_ID()",
      "error L1_BLOCK_ID()",
      "error L1_BLOCK_ID()",
      "error L1_DEPOSIT_REQUIREMENT()",
      "error L1_ELECTION_INVALID_PROPOSER()",
      "error L1_ELECTION_SPEED()",
      "error L1_ELECTION_SPEED()",
      "error L1_EVIDENCE_MISMATCH(bytes32 expected, bytes32 actual)",
      "error L1_EVIDENCE_MISMATCH(bytes32 expected, bytes32 actual)",
      "error L1_FORK_CHOICE_NOT_FOUND()",
      "error L1_FORK_CHOICE_NOT_FOUND()",
      "error L1_INSUFFICIENT_TOKEN()",
      "error L1_INSUFFICIENT_TOKEN()",
      "error L1_INSUFFICIENT_TOKEN()",
      "error L1_INSUFFICIENT_TOKEN()",
      "error L1_INVALID_CONFIG()",
      "error L1_INVALID_CONFIG()",
      "error L1_INVALID_ETH_DEPOSIT()",
      "error L1_INVALID_EVIDENCE()",
      "error L1_INVALID_EVIDENCE()",
      "error L1_INVALID_METADATA()",
      "error L1_INVALID_METADATA()",
      "error L1_INVALID_PARAM()",
      "error L1_INVALID_PROOF()",
      "error L1_INVALID_PROOF()",
      "error L1_INVALID_PROOF_OVERWRITE()",
      "error L1_INVALID_PROOF_OVERWRITE()",
      "error L1_NOT_SPECIAL_PROVER()",
      "error L1_NOT_SPECIAL_PROVER()",
      "error L1_NOT_UNLOCK()",
      "error L1_ORACLE_PROVER_DISABLED()",
      "error L1_ORACLE_PROVER_DISABLED()",
      "error L1_SAME_PROOF()",
      "error L1_SAME_PROOF()",
      "error L1_SYSTEM_PROVER_DISABLED()",
      "error L1_SYSTEM_PROVER_DISABLED()",
      "error L1_SYSTEM_PROVER_PROHIBITED()",
      "error L1_SYSTEM_PROVER_PROHIBITED()",
      "error L1_TOO_MANY_BLOCKS()",
      "error L1_TOO_MANY_BLOCKS()",
      "error L1_TX_LIST()",
      "error L1_TX_LIST()",
      "error L1_TX_LIST_HASH()",
      "error L1_TX_LIST_NOT_EXIST()",
      "error L1_TX_LIST_NOT_EXIST()",
      "error L1_TX_LIST_RANGE()",
      "error L1_TX_LIST_RANGE()",
      "error Overflow()",
      "error RESOLVER_DENIED()",
      "error RESOLVER_INVALID_ADDR()",
      "error RESOLVER_ZERO_ADDR(uint256 chainId, bytes32 name)",
      "event AddressManagerChanged(address addressManager)",
      "event BlockProposeReward(uint256 indexed id, address proposer, uint256 reward)",
      "event BlockProposed(uint256 indexed id, tuple(uint64 id, uint64 timestamp, uint64 l1Height, bytes32 l1Hash, bytes32 mixHash, bytes32 txListHash, uint24 txListByteStart, uint24 txListByteEnd, uint32 gasLimit, address beneficiary, address treasury, tuple(address recipient, uint96 amount, uint64 id)[] depositsProcessed, uint256 baseFee, uint256 blockReward) meta, uint64 blockFee)",
      "event BlockProven(uint256 indexed id, bytes32 parentHash, bytes32 blockHash, bytes32 signalRoot, address prover, uint32 parentGasUsed)",
      "event BlockProvenReward(uint256 indexed id, address prover, uint256 reward)",
      "event BlockVerified(uint256 indexed id, bytes32 blockHash, uint256 reward)",
      "event CrossChainSynced(uint256 indexed srcHeight, bytes32 blockHash, bytes32 signalRoot)",
      "event EthDeposited(tuple(address recipient, uint96 amount, uint64 id) deposit)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ProofParamsChanged(uint64 proofTimeTarget, uint64 proofTimeIssued, uint64 blockFee, uint16 adjustmentQuotient)",
      "function addressManager() view returns (address)",
      "function depositEtherToL2() payable",
      "function depositMxcToken(uint256 amount)",
      "function getBlock(uint256 blockId) view returns (bytes32 _metaHash, address _proposer, uint64 _proposedAt)",
      "function getBlockFee() view returns (uint64)",
      "function getConfig() pure returns (tuple(uint256 chainId, uint256 maxNumProposedBlocks, uint256 ringBufferSize, uint256 maxVerificationsPerTx, uint64 blockMaxGasLimit, uint64 maxTransactionsPerBlock, uint64 maxBytesPerTxList, uint256 txListCacheExpiry, uint256 proofCooldownPeriod, uint256 systemProofCooldownPeriod, uint256 realProofSkipSize, uint256 ethDepositGas, uint256 ethDepositMaxFee, uint64 minEthDepositsPerBlock, uint64 maxEthDepositsPerBlock, uint96 maxEthDepositAmount, uint96 minEthDepositAmount, bool relaySignalRoot))",
      "function getCrossChainBlockHash(uint256 blockId) view returns (bytes32)",
      "function getCrossChainSignalRoot(uint256 blockId) view returns (bytes32)",
      "function getForkChoice(uint256 blockId, bytes32 parentHash, uint32 parentGasUsed) view returns (tuple(bytes32 key, bytes32 blockHash, bytes32 signalRoot, uint64 provenAt, address prover, uint32 gasUsed))",
      "function getMxcTokenBalance(address addr) view returns (uint256)",
      "function getProofReward(uint64 proofTime) view returns (uint256)",
      "function getProposeReward() view returns (uint256)",
      "function getStateVariables() view returns (tuple(uint64 blockFee, uint64 accBlockFees, uint64 genesisHeight, uint64 genesisTimestamp, uint64 numBlocks, uint64 proofTimeIssued, uint64 proofTimeTarget, uint64 lastVerifiedBlockId, uint64 accProposedAt, uint64 nextEthDepositToProcess, uint64 numEthDeposits))",
      "function getVerifierName(uint16 id) pure returns (bytes32)",
      "function init(address _addressManager, bytes32 _genesisBlockHash, uint64 _initBlockFee, uint64 _initProofTimeTarget, uint64 _initProofTimeIssued, uint16 _adjustmentQuotient)",
      "function owner() view returns (address)",
      "function proposeBlock(bytes input, bytes txList, bytes signature, uint128 txListLength, uint128 estimateGas) returns (tuple(uint64 id, uint64 timestamp, uint64 l1Height, bytes32 l1Hash, bytes32 mixHash, bytes32 txListHash, uint24 txListByteStart, uint24 txListByteEnd, uint32 gasLimit, address beneficiary, address treasury, tuple(address recipient, uint96 amount, uint64 id)[] depositsProcessed, uint256 baseFee, uint256 blockReward) meta)",
      "function proveBlock(uint256 blockId, bytes input)",
      "function renounceOwnership()",
      "function resolve(uint256 chainId, bytes32 name, bool allowZeroAddress) view returns (address)",
      "function resolve(bytes32 name, bool allowZeroAddress) view returns (address)",
      "function setAddressManager(address newAddressManager)",
      "function setProofParams(uint64 newProofTimeTarget, uint64 newProofTimeIssued, uint64 newBlockFee, uint16 newAdjustmentQuotient)",
      "function state() view returns (uint256 totalStakeMxcTokenBalances, uint64 genesisHeight, uint64 genesisTimestamp, uint16 adjustmentQuotient, uint48 prevBaseFee, uint64 proposerElectionTimeoutOffset, uint64 accProposedAt, uint64 accBlockFees, uint64 numBlocks, uint64 proveMetaReward, uint64 blockFee, uint64 proofTimeIssued, uint64 lastVerifiedBlockId, uint64 proofTimeTarget)",
      "function transferOwnership(address newOwner)",
      "function verifyBlocks(uint256 maxBlocks)",
      "function withdrawMxcToken(uint256 amount)"
    ]
  }
}
