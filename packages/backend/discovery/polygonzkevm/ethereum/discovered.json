{
  "name": "polygonzkevm",
  "chain": "ethereum",
  "blockNumber": 19882098,
  "configHash": "0x9f5c5f686ed4bfe982a25f00bc50d2b5a0513d1ce029759e7ae55b43c207b658",
  "version": 4,
  "contracts": [
    {
      "name": "PolygonzkEVMVerifier",
      "address": "0x0775e11309d75aA6b0967917fB0213C5673eDf81",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1711291211,
      "derivedName": "FflonkVerifier"
    },
    {
      "name": "daiBridge",
      "address": "0x4A27aC91c5cD3768F140ECabDe3FC2B2d92eDb98",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xF684f2CB299cCDaAB483ffc1573B82f40C6b775b",
        "admin": "0x0000000000000000000000000000000000000000"
      },
      "implementations": ["0xF684f2CB299cCDaAB483ffc1573B82f40C6b775b"],
      "sinceTimestamp": 1695199499,
      "values": {
        "beneficiary": "0xF29Ff96aaEa6C9A1fBa851f74737f3c069d4f1a9",
        "dai": "0x6B175474E89094C44Da98b954EedeAC495271d0F",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdmin": "0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904",
        "defaultAdminDelay": 259200,
        "defaultAdminDelayIncreaseWait": 432000,
        "destAddress": "0x744C5860ba161b5316F7E80D9Ec415e2727e5bD5",
        "destId": 1,
        "MAKER_ROLE": "0x70d8f6b4dfca278d41482e0778a0bf123d87b86b23b71cc0ef42c2f082e8053a",
        "owner": "0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904",
        "pendingDefaultAdmin": [
          "0x0000000000000000000000000000000000000000",
          0
        ],
        "pendingDefaultAdminDelay": [0, 0],
        "sdai": "0x83F20F44975D03b1b09e64809B757c47f942BEeA",
        "totalBridgedDAI": "254032905626934742210448",
        "totalProtocolDAI": "1000000000000000000",
        "zkEvmBridge": "0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe"
      },
      "derivedName": "L1Escrow"
    },
    {
      "name": "PolygonZkEVMEtrog",
      "address": "0x519E42c24163192Dca44CD3fBDCEBF6be9130987",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x2650a9a4fC64f63F573EF0F405064EF54BC46f71",
        "admin": "0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2"
      },
      "implementations": ["0x2650a9a4fC64f63F573EF0F405064EF54BC46f71"],
      "sinceTimestamp": 1706364971,
      "values": {
        "admin": "0x242daE44F5d8fb54B198D03a94dA45B5a4413e21",
        "bridgeAddress": "0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe",
        "calculatePolPerForceBatch": 0,
        "forceBatchAddress": "0x242daE44F5d8fb54B198D03a94dA45B5a4413e21",
        "forceBatchTimeout": 432000,
        "gasTokenAddress": "0x0000000000000000000000000000000000000000",
        "gasTokenNetwork": 0,
        "GLOBAL_EXIT_ROOT_MANAGER_L2": "0xa40D5f56745a118D0906a34E69aeC8C0Db1cB8fA",
        "globalExitRootManager": "0x580bda1e7A0CFAe92Fa7F6c20A3794F169CE3CFb",
        "INITIALIZE_TX_BRIDGE_LIST_LEN_LEN": 249,
        "INITIALIZE_TX_BRIDGE_PARAMS": "0x80808401c9c38094",
        "INITIALIZE_TX_BRIDGE_PARAMS_AFTER_BRIDGE_ADDRESS": "0x80b9",
        "INITIALIZE_TX_BRIDGE_PARAMS_AFTER_BRIDGE_ADDRESS_EMPTY_METADATA": "0x80b8",
        "INITIALIZE_TX_CONSTANT_BYTES": 32,
        "INITIALIZE_TX_CONSTANT_BYTES_EMPTY_METADATA": 31,
        "INITIALIZE_TX_DATA_LEN_EMPTY_METADATA": 228,
        "INITIALIZE_TX_EFFECTIVE_PERCENTAGE": "0xff",
        "lastAccInputHash": "0x5446fbee745cbe2acd03a67b77899a34124657a4b34f03db69dc5d93c83ba4af",
        "lastForceBatch": 0,
        "lastForceBatchSequenced": 0,
        "networkName": "polygon zkEVM",
        "pendingAdmin": "0x0000000000000000000000000000000000000000",
        "pol": "0x455e53CBB86018Ac2B8092FdCd39d8444aFFC3F6",
        "rollupManager": "0x5132A183E9F3CB7C848b0AAC5Ae0c4f0491B7aB2",
        "SIGNATURE_INITIALIZE_TX_R": "0x00000000000000000000000000000000000000000000000000000005ca1ab1e0",
        "SIGNATURE_INITIALIZE_TX_S": "0x000000000000000000000000000000000000000000000000000000005ca1ab1e",
        "SIGNATURE_INITIALIZE_TX_V": 27,
        "TIMESTAMP_RANGE": 36,
        "trustedSequencer": "0x148Ee7dAF16574cD020aFa34CC658f8F3fbd2800",
        "trustedSequencerURL": "https://zkevm-rpc.com/"
      },
      "derivedName": "PolygonZkEVMEtrog"
    },
    {
      "name": "usdcBridge",
      "address": "0x70E70e58ed7B1Cec0D8ef7464072ED8A52d755eB",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xA4e6762eAAf259DA74696F46fAAF79bA9DdE14E6",
        "admin": "0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904"
      },
      "implementations": ["0xA4e6762eAAf259DA74696F46fAAF79bA9DdE14E6"],
      "sinceTimestamp": 1700125979,
      "values": {
        "bridge": "0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe",
        "l1USDC": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "owner": "0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904",
        "paused": false,
        "zkMinterBurner": "0xBDa0B27f93B2FD3f076725b89cf02e48609bC189",
        "zkNetworkId": 1
      },
      "derivedName": "L1Escrow"
    },
    {
      "name": "wstETHBridge",
      "address": "0xf0CDE1E7F0FAD79771cd526b1Eb0A12F69582C01",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x18FED1E19dC564DC917D203be9d40790472D22e9",
        "admin": "0x0000000000000000000000000000000000000000"
      },
      "implementations": ["0x18FED1E19dC564DC917D203be9d40790472D22e9"],
      "sinceTimestamp": 1703945135,
      "values": {
        "counterpartContract": "0xDB5D9c10FD2a92692DB51853e06058EE0436d69B",
        "counterpartNetwork": 1,
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "defaultAdmin": "0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904",
        "defaultAdminDelay": 259200,
        "defaultAdminDelayIncreaseWait": 432000,
        "EMERGENCY_ROLE": "0xbf233dd2aafeb4d50879c4aa5c81e96d92f6e6945c906a58f9f2d1c1631b4b26",
        "originTokenAddress": "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0",
        "originTokenNetwork": 0,
        "owner": "0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904",
        "paused": false,
        "pendingDefaultAdmin": [
          "0x0000000000000000000000000000000000000000",
          0
        ],
        "pendingDefaultAdminDelay": [0, 0],
        "polygonZkEVMBridge": "0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe",
        "wrappedTokenAddress": "0xbf6De60Ccd9D22a5820A658fbE9fc87975EA204f"
      },
      "derivedName": "WstETHBridgeL1"
    },
    {
      "name": "",
      "address": "0xF29Ff96aaEa6C9A1fBa851f74737f3c069d4f1a9",
      "unverified": true,
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1651947248
    },
    {
      "name": "EscrowsAdmin",
      "address": "0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": [],
        "threshold": "5 of 10 (50%)"
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1694792111,
      "values": {
        "domainSeparator": "0x8a124b80a35ff530b08dee85e5c8febf58bd7c0faed74b60fa781f8695708242",
        "getChainId": 1,
        "getOwners": [
          "0x099198353446A9E3a20672eDC1Bd461E978842c3",
          "0xb771380f912E4b5F6beDdf81314C383c13F16ab5",
          "0xD09971D8ed6C6a5e57581e90d593ee5B94e348D4",
          "0xc4591c41e01a7a654B5427f39Bbd1dEe5bD45D1D",
          "0xE6Ee0F8D81170160d50ed77b9C91E6219473d43a",
          "0xd1B856ee12Bd00922cae8DD86ab068f8c0F95224",
          "0xF53D1fB2EeD22Cf1E8f7E90Da7f1CAe88344065F",
          "0xf56AE6520776934127AB68438d1b4652BCe07F8f",
          "0x4DE44Aa0Ef9DB64DF3eB3465d35D73d0409d44ed",
          "0x4E83124eD15b13265240B61EC9627797CCE1032E"
        ],
        "getThreshold": 5,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    }
  ],
  "eoas": [
    "0x099198353446A9E3a20672eDC1Bd461E978842c3",
    "0x148Ee7dAF16574cD020aFa34CC658f8F3fbd2800",
    "0x4DE44Aa0Ef9DB64DF3eB3465d35D73d0409d44ed",
    "0x4E83124eD15b13265240B61EC9627797CCE1032E",
    "0xa40D5f56745a118D0906a34E69aeC8C0Db1cB8fA",
    "0xb771380f912E4b5F6beDdf81314C383c13F16ab5",
    "0xBDa0B27f93B2FD3f076725b89cf02e48609bC189",
    "0xc4591c41e01a7a654B5427f39Bbd1dEe5bD45D1D",
    "0xD09971D8ed6C6a5e57581e90d593ee5B94e348D4",
    "0xd1B856ee12Bd00922cae8DD86ab068f8c0F95224",
    "0xDB5D9c10FD2a92692DB51853e06058EE0436d69B",
    "0xE6Ee0F8D81170160d50ed77b9C91E6219473d43a",
    "0xF53D1fB2EeD22Cf1E8f7E90Da7f1CAe88344065F",
    "0xf56AE6520776934127AB68438d1b4652BCe07F8f"
  ],
  "abis": {
    "0x0775e11309d75aA6b0967917fB0213C5673eDf81": [
      "function verifyProof(bytes32[24] proof, uint256[1] pubSignals) view returns (bool)"
    ],
    "0x18FED1E19dC564DC917D203be9d40790472D22e9": [
      "constructor()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event BridgeTokens(address destinationAddress, uint256 amount)",
      "event ClaimTokens(address destinationAddress, uint256 amount)",
      "event DefaultAdminDelayChangeCanceled()",
      "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
      "event DefaultAdminTransferCanceled()",
      "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
      "event Initialized(uint8 version)",
      "event Paused(address account)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EMERGENCY_ROLE() view returns (bytes32)",
      "function acceptDefaultAdminTransfer()",
      "function beginDefaultAdminTransfer(address newAdmin)",
      "function bridgeToken(address destinationAddress, uint256 amount, bool forceUpdateGlobalExitRoot)",
      "function cancelDefaultAdminTransfer()",
      "function changeDefaultAdminDelay(uint48 newDelay)",
      "function counterpartContract() view returns (address)",
      "function counterpartNetwork() view returns (uint32)",
      "function defaultAdmin() view returns (address)",
      "function defaultAdminDelay() view returns (uint48)",
      "function defaultAdminDelayIncreaseWait() view returns (uint48)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address _adminAddress, address _emergencyRoleAddress, address _wrappedTokenAddress, address _originTokenAddress, address _polygonZkEVMBridge, address _counterpartContract, uint32 _counterpartNetwork)",
      "function onMessageReceived(address originAddress, uint32 originNetwork, bytes data) payable",
      "function originTokenAddress() view returns (address)",
      "function originTokenNetwork() view returns (uint32)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
      "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
      "function polygonZkEVMBridge() view returns (address)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function rollbackDefaultAdminDelay()",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function wrappedTokenAddress() view returns (address)"
    ],
    "0x2650a9a4fC64f63F573EF0F405064EF54BC46f71": [
      "constructor(address _globalExitRootManager, address _pol, address _bridgeAddress, address _rollupManager)",
      "error BatchAlreadyVerified()",
      "error BatchNotSequencedOrNotSequenceEnd()",
      "error ExceedMaxVerifyBatches()",
      "error FinalNumBatchBelowLastVerifiedBatch()",
      "error FinalNumBatchDoesNotMatchPendingState()",
      "error FinalPendingStateNumInvalid()",
      "error ForceBatchNotAllowed()",
      "error ForceBatchTimeoutNotExpired()",
      "error ForceBatchesAlreadyActive()",
      "error ForceBatchesDecentralized()",
      "error ForceBatchesNotAllowedOnEmergencyState()",
      "error ForceBatchesOverflow()",
      "error ForcedDataDoesNotMatch()",
      "error GasTokenNetworkMustBeZeroOnEther()",
      "error GlobalExitRootNotExist()",
      "error HaltTimeoutNotExpired()",
      "error HaltTimeoutNotExpiredAfterEmergencyState()",
      "error HugeTokenMetadataNotSupported()",
      "error InitNumBatchAboveLastVerifiedBatch()",
      "error InitNumBatchDoesNotMatchPendingState()",
      "error InitSequencedBatchDoesNotMatch()",
      "error InvalidInitializeTransaction()",
      "error InvalidProof()",
      "error InvalidRangeBatchTimeTarget()",
      "error InvalidRangeForceBatchTimeout()",
      "error InvalidRangeMultiplierBatchFee()",
      "error MaxTimestampSequenceInvalid()",
      "error NewAccInputHashDoesNotExist()",
      "error NewPendingStateTimeoutMustBeLower()",
      "error NewStateRootNotInsidePrime()",
      "error NewTrustedAggregatorTimeoutMustBeLower()",
      "error NotEnoughMaticAmount()",
      "error NotEnoughPOLAmount()",
      "error OldAccInputHashDoesNotExist()",
      "error OldStateRootDoesNotExist()",
      "error OnlyAdmin()",
      "error OnlyPendingAdmin()",
      "error OnlyRollupManager()",
      "error OnlyTrustedAggregator()",
      "error OnlyTrustedSequencer()",
      "error PendingStateDoesNotExist()",
      "error PendingStateInvalid()",
      "error PendingStateNotConsolidable()",
      "error PendingStateTimeoutExceedHaltAggregationTimeout()",
      "error SequenceZeroBatches()",
      "error SequencedTimestampBelowForcedTimestamp()",
      "error SequencedTimestampInvalid()",
      "error StoredRootMustBeDifferentThanNewRoot()",
      "error TransactionsLengthAboveMax()",
      "error TrustedAggregatorTimeoutExceedHaltAggregationTimeout()",
      "error TrustedAggregatorTimeoutNotExpired()",
      "event AcceptAdminRole(address newAdmin)",
      "event ForceBatch(uint64 indexed forceBatchNum, bytes32 lastGlobalExitRoot, address sequencer, bytes transactions)",
      "event InitialSequenceBatches(bytes transactions, bytes32 lastGlobalExitRoot, address sequencer)",
      "event Initialized(uint8 version)",
      "event SequenceBatches(uint64 indexed numBatch, bytes32 l1InfoRoot)",
      "event SequenceForceBatches(uint64 indexed numBatch)",
      "event SetForceBatchAddress(address newForceBatchAddress)",
      "event SetForceBatchTimeout(uint64 newforceBatchTimeout)",
      "event SetTrustedSequencer(address newTrustedSequencer)",
      "event SetTrustedSequencerURL(string newTrustedSequencerURL)",
      "event TransferAdminRole(address newPendingAdmin)",
      "event VerifyBatches(uint64 indexed numBatch, bytes32 stateRoot, address indexed aggregator)",
      "function GLOBAL_EXIT_ROOT_MANAGER_L2() view returns (address)",
      "function INITIALIZE_TX_BRIDGE_LIST_LEN_LEN() view returns (uint8)",
      "function INITIALIZE_TX_BRIDGE_PARAMS() view returns (bytes)",
      "function INITIALIZE_TX_BRIDGE_PARAMS_AFTER_BRIDGE_ADDRESS() view returns (bytes)",
      "function INITIALIZE_TX_BRIDGE_PARAMS_AFTER_BRIDGE_ADDRESS_EMPTY_METADATA() view returns (bytes)",
      "function INITIALIZE_TX_CONSTANT_BYTES() view returns (uint16)",
      "function INITIALIZE_TX_CONSTANT_BYTES_EMPTY_METADATA() view returns (uint16)",
      "function INITIALIZE_TX_DATA_LEN_EMPTY_METADATA() view returns (uint8)",
      "function INITIALIZE_TX_EFFECTIVE_PERCENTAGE() view returns (bytes1)",
      "function SIGNATURE_INITIALIZE_TX_R() view returns (bytes32)",
      "function SIGNATURE_INITIALIZE_TX_S() view returns (bytes32)",
      "function SIGNATURE_INITIALIZE_TX_V() view returns (uint8)",
      "function TIMESTAMP_RANGE() view returns (uint256)",
      "function acceptAdminRole()",
      "function admin() view returns (address)",
      "function bridgeAddress() view returns (address)",
      "function calculatePolPerForceBatch() view returns (uint256)",
      "function forceBatch(bytes transactions, uint256 polAmount)",
      "function forceBatchAddress() view returns (address)",
      "function forceBatchTimeout() view returns (uint64)",
      "function forcedBatches(uint64) view returns (bytes32)",
      "function gasTokenAddress() view returns (address)",
      "function gasTokenNetwork() view returns (uint32)",
      "function generateInitializeTransaction(uint32 networkID, address _gasTokenAddress, uint32 _gasTokenNetwork, bytes _gasTokenMetadata) view returns (bytes)",
      "function globalExitRootManager() view returns (address)",
      "function initialize(address _admin, address sequencer, uint32 networkID, address _gasTokenAddress, string sequencerURL, string _networkName)",
      "function lastAccInputHash() view returns (bytes32)",
      "function lastForceBatch() view returns (uint64)",
      "function lastForceBatchSequenced() view returns (uint64)",
      "function networkName() view returns (string)",
      "function onVerifyBatches(uint64 lastVerifiedBatch, bytes32 newStateRoot, address aggregator)",
      "function pendingAdmin() view returns (address)",
      "function pol() view returns (address)",
      "function rollupManager() view returns (address)",
      "function sequenceBatches(tuple(bytes transactions, bytes32 forcedGlobalExitRoot, uint64 forcedTimestamp, bytes32 forcedBlockHashL1)[] batches, uint64 maxSequenceTimestamp, uint64 initSequencedBatch, address l2Coinbase)",
      "function sequenceForceBatches(tuple(bytes transactions, bytes32 forcedGlobalExitRoot, uint64 forcedTimestamp, bytes32 forcedBlockHashL1)[] batches)",
      "function setForceBatchAddress(address newForceBatchAddress)",
      "function setForceBatchTimeout(uint64 newforceBatchTimeout)",
      "function setTrustedSequencer(address newTrustedSequencer)",
      "function setTrustedSequencerURL(string newTrustedSequencerURL)",
      "function transferAdminRole(address newPendingAdmin)",
      "function trustedSequencer() view returns (address)",
      "function trustedSequencerURL() view returns (string)"
    ],
    "0x4A27aC91c5cD3768F140ECabDe3FC2B2d92eDb98": [
      "constructor(address _implementation, bytes _data)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x519E42c24163192Dca44CD3fBDCEBF6be9130987": [
      "constructor(address _logic, address admin, bytes _data) payable",
      "error AddressEmptyCode(address target)",
      "error ERC1967InvalidAdmin(address admin)",
      "error ERC1967InvalidImplementation(address implementation)",
      "error ERC1967NonPayable()",
      "error FailedInnerCall()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x70E70e58ed7B1Cec0D8ef7464072ED8A52d755eB": [
      "constructor(address impl_, bytes data_) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xA4e6762eAAf259DA74696F46fAAF79bA9DdE14E6": [
      "constructor()",
      "error NotValidAmount()",
      "error NotValidOwner()",
      "error NotValidSelector()",
      "error NotValidSpender()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Deposit(address indexed from, address indexed to, uint256 amount)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event Upgraded(address indexed implementation)",
      "function bridge() view returns (address)",
      "function bridgeToken(address destinationAddress, uint256 amount, bool forceUpdateGlobalExitRoot)",
      "function bridgeToken(address destinationAddress, uint256 amount, bool forceUpdateGlobalExitRoot, bytes permitData)",
      "function changeAdmin(address newAdmin)",
      "function initialize(address owner_, address admin_, address bridge_, uint32 zkNetworkId_, address zkMinterBurnerProxy_, address l1Usdc_)",
      "function l1USDC() view returns (address)",
      "function onMessageReceived(address originAddress, uint32 originNetwork, bytes data) payable",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function proxiableUUID() view returns (bytes32)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function zkMinterBurner() view returns (address)",
      "function zkNetworkId() view returns (uint32)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xf0CDE1E7F0FAD79771cd526b1Eb0A12F69582C01": [
      "constructor(address _implementation, bytes _data)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0xF684f2CB299cCDaAB483ffc1573B82f40C6b775b": [
      "constructor()",
      "error BeneficiaryInvalid(address newBeneficiary)",
      "error BridgeAmountInvalid()",
      "error MessageInvalid()",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event AssetRebalanced()",
      "event BeaconUpgraded(address indexed beacon)",
      "event BeneficiaryUpdated(address newBeneficiary)",
      "event DAIBridged(address indexed bridgoor, uint256 amount, uint256 total)",
      "event DAIClaimed(address indexed bridgoor, uint256 amount, uint256 total)",
      "event DefaultAdminDelayChangeCanceled()",
      "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
      "event DefaultAdminTransferCanceled()",
      "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event TotalProtocolDAIUpdated(uint256 newAmount)",
      "event Upgraded(address indexed implementation)",
      "event YieldClaimed(address indexed beneficiary, uint256 amount)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function MAKER_ROLE() view returns (bytes32)",
      "function acceptDefaultAdminTransfer()",
      "function beginDefaultAdminTransfer(address newAdmin)",
      "function beneficiary() view returns (address)",
      "function bridgeToken(address recipient, uint256 amount, bool forceUpdateGlobalExitRoot)",
      "function cancelDefaultAdminTransfer()",
      "function changeDefaultAdminDelay(uint48 newDelay)",
      "function dai() view returns (address)",
      "function defaultAdmin() view returns (address)",
      "function defaultAdminDelay() view returns (uint48)",
      "function defaultAdminDelayIncreaseWait() view returns (uint48)",
      "function destAddress() view returns (address)",
      "function destId() view returns (uint32)",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address _adminAddress, address _makerAddress, address _daiAddress, address _sdaiAddress, address _bridgeAddress, uint32 _destId, address _destAddress, uint256 _totalProtocolDAI, address _beneficiary)",
      "function onMessageReceived(address originAddress, uint32 originNetwork, bytes metadata) payable",
      "function owner() view returns (address)",
      "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
      "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
      "function proxiableUUID() view returns (bytes32)",
      "function rebalance()",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function rollbackDefaultAdminDelay()",
      "function sdai() view returns (address)",
      "function sendExcessYield()",
      "function setBeneficiary(address b)",
      "function setProtocolDAI(uint256 amount)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function totalBridgedDAI() view returns (uint256)",
      "function totalProtocolDAI() view returns (uint256)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable",
      "function zkEvmBridge() view returns (address)"
    ],
    "0xf694C9e3a34f5Fa48b6f3a0Ff186C1c6c4FcE904": [
      "constructor(address _singleton)"
    ]
  }
}
