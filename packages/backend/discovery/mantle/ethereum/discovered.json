{
  "name": "mantle",
  "chain": "ethereum",
  "blockNumber": 18469566,
  "configHash": "0x4c744122b7570555a99223855f92941d97712a643f1232a1aa33b5f8456fabc5",
  "version": 3,
  "contracts": [
    {
      "name": "PauserRegistry",
      "address": "0x075a48633dc6845f92339741E9c96b88f1b2A86f",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687930847,
      "values": {
        "pauser": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "unpauser": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "derivedName": "PauserRegistry"
    },
    {
      "name": "MantleTokenProxyAdmin",
      "address": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687241639,
      "values": {
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "name": "BLSRegistry",
      "address": "0x1eD35B793d887e028493dAC4a11AA5Feb811dd67",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x64F4244eEA17a361bb919A28F614C3ad1aC565ad",
        "admin": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb"
      },
      "implementations": ["0x64F4244eEA17a361bb919A28F614C3ad1aC565ad"],
      "sinceTimestamp": 1687932047,
      "values": {
        "delegation": "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798",
        "forceDeregister": "0x0000000000000000000000000000000000000000",
        "getApkUpdatesLength": 11,
        "investmentManager": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
        "minimumStakeFirstQuorum": 0,
        "minimumStakeSecondQuorum": 0,
        "NUMBER_OF_QUORUMS": 2,
        "numOperators": 10,
        "operatorList": [
          "0x1888e4aC2Ab37A73B33448B87bABdD1ce1dcBAbe",
          "0x717c3DC6Df69c316d6Ac593077BC84Cc86f214A4",
          "0x8BEF0466b7C2CbFD753eF340e062dF06E93ADA7f",
          "0x6cc5A6F5a9E4757790e4068Aa9757226Cb854B64",
          "0xc1dEd495E1dDf089B2b41d6397C0aBa04BDA1A21",
          "0x550b3CB2D5fB5E4F0A08322CaC7b04291558CDa8",
          "0xB61298691FE0df10634A67dd83b2253E74cbF7fb",
          "0xcEb157a9bB9c80a845d5924e8CEAA591Caf705a5",
          "0x0B6F2C77C3740A5e6f88A4eCdd02C10BE8a2e323",
          "0x8A3D6c77E5BAcE8cb0822B28E4Fc56FC06fB5645"
        ],
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "permissionManager": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01",
        "pubkeyCompendium": "0x92986cd63C3409b7dA2882624B6d6E7Cf660707a",
        "serviceManager": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1",
        "strategiesConsideredAndMultipliersLength": [1, 1]
      },
      "derivedName": "BLSRegistry"
    },
    {
      "name": "InvestmentManager",
      "address": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x7C4813A9AF2FEA4ca765a26b05d128926E94e72E",
        "admin": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83"
      },
      "implementations": ["0x7C4813A9AF2FEA4ca765a26b05d128926E94e72E"],
      "sinceTimestamp": 1687930955,
      "values": {
        "delegation": "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798",
        "DEPOSIT_TYPEHASH": "0x0a564d4cfe5cb0d4ee082aab2ca54b8c48e129485a8f7c77766ab5ef0c3566f1",
        "DOMAIN_SEPARATOR": "0x627966d4b435c9739b026674b0008753c43eab794919a4e448cc20b36816c5e1",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "paused": 0,
        "pauserRegistry": "0x075a48633dc6845f92339741E9c96b88f1b2A86f",
        "permissionManager": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01"
      },
      "derivedName": "InvestmentManager"
    },
    {
      "name": "CanonicalTransactionChain",
      "address": "0x291dc3819b863e19b0a9b9809F8025d2EB4aaE93",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687952507,
      "values": {
        "batches": "0x5Dd48eF85B99E3e3d711Ca8B41cBC07dA1677F3E",
        "enqueueGasCost": 60000,
        "enqueueL2GasPrepaid": 1920000,
        "getLastBlockNumber": 18469292,
        "getLastTimestamp": 1698745379,
        "getNextQueueIndex": 29853,
        "getNumPendingQueueElements": 2,
        "getQueueLength": 29855,
        "getTotalBatches": 13007,
        "getTotalElements": 18502887,
        "l2GasDiscountDivisor": 32,
        "libAddressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "MAX_ROLLUP_TX_SIZE": 50000,
        "maxTransactionGasLimit": 30000000,
        "MIN_ROLLUP_TX_GAS": 100000
      },
      "derivedName": "CanonicalTransactionChain"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687930823,
      "values": {
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      }
    },
    {
      "name": "Owner2Multisig",
      "address": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686902471,
      "values": {
        "domainSeparator": "0x509138b8efbf4ec65dfd2396c0fbf689e8a0193b00f12ce81d154ffd0de8f6af",
        "getChainId": 1,
        "getOwners": [
          "0xC37642355c18ec9c3b3268AAC67e33516aa115eb",
          "0x207E804758e28F2b3fD6E4219671B327100b82f8",
          "0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317",
          "0x66f13847536153eFFFFdfD7Bd4Dea5eD3F60f639",
          "0xbE73dea9c8DcDdB6b03F7e5797b85982065fe34e",
          "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8",
          "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a"
        ],
        "getThreshold": 3,
        "nonce": 60,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "BondManager",
      "address": "0x31aBe1c466C2A8b95fd84258dD1471472979B650",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687952795,
      "values": {
        "libAddressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42"
      }
    },
    {
      "name": "TssGroupManager",
      "address": "0x399ca67660B79F7aA8A7Efd5BEF9836A4c19CACF",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xF7576237087F808eB39531cA490b4F8eFd4a0c69",
        "admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "implementations": ["0xF7576237087F808eB39531cA490b4F8eFd4a0c69"],
      "sinceTimestamp": 1687956143,
      "values": {
        "getTssGroupInfo": [
          1,
          2,
          "0xfc15d64a5cc0069d9d1f7d40c651cbe30bc400d6c17fae77068cb248bfb62169b58b220ad52b5f4daa750dbd1c3e9336780afea53e9977720cd5ddf139602d04",
          [
            "0x8a856d85acf30ad29cfd276f7cb673f301bb27a8ebea25a04333e58d3de2a4164f091db27c42b1bd8a4fca97c3135fc14323dcf3e84c3a90c44050b312f5f9a6",
            "0x6e787f330d507bb46dd299b353201b46b209c62ce64c14c8f79299282ec17db3631938e45991dcb6f2c09398f92dd65452cc7b4c51d2543b19fcb2dfc80d1321",
            "0x3997b8b9caae2c98cda6ef4be06da3d7e79a53666ad0a66ee7a2f60a6dfbf3913643d0a86b0ad4db0bc78298454a5c37507b13b1fb7636bfa3a9c97cea8c0520",
            "0xd749a100bed7add0dfd7bf27e57446e1596b91fb23e4a83d8e6dfc3047fc407a110f4e64677bc4f926894c2d4bb3d7db3b82d284ca17cdc0f22fb045cb316ffc",
            "0xb97a17806f9f98ce997d24fd428ed403697aab40d41ef862ccc2bc4ec2ccfef796e6b549108cc21f84722da0209d4acf8fc6a110fdd811ef645ba2f8ac2d0c3e",
            "0x0662f404c8c35fa16d1259e25b693a892fe37e8339954c822fead18bc8703f6f988d5e9e4f87f7dc9a981ea5b8c8a9e90378532dbd0965a0553cafe8393c74b3",
            "0x41da96edc3735373b17c393eda197b82b339703e9cdee9b1eab0fd17bedeb18b13b063da16a63dba01914beb8f73f03d75a794a854a7df93513ac73a1472b60d",
            "0x57a49a8131d3e8376c88bfe8eacc73efb1aac6570b08c2dee823a7e26f0d911c4746eb676b6e66bcaa147373cc190cc509be0956415925e7bee37f0711549293",
            "0x549c40ecd4e8586a8a16faa9a36db9857fea7b1f0ff3e3d5de9d3b49c93420bca64517c545b6365b3c641d7f5b5d426e09252301d2c381ee2ad2b2537807d58d",
            "0xc911351c19276dc0e0eaeaf9d483217d92af29774d229516a59436b9b23f3d71ec7473c8d893bd5bf565fce55c507e01ef068421c26343be2a151dbe9a3ea7ef"
          ]
        ],
        "getTssGroupMembers": [
          "0x8a856d85acf30ad29cfd276f7cb673f301bb27a8ebea25a04333e58d3de2a4164f091db27c42b1bd8a4fca97c3135fc14323dcf3e84c3a90c44050b312f5f9a6",
          "0x6e787f330d507bb46dd299b353201b46b209c62ce64c14c8f79299282ec17db3631938e45991dcb6f2c09398f92dd65452cc7b4c51d2543b19fcb2dfc80d1321",
          "0x3997b8b9caae2c98cda6ef4be06da3d7e79a53666ad0a66ee7a2f60a6dfbf3913643d0a86b0ad4db0bc78298454a5c37507b13b1fb7636bfa3a9c97cea8c0520",
          "0xd749a100bed7add0dfd7bf27e57446e1596b91fb23e4a83d8e6dfc3047fc407a110f4e64677bc4f926894c2d4bb3d7db3b82d284ca17cdc0f22fb045cb316ffc",
          "0xb97a17806f9f98ce997d24fd428ed403697aab40d41ef862ccc2bc4ec2ccfef796e6b549108cc21f84722da0209d4acf8fc6a110fdd811ef645ba2f8ac2d0c3e",
          "0x0662f404c8c35fa16d1259e25b693a892fe37e8339954c822fead18bc8703f6f988d5e9e4f87f7dc9a981ea5b8c8a9e90378532dbd0965a0553cafe8393c74b3",
          "0x41da96edc3735373b17c393eda197b82b339703e9cdee9b1eab0fd17bedeb18b13b063da16a63dba01914beb8f73f03d75a794a854a7df93513ac73a1472b60d",
          "0x57a49a8131d3e8376c88bfe8eacc73efb1aac6570b08c2dee823a7e26f0d911c4746eb676b6e66bcaa147373cc190cc509be0956415925e7bee37f0711549293",
          "0x549c40ecd4e8586a8a16faa9a36db9857fea7b1f0ff3e3d5de9d3b49c93420bca64517c545b6365b3c641d7f5b5d426e09252301d2c381ee2ad2b2537807d58d",
          "0xc911351c19276dc0e0eaeaf9d483217d92af29774d229516a59436b9b23f3d71ec7473c8d893bd5bf565fce55c507e01ef068421c26343be2a151dbe9a3ea7ef"
        ],
        "getTssGroupUnJailMembers": [
          "0x9436b6F211f50F5d5a17521e4725E27518dAFA61",
          "0xBB08BEEaeD39cbD6D9BdB24F2627092984ae55a1",
          "0x6aBa10C9BB6a39445d990Fb7A720fA53025Bd7Dc",
          "0xc828De4e817e1705CC539267D5F28BE8dbeF28DE",
          "0x306d1c4482b629a684A54B121F6f57dbE617740b",
          "0xBbDbE7F5aC524078ac72c1d4d39cD9b40cb4b9aD",
          "0xd4fa4b67b69C3FcF3dbF15db5d80202040BC72Fc",
          "0xf995d1022269c2e0ecaacD15d73e3a621FD69A3E",
          "0x51A887f3C12295A69f57D0f41b276bfEBc91AafC",
          "0x18214cCF63060d579524A69ee1B97404594fc831"
        ],
        "getTssInactiveGroupInfo": [2, 2, []],
        "inActiveIsEmpty": true,
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "stakingSlash": "0x78CF48880E9e1b3ab209779c0D8A76f611e53e81"
      }
    },
    {
      "name": "L1MantleToken",
      "address": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xCd368c1d80120b0Dd92447c87eB570154f8e685c",
        "admin": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd"
      },
      "implementations": ["0xCd368c1d80120b0Dd92447c87eB570154f8e685c"],
      "sinceTimestamp": 1687241795,
      "values": {
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x4657b7bac12b34fb80f1848c560d6e440dfccdffe8b83f2dc958a534c89b0622",
        "MIN_MINT_INTERVAL": 31536000,
        "MINT_CAP_DENOMINATOR": 10000,
        "MINT_CAP_MAX_NUMERATOR": 200,
        "mintCapNumerator": 0,
        "name": "Mantle",
        "nextMint": 1718777795,
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "symbol": "MNT",
        "totalSupply": "6219316794990000000000000000"
      },
      "derivedName": "L1MantleToken"
    },
    {
      "name": "VerifierEntry",
      "address": "0x3F77D44E1789D47e076a4d5f2779a1fCAb821C2a",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xA1C7B28B4743248584725fEf31516fD4Ea72aEA8",
        "admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "implementations": ["0xA1C7B28B4743248584725fEf31516fD4Ea72aEA8"],
      "sinceTimestamp": 1687961051,
      "values": {
        "blockFinalizationVerifier": "0x0000000000000000000000000000000000000000",
        "blockInitiationVerifier": "0x0000000000000000000000000000000000000000",
        "callOpVerifier": "0x0000000000000000000000000000000000000000",
        "environmentalOpVerifier": "0x0000000000000000000000000000000000000000",
        "interTxVerifier": "0x0000000000000000000000000000000000000000",
        "invalidOpVerifier": "0x0000000000000000000000000000000000000000",
        "memoryOpVerifier": "0x0000000000000000000000000000000000000000",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "stackOpVerifier": "0x0000000000000000000000000000000000000000",
        "storageOpVerifier": "0x0000000000000000000000000000000000000000"
      },
      "derivedName": "VerifierEntry"
    },
    {
      "name": "GnosisSafe",
      "address": "0x47336ae44F573a7C3C41a9ae04A9D48E5dFD8f8E",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686825851,
      "values": {
        "domainSeparator": "0xdb0a463cc9b4cc346b69933f9ff0173d72743028edaa3a32cb04fecaf0d12dcc",
        "getChainId": 1,
        "getOwners": [
          "0x61Af7a48B0EeA8481E5A055A35f829d0e8505fE3",
          "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8",
          "0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317",
          "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a",
          "0xf5b16239f88B54894e03e0293d3d7FDdEb9f9070",
          "0x895562F29cd2d6B46Da776B3a7778f77E99DbDEE",
          "0x9d078Aef47e835abeEB75580B17e1CB864E9b4e1"
        ],
        "getThreshold": 3,
        "nonce": 3,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687931879,
      "values": {
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      }
    },
    {
      "name": "PauserRegistry2",
      "address": "0x4ca725D446EcE6e3fFd3E072A6f2A6a16Ca492D0",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687931903,
      "values": {
        "pauser": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "unpauser": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "derivedName": "PauserRegistry"
    },
    {
      "name": "OwnerMultisig",
      "address": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1683509999,
      "values": {
        "domainSeparator": "0xc2040462c2819b7e5f0c5e3926088f96c882d435e0b03cef5b72ef73cdfaf7d4",
        "getChainId": 1,
        "getOwners": [
          "0xf73546Da2F971bD0Ed1b3c5F9C01092180Db5089",
          "0x61Af7a48B0EeA8481E5A055A35f829d0e8505fE3",
          "0x422f2df38B96395A7E61d4C02aDd4413bb79A9FC",
          "0x207E804758e28F2b3fD6E4219671B327100b82f8",
          "0xbE73dea9c8DcDdB6b03F7e5797b85982065fe34e",
          "0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317",
          "0x7735cDcc85E63A7684C29652DbE8B845e0b4635A",
          "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8",
          "0xf5b16239f88B54894e03e0293d3d7FDdEb9f9070",
          "0xe75D7324d6BC4E70A200c5E268160332F43b2d2B",
          "0x3000BE80ad204D327990eB403654aCd1Eaa8eCeb",
          "0xc4143711aA5bd6d37F1b0A690120AA5859e32A93",
          "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a"
        ],
        "getThreshold": 6,
        "nonce": 27,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "EigenDataLayerChain",
      "address": "0x50Fa427235C7C8cAA4A0C21b5009f5a0d015B23A",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xDF401d4229Fc6cA52238f7e55A04FA8EBc24C55a",
        "admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "implementations": ["0xDF401d4229Fc6cA52238f7e55A04FA8EBc24C55a"],
      "sinceTimestamp": 1688282303,
      "values": {
        "BLOCK_STALE_MEASURE": 500,
        "dataManageAddress": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1",
        "FRAUD_STRING": "0x2d2d5468697320697320612062616420737472696e672e204e6f626f64792073617973207468697320737472696e672e2d2d",
        "fraudProofPeriod": 3600,
        "getL2ConfirmedBlockNumber": 18502888,
        "getL2StoredBlockNumber": 18502888,
        "l2ConfirmedBlockNumber": 18502888,
        "l2StoredBlockNumber": 18502888,
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "reRollupIndex": 0,
        "reSubmitterAddress": "0x630E93130809c4acE55249229Ee6B043b929A9Ad",
        "rollupBatchIndex": 11540,
        "sequencer": "0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749"
      },
      "derivedName": "BVM_EigenDataLayrChain"
    },
    {
      "name": "DataLayrServiceManager",
      "address": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xAB42127980a3bff124E6465e097a5fC97228827e",
        "admin": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb"
      },
      "implementations": ["0xAB42127980a3bff124E6465e097a5fC97228827e"],
      "sinceTimestamp": 1687931975,
      "values": {
        "adversaryThresholdBasisPoints": 4000,
        "BIP_MULTIPLIER": 10000,
        "BLOCK_STALE_MEASURE": 150,
        "collateralToken": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "confirmDataStoreTimeout": 1800,
        "dataLayrBombVerifier": "0x0000000000000000000000000000000000000000",
        "dataLayrChallenge": "0xc9C24f1aaD2614E81f033746292F5Dc5d7Ccad94",
        "dataPermissionManager": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01",
        "dataStoresForDuration": [11693, 0, 0, 0, 0, 0, 0, 11694, 1698751151],
        "DURATION_SCALE": 3600,
        "eigenLayrDelegation": "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798",
        "feePerBytePerTime": 1,
        "feeSetter": "0x207E804758e28F2b3fD6E4219671B327100b82f8",
        "investmentManager": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
        "log2NumPowersOfTau": 0,
        "MAX_DATASTORE_DURATION": 7,
        "MIN_DATASTORE_DURATION": 1,
        "NUM_DS_PER_BLOCK_PER_DURATION": 20,
        "numPowersOfTau": 0,
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": 0,
        "pauserRegistry": "0x4ca725D446EcE6e3fFd3E072A6f2A6a16Ca492D0",
        "quorumThresholdBasisPoints": 9000,
        "registry": "0x1eD35B793d887e028493dAC4a11AA5Feb811dd67"
      },
      "derivedName": "DataLayrServiceManager"
    },
    {
      "name": "ChainStorageContainerCTC",
      "address": "0x5Dd48eF85B99E3e3d711Ca8B41cBC07dA1677F3E",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687951931,
      "values": {
        "getGlobalMetadata": "0x00000000000000000119d1ac006540cc23000000749d00011a54e7",
        "length": 13007,
        "libAddressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "owner": "CanonicalTransactionChain"
      },
      "derivedName": "ChainStorageContainer"
    },
    {
      "name": "L1CrossDomainMessenger",
      "address": "0x676A795fe6E43C17c668de16730c3F690FEB7120",
      "upgradeability": {
        "type": "resolved delegate proxy",
        "addressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "implementationName": "BVM_L1CrossDomainMessenger",
        "implementation": "0x4692363048d0F32a2dE7816860D48fff0c61B24B"
      },
      "implementations": ["0x4692363048d0F32a2dE7816860D48fff0c61B24B"],
      "sinceTimestamp": 1687953527,
      "values": {
        "getPauseOwner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "libAddressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "paused": false
      },
      "derivedName": "L1CrossDomainMessenger"
    },
    {
      "name": "AddressManager",
      "address": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687951883,
      "values": {
        "BondManager": "0x31aBe1c466C2A8b95fd84258dD1471472979B650",
        "CanonicalTransactionChain": "0x291dc3819b863e19b0a9b9809F8025d2EB4aaE93",
        "ChainStorageContainerCTC": "0x5Dd48eF85B99E3e3d711Ca8B41cBC07dA1677F3E",
        "ChainStorageContainerSCC": "0xd3f0BD982D72e28cccc69e0A9dA439e9D587b3bD",
        "FraudVerifier": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "L1CrossDomainMessenger": "0x4692363048d0F32a2dE7816860D48fff0c61B24B",
        "L1CrossDomainMessengerProxy": "0x676A795fe6E43C17c668de16730c3F690FEB7120",
        "L1MantleAddress": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "L1StandardBridgeProxy": "0x0000000000000000000000000000000000000000",
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "proposer": "0xD1328C9167e0693B689b5aa5a024379d4e437858",
        "rolluper": "0x6667961f5e9C98A76a48767522150889703Ed77D",
        "sequencer": "0x2F6AFE2E3feA041b892a6e240Fd1A0E5b51e8376",
        "StateCommitmentChain": "0x89E9D387555AF0cDE22cb98833Bae40d640AD7fa",
        "TssGroupManager": "0xF7576237087F808eB39531cA490b4F8eFd4a0c69",
        "TssGroupManagerProxy": "0x399ca67660B79F7aA8A7Efd5BEF9836A4c19CACF",
        "TssStakingSlashing": "0x09b276F9EcB83Fb6a37970e655863B04143Dc431",
        "TssStakingSlashingProxy": "0x78CF48880E9e1b3ab209779c0D8A76f611e53e81"
      },
      "derivedName": "Lib_AddressManager"
    },
    {
      "name": "GnosisSafe",
      "address": "0x7735cDcc85E63A7684C29652DbE8B845e0b4635A",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1684377983,
      "values": {
        "domainSeparator": "0xc1d265aa3661784e967614a86ab34bbccd5c4a901612dfe9cde9f949b055b09f",
        "getChainId": 1,
        "getOwners": [
          "0x5881541E79f5D9d5d72c87E8Ea6F681CAb289B12",
          "0x2288226d687c01B7332c2A99A0C5A4a112c63f1e"
        ],
        "getThreshold": 2,
        "nonce": 2,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "TssStakingSlashing",
      "address": "0x78CF48880E9e1b3ab209779c0D8A76f611e53e81",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x09b276F9EcB83Fb6a37970e655863B04143Dc431",
        "admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "implementations": ["0x09b276F9EcB83Fb6a37970e655863B04143Dc431"],
      "sinceTimestamp": 1687956431,
      "values": {
        "delegation": "0xd4B5E3D46D202C3523C3Ad89dfe74eC272BFC96A",
        "delegationManager": "0xA90FCe37D274e673f3850b835F18790542b1755d",
        "explanation": "Mantle token DelegationShare implementation for submodules as an example",
        "getQuitRequestList": [],
        "getSlashingParams": [
          "195000000000000000000",
          "10000000000000000000000"
        ],
        "isSetParam": true,
        "messenger": "0x676A795fe6E43C17c668de16730c3F690FEB7120",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": false,
        "quitRequestList": [],
        "regulatoryAccount": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "slashAmount": ["195000000000000000000", "10000000000000000000000"],
        "totalShares": "1000000000000000000000000",
        "tssDelegationContract": "0xd4B5E3D46D202C3523C3Ad89dfe74eC272BFC96A",
        "tssDelegationManagerContract": "0xA90FCe37D274e673f3850b835F18790542b1755d",
        "tssGroupContract": "0x399ca67660B79F7aA8A7Efd5BEF9836A4c19CACF",
        "tssManager": "0x9844f67c071caE21B0324D049Febe67158E23f98",
        "underlyingToken": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354"
      },
      "derivedName": "TssStakingSlashing"
    },
    {
      "name": "GnosisSafe",
      "address": "0x84A628347537d4900a0b720Ee294445F90c3887a",
      "upgradeability": {
        "type": "gnosis safe",
        "masterCopy": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "modules": []
      },
      "implementations": ["0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552"],
      "sinceTimestamp": 1686827603,
      "values": {
        "domainSeparator": "0x7d78093058bf4da0080823e097f898933ef67a743628dcf5350d61aafd425780",
        "getChainId": 1,
        "getOwners": [
          "0x61Af7a48B0EeA8481E5A055A35f829d0e8505fE3",
          "0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317",
          "0x895562F29cd2d6B46Da776B3a7778f77E99DbDEE",
          "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8",
          "0x9d078Aef47e835abeEB75580B17e1CB864E9b4e1",
          "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a",
          "0xf5b16239f88B54894e03e0293d3d7FDdEb9f9070"
        ],
        "getThreshold": 3,
        "nonce": 4,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "StateCommitmentChain",
      "address": "0x89E9D387555AF0cDE22cb98833Bae40d640AD7fa",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687953815,
      "values": {
        "batches": "0xd3f0BD982D72e28cccc69e0A9dA439e9D587b3bD",
        "FRAUD_PROOF_WINDOW": 604800,
        "getFraudProofWindow": 604800,
        "getLastSequencerTimestamp": 1698748451,
        "getTotalBatches": 7709,
        "getTotalElements": 18502668,
        "libAddressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "messenger": "0x676A795fe6E43C17c668de16730c3F690FEB7120",
        "SEQUENCER_PUBLISH_WINDOW": 12592000
      },
      "derivedName": "StateCommitmentChain"
    },
    {
      "name": "TssDelegationSlasher",
      "address": "0x910265C29c099eAc87EF6d374b6f3bE45B516EB7",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xC159F0B28a7bd4b4924e762207275a4475C09fd5",
        "admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "implementations": ["0xC159F0B28a7bd4b4924e762207275a4475C09fd5"],
      "sinceTimestamp": 1687955255,
      "values": {
        "delegation": "0xd4B5E3D46D202C3523C3Ad89dfe74eC272BFC96A",
        "investmentManager": "0xA90FCe37D274e673f3850b835F18790542b1755d",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": false
      }
    },
    {
      "name": "PubkeyCompendium",
      "address": "0x92986cd63C3409b7dA2882624B6d6E7Cf660707a",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x18Dd3cBE484f955217165FEaC6fe928D04a56a72",
        "admin": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb"
      },
      "implementations": ["0x18Dd3cBE484f955217165FEaC6fe928D04a56a72"],
      "sinceTimestamp": 1687931999,
      "values": {
        "IS_TEST": false,
        "permissionManager": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01"
      },
      "derivedName": "BLSPublicKeyCompendium"
    },
    {
      "name": "L1StandardBridge",
      "address": "0x95fC37A27a2f68e3A647CDc081F0A89bb47c3012",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x6B6e0dC564d4603452E40752ecDAa0e9630B38A2",
        "admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "implementations": ["0x6B6e0dC564d4603452E40752ecDAa0e9630B38A2"],
      "sinceTimestamp": 1687954103,
      "values": {
        "l1MantleAddress": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "l2TokenBridge": "0x4200000000000000000000000000000000000010",
        "messenger": "0x676A795fe6E43C17c668de16730c3F690FEB7120"
      },
      "derivedName": "L1StandardBridge"
    },
    {
      "name": "AssertionMap",
      "address": "0xa0d79E982bfD3C2ccD09D2E374ddC75fe328f317",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1872Ce78A362c58D093EE107cAdeE2667b7Bd993",
        "admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "implementations": ["0x1872Ce78A362c58D093EE107cAdeE2667b7Bd993"],
      "sinceTimestamp": 1687960751,
      "values": {
        "rollupAddress": "0xD1328C9167e0693B689b5aa5a024379d4e437858"
      },
      "derivedName": "AssertionMap"
    },
    {
      "name": "TssDelegationManager",
      "address": "0xA90FCe37D274e673f3850b835F18790542b1755d",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x988DdC2b0ad9Ba5Ade892E1BF848308e8c7A9187",
        "admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "implementations": ["0x988DdC2b0ad9Ba5Ade892E1BF848308e8c7A9187"],
      "sinceTimestamp": 1687954967,
      "values": {
        "delegation": "0xd4B5E3D46D202C3523C3Ad89dfe74eC272BFC96A",
        "delegationSlasher": "0x910265C29c099eAc87EF6d374b6f3bE45B516EB7",
        "DEPOSIT_TYPEHASH": "0x0a564d4cfe5cb0d4ee082aab2ca54b8c48e129485a8f7c77766ab5ef0c3566f1",
        "DOMAIN_SEPARATOR": "0x4a2e0e6818e92eaab9c7197132ac49344bfba39c153446cc83d6996261eb1652",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "minStakeAmount": "99999999999999999999999",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": false,
        "REASONABLE_STAKES_UPDATE_PERIOD": 30,
        "stakingSlash": "0x78CF48880E9e1b3ab209779c0D8A76f611e53e81",
        "tssGroupManager": "0x399ca67660B79F7aA8A7Efd5BEF9836A4c19CACF",
        "WITHDRAWAL_WAITING_PERIOD": 10
      }
    },
    {
      "name": "MantleSecondStrat",
      "address": "0xA937660031787C4408587D2c6A67Ec4B260630F5",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x9FEcF38689349a5CFf97526610CdB27618edc6b9",
        "admin": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83"
      },
      "implementations": ["0x9FEcF38689349a5CFf97526610CdB27618edc6b9"],
      "sinceTimestamp": 1687931291,
      "values": {
        "explanation": "Base InvestmentStrategy implementation to inherit from for more complex implementations",
        "investmentManager": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
        "minDeposit": "10000000000000000000",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": 0,
        "pauserRegistry": "0x075a48633dc6845f92339741E9c96b88f1b2A86f",
        "totalShares": 0,
        "underlyingToken": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354"
      },
      "derivedName": "InvestmentStrategyBase"
    },
    {
      "name": "RegistryPermission",
      "address": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xAb00B934DE01c1b4931047125C2ba5B3d6186b85",
        "admin": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83"
      },
      "implementations": ["0xAb00B934DE01c1b4931047125C2ba5B3d6186b85"],
      "sinceTimestamp": 1687930979,
      "values": {
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "permissionPerson": "0x207E804758e28F2b3fD6E4219671B327100b82f8"
      },
      "derivedName": "RegistryPermission"
    },
    {
      "name": "DataLayrChallenge",
      "address": "0xc9C24f1aaD2614E81f033746292F5Dc5d7Ccad94",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x6EE53D3d6e622Ac0296369445AFB3CBBDc57C066",
        "admin": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb"
      },
      "implementations": ["0x6EE53D3d6e622Ac0296369445AFB3CBBDc57C066"],
      "sinceTimestamp": 1687932023,
      "values": {
        "challengeUtils": "0xCDC78c5eaea2dE33B00a9200Ee1700937fb0f55D",
        "dataLayrServiceManager": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1",
        "dlRegistry": "0x1eD35B793d887e028493dAC4a11AA5Feb811dd67",
        "pairingGasLimit": 500000
      }
    },
    {
      "name": "MantleFirstStrat",
      "address": "0xCAD08A7B9eF6ADeFAef08d0d85a577a288F93Ee1",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x9FEcF38689349a5CFf97526610CdB27618edc6b9",
        "admin": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83"
      },
      "implementations": ["0x9FEcF38689349a5CFf97526610CdB27618edc6b9"],
      "sinceTimestamp": 1687931243,
      "values": {
        "explanation": "Base InvestmentStrategy implementation to inherit from for more complex implementations",
        "investmentManager": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
        "minDeposit": "10000000000000000000",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": 0,
        "pauserRegistry": "0x075a48633dc6845f92339741E9c96b88f1b2A86f",
        "totalShares": "1000000000000000000000000",
        "underlyingToken": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354"
      },
      "derivedName": "InvestmentStrategyBase"
    },
    {
      "name": "DataLayrChallengeUtils",
      "address": "0xCDC78c5eaea2dE33B00a9200Ee1700937fb0f55D",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xd8d731624d97a66e012E62208cFc921d7033c564",
        "admin": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb"
      },
      "implementations": ["0xd8d731624d97a66e012E62208cFc921d7033c564"],
      "sinceTimestamp": 1687931951,
      "values": {
        "getZeroPolyMerkleRoot": []
      },
      "derivedName": "DataLayrChallengeUtils"
    },
    {
      "name": "Rollup",
      "address": "0xD1328C9167e0693B689b5aa5a024379d4e437858",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x242a33ca49C564caFC9C83C700b79f1074c42A0D",
        "admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "implementations": ["0x242a33ca49C564caFC9C83C700b79f1074c42A0D"],
      "sinceTimestamp": 1687961351,
      "values": {
        "assertions": "0xa0d79E982bfD3C2ccD09D2E374ddC75fe328f317",
        "baseStakeAmount": 0,
        "challengeCtx": [
          false,
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000",
          "0x0000000000000000000000000000000000000000",
          0,
          0
        ],
        "confirmedInboxSize": 18502668,
        "currentRequiredStake": 0,
        "lastConfirmedAssertionID": 7709,
        "lastCreatedAssertionID": 7709,
        "lastResolvedAssertionID": 7709,
        "libAddressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "minimumAssertionPeriod": 0,
        "numStakers": 2,
        "operatorslist": [
          "0x6667961f5e9C98A76a48767522150889703Ed77D",
          "0x4c5E208BA71d457bD18cFc7f1847DA7209C79994"
        ],
        "owner": "0x6667961f5e9C98A76a48767522150889703Ed77D",
        "stakerslist": [
          "0x47336ae44F573a7C3C41a9ae04A9D48E5dFD8f8E",
          "0x84A628347537d4900a0b720Ee294445F90c3887a"
        ],
        "stakeToken": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "verifier": "0x3F77D44E1789D47e076a4d5f2779a1fCAb821C2a",
        "zombies": []
      },
      "derivedName": "Rollup"
    },
    {
      "name": "ChainStorageContainerSCC",
      "address": "0xd3f0BD982D72e28cccc69e0A9dA439e9D587b3bD",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1687952219,
      "values": {
        "getGlobalMetadata": "0x0000000000000000000000000000000000006540d82300011a540c",
        "length": 7709,
        "libAddressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "owner": "StateCommitmentChain"
      },
      "derivedName": "ChainStorageContainer"
    },
    {
      "name": "TssDelegation",
      "address": "0xd4B5E3D46D202C3523C3Ad89dfe74eC272BFC96A",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x7126F676ac359eCE8D5244120FF9E78eD3222246",
        "admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "implementations": ["0x7126F676ac359eCE8D5244120FF9E78eD3222246"],
      "sinceTimestamp": 1687954679,
      "values": {
        "DELEGATION_TYPEHASH": "0xb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c",
        "delegationManager": "0xA90FCe37D274e673f3850b835F18790542b1755d",
        "DOMAIN_SEPARATOR": "0x1b3cc3a2d2973d2766aadd038cb02d80ea2d3a8be32deb429783c47e69a0963a",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": false,
        "stakingSlash": "0x78CF48880E9e1b3ab209779c0D8A76f611e53e81"
      }
    },
    {
      "name": "Delegation",
      "address": "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xAdA69A18B30B3B9235AB2748116bB9195e16aDba",
        "admin": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83"
      },
      "implementations": ["0xAdA69A18B30B3B9235AB2748116bB9195e16aDba"],
      "sinceTimestamp": 1687930907,
      "values": {
        "DELEGATION_TYPEHASH": "0xb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c",
        "DOMAIN_SEPARATOR": "0xbc7bcb096dfed433b8cff98aee0d5bcc22202e4870ee9b36c93c2fb0303b87e6",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "investmentManager": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": 0,
        "pauserRegistry": "0x075a48633dc6845f92339741E9c96b88f1b2A86f",
        "permissionManager": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01"
      },
      "derivedName": "EigenLayrDelegation"
    }
  ],
  "eoas": [
    "0x0B6F2C77C3740A5e6f88A4eCdd02C10BE8a2e323",
    "0x18214cCF63060d579524A69ee1B97404594fc831",
    "0x1888e4aC2Ab37A73B33448B87bABdD1ce1dcBAbe",
    "0x207E804758e28F2b3fD6E4219671B327100b82f8",
    "0x2288226d687c01B7332c2A99A0C5A4a112c63f1e",
    "0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749",
    "0x2F6AFE2E3feA041b892a6e240Fd1A0E5b51e8376",
    "0x3000BE80ad204D327990eB403654aCd1Eaa8eCeb",
    "0x306d1c4482b629a684A54B121F6f57dbE617740b",
    "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8",
    "0x4200000000000000000000000000000000000010",
    "0x422f2df38B96395A7E61d4C02aDd4413bb79A9FC",
    "0x4c5E208BA71d457bD18cFc7f1847DA7209C79994",
    "0x51A887f3C12295A69f57D0f41b276bfEBc91AafC",
    "0x550b3CB2D5fB5E4F0A08322CaC7b04291558CDa8",
    "0x5881541E79f5D9d5d72c87E8Ea6F681CAb289B12",
    "0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317",
    "0x61Af7a48B0EeA8481E5A055A35f829d0e8505fE3",
    "0x630E93130809c4acE55249229Ee6B043b929A9Ad",
    "0x6667961f5e9C98A76a48767522150889703Ed77D",
    "0x66f13847536153eFFFFdfD7Bd4Dea5eD3F60f639",
    "0x6aBa10C9BB6a39445d990Fb7A720fA53025Bd7Dc",
    "0x6cc5A6F5a9E4757790e4068Aa9757226Cb854B64",
    "0x717c3DC6Df69c316d6Ac593077BC84Cc86f214A4",
    "0x895562F29cd2d6B46Da776B3a7778f77E99DbDEE",
    "0x8A3D6c77E5BAcE8cb0822B28E4Fc56FC06fB5645",
    "0x8BEF0466b7C2CbFD753eF340e062dF06E93ADA7f",
    "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a",
    "0x9436b6F211f50F5d5a17521e4725E27518dAFA61",
    "0x9844f67c071caE21B0324D049Febe67158E23f98",
    "0x9d078Aef47e835abeEB75580B17e1CB864E9b4e1",
    "0xB61298691FE0df10634A67dd83b2253E74cbF7fb",
    "0xBB08BEEaeD39cbD6D9BdB24F2627092984ae55a1",
    "0xBbDbE7F5aC524078ac72c1d4d39cD9b40cb4b9aD",
    "0xbE73dea9c8DcDdB6b03F7e5797b85982065fe34e",
    "0xc1dEd495E1dDf089B2b41d6397C0aBa04BDA1A21",
    "0xC37642355c18ec9c3b3268AAC67e33516aa115eb",
    "0xc4143711aA5bd6d37F1b0A690120AA5859e32A93",
    "0xc828De4e817e1705CC539267D5F28BE8dbeF28DE",
    "0xcEb157a9bB9c80a845d5924e8CEAA591Caf705a5",
    "0xd4fa4b67b69C3FcF3dbF15db5d80202040BC72Fc",
    "0xe75D7324d6BC4E70A200c5E268160332F43b2d2B",
    "0xf5b16239f88B54894e03e0293d3d7FDdEb9f9070",
    "0xf73546Da2F971bD0Ed1b3c5F9C01092180Db5089",
    "0xf995d1022269c2e0ecaacD15d73e3a621FD69A3E"
  ],
  "abis": {
    "0x075a48633dc6845f92339741E9c96b88f1b2A86f": [
      "constructor(address _pauser, address _unpauser)",
      "event PauserChanged(address previousPauser, address newPauser)",
      "event UnpauserChanged(address previousUnpauser, address newUnpauser)",
      "function pauser() view returns (address)",
      "function setPauser(address newPauser)",
      "function setUnpauser(address newUnpauser)",
      "function unpauser() view returns (address)"
    ],
    "0x09b276F9EcB83Fb6a37970e655863B04143Dc431": [
      "constructor()",
      "event Deposit(address depositor, address token, uint256 amount)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Slashing(address, uint8)",
      "event Unpaused(address account)",
      "event Withdraw(address depositor, address token, uint256 amount)",
      "event WithdrawQueue(address, uint256)",
      "function canCompleteQueuedWithdrawal() returns (bool)",
      "function claimerOperators(address) view returns (address)",
      "function clearQuitRequestList()",
      "function completeWithdraw()",
      "function delegateTo(address _operator)",
      "function delegation() view returns (address)",
      "function delegationManager() view returns (address)",
      "function delegators(address) view returns (address)",
      "function deposit(address depositor, address token, uint256 amount) returns (uint256 newShares)",
      "function deposit(uint256 amount) returns (uint256)",
      "function explanation() pure returns (string)",
      "function getQuitRequestList() view returns (address[])",
      "function getSlashRecord(uint256 batchIndex, address user) view returns (bool)",
      "function getSlashingParams() view returns (uint256[2])",
      "function initialize(address _mantleToken, address _tssGroupContract, address _delegationManager, address _delegation, address _l1messenger, address _regulatoryAccount, address _tssManager)",
      "function isCanOperator(address _addr) returns (bool)",
      "function isJailed(address user) returns (bool)",
      "function isSetParam() view returns (bool)",
      "function messenger() view returns (address)",
      "function onDelegationReceived(address delegator, address[] investorDelegationShares, uint256[] investorShares)",
      "function onDelegationReceived(address delegator, address operator, address[] delegationShares, uint256[] investorShares)",
      "function onDelegationWithdrawn(address delegator, address operator, address[] delegationShares, uint256[] investorShares)",
      "function onDelegationWithdrawn(address delegator, address[] investorDelegationShares, uint256[] investorShares)",
      "function operatorClaimers(address) view returns (address)",
      "function operators(address) view returns (bytes)",
      "function owner() view returns (address)",
      "function paused() view returns (bool)",
      "function payForService(address token, uint256 amount) payable",
      "function quitRequest()",
      "function quitRequestList(uint256) view returns (address)",
      "function registerAsOperator(bytes _pubKey)",
      "function regulatoryAccount() view returns (address)",
      "function renounceOwnership()",
      "function setClaimer(address _operator, address _claimer)",
      "function setRegulatoryAccount(address _account)",
      "function setSlashingParams(uint256[2] _slashAmount)",
      "function setTokenAddress(address _token)",
      "function setTssGroupAddress(address _tssGroup)",
      "function setTssManager(address _tssManager)",
      "function shares(address user) view returns (uint256)",
      "function sharesToUnderlying(uint256 amountShares) view returns (uint256)",
      "function sharesToUnderlyingView(uint256 amountShares) view returns (uint256)",
      "function slashAmount(uint256) view returns (uint256)",
      "function slashing(bytes _messageBytes, bytes _sig)",
      "function stakers(address, uint256) view returns (address)",
      "function startWithdraw()",
      "function totalShares() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function tssDelegationContract() view returns (address)",
      "function tssDelegationManagerContract() view returns (address)",
      "function tssGroupContract() view returns (address)",
      "function tssManager() view returns (address)",
      "function unJail()",
      "function underlyingToShares(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToSharesView(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToken() view returns (address)",
      "function userUnderlying(address user) returns (uint256)",
      "function userUnderlyingView(address user) view returns (uint256)",
      "function withdraw()",
      "function withdraw(address depositor, address token, uint256 amountShares)",
      "function withdrawalRoots(address) view returns (bytes32)",
      "function withdrawals(address) view returns (address depositor, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, address delegatedAddress)"
    ],
    "0x0cac2B1a172ac24012621101634DD5ABD6399ADd": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x1872Ce78A362c58D093EE107cAdeE2667b7Bd993": [
      "constructor()",
      "error ChildInboxSizeMismatch()",
      "error NotRollup(address sender, address rollup)",
      "error SiblingStateHashExists()",
      "event Initialized(uint8 version)",
      "function assertions(uint256) view returns (bytes32 stateHash, uint256 inboxSize, uint256 parent, uint256 deadline, uint256 proposalTime, uint256 numStakers, uint256 childInboxSize)",
      "function createAssertion(uint256 assertionID, bytes32 stateHash, uint256 inboxSize, uint256 parentID, uint256 deadline)",
      "function deleteAssertion(uint256 assertionID)",
      "function deleteAssertionForBatch(uint256 assertionID)",
      "function getDeadline(uint256 assertionID) view returns (uint256)",
      "function getInboxSize(uint256 assertionID) view returns (uint256)",
      "function getNumStakers(uint256 assertionID) view returns (uint256)",
      "function getParentID(uint256 assertionID) view returns (uint256)",
      "function getProposalTime(uint256 assertionID) view returns (uint256)",
      "function getStateHash(uint256 assertionID) view returns (bytes32)",
      "function initialize()",
      "function isStaker(uint256 assertionID, address stakerAddress) view returns (bool)",
      "function rollupAddress() view returns (address)",
      "function setRollupAddress(address _rollupAddress)",
      "function stakeOnAssertion(uint256 assertionID, address stakerAddress)"
    ],
    "0x18Dd3cBE484f955217165FEaC6fe928D04a56a72": [
      "constructor(address _permissionManager)",
      "event NewPubkeyRegistration(address operator, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2)",
      "event log(string)",
      "event log_address(address)",
      "event log_bytes(bytes)",
      "event log_bytes32(bytes32)",
      "event log_int(int256)",
      "event log_named_address(string key, address val)",
      "event log_named_bytes(string key, bytes val)",
      "event log_named_bytes32(string key, bytes32 val)",
      "event log_named_decimal_int(string key, int256 val, uint256 decimals)",
      "event log_named_decimal_uint(string key, uint256 val, uint256 decimals)",
      "event log_named_int(string key, int256 val)",
      "event log_named_string(string key, string val)",
      "event log_named_uint(string key, uint256 val)",
      "event log_string(string)",
      "event log_uint(uint256)",
      "event logs(bytes)",
      "function IS_TEST() view returns (bool)",
      "function failed() returns (bool)",
      "function operatorToPubkeyHash(address) view returns (bytes32)",
      "function permissionManager() view returns (address)",
      "function pubkeyHashToOperator(bytes32) view returns (address)",
      "function registerBLSPublicKey(uint256 s, tuple(uint256 X, uint256 Y) rPoint, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2)"
    ],
    "0x1eD35B793d887e028493dAC4a11AA5Feb811dd67": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x23754725a49c0f003C349A6C7869fF8609a7CEfd": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x242a33ca49C564caFC9C83C700b79f1074c42A0D": [
      "constructor()",
      "error AssertionAlreadyResolved()",
      "error AssertionOutOfRange()",
      "error ChallengePeriodPending()",
      "error ChallengedStaker()",
      "error DifferentParent()",
      "error EmptyAssertion()",
      "error InDifferentChallenge(address staker1Challenge, address staker2Challenge)",
      "error InboxReadLimitExceeded()",
      "error InsufficientStake()",
      "error InvalidParent()",
      "error MinimumAssertionPeriodNotPassed()",
      "error NoStaker()",
      "error NoUnresolvedAssertion()",
      "error NotAllStaked()",
      "error NotInChallenge()",
      "error NotStaked()",
      "error ParentAssertionUnstaked()",
      "error PreviousStateHash()",
      "error RedundantInitialized()",
      "error StakedOnUnconfirmedAssertion()",
      "error StakerStakedOnTarget()",
      "error StakersPresent()",
      "error TransferFailed()",
      "error UnproposedAssertion()",
      "error WrongOrder()",
      "error ZeroAddress()",
      "event AssertionChallenged(uint256 assertionID, address challengeAddr)",
      "event AssertionConfirmed(uint256 assertionID)",
      "event AssertionCreated(uint256 assertionID, address asserterAddr, bytes32 vmHash, uint256 inboxSize)",
      "event AssertionRejected(uint256 assertionID)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event StakerStaked(address stakerAddr, uint256 assertionID)",
      "function addToOperatorWhitelist(address[] toAddAddresses)",
      "function addToStakerWhitelist(address[] toAddAddresses)",
      "function advanceStake(uint256 assertionID)",
      "function assertions() view returns (address)",
      "function baseStakeAmount() view returns (uint256)",
      "function challengeAssertion(address[2] players, uint256[2] assertionIDs) returns (address)",
      "function challengeCtx() view returns (bool completed, address challengeAddress, address defenderAddress, address challengerAddress, uint256 defenderAssertionID, uint256 challengerAssertionID)",
      "function completeChallenge(address winner, address loser)",
      "function confirmFirstUnresolvedAssertion()",
      "function confirmedInboxSize() view returns (uint256)",
      "function createAssertion(bytes32 vmHash, uint256 inboxSize)",
      "function createAssertionWithStateBatch(bytes32 vmHash, uint256 inboxSize, bytes32[] _batch, uint256 _shouldStartAtElement, bytes _signature)",
      "function currentRequiredStake() view returns (uint256)",
      "function initialize(address _owner, address _verifier, address _stakeToken, address _libAddressManager, address _assertionMap, uint256 _minimumAssertionPeriod, uint256 _baseStakeAmount, bytes32 _initialVMhash, address[] stakerWhitelists, address[] operatorWhitelists)",
      "function isStaked(address addr) view returns (bool)",
      "function lastConfirmedAssertionID() view returns (uint256)",
      "function lastCreatedAssertionID() view returns (uint256)",
      "function lastResolvedAssertionID() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function minimumAssertionPeriod() view returns (uint256)",
      "function numStakers() view returns (uint256)",
      "function operatorWhitelist(address) view returns (uint256)",
      "function operatorslist(uint256) view returns (address)",
      "function owner() view returns (address)",
      "function registers(address) view returns (address)",
      "function rejectFirstUnresolvedAssertion()",
      "function rejectLatestCreatedAssertionWithBatch(tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes signature, bytes extraData) _batchHeader)",
      "function removeFromOperatorWhitelist(address[] toRemoveAddresses)",
      "function removeFromStakerWhitelist(address[] toRemoveAddresses)",
      "function removeOldZombies()",
      "function removeStake(address stakerAddress)",
      "function resolve(string _name) view returns (address)",
      "function rollbackL2Chain(uint256 _shouldRollBack, uint256 _shouldStartAtElement, bytes _signature)",
      "function stake(uint256 stakeAmount, address operator)",
      "function stakeToken() view returns (address)",
      "function stakerWhitelist(address) view returns (uint256)",
      "function stakers(address) view returns (bool isStaked, uint256 amountStaked, uint256 assertionID, address operator, address currentChallenge)",
      "function stakerslist(uint256) view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unstake(uint256 stakeAmount)",
      "function verifier() view returns (address)",
      "function withdraw()",
      "function withdrawableFunds(address) view returns (uint256)",
      "function zombies(uint256) view returns (address stakerAddress, uint256 lastAssertionID)"
    ],
    "0x291dc3819b863e19b0a9b9809F8025d2EB4aaE93": [
      "constructor(address _libAddressManager, uint256 _maxTransactionGasLimit, uint256 _l2GasDiscountDivisor, uint256 _enqueueGasCost)",
      "event CTCBatchReset(uint256 indexed _batchIndex, uint40 _nextqIndex, uint40 _totalElement, uint40 _batchSize, uint40 _numQueuedTransactions, uint40 _timestamp, uint40 _blockNumber)",
      "event L2GasParamsUpdated(uint256 l2GasDiscountDivisor, uint256 enqueueGasCost, uint256 enqueueL2GasPrepaid)",
      "event QueueBatchAppended(uint256 _startingQueueIndex, uint256 _numQueueElements, uint256 _totalElements)",
      "event SequencerBatchAppended(uint256 _startingQueueIndex, uint256 _numQueueElements, uint256 _totalElements)",
      "event TransactionBatchAppended(uint256 indexed _batchIndex, bytes32 _batchRoot, uint256 _batchSize, uint256 _prevTotalElements, bytes _signature, bytes _extraData)",
      "event TransactionEnqueued(address indexed _l1TxOrigin, address indexed _target, uint256 _gasLimit, bytes _data, uint256 indexed _queueIndex, uint256 _timestamp)",
      "function MAX_ROLLUP_TX_SIZE() view returns (uint256)",
      "function MIN_ROLLUP_TX_GAS() view returns (uint256)",
      "function appendSequencerBatch()",
      "function batches() view returns (address)",
      "function enqueue(address _target, uint256 _gasLimit, bytes _data)",
      "function enqueueGasCost() view returns (uint256)",
      "function enqueueL2GasPrepaid() view returns (uint256)",
      "function getLastBlockNumber() view returns (uint40)",
      "function getLastTimestamp() view returns (uint40)",
      "function getNextQueueIndex() view returns (uint40)",
      "function getNumPendingQueueElements() view returns (uint40)",
      "function getQueueElement(uint256 _index) view returns (tuple(bytes32 transactionHash, uint40 timestamp, uint40 blockNumber) _element)",
      "function getQueueLength() view returns (uint40)",
      "function getTotalBatches() view returns (uint256 _totalBatches)",
      "function getTotalElements() view returns (uint256 _totalElements)",
      "function l2GasDiscountDivisor() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function maxTransactionGasLimit() view returns (uint256)",
      "function resetIndex(uint256 _batchIndex, uint40 _totalElement, uint40 _batchSize, uint40 _nextqIndex, uint40 _numQueuedTransactions, uint40 _timestamp, uint40 _blockNumber)",
      "function resolve(string _name) view returns (address)",
      "function setGasParams(uint256 _l2GasDiscountDivisor, uint256 _enqueueGasCost)"
    ],
    "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9": [
      "constructor(address _singleton)"
    ],
    "0x31aBe1c466C2A8b95fd84258dD1471472979B650": [
      "constructor(address _libAddressManager)",
      "function isCollateralized(address _who) view returns (bool)",
      "function libAddressManager() view returns (address)",
      "function resolve(string _name) view returns (address)"
    ],
    "0x399ca67660B79F7aA8A7Efd5BEF9836A4c19CACF": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x3c3a81e81dc49A522A592e7622A7E711c06bf354": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x3F77D44E1789D47e076a4d5f2779a1fCAb821C2a": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x4692363048d0F32a2dE7816860D48fff0c61B24B": [
      "constructor()",
      "event FailedRelayedMessage(bytes32 indexed msgHash)",
      "event Initialized(uint8 version)",
      "event MessageAllowed(bytes32 indexed _xDomainCalldataHash)",
      "event MessageBlocked(bytes32 indexed _xDomainCalldataHash)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RelayedMessage(bytes32 indexed msgHash)",
      "event SentMessage(address indexed target, address sender, bytes message, uint256 messageNonce, uint256 gasLimit)",
      "event Unpaused(address account)",
      "function allowMessage(bytes32 _xDomainCalldataHash)",
      "function blockMessage(bytes32 _xDomainCalldataHash)",
      "function blockedMessages(bytes32) view returns (bool)",
      "function getPauseOwner() view returns (address)",
      "function initialize(address _libAddressManager)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (address)",
      "function pause()",
      "function pauseByPOwner()",
      "function paused() view returns (bool)",
      "function relayMessage(address _target, address _sender, bytes _message, uint256 _messageNonce, tuple(bytes32 stateRoot, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes signature, bytes extraData) stateRootBatchHeader, tuple(uint256 index, bytes32[] siblings) stateRootProof, bytes stateTrieWitness, bytes storageTrieWitness) _proof)",
      "function relayedMessages(bytes32) view returns (bool)",
      "function renounceOwnership()",
      "function replayMessage(address _target, address _sender, bytes _message, uint256 _queueIndex, uint32 _oldGasLimit, uint32 _newGasLimit)",
      "function resolve(string _name) view returns (address)",
      "function sendMessage(address _target, bytes _message, uint32 _gasLimit)",
      "function setPauseOwner(address _pauseOwner)",
      "function successfulMessages(bytes32) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0x47336ae44F573a7C3C41a9ae04A9D48E5dFD8f8E": [
      "constructor(address _singleton)"
    ],
    "0x47D58744D8515d9aaEAf961bc03625118bd91EBb": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x4ca725D446EcE6e3fFd3E072A6f2A6a16Ca492D0": [
      "constructor(address _pauser, address _unpauser)",
      "event PauserChanged(address previousPauser, address newPauser)",
      "event UnpauserChanged(address previousUnpauser, address newUnpauser)",
      "function pauser() view returns (address)",
      "function setPauser(address newPauser)",
      "function setUnpauser(address newUnpauser)",
      "function unpauser() view returns (address)"
    ],
    "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f": [
      "constructor(address _singleton)"
    ],
    "0x50Fa427235C7C8cAA4A0C21b5009f5a0d015B23A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x5Dd48eF85B99E3e3d711Ca8B41cBC07dA1677F3E": [
      "constructor(address _libAddressManager, string _owner)",
      "function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)",
      "function deleteElementsAfterInclusive(uint256 _index)",
      "function get(uint256 _index) view returns (bytes32)",
      "function getGlobalMetadata() view returns (bytes27)",
      "function length() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (string)",
      "function push(bytes32 _object, bytes27 _globalMetadata)",
      "function push(bytes32 _object)",
      "function resolve(string _name) view returns (address)",
      "function setGlobalMetadata(bytes27 _globalMetadata)"
    ],
    "0x64F4244eEA17a361bb919A28F614C3ad1aC565ad": [
      "constructor(address _investmentManager, address _serviceManager, uint8 _NUMBER_OF_QUORUMS, address _pubkeyCompendium, address _permissionManager, address _forceDeregister)",
      "event Deregistration(address operator, address swapped, tuple(uint256 X, uint256 Y) pk, bytes32 apkHash)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Registration(address indexed operator, bytes32 pkHash, tuple(uint256 X, uint256 Y) pk, uint32 apkHashIndex, bytes32 apkHash, string socket)",
      "event SocketUpdate(address operator, string socket)",
      "event StakeUpdate(address operator, uint96 firstQuorumStake, uint96 secondQuorumStake, uint32 updateBlockNumber, uint32 prevUpdateBlockNumber)",
      "event StrategyAddedToQuorum(uint256 indexed quorumNumber, address strategy)",
      "event StrategyRemovedFromQuorum(uint256 indexed quorumNumber, address strategy)",
      "function NUMBER_OF_QUORUMS() view returns (uint256)",
      "function addStrategiesConsideredAndMultipliers(uint256 quorumNumber, tuple(address strategy, uint96 multiplier)[] _newStrategiesConsideredAndMultipliers)",
      "function apk() view returns (uint256 X, uint256 Y)",
      "function apkHashes(uint256 index) view returns (bytes32)",
      "function apkUpdateBlockNumbers(uint256 index) view returns (uint32)",
      "function apkUpdates(uint256 index) view returns (tuple(bytes32 apkHash, uint32 blockNumber))",
      "function checkOperatorActiveAtBlockNumber(address operator, uint256 blockNumber, uint256 stakeHistoryIndex) view returns (bool)",
      "function checkOperatorInactiveAtBlockNumber(address operator, uint256 blockNumber, uint256 stakeHistoryIndex) view returns (bool)",
      "function delegation() view returns (address)",
      "function deregisterOperator(tuple(uint256 X, uint256 Y) pkToRemove, uint32 index) returns (bool)",
      "function firstQuorumStakedByOperator(address operator) view returns (uint96)",
      "function forceDeregister() view returns (address)",
      "function forceDeregisterOperator(tuple(uint256 X, uint256 Y) pkToRemove, address operator, uint32 index) returns (bool)",
      "function getApkUpdatesLength() view returns (uint256)",
      "function getCorrectApkHash(uint256 index, uint32 blockNumber) view returns (bytes32)",
      "function getFromTaskNumberForOperator(address operator) view returns (uint32)",
      "function getLengthOfPubkeyHashIndexHistory(bytes32 pubkeyHash) view returns (uint256)",
      "function getLengthOfPubkeyHashStakeHistory(bytes32 pubkeyHash) view returns (uint256)",
      "function getLengthOfTotalOperatorsHistory() view returns (uint256)",
      "function getLengthOfTotalStakeHistory() view returns (uint256)",
      "function getMostRecentStakeByOperator(address operator) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 firstQuorumStake, uint96 secondQuorumStake))",
      "function getOperatorIndex(address operator, uint32 blockNumber, uint32 index) view returns (uint32)",
      "function getOperatorPubkeyHash(address operator) view returns (bytes32)",
      "function getStakeFromPubkeyHashAndIndex(bytes32 pubkeyHash, uint256 index) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 firstQuorumStake, uint96 secondQuorumStake))",
      "function getStakeHistoryLength(bytes32 pubkeyHash) view returns (uint256)",
      "function getTotalOperators(uint32 blockNumber, uint32 index) view returns (uint32)",
      "function getTotalStakeFromIndex(uint256 index) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 firstQuorumStake, uint96 secondQuorumStake))",
      "function initialize(uint256[] _quorumBips, address initialOwner, tuple(address strategy, uint96 multiplier)[] _firstQuorumStrategiesConsideredAndMultipliers, tuple(address strategy, uint96 multiplier)[] _secondQuorumStrategiesConsideredAndMultipliers)",
      "function investmentManager() view returns (address)",
      "function isActiveOperator(address operator) view returns (bool)",
      "function minimumStakeFirstQuorum() view returns (uint128)",
      "function minimumStakeSecondQuorum() view returns (uint128)",
      "function numOperators() view returns (uint32)",
      "function operatorList(uint256) view returns (address)",
      "function operatorStakes(address operator) view returns (uint96, uint96)",
      "function owner() view returns (address)",
      "function permissionManager() view returns (address)",
      "function pubkeyCompendium() view returns (address)",
      "function pubkeyHashToIndexHistory(bytes32, uint256) view returns (uint32 toBlockNumber, uint32 index)",
      "function pubkeyHashToStakeHistory(bytes32, uint256) view returns (uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 firstQuorumStake, uint96 secondQuorumStake)",
      "function quorumBips(uint256) view returns (uint256)",
      "function registerOperator(uint8 operatorType, tuple(uint256 X, uint256 Y) pk, string socket)",
      "function registry(address) view returns (bytes32 pubkeyHash, uint32 fromTaskNumber, uint8 status)",
      "function removeStrategiesConsideredAndMultipliers(uint256 quorumNumber, address[] _strategiesToRemove, uint256[] indicesToRemove)",
      "function renounceOwnership()",
      "function secondQuorumStakedByOperator(address operator) view returns (uint96)",
      "function serviceManager() view returns (address)",
      "function setForceDeregister(address _forceDeregister)",
      "function setMinimumStakeFirstQuorum(uint128 _minimumStakeFirstQuorum)",
      "function setMinimumStakeSecondQuorum(uint128 _minimumStakeSecondQuorum)",
      "function strategiesConsideredAndMultipliers(uint256, uint256) view returns (address strategy, uint96 multiplier)",
      "function strategiesConsideredAndMultipliersLength(uint256 quorumNumber) view returns (uint256)",
      "function totalOperatorsHistory(uint256) view returns (uint32 toBlockNumber, uint32 index)",
      "function totalStake() view returns (uint96, uint96)",
      "function transferOwnership(address newOwner)",
      "function updateSocket(string newSocket)",
      "function updateStakes(address[] operators, uint256[] prevElements)",
      "function weightOfOperator(address operator, uint256 quorumNumber) returns (uint96)"
    ],
    "0x676A795fe6E43C17c668de16730c3F690FEB7120": [
      "constructor(address _libAddressManager, string _implementationName)"
    ],
    "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42": [
      "event AddressSet(string indexed _name, address _newAddress, address _oldAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getAddress(string _name) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function transferOwnership(address newOwner)"
    ],
    "0x6B6e0dC564d4603452E40752ecDAa0e9630B38A2": [
      "constructor()",
      "event ERC20DepositInitiated(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event ERC20WithdrawalFinalized(address indexed _l1Token, address indexed _l2Token, address indexed _from, address _to, uint256 _amount, bytes _data)",
      "event ETHDepositInitiated(address indexed _from, address indexed _to, uint256 _amount, bytes _data)",
      "event ETHWithdrawalFinalized(address indexed _from, address indexed _to, uint256 _amount, bytes _data)",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _l2Gas, bytes _data)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _l2Gas, bytes _data)",
      "function depositETH(uint32 _l2Gas, bytes _data) payable",
      "function depositETHTo(address _to, uint32 _l2Gas, bytes _data) payable",
      "function deposits(address, address) view returns (uint256)",
      "function donateETH() payable",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _data)",
      "function finalizeETHWithdrawal(address _from, address _to, uint256 _amount, bytes _data)",
      "function finalizeMantleWithdrawal(address _from, address _to, uint256 _amount, bytes _data)",
      "function initialize(address _l1messenger, address _l2TokenBridge, address _l1MantleAddress)",
      "function l1MantleAddress() view returns (address)",
      "function l2TokenBridge() view returns (address)",
      "function messenger() view returns (address)"
    ],
    "0x6EE53D3d6e622Ac0296369445AFB3CBBDc57C066": [
      "constructor(address _dataLayrServiceManager, address _dlRegistry, address _challengeUtils)",
      "event Initialized(uint8 version)",
      "event SuccessfulLowDegreeChallenge(bytes32 indexed headerHash, address challenger)",
      "function challengeLowDegreenessProof(bytes header, tuple(uint256[2] X, uint256[2] Y) potElement, bytes potMerkleProof, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) dataStoreSearchData, tuple(bytes32[] nonSignerPubkeyHashes, uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum) signatoryRecord)",
      "function challengeUtils() view returns (address)",
      "function dataLayrServiceManager() view returns (address)",
      "function dlRegistry() view returns (address)",
      "function freezeOperatorsForLowDegreeChallenge(tuple(address signerAddress, uint32 operatorHistoryIndex)[] nonSignerExclusionProofs, uint256 nonSignerIndex, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) searchData, tuple(bytes32[] nonSignerPubkeyHashes, uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum) signatoryRecord)",
      "function lowDegreeChallenges(bytes32) view returns (address challenger, uint8 status)",
      "function pairingGasLimit() view returns (uint256)",
      "function verifyLowDegreenessProof(bytes header, tuple(uint256[2] X, uint256[2] Y) potElement, bytes potMerkleProof, tuple(uint256 X, uint256 Y) lowDegreenessProof) view returns (bool)",
      "function verifyZeroPaddingProof(bytes header, tuple(uint256 X, uint256 Y) paddingProof, tuple(uint256 X, uint256 Y) paddingQuotientPolyCommit) returns (bool)"
    ],
    "0x7126F676ac359eCE8D5244120FF9E78eD3222246": [
      "constructor(address _delegationManager)",
      "event DecreaseDelegatedShares(address delegatedShare, address operator, uint256 share)",
      "event DelegateTo(address delegatior, address operator)",
      "event IncreaseDelegatedShares(address delegatedShare, address operator, uint256 share)",
      "event Initialized(uint8 version)",
      "event OnDelegationReceivedCallFailure(address indexed delegationTerms, bytes32 returnData)",
      "event OnDelegationWithdrawnCallFailure(address indexed delegationTerms, bytes32 returnData)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event RegisterOperator(address delegationCallback, address register)",
      "event Unpaused(address account)",
      "function DELEGATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function addToWhitelist(address[] toAddAddresses)",
      "function decreaseDelegatedShares(address staker, address delegationShare, uint256 shares)",
      "function decreaseDelegatedShares(address staker, address[] strategies, uint256[] shares)",
      "function delegateTo(address operator, address staker)",
      "function delegateTo(address operator)",
      "function delegateToSignature(address staker, address operator, uint256 expiry, bytes32 r, bytes32 vs)",
      "function delegatedTo(address) view returns (address)",
      "function delegationCallback(address) view returns (address)",
      "function delegationManager() view returns (address)",
      "function delegationStatus(address) view returns (uint8)",
      "function increaseDelegatedShares(address staker, address delegationShare, uint256 shares)",
      "function initialize(address initialOwner)",
      "function initializeT(address _stakingSlashing, address initialOwner)",
      "function isDelegated(address staker) view returns (bool)",
      "function isNotDelegated(address staker) view returns (bool)",
      "function isOperator(address operator) view returns (bool)",
      "function nonces(address) view returns (uint256)",
      "function operatorShares(address, address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function registerAsOperator(address dt, address sender)",
      "function registerAsOperator(address dt)",
      "function removeFromWhitelist(address[] toRemoveAddresses)",
      "function renounceOwnership()",
      "function setStakingSlash(address _address)",
      "function stakingSlash() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function undelegate(address staker)",
      "function unpause()",
      "function whitelist(address) view returns (bool)"
    ],
    "0x7735cDcc85E63A7684C29652DbE8B845e0b4635A": [
      "constructor(address _singleton)"
    ],
    "0x78CF48880E9e1b3ab209779c0D8A76f611e53e81": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x7C4813A9AF2FEA4ca765a26b05d128926E94e72E": [
      "constructor(address _delegation, address _permissionManager)",
      "event DelegatorWithdrawal(address indexed withdrawer, address[] strategies, address[] tokens, uint256[] shares)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function DEPOSIT_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function delegation() view returns (address)",
      "function delegatorWithdraw(uint256[] strategyIndexes, address[] strategies, address[] tokens, uint256[] shares, bool undelegateIfPossible) returns (bool)",
      "function delegatorWithdrawWhiteList(address) view returns (bool)",
      "function depositIntoStrategy(address strategy, address token, uint256 amount) returns (uint256 shares)",
      "function depositIntoStrategyOnBehalfOf(address strategy, address token, uint256 amount, address staker, uint256 expiry, bytes32 r, bytes32 vs) returns (uint256 shares)",
      "function getDeposits(address depositor) view returns (address[], uint256[])",
      "function initialize(address _pauserRegistry, address initialOwner)",
      "function investorStratShares(address, address) view returns (uint256)",
      "function investorStrats(address, uint256) view returns (address)",
      "function investorStratsLength(address staker) view returns (uint256)",
      "function nonces(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function permissionManager() view returns (address)",
      "function renounceOwnership()",
      "function setDelegatorCanWithdraw(address withdrawer)",
      "function setInvestmentStrategy(address _strategy)",
      "function strategyStorage(address) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function undelegate()",
      "function unpause(uint256 newPausedStatus)"
    ],
    "0x84A628347537d4900a0b720Ee294445F90c3887a": [
      "constructor(address _singleton)"
    ],
    "0x89E9D387555AF0cDE22cb98833Bae40d640AD7fa": [
      "constructor(address _libAddressManager, address _l1messenger, uint256 _fraudProofWindow, uint256 _sequencerPublishWindow)",
      "event DistributeTssReward(uint256 indexed _startBlockNumber, uint256 _length, uint256 indexed _batchTime, address[] _tssMembers)",
      "event RollBackL2Chain(uint256 indexed _startBlockNumber)",
      "event StateBatchAppended(uint256 indexed _batchIndex, bytes32 _batchRoot, uint256 _batchSize, uint256 _prevTotalElements, bytes _signature, bytes _extraData)",
      "event StateBatchDeleted(uint256 indexed _batchIndex, bytes32 _batchRoot)",
      "function FRAUD_PROOF_WINDOW() view returns (uint256)",
      "function SEQUENCER_PUBLISH_WINDOW() view returns (uint256)",
      "function appendStateBatch(bytes32[] _batch, uint256 _shouldStartAtElement, bytes _signature)",
      "function batches() view returns (address)",
      "function deleteStateBatch(tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes signature, bytes extraData) _batchHeader)",
      "function getFraudProofWindow() view returns (uint256 _fraudProofWindow)",
      "function getLastSequencerTimestamp() view returns (uint256 _lastSequencerTimestamp)",
      "function getTotalBatches() view returns (uint256 _totalBatches)",
      "function getTotalElements() view returns (uint256 _totalElements)",
      "function insideFraudProofWindow(tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes signature, bytes extraData) _batchHeader) view returns (bool _inside)",
      "function libAddressManager() view returns (address)",
      "function messenger() view returns (address)",
      "function resolve(string _name) view returns (address)",
      "function rollBackL2Chain(uint256 _shouldRollBack, uint256 _shouldStartAtElement, bytes _signature)",
      "function setFraudProofWindow(uint256 _fraudProofWindow)",
      "function verifyStateCommitment(bytes32 _element, tuple(uint256 batchIndex, bytes32 batchRoot, uint256 batchSize, uint256 prevTotalElements, bytes signature, bytes extraData) _batchHeader, tuple(uint256 index, bytes32[] siblings) _proof) view returns (bool)"
    ],
    "0x910265C29c099eAc87EF6d374b6f3bE45B516EB7": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x92986cd63C3409b7dA2882624B6d6E7Cf660707a": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x95fC37A27a2f68e3A647CDc081F0A89bb47c3012": [
      "constructor(address _owner)",
      "function getImplementation() returns (address)",
      "function getOwner() returns (address)",
      "function setCode(bytes _code)",
      "function setOwner(address _owner)",
      "function setStorage(bytes32 _key, bytes32 _value)"
    ],
    "0x988DdC2b0ad9Ba5Ade892E1BF848308e8c7A9187": [
      "constructor(address _delegation, address _delegationSlasher)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "event WithdrawalCompleted(address indexed depositor, address indexed withdrawer, bytes32 withdrawalRoot)",
      "event WithdrawalQueued(address indexed depositor, address indexed withdrawer, address indexed delegatedAddress, bytes32 withdrawalRoot)",
      "function DEPOSIT_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function REASONABLE_STAKES_UPDATE_PERIOD() view returns (uint256)",
      "function WITHDRAWAL_WAITING_PERIOD() view returns (uint32)",
      "function addToWhitelist(address[] toAddAddresses)",
      "function calculateWithdrawalRoot(tuple(address[] delegations, address[] tokens, uint256[] shares, address depositor, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, address delegatedAddress) queuedWithdrawal) pure returns (bytes32)",
      "function canCompleteQueuedWithdrawal(tuple(address[] delegations, address[] tokens, uint256[] shares, address depositor, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, address delegatedAddress) queuedWithdrawal) view returns (bool)",
      "function completeQueuedWithdrawal(tuple(address[] delegations, address[] tokens, uint256[] shares, address depositor, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, address delegatedAddress) queuedWithdrawal, bool receiveAsTokens)",
      "function completeQueuedWithdrawal(address sender, tuple(address[] delegations, address[] tokens, uint256[] shares, address depositor, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, address delegatedAddress) queuedWithdrawal, bool receiveAsTokens)",
      "function delegation() view returns (address)",
      "function delegationSlasher() view returns (address)",
      "function depositInto(address delegationShare, address token, uint256 amount, address sender) returns (uint256 shares)",
      "function depositInto(address delegationShare, address token, uint256 amount) returns (uint256 shares)",
      "function getDelegationShares(address staker, address delegationShare) view returns (uint256)",
      "function getDeposits(address depositor) view returns (address[], uint256[])",
      "function getWithdrawNonce(address staker) view returns (uint256)",
      "function initialize(address initialOwner)",
      "function initializeT(address _stakingSlashing, address _tssGroupManager, uint256 _minStakeAmount, address initialOwner)",
      "function investorDelegationLength(address staker) view returns (uint256)",
      "function investorDelegationShares(address, address) view returns (uint256)",
      "function investorDelegations(address, uint256) view returns (address)",
      "function isCanOperator(address _addr, address delegationShare) returns (bool)",
      "function minStakeAmount() view returns (uint256)",
      "function nonces(address) view returns (uint256)",
      "function numWithdrawalsQueued(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function paused() view returns (bool)",
      "function queueWithdrawal(address sender, uint256[] delegationIndexes, address[] delegationShares, address[] tokens, uint256[] shares, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce) returns (bytes32)",
      "function queueWithdrawal(uint256[] delegationIndexes, address[] delegationShares, address[] tokens, uint256[] shares, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, bool undelegateIfPossible) returns (bytes32)",
      "function queuedWithdrawals(bytes32) view returns (uint32 initTimestamp, uint32 unlockTimestamp, address withdrawer)",
      "function removeFromWhitelist(address[] toRemoveAddresses)",
      "function renounceOwnership()",
      "function setMinStakeAmount(uint256 _amount)",
      "function setStakingSlash(address _address)",
      "function setTssGroupManager(address _addr)",
      "function slashQueuedWithdrawal(address recipient, tuple(address[] delegations, address[] tokens, uint256[] shares, address depositor, tuple(address withdrawer, uint96 nonce) withdrawerAndNonce, address delegatedAddress) queuedWithdrawal)",
      "function slashShares(address slashedAddress, address recipient, address[] delegationShares, address[] tokens, uint256[] delegationIndexes, uint256[] shareAmounts)",
      "function stakingSlash() view returns (address)",
      "function startQueuedWithdrawalWaitingPeriod(bytes32 withdrawalRoot, address sender, uint32 stakeInactiveAfter)",
      "function startQueuedWithdrawalWaitingPeriod(bytes32 withdrawalRoot, uint32 stakeInactiveAfter)",
      "function transferOwnership(address newOwner)",
      "function tssGroupManager() view returns (address)",
      "function undelegate()",
      "function whitelist(address) view returns (bool)"
    ],
    "0x9FEcF38689349a5CFf97526610CdB27618edc6b9": [
      "constructor(address _investmentManager)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function deposit(address token, uint256 amount) returns (uint256 newShares)",
      "function explanation() pure returns (string)",
      "function initialize(address _underlyingToken, address _pauserRegistry, address initialOwner)",
      "function investmentManager() view returns (address)",
      "function minDeposit() view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function renounceOwnership()",
      "function setMinDepositAmount(uint256 minDepositAmount)",
      "function shares(address user) view returns (uint256)",
      "function sharesToUnderlying(uint256 amountShares) view returns (uint256)",
      "function sharesToUnderlyingView(uint256 amountShares) view returns (uint256)",
      "function totalShares() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function underlyingToShares(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToSharesView(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToken() view returns (address)",
      "function unpause(uint256 newPausedStatus)",
      "function userUnderlying(address user) returns (uint256)",
      "function userUnderlyingView(address user) view returns (uint256)",
      "function withdraw(address depositor, address token, uint256 amountShares)"
    ],
    "0xa0d79E982bfD3C2ccD09D2E374ddC75fe328f317": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xA1C7B28B4743248584725fEf31516fD4Ea72aEA8": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function blockFinalizationVerifier() view returns (address)",
      "function blockInitiationVerifier() view returns (address)",
      "function callOpVerifier() view returns (address)",
      "function environmentalOpVerifier() view returns (address)",
      "function initialize()",
      "function interTxVerifier() view returns (address)",
      "function invalidOpVerifier() view returns (address)",
      "function memoryOpVerifier() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setVerifier(uint8 verifier, address impl)",
      "function stackOpVerifier() view returns (address)",
      "function storageOpVerifier() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function verifyOneStepProof(tuple(address coinbase, uint256 timestamp, uint256 number, address origin, tuple(uint64 nonce, uint256 gasPrice, uint64 gas, address to, uint256 value, bytes data, uint256 v, uint256 r, uint256 s) transaction, bytes32 inputRoot, bytes32 txHash) ctx, uint8 verifier, bytes32 currStateHash, bytes encoded) view returns (bytes32)"
    ],
    "0xA90FCe37D274e673f3850b835F18790542b1755d": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xA937660031787C4408587D2c6A67Ec4B260630F5": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xAb00B934DE01c1b4931047125C2ba5B3d6186b85": [
      "constructor()",
      "event AddDataStoreRollupPermission(address pusher, bool status)",
      "event AddDelegatorPermission(address delegator, bool status)",
      "event AddOperatorDeregisterPermission(address operator, bool status)",
      "event AddOperatorRegisterPermission(address operator, bool status)",
      "event ChangeDataStoreRollupPermission(address pusher, bool status)",
      "event ChangeDelegatorPermission(address delegator, bool status)",
      "event ChangeOperatorDeregisterPermission(address operator, bool status)",
      "event ChangeOperatorRegisterPermission(address operator, bool status)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addDataStoreRollupPermission(address pusher)",
      "function addDelegatorPermission(address delegator)",
      "function addOperatorDeregisterPermission(address operator)",
      "function addOperatorRegisterPermission(address operator)",
      "function changeDataStoreRollupPermission(address pusher, bool status)",
      "function changeDelegatorPermission(address delegator, bool status)",
      "function changeOperatorDeregisterPermission(address operator, bool status)",
      "function changeOperatorRegisterPermission(address operator, bool status)",
      "function dataStoreRollupPermission(address) view returns (bool)",
      "function delegatorPermission(address) view returns (bool)",
      "function getDataStoreRollupPermission(address pusher) view returns (bool)",
      "function getDelegatorPermission(address delegator) view returns (bool)",
      "function getOperatorDeregisterPermission(address operator) view returns (bool)",
      "function getOperatorRegisterPermission(address operator) view returns (bool)",
      "function initialize(address personAddress, address initialOwner)",
      "function operatorDeregisterPermission(address) view returns (bool)",
      "function operatorRegisterPermission(address) view returns (bool)",
      "function owner() view returns (address)",
      "function permissionPerson() view returns (address)",
      "function renounceOwnership()",
      "function setPermissionPerson(address personAddress)",
      "function transferOwnership(address newOwner)"
    ],
    "0xAB42127980a3bff124E6465e097a5fC97228827e": [
      "constructor(address _registry, address _investmentManager, address _eigenLayrDelegation, address _collateralToken, address _dataLayrChallenge, address _dataLayrBombVerifier, address _dataPermissionManager)",
      "event AdversaryThresholdBasisPointsUpdated(uint16 adversaryThresholdBasisPoints)",
      "event BombVerifierSet(address previousAddress, address newAddress)",
      "event ConfirmDataStore(uint32 dataStoreId, bytes32 headerHash)",
      "event FeePerBytePerTimeSet(uint256 previousValue, uint256 newValue)",
      "event FeeSetterChanged(address previousAddress, address newAddress)",
      "event InitDataStore(address feePayer, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) searchData, bytes header)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PaymentManagerSet(address previousAddress, address newAddress)",
      "event QuorumThresholdBasisPointsUpdated(uint16 quorumTHresholdBasisPoints)",
      "event SignatoryRecord(bytes32 msgHash, uint32 taskNumber, uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum, bytes32[] pubkeyHashes)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function BIP_MULTIPLIER() view returns (uint256)",
      "function BLOCK_STALE_MEASURE() view returns (uint32)",
      "function DURATION_SCALE() view returns (uint256)",
      "function MAX_DATASTORE_DURATION() view returns (uint8)",
      "function MIN_DATASTORE_DURATION() view returns (uint8)",
      "function NUM_DS_PER_BLOCK_PER_DURATION() view returns (uint256)",
      "function adversaryThresholdBasisPoints() view returns (uint16)",
      "function calculateFee(uint256 totalBytes, uint256 _feePerBytePerTime, uint32 storePeriodLength) pure returns (uint256)",
      "function checkSignatures(bytes data) returns (uint32 taskNumberToConfirm, uint32 referenceBlockNumber, bytes32 msgHash, tuple(uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum, uint256 totalStakeFirstQuorum, uint256 totalStakeSecondQuorum) signedTotals, bytes32 compressedSignatoryRecord)",
      "function collateralToken() view returns (address)",
      "function confirmDataStore(bytes data, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) searchData)",
      "function confirmDataStoreTimeout() view returns (uint32)",
      "function dataLayrBombVerifier() view returns (address)",
      "function dataLayrChallenge() view returns (address)",
      "function dataPermissionManager() view returns (address)",
      "function dataStoreHashesForDurationAtTimestamp(uint8, uint256, uint256) view returns (bytes32)",
      "function dataStoreIdToSignatureHash(uint32) view returns (bytes32)",
      "function dataStoresForDuration() view returns (uint32 one_duration, uint32 two_duration, uint32 three_duration, uint32 four_duration, uint32 five_duration, uint32 six_duration, uint32 seven_duration, uint32 dataStoreId, uint32 latestTime)",
      "function eigenLayrDelegation() view returns (address)",
      "function feePerBytePerTime() view returns (uint256)",
      "function feeSetter() view returns (address)",
      "function freezeOperator(address operator)",
      "function getDataStoreHashesForDurationAtTimestamp(uint8 duration, uint256 timestamp, uint32 index) view returns (bytes32)",
      "function getNumDataStoresForDuration(uint8 duration) view returns (uint32)",
      "function initDataStore(address feePayer, address confirmer, uint8 duration, uint32 referenceBlockNumber, uint32 totalOperatorsIndex, bytes header) returns (uint32 index)",
      "function initialize(address _pauserRegistry, address initialOwner, uint16 _quorumThresholdBasisPoints, uint16 _adversaryThresholdBasisPoints, uint256 _feePerBytePerTime, address _feeSetter)",
      "function investmentManager() view returns (address)",
      "function latestTime() view returns (uint32)",
      "function log2NumPowersOfTau() view returns (uint48)",
      "function numPowersOfTau() view returns (uint48)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function quorumThresholdBasisPoints() view returns (uint16)",
      "function registry() view returns (address)",
      "function renounceOwnership()",
      "function setAdversaryThresholdBasisPoints(uint16 _adversaryThresholdBasisPoints)",
      "function setFeePerBytePerTime(uint256 _feePerBytePerTime)",
      "function setFeeSetter(address _feeSetter)",
      "function setQuorumThresholdBasisPoints(uint16 _quorumThresholdBasisPoints)",
      "function taskNumber() view returns (uint32)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function verifyDataStoreMetadata(uint8 duration, uint256 timestamp, uint32 index, tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata) view returns (bool)",
      "function zeroPolynomialCommitmentMerkleRoots(uint256) view returns (bytes32)"
    ],
    "0xAdA69A18B30B3B9235AB2748116bB9195e16aDba": [
      "constructor(address _investmentManager, address _permissionManager)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function DELEGATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function decreaseDelegatedShares(address staker, address[] strategies, uint256[] shares)",
      "function delegateTo(address operator)",
      "function delegateToBySignature(address staker, address operator, uint256 expiry, bytes32 r, bytes32 vs)",
      "function delegatedTo(address) view returns (address)",
      "function getOperatorRewardAddress(address operator) view returns (address)",
      "function increaseDelegatedShares(address staker, address strategy, uint256 shares)",
      "function initialize(address _pauserRegistry, address initialOwner)",
      "function investmentManager() view returns (address)",
      "function isDelegated(address staker) view returns (bool)",
      "function isNotDelegated(address staker) view returns (bool)",
      "function isOperator(address operator) view returns (bool)",
      "function nonces(address) view returns (uint256)",
      "function operatorReceiverRewardAddress(address) view returns (address)",
      "function operatorShares(address, address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function permissionManager() view returns (address)",
      "function registerAsOperator(address rewardReceiveAddress)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function undelegate(address staker)",
      "function unpause(uint256 newPausedStatus)"
    ],
    "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xC159F0B28a7bd4b4924e762207275a4475C09fd5": [
      "constructor(address _delegationManager, address _delegation)",
      "event FrozenStatusReset(address indexed previouslySlashedAddress)",
      "event GloballyPermissionedContractAdded(address indexed contractAdded)",
      "event GloballyPermissionedContractRemoved(address indexed contractRemoved)",
      "event Initialized(uint8 version)",
      "event OperatorSlashed(address indexed slashedOperator, address indexed slashingContract)",
      "event OptedIntoSlashing(address indexed operator, address indexed contractAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event SlashingAbilityRevoked(address indexed operator, address indexed contractAddress, uint32 unbondedAfter)",
      "event Unpaused(address account)",
      "function addGloballyPermissionedContracts(address[] contracts)",
      "function allowToSlash(address contractAddress)",
      "function bondedUntil(address, address) view returns (uint32)",
      "function canSlash(address toBeSlashed, address slashingContract) view returns (bool)",
      "function delegation() view returns (address)",
      "function freezeOperator(address toBeFrozen)",
      "function globallyPermissionedContracts(address) view returns (bool)",
      "function initialize(address initialOwner)",
      "function investmentManager() view returns (address)",
      "function isFrozen(address staker) view returns (bool)",
      "function owner() view returns (address)",
      "function paused() view returns (bool)",
      "function removeGloballyPermissionedContracts(address[] contracts)",
      "function renounceOwnership()",
      "function resetFrozenStatus(address[] frozenAddresses)",
      "function revokeSlashingAbility(address operator, uint32 unbondedAfter)",
      "function transferOwnership(address newOwner)"
    ],
    "0xc9C24f1aaD2614E81f033746292F5Dc5d7Ccad94": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xCAD08A7B9eF6ADeFAef08d0d85a577a288F93Ee1": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xCd368c1d80120b0Dd92447c87eB570154f8e685c": [
      "constructor()",
      "error MantleToken_ImproperlyInitialized()",
      "error MantleToken_MintAmountTooLarge(uint256 amount, uint256 maximumAmount)",
      "error MantleToken_MintCapNumeratorTooLarge(uint256 numerator, uint256 maximumNumerator)",
      "error MantleToken_NextMintTimestampNotElapsed(uint256 currentTimestamp, uint256 nextMintTimestamp)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event Initialized(uint8 version)",
      "event MintCapNumeratorChanged(address indexed from, uint256 previousMintCapNumerator, uint256 newMintCapNumerator)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function MINT_CAP_DENOMINATOR() view returns (uint256)",
      "function MINT_CAP_MAX_NUMERATOR() view returns (uint256)",
      "function MIN_MINT_INTERVAL() view returns (uint256)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function checkpoints(address account, uint32 pos) view returns (tuple(uint32 fromBlock, uint224 votes))",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address account) view returns (address)",
      "function getPastTotalSupply(uint256 blockNumber) view returns (uint256)",
      "function getPastVotes(address account, uint256 blockNumber) view returns (uint256)",
      "function getVotes(address account) view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(uint256 _initialSupply, address _owner)",
      "function mint(address _recipient, uint256 _amount)",
      "function mintCapNumerator() view returns (uint256)",
      "function name() view returns (string)",
      "function nextMint() view returns (uint256)",
      "function nonces(address owner) view returns (uint256)",
      "function numCheckpoints(address account) view returns (uint32)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceOwnership()",
      "function setMintCapNumerator(uint256 _mintCapNumerator)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0xCDC78c5eaea2dE33B00a9200Ee1700937fb0f55D": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xD1328C9167e0693B689b5aa5a024379d4e437858": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd3f0BD982D72e28cccc69e0A9dA439e9D587b3bD": [
      "constructor(address _libAddressManager, string _owner)",
      "function deleteElementsAfterInclusive(uint256 _index, bytes27 _globalMetadata)",
      "function deleteElementsAfterInclusive(uint256 _index)",
      "function get(uint256 _index) view returns (bytes32)",
      "function getGlobalMetadata() view returns (bytes27)",
      "function length() view returns (uint256)",
      "function libAddressManager() view returns (address)",
      "function owner() view returns (string)",
      "function push(bytes32 _object, bytes27 _globalMetadata)",
      "function push(bytes32 _object)",
      "function resolve(string _name) view returns (address)",
      "function setGlobalMetadata(bytes27 _globalMetadata)"
    ],
    "0xd4B5E3D46D202C3523C3Ad89dfe74eC272BFC96A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd8d731624d97a66e012E62208cFc921d7033c564": [
      "constructor()",
      "event Initialized(uint8 version)",
      "function batchNonInteractivePolynomialProofs(bytes header, uint32 firstChunkNumber, bytes[] polys, tuple(tuple(uint256 X, uint256 Y) interpolationPoly, tuple(uint256 X, uint256 Y) revealProof, tuple(uint256[2] X, uint256[2] Y) zeroPoly, bytes zeroPolyProof)[] multiRevealProofs, tuple(uint256[2] X, uint256[2] Y) polyEquivalenceProof) view returns (bool)",
      "function checkExclusionFromNonSignerSet(bytes32 operatorPubkeyHash, uint256 nonSignerIndex, tuple(bytes32[] nonSignerPubkeyHashes, uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum) signatoryRecord) pure",
      "function checkInclusionInNonSignerSet(bytes32 operatorPubkeyHash, uint256 nonSignerIndex, tuple(bytes32[] nonSignerPubkeyHashes, uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum) signatoryRecord) pure",
      "function constructZeroPolyEval(uint256 index, uint32 chunkLenE, uint32 numNodeE, uint256 alpha) returns (uint256)",
      "function getDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader(bytes header) pure returns (tuple(tuple(uint256 X, uint256 Y) c, uint48 degree, uint32 numSys, uint32 numPar))",
      "function getLeadingCosetIndexFromHighestRootOfUnity(uint32 i, uint32 numSys, uint32 numPar) pure returns (uint32)",
      "function getNumSysFromHeader(bytes header) pure returns (uint32)",
      "function getZeroPolyMerkleRoot(uint256 degree) pure returns (bytes32)",
      "function linearPolynomialEvaluation(bytes poly, uint256 r) pure returns (uint256)",
      "function nextPowerOf2(uint256 n) pure returns (uint256)",
      "function nonInteractivePolynomialProof(bytes header, uint32 chunkNumber, bytes poly, tuple(tuple(uint256 X, uint256 Y) interpolationPoly, tuple(uint256 X, uint256 Y) revealProof, tuple(uint256[2] X, uint256[2] Y) zeroPoly, bytes zeroPolyProof) multiRevealProof, tuple(uint256[2] X, uint256[2] Y) polyEquivalenceProof) view returns (bool)",
      "function openPolynomialAtPoint(tuple(uint256 X, uint256 Y) c, tuple(uint256[2] X, uint256[2] Y) pi, uint256 r, uint256 s) view returns (bool)",
      "function reverseBits(uint32 value) pure returns (uint32)",
      "function reverseBitsLimited(uint32 length, uint32 value) pure returns (uint32)",
      "function validateDisclosureResponse(tuple(tuple(uint256 X, uint256 Y) c, uint48 degree, uint32 numSys, uint32 numPar) dskzgMetadata, uint32 chunkNumber, tuple(uint256 X, uint256 Y) interpolationPoly, tuple(uint256 X, uint256 Y) revealProof, tuple(uint256[2] X, uint256[2] Y) zeroPoly, bytes zeroPolyProof) view returns (bool)",
      "function verifyBatchPolyEquivalenceProof(bytes[] polys, tuple(uint256 X, uint256 Y)[] interpolationPolys, tuple(uint256[2] X, uint256[2] Y) polyEquivalenceProof) view returns (bool)",
      "function verifyPolyEquivalenceProof(bytes poly, tuple(uint256 X, uint256 Y) interpolationPoly, tuple(uint256[2] X, uint256[2] Y) polyEquivalenceProof) view returns (bool)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xDF401d4229Fc6cA52238f7e55A04FA8EBc24C55a": [
      "constructor()",
      "event DataLayrManagerAddressUpdated(address oldDataLayrManagerAddress, address newDataLayrManagerAddress)",
      "event FraudProofPeriodUpdated(uint256 oldFraudProofPeriod, uint256 newFraudProofPeriod)",
      "event Initialized(uint8 version)",
      "event L2ConfirmedBlockNumberUpdated(uint256 oldL2ConfirmedBlockNumber, uint256 newL2ConfirmedBlockNumber)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ReRollupBatchData(uint256 reRollupIndex, uint256 rollupBatchIndex, uint256 stratL2BlockNumber, uint256 endL2BlockNumber)",
      "event ReSubmitterAddressUpdated(address oldReSubmitterAddress, address newReSubmitterAddress)",
      "event RollupBatchIndexUpdated(uint256 oldRollupBatchIndex, uint256 newRollupBatchIndex)",
      "event RollupStoreConfirmed(uint256 rollupBatchIndex, uint32 dataStoreId, uint256 stratL2BlockNumber, uint256 endL2BlockNumber)",
      "event RollupStoreInitialized(uint32 dataStoreId, uint256 stratL2BlockNumber, uint256 endL2BlockNumber)",
      "event RollupStoreReverted(uint256 rollupBatchIndex, uint32 dataStoreId, uint256 stratL2BlockNumber, uint256 endL2BlockNumber)",
      "event SequencerAddressUpdated(address oldSequencerAddress, address newSequencerAddress)",
      "function BLOCK_STALE_MEASURE() view returns (uint256)",
      "function FRAUD_STRING() view returns (bytes)",
      "function confirmData(bytes data, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) searchData, uint256 startL2Block, uint256 endL2Block, uint32 originDataStoreId, uint256 reConfirmedBatchIndex, bool isReRollup)",
      "function dataManageAddress() view returns (address)",
      "function dataStoreIdToL2RollUpBlock(uint32) view returns (uint256 startL2BlockNumber, uint256 endBL2BlockNumber, bool isReRollup)",
      "function dataStoreIdToRollupStoreNumber(uint32) view returns (uint256)",
      "function fraudProofPeriod() view returns (uint256)",
      "function getL2ConfirmedBlockNumber() view returns (uint256)",
      "function getL2RollUpBlockByDataStoreId(uint32 _dataStoreId) view returns (tuple(uint256 startL2BlockNumber, uint256 endBL2BlockNumber, bool isReRollup))",
      "function getL2StoredBlockNumber() view returns (uint256)",
      "function getRollupStoreByRollupBatchIndex(uint256 _rollupBatchIndex) view returns (tuple(uint32 originDataStoreId, uint32 dataStoreId, uint32 confirmAt, uint8 status))",
      "function initialize(address _sequencer, address _dataManageAddress, address _reSubmitterAddress, uint256 _block_stale_measure, uint256 _fraudProofPeriod, uint256 _l2SubmittedBlockNumber)",
      "function l2ConfirmedBlockNumber() view returns (uint256)",
      "function l2StoredBlockNumber() view returns (uint256)",
      "function owner() view returns (address)",
      "function parse(bytes[] polys, uint256 startIndex, uint256 length) pure returns (bytes provenString)",
      "function proveFraud(uint256 fraudulentStoreNumber, uint256 startIndex, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) searchData, tuple(bytes header, uint32 firstChunkNumber, bytes[] polys, tuple(tuple(uint256 X, uint256 Y) interpolationPoly, tuple(uint256 X, uint256 Y) revealProof, tuple(uint256[2] X, uint256[2] Y) zeroPoly, bytes zeroPolyProof)[] multiRevealProofs, tuple(uint256[2] X, uint256[2] Y) polyEquivalenceProof) disclosureProofs)",
      "function reRollupBatchIndex(uint256) view returns (uint256)",
      "function reRollupIndex() view returns (uint256)",
      "function reSubmitterAddress() view returns (address)",
      "function removeFraudProofAddress(address _address)",
      "function renounceOwnership()",
      "function resetRollupBatchData(uint256 _rollupBatchIndex)",
      "function rollupBatchIndex() view returns (uint256)",
      "function rollupBatchIndexRollupStores(uint256) view returns (uint32 originDataStoreId, uint32 dataStoreId, uint32 confirmAt, uint8 status)",
      "function sequencer() view returns (address)",
      "function setFraudProofAddress(address _address)",
      "function storeData(bytes header, uint8 duration, uint32 blockNumber, uint256 startL2Block, uint256 endL2Block, uint32 totalOperatorsIndex, bool isReRollup)",
      "function submitReRollUpInfo(uint256 batchIndex)",
      "function transferOwnership(address newOwner)",
      "function unavailableFraudProofAddress(address _address)",
      "function updateDataLayrManagerAddress(address _dataManageAddress)",
      "function updateFraudProofPeriod(uint256 _fraudProofPeriod)",
      "function updateL2ConfirmedBlockNumber(uint256 _l2ConfirmedBlockNumber)",
      "function updateL2StoredBlockNumber(uint256 _l2StoredBlockNumber)",
      "function updateReSubmitterAddress(address _reSubmitterAddress)",
      "function updateRollupBatchIndex(uint256 _rollupBatchIndex)",
      "function updateSequencerAddress(address _sequencer)"
    ],
    "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xF7576237087F808eB39531cA490b4F8eFd4a0c69": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)",
      "event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)",
      "function getTssGroupInfo() view returns (uint256, uint256, bytes, bytes[])",
      "function getTssGroupMembers() view returns (bytes[])",
      "function getTssGroupUnJailMembers() view returns (address[])",
      "function getTssInactiveGroupInfo() view returns (uint256, uint256, bytes[])",
      "function getTssMember(bytes _publicKey) view returns (tuple(bytes publicKey, address nodeAddress, uint8 status))",
      "function inActiveIsEmpty() view returns (bool)",
      "function initialize()",
      "function isInActiveMember(bytes) view returns (bool)",
      "function isTssGroupUnJailMembers(address _addr) view returns (bool)",
      "function memberExistActive(address _addr) view returns (bool)",
      "function memberExistActive(bytes _publicKey) view returns (bool)",
      "function memberExistInActive(bytes _publicKey) view returns (bool)",
      "function memberJail(bytes _publicKey)",
      "function memberUnJail(bytes _publicKey)",
      "function owner() view returns (address)",
      "function recover(bytes32 _ethSignedMessageHash, bytes _sig) pure returns (address)",
      "function removeMember(bytes _publicKey)",
      "function renounceOwnership()",
      "function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey)",
      "function setStakingSlash(address _address)",
      "function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey)",
      "function stakingSlash() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function tssActiveMemberInfo(bytes) view returns (bytes publicKey, address nodeAddress, uint8 status)",
      "function verifySign(bytes32 _message, bytes _sig) view returns (bool)"
    ]
  }
}
