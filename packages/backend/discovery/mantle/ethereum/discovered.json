{
  "name": "mantle",
  "chain": "ethereum",
  "blockNumber": 20928041,
  "configHash": "0xa39508c1a37137b5d253b3c944b145c30702c339856e3d0ed998e50dfe9ff9d7",
  "contracts": [
    {
      "name": "PauserRegistry",
      "address": "0x075a48633dc6845f92339741E9c96b88f1b2A86f",
      "sourceHashes": [
        "0x8fa8f20d7c33aea934963671e5ac4fc1d3b586d40deb93cc4768d4a6ef323662"
      ],
      "sinceTimestamp": 1687930847,
      "values": {
        "$immutable": true,
        "pauser": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "unpauser": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "derivedName": "PauserRegistry"
    },
    {
      "name": "MantleTokenProxyAdmin",
      "address": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x68f689a23d3badd91255602a1eb13d4789baedc16d904c3103244642fc78ca8f"
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354"
        }
      ],
      "sinceTimestamp": 1687241639,
      "values": {
        "$immutable": true,
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "derivedName": "ProxyAdmin"
    },
    {
      "name": "BLSRegistry",
      "address": "0x1eD35B793d887e028493dAC4a11AA5Feb811dd67",
      "sourceHashes": [
        "0x3f8d1d2461c05779ca5de685fd391f6a4c07e91953373effd46d11f72b025dc3",
        "0x25c9049ce3c6e3d0fb455a5ceecf01cc2d9a92f415e869786ef2f2221e85b803"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "This contract stores the number of Mantle DA operators and their public keys. It also store the quorum threshold and the minimum stake required to be part of the quorum.",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
              "delay": 0
            }
          ]
        }
      ],
      "sinceTimestamp": 1687932047,
      "values": {
        "$admin": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
        "$implementation": "0x64F4244eEA17a361bb919A28F614C3ad1aC565ad",
        "$pastUpgrades": [
          [
            "2023-06-28T06:00:47.000Z",
            "0x9d5d1ea782248f506d764d83e7cbf9f5f3b612481d064348e55e2b9192b6202b",
            ["0x4b64d1Fd7cf1230468AEdF3a401cFe74cA9B366f"]
          ],
          [
            "2023-06-28T06:05:35.000Z",
            "0x43792ca3e5547575169e63a6c3d65cb80aea4d078f8b74c67e0db11a14d64012",
            ["0x64F4244eEA17a361bb919A28F614C3ad1aC565ad"]
          ]
        ],
        "$upgradeCount": 2,
        "delegation": "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798",
        "forceDeregister": "0x0000000000000000000000000000000000000000",
        "getApkUpdatesLength": 11,
        "investmentManager": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
        "minimumStakeFirstQuorum": 0,
        "minimumStakeSecondQuorum": 0,
        "NUMBER_OF_QUORUMS": 2,
        "numOperators": 10,
        "operatorList": [
          "0x1888e4aC2Ab37A73B33448B87bABdD1ce1dcBAbe",
          "0x717c3DC6Df69c316d6Ac593077BC84Cc86f214A4",
          "0x8BEF0466b7C2CbFD753eF340e062dF06E93ADA7f",
          "0x6cc5A6F5a9E4757790e4068Aa9757226Cb854B64",
          "0xc1dEd495E1dDf089B2b41d6397C0aBa04BDA1A21",
          "0x550b3CB2D5fB5E4F0A08322CaC7b04291558CDa8",
          "0xB61298691FE0df10634A67dd83b2253E74cbF7fb",
          "0xcEb157a9bB9c80a845d5924e8CEAA591Caf705a5",
          "0x0B6F2C77C3740A5e6f88A4eCdd02C10BE8a2e323",
          "0x8A3D6c77E5BAcE8cb0822B28E4Fc56FC06fB5645"
        ],
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "permissionManager": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01",
        "pubkeyCompendium": "0x92986cd63C3409b7dA2882624B6d6E7Cf660707a",
        "serviceManager": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1",
        "strategiesConsideredAndMultipliersLength": [1, 1],
        "totalStake": ["1000000000000000000000000", 0]
      },
      "derivedName": "BLSRegistry"
    },
    {
      "name": "InvestmentManager",
      "address": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
      "sourceHashes": [
        "0x3f8d1d2461c05779ca5de685fd391f6a4c07e91953373effd46d11f72b025dc3",
        "0x943049d488a42420a15934ca27ae2fc159c395727536ee64c38afdde4215c561"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contract managing different investment strategies, forked from EigenLayer StrategyManager.",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
              "delay": 0
            }
          ]
        }
      ],
      "sinceTimestamp": 1687930955,
      "values": {
        "$admin": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
        "$implementation": "0x7C4813A9AF2FEA4ca765a26b05d128926E94e72E",
        "$pastUpgrades": [
          [
            "2023-06-28T05:42:35.000Z",
            "0xeb7dc422709447d9ec652639cd04c817fe931d17a444f63c347c26b76aa64720",
            ["0xa288E750401E6d15A62e3400C87d3ee331650a0C"]
          ],
          [
            "2023-06-28T05:46:11.000Z",
            "0xdbf4832652157cf7ac7025536a4ea46c98eb9ea0fd8aea5d9806ae0a88ec037f",
            ["0x7C4813A9AF2FEA4ca765a26b05d128926E94e72E"]
          ]
        ],
        "$upgradeCount": 2,
        "delegation": "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798",
        "DEPOSIT_TYPEHASH": "0x0a564d4cfe5cb0d4ee082aab2ca54b8c48e129485a8f7c77766ab5ef0c3566f1",
        "DOMAIN_SEPARATOR": "0x627966d4b435c9739b026674b0008753c43eab794919a4e448cc20b36816c5e1",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "paused": 0,
        "pauserRegistry": "0x075a48633dc6845f92339741E9c96b88f1b2A86f",
        "permissionManager": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01"
      },
      "derivedName": "InvestmentManager"
    },
    {
      "name": "ProxyAdmin",
      "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0xae641c7d7a83bba7fa913b9544f946dc23ca0527c2f4abb9c6a3496f49375218"
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd"
        },
        {
          "permission": "upgrade",
          "target": "0xA937660031787C4408587D2c6A67Ec4B260630F5"
        },
        {
          "permission": "upgrade",
          "target": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01"
        },
        {
          "permission": "upgrade",
          "target": "0xCAD08A7B9eF6ADeFAef08d0d85a577a288F93Ee1"
        },
        {
          "permission": "upgrade",
          "target": "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798"
        }
      ],
      "sinceTimestamp": 1687930823,
      "values": {
        "$immutable": true,
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      }
    },
    {
      "name": "MantleEngineeringMultisig",
      "address": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "challenge",
          "target": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481"
        },
        {
          "permission": "guard",
          "target": "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1686902471,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xC37642355c18ec9c3b3268AAC67e33516aa115eb",
          "0x207E804758e28F2b3fD6E4219671B327100b82f8",
          "0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317",
          "0x00da2F87c56C3a19BD863613995705095F55b524",
          "0xbE73dea9c8DcDdB6b03F7e5797b85982065fe34e",
          "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8",
          "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a"
        ],
        "$threshold": 3,
        "domainSeparator": "0x509138b8efbf4ec65dfd2396c0fbf689e8a0193b00f12ce81d154ffd0de8f6af",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "3 of 7 (43%)",
        "nonce": 101,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "L2OutputOracle",
      "address": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481",
      "template": "opstack/L2OutputOracle",
      "sourceHashes": [
        "0x2cdcfef705094aaac53d507bad64d27b48ea5a9c11a7fadffacc192aab7a823f",
        "0x45368d302fba850124115aa8ee67238f47d47d89c2b1b8c5dfd39818369e6cea"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contains a list of proposed state roots which Proposers assert to be a result of block execution. Currently only the PROPOSER address can submit new state roots.",
      "issuedPermissions": [
        {
          "permission": "challenge",
          "target": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
          "via": []
        },
        {
          "permission": "propose",
          "target": "0x6667961f5e9C98A76a48767522150889703Ed77D",
          "via": []
        },
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0xca35F8338054739D138884685e08b39EE2217794",
              "delay": 0
            }
          ]
        }
      ],
      "ignoreInWatchMode": [
        "nextBlockNumber",
        "nextOutputIndex",
        "latestBlockNumber",
        "latestOutputIndex"
      ],
      "sinceTimestamp": 1710439931,
      "values": {
        "$admin": "0xca35F8338054739D138884685e08b39EE2217794",
        "$implementation": "0xD1230865641561653406906Fb08873F011c19080",
        "$pastUpgrades": [
          [
            "2024-03-15T08:19:35.000Z",
            "0xa5fff128e999954c7dfe8e3360d0844e439425124922e85cd32fdcf2e3582247",
            ["0xD1230865641561653406906Fb08873F011c19080"]
          ]
        ],
        "$upgradeCount": 1,
        "CHALLENGER": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "deletedOutputs": [],
        "FINALIZATION_PERIOD_SECONDS": 604800,
        "L2_BLOCK_TIME": 2,
        "latestBlockNumber": 70171946,
        "latestOutputIndex": 4999,
        "nextBlockNumber": 70173746,
        "nextOutputIndex": 5000,
        "PROPOSER": "0x6667961f5e9C98A76a48767522150889703Ed77D",
        "startingBlockNumber": 61171946,
        "startingTimestamp": 1710474204,
        "SUBMISSION_INTERVAL": 1800,
        "version": "1.3.0"
      }
    },
    {
      "name": "L1MantleToken",
      "address": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
      "sourceHashes": [
        "0x36a2777510f3b20063560bdcb7f657da283bcfdc484a19b0a0f77d18f6a8b5e1",
        "0x13e07c3c64aef03cfd7f5c01b2b1b443fd1dfb19c4128447fe316bb5fcd128cd"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "MNT token contract: Mantle uses Mantle (MNT) as the designated gas token, allowing users pay for gas in MNT.",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd",
              "delay": 0
            }
          ]
        }
      ],
      "ignoreInWatchMode": ["totalSupply"],
      "sinceTimestamp": 1687241795,
      "values": {
        "$admin": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd",
        "$implementation": "0xCd368c1d80120b0Dd92447c87eB570154f8e685c",
        "$pastUpgrades": [
          [
            "2023-06-20T06:16:35.000Z",
            "0x8f7867724cfba4b9b1b19ca140711809b40dda9ae245caf7bcff9473a5a7e45e",
            ["0xCd368c1d80120b0Dd92447c87eB570154f8e685c"]
          ]
        ],
        "$upgradeCount": 1,
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0x4657b7bac12b34fb80f1848c560d6e440dfccdffe8b83f2dc958a534c89b0622",
        "MIN_MINT_INTERVAL": 31536000,
        "MINT_CAP_DENOMINATOR": 10000,
        "MINT_CAP_MAX_NUMERATOR": 200,
        "mintCapNumerator": 0,
        "name": "Mantle",
        "nextMint": 1718777795,
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "symbol": "MNT",
        "totalSupply": "6219316794990000000000000000"
      },
      "derivedName": "L1MantleToken"
    },
    {
      "name": "SystemConfig",
      "address": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf",
      "template": "opstack/SystemConfig",
      "sourceHashes": [
        "0x2cdcfef705094aaac53d507bad64d27b48ea5a9c11a7fadffacc192aab7a823f",
        "0xb2a3bda11c08328ecb46ec5789f3264be5d816bc218a5024a4cafd1c59017160"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Contains configuration parameters such as the Sequencer address, gas limit on this chain and the unsafe block signer address.",
      "issuedPermissions": [
        {
          "permission": "configure",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": []
        },
        {
          "permission": "sequence",
          "target": "0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749",
          "via": []
        },
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0xca35F8338054739D138884685e08b39EE2217794",
              "delay": 0
            }
          ]
        }
      ],
      "ignoreInWatchMode": ["scalar", "overhead"],
      "sinceTimestamp": 1710440051,
      "values": {
        "$admin": "0xca35F8338054739D138884685e08b39EE2217794",
        "$implementation": "0x6Dbb7D9C5dC60844B8CF442ddC6Be081c060B2E3",
        "$pastUpgrades": [
          [
            "2024-03-15T01:47:47.000Z",
            "0x667a55493b70812eedb69586be570fa87bb305ff046ebd1419cdc71163f770ac",
            ["0x6Dbb7D9C5dC60844B8CF442ddC6Be081c060B2E3"]
          ]
        ],
        "$upgradeCount": 1,
        "baseFee": 20000000,
        "batcherHash": "0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749",
        "gasLimit": 200000000000,
        "minimumGasLimit": 21000000,
        "opStackDA": {
          "isSomeTxsLengthEqualToCelestiaDAExample": false,
          "isSequencerSendingBlobTx": false
        },
        "overhead": 188,
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "resourceConfig": {
          "maxResourceLimit": 20000000,
          "elasticityMultiplier": 10,
          "baseFeeMaxChangeDenominator": 8,
          "minimumBaseFee": 1000000000,
          "systemTxMaxGas": 1000000,
          "maximumBaseFee": "340282366920938463463374607431768211455"
        },
        "scalar": 10000,
        "sequencerInbox": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1",
        "UNSAFE_BLOCK_SIGNER_SLOT": "0x65a7ed542fb37fe237fdfbdd70b31598523fe5b32879e307bae27a0bd9581c08",
        "unsafeBlockSigner": "0xAAC979CBeE00C75C35DE9a2635d8B75940F466dc",
        "version": "1.3.0",
        "VERSION": 0
      },
      "fieldMeta": {
        "gasLimit": {
          "severity": "LOW",
          "description": "Gas limit for blocks on L2."
        }
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0xae641c7d7a83bba7fa913b9544f946dc23ca0527c2f4abb9c6a3496f49375218"
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x1eD35B793d887e028493dAC4a11AA5Feb811dd67"
        },
        {
          "permission": "upgrade",
          "target": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1"
        },
        {
          "permission": "upgrade",
          "target": "0x92986cd63C3409b7dA2882624B6d6E7Cf660707a"
        },
        {
          "permission": "upgrade",
          "target": "0xc9C24f1aaD2614E81f033746292F5Dc5d7Ccad94"
        },
        {
          "permission": "upgrade",
          "target": "0xCDC78c5eaea2dE33B00a9200Ee1700937fb0f55D"
        }
      ],
      "sinceTimestamp": 1687931879,
      "values": {
        "$immutable": true,
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      }
    },
    {
      "name": "PauserRegistry2",
      "address": "0x4ca725D446EcE6e3fFd3E072A6f2A6a16Ca492D0",
      "sourceHashes": [
        "0x8fa8f20d7c33aea934963671e5ac4fc1d3b586d40deb93cc4768d4a6ef323662"
      ],
      "sinceTimestamp": 1687931903,
      "values": {
        "$immutable": true,
        "pauser": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "unpauser": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      },
      "derivedName": "PauserRegistry"
    },
    {
      "name": "MantleSecurityMultisig",
      "address": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "receivedPermissions": [
        {
          "permission": "configure",
          "target": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf",
          "description": "it can update the preconfer address, the batch submitter (Sequencer) address and the gas configuration of the system."
        },
        {
          "permission": "configure",
          "target": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
          "description": "set and change address mappings.",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        },
        {
          "permission": "upgrade",
          "target": "0x1eD35B793d887e028493dAC4a11AA5Feb811dd67",
          "via": [{ "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb" }]
        },
        {
          "permission": "upgrade",
          "target": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
          "via": [{ "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83" }]
        },
        {
          "permission": "upgrade",
          "target": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        },
        {
          "permission": "upgrade",
          "target": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
          "via": [{ "address": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd" }]
        },
        {
          "permission": "upgrade",
          "target": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        },
        {
          "permission": "upgrade",
          "target": "0x50Fa427235C7C8cAA4A0C21b5009f5a0d015B23A"
        },
        {
          "permission": "upgrade",
          "target": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1",
          "via": [{ "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb" }]
        },
        {
          "permission": "upgrade",
          "target": "0x92986cd63C3409b7dA2882624B6d6E7Cf660707a",
          "via": [{ "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb" }]
        },
        {
          "permission": "upgrade",
          "target": "0x95fC37A27a2f68e3A647CDc081F0A89bb47c3012",
          "description": "upgrading bridge implementation allows to access all funds and change every system component.",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        },
        {
          "permission": "upgrade",
          "target": "0xA937660031787C4408587D2c6A67Ec4B260630F5",
          "via": [{ "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83" }]
        },
        {
          "permission": "upgrade",
          "target": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01",
          "via": [{ "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83" }]
        },
        {
          "permission": "upgrade",
          "target": "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb",
          "via": [{ "address": "0xca35F8338054739D138884685e08b39EE2217794" }]
        },
        {
          "permission": "upgrade",
          "target": "0xc9C24f1aaD2614E81f033746292F5Dc5d7Ccad94",
          "via": [{ "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb" }]
        },
        {
          "permission": "upgrade",
          "target": "0xCAD08A7B9eF6ADeFAef08d0d85a577a288F93Ee1",
          "via": [{ "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83" }]
        },
        {
          "permission": "upgrade",
          "target": "0xCDC78c5eaea2dE33B00a9200Ee1700937fb0f55D",
          "via": [{ "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb" }]
        },
        {
          "permission": "upgrade",
          "target": "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798",
          "via": [{ "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83" }]
        }
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "act",
          "target": "0x0cac2B1a172ac24012621101634DD5ABD6399ADd"
        },
        {
          "permission": "act",
          "target": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83"
        },
        {
          "permission": "act",
          "target": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb"
        },
        {
          "permission": "act",
          "target": "0xca35F8338054739D138884685e08b39EE2217794"
        }
      ],
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1683509999,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0xf73546Da2F971bD0Ed1b3c5F9C01092180Db5089",
          "0x61Af7a48B0EeA8481E5A055A35f829d0e8505fE3",
          "0x422f2df38B96395A7E61d4C02aDd4413bb79A9FC",
          "0x207E804758e28F2b3fD6E4219671B327100b82f8",
          "0xbE73dea9c8DcDdB6b03F7e5797b85982065fe34e",
          "0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317",
          "0x7735cDcc85E63A7684C29652DbE8B845e0b4635A",
          "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8",
          "0xf5b16239f88B54894e03e0293d3d7FDdEb9f9070",
          "0xe75D7324d6BC4E70A200c5E268160332F43b2d2B",
          "0x3000BE80ad204D327990eB403654aCd1Eaa8eCeb",
          "0xc4143711aA5bd6d37F1b0A690120AA5859e32A93",
          "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a"
        ],
        "$threshold": 6,
        "domainSeparator": "0xc2040462c2819b7e5f0c5e3926088f96c882d435e0b03cef5b72ef73cdfaf7d4",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "6 of 13 (46%)",
        "nonce": 47,
        "VERSION": "1.3.0"
      },
      "derivedName": "GnosisSafe"
    },
    {
      "name": "EigenDataLayerChain",
      "address": "0x50Fa427235C7C8cAA4A0C21b5009f5a0d015B23A",
      "sourceHashes": [
        "0x63677738b5ca073872cd350783b51e6dcd4bf6469f02eadf4cead9aef171c781",
        "0x5333d2d13f53d445ff99fbe5845e2658fbafd68944683fb56a2644d76e5a4f36"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": []
        }
      ],
      "ignoreInWatchMode": [
        "getL2ConfirmedBlockNumber",
        "getL2StoredBlockNumber",
        "l2ConfirmedBlockNumber",
        "l2StoredBlockNumber",
        "rollupBatchIndex"
      ],
      "sinceTimestamp": 1688282303,
      "values": {
        "$admin": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "$implementation": "0xDF401d4229Fc6cA52238f7e55A04FA8EBc24C55a",
        "$pastUpgrades": [
          [
            "2023-07-02T07:18:23.000Z",
            "0x2b2bda7f01a3baec5d0e7b369e36172365d35b9eb9137c074d3260308c838ce8",
            ["0xDF401d4229Fc6cA52238f7e55A04FA8EBc24C55a"]
          ]
        ],
        "$upgradeCount": 1,
        "BLOCK_STALE_MEASURE": 500,
        "dataManageAddress": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1",
        "FRAUD_STRING": "0x2d2d5468697320697320612062616420737472696e672e204e6f626f64792073617973207468697320737472696e672e2d2d",
        "fraudProofPeriod": 3600,
        "getL2ConfirmedBlockNumber": 61171945,
        "getL2StoredBlockNumber": 61171945,
        "l2ConfirmedBlockNumber": 61171945,
        "l2StoredBlockNumber": 61171945,
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "reRollupIndex": 0,
        "reSubmitterAddress": "0x630E93130809c4acE55249229Ee6B043b929A9Ad",
        "rollupBatchIndex": 21045,
        "sequencer": "0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749"
      },
      "derivedName": "BVM_EigenDataLayrChain"
    },
    {
      "name": "DataLayrServiceManager",
      "address": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1",
      "sourceHashes": [
        "0x3f8d1d2461c05779ca5de685fd391f6a4c07e91953373effd46d11f72b025dc3",
        "0xf52658c0dbe857c858ac93c9c3dad449fff36d7e6454b67ac61a5bf3dcecca30"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "This contract is the main entry point for data availability. It is responsible for storing transaction data headers and confirming the data store by verifying operators signatures.",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
              "delay": 0
            }
          ]
        }
      ],
      "ignoreInWatchMode": ["dataStoresForDuration"],
      "sinceTimestamp": 1687931975,
      "values": {
        "$admin": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
        "$implementation": "0xAB42127980a3bff124E6465e097a5fC97228827e",
        "$pastUpgrades": [
          [
            "2023-06-28T05:59:35.000Z",
            "0x09367d337ef0395ea117d413b4a06a2dca0e5e7e1f4e40270716e26dfe750a35",
            ["0x4b64d1Fd7cf1230468AEdF3a401cFe74cA9B366f"]
          ],
          [
            "2023-06-28T06:04:23.000Z",
            "0x8c0b0f089bb73496f62f5676329337f1c6df8c9678fced830fb8ae25573c04e0",
            ["0xAB42127980a3bff124E6465e097a5fC97228827e"]
          ]
        ],
        "$upgradeCount": 2,
        "adversaryThresholdBasisPoints": 4000,
        "BIP_MULTIPLIER": 10000,
        "BLOCK_STALE_MEASURE": 150,
        "collateralToken": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "confirmDataStoreTimeout": 1800,
        "dataLayrBombVerifier": "0x0000000000000000000000000000000000000000",
        "dataLayrChallenge": "0xc9C24f1aaD2614E81f033746292F5Dc5d7Ccad94",
        "dataPermissionManager": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01",
        "dataStoresForDuration": {
          "one_duration": 40771,
          "two_duration": 0,
          "three_duration": 0,
          "four_duration": 0,
          "five_duration": 0,
          "six_duration": 0,
          "seven_duration": 0,
          "dataStoreId": 40772,
          "latestTime": 1728480035
        },
        "DURATION_SCALE": 3600,
        "eigenLayrDelegation": "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798",
        "feePerBytePerTime": 1,
        "feeSetter": "0x207E804758e28F2b3fD6E4219671B327100b82f8",
        "investmentManager": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
        "log2NumPowersOfTau": 0,
        "MAX_DATASTORE_DURATION": 7,
        "MIN_DATASTORE_DURATION": 1,
        "NUM_DS_PER_BLOCK_PER_DURATION": 20,
        "numPowersOfTau": 0,
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": 0,
        "pauserRegistry": "0x4ca725D446EcE6e3fFd3E072A6f2A6a16Ca492D0",
        "quorumThresholdBasisPoints": 9000,
        "registry": "0x1eD35B793d887e028493dAC4a11AA5Feb811dd67"
      },
      "derivedName": "DataLayrServiceManager"
    },
    {
      "name": "L1CrossDomainMessenger",
      "address": "0x676A795fe6E43C17c668de16730c3F690FEB7120",
      "template": "opstack/L1CrossDomainMessenger",
      "sourceHashes": [
        "0x6e4b297b822bdda2bb8bbf4dde360ee51379af5a0de55c0d726a2d7b68791bf7",
        "0x430d270834512dafe98bf268d6912f12a10c5a6287e7463830a22e4616dd63a0"
      ],
      "proxyType": "resolved delegate proxy",
      "description": "Sends messages from host chain to this chain, and relays messages back onto host chain. In the event that a message sent from host chain to this chain is rejected for exceeding this chain's epoch gas limit, it can be resubmitted via this contract's replay function.",
      "categories": ["Core"],
      "ignoreInWatchMode": ["messageNonce"],
      "sinceTimestamp": 1687953527,
      "values": {
        "$immutable": false,
        "$implementation": "0xb8DE82551fA4BA3bE4B3d9097763EDBeED541308",
        "$pastUpgrades": [
          [
            "2023-06-28T13:13:59.000Z",
            "0x3ef2116cdd9366a646b6625affcf0cbe96bb3c59c3ffc629432d3f79ff1f886c",
            ["0x4692363048d0F32a2dE7816860D48fff0c61B24B"]
          ],
          [
            "2024-03-15T01:47:47.000Z",
            "0x667a55493b70812eedb69586be570fa87bb305ff046ebd1419cdc71163f770ac",
            ["0x0000000000000000000000000000000000000000"]
          ],
          [
            "2024-03-15T08:19:35.000Z",
            "0xa5fff128e999954c7dfe8e3360d0844e439425124922e85cd32fdcf2e3582247",
            ["0xb8DE82551fA4BA3bE4B3d9097763EDBeED541308"]
          ]
        ],
        "$upgradeCount": 3,
        "HASH_MESSAGE_BASE_GAS": 800,
        "HASH_MESSAGE_GAS_PER_BYTE": 2,
        "L1_MNT_ADDRESS": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "MESSAGE_VERSION": 1,
        "messageNonce": "1766847064778384329583297500742918515827483896875618958121606201292636007",
        "MIN_GAS_CALLDATA_OVERHEAD": 16,
        "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR": 63,
        "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR": 64,
        "OTHER_MESSENGER": "0x4200000000000000000000000000000000000007",
        "PORTAL": "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb",
        "RELAY_CALL_OVERHEAD": 40000,
        "RELAY_CONSTANT_OVERHEAD": 200000,
        "RELAY_GAS_CHECK_BUFFER": 55000,
        "RELAY_RESERVED_GAS": 90000,
        "ResolvedDelegateProxy_addressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "ResolvedDelegateProxy_implementationName": "BVM_L1CrossDomainMessenger",
        "version": "1.5.0"
      }
    },
    {
      "name": "Lib_AddressManager",
      "address": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
      "template": "opstack/AddressManager",
      "sourceHashes": [
        "0x763c5728a19538783edf38c17731f9cf79ff6f38bfa4bce61333cef0aac5452e"
      ],
      "displayName": "AddressManager",
      "description": "Legacy contract used to manage a mapping of string names to addresses. Modern OP stack uses a different standard proxy system instead, but this contract is still necessary for backwards compatibility with several older contracts.",
      "issuedPermissions": [
        {
          "permission": "configure",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0xca35F8338054739D138884685e08b39EE2217794",
              "delay": 0,
              "description": "set and change address mappings."
            }
          ]
        }
      ],
      "sinceTimestamp": 1687951883,
      "values": {
        "$immutable": true,
        "owner": "0xca35F8338054739D138884685e08b39EE2217794"
      }
    },
    {
      "name": "GnosisSafe",
      "address": "0x7735cDcc85E63A7684C29652DbE8B845e0b4635A",
      "template": "GnosisSafe",
      "sourceHashes": [
        "0x81a7349eebb98ac33b0bc6842e3cb258034a8f2a4ba004570bb8e2e25947f9ff",
        "0xd42bbf9f7dcd3720a7fc6bdc6edfdfae8800a37d6dd4decfa0ef6ca4a2e88940"
      ],
      "proxyType": "gnosis safe",
      "ignoreInWatchMode": ["nonce"],
      "sinceTimestamp": 1684377983,
      "values": {
        "$immutable": false,
        "$implementation": "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552",
        "$members": [
          "0x5881541E79f5D9d5d72c87E8Ea6F681CAb289B12",
          "0x2288226d687c01B7332c2A99A0C5A4a112c63f1e"
        ],
        "$threshold": 2,
        "domainSeparator": "0xc1d265aa3661784e967614a86ab34bbccd5c4a901612dfe9cde9f949b055b09f",
        "getChainId": 1,
        "GnosisSafe_modules": [],
        "multisigThreshold": "2 of 2 (100%)",
        "nonce": 2,
        "VERSION": "1.3.0"
      }
    },
    {
      "name": "PubkeyCompendium",
      "address": "0x92986cd63C3409b7dA2882624B6d6E7Cf660707a",
      "sourceHashes": [
        "0x3f8d1d2461c05779ca5de685fd391f6a4c07e91953373effd46d11f72b025dc3",
        "0x8ae883de7991fc1ec2291f58deabd148cec4b61384f2eafa6c703304b9a2c757"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
              "delay": 0
            }
          ]
        }
      ],
      "sinceTimestamp": 1687931999,
      "values": {
        "$admin": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
        "$implementation": "0x18Dd3cBE484f955217165FEaC6fe928D04a56a72",
        "$pastUpgrades": [
          [
            "2023-06-28T05:59:59.000Z",
            "0x09d04d4b63ad6b712ebdfb04212905e21e2c64b5ba19cf01bfcc07d66dd652fb",
            ["0x4b64d1Fd7cf1230468AEdF3a401cFe74cA9B366f"]
          ],
          [
            "2023-06-28T06:04:47.000Z",
            "0x50bd8f78f61dc27f5c2359db587111c67e23cc9de4703a0c8e1657b351461e53",
            ["0x18Dd3cBE484f955217165FEaC6fe928D04a56a72"]
          ]
        ],
        "$upgradeCount": 2,
        "IS_TEST": false,
        "permissionManager": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01"
      },
      "derivedName": "BLSPublicKeyCompendium"
    },
    {
      "name": "L1StandardBridge",
      "address": "0x95fC37A27a2f68e3A647CDc081F0A89bb47c3012",
      "template": "opstack/L1StandardBridge",
      "sourceHashes": [
        "0x18e98a64fbfe011a7514d7a547900c02a3e0f9a49ab3413d517fd7e0e3c539dd",
        "0x1cd5cb2fa146b2a5dfb07279a52cd93855b268115912df60292b18394cc532e8"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main entry point to deposit ERC20 tokens from host chain to this chain. This contract can store any token.",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0xca35F8338054739D138884685e08b39EE2217794",
              "delay": 0,
              "description": "upgrading bridge implementation allows to access all funds and change every system component."
            }
          ]
        }
      ],
      "sinceTimestamp": 1687954103,
      "values": {
        "$admin": "0xca35F8338054739D138884685e08b39EE2217794",
        "$implementation": "0xb4133552BA49dFb60DA6eb5cA0102d0f94ce071f",
        "$pastUpgrades": [],
        "$upgradeCount": 0,
        "L1_MNT_ADDRESS": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "l2TokenBridge": "0x4200000000000000000000000000000000000010",
        "messenger": "0x676A795fe6E43C17c668de16730c3F690FEB7120",
        "MESSENGER": "0x676A795fe6E43C17c668de16730c3F690FEB7120",
        "OTHER_BRIDGE": "0x4200000000000000000000000000000000000010",
        "version": "1.1.0"
      }
    },
    {
      "name": "MantleSecondStrat",
      "address": "0xA937660031787C4408587D2c6A67Ec4B260630F5",
      "sourceHashes": [
        "0x3f8d1d2461c05779ca5de685fd391f6a4c07e91953373effd46d11f72b025dc3",
        "0x20018f70ed5942c8b643f26e7f19c6d30f27dead8e6eb6f1127d87a2f2a04589"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Basic do-nothing investment strategy.",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
              "delay": 0
            }
          ]
        }
      ],
      "sinceTimestamp": 1687931291,
      "values": {
        "$admin": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
        "$implementation": "0x9FEcF38689349a5CFf97526610CdB27618edc6b9",
        "$pastUpgrades": [
          [
            "2023-06-28T05:48:11.000Z",
            "0xfbe66fac37b117b0700dd1c6711a91362ebf626904438f6f6c336b28db471d76",
            ["0x9FEcF38689349a5CFf97526610CdB27618edc6b9"]
          ]
        ],
        "$upgradeCount": 1,
        "explanation": "Base InvestmentStrategy implementation to inherit from for more complex implementations",
        "investmentManager": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
        "minDeposit": "10000000000000000000",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": 0,
        "pauserRegistry": "0x075a48633dc6845f92339741E9c96b88f1b2A86f",
        "totalShares": 0,
        "underlyingToken": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354"
      },
      "derivedName": "InvestmentStrategyBase"
    },
    {
      "name": "RegistryPermission",
      "address": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01",
      "sourceHashes": [
        "0x3f8d1d2461c05779ca5de685fd391f6a4c07e91953373effd46d11f72b025dc3",
        "0xc65400995a550bff2a6272beee2e54f8cf8f9369406fe8531bd5d39add1635b7"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
              "delay": 0
            }
          ]
        }
      ],
      "sinceTimestamp": 1687930979,
      "values": {
        "$admin": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
        "$implementation": "0xAb00B934DE01c1b4931047125C2ba5B3d6186b85",
        "$pastUpgrades": [
          [
            "2023-06-28T05:42:59.000Z",
            "0x2cd887c0e49e302ecc909ae1ef5987405940228e4cae643f191801919e08a235",
            ["0xa288E750401E6d15A62e3400C87d3ee331650a0C"]
          ],
          [
            "2023-06-28T05:46:35.000Z",
            "0x199dbe55b2c0f54e8fa60a1eebcac985184a17b405e277c1abde3e8bd9524436",
            ["0xAb00B934DE01c1b4931047125C2ba5B3d6186b85"]
          ]
        ],
        "$upgradeCount": 2,
        "dataStorePermission": [
          "0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749",
          "0x50Fa427235C7C8cAA4A0C21b5009f5a0d015B23A"
        ],
        "deregisterOperatorPermission": [],
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
        "permissionPerson": "0x207E804758e28F2b3fD6E4219671B327100b82f8",
        "registerOperatorPermission": [
          "0x1888e4aC2Ab37A73B33448B87bABdD1ce1dcBAbe",
          "0x717c3DC6Df69c316d6Ac593077BC84Cc86f214A4",
          "0x8BEF0466b7C2CbFD753eF340e062dF06E93ADA7f",
          "0xc1dEd495E1dDf089B2b41d6397C0aBa04BDA1A21",
          "0x6cc5A6F5a9E4757790e4068Aa9757226Cb854B64",
          "0x550b3CB2D5fB5E4F0A08322CaC7b04291558CDa8",
          "0x8A3D6c77E5BAcE8cb0822B28E4Fc56FC06fB5645",
          "0xB61298691FE0df10634A67dd83b2253E74cbF7fb",
          "0xcEb157a9bB9c80a845d5924e8CEAA591Caf705a5",
          "0x0B6F2C77C3740A5e6f88A4eCdd02C10BE8a2e323"
        ]
      },
      "derivedName": "RegistryPermission"
    },
    {
      "name": "OptimismPortal",
      "address": "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb",
      "template": "opstack/OptimismPortal",
      "sourceHashes": [
        "0x2cdcfef705094aaac53d507bad64d27b48ea5a9c11a7fadffacc192aab7a823f",
        "0x3a064711ad01291b3644b5f657fd8317cd07f19222c9f216e25557d4d69ea295"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "The main entry point to deposit funds from host chain to this chain. It also allows to prove and finalize withdrawals.",
      "issuedPermissions": [
        {
          "permission": "guard",
          "target": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
          "via": []
        },
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0xca35F8338054739D138884685e08b39EE2217794",
              "delay": 0
            }
          ]
        }
      ],
      "ignoreInWatchMode": ["params"],
      "sinceTimestamp": 1710439967,
      "values": {
        "$admin": "0xca35F8338054739D138884685e08b39EE2217794",
        "$implementation": "0xe1399f54ba2597b4EaDA9E3450c34D393fb131A7",
        "$pastUpgrades": [
          [
            "2024-03-15T08:19:35.000Z",
            "0xa5fff128e999954c7dfe8e3360d0844e439425124922e85cd32fdcf2e3582247",
            ["0xe1399f54ba2597b4EaDA9E3450c34D393fb131A7"]
          ]
        ],
        "$upgradeCount": 1,
        "GUARDIAN": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "L1_MNT_ADDRESS": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354",
        "L2_ORACLE": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481",
        "l2Sender": "0x000000000000000000000000000000000000dEaD",
        "params": {
          "prevBaseFee": 1000000000,
          "prevBoughtGas": 591926,
          "prevBlockNum": 20927691
        },
        "paused": false,
        "SYSTEM_CONFIG": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf",
        "version": "1.7.0"
      }
    },
    {
      "name": "DataLayrChallenge",
      "address": "0xc9C24f1aaD2614E81f033746292F5Dc5d7Ccad94",
      "sourceHashes": [
        "0x3f8d1d2461c05779ca5de685fd391f6a4c07e91953373effd46d11f72b025dc3",
        "0xe8b1ba037124dea50d3eec5112ed3b8507e29739b723810a9f6f00976b9e2d08"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
              "delay": 0
            }
          ]
        }
      ],
      "sinceTimestamp": 1687932023,
      "values": {
        "$admin": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
        "$implementation": "0x6EE53D3d6e622Ac0296369445AFB3CBBDc57C066",
        "$pastUpgrades": [
          [
            "2023-06-28T06:00:23.000Z",
            "0xb95bdea06d55863c8b2e41ca71ab8dbe459408d0017f2bbdfaef7e1bf30fbad1",
            ["0x4b64d1Fd7cf1230468AEdF3a401cFe74cA9B366f"]
          ],
          [
            "2023-06-28T06:05:11.000Z",
            "0x957f5ec20d401a1a74111cb01b0f840afea478a31759b127b37ab8b7faaebb2d",
            ["0x6EE53D3d6e622Ac0296369445AFB3CBBDc57C066"]
          ]
        ],
        "$upgradeCount": 2,
        "challengeUtils": "0xCDC78c5eaea2dE33B00a9200Ee1700937fb0f55D",
        "dataLayrServiceManager": "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1",
        "dlRegistry": "0x1eD35B793d887e028493dAC4a11AA5Feb811dd67",
        "pairingGasLimit": 500000
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xca35F8338054739D138884685e08b39EE2217794",
      "template": "global/ProxyAdmin",
      "sourceHashes": [
        "0x96d2f0fa1bd83ebd61ba6a2351c64c7fda7aa580b11ea67bb6bf4338e5c28512"
      ],
      "directlyReceivedPermissions": [
        {
          "permission": "configure",
          "target": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
          "description": "set and change address mappings."
        },
        {
          "permission": "upgrade",
          "target": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481"
        },
        {
          "permission": "upgrade",
          "target": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf"
        },
        {
          "permission": "upgrade",
          "target": "0x95fC37A27a2f68e3A647CDc081F0A89bb47c3012",
          "description": "upgrading bridge implementation allows to access all funds and change every system component."
        },
        {
          "permission": "upgrade",
          "target": "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb"
        }
      ],
      "sinceTimestamp": 1710439895,
      "values": {
        "$immutable": true,
        "addressManager": "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42",
        "isUpgrading": false,
        "owner": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f"
      }
    },
    {
      "name": "MantleFirstStrat",
      "address": "0xCAD08A7B9eF6ADeFAef08d0d85a577a288F93Ee1",
      "sourceHashes": [
        "0x3f8d1d2461c05779ca5de685fd391f6a4c07e91953373effd46d11f72b025dc3",
        "0x20018f70ed5942c8b643f26e7f19c6d30f27dead8e6eb6f1127d87a2f2a04589"
      ],
      "proxyType": "EIP1967 proxy",
      "description": "Basic do-nothing investment strategy.",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
              "delay": 0
            }
          ]
        }
      ],
      "sinceTimestamp": 1687931243,
      "values": {
        "$admin": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
        "$implementation": "0x9FEcF38689349a5CFf97526610CdB27618edc6b9",
        "$pastUpgrades": [
          [
            "2023-06-28T05:47:23.000Z",
            "0x4a9c5808169c5a6fabfae05048c44c24dfb04d48815357a215a5af3809123f4f",
            ["0x9FEcF38689349a5CFf97526610CdB27618edc6b9"]
          ]
        ],
        "$upgradeCount": 1,
        "explanation": "Base InvestmentStrategy implementation to inherit from for more complex implementations",
        "investmentManager": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
        "minDeposit": "10000000000000000000",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": 0,
        "pauserRegistry": "0x075a48633dc6845f92339741E9c96b88f1b2A86f",
        "totalShares": "1000000000000000000000000",
        "underlyingToken": "0x3c3a81e81dc49A522A592e7622A7E711c06bf354"
      },
      "derivedName": "InvestmentStrategyBase"
    },
    {
      "name": "DataLayrChallengeUtils",
      "address": "0xCDC78c5eaea2dE33B00a9200Ee1700937fb0f55D",
      "sourceHashes": [
        "0x3f8d1d2461c05779ca5de685fd391f6a4c07e91953373effd46d11f72b025dc3",
        "0x9dc36b80e92cea40c02d3b9d2684d85d4141dcab44cf882b91cf3148476432ee"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
              "delay": 0
            }
          ]
        }
      ],
      "sinceTimestamp": 1687931951,
      "values": {
        "$admin": "0x47D58744D8515d9aaEAf961bc03625118bd91EBb",
        "$implementation": "0xd8d731624d97a66e012E62208cFc921d7033c564",
        "$pastUpgrades": [
          [
            "2023-06-28T05:59:11.000Z",
            "0xfa65c0cef1bde23cdca16d9863bf43a83579f73cb40199ed18bda7e4853033df",
            ["0x4b64d1Fd7cf1230468AEdF3a401cFe74cA9B366f"]
          ],
          [
            "2023-06-28T06:03:47.000Z",
            "0xdde13172352499d10a1ff109d22d19980be5b84634ac36b003b0fb25eaf54508",
            ["0xd8d731624d97a66e012E62208cFc921d7033c564"]
          ]
        ],
        "$upgradeCount": 2,
        "getZeroPolyMerkleRoot": [
          "0xe82cea94884b1b895ea0742840a3b19249a723810fd1b04d8564d675b0a416f1",
          "0x4843774a80fc8385b31024f5bd18b42e62de439206ab9468d42d826796d41f67",
          "0x4843774a80fc8385b31024f5bd18b42e62de439206ab9468d42d826796d41f67",
          "0x092d3e5f87f5293e7ab0cc2ca6b0b5e4adb5e0011656544915f7cea34e69e5ab"
        ]
      },
      "derivedName": "DataLayrChallengeUtils"
    },
    {
      "name": "Delegation",
      "address": "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798",
      "sourceHashes": [
        "0x3f8d1d2461c05779ca5de685fd391f6a4c07e91953373effd46d11f72b025dc3",
        "0xa961eebaaac6cb33d38501294b0f98165b96d04af2f99311bd99b282798990be"
      ],
      "proxyType": "EIP1967 proxy",
      "issuedPermissions": [
        {
          "permission": "upgrade",
          "target": "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f",
          "via": [
            {
              "address": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
              "delay": 0
            }
          ]
        }
      ],
      "sinceTimestamp": 1687930907,
      "values": {
        "$admin": "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83",
        "$implementation": "0xAdA69A18B30B3B9235AB2748116bB9195e16aDba",
        "$pastUpgrades": [
          [
            "2023-06-28T05:41:47.000Z",
            "0xccf37452298ddc5f50e741118a64f4ee4b8ff9d1ea7c60bda84bf22a3c11a719",
            ["0xa288E750401E6d15A62e3400C87d3ee331650a0C"]
          ],
          [
            "2023-06-28T05:45:11.000Z",
            "0x609574ecb43797c58ee51ad0c87bdf5dc9f1b6a21f72406c1679f579bb865e5d",
            ["0xAdA69A18B30B3B9235AB2748116bB9195e16aDba"]
          ]
        ],
        "$upgradeCount": 2,
        "DELEGATION_TYPEHASH": "0xb2a21c2f78b6ef501475a2971550fe4cedb86f0dec990e23909bfb01fd61c54c",
        "DOMAIN_SEPARATOR": "0xbc7bcb096dfed433b8cff98aee0d5bcc22202e4870ee9b36c93c2fb0303b87e6",
        "DOMAIN_TYPEHASH": "0x8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
        "investmentManager": "0x23754725a49c0f003C349A6C7869fF8609a7CEfd",
        "owner": "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9",
        "paused": 0,
        "pauserRegistry": "0x075a48633dc6845f92339741E9c96b88f1b2A86f",
        "permissionManager": "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01"
      },
      "derivedName": "EigenLayrDelegation"
    }
  ],
  "eoas": [
    { "address": "0x0000000000000000000000000000000000000000" },
    { "address": "0x000000000000000000000000000000000000dEaD" },
    { "address": "0x00da2F87c56C3a19BD863613995705095F55b524" },
    { "address": "0x0B6F2C77C3740A5e6f88A4eCdd02C10BE8a2e323" },
    { "address": "0x1888e4aC2Ab37A73B33448B87bABdD1ce1dcBAbe" },
    { "address": "0x207E804758e28F2b3fD6E4219671B327100b82f8" },
    { "address": "0x2288226d687c01B7332c2A99A0C5A4a112c63f1e" },
    {
      "address": "0x2f40D796917ffB642bD2e2bdD2C762A5e40fd749",
      "receivedPermissions": [
        {
          "permission": "sequence",
          "target": "0x427Ea0710FA5252057F0D88274f7aeb308386cAf"
        }
      ]
    },
    { "address": "0x3000BE80ad204D327990eB403654aCd1Eaa8eCeb" },
    { "address": "0x3Dc5FcB0Ad5835C6059112e51A75b57DBA668eB8" },
    { "address": "0x422f2df38B96395A7E61d4C02aDd4413bb79A9FC" },
    { "address": "0x550b3CB2D5fB5E4F0A08322CaC7b04291558CDa8" },
    { "address": "0x5881541E79f5D9d5d72c87E8Ea6F681CAb289B12" },
    { "address": "0x5a021DC06A9630bb56099b8aEdfaDC2dEa7eB317" },
    { "address": "0x61Af7a48B0EeA8481E5A055A35f829d0e8505fE3" },
    { "address": "0x630E93130809c4acE55249229Ee6B043b929A9Ad" },
    {
      "address": "0x6667961f5e9C98A76a48767522150889703Ed77D",
      "receivedPermissions": [
        {
          "permission": "propose",
          "target": "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481"
        }
      ]
    },
    { "address": "0x6cc5A6F5a9E4757790e4068Aa9757226Cb854B64" },
    { "address": "0x717c3DC6Df69c316d6Ac593077BC84Cc86f214A4" },
    { "address": "0x8A3D6c77E5BAcE8cb0822B28E4Fc56FC06fB5645" },
    { "address": "0x8BEF0466b7C2CbFD753eF340e062dF06E93ADA7f" },
    { "address": "0x915dc866e2e5E64f912A5ac1D40E3be4597F172a" },
    { "address": "0xAAC979CBeE00C75C35DE9a2635d8B75940F466dc" },
    { "address": "0xB61298691FE0df10634A67dd83b2253E74cbF7fb" },
    { "address": "0xbE73dea9c8DcDdB6b03F7e5797b85982065fe34e" },
    { "address": "0xc1dEd495E1dDf089B2b41d6397C0aBa04BDA1A21" },
    { "address": "0xC37642355c18ec9c3b3268AAC67e33516aa115eb" },
    { "address": "0xc4143711aA5bd6d37F1b0A690120AA5859e32A93" },
    { "address": "0xcEb157a9bB9c80a845d5924e8CEAA591Caf705a5" },
    { "address": "0xe75D7324d6BC4E70A200c5E268160332F43b2d2B" },
    { "address": "0xf5b16239f88B54894e03e0293d3d7FDdEb9f9070" },
    { "address": "0xf73546Da2F971bD0Ed1b3c5F9C01092180Db5089" }
  ],
  "abis": {
    "0x075a48633dc6845f92339741E9c96b88f1b2A86f": [
      "constructor(address _pauser, address _unpauser)",
      "event PauserChanged(address previousPauser, address newPauser)",
      "event UnpauserChanged(address previousUnpauser, address newUnpauser)",
      "function pauser() view returns (address)",
      "function setPauser(address newPauser)",
      "function setUnpauser(address newUnpauser)",
      "function unpauser() view returns (address)"
    ],
    "0x0cac2B1a172ac24012621101634DD5ABD6399ADd": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x18Dd3cBE484f955217165FEaC6fe928D04a56a72": [
      "constructor(address _permissionManager)",
      "event NewPubkeyRegistration(address operator, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2)",
      "event log(string)",
      "event log_address(address)",
      "event log_bytes(bytes)",
      "event log_bytes32(bytes32)",
      "event log_int(int256)",
      "event log_named_address(string key, address val)",
      "event log_named_bytes(string key, bytes val)",
      "event log_named_bytes32(string key, bytes32 val)",
      "event log_named_decimal_int(string key, int256 val, uint256 decimals)",
      "event log_named_decimal_uint(string key, uint256 val, uint256 decimals)",
      "event log_named_int(string key, int256 val)",
      "event log_named_string(string key, string val)",
      "event log_named_uint(string key, uint256 val)",
      "event log_string(string)",
      "event log_uint(uint256)",
      "event logs(bytes)",
      "function IS_TEST() view returns (bool)",
      "function failed() returns (bool)",
      "function operatorToPubkeyHash(address) view returns (bytes32)",
      "function permissionManager() view returns (address)",
      "function pubkeyHashToOperator(bytes32) view returns (address)",
      "function registerBLSPublicKey(uint256 s, tuple(uint256 X, uint256 Y) rPoint, tuple(uint256 X, uint256 Y) pubkeyG1, tuple(uint256[2] X, uint256[2] Y) pubkeyG2)"
    ],
    "0x1eD35B793d887e028493dAC4a11AA5Feb811dd67": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x23754725a49c0f003C349A6C7869fF8609a7CEfd": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x2Cd33d3DC4d6Ea24B6941e4741F4Bf4772929e83": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x2F44BD2a54aC3fB20cd7783cF94334069641daC9": [
      "constructor(address _singleton)"
    ],
    "0x31d543e7BE1dA6eFDc2206Ef7822879045B9f481": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x3c3a81e81dc49A522A592e7622A7E711c06bf354": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)"
    ],
    "0x427Ea0710FA5252057F0D88274f7aeb308386cAf": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0x47D58744D8515d9aaEAf961bc03625118bd91EBb": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x4ca725D446EcE6e3fFd3E072A6f2A6a16Ca492D0": [
      "constructor(address _pauser, address _unpauser)",
      "event PauserChanged(address previousPauser, address newPauser)",
      "event UnpauserChanged(address previousUnpauser, address newUnpauser)",
      "function pauser() view returns (address)",
      "function setPauser(address newPauser)",
      "function setUnpauser(address newUnpauser)",
      "function unpauser() view returns (address)"
    ],
    "0x4e59e778a0fb77fBb305637435C62FaeD9aED40f": [
      "constructor(address _singleton)"
    ],
    "0x50Fa427235C7C8cAA4A0C21b5009f5a0d015B23A": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x5BD63a7ECc13b955C4F57e3F12A64c10263C14c1": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x64F4244eEA17a361bb919A28F614C3ad1aC565ad": [
      "constructor(address _investmentManager, address _serviceManager, uint8 _NUMBER_OF_QUORUMS, address _pubkeyCompendium, address _permissionManager, address _forceDeregister)",
      "event Deregistration(address operator, address swapped, tuple(uint256 X, uint256 Y) pk, bytes32 apkHash)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Registration(address indexed operator, bytes32 pkHash, tuple(uint256 X, uint256 Y) pk, uint32 apkHashIndex, bytes32 apkHash, string socket)",
      "event SocketUpdate(address operator, string socket)",
      "event StakeUpdate(address operator, uint96 firstQuorumStake, uint96 secondQuorumStake, uint32 updateBlockNumber, uint32 prevUpdateBlockNumber)",
      "event StrategyAddedToQuorum(uint256 indexed quorumNumber, address strategy)",
      "event StrategyRemovedFromQuorum(uint256 indexed quorumNumber, address strategy)",
      "function NUMBER_OF_QUORUMS() view returns (uint256)",
      "function addStrategiesConsideredAndMultipliers(uint256 quorumNumber, tuple(address strategy, uint96 multiplier)[] _newStrategiesConsideredAndMultipliers)",
      "function apk() view returns (uint256 X, uint256 Y)",
      "function apkHashes(uint256 index) view returns (bytes32)",
      "function apkUpdateBlockNumbers(uint256 index) view returns (uint32)",
      "function apkUpdates(uint256 index) view returns (tuple(bytes32 apkHash, uint32 blockNumber))",
      "function checkOperatorActiveAtBlockNumber(address operator, uint256 blockNumber, uint256 stakeHistoryIndex) view returns (bool)",
      "function checkOperatorInactiveAtBlockNumber(address operator, uint256 blockNumber, uint256 stakeHistoryIndex) view returns (bool)",
      "function delegation() view returns (address)",
      "function deregisterOperator(tuple(uint256 X, uint256 Y) pkToRemove, uint32 index) returns (bool)",
      "function firstQuorumStakedByOperator(address operator) view returns (uint96)",
      "function forceDeregister() view returns (address)",
      "function forceDeregisterOperator(tuple(uint256 X, uint256 Y) pkToRemove, address operator, uint32 index) returns (bool)",
      "function getApkUpdatesLength() view returns (uint256)",
      "function getCorrectApkHash(uint256 index, uint32 blockNumber) view returns (bytes32)",
      "function getFromTaskNumberForOperator(address operator) view returns (uint32)",
      "function getLengthOfPubkeyHashIndexHistory(bytes32 pubkeyHash) view returns (uint256)",
      "function getLengthOfPubkeyHashStakeHistory(bytes32 pubkeyHash) view returns (uint256)",
      "function getLengthOfTotalOperatorsHistory() view returns (uint256)",
      "function getLengthOfTotalStakeHistory() view returns (uint256)",
      "function getMostRecentStakeByOperator(address operator) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 firstQuorumStake, uint96 secondQuorumStake))",
      "function getOperatorIndex(address operator, uint32 blockNumber, uint32 index) view returns (uint32)",
      "function getOperatorPubkeyHash(address operator) view returns (bytes32)",
      "function getStakeFromPubkeyHashAndIndex(bytes32 pubkeyHash, uint256 index) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 firstQuorumStake, uint96 secondQuorumStake))",
      "function getStakeHistoryLength(bytes32 pubkeyHash) view returns (uint256)",
      "function getTotalOperators(uint32 blockNumber, uint32 index) view returns (uint32)",
      "function getTotalStakeFromIndex(uint256 index) view returns (tuple(uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 firstQuorumStake, uint96 secondQuorumStake))",
      "function initialize(uint256[] _quorumBips, address initialOwner, tuple(address strategy, uint96 multiplier)[] _firstQuorumStrategiesConsideredAndMultipliers, tuple(address strategy, uint96 multiplier)[] _secondQuorumStrategiesConsideredAndMultipliers)",
      "function investmentManager() view returns (address)",
      "function isActiveOperator(address operator) view returns (bool)",
      "function minimumStakeFirstQuorum() view returns (uint128)",
      "function minimumStakeSecondQuorum() view returns (uint128)",
      "function numOperators() view returns (uint32)",
      "function operatorList(uint256) view returns (address)",
      "function operatorStakes(address operator) view returns (uint96, uint96)",
      "function owner() view returns (address)",
      "function permissionManager() view returns (address)",
      "function pubkeyCompendium() view returns (address)",
      "function pubkeyHashToIndexHistory(bytes32, uint256) view returns (uint32 toBlockNumber, uint32 index)",
      "function pubkeyHashToStakeHistory(bytes32, uint256) view returns (uint32 updateBlockNumber, uint32 nextUpdateBlockNumber, uint96 firstQuorumStake, uint96 secondQuorumStake)",
      "function quorumBips(uint256) view returns (uint256)",
      "function registerOperator(uint8 operatorType, tuple(uint256 X, uint256 Y) pk, string socket)",
      "function registry(address) view returns (bytes32 pubkeyHash, uint32 fromTaskNumber, uint8 status)",
      "function removeStrategiesConsideredAndMultipliers(uint256 quorumNumber, address[] _strategiesToRemove, uint256[] indicesToRemove)",
      "function renounceOwnership()",
      "function secondQuorumStakedByOperator(address operator) view returns (uint96)",
      "function serviceManager() view returns (address)",
      "function setForceDeregister(address _forceDeregister)",
      "function setMinimumStakeFirstQuorum(uint128 _minimumStakeFirstQuorum)",
      "function setMinimumStakeSecondQuorum(uint128 _minimumStakeSecondQuorum)",
      "function strategiesConsideredAndMultipliers(uint256, uint256) view returns (address strategy, uint96 multiplier)",
      "function strategiesConsideredAndMultipliersLength(uint256 quorumNumber) view returns (uint256)",
      "function totalOperatorsHistory(uint256) view returns (uint32 toBlockNumber, uint32 index)",
      "function totalStake() view returns (uint96, uint96)",
      "function transferOwnership(address newOwner)",
      "function updateSocket(string newSocket)",
      "function updateStakes(address[] operators, uint256[] prevElements)",
      "function weightOfOperator(address operator, uint256 quorumNumber) returns (uint96)"
    ],
    "0x676A795fe6E43C17c668de16730c3F690FEB7120": [
      "constructor(address _libAddressManager, string _implementationName)"
    ],
    "0x6968f3F16C3e64003F02E121cf0D5CCBf5625a42": [
      "event AddressSet(string indexed _name, address _newAddress, address _oldAddress)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function getAddress(string _name) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function transferOwnership(address newOwner)"
    ],
    "0x6Dbb7D9C5dC60844B8CF442ddC6Be081c060B2E3": [
      "constructor(address _owner, uint256 _overhead, uint256 _scalar, bytes32 _batcherHash, uint64 _gasLimit, uint256 _baseFee, address _unsafeBlockSigner, tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config)",
      "event ConfigUpdate(uint256 indexed version, uint8 indexed updateType, bytes data)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function UNSAFE_BLOCK_SIGNER_SLOT() view returns (bytes32)",
      "function VERSION() view returns (uint256)",
      "function baseFee() view returns (uint256)",
      "function batcherHash() view returns (bytes32)",
      "function gasLimit() view returns (uint64)",
      "function initialize(address _owner, uint256 _overhead, uint256 _scalar, bytes32 _batcherHash, uint64 _gasLimit, uint256 _baseFee, address _unsafeBlockSigner, tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config)",
      "function minimumGasLimit() view returns (uint64)",
      "function overhead() view returns (uint256)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function resourceConfig() view returns (tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee))",
      "function scalar() view returns (uint256)",
      "function setBaseFee(uint256 _baseFee)",
      "function setBatcherHash(bytes32 _batcherHash)",
      "function setGasConfig(uint256 _overhead, uint256 _scalar)",
      "function setGasLimit(uint64 _gasLimit)",
      "function setResourceConfig(tuple(uint32 maxResourceLimit, uint8 elasticityMultiplier, uint8 baseFeeMaxChangeDenominator, uint32 minimumBaseFee, uint32 systemTxMaxGas, uint128 maximumBaseFee) _config)",
      "function setUnsafeBlockSigner(address _unsafeBlockSigner)",
      "function transferOwnership(address newOwner)",
      "function unsafeBlockSigner() view returns (address)",
      "function version() view returns (string)"
    ],
    "0x6EE53D3d6e622Ac0296369445AFB3CBBDc57C066": [
      "constructor(address _dataLayrServiceManager, address _dlRegistry, address _challengeUtils)",
      "event Initialized(uint8 version)",
      "event SuccessfulLowDegreeChallenge(bytes32 indexed headerHash, address challenger)",
      "function challengeLowDegreenessProof(bytes header, tuple(uint256[2] X, uint256[2] Y) potElement, bytes potMerkleProof, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) dataStoreSearchData, tuple(bytes32[] nonSignerPubkeyHashes, uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum) signatoryRecord)",
      "function challengeUtils() view returns (address)",
      "function dataLayrServiceManager() view returns (address)",
      "function dlRegistry() view returns (address)",
      "function freezeOperatorsForLowDegreeChallenge(tuple(address signerAddress, uint32 operatorHistoryIndex)[] nonSignerExclusionProofs, uint256 nonSignerIndex, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) searchData, tuple(bytes32[] nonSignerPubkeyHashes, uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum) signatoryRecord)",
      "function lowDegreeChallenges(bytes32) view returns (address challenger, uint8 status)",
      "function pairingGasLimit() view returns (uint256)",
      "function verifyLowDegreenessProof(bytes header, tuple(uint256[2] X, uint256[2] Y) potElement, bytes potMerkleProof, tuple(uint256 X, uint256 Y) lowDegreenessProof) view returns (bool)",
      "function verifyZeroPaddingProof(bytes header, tuple(uint256 X, uint256 Y) paddingProof, tuple(uint256 X, uint256 Y) paddingQuotientPolyCommit) returns (bool)"
    ],
    "0x7735cDcc85E63A7684C29652DbE8B845e0b4635A": [
      "constructor(address _singleton)"
    ],
    "0x7C4813A9AF2FEA4ca765a26b05d128926E94e72E": [
      "constructor(address _delegation, address _permissionManager)",
      "event DelegatorWithdrawal(address indexed withdrawer, address[] strategies, address[] tokens, uint256[] shares)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function DEPOSIT_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function delegation() view returns (address)",
      "function delegatorWithdraw(uint256[] strategyIndexes, address[] strategies, address[] tokens, uint256[] shares, bool undelegateIfPossible) returns (bool)",
      "function delegatorWithdrawWhiteList(address) view returns (bool)",
      "function depositIntoStrategy(address strategy, address token, uint256 amount) returns (uint256 shares)",
      "function depositIntoStrategyOnBehalfOf(address strategy, address token, uint256 amount, address staker, uint256 expiry, bytes32 r, bytes32 vs) returns (uint256 shares)",
      "function getDeposits(address depositor) view returns (address[], uint256[])",
      "function initialize(address _pauserRegistry, address initialOwner)",
      "function investorStratShares(address, address) view returns (uint256)",
      "function investorStrats(address, uint256) view returns (address)",
      "function investorStratsLength(address staker) view returns (uint256)",
      "function nonces(address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function permissionManager() view returns (address)",
      "function renounceOwnership()",
      "function setDelegatorCanWithdraw(address withdrawer)",
      "function setInvestmentStrategy(address _strategy)",
      "function strategyStorage(address) view returns (bool)",
      "function transferOwnership(address newOwner)",
      "function undelegate()",
      "function unpause(uint256 newPausedStatus)"
    ],
    "0x92986cd63C3409b7dA2882624B6d6E7Cf660707a": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x95fC37A27a2f68e3A647CDc081F0A89bb47c3012": [
      "constructor(address _owner)",
      "function getImplementation() returns (address)",
      "function getOwner() returns (address)",
      "function setCode(bytes _code)",
      "function setOwner(address _owner)",
      "function setStorage(bytes32 _key, bytes32 _value)"
    ],
    "0x9FEcF38689349a5CFf97526610CdB27618edc6b9": [
      "constructor(address _investmentManager)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function deposit(address token, uint256 amount) returns (uint256 newShares)",
      "function explanation() pure returns (string)",
      "function initialize(address _underlyingToken, address _pauserRegistry, address initialOwner)",
      "function investmentManager() view returns (address)",
      "function minDeposit() view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function renounceOwnership()",
      "function setMinDepositAmount(uint256 minDepositAmount)",
      "function shares(address user) view returns (uint256)",
      "function sharesToUnderlying(uint256 amountShares) view returns (uint256)",
      "function sharesToUnderlyingView(uint256 amountShares) view returns (uint256)",
      "function totalShares() view returns (uint256)",
      "function transferOwnership(address newOwner)",
      "function underlyingToShares(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToSharesView(uint256 amountUnderlying) view returns (uint256)",
      "function underlyingToken() view returns (address)",
      "function unpause(uint256 newPausedStatus)",
      "function userUnderlying(address user) returns (uint256)",
      "function userUnderlyingView(address user) view returns (uint256)",
      "function withdraw(address depositor, address token, uint256 amountShares)"
    ],
    "0xA937660031787C4408587D2c6A67Ec4B260630F5": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xAb00B934DE01c1b4931047125C2ba5B3d6186b85": [
      "constructor()",
      "event AddDataStoreRollupPermission(address pusher, bool status)",
      "event AddDelegatorPermission(address delegator, bool status)",
      "event AddOperatorDeregisterPermission(address operator, bool status)",
      "event AddOperatorRegisterPermission(address operator, bool status)",
      "event ChangeDataStoreRollupPermission(address pusher, bool status)",
      "event ChangeDelegatorPermission(address delegator, bool status)",
      "event ChangeOperatorDeregisterPermission(address operator, bool status)",
      "event ChangeOperatorRegisterPermission(address operator, bool status)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addDataStoreRollupPermission(address pusher)",
      "function addDelegatorPermission(address delegator)",
      "function addOperatorDeregisterPermission(address operator)",
      "function addOperatorRegisterPermission(address operator)",
      "function changeDataStoreRollupPermission(address pusher, bool status)",
      "function changeDelegatorPermission(address delegator, bool status)",
      "function changeOperatorDeregisterPermission(address operator, bool status)",
      "function changeOperatorRegisterPermission(address operator, bool status)",
      "function dataStoreRollupPermission(address) view returns (bool)",
      "function delegatorPermission(address) view returns (bool)",
      "function getDataStoreRollupPermission(address pusher) view returns (bool)",
      "function getDelegatorPermission(address delegator) view returns (bool)",
      "function getOperatorDeregisterPermission(address operator) view returns (bool)",
      "function getOperatorRegisterPermission(address operator) view returns (bool)",
      "function initialize(address personAddress, address initialOwner)",
      "function operatorDeregisterPermission(address) view returns (bool)",
      "function operatorRegisterPermission(address) view returns (bool)",
      "function owner() view returns (address)",
      "function permissionPerson() view returns (address)",
      "function renounceOwnership()",
      "function setPermissionPerson(address personAddress)",
      "function transferOwnership(address newOwner)"
    ],
    "0xAB42127980a3bff124E6465e097a5fC97228827e": [
      "constructor(address _registry, address _investmentManager, address _eigenLayrDelegation, address _collateralToken, address _dataLayrChallenge, address _dataLayrBombVerifier, address _dataPermissionManager)",
      "event AdversaryThresholdBasisPointsUpdated(uint16 adversaryThresholdBasisPoints)",
      "event BombVerifierSet(address previousAddress, address newAddress)",
      "event ConfirmDataStore(uint32 dataStoreId, bytes32 headerHash)",
      "event FeePerBytePerTimeSet(uint256 previousValue, uint256 newValue)",
      "event FeeSetterChanged(address previousAddress, address newAddress)",
      "event InitDataStore(address feePayer, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) searchData, bytes header)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event PaymentManagerSet(address previousAddress, address newAddress)",
      "event QuorumThresholdBasisPointsUpdated(uint16 quorumTHresholdBasisPoints)",
      "event SignatoryRecord(bytes32 msgHash, uint32 taskNumber, uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum, bytes32[] pubkeyHashes)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function BIP_MULTIPLIER() view returns (uint256)",
      "function BLOCK_STALE_MEASURE() view returns (uint32)",
      "function DURATION_SCALE() view returns (uint256)",
      "function MAX_DATASTORE_DURATION() view returns (uint8)",
      "function MIN_DATASTORE_DURATION() view returns (uint8)",
      "function NUM_DS_PER_BLOCK_PER_DURATION() view returns (uint256)",
      "function adversaryThresholdBasisPoints() view returns (uint16)",
      "function calculateFee(uint256 totalBytes, uint256 _feePerBytePerTime, uint32 storePeriodLength) pure returns (uint256)",
      "function checkSignatures(bytes data) returns (uint32 taskNumberToConfirm, uint32 referenceBlockNumber, bytes32 msgHash, tuple(uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum, uint256 totalStakeFirstQuorum, uint256 totalStakeSecondQuorum) signedTotals, bytes32 compressedSignatoryRecord)",
      "function collateralToken() view returns (address)",
      "function confirmDataStore(bytes data, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) searchData)",
      "function confirmDataStoreTimeout() view returns (uint32)",
      "function dataLayrBombVerifier() view returns (address)",
      "function dataLayrChallenge() view returns (address)",
      "function dataPermissionManager() view returns (address)",
      "function dataStoreHashesForDurationAtTimestamp(uint8, uint256, uint256) view returns (bytes32)",
      "function dataStoreIdToSignatureHash(uint32) view returns (bytes32)",
      "function dataStoresForDuration() view returns (uint32 one_duration, uint32 two_duration, uint32 three_duration, uint32 four_duration, uint32 five_duration, uint32 six_duration, uint32 seven_duration, uint32 dataStoreId, uint32 latestTime)",
      "function eigenLayrDelegation() view returns (address)",
      "function feePerBytePerTime() view returns (uint256)",
      "function feeSetter() view returns (address)",
      "function freezeOperator(address operator)",
      "function getDataStoreHashesForDurationAtTimestamp(uint8 duration, uint256 timestamp, uint32 index) view returns (bytes32)",
      "function getNumDataStoresForDuration(uint8 duration) view returns (uint32)",
      "function initDataStore(address feePayer, address confirmer, uint8 duration, uint32 referenceBlockNumber, uint32 totalOperatorsIndex, bytes header) returns (uint32 index)",
      "function initialize(address _pauserRegistry, address initialOwner, uint16 _quorumThresholdBasisPoints, uint16 _adversaryThresholdBasisPoints, uint256 _feePerBytePerTime, address _feeSetter)",
      "function investmentManager() view returns (address)",
      "function latestTime() view returns (uint32)",
      "function log2NumPowersOfTau() view returns (uint48)",
      "function numPowersOfTau() view returns (uint48)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function quorumThresholdBasisPoints() view returns (uint16)",
      "function registry() view returns (address)",
      "function renounceOwnership()",
      "function setAdversaryThresholdBasisPoints(uint16 _adversaryThresholdBasisPoints)",
      "function setFeePerBytePerTime(uint256 _feePerBytePerTime)",
      "function setFeeSetter(address _feeSetter)",
      "function setQuorumThresholdBasisPoints(uint16 _quorumThresholdBasisPoints)",
      "function taskNumber() view returns (uint32)",
      "function transferOwnership(address newOwner)",
      "function unpause(uint256 newPausedStatus)",
      "function verifyDataStoreMetadata(uint8 duration, uint256 timestamp, uint32 index, tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata) view returns (bool)",
      "function zeroPolynomialCommitmentMerkleRoots(uint256) view returns (bytes32)"
    ],
    "0xAdA69A18B30B3B9235AB2748116bB9195e16aDba": [
      "constructor(address _investmentManager, address _permissionManager)",
      "event Initialized(uint8 version)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address indexed account, uint256 newPausedStatus)",
      "event Unpaused(address indexed account, uint256 newPausedStatus)",
      "function DELEGATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function DOMAIN_TYPEHASH() view returns (bytes32)",
      "function decreaseDelegatedShares(address staker, address[] strategies, uint256[] shares)",
      "function delegateTo(address operator)",
      "function delegateToBySignature(address staker, address operator, uint256 expiry, bytes32 r, bytes32 vs)",
      "function delegatedTo(address) view returns (address)",
      "function getOperatorRewardAddress(address operator) view returns (address)",
      "function increaseDelegatedShares(address staker, address strategy, uint256 shares)",
      "function initialize(address _pauserRegistry, address initialOwner)",
      "function investmentManager() view returns (address)",
      "function isDelegated(address staker) view returns (bool)",
      "function isNotDelegated(address staker) view returns (bool)",
      "function isOperator(address operator) view returns (bool)",
      "function nonces(address) view returns (uint256)",
      "function operatorReceiverRewardAddress(address) view returns (address)",
      "function operatorShares(address, address) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause(uint256 newPausedStatus)",
      "function paused(uint8 index) view returns (bool)",
      "function paused() view returns (uint256)",
      "function pauserRegistry() view returns (address)",
      "function permissionManager() view returns (address)",
      "function registerAsOperator(address rewardReceiveAddress)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function undelegate(address staker)",
      "function unpause(uint256 newPausedStatus)"
    ],
    "0xb4133552BA49dFb60DA6eb5cA0102d0f94ce071f": [
      "constructor(address _messenger, address _l1mnt)",
      "event ERC20BridgeFinalized(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20BridgeInitiated(address indexed localToken, address indexed remoteToken, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20DepositInitiated(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ERC20WithdrawalFinalized(address indexed l1Token, address indexed l2Token, address indexed from, address to, uint256 amount, bytes extraData)",
      "event ETHBridgeFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHBridgeInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHDepositInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event ETHWithdrawalFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event MNTBridgeFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event MNTBridgeInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event MNTDepositInitiated(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "event MNTWithdrawalFinalized(address indexed from, address indexed to, uint256 amount, bytes extraData)",
      "function L1_MNT_ADDRESS() view returns (address)",
      "function MESSENGER() view returns (address)",
      "function OTHER_BRIDGE() view returns (address)",
      "function bridgeERC20(address _localToken, address _remoteToken, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeERC20To(address _localToken, address _remoteToken, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function bridgeETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeMNT(uint256 _amount, uint32 _minGasLimit, bytes _extraData) payable",
      "function bridgeMNTTo(address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData) payable",
      "function depositERC20(address _l1Token, address _l2Token, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositERC20To(address _l1Token, address _l2Token, address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositETH(uint32 _minGasLimit, bytes _extraData) payable",
      "function depositETHTo(address _to, uint32 _minGasLimit, bytes _extraData) payable",
      "function depositMNT(uint256 _amount, uint32 _minGasLimit, bytes _extraData)",
      "function depositMNTTo(address _to, uint256 _amount, uint32 _minGasLimit, bytes _extraData) payable",
      "function deposits(address, address) view returns (uint256)",
      "function finalizeBridgeERC20(address _localToken, address _remoteToken, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeBridgeETH(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function finalizeBridgeMNT(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function finalizeERC20Withdrawal(address _l1Token, address _l2Token, address _from, address _to, uint256 _amount, bytes _extraData)",
      "function finalizeETHWithdrawal(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function finalizeMantleWithdrawal(address _from, address _to, uint256 _amount, bytes _extraData) payable",
      "function l2TokenBridge() view returns (address)",
      "function messenger() view returns (address)",
      "function version() view returns (string)"
    ],
    "0xb8DE82551fA4BA3bE4B3d9097763EDBeED541308": [
      "constructor(address _portal, address l1mnt)",
      "event FailedRelayedMessage(bytes32 indexed msgHash)",
      "event Initialized(uint8 version)",
      "event RelayedMessage(bytes32 indexed msgHash)",
      "event SentMessage(address indexed target, address sender, bytes message, uint256 messageNonce, uint256 gasLimit)",
      "event SentMessageExtension1(address indexed sender, uint256 mntValue, uint256 ethValue)",
      "function HASH_MESSAGE_BASE_GAS() view returns (uint64)",
      "function HASH_MESSAGE_GAS_PER_BYTE() view returns (uint64)",
      "function L1_MNT_ADDRESS() view returns (address)",
      "function MESSAGE_VERSION() view returns (uint16)",
      "function MIN_GAS_CALLDATA_OVERHEAD() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR() view returns (uint64)",
      "function MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR() view returns (uint64)",
      "function OTHER_MESSENGER() view returns (address)",
      "function PORTAL() view returns (address)",
      "function RELAY_CALL_OVERHEAD() view returns (uint64)",
      "function RELAY_CONSTANT_OVERHEAD() view returns (uint64)",
      "function RELAY_GAS_CHECK_BUFFER() view returns (uint64)",
      "function RELAY_RESERVED_GAS() view returns (uint64)",
      "function baseGas(bytes _message, uint32 _minGasLimit) pure returns (uint64)",
      "function failedMessages(bytes32) view returns (bool)",
      "function initialize()",
      "function messageNonce() view returns (uint256)",
      "function relayMessage(uint256 _nonce, address _sender, address _target, uint256 _mntValue, uint256 _ethValue, uint256 _minGasLimit, bytes _message) payable",
      "function sendMessage(address _target, bytes _message, uint32 _minGasLimit) payable",
      "function sendMessage(uint256 _mntAmount, address _target, bytes _message, uint32 _minGasLimit) payable",
      "function successfulMessages(bytes32) view returns (bool)",
      "function version() view returns (string)",
      "function xDomainMessageSender() view returns (address)"
    ],
    "0xBcF6d8273DAF842b6Fc288b08E48C438Fa911D01": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xc54cb22944F2bE476E02dECfCD7e3E7d3e15A8Fb": [
      "constructor(address _admin)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address)",
      "function changeAdmin(address _admin)",
      "function implementation() returns (address)",
      "function upgradeTo(address _implementation)",
      "function upgradeToAndCall(address _implementation, bytes _data) payable returns (bytes)"
    ],
    "0xc9C24f1aaD2614E81f033746292F5Dc5d7Ccad94": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xca35F8338054739D138884685e08b39EE2217794": [
      "constructor(address _owner)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function addressManager() view returns (address)",
      "function changeProxyAdmin(address _proxy, address _newAdmin)",
      "function getProxyAdmin(address _proxy) view returns (address)",
      "function getProxyImplementation(address _proxy) view returns (address)",
      "function implementationName(address) view returns (string)",
      "function isUpgrading() view returns (bool)",
      "function owner() view returns (address)",
      "function proxyType(address) view returns (uint8)",
      "function renounceOwnership()",
      "function setAddress(string _name, address _address)",
      "function setAddressManager(address _address)",
      "function setImplementationName(address _address, string _name)",
      "function setProxyType(address _address, uint8 _type)",
      "function setUpgrading(bool _upgrading)",
      "function transferOwnership(address newOwner)",
      "function upgrade(address _proxy, address _implementation)",
      "function upgradeAndCall(address _proxy, address _implementation, bytes _data) payable"
    ],
    "0xCAD08A7B9eF6ADeFAef08d0d85a577a288F93Ee1": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xCd368c1d80120b0Dd92447c87eB570154f8e685c": [
      "constructor()",
      "error MantleToken_ImproperlyInitialized()",
      "error MantleToken_MintAmountTooLarge(uint256 amount, uint256 maximumAmount)",
      "error MantleToken_MintCapNumeratorTooLarge(uint256 numerator, uint256 maximumNumerator)",
      "error MantleToken_NextMintTimestampNotElapsed(uint256 currentTimestamp, uint256 nextMintTimestamp)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event DelegateChanged(address indexed delegator, address indexed fromDelegate, address indexed toDelegate)",
      "event DelegateVotesChanged(address indexed delegate, uint256 previousBalance, uint256 newBalance)",
      "event Initialized(uint8 version)",
      "event MintCapNumeratorChanged(address indexed from, uint256 previousMintCapNumerator, uint256 newMintCapNumerator)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function MINT_CAP_DENOMINATOR() view returns (uint256)",
      "function MINT_CAP_MAX_NUMERATOR() view returns (uint256)",
      "function MIN_MINT_INTERVAL() view returns (uint256)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function burn(uint256 amount)",
      "function burnFrom(address account, uint256 amount)",
      "function checkpoints(address account, uint32 pos) view returns (tuple(uint32 fromBlock, uint224 votes))",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function delegate(address delegatee)",
      "function delegateBySig(address delegatee, uint256 nonce, uint256 expiry, uint8 v, bytes32 r, bytes32 s)",
      "function delegates(address account) view returns (address)",
      "function getPastTotalSupply(uint256 blockNumber) view returns (uint256)",
      "function getPastVotes(address account, uint256 blockNumber) view returns (uint256)",
      "function getVotes(address account) view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(uint256 _initialSupply, address _owner)",
      "function mint(address _recipient, uint256 _amount)",
      "function mintCapNumerator() view returns (uint256)",
      "function name() view returns (string)",
      "function nextMint() view returns (uint256)",
      "function nonces(address owner) view returns (uint256)",
      "function numCheckpoints(address account) view returns (uint32)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function renounceOwnership()",
      "function setMintCapNumerator(uint256 _mintCapNumerator)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 amount) returns (bool)",
      "function transferFrom(address from, address to, uint256 amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0xCDC78c5eaea2dE33B00a9200Ee1700937fb0f55D": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xD1230865641561653406906Fb08873F011c19080": [
      "constructor(uint256 _submissionInterval, uint256 _l2BlockTime, uint256 _startingBlockNumber, uint256 _startingTimestamp, address _proposer, address _challenger, uint256 _finalizationPeriodSeconds)",
      "event Initialized(uint8 version)",
      "event OutputProposed(bytes32 indexed outputRoot, uint256 indexed l2OutputIndex, uint256 indexed l2BlockNumber, uint256 l1Timestamp)",
      "event OutputsDeleted(uint256 indexed prevNextOutputIndex, uint256 indexed newNextOutputIndex)",
      "function CHALLENGER() view returns (address)",
      "function FINALIZATION_PERIOD_SECONDS() view returns (uint256)",
      "function L2_BLOCK_TIME() view returns (uint256)",
      "function PROPOSER() view returns (address)",
      "function SUBMISSION_INTERVAL() view returns (uint256)",
      "function computeL2Timestamp(uint256 _l2BlockNumber) view returns (uint256)",
      "function deleteL2Outputs(uint256 _l2OutputIndex)",
      "function getL2Output(uint256 _l2OutputIndex) view returns (tuple(bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputAfter(uint256 _l2BlockNumber) view returns (tuple(bytes32 outputRoot, uint128 timestamp, uint128 l2BlockNumber))",
      "function getL2OutputIndexAfter(uint256 _l2BlockNumber) view returns (uint256)",
      "function initialize(uint256 _startingBlockNumber, uint256 _startingTimestamp)",
      "function latestBlockNumber() view returns (uint256)",
      "function latestOutputIndex() view returns (uint256)",
      "function nextBlockNumber() view returns (uint256)",
      "function nextOutputIndex() view returns (uint256)",
      "function proposeL2Output(bytes32 _outputRoot, uint256 _l2BlockNumber, bytes32 _l1BlockHash, uint256 _l1BlockNumber)",
      "function startingBlockNumber() view returns (uint256)",
      "function startingTimestamp() view returns (uint256)",
      "function version() view returns (string)"
    ],
    "0xd8d731624d97a66e012E62208cFc921d7033c564": [
      "constructor()",
      "event Initialized(uint8 version)",
      "function batchNonInteractivePolynomialProofs(bytes header, uint32 firstChunkNumber, bytes[] polys, tuple(tuple(uint256 X, uint256 Y) interpolationPoly, tuple(uint256 X, uint256 Y) revealProof, tuple(uint256[2] X, uint256[2] Y) zeroPoly, bytes zeroPolyProof)[] multiRevealProofs, tuple(uint256[2] X, uint256[2] Y) polyEquivalenceProof) view returns (bool)",
      "function checkExclusionFromNonSignerSet(bytes32 operatorPubkeyHash, uint256 nonSignerIndex, tuple(bytes32[] nonSignerPubkeyHashes, uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum) signatoryRecord) pure",
      "function checkInclusionInNonSignerSet(bytes32 operatorPubkeyHash, uint256 nonSignerIndex, tuple(bytes32[] nonSignerPubkeyHashes, uint256 signedStakeFirstQuorum, uint256 signedStakeSecondQuorum) signatoryRecord) pure",
      "function constructZeroPolyEval(uint256 index, uint32 chunkLenE, uint32 numNodeE, uint256 alpha) returns (uint256)",
      "function getDataCommitmentAndMultirevealDegreeAndSymbolBreakdownFromHeader(bytes header) pure returns (tuple(tuple(uint256 X, uint256 Y) c, uint48 degree, uint32 numSys, uint32 numPar))",
      "function getLeadingCosetIndexFromHighestRootOfUnity(uint32 i, uint32 numSys, uint32 numPar) pure returns (uint32)",
      "function getNumSysFromHeader(bytes header) pure returns (uint32)",
      "function getZeroPolyMerkleRoot(uint256 degree) pure returns (bytes32)",
      "function linearPolynomialEvaluation(bytes poly, uint256 r) pure returns (uint256)",
      "function nextPowerOf2(uint256 n) pure returns (uint256)",
      "function nonInteractivePolynomialProof(bytes header, uint32 chunkNumber, bytes poly, tuple(tuple(uint256 X, uint256 Y) interpolationPoly, tuple(uint256 X, uint256 Y) revealProof, tuple(uint256[2] X, uint256[2] Y) zeroPoly, bytes zeroPolyProof) multiRevealProof, tuple(uint256[2] X, uint256[2] Y) polyEquivalenceProof) view returns (bool)",
      "function openPolynomialAtPoint(tuple(uint256 X, uint256 Y) c, tuple(uint256[2] X, uint256[2] Y) pi, uint256 r, uint256 s) view returns (bool)",
      "function reverseBits(uint32 value) pure returns (uint32)",
      "function reverseBitsLimited(uint32 length, uint32 value) pure returns (uint32)",
      "function validateDisclosureResponse(tuple(tuple(uint256 X, uint256 Y) c, uint48 degree, uint32 numSys, uint32 numPar) dskzgMetadata, uint32 chunkNumber, tuple(uint256 X, uint256 Y) interpolationPoly, tuple(uint256 X, uint256 Y) revealProof, tuple(uint256[2] X, uint256[2] Y) zeroPoly, bytes zeroPolyProof) view returns (bool)",
      "function verifyBatchPolyEquivalenceProof(bytes[] polys, tuple(uint256 X, uint256 Y)[] interpolationPolys, tuple(uint256[2] X, uint256[2] Y) polyEquivalenceProof) view returns (bool)",
      "function verifyPolyEquivalenceProof(bytes poly, tuple(uint256 X, uint256 Y) interpolationPoly, tuple(uint256[2] X, uint256[2] Y) polyEquivalenceProof) view returns (bool)"
    ],
    "0xd9Db270c1B5E3Bd161E8c8503c55cEABeE709552": [
      "constructor()",
      "event AddedOwner(address owner)",
      "event ApproveHash(bytes32 indexed approvedHash, address indexed owner)",
      "event ChangedFallbackHandler(address handler)",
      "event ChangedGuard(address guard)",
      "event ChangedThreshold(uint256 threshold)",
      "event DisabledModule(address module)",
      "event EnabledModule(address module)",
      "event ExecutionFailure(bytes32 txHash, uint256 payment)",
      "event ExecutionFromModuleFailure(address indexed module)",
      "event ExecutionFromModuleSuccess(address indexed module)",
      "event ExecutionSuccess(bytes32 txHash, uint256 payment)",
      "event RemovedOwner(address owner)",
      "event SafeReceived(address indexed sender, uint256 value)",
      "event SafeSetup(address indexed initiator, address[] owners, uint256 threshold, address initializer, address fallbackHandler)",
      "event SignMsg(bytes32 indexed msgHash)",
      "function VERSION() view returns (string)",
      "function addOwnerWithThreshold(address owner, uint256 _threshold)",
      "function approveHash(bytes32 hashToApprove)",
      "function approvedHashes(address, bytes32) view returns (uint256)",
      "function changeThreshold(uint256 _threshold)",
      "function checkNSignatures(bytes32 dataHash, bytes data, bytes signatures, uint256 requiredSignatures) view",
      "function checkSignatures(bytes32 dataHash, bytes data, bytes signatures) view",
      "function disableModule(address prevModule, address module)",
      "function domainSeparator() view returns (bytes32)",
      "function enableModule(address module)",
      "function encodeTransactionData(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes)",
      "function execTransaction(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, bytes signatures) payable returns (bool success)",
      "function execTransactionFromModule(address to, uint256 value, bytes data, uint8 operation) returns (bool success)",
      "function execTransactionFromModuleReturnData(address to, uint256 value, bytes data, uint8 operation) returns (bool success, bytes returnData)",
      "function getChainId() view returns (uint256)",
      "function getModulesPaginated(address start, uint256 pageSize) view returns (address[] array, address next)",
      "function getOwners() view returns (address[])",
      "function getStorageAt(uint256 offset, uint256 length) view returns (bytes)",
      "function getThreshold() view returns (uint256)",
      "function getTransactionHash(address to, uint256 value, bytes data, uint8 operation, uint256 safeTxGas, uint256 baseGas, uint256 gasPrice, address gasToken, address refundReceiver, uint256 _nonce) view returns (bytes32)",
      "function isModuleEnabled(address module) view returns (bool)",
      "function isOwner(address owner) view returns (bool)",
      "function nonce() view returns (uint256)",
      "function removeOwner(address prevOwner, address owner, uint256 _threshold)",
      "function requiredTxGas(address to, uint256 value, bytes data, uint8 operation) returns (uint256)",
      "function setFallbackHandler(address handler)",
      "function setGuard(address guard)",
      "function setup(address[] _owners, uint256 _threshold, address to, bytes data, address fallbackHandler, address paymentToken, uint256 payment, address paymentReceiver)",
      "function signedMessages(bytes32) view returns (uint256)",
      "function simulateAndRevert(address targetContract, bytes calldataPayload)",
      "function swapOwner(address prevOwner, address oldOwner, address newOwner)"
    ],
    "0xDF401d4229Fc6cA52238f7e55A04FA8EBc24C55a": [
      "constructor()",
      "event DataLayrManagerAddressUpdated(address oldDataLayrManagerAddress, address newDataLayrManagerAddress)",
      "event FraudProofPeriodUpdated(uint256 oldFraudProofPeriod, uint256 newFraudProofPeriod)",
      "event Initialized(uint8 version)",
      "event L2ConfirmedBlockNumberUpdated(uint256 oldL2ConfirmedBlockNumber, uint256 newL2ConfirmedBlockNumber)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event ReRollupBatchData(uint256 reRollupIndex, uint256 rollupBatchIndex, uint256 stratL2BlockNumber, uint256 endL2BlockNumber)",
      "event ReSubmitterAddressUpdated(address oldReSubmitterAddress, address newReSubmitterAddress)",
      "event RollupBatchIndexUpdated(uint256 oldRollupBatchIndex, uint256 newRollupBatchIndex)",
      "event RollupStoreConfirmed(uint256 rollupBatchIndex, uint32 dataStoreId, uint256 stratL2BlockNumber, uint256 endL2BlockNumber)",
      "event RollupStoreInitialized(uint32 dataStoreId, uint256 stratL2BlockNumber, uint256 endL2BlockNumber)",
      "event RollupStoreReverted(uint256 rollupBatchIndex, uint32 dataStoreId, uint256 stratL2BlockNumber, uint256 endL2BlockNumber)",
      "event SequencerAddressUpdated(address oldSequencerAddress, address newSequencerAddress)",
      "function BLOCK_STALE_MEASURE() view returns (uint256)",
      "function FRAUD_STRING() view returns (bytes)",
      "function confirmData(bytes data, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) searchData, uint256 startL2Block, uint256 endL2Block, uint32 originDataStoreId, uint256 reConfirmedBatchIndex, bool isReRollup)",
      "function dataManageAddress() view returns (address)",
      "function dataStoreIdToL2RollUpBlock(uint32) view returns (uint256 startL2BlockNumber, uint256 endBL2BlockNumber, bool isReRollup)",
      "function dataStoreIdToRollupStoreNumber(uint32) view returns (uint256)",
      "function fraudProofPeriod() view returns (uint256)",
      "function getL2ConfirmedBlockNumber() view returns (uint256)",
      "function getL2RollUpBlockByDataStoreId(uint32 _dataStoreId) view returns (tuple(uint256 startL2BlockNumber, uint256 endBL2BlockNumber, bool isReRollup))",
      "function getL2StoredBlockNumber() view returns (uint256)",
      "function getRollupStoreByRollupBatchIndex(uint256 _rollupBatchIndex) view returns (tuple(uint32 originDataStoreId, uint32 dataStoreId, uint32 confirmAt, uint8 status))",
      "function initialize(address _sequencer, address _dataManageAddress, address _reSubmitterAddress, uint256 _block_stale_measure, uint256 _fraudProofPeriod, uint256 _l2SubmittedBlockNumber)",
      "function l2ConfirmedBlockNumber() view returns (uint256)",
      "function l2StoredBlockNumber() view returns (uint256)",
      "function owner() view returns (address)",
      "function parse(bytes[] polys, uint256 startIndex, uint256 length) pure returns (bytes provenString)",
      "function proveFraud(uint256 fraudulentStoreNumber, uint256 startIndex, tuple(tuple(bytes32 headerHash, uint32 durationDataStoreId, uint32 globalDataStoreId, uint32 referenceBlockNumber, uint32 blockNumber, uint96 fee, address confirmer, bytes32 signatoryRecordHash) metadata, uint8 duration, uint256 timestamp, uint32 index) searchData, tuple(bytes header, uint32 firstChunkNumber, bytes[] polys, tuple(tuple(uint256 X, uint256 Y) interpolationPoly, tuple(uint256 X, uint256 Y) revealProof, tuple(uint256[2] X, uint256[2] Y) zeroPoly, bytes zeroPolyProof)[] multiRevealProofs, tuple(uint256[2] X, uint256[2] Y) polyEquivalenceProof) disclosureProofs)",
      "function reRollupBatchIndex(uint256) view returns (uint256)",
      "function reRollupIndex() view returns (uint256)",
      "function reSubmitterAddress() view returns (address)",
      "function removeFraudProofAddress(address _address)",
      "function renounceOwnership()",
      "function resetRollupBatchData(uint256 _rollupBatchIndex)",
      "function rollupBatchIndex() view returns (uint256)",
      "function rollupBatchIndexRollupStores(uint256) view returns (uint32 originDataStoreId, uint32 dataStoreId, uint32 confirmAt, uint8 status)",
      "function sequencer() view returns (address)",
      "function setFraudProofAddress(address _address)",
      "function storeData(bytes header, uint8 duration, uint32 blockNumber, uint256 startL2Block, uint256 endL2Block, uint32 totalOperatorsIndex, bool isReRollup)",
      "function submitReRollUpInfo(uint256 batchIndex)",
      "function transferOwnership(address newOwner)",
      "function unavailableFraudProofAddress(address _address)",
      "function updateDataLayrManagerAddress(address _dataManageAddress)",
      "function updateFraudProofPeriod(uint256 _fraudProofPeriod)",
      "function updateL2ConfirmedBlockNumber(uint256 _l2ConfirmedBlockNumber)",
      "function updateL2StoredBlockNumber(uint256 _l2StoredBlockNumber)",
      "function updateReSubmitterAddress(address _reSubmitterAddress)",
      "function updateRollupBatchIndex(uint256 _rollupBatchIndex)",
      "function updateSequencerAddress(address _sequencer)"
    ],
    "0xe1399f54ba2597b4EaDA9E3450c34D393fb131A7": [
      "constructor(address _l2Oracle, address _guardian, bool _paused, address _config, address _l1MNT)",
      "event Initialized(uint8 version)",
      "event Paused(address account)",
      "event TransactionDeposited(address indexed from, address indexed to, uint256 indexed version, bytes opaqueData)",
      "event Unpaused(address account)",
      "event WithdrawalFinalized(bytes32 indexed withdrawalHash, bool success)",
      "event WithdrawalProven(bytes32 indexed withdrawalHash, address indexed from, address indexed to)",
      "function GUARDIAN() view returns (address)",
      "function L1_MNT_ADDRESS() view returns (address)",
      "function L2_ORACLE() view returns (address)",
      "function SYSTEM_CONFIG() view returns (address)",
      "function depositTransaction(uint256 _ethTxValue, uint256 _mntValue, address _to, uint256 _mntTxValue, uint64 _gasLimit, bool _isCreation, bytes _data) payable",
      "function donateETH() payable",
      "function finalizeWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 mntValue, uint256 ethValue, uint256 gasLimit, bytes data) _tx)",
      "function finalizedWithdrawals(bytes32) view returns (bool)",
      "function initialize(bool _paused)",
      "function isOutputFinalized(uint256 _l2OutputIndex) view returns (bool)",
      "function l2Sender() view returns (address)",
      "function minimumGasLimit(uint64 _byteCount) pure returns (uint64)",
      "function params() view returns (uint128 prevBaseFee, uint64 prevBoughtGas, uint64 prevBlockNum)",
      "function pause()",
      "function paused() view returns (bool)",
      "function proveWithdrawalTransaction(tuple(uint256 nonce, address sender, address target, uint256 mntValue, uint256 ethValue, uint256 gasLimit, bytes data) _tx, uint256 _l2OutputIndex, tuple(bytes32 version, bytes32 stateRoot, bytes32 messagePasserStorageRoot, bytes32 latestBlockhash) _outputRootProof, bytes[] _withdrawalProof)",
      "function provenWithdrawals(bytes32) view returns (bytes32 outputRoot, uint128 timestamp, uint128 l2OutputIndex)",
      "function unpause()",
      "function version() view returns (string)"
    ],
    "0xeA4F1fE4928f1f83a450899C068bcd455BaF4798": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ]
  },
  "usedTemplates": {
    "global/ProxyAdmin": "0x171ea6062ecb94d6e7913ecd058660d724f0bcc40120cd2c11b836e5c0450091",
    "GnosisSafe": "0x18527e82c3800311291da7323caa876f588cde67692c1c84d5ecb5161da61359",
    "opstack/AddressManager": "0x10c898265c0f6d0de6612e994bd41456f435196949f9bc6069e03da9aa8bb9ba",
    "opstack/L1CrossDomainMessenger": "0xcf3e4600ef72e34e18a7c977b796d1f5a5d7878a503dd52cefad07854366a764",
    "opstack/L1StandardBridge": "0x7c91cbcf32ab13db3161a1e3d8e2eea263bba09e1793d4b374b7a0f4d2db953d",
    "opstack/L2OutputOracle": "0xfc8737561d85bab2fe5e39a7a02436a0cb0e7f96d7a7adc2ee3ea486b391c2fc",
    "opstack/OptimismPortal": "0x5fb419891d613086f39879ae360e765fdb6d154ef5ea5b2f5f98a4443a1b4839",
    "opstack/SystemConfig": "0x9b851394b558222bf283e4f132348dd3607cfbba09857db7aa5e3873aee7f6e3"
  }
}
