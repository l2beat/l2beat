{
  "env": {
    "es6": true,
    "mocha": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:@typescript-eslint/strict"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "plugins": ["simple-import-sort", "no-only-tests", "unused-imports", "react"],
  "rules": {
    "@typescript-eslint/prefer-readonly": ["error"],
    "@typescript-eslint/ban-tslint-comment": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-extra-semi": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/no-throw-literal": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "varsIgnorePattern": "^_", "argsIgnorePattern": "^_" }
    ],
    "import/no-cycle": "error",
    "import/no-default-export": "error",
    "import/no-extraneous-dependencies": [
      "error",
      { "devDependencies": false }
    ],
    "import/no-unresolved": ["error", { "ignore": ["^knex/types/tables$"] }],
    "import/no-internal-modules": [
      "error",
      {
        "forbid": ["@l2beat/*/**"]
      }
    ],
    "no-constant-condition": "off",
    "no-only-tests/no-only-tests": "error",
    "no-restricted-imports": [
      "error",
      {
        "paths": [".", "..", "../..", "../../.."],
        "patterns": [
          {
            "group": ["ethers/*"],
            "message": "Do not import from ethers submodules. For example instead of importing getAddress from ethers/lib/utils, import utils from ethers and use utils.getAddress"
          }
        ]
      }
    ],
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "unused-imports/no-unused-imports": "error",
    "eqeqeq": "error",
    "react/self-closing-comp": "error",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "MethodDefinition[kind='set']",
        "message": "Property setters are not allowed"
      }
    ]
  },
  "overrides": [
    {
      "files": ["**/test/**/*.ts", "*.test.ts"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/require-await": "off",
        "@typescript-eslint/unbound-method": "off",
        "import/no-extraneous-dependencies": "off",
        "no-unused-expressions": "off"
      }
    },
    {
      "files": ["src/**/*.stories.{ts,tsx}"],
      "rules": {
        "import/no-extraneous-dependencies": "off",
        "import/no-default-export": "off"
      }
    }
  ]
}
